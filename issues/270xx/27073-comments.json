[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26177](https://github.com/bitcoin/bitcoin/pull/26177) (refactor / kernel: Move non-gArgs chainparams functionality to kernel by TheCharlatan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-02-10T13:26:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27073#issuecomment-1425811391",
      "id" : 1425811391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27073",
      "node_id" : "IC_kwDOABII585U_Ce_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1425811391/reactions"
      },
      "updated_at" : "2023-02-10T14:41:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1425811391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1102860988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102860988"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would take this opportunity to mark the return value of `fs::path& GetDataDir()` as `LIFETIMEBOUND`\r\n```suggestion\r\n    auto& path{GetDataDir(net_specific)};\r\n```\r\nedit: although one could argue that given the small size of the return value, we might instead just not have `GetDataDir()` return by reference entirely.",
      "commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "created_at" : "2023-02-10T14:55:39Z",
      "diff_hunk" : "@@ -432,20 +432,21 @@ const fs::path& ArgsManager::GetDataDir(bool net_specific) const\n         path = GetDefaultDataDir();\n     }\n \n-    if (!fs::exists(path)) {\n-        fs::create_directories(path / \"wallets\");\n-    }\n-\n     if (net_specific && !BaseParams().DataDir().empty()) {\n         path /= fs::PathFromString(BaseParams().DataDir());\n-        if (!fs::exists(path)) {\n-            fs::create_directories(path / \"wallets\");\n-        }\n     }\n \n     return path;\n }\n \n+void ArgsManager::CreateDataDirIfNotExists(bool net_specific)\n+{\n+    fs::path path = GetDataDir(net_specific);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1102860988",
      "id" : 1102860988,
      "line" : 444,
      "node_id" : "PRRC_kwDOABII585BvFK8",
      "original_commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "original_line" : 444,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : 20,
      "pull_request_review_id" : 1293318666,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102860988/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-10T18:51:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102860988",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1102865686"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102865686"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Parameter naming is a bit confusing, they're both paths. `conf_file` is just guaranteed to be the absolute path, whereas `conf_path` may not be. `abs_conf_path` sounds more appropriate to me.\r\n\r\nBut instead, I would simplify this by just returning the absolute path and changing the signature to `fs::path GetConfigFilePath();`. I don't think we need the (current) `conf_path` for anything - (current) `conf_file` seems enough?",
      "commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "created_at" : "2023-02-10T14:59:22Z",
      "diff_hunk" : "@@ -965,6 +967,19 @@ bool ArgsManager::ReadConfigStream(std::istream& stream, const std::string& file\n     return true;\n }\n \n+void ArgsManager::GetConfigFilePath(fs::path& conf_path, fs::path& conf_file)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1102865686",
      "id" : 1102865686,
      "line" : 970,
      "node_id" : "PRRC_kwDOABII585BvGUW",
      "original_commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "original_line" : 970,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : 41,
      "pull_request_review_id" : 1293318666,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102865686/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-10T15:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102865686",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1102893580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102893580"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It seems like this function is only used to call `ArgsManager::CreateDataDirIfNotExists(false)`. Unless I misunderstand, I think it makes more sense to just make `ArgsManager::CreateDataDirIfNotExists` public? It's less code and a more clear intent, imo.\r\n\r\n<details>\r\n<summary>git diff (overlaps a bit with my other comment)</summary>\r\n\r\n```diff\r\ndiff --git a/src/bitcoind.cpp b/src/bitcoind.cpp\r\nindex 3d154961b..49a709628 100644\r\n--- a/src/bitcoind.cpp\r\n+++ b/src/bitcoind.cpp\r\n@@ -153,7 +153,7 @@ static bool AppInit(NodeContext& node, int argc, char* argv[])\r\n         if (!CheckDataDirOption()) {\r\n             return InitError(Untranslated(strprintf(\"Specified data directory \\\"%s\\\" does not exist.\\n\", args.GetArg(\"-datadir\", \"\"))));\r\n         }\r\n-        args.GetOrCreateConfigFilePath();\r\n+        args.CreateDataDirIfNotExists(false);\r\n         if (!args.ReadConfigFiles(error, true)) {\r\n             return InitError(Untranslated(strprintf(\"Error reading configuration file: %s\\n\", error)));\r\n         }\r\ndiff --git a/src/qt/bitcoin.cpp b/src/qt/bitcoin.cpp\r\nindex f69c4be2d..fa3d0ab92 100644\r\n--- a/src/qt/bitcoin.cpp\r\n+++ b/src/qt/bitcoin.cpp\r\n@@ -596,7 +596,7 @@ int GuiMain(int argc, char* argv[])\r\n     try {\r\n         /// 6b. Parse bitcoin.conf\r\n         /// - Do not call gArgs.GetDataDirNet() before this step finishes\r\n-        gArgs.GetOrCreateConfigFilePath();\r\n+        gArgs.CreateDataDirIfNotExists(false);\r\n         if (!gArgs.ReadConfigFiles(error, true)) {\r\n             InitError(strprintf(Untranslated(\"Error reading configuration file: %s\\n\"), error));\r\n             QMessageBox::critical(nullptr, PACKAGE_NAME,\r\ndiff --git a/src/util/system.cpp b/src/util/system.cpp\r\nindex 11991f1ab..335630599 100644\r\n--- a/src/util/system.cpp\r\n+++ b/src/util/system.cpp\r\n@@ -967,17 +967,9 @@ bool ArgsManager::ReadConfigStream(std::istream& stream, const std::string& file\r\n     return true;\r\n }\r\n \r\n-void ArgsManager::GetConfigFilePath(fs::path& conf_path, fs::path& conf_file)\r\n+fs::path ArgsManager::GetConfigFilePath()\r\n {\r\n-    conf_path = GetPathArg(\"-conf\", BITCOIN_CONF_FILENAME);\r\n-    conf_file = GetConfigFile(conf_path);\r\n-}\r\n-\r\n-void ArgsManager::GetOrCreateConfigFilePath()\r\n-{\r\n-    fs::path conf_path, conf_file;\r\n-    GetConfigFilePath(conf_path, conf_file);\r\n-    CreateDataDirIfNotExists(false);\r\n+    return GetConfigFile(GetPathArg(\"-conf\", BITCOIN_CONF_FILENAME));\r\n }\r\n \r\n bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\r\n@@ -988,9 +980,8 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\r\n         m_config_sections.clear();\r\n     }\r\n \r\n-    fs::path conf_path, conf_file;\r\n-    GetConfigFilePath(conf_path, conf_file);\r\n-    std::ifstream stream{conf_file};\r\n+    auto conf_path{GetConfigFilePath()};\r\n+    std::ifstream stream{conf_path};\r\n \r\n     // not ok to have a config file specified that cannot be opened\r\n     if (IsArgSet(\"-conf\") && !stream.good()) {\r\ndiff --git a/src/util/system.h b/src/util/system.h\r\nindex e3cb56d06..85b1f00d0 100644\r\n--- a/src/util/system.h\r\n+++ b/src/util/system.h\r\n@@ -242,8 +242,7 @@ protected:\r\n     void SelectConfigNetwork(const std::string& network);\r\n \r\n     [[nodiscard]] bool ParseParameters(int argc, const char* const argv[], std::string& error);\r\n-    void GetConfigFilePath(fs::path& conf_path, fs::path& conf_file);\r\n-    void GetOrCreateConfigFilePath();\r\n+    fs::path GetConfigFilePath();\r\n     [[nodiscard]] bool ReadConfigFiles(std::string& error, bool ignore_invalid_keys = false);\r\n \r\n     /**\r\n@@ -477,6 +476,13 @@ protected:\r\n      */\r\n     void LogArgs() const;\r\n \r\n+    /**\r\n+     * Create data directory if it doesn't exist\r\n+     *\r\n+     * @param net_specific Create a network-identified data directory\r\n+     */\r\n+    void CreateDataDirIfNotExists(bool net_specific);\r\n+\r\n private:\r\n     /**\r\n      * Get data directory path\r\n@@ -486,13 +492,6 @@ private:\r\n      */\r\n     const fs::path& GetDataDir(bool net_specific) const;\r\n \r\n-    /**\r\n-     * Create data directory if it doesn't exist\r\n-     *\r\n-     * @param net_specific Create a network-identified data directory\r\n-     */\r\n-    void CreateDataDirIfNotExists(bool net_specific);\r\n-\r\n     // Helper function for LogArgs().\r\n     void logArgsPrefix(\r\n         const std::string& prefix,\r\n```\r\n</details>",
      "commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "created_at" : "2023-02-10T15:23:05Z",
      "diff_hunk" : "@@ -965,6 +967,19 @@ bool ArgsManager::ReadConfigStream(std::istream& stream, const std::string& file\n     return true;\n }\n \n+void ArgsManager::GetConfigFilePath(fs::path& conf_path, fs::path& conf_file)\n+{\n+    conf_path = GetPathArg(\"-conf\", BITCOIN_CONF_FILENAME);\n+    conf_file = GetConfigFile(conf_path);\n+}\n+\n+void ArgsManager::GetOrCreateConfigFilePath()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1102893580",
      "id" : 1102893580,
      "line" : 976,
      "node_id" : "PRRC_kwDOABII585BvNIM",
      "original_commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "original_line" : 976,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : 47,
      "pull_request_review_id" : 1293318666,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102893580/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-10T15:24:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102893580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1102936320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102936320"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "suggestion, could call this `EnsureDataDir` or `EnsureDirExists`? Actually this is just for the wallet? maybe then `EnsureWalletDir` ?",
      "commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "created_at" : "2023-02-10T15:57:01Z",
      "diff_hunk" : "@@ -432,20 +432,21 @@ const fs::path& ArgsManager::GetDataDir(bool net_specific) const\n         path = GetDefaultDataDir();\n     }\n \n-    if (!fs::exists(path)) {\n-        fs::create_directories(path / \"wallets\");\n-    }\n-\n     if (net_specific && !BaseParams().DataDir().empty()) {\n         path /= fs::PathFromString(BaseParams().DataDir());\n-        if (!fs::exists(path)) {\n-            fs::create_directories(path / \"wallets\");\n-        }\n     }\n \n     return path;\n }\n \n+void ArgsManager::CreateDataDirIfNotExists(bool net_specific)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1102936320",
      "id" : 1102936320,
      "line" : 442,
      "node_id" : "PRRC_kwDOABII585BvXkA",
      "original_commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "original_line" : 442,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : 18,
      "pull_request_review_id" : 1293450868,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102936320/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-10T16:33:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102936320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1102941617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102941617"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd suggest renaming this function too, it returns `void` so it's not really a \"getter\"",
      "commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "created_at" : "2023-02-10T16:01:49Z",
      "diff_hunk" : "@@ -965,6 +967,19 @@ bool ArgsManager::ReadConfigStream(std::istream& stream, const std::string& file\n     return true;\n }\n \n+void ArgsManager::GetConfigFilePath(fs::path& conf_path, fs::path& conf_file)\n+{\n+    conf_path = GetPathArg(\"-conf\", BITCOIN_CONF_FILENAME);\n+    conf_file = GetConfigFile(conf_path);\n+}\n+\n+void ArgsManager::GetOrCreateConfigFilePath()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1102941617",
      "id" : 1102941617,
      "line" : 976,
      "node_id" : "PRRC_kwDOABII585BvY2x",
      "original_commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "original_line" : 976,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : 47,
      "pull_request_review_id" : 1293450868,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102941617/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-10T16:33:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102941617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1103027063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103027063"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Actually this is just for the wallet?\r\n\r\nIt's not just for the wallet, it's simply shorthand for creating both `datadir/` as well as `datadir/wallets/` - `fs::create_directories` [creates](https://en.cppreference.com/w/cpp/filesystem/create_directory) all the non-existing dirs in path.\r\n\r\nBut I agree: `EnsureDataDir` is probably a better name. Shorter and equally informative. I think `Data` needs to be in there - it's opinionated about which exact directory.",
      "commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "created_at" : "2023-02-10T17:20:30Z",
      "diff_hunk" : "@@ -432,20 +432,21 @@ const fs::path& ArgsManager::GetDataDir(bool net_specific) const\n         path = GetDefaultDataDir();\n     }\n \n-    if (!fs::exists(path)) {\n-        fs::create_directories(path / \"wallets\");\n-    }\n-\n     if (net_specific && !BaseParams().DataDir().empty()) {\n         path /= fs::PathFromString(BaseParams().DataDir());\n-        if (!fs::exists(path)) {\n-            fs::create_directories(path / \"wallets\");\n-        }\n     }\n \n     return path;\n }\n \n+void ArgsManager::CreateDataDirIfNotExists(bool net_specific)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27073#discussion_r1103027063",
      "id" : 1103027063,
      "in_reply_to_id" : 1102936320,
      "line" : 442,
      "node_id" : "PRRC_kwDOABII585Bvtt3",
      "original_commit_id" : "dd123d37bb201bf84e4b1c41910060b7d2d52729",
      "original_line" : 442,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : 18,
      "pull_request_review_id" : 1293645693,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27073",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103027063/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-10T17:22:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103027063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   }
]
