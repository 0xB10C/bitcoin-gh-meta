[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [mzumsande](https://github.com/bitcoin/bitcoin/pull/27071#pullrequestreview-1294785408) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26859](https://github.com/bitcoin/bitcoin/pull/26859) (fuzz: extend ConsumeNetAddr() to return I2P and CJDNS addresses by vasild)\n* [#26261](https://github.com/bitcoin/bitcoin/pull/26261) (p2p: cleanup `LookupIntern`, `Lookup` and `LookupHost` by brunoerg)\n* [#25619](https://github.com/bitcoin/bitcoin/pull/25619) (net: avoid overriding non-virtual ToString() in CService and use better naming by vasild)\n* [#25390](https://github.com/bitcoin/bitcoin/pull/25390) (sync: introduce a thread-safe generic container and use it to remove a bunch of \"GlobalMutex\"es by vasild)\n* [#24034](https://github.com/bitcoin/bitcoin/pull/24034) (p2p: delete anchors.dat after trying to connect to that peers by brunoerg)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-02-10T11:20:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27071#issuecomment-1425658309",
      "id" : 1425658309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27071",
      "node_id" : "IC_kwDOABII585U-dHF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1425658309/reactions"
      },
      "updated_at" : "2023-02-13T15:51:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1425658309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1103877367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103877367"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does this need a Mutex, considering it's being accessed from both Node and GUI?",
      "commit_id" : "9b656a5eb18f3a4c2f438bb3a4899db5441adb7f",
      "created_at" : "2023-02-12T21:18:01Z",
      "diff_hunk" : "@@ -40,6 +40,8 @@ bool fNameLookup = DEFAULT_NAME_LOOKUP;\n int g_socks5_recv_timeout = 20 * 1000;\n static std::atomic<bool> interruptSocks5Recv(false);\n \n+ReachableNets g_reachable_nets;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1103877367",
      "id" : 1103877367,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII585By9T3",
      "original_commit_id" : "573117f79aebe482dccd6c91366c79663a7d5f47",
      "original_line" : 43,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 4,
      "pull_request_review_id" : 1294785408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103877367/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-13T15:51:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103877367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1104641668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104641668"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Now that `MaybeFlipIPv6toCJDNS` is available in `netbase`, would it make sense (maybe in follow-ups) to also use it in the `Lookup()` functions, not just `LookupSubNet`) and reduce the number of occurrences we have to call `MaybeFlipIPv6toCJDNS` from outside it?",
      "commit_id" : "9b656a5eb18f3a4c2f438bb3a4899db5441adb7f",
      "created_at" : "2023-02-13T15:38:11Z",
      "diff_hunk" : "@@ -694,6 +694,7 @@ bool LookupSubNet(const std::string& subnet_str, CSubNet& subnet_out)\n     CNetAddr addr;\n \n     if (LookupHost(str_addr, addr, /*fAllowLookup=*/false)) {\n+        addr = MaybeFlipIPv6toCJDNS(CService{addr, /*port=*/0});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1104641668",
      "id" : 1104641668,
      "line" : 697,
      "node_id" : "PRRC_kwDOABII585B136E",
      "original_commit_id" : "45a79d48ca70e52e12a50eed8ff73ec772519b5e",
      "original_line" : 697,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 4,
      "pull_request_review_id" : 1294785408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104641668/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-13T15:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104641668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1104785968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104785968"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It has inside, `ReachableNets::m_mutex`.",
      "commit_id" : "9b656a5eb18f3a4c2f438bb3a4899db5441adb7f",
      "created_at" : "2023-02-13T17:12:47Z",
      "diff_hunk" : "@@ -40,6 +40,8 @@ bool fNameLookup = DEFAULT_NAME_LOOKUP;\n int g_socks5_recv_timeout = 20 * 1000;\n static std::atomic<bool> interruptSocks5Recv(false);\n \n+ReachableNets g_reachable_nets;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1104785968",
      "id" : 1104785968,
      "in_reply_to_id" : 1103877367,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII585B2bIw",
      "original_commit_id" : "573117f79aebe482dccd6c91366c79663a7d5f47",
      "original_line" : 43,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 4,
      "pull_request_review_id" : 1296108363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104785968/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-13T17:12:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104785968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1104803546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104803546"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In d9b95cb1eedb9f165df93dcae0aba96ede40767a, I could check that all CJDNS address starts with [OxFC](https://github.com/cjdelisle/cjdns/blob/master/doc/Whitepaper.md#pulling-it-all-together), so, it switches the first byte to `0x55` to avoid generating it that look like CJDNS. But why specifically `0x55`?",
      "commit_id" : "9b656a5eb18f3a4c2f438bb3a4899db5441adb7f",
      "created_at" : "2023-02-13T17:25:14Z",
      "diff_hunk" : "@@ -36,7 +36,11 @@ CNetAddr ConsumeNetAddr(FuzzedDataProvider& fuzzed_data_provider) noexcept\n     } else if (network == Network::NET_IPV6) {\n         if (fuzzed_data_provider.remaining_bytes() >= 16) {\n             in6_addr v6_addr = {};\n-            memcpy(v6_addr.s6_addr, fuzzed_data_provider.ConsumeBytes<uint8_t>(16).data(), 16);\n+            auto addr_bytes = fuzzed_data_provider.ConsumeBytes<uint8_t>(16);\n+            if (addr_bytes[0] == 0xFC) { // Avoid generating IPv6 addresses that look like CJDNS.\n+                addr_bytes[0] = 0x55;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1104803546",
      "id" : 1104803546,
      "line" : 41,
      "node_id" : "PRRC_kwDOABII585B2fba",
      "original_commit_id" : "d9b95cb1eedb9f165df93dcae0aba96ede40767a",
      "original_line" : 41,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util/net.cpp",
      "position" : 7,
      "pull_request_review_id" : 1296128737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104803546/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-13T17:25:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104803546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1104805263"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104805263"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit:\r\n```suggestion\r\n            const bool reachable{g_reachable_nets.Contains(addr)};\r\n```",
      "commit_id" : "9b656a5eb18f3a4c2f438bb3a4899db5441adb7f",
      "created_at" : "2023-02-13T17:26:28Z",
      "diff_hunk" : "@@ -3635,14 +3635,15 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                 continue;\n             }\n             ++num_proc;\n-            bool fReachable = IsReachable(addr);\n+            const bool reachable = g_reachable_nets.Contains(addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1104805263",
      "id" : 1104805263,
      "line" : 3638,
      "node_id" : "PRRC_kwDOABII585B2f2P",
      "original_commit_id" : "9b656a5eb18f3a4c2f438bb3a4899db5441adb7f",
      "original_line" : 3638,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 1296130709,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104805263/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-13T17:26:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104805263",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think of `netbase` as a module for mostly context-free basic low-level methods - this PR moves `IsReachable` to it and saves its state in a global variable,\r\n\r\nI was thinking about the same, but `netbase` is already stateful - `proxyInfo`, `nameProxy`, `nConnectTimeout`, `fNameLookup`, `g_socks5_recv_timeout`, `interruptSocks5Recv` are global variables that keep state, which influence the output of the functions defined in `netbase`, making them context-dependent.\r\n\r\n`SetProxy()`, `GetProxy()` (already defined in `netbase`) are very similar to the `SetReachable()`, `IsReachable()` functions (which this PR moves into `netbase`). Thus I think the move is appropriate.\r\n\r\n> accessing it both from different threads within the node and the GUI. Shouldn't the information flow between the Node and the GUI rather go through `node/interfaces` instead of having a shared global variable?\r\n\r\nI am not sure `IsReachable()` fits into that. It is not like that in `master` where there is the global variable `vfLimited[]`.\r\n\r\n> Did you consider the alternative approach of letting banman be agnostic of CJDNS (everything stays IPv6, CJDNS addresses get a /128 netmask just like single IPv6 addresses), and add special \"flipping\" logic to the points where we need to compare actual addresses from peers with the results from banman? I didn't try it yet so not sure if viable, but that was my first idea of how to fix the issue of not being able to ban CJDNS peers.\r\n\r\n`banman` is using `CSubNet::Match()`. This would mean in that method we should match IPv6 vs CJDNS. I did not like the idea because `CSubNet` is used also elsewhere and it could influence other parts of the code. But in general it feels wrong to \"pretend\" that an address from network X belongs to a subnet from network Y. I even coded that, but eventually decided to avoid it:\r\n\r\n<details>\r\n<summary>CSubNet::Match() mix IPv6 and CJDNS</summary>\r\n\r\n```diff\r\n--- a/src/netaddress.cpp\r\n+++ b/src/netaddress.cpp\r\n@@ -1039,24 +1039,40 @@ CSubNet::CSubNet(const CNetAddr& addr) : CSubNet()\r\n /**\r\n  * @returns True if this subnet is valid, the specified address is valid, and\r\n  *          the specified address belongs in this subnet.\r\n  */\r\n bool CSubNet::Match(const CNetAddr &addr) const\r\n {\r\n-    if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\r\n+    if (!valid || !addr.IsValid()) {\r\n         return false;\r\n+    }\r\n \r\n-    switch (network.m_net) {\r\n+    Network subnet_net = network.m_net;\r\n+    Network addr_net = addr.m_net;\r\n+\r\n+    if ((subnet_net == NET_IPV6 && addr_net == NET_CJDNS) ||\r\n+        (subnet_net == NET_CJDNS && addr_net == NET_IPV6)) {\r\n+        // Treat both as CJDNS.\r\n+        subnet_net = NET_CJDNS;\r\n+        addr_net = NET_CJDNS;\r\n+    }\r\n+\r\n+    if (subnet_net != addr_net) {\r\n+        return false;\r\n+    }\r\n+\r\n+    switch (subnet_net) {\r\n     case NET_IPV4:\r\n     case NET_IPV6:\r\n         break;\r\n     case NET_ONION:\r\n     case NET_I2P:\r\n-    case NET_CJDNS:\r\n     case NET_INTERNAL:\r\n         return addr == network;\r\n+    case NET_CJDNS:\r\n+        return addr.m_addr == network.m_addr;\r\n     case NET_UNROUTABLE:\r\n     case NET_MAX:\r\n         return false;\r\n     }\r\n \r\n     assert(network.m_addr.size() == addr.m_addr.size());\r\n```\r\n</details>\r\n\r\nNote also that the current PR also resolves two other issues, in addition to the banman one - listed as items in the OP.",
      "created_at" : "2023-02-13T17:41:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27071#issuecomment-1428383348",
      "id" : 1428383348,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27071",
      "node_id" : "IC_kwDOABII585VI2Z0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1428383348/reactions"
      },
      "updated_at" : "2023-02-13T17:41:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1428383348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1104836123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104836123"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, well. I feel like `MaybeFlipIPv6toCJDNS()` is warranted in some of the lower level `Lookup*()` functions. But they are called from so many places, the change would be very invasive. I have to gather some bravery in order to look into that. If that is to be done, maybe it should be preceded by some simplification of the `Lookup*()` family of functions. I get a headache every time I have to deal with:\r\n\r\n```cpp\r\nbool LookupHost(const std::string& name, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup, DNSLookupFn dns_lookup_function = g_dns_lookup);\r\nbool LookupHost(const std::string& name, CNetAddr& addr, bool fAllowLookup, DNSLookupFn dns_lookup_function = g_dns_lookup);\r\nbool Lookup(const std::string& name, std::vector<CService>& vAddr, uint16_t portDefault, bool fAllowLookup, unsigned int nMaxSolutions, DNSLookupFn dns_lookup_function = g_dns_lookup);\r\nbool Lookup(const std::string& name, CService& addr, uint16_t portDefault, bool fAllowLookup, DNSLookupFn dns_lookup_function = g_dns_lookup);\r\nCService LookupNumeric(const std::string& name, uint16_t portDefault = 0, DNSLookupFn dns_lookup_function = g_dns_lookup);\r\nbool LookupIntern(const std::string& name, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup, DNSLookupFn dns_lookup_function);\r\n```",
      "commit_id" : "9b656a5eb18f3a4c2f438bb3a4899db5441adb7f",
      "created_at" : "2023-02-13T17:53:16Z",
      "diff_hunk" : "@@ -694,6 +694,7 @@ bool LookupSubNet(const std::string& subnet_str, CSubNet& subnet_out)\n     CNetAddr addr;\n \n     if (LookupHost(str_addr, addr, /*fAllowLookup=*/false)) {\n+        addr = MaybeFlipIPv6toCJDNS(CService{addr, /*port=*/0});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27071#discussion_r1104836123",
      "id" : 1104836123,
      "in_reply_to_id" : 1104641668,
      "line" : 697,
      "node_id" : "PRRC_kwDOABII585B2nYb",
      "original_commit_id" : "45a79d48ca70e52e12a50eed8ff73ec772519b5e",
      "original_line" : 697,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/netbase.cpp",
      "position" : 4,
      "pull_request_review_id" : 1296173130,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104836123/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-13T17:53:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104836123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I am not sure `IsReachable()` fits into that. It is not like that in `master` where there is the global variable `vfLimited[]`.\r\n\r\nYes, within `Node` it's still one of several global variables, so this is not a change wrt master.\r\nHowever, `vfLimited` wasn't accessed by the GUI because it wasn't part of `LookupSubnet()` before, while `g_reachable_nets` is. So I'm curious if this would work well together with multiprocess (see #10102, fyi @ryanofsky ).\r\nI think most of the data in `vfLimited` is determined during `init` and does not change later (so it might be initialised at the fork point?) - but `torcontrol` calling `SetReachable()` later could be an exception? ",
      "created_at" : "2023-02-13T18:47:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27071#issuecomment-1428473660",
      "id" : 1428473660,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27071",
      "node_id" : "IC_kwDOABII585VJMc8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1428473660/reactions"
      },
      "updated_at" : "2023-02-13T18:47:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1428473660",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   }
]
