[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/27050#pullrequestreview-1285591706), [john-moffett](https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419403357) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24008](https://github.com/bitcoin/bitcoin/pull/24008) (assumeutxo: net_processing changes by jamesob)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-02-06T15:11:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419239592",
      "id" : 1419239592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585Ul-Co",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419239592/reactions"
      },
      "updated_at" : "2023-02-06T17:44:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419239592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1097532417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097532417"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can we also check if we are after the first segwit block? The blocks before have no witness data so don't require any more bandwidth, and then peers can still serve directly from disk.",
      "commit_id" : "1abf5b71105001bb140f737eea538441d0b05ae3",
      "created_at" : "2023-02-06T15:23:49Z",
      "diff_hunk" : "@@ -2380,6 +2381,15 @@ uint32_t PeerManagerImpl::GetFetchFlags(const Peer& peer) const\n     return nFetchFlags;\n }\n \n+uint32_t PeerManagerImpl::GetBlockFetchFlags(const Peer& peer, const CBlockIndex* index) const\n+{\n+    uint32_t fetch_flags = GetFetchFlags(peer);\n+    if (m_chainman.m_blockman.IsPruneMode() && WITH_LOCK(m_chainman.GetMutex(), return m_chainman.IsAssumedValid(index))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1097532417",
      "id" : 1097532417,
      "line" : 2387,
      "node_id" : "PRRC_kwDOABII585BawQB",
      "original_commit_id" : "1abf5b71105001bb140f737eea538441d0b05ae3",
      "original_line" : 2387,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 1285428521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097532417/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-06T15:23:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097532417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1097618534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097618534"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes I think that would be possible, although I wonder if that should happen on the server side (That is, have the server always serve pre-segwit blocks straight from disk). It doesn't seem like it makes sense to support serving pre-segwit blocks not directly from disk.",
      "commit_id" : "1abf5b71105001bb140f737eea538441d0b05ae3",
      "created_at" : "2023-02-06T16:26:07Z",
      "diff_hunk" : "@@ -2380,6 +2381,15 @@ uint32_t PeerManagerImpl::GetFetchFlags(const Peer& peer) const\n     return nFetchFlags;\n }\n \n+uint32_t PeerManagerImpl::GetBlockFetchFlags(const Peer& peer, const CBlockIndex* index) const\n+{\n+    uint32_t fetch_flags = GetFetchFlags(peer);\n+    if (m_chainman.m_blockman.IsPruneMode() && WITH_LOCK(m_chainman.GetMutex(), return m_chainman.IsAssumedValid(index))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1097618534",
      "id" : 1097618534,
      "in_reply_to_id" : 1097532417,
      "line" : 2387,
      "node_id" : "PRRC_kwDOABII585BbFRm",
      "original_commit_id" : "1abf5b71105001bb140f737eea538441d0b05ae3",
      "original_line" : 2387,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 1285556033,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27050",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097618534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-06T16:26:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1097618534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-02-06T16:53:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419403357",
      "id" : 1419403357,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585UmmBd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419403357/reactions"
      },
      "updated_at" : "2023-02-06T16:53:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419403357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/116917595?v=4",
         "events_url" : "https://api.github.com/users/john-moffett/events{/privacy}",
         "followers_url" : "https://api.github.com/users/john-moffett/followers",
         "following_url" : "https://api.github.com/users/john-moffett/following{/other_user}",
         "gists_url" : "https://api.github.com/users/john-moffett/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/john-moffett",
         "id" : 116917595,
         "login" : "john-moffett",
         "node_id" : "U_kgDOBvgFWw",
         "organizations_url" : "https://api.github.com/users/john-moffett/orgs",
         "received_events_url" : "https://api.github.com/users/john-moffett/received_events",
         "repos_url" : "https://api.github.com/users/john-moffett/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/john-moffett/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/john-moffett/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/john-moffett"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As @sipa pointed out in the Stack Overflow:\r\n\r\n> `assumevalid` currently in Bitcoin Core only skips script validation. But there are other rules that involve witness data, such as resource limits and the rule that no witness data is allowed for non-witness inputs. \r\n\r\nSo it shifts the meaning of (our baked in) `-assumevalid` somewhat, but only for pruned nodes. Uses may not expect that syncing with `-prune` performs less validation than without. So this probably needs a separate configuration flag.\r\n\r\n> One downside is that nodes serving blocks without witnesses can't serve them directly from disk. They have to un-serialize and re-serialize without the witnesses before sending them.\r\n\r\nDo you mean serving nodes that don't have the witness data? Or do you mean nodes that do (but that's already the case then)?\r\n\r\n\r\nFor nodes that come fresh out of IBD we should carefully test the behavior before and after the assumevalid drops below the prune height. Because at that point we should signal `NODE_WITNESS`. For better discoverability we should probably always announce that. In that case we should start downloading witness data a bit before the `assumevalid` block if we're a recent release. But this gets tricky, because the node doesn't know how big future blocks are, so doesn't know when to start downloading witness data. We could change the release process to ensure `assumevalid` is deep enough to account for that.",
      "created_at" : "2023-02-06T17:18:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419443888",
      "id" : 1419443888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585Umv6w",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419443888/reactions"
      },
      "updated_at" : "2023-02-06T17:18:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419443888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "One potential issue with this is that when we write blocks to disk, we would be writing them without witness data. I think this could create a problem if you shut down a node in the middle of IBD and restart it with a different assumevalid value (such as disabling assumevalid) -- we would think we have a block that is invalid, because we're missing the witnesses.\r\n\r\nWhile it's an interesting thought experiment to see how much work would be required to optimize for this use case, I'm a bit skeptical that the complexity of implementing this optimization is worth it.  But if you keep working on it and get to something that you think is robust I would be curious to see what it looks like.",
      "created_at" : "2023-02-06T17:26:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419455201",
      "id" : 1419455201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585Umyrh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419455201/reactions"
      },
      "updated_at" : "2023-02-06T17:26:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419455201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not sure skipping size checks is substantially different from skipping the script evaluation for security purposes.\r\n\r\nBut I also tend to agree with @sdaftuar that the complexity needed here probably isn't worth it. Additionally, some thought would need to be given to privacy implications (we already identify version explicitly, but do we want to make full history validation an externally-visible attribute?).",
      "created_at" : "2023-02-06T18:35:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419565049",
      "id" : 1419565049,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585UnNf5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419565049/reactions"
      },
      "updated_at" : "2023-02-06T18:35:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419565049",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> One potential issue with this is that when we write blocks to disk, we would be writing them without witness data. I think this could create a problem if you shut down a node in the middle of IBD and restart it with a different assumevalid value (such as disabling assumevalid) -- we would think we have a block that is invalid, because we're missing the witnesses.\r\n\r\nGood point; it may require some flag in the blockindex to note \"valid modulo the possible the lack of witness data\".\r\n\r\n> While it's an interesting thought experiment to see how much work would be required to optimize for this use case, I'm a bit skeptical that the complexity of implementing this optimization is worth it. But if you keep working on it and get to something that you think is robust I would be curious to see what it looks like.\r\n\r\nIt's a pretty substantial savings in IBD bandwidth; in the last 100000 blocks, 43% of the serialized size is in witness data (47.8 GiB out of 110.6 GiB). Maybe that makes it worth looking into more?\r\n\r\n> I'm not sure skipping size checks is substantially different from skipping the script evaluation for security purposes.\r\n\r\nAgree. I think it's important to note that it's a change in what constitutes assumevalid, but it's not like it's harder to run validation for the new set of things covered by it (in fact, it's hard to just check script validity without checking the rest...).\r\n\r\n> Additionally, some thought would need to be given to privacy implications (we already identify version explicitly, but do we want to make full history validation an externally-visible attribute?).\r\n\r\nThe change only affects IBD, and only affects blocks that won't be available to peers anymore once IBD is over (even in the scenario of interrupting and changing assumevalid in between). Are there other privacy concerns you're worried about?",
      "created_at" : "2023-02-06T19:15:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419611954",
      "id" : 1419611954,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585UnY8y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419611954/reactions"
      },
      "updated_at" : "2023-02-06T19:15:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419611954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It's a pretty substantial savings in IBD bandwidth; in the last 100000 blocks, 43% of the serialized size is in witness data (47.8 GiB out of 110.6 GiB). Maybe that makes it worth looking into more?\r\n\r\nWell I was more focused on my perception of the complexity than the benefit I guess, but you may be right.  I have a number of thoughts that likely could be addressed if we can think about these issues clearly enough, but some things to consider:\r\n\r\n- whether we are in \"prune mode\" is a slightly nuanced idea. Nodes that are configured to have huge block databases and nodes that only prune when manually told to would both qualify as \"pruning nodes\" in the logic used here, which means that nodes might download blocks without witness and never actually delete them. (If we restarted with pruning disabled, then we would need to detect that our block storage is missing witnesses and force a reindex, which in turn would cause us to have to redownload all those blocks.). This is all doable logic, but just a messy edge case to consider.\r\n\r\n- we should be careful about having our code be robust to situations where a pruning node might find itself relaying a block at its tip even while it's catching up, and if the user has set their assumevalid close to the network's tip then you might imagine a problem being created from the pruning node advertising a block without the witness data to go with it.  Maybe there is a clean way to think about this, where we enforce that a pruning node will never announce a block unless the block and the prior 288 blocks were all downloaded with witness?\r\n\r\nWhen I first started thinking about this, I was contemplating that assumeutxo would be where we should spend our engineering resources, but now that I think a little more, maybe this feature (if we can design it properly) would compose nicely with assumeutxo (specifically around how much background validation happens when a node downloads the chain from scratch -- maybe we could allow users to have different levels of validation like we do today). ",
      "created_at" : "2023-02-06T21:02:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419751142",
      "id" : 1419751142,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27050",
      "node_id" : "IC_kwDOABII585Un67m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419751142/reactions"
      },
      "updated_at" : "2023-02-06T21:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419751142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
