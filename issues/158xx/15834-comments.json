[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276046301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276046301"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Does the use of 10 here imply that-- assuming all peers INV a transaction to us at roughly the same time-- that we get no more robustness to transaction suppression than if we only had ten peers?  If so, perhaps this should be equal to the maximum number of peers times the interval",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-17T01:01:07Z",
      "diff_hunk" : "@@ -75,6 +75,8 @@ static constexpr int64_t INBOUND_PEER_TX_DELAY = 2 * 1000000;\n static constexpr int64_t GETDATA_TX_INTERVAL = 60 * 1000000;\n /** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others. */\n static constexpr int64_t MAX_GETDATA_RANDOM_DELAY = 2 * 1000000;\n+/** How long to wait (in microseconds) before expiring a getdata request to a peer */\n+static constexpr int64_t TX_EXPIRY_INTERVAL = 10 * GETDATA_TX_INTERVAL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276046301",
      "id" : 276046301,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA0NjMwMQ==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 227510630,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276046301",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276049783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276049783"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Doesn't erase invalidate the iterator at and after the point of the erasure? ",
      "commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "created_at" : "2019-04-17T01:25:41Z",
      "diff_hunk" : "@@ -3922,6 +3927,27 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n+\n+        // For robustness, expire old requests after a long timeout, so that\n+        // we can resume downloading transactions from a peer even if they\n+        // were unresponsive in the past.\n+        // Eventually we should consider disconnecting peers, but this is\n+        // conservative.\n+        if (state.m_tx_download.m_check_expiry_timer <= nNow) {\n+            for (auto it=state.m_tx_download.m_tx_in_flight.begin(); it != state.m_tx_download.m_tx_in_flight.end();) {\n+                if (it->second <= nNow - TX_EXPIRY_INTERVAL) {\n+                    LogPrint(BCLog::NET, \"timeout of inflight tx %s from peer %d\\n\", it->first.ToString(), pto->GetId());\n+                    state.m_tx_download.m_tx_announced.erase(it->first);\n+                    state.m_tx_download.m_tx_in_flight.erase(it++);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276049783",
      "id" : 276049783,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA0OTc4Mw==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 38,
      "path" : "src/net_processing.cpp",
      "position" : 60,
      "pull_request_review_id" : 227514892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-04-17T01:25:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276049783",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276049961"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276049961"
         }
      },
      "author_association" : "MEMBER",
      "body" : "oh nevermind thats a map.",
      "commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "created_at" : "2019-04-17T01:26:51Z",
      "diff_hunk" : "@@ -3922,6 +3927,27 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n+\n+        // For robustness, expire old requests after a long timeout, so that\n+        // we can resume downloading transactions from a peer even if they\n+        // were unresponsive in the past.\n+        // Eventually we should consider disconnecting peers, but this is\n+        // conservative.\n+        if (state.m_tx_download.m_check_expiry_timer <= nNow) {\n+            for (auto it=state.m_tx_download.m_tx_in_flight.begin(); it != state.m_tx_download.m_tx_in_flight.end();) {\n+                if (it->second <= nNow - TX_EXPIRY_INTERVAL) {\n+                    LogPrint(BCLog::NET, \"timeout of inflight tx %s from peer %d\\n\", it->first.ToString(), pto->GetId());\n+                    state.m_tx_download.m_tx_announced.erase(it->first);\n+                    state.m_tx_download.m_tx_in_flight.erase(it++);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276049961",
      "id" : 276049961,
      "in_reply_to_id" : 276049783,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA0OTk2MQ==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 38,
      "path" : "src/net_processing.cpp",
      "position" : 60,
      "pull_request_review_id" : 227515101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-04-17T01:26:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276049961",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276062747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276062747"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No, `TX_EXPIRY_INTERVAL` only removes tx's that are already in the `in_flight` list, which means we've already sent a GETDATA for them at least `TX_EXPIRY_INTERVAL` microseconds ago. EDIT: (And doesn't remove them from other peers' queues, whether they've been sent a GETDATA already, or that's still pending)",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-17T02:54:05Z",
      "diff_hunk" : "@@ -75,6 +75,8 @@ static constexpr int64_t INBOUND_PEER_TX_DELAY = 2 * 1000000;\n static constexpr int64_t GETDATA_TX_INTERVAL = 60 * 1000000;\n /** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others. */\n static constexpr int64_t MAX_GETDATA_RANDOM_DELAY = 2 * 1000000;\n+/** How long to wait (in microseconds) before expiring a getdata request to a peer */\n+static constexpr int64_t TX_EXPIRY_INTERVAL = 10 * GETDATA_TX_INTERVAL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276062747",
      "id" : 276062747,
      "in_reply_to_id" : 276046301,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA2Mjc0Nw==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 227530426,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276062747",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276065900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276065900"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe:\r\n\r\n    if (m_tx_in_flight.erase(hash)) {\r\n        m_tx_announced.erase(hash);\r\n    }\r\n\r\nOtherwise sending `INV x1 x2 .. x100`, then looping `INV x; NOTFOUND x` (without ever sending the corresponding `TX` message) will grow `m_tx_process_time` unboundedly, I think.",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-17T03:16:22Z",
      "diff_hunk" : "@@ -3111,8 +3116,19 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {\n-        // We do not care about the NOTFOUND message, but logging an Unknown Command\n-        // message would be undesirable as we transmit it ourselves.\n+        // Remove the NOTFOUND transactions from the peer\n+        LOCK(cs_main);\n+        CNodeState *state = State(pfrom->GetId());\n+        std::vector<CInv> vInv;\n+        vRecv >> vInv;\n+        if (vInv.size() <= MAX_PEER_TX_IN_FLIGHT + MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+            for (CInv &inv : vInv) {\n+                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX) {\n+                    state->m_tx_download.m_tx_announced.erase(inv.hash);\n+                    state->m_tx_download.m_tx_in_flight.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276065900",
      "id" : 276065900,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA2NTkwMA==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 38,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 227534135,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276065900",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276073773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276073773"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That's a bit unpredictable, maybe `nNow + TX_EXPIRY_INTERVAL/2 + GetRand(TX_EXPIRY_INTERVAL)` ? Also kind of a pain to test 10 minute delays that don't consider mocktime, but whatever.",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-17T04:17:58Z",
      "diff_hunk" : "@@ -3911,6 +3927,27 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n+\n+        // For robustness, expire old requests after a long timeout, so that\n+        // we can resume downloading transactions from a peer even if they\n+        // were unresponsive in the past.\n+        // Eventually we should consider disconnecting peers, but this is\n+        // conservative.\n+        if (state.m_tx_download.m_check_expiry_timer <= nNow) {\n+            for (auto it=state.m_tx_download.m_tx_in_flight.begin(); it != state.m_tx_download.m_tx_in_flight.end();) {\n+                if (it->second <= nNow - TX_EXPIRY_INTERVAL) {\n+                    LogPrint(BCLog::NET, \"timeout of inflight tx %s from peer %d\\n\", it->first.ToString(), pto->GetId());\n+                    state.m_tx_download.m_tx_announced.erase(it->first);\n+                    state.m_tx_download.m_tx_in_flight.erase(it++);\n+                } else {\n+                    ++it;\n+                }\n+            }\n+            // On average, we do this check every TX_EXPIRY_INTERVAL. Randomize\n+            // so that we're not doing this for all peers at the same time.\n+            state.m_tx_download.m_check_expiry_timer = nNow + GetRand(2*TX_EXPIRY_INTERVAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276073773",
      "id" : 276073773,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA3Mzc3Mw==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 67,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 227543798,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276073773",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276078275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276078275"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, testing confirms we can get a memory leak this way -- test node gets from 60M to 1GB resident size after about 1M `INV y1..y100; NOTFOUND y1..y100` pairs, after pre-filling in_flight and process with `INV x1..x5000`, and suggested change keeps resident size stable at 60M.\r\n\r\n`INV y; TX ytx` also unconditionally clears `m_tx_announced`, but that's okay because redoing `INV y` won't re-add it to `m_tx_announced` because of the `AlreadyHave()` check. However, doing `INV y1; TX y1; INV y2; TX y2; ..; INV yN; TX yN` can still cause m_tx_process_time to have N entries, though. That's a lot harder to exploit, especially with the timeout this patch adds that constrains the y1..yN to be within the 20minute period, but still maybe worth doing the same fix?",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-17T04:51:12Z",
      "diff_hunk" : "@@ -3111,8 +3116,19 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {\n-        // We do not care about the NOTFOUND message, but logging an Unknown Command\n-        // message would be undesirable as we transmit it ourselves.\n+        // Remove the NOTFOUND transactions from the peer\n+        LOCK(cs_main);\n+        CNodeState *state = State(pfrom->GetId());\n+        std::vector<CInv> vInv;\n+        vRecv >> vInv;\n+        if (vInv.size() <= MAX_PEER_TX_IN_FLIGHT + MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+            for (CInv &inv : vInv) {\n+                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX) {\n+                    state->m_tx_download.m_tx_announced.erase(inv.hash);\n+                    state->m_tx_download.m_tx_in_flight.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276078275",
      "id" : 276078275,
      "in_reply_to_id" : 276065900,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA3ODI3NQ==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 38,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 227549172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276078275",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Are we failing to dequeue txn for non-witness peers that send us witness txn that we drop?",
      "created_at" : "2019-04-17T06:24:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#issuecomment-483953736",
      "id" : 483953736,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15834",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Mzk1MzczNg==",
      "updated_at" : "2019-04-17T06:24:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483953736",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276112938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276112938"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "However, I think there's another bug that causes problems here -- if you have two offers with nearby `m_process_time` values, then you'll hit the `else` clause of `last_request_Time <= nNow - GETDATA_TX_INTERVAL` and call `RequestTx(txid)` which will just return because it's already present in `m_tx_announced`, and then you'll clear `inv.hash` (ie `txid`) from `tx_process_time`, and never actually request it from that peer. So I think this also needs:\r\n\r\n                } else {\r\n                    // This transaction is in flight from someone else; queue\r\n                    // up processing to happen after the download times out\r\n                    // (with a slight delay for inbound peers, to prefer\r\n                    // requests to outbound peers).\r\n    +               state.m_tx_download.m_tx_announced.erase(inv.hash);\r\n                    RequestTx(&state, txid, nNow);\r\n                }\r\n",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-17T07:34:20Z",
      "diff_hunk" : "@@ -75,6 +75,8 @@ static constexpr int64_t INBOUND_PEER_TX_DELAY = 2 * 1000000;\n static constexpr int64_t GETDATA_TX_INTERVAL = 60 * 1000000;\n /** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others. */\n static constexpr int64_t MAX_GETDATA_RANDOM_DELAY = 2 * 1000000;\n+/** How long to wait (in microseconds) before expiring a getdata request to a peer */\n+static constexpr int64_t TX_EXPIRY_INTERVAL = 10 * GETDATA_TX_INTERVAL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276112938",
      "id" : 276112938,
      "in_reply_to_id" : 276046301,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjExMjkzOA==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 227591378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276112938",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276120894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276120894"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Might be good to call `EraseTxRequest(hash);` inside the `if` as well, so that we don't delay requesting from other peers when we've already received a NOTFOUND. Could leave that for #15505 though.",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-17T07:58:36Z",
      "diff_hunk" : "@@ -3111,8 +3116,19 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {\n-        // We do not care about the NOTFOUND message, but logging an Unknown Command\n-        // message would be undesirable as we transmit it ourselves.\n+        // Remove the NOTFOUND transactions from the peer\n+        LOCK(cs_main);\n+        CNodeState *state = State(pfrom->GetId());\n+        std::vector<CInv> vInv;\n+        vRecv >> vInv;\n+        if (vInv.size() <= MAX_PEER_TX_IN_FLIGHT + MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+            for (CInv &inv : vInv) {\n+                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX) {\n+                    state->m_tx_download.m_tx_announced.erase(inv.hash);\n+                    state->m_tx_download.m_tx_in_flight.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276120894",
      "id" : 276120894,
      "in_reply_to_id" : 276065900,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjEyMDg5NA==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 38,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 227601240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276120894",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nCould you please update the comment in \r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/7c4e69c6dcde13c572888fa7d00f70157b1f32aa/src/net_processing.cpp#L1462-L1469\r\n\r\nto say:\r\n* Why we send so many notfound. (Because of orphan handling, see https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-483916240)\r\n* Remove the phrase \"Currently only SPV clients actually care...\"",
      "created_at" : "2019-04-17T12:06:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#issuecomment-484055268",
      "id" : 484055268,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15834",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDA1NTI2OA==",
      "updated_at" : "2019-04-17T12:06:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484055268",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns Thanks for the review and good catch on those additional issues you spotted.  I'll continue to work on this PR for master but I now think that we should revert this for 0.18 rather than try to make a fix and backport.  Please see #15839. ",
      "created_at" : "2019-04-17T17:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#issuecomment-484182749",
      "id" : 484182749,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15834",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDE4Mjc0OQ==",
      "updated_at" : "2019-04-17T17:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484182749",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Are we failing to dequeue txn for non-witness peers that send us witness txn that we drop?\r\n\r\n@gmaxwell Not that I can see.  It looks to me like the only way a peer could \"send\" us a transaction that doesn't get dequeued is if it fails to deserialize successfully; once we've deserialized I don't think there's a code path that would not result in updating the data structures.",
      "created_at" : "2019-04-17T18:38:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#issuecomment-484211888",
      "id" : 484211888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15834",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDIxMTg4OA==",
      "updated_at" : "2019-04-17T18:38:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484211888",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "So I don't forget: Instead of disconnecting we can make the ordering in the random fetching biased based on the size() of the INVs outstanding queue and the number of expired entries.... so hosts that INV dos us just end up de-preferred for fetching.",
      "created_at" : "2019-04-17T21:51:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#issuecomment-484274900",
      "id" : 484274900,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15834",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDI3NDkwMA==",
      "updated_at" : "2019-04-17T21:51:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484274900",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276518533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276518533"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, that only works for the request side. If we get:\r\n\r\n     0s peer A: INV deadbeef...\r\n     1s peer B: INV deadbeef...\r\n     ...\r\n     5s peer Z: INV deadbeef\r\n\r\nand then we happen to query some unresponsive peers, we'll see:\r\n\r\n    10s: -> peer D: GETDATA deadbeef...\r\n    610s: [expired]\r\n    611s: -> peer Q: GETDATA deadbeef...\r\n    1211s: [expired]\r\n\r\nAt which point every peer will have decided \"it's been >15m, I'll expire the deadbeef... tx from mapRelay, and then every node will respond with NOTFOUND for that tx...",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-18T05:05:22Z",
      "diff_hunk" : "@@ -75,6 +75,8 @@ static constexpr int64_t INBOUND_PEER_TX_DELAY = 2 * 1000000;\n static constexpr int64_t GETDATA_TX_INTERVAL = 60 * 1000000;\n /** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others. */\n static constexpr int64_t MAX_GETDATA_RANDOM_DELAY = 2 * 1000000;\n+/** How long to wait (in microseconds) before expiring a getdata request to a peer */\n+static constexpr int64_t TX_EXPIRY_INTERVAL = 10 * GETDATA_TX_INTERVAL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r276518533",
      "id" : 276518533,
      "in_reply_to_id" : 276046301,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjUxODUzMw==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 228102122,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276518533",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15505](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15505.html) ([p2p] Request NOTFOUND transactions immediately from other outbound peers, when possible by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-04-18T15:15:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#issuecomment-484552990",
      "id" : 484552990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15834",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDU1Mjk5MA==",
      "updated_at" : "2019-04-18T17:05:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484552990",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Removing this from 0.18.0 because of #14897",
      "created_at" : "2019-04-18T15:38:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#issuecomment-484565270",
      "id" : 484565270,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15834",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDU2NTI3MA==",
      "updated_at" : "2019-04-18T15:38:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484565270",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r277335337"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277335337"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The code in #15505 is checking for entries being in the in-flight map, so I'll take that suggestion here.  But I think the best way to close the door on this would be to just bound the `m_tx_process_time` map explicitly, so I'll do that too.\r\n\r\nI'll leave the `EraseTxRequest()` call for #15505.",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-22T15:57:15Z",
      "diff_hunk" : "@@ -3111,8 +3116,19 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {\n-        // We do not care about the NOTFOUND message, but logging an Unknown Command\n-        // message would be undesirable as we transmit it ourselves.\n+        // Remove the NOTFOUND transactions from the peer\n+        LOCK(cs_main);\n+        CNodeState *state = State(pfrom->GetId());\n+        std::vector<CInv> vInv;\n+        vRecv >> vInv;\n+        if (vInv.size() <= MAX_PEER_TX_IN_FLIGHT + MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+            for (CInv &inv : vInv) {\n+                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX) {\n+                    state->m_tx_download.m_tx_announced.erase(inv.hash);\n+                    state->m_tx_download.m_tx_in_flight.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r277335337",
      "id" : 277335337,
      "in_reply_to_id" : 276065900,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzMzNTMzNw==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 38,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 229119731,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277335337",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r277387561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277387561"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Does the use of 10 here imply that-- assuming all peers INV a transaction to us at roughly the same time-- that we get no more robustness to transaction suppression than if we only had ten peers?\r\n\r\n@gmaxwell I'm not sure I understand the question -- is the concern that an adversary could keep re-announcing a transaction to us, and every 10 minutes we'll retry that adversary instead of going to our other peers?\r\n\r\nI think that does seem problematic, but since we prefer outbound peers over inbound ones, we should at least be able to query all our outbound peers before an adversary would be able to cause us to re-cycle back to them.  I could, as you suggest, raise this to 125 minutes to eliminate this problem, but that seemed like an excessive time to me that we might (potentially) stop transaction relay.  Of course in theory this code shouldn't really kick in except for misbehaving peers, so I don't have a strong intuition of where to set it.... Thoughts?",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-22T18:35:53Z",
      "diff_hunk" : "@@ -75,6 +75,8 @@ static constexpr int64_t INBOUND_PEER_TX_DELAY = 2 * 1000000;\n static constexpr int64_t GETDATA_TX_INTERVAL = 60 * 1000000;\n /** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others. */\n static constexpr int64_t MAX_GETDATA_RANDOM_DELAY = 2 * 1000000;\n+/** How long to wait (in microseconds) before expiring a getdata request to a peer */\n+static constexpr int64_t TX_EXPIRY_INTERVAL = 10 * GETDATA_TX_INTERVAL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r277387561",
      "id" : 277387561,
      "in_reply_to_id" : 276046301,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzM4NzU2MQ==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 229185870,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277387561",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r277390154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277390154"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@ajtowns Thanks for catching that bug around `RequestTx()`.  I'll be including a fix the next time I update this PR.\r\n\r\n> Oh, that only works for the request side. If we get:\r\n> \r\n> ```\r\n>  0s peer A: INV deadbeef...\r\n>  1s peer B: INV deadbeef...\r\n>  ...\r\n>  5s peer Z: INV deadbeef\r\n> ```\r\n> and then we happen to query some unresponsive peers, we'll see:\r\n> \r\n> ```\r\n> 10s: -> peer D: GETDATA deadbeef...\r\n> 610s: [expired]\r\n> 611s: -> peer Q: GETDATA deadbeef...\r\n> 1211s: [expired]\r\n> ```\r\n> At which point every peer will have decided \"it's been >15m, I'll expire the deadbeef... tx from mapRelay, and then every node will respond with NOTFOUND for that tx...\r\n\r\nI think there's a misunderstanding here.  The design here is supposed to be that every 1 minute (GETDATA_TX_INTERVAL), we will send a GETDATA for a txid that we want to a new peer, while every 10 minutes (TX_EXPIRY_INTERVAL) we'll clear out the in-flight request to a peer we've asked for a given txid, to make room for asking that peer for other txid's (since we cap the in-flight size to 100).  Your example makes me think that you were looking at the 10-minute timer as applying to both new requests and expiring from the data structure, which should not be the case...?",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-22T18:43:18Z",
      "diff_hunk" : "@@ -75,6 +75,8 @@ static constexpr int64_t INBOUND_PEER_TX_DELAY = 2 * 1000000;\n static constexpr int64_t GETDATA_TX_INTERVAL = 60 * 1000000;\n /** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others. */\n static constexpr int64_t MAX_GETDATA_RANDOM_DELAY = 2 * 1000000;\n+/** How long to wait (in microseconds) before expiring a getdata request to a peer */\n+static constexpr int64_t TX_EXPIRY_INTERVAL = 10 * GETDATA_TX_INTERVAL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r277390154",
      "id" : 277390154,
      "in_reply_to_id" : 276046301,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzM5MDE1NA==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 229189158,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277390154",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r277390327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277390327"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sounds good, thanks.",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-22T18:43:43Z",
      "diff_hunk" : "@@ -3911,6 +3927,27 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n+\n+        // For robustness, expire old requests after a long timeout, so that\n+        // we can resume downloading transactions from a peer even if they\n+        // were unresponsive in the past.\n+        // Eventually we should consider disconnecting peers, but this is\n+        // conservative.\n+        if (state.m_tx_download.m_check_expiry_timer <= nNow) {\n+            for (auto it=state.m_tx_download.m_tx_in_flight.begin(); it != state.m_tx_download.m_tx_in_flight.end();) {\n+                if (it->second <= nNow - TX_EXPIRY_INTERVAL) {\n+                    LogPrint(BCLog::NET, \"timeout of inflight tx %s from peer %d\\n\", it->first.ToString(), pto->GetId());\n+                    state.m_tx_download.m_tx_announced.erase(it->first);\n+                    state.m_tx_download.m_tx_in_flight.erase(it++);\n+                } else {\n+                    ++it;\n+                }\n+            }\n+            // On average, we do this check every TX_EXPIRY_INTERVAL. Randomize\n+            // so that we're not doing this for all peers at the same time.\n+            state.m_tx_download.m_check_expiry_timer = nNow + GetRand(2*TX_EXPIRY_INTERVAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r277390327",
      "id" : 277390327,
      "in_reply_to_id" : 276073773,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzM5MDMyNw==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 67,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 229189390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277390327",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r277530762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277530762"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, I think I got the `GetTxRequestTime` check confused with checking whether it was inflight via another node at all, rather than just hadn't been asked for for a while.",
      "commit_id" : "25f710929aa15904189587647b2a52254960ecd8",
      "created_at" : "2019-04-23T06:20:26Z",
      "diff_hunk" : "@@ -75,6 +75,8 @@ static constexpr int64_t INBOUND_PEER_TX_DELAY = 2 * 1000000;\n static constexpr int64_t GETDATA_TX_INTERVAL = 60 * 1000000;\n /** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others. */\n static constexpr int64_t MAX_GETDATA_RANDOM_DELAY = 2 * 1000000;\n+/** How long to wait (in microseconds) before expiring a getdata request to a peer */\n+static constexpr int64_t TX_EXPIRY_INTERVAL = 10 * GETDATA_TX_INTERVAL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#discussion_r277530762",
      "id" : 277530762,
      "in_reply_to_id" : 276046301,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzUzMDc2Mg==",
      "original_commit_id" : "7c4e69c6dcde13c572888fa7d00f70157b1f32aa",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 229364684,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15834",
      "updated_at" : "2019-05-03T17:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277530762",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've updated this PR and believe the bugs have now been fixed.  I've also got a test, but with the delays involved it takes a very long time to run (ie the test has to sit around and wait for various timeouts).  I'm guessing people don't want to include a test in the test suite (even an extended test) that would take tens of minutes to complete.\r\n\r\nWould reviewers prefer me to switch the uses of GetTimeMicros() in the logic to GetTime() so that we can mock it, and then include a functional test that uses mocktime?  If such tests are viewed as too contrived then I'll skip it and leave this PR as is.",
      "created_at" : "2019-05-03T20:17:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15834#issuecomment-489226513",
      "id" : 489226513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15834",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTIyNjUxMw==",
      "updated_at" : "2019-05-03T20:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489226513",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
