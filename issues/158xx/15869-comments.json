[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Going to go line-by-line in the next few days.",
      "created_at" : "2019-04-27T00:33:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15869#issuecomment-487238866",
      "id" : 487238866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15869",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzIzODg2Ng==",
      "updated_at" : "2019-04-27T00:33:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487238866",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for doing this.\r\nutACK 151f3e9cf1bbcf30a4fc7749682e66b4a73ddfc2.\r\nI haven't verified the sha256 check hash.",
      "created_at" : "2019-04-29T07:21:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15869#issuecomment-487474625",
      "id" : 487474625,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15869",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzQ3NDYyNQ==",
      "updated_at" : "2019-04-29T07:21:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487474625",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nVery nice! Regression testing is our best friend!",
      "created_at" : "2019-04-29T07:25:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15869#issuecomment-487475593",
      "id" : 487475593,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15869",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzQ3NTU5Mw==",
      "updated_at" : "2019-04-29T07:25:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487475593",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15869#discussion_r279431119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15869"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279431119"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd prefer if this didn't set the first element to `SET` and the others to `0`. Could do the following and add a comment that 0==SET? Also, on first sight this might look a bit like the list only has one element.\r\n\r\n```suggestion\r\n        ActionList actions = {};\r\n```",
      "commit_id" : "151f3e9cf1bbcf30a4fc7749682e66b4a73ddfc2",
      "created_at" : "2019-04-29T16:06:38Z",
      "diff_hunk" : "@@ -575,6 +578,232 @@ BOOST_AUTO_TEST_CASE(util_GetChainName)\n     BOOST_CHECK_THROW(test_args.GetChainName(), std::runtime_error);\n }\n \n+// Test different ways settings can be merged, and verify results. This test can\n+// be used to confirm that updates to settings code don't change behavior\n+// unintentially.\n+//\n+// The test covers:\n+//\n+// - Combining different setting actions. Possible actions are: configuring a\n+//   setting, negating a setting (adding \"-no\" prefix), and configuring/negating\n+//   settings in a network section (adding \"main.\" or \"test.\" prefixes).\n+//\n+// - Combining settings from command line arguments and a config file.\n+//\n+// - Combining SoftSet and ForceSet calls.\n+//\n+// - Testing \"main\" and \"test\" network values to make sure settings from network\n+//   sections are applied and to check for mainnet-specific behaviors like\n+//   inheriting settings from the default section.\n+//\n+// - Testing network-specific settings like \"-wallet\", that may be ignored\n+//   outside a network section, and non-network specific settings like \"-server\"\n+//   that aren't sensitive to the network.\n+//\n+struct SettingsMergeTestingSetup : public BasicTestingSetup {\n+    //! Max number of actions to sequence together. Can decrease this when\n+    //! debugging to make test results easier to understand.\n+    static constexpr int MAX_ACTIONS = 3;\n+\n+    enum Action { SET = 0, NEGATE, SECTION_SET, SECTION_NEGATE, END };\n+    using ActionList = Action[MAX_ACTIONS];\n+\n+    //! Enumerate all possible test configurations.\n+    template <typename Fn>\n+    void ForEachMergeSetup(Fn&& fn)\n+    {\n+        ForEachActionList([&](const ActionList& arg_actions) {\n+            ForEachActionList([&](const ActionList& conf_actions) {\n+                for (bool soft_set : {false, true}) {\n+                    for (bool force_set : {false, true}) {\n+                        for (const std::string& section : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET}) {\n+                            for (const std::string& network : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET}) {\n+                                for (bool net_specific : {false, true}) {\n+                                    fn(arg_actions, conf_actions, soft_set, force_set, section, network, net_specific);\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+            });\n+        });\n+    }\n+\n+    //! Enumerate interesting combinations of actions.\n+    template <typename Fn>\n+    void ForEachActionList(Fn&& fn)\n+    {\n+        ActionList actions = {SET};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15869#discussion_r279431119",
      "id" : 279431119,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTQzMTExOQ==",
      "original_commit_id" : "151f3e9cf1bbcf30a4fc7749682e66b4a73ddfc2",
      "original_position" : 69,
      "path" : "src/test/util_tests.cpp",
      "position" : 69,
      "pull_request_review_id" : 231764897,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15869",
      "updated_at" : "2019-04-29T16:39:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279431119",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
