[
   {
      "author_association" : "MEMBER",
      "body" : "I don't think we want to do this generically, as it will prevent testing the normal relay logic?",
      "created_at" : "2019-04-23T21:02:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-485973426",
      "id" : 485973426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTk3MzQyNg==",
      "updated_at" : "2019-04-23T21:02:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485973426",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This preserves the normal relay logic except that the delay is always zero (for inbound and outbound peers). Testing that there is a difference in the delay between inbound and outbound peers was already impossible, I believe, since we can not create outbound connections.",
      "created_at" : "2019-04-23T21:07:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-485974991",
      "id" : 485974991,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTk3NDk5MQ==",
      "updated_at" : "2019-04-23T21:07:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485974991",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Testing that there is a difference in the delay between inbound and outbound peers was already impossible, I believe, since we can not create outbound connections.\r\n\r\nIt's not fundamentally impossible though, is it? I think remember using part of some stuck PR (Luke's?) to test both directions.\r\n\r\nAnyway, could you motivate this change a bit? I see some description in #15858, but it is closed now :)",
      "created_at" : "2019-04-23T21:20:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-485979354",
      "id" : 485979354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTk3OTM1NA==",
      "updated_at" : "2019-04-23T21:20:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485979354",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a commit to make it a regtest command line flag",
      "created_at" : "2019-04-23T21:38:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-485984818",
      "id" : 485984818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTk4NDgxOA==",
      "updated_at" : "2019-04-23T21:38:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485984818",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15759](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15759.html) ([p2p] Add 2 outbound blocks-only connections by sdaftuar)\n* [#14856](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14856.html) (net: remove more CConnman globals (theuni) by dongcarl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-04-23T22:52:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486003228",
      "id" : 486003228,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjAwMzIyOA==",
      "updated_at" : "2019-04-23T22:52:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486003228",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I really don't like special casing the tests like this, the more we do this the more tests become useless just for show things-- and, of course, the special casing code itself can contribute to bugs too.  Wouldn't it be better to run some of these tests in parallel so that their latency is less relevant?",
      "created_at" : "2019-04-24T05:29:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486073658",
      "id" : 486073658,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjA3MzY1OA==",
      "updated_at" : "2019-04-24T05:29:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486073658",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@gmaxwell but if there are no tests for delay, what is the point of keeping delay in tests at all? If it breaks, no one will notice it anyway.\r\n\r\nAlso on:\r\n> Testing that there is a difference in the delay between inbound and outbound peers was already impossible, I believe, since we can not create outbound connections.\r\n\r\nHow about starting 3 nodes like this: `node0 -> node1 -> node2` and then generating txs on node1.\r\nOne then can measure how long it took node0 and node2 to receive those transactions (by polling for mempool contents or even by logs). \r\n\r\n",
      "created_at" : "2019-04-24T08:13:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486117696",
      "id" : 486117696,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjExNzY5Ng==",
      "updated_at" : "2019-04-24T08:13:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486117696",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "By the way, @MarcoFalke, if your intent is to only speedup several tests in which p2p is not test subject - you can just whitelist peers in such tests.",
      "created_at" : "2019-04-24T08:20:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486120128",
      "id" : 486120128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjEyMDEyOA==",
      "updated_at" : "2019-04-24T08:20:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486120128",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'd rather not whitelist peers in tests. Not only is it tedious to pass in the command line flag, but also it affects DoS scores and some other things, I believe.",
      "created_at" : "2019-04-24T12:03:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486199483",
      "id" : 486199483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjE5OTQ4Mw==",
      "updated_at" : "2019-04-24T12:03:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486199483",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK adding this as default in the functional tests.\r\n\r\n> I don't think we want to do this generically, as it will prevent testing the normal relay logic\r\n\r\nI can't think of any cases in the functional tests where we do anything except submit a transaction and wait for it to propagate. Running with `m_tx_relay_force_flush` will achieve exactly the same except that wait will be much shorter.\r\n\r\nNotably, I don't think there are any tests in the functional test suite that explicitly test the poisson distribution for tx relay. Really, that should be tested at the unit test level. We could add a single functional test with `m_tx_relay_force_flush` disabled if we want a higher-level test that simply tests that tx relay is not completely broken.\r\n\r\n> I really don't like special casing the tests like this\r\n\r\nIn general I agree, but the change here is so minor that I think it's ok. I'm much more concerned about other shortcomings in our functional test suite, such as not having peers outbound peers or peers on non-local network addresses.\r\n\r\n> Wouldn't it be better to run some of these tests in parallel\r\n\r\nThat's already the default",
      "created_at" : "2019-04-24T14:00:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486245470",
      "id" : 486245470,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjI0NTQ3MA==",
      "updated_at" : "2019-04-24T14:00:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486245470",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "My instinct here is that our design goal should be to make the p2p connections in regtest be more like mainnet, and not less.  We already have a problem that in regtest, we don't exercise our networking code enough (as mentioned in #14210 -- an issue I opened after I got the impression that many people were unaware of our code-coverage deficiences with respect to p2p behavior).  So adding more special cases seems like it's going in the wrong direction.\r\n\r\nOn the other hand it would be great for the tests to run faster.  My suggestion would be to adopt an approach more like #15858 was trying to do, where we leave bitcoind unchanged but choose to make certain tests opt-out of testing the p2p behavior.  I think that also makes it easier to reason about what a test is testing, if you can see clearly in the test what parts of the code are being exercised (rather than implicitly relying on some non-standard  behaviors we've opted bitcoind into in the test framework).\r\n\r\nI only briefly looked at #15858 so far but I think it seemed to be going in the right direction.  Having individual tests be modified one-by-one to opt into a faster behavior seems fine to me; reviewers can determine whether the code coverage change is logical or not based on what the test is doing and what the rest of the test suite already covers.  The only caveat I'd add is that I think we should make it more explicit whether a call to `sync_mempools()` is exercising the p2p sync logic or not, to make the tests more readable and understandable.\r\n\r\nAs an aside, I think someone should just add a test that tests poisson delays -- that is currently possible in our test framework (inbounds can be tested via mininode, outbounds can be tested with multiple bitcoind's because there's no difference in our p2p logic between addnode peers and regular outbound peers, I believe).\r\n\r\nSo I'm a weak concept NACK on adding functionality to bitcoind that allows changing the relay delays; I'm a strong concept NACK on defaulting all our functional tests into special-cased behavior (if we were to go with this approach, I think we should only opt-in tests that we choose to exercise non-standard behavior on, rather than take a blanket approach).\r\n\r\nRegarding parallelization, I think the point is that perhaps developers can immediately start saving their own time (and achieve the same benefits of this PR) by just increasing the number of simultaneous jobs they run with?  I often run `test_runner.py` with the defaults myself, and this PR has reminded me that I could cut the time down significantly by adding more parallelization, so I will try to remember that going forward.",
      "created_at" : "2019-04-24T14:39:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486270546",
      "id" : 486270546,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjI3MDU0Ng==",
      "updated_at" : "2019-04-24T14:39:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486270546",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The response to \"the tests run slow\" shouldn't be \"just run more of them in parallel\". We might have users or developers that would like to run the tests on weak hardware (e.g. dual core cpu or hdd). Those constraints set a limit on how many tests can be run in parallel. Some of the tests might have random sleeps in them, but you can't rely on those because they are -- after all -- *random*.\r\n\r\nIt already takes about an hour to compile from scratch and run all tests on a dual core cpu with hdd. I don't see how compilation could be sped up any time soon (it would probably require getting rid of the boost hpp includes and the serialize.h includes, neither trivially possible). So having the tests run faster with a low risk setting like this seems like a nice way to kick the can down the road.\r\n\r\nBecause the flag can be set on the command line, it shouldn't hinder anyone from increasing the test coverage of our tx relay code.\r\n\r\nI do see the argument that regtest should be as close to mainnet as possible, but there is also a reason to have some regtest values differ  from mainnet, when they *aid* testing.",
      "created_at" : "2019-04-24T15:35:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486294253",
      "id" : 486294253,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjI5NDI1Mw==",
      "updated_at" : "2019-04-24T15:39:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486294253",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ":slightly_frowning_face: I much this approach to #15858 and don't see why adding 30 lines of gnarly topo-sort code in the test framework is in any way preferable to adding the one-line change:\r\n\r\n```c++\r\n            bool fSendTrickle = pto->fWhitelisted;\r\n            bool fSendTrickle = connman->m_tx_relay_force_flush || pto->fWhitelisted;\r\n```\r\n\r\nin `SendMessages()`. If the concern is whether the faster sync behaviour should be default of not, then it's equally possible to make either change default to on or off.\r\n\r\nThe only change in this PR is one of _timing_. The other PR completely changes how transactions are relayed between nodes on the test network, so in fact this PR is results in _less_ difference in behaviour from a 'real' network. I can easily come up with scenarios where a regression in tx relay would be caught with this change, but hidden by the change in #15858 which basically removes p2p tx relay between nodes under test.\r\n\r\nSo my preference would be to use this PR, but default to off to satisfy the concerns of @sipa @gmaxwell and @sdaftuar. It can be explicitly enabled in the tests that @MarcoFalke picked out in 15881.",
      "created_at" : "2019-04-24T15:53:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486302258",
      "id" : 486302258,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjMwMjI1OA==",
      "updated_at" : "2019-04-24T15:54:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486302258",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
