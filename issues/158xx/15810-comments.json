[
   {
      "author_association" : "MEMBER",
      "body" : "Seems a lot of new code added for a simplification. Also, releasing the locks in between makes this non-atomic: Missing coins are counted as -1 satoshis (instead of their true amount), this can easily lead to not firing an error at all and accepting the tx later on, because the coins became available again.",
      "created_at" : "2019-04-12T21:28:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-482728862",
      "id" : 482728862,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MjcyODg2Mg==",
      "updated_at" : "2019-04-12T21:28:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482728862",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15870](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15870.html) (wallet: Only fail rescan when blocks have actually been pruned by MarcoFalke)\n* [#15845](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15845.html) (wallet: Fast rescan with BIP157 block filters by MarcoFalke)\n* [#15784](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15784.html) (rpc: Remove dependency on interfaces::Chain in SignTransaction by ariard)\n* [#15778](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15778.html) ([wallet] Move maxtxfee from node to wallet by jnewbery)\n* [#15764](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15764.html) (Native descriptor wallets by achow101)\n* [#15713](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15713.html) (refactor: Replace chain relayTransactions/submitMemoryPool by higher method by ariard)\n* [#15323](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15323.html) (rpc: Expose g_is_mempool_loaded via getmempoolinfo by Empact)\n* [#15141](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15141.html) (Rewrite DoS interface between validation and net_processing by sdaftuar)\n* [#15112](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15112.html) (build: Optionally enable -Wzero-as-null-pointer-constant by Empact)\n* [#14920](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14920.html) (Build: enable -Wdocumentation via isystem by Empact)\n* [#12096](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12096.html) ([rpc] [wallet] Allow specifying the output index when using bumpfee by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-04-18T17:09:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-484595601",
      "id" : 484595601,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDU5NTYwMQ==",
      "updated_at" : "2019-04-23T17:39:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484595601",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for looking at this @MarcoFalke . This is still in RFC mode and I'm looking for concept feedback.\r\n\r\n> Seems a lot of new code added for a simplification.\r\n\r\nYes, it's additional LOC. It removes code from validation and simplifies the interface to the mempool, in exchange for adding checking to client code (RPC, wallet). I think that counts as an improvement because all other things being equal, we'd prefer less and simpler code in validation. It also makes sense for me that the client should be responsible for this checking.\r\n\r\n> Also, releasing the locks in between makes this non-atomic: Missing coins are counted as -1 satoshis (instead of their true amount), this can easily lead to not firing an error at all and accepting the tx later on, because the coins became available again.\r\n\r\nYikes! Good catch.",
      "created_at" : "2019-04-18T17:57:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-484616488",
      "id" : 484616488,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDYxNjQ4OA==",
      "updated_at" : "2019-04-18T17:57:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484616488",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It removes code from validation and simplifies the interface to the mempool\r\n\r\nThe fee is already calculated in the mempool, so using it for other things is \"free\". I agree that the current interface to pass in the absurd fee is a bit odd, but what about returning the fee from testmempoolaccept? that way you wouldn't need to duplicate any utxo validation logic, but still could avoid passing in the absurd fee into the mempool and the client can use the result of TMPA to check if the fee was too high.",
      "created_at" : "2019-04-18T18:31:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-484630260",
      "id" : 484630260,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDYzMDI2MA==",
      "updated_at" : "2019-04-18T18:31:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484630260",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It would be nice to get this \"local user specific behaviour\" out of ATMP, I agree!\r\n\r\nAnd even beyond that... fine with simplifying this, but having a lot of duplicated code isn't great. It's also important that it's reasonably precise. I think it would be okay to reject a txn with inputs not found, but we shouldn't bypass the check in that case.  I think if the original behaviour had looked like this, the change would have been rejected as not worth it.\r\n\r\nWe have seen this functionality protect users from loss (including people coming into irc furious that it wouldn't send because it was protecting them... :) ) and it seems likely that there is a lot more that we don't hear about. So I wouldn't suggest removing the functionality.\r\n\r\nIt's not entirely trivial because we do have to resolve inputs against the mempool not just the chain or wallet... which ATMP inherently does for us.\r\n\r\n+0.5 to Marco's suggestion, if something like that works, it sounds like it might be good.",
      "created_at" : "2019-04-18T21:40:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-484699029",
      "id" : 484699029,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDY5OTAyOQ==",
      "updated_at" : "2019-04-18T21:40:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484699029",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   }
]
