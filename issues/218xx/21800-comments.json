[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22097 (validation: Move package acceptance size limit from KvB to WU by ariard)\n* #22084 (package testmempoolaccept followups by glozow)\n* #21866 ([Bundle 7/7] validation: Farewell, global Chainstate! by dongcarl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-04-29T05:26:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#issuecomment-828948454",
      "id" : 828948454,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21800",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyODk0ODQ1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-03T03:29:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/828948454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Treating every transaction in the package as each other's ancestor and descendant is a good, conservative heuristic to use, since it can never underestimate the true number of ancestors/descendants. If it's too limiting, we could potentially implement looser limits in future.",
      "created_at" : "2021-06-07T17:03:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#issuecomment-856107966",
      "id" : 856107966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21800",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1NjEwNzk2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-07T17:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/856107966",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r647068181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/647068181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In \"[mempool] extend CalculateMemPoolAncestors for packages\"\r\n\r\nFeels a bit wrong to me to return the same \"too many (ancestors|descendants) for tx %s [limit: %u]\" error message when we're basing that conclusion on a heuristic rather than a full evaluation.  Maybe return a slightly different string like \"too many *possible* (ancestors|descendants)...\" if `total_count > 1`.  ",
      "commit_id" : "1061cf457b021ccf24f394dbb5cc00af575598ba",
      "created_at" : "2021-06-08T02:39:50Z",
      "diff_hunk" : "@@ -187,10 +201,13 @@ bool CTxMemPool::CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntr\n         staged_ancestors.erase(stage);\n         totalSizeWithAncestors += stageit->GetTxSize();\n \n-        if (stageit->GetSizeWithDescendants() + entry.GetTxSize() > limitDescendantSize) {\n+        // When multiple transactions are passed in, the ancestors and descendants of all transactions\n+        // considered together must be within limits even if they are not interdependent. This may be\n+        // stricter than the limits for each individual transaction.\n+        if (stageit->GetSizeWithDescendants() + total_virtual_size > limitDescendantSize) {\n             errString = strprintf(\"exceeds descendant size limit for tx %s [limit: %u]\", stageit->GetTx().GetHash().ToString(), limitDescendantSize);\n             return false;\n-        } else if (stageit->GetCountWithDescendants() + 1 > limitDescendantCount) {\n+        } else if (stageit->GetCountWithDescendants() + total_count > limitDescendantCount) {\n             errString = strprintf(\"too many descendants for tx %s [limit: %u]\", stageit->GetTx().GetHash().ToString(), limitDescendantCount);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r647068181",
      "id" : 647068181,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NzA2ODE4MQ==",
      "original_commit_id" : "7d0e9c1970ee14032a2be3ee283511f8c85904c5",
      "original_line" : 211,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 678037341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-08T08:40:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/647068181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@harding thank you for the review!!!\r\n\r\n> However, the more the results returned by TMPA diverge from the results we'd get from submitting each transaction to our mempool individually, the more I think package validation should be using a different interface than individual transaction validation (e.g., a different parameter to TMPA or a different RPC altogether).\r\n\r\nI agree, and they will likely continue to diverge if we add `bypass_timelocks` and such... Perhaps we can have a regtest-only rawpackage RPC with a `test_accept` parameter (in my opinion users should never have to interact with packages)? And testmempoolaccept can be for users / L2 testing?",
      "created_at" : "2021-06-08T09:07:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#issuecomment-856597823",
      "id" : 856597823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21800",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1NjU5NzgyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-08T09:07:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/856597823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@glozow \r\n\r\n> Perhaps we can have a regtest-only rawpackage RPC with a `test_accept` parameter (in my opinion users should never have to interact with packages)?\r\n\r\nThere's certainly no need for users to interact with packages before there's a reliable package relay mechanism, so starting with regtest-only seems like a good idea to me.  If someone later comes along with a reason it should be user-facing, they can put in the (probably trivial) amount of work to make the RPC available on mainnet and the other networks.\r\n\r\n>  And testmempoolaccept can be for users / L2 testing?\r\n\r\nFor users, yes.  I don't think anyone is using it today for L2 testing and I'm not sure it's really well suited to that---testmempoolaccept tells you whether your transaction would be accepted into the current mempool, but L2 testers really want to know whether the transaction will be accepted into a future mempool; a failure now is a reliable harbinger of failure later, but a success now doesn't guarantee success in the future (even ignoring that relay policy can be made more restrictive).",
      "created_at" : "2021-06-08T18:13:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#issuecomment-856986331",
      "id" : 856986331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21800",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1Njk4NjMzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-08T18:13:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/856986331",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r648467544"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/648467544"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, double negations are real brain teasers.",
      "commit_id" : "1061cf457b021ccf24f394dbb5cc00af575598ba",
      "created_at" : "2021-06-09T16:13:53Z",
      "diff_hunk" : "@@ -472,8 +472,10 @@ class MemPoolAccept\n          */\n         std::vector<COutPoint>& m_coins_to_uncache;\n         const bool m_test_accept;\n-        /** Disable BIP125 RBFing; disallow all conflicts with mempool transactions. */\n-        const bool disallow_mempool_conflicts;\n+        /** Whether we allow transactions to replace mempool transactions by BIP125 rules. If false,\n+         * any transaction spending the same inputs as a transaction in the mempool is considered\n+         * a conflict. */\n+        const bool m_allow_bip125_replacement{true};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r648467544",
      "id" : 648467544,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0ODQ2NzU0NA==",
      "original_commit_id" : "5496b25b6a75f3c4cd65e298f841c7e8b316046f",
      "original_line" : 478,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 679872945,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-09T23:26:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/648467544",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r648471295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/648471295"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Optionally, in the same vein as @harding mentioned in his review:\r\n```suggestion\r\n                        errString = strprintf(\"potentially too many unconfirmed parents [limit: %u]\", limitAncestorCount);\r\n```",
      "commit_id" : "1061cf457b021ccf24f394dbb5cc00af575598ba",
      "created_at" : "2021-06-09T16:18:40Z",
      "diff_hunk" : "@@ -151,33 +152,46 @@ void CTxMemPool::UpdateTransactionsFromBlock(const std::vector<uint256> &vHashes\n     }\n }\n \n-bool CTxMemPool::CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString, bool fSearchForParents /* = true */) const\n+bool CTxMemPool::CalculateMemPoolAncestors(const std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& entries,\n+                                           setEntries& setAncestors,\n+                                           const uint64_t limitAncestorCount,\n+                                           const uint64_t limitAncestorSize,\n+                                           const uint64_t limitDescendantCount,\n+                                           const uint64_t limitDescendantSize,\n+                                           std::string &errString,\n+                                           const bool fSearchForParents /*=true*/) const\n {\n-    CTxMemPoolEntry::Parents staged_ancestors;\n-    const CTransaction &tx = entry.GetTx();\n+    const size_t total_virtual_size = std::accumulate(entries.cbegin(), entries.cend(), 0,\n+                                      [](int64_t sum, const auto& entry)\n+                                      { return sum + GetVirtualTransactionSize(entry.get().GetTx()); });\n+    const size_t total_count = entries.size();\n \n+    CTxMemPoolEntry::Parents staged_ancestors;\n     if (fSearchForParents) {\n-        // Get parents of this transaction that are in the mempool\n-        // GetMemPoolParents() is only valid for entries in the mempool, so we\n-        // iterate mapTx to find parents.\n-        for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-            std::optional<txiter> piter = GetIter(tx.vin[i].prevout.hash);\n-            if (piter) {\n-                staged_ancestors.insert(**piter);\n-                if (staged_ancestors.size() + 1 > limitAncestorCount) {\n-                    errString = strprintf(\"too many unconfirmed parents [limit: %u]\", limitAncestorCount);\n-                    return false;\n+        for (const auto& entry : entries) {\n+            // Get parents of this transaction that are in the mempool\n+            // GetMemPoolParents() is only valid for entries in the mempool, so we\n+            // iterate mapTx to find parents.\n+            for (const auto& input : entry.get().GetTx().vin) {\n+                std::optional<txiter> piter = GetIter(input.prevout.hash);\n+                if (piter) {\n+                    staged_ancestors.insert(**piter);\n+                    if (staged_ancestors.size() + total_count > limitAncestorCount) {\n+                        errString = strprintf(\"too many unconfirmed parents [limit: %u]\", limitAncestorCount);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r648471295",
      "id" : 648471295,
      "line" : 180,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0ODQ3MTI5NQ==",
      "original_commit_id" : "7d0e9c1970ee14032a2be3ee283511f8c85904c5",
      "original_line" : 180,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 50,
      "pull_request_review_id" : 679872945,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-09T23:26:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/648471295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> For users, yes. I don't think anyone is using it today for L2 testing and I'm not sure it's really well suited to that---testmempoolaccept tells you whether your transaction would be accepted into the current mempool, but L2 testers really want to know whether the transaction will be accepted into a future mempool; a failure now is a reliable harbinger of failure later, but a success now doesn't guarantee success in the future (even ignoring that relay policy can be made more restrictive).\r\n\r\nI'm not convinced this is true. It is impossible for L2 testers to know whether the package would be accepted into a future mempool as fee levels could theoretically be anything up to infinite. So there is nothing to test. The L2 testing would be for checking that the package would be accepted at the current fee levels (e.g. possibly just before broadcasting the package or for general testing at current fee levels) ",
      "created_at" : "2021-06-09T16:21:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#issuecomment-857845044",
      "id" : 857845044,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21800",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1Nzg0NTA0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-09T16:23:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/857845044",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r648484989"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/648484989"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it fair to assume that all instances of `SIZE` now refer to virtualsize? Otherwise, this should perhaps be explicitly \"vsize\".",
      "commit_id" : "1061cf457b021ccf24f394dbb5cc00af575598ba",
      "created_at" : "2021-06-09T16:36:17Z",
      "diff_hunk" : "@@ -14,6 +15,7 @@\n static constexpr uint32_t MAX_PACKAGE_COUNT{25};\n /** Default maximum total virtual size of transactions in a package in KvB. */\n static constexpr uint32_t MAX_PACKAGE_SIZE{101};\n+static_assert(MAX_PACKAGE_SIZE * 4 * 1000 >= MAX_STANDARD_TX_WEIGHT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r648484989",
      "id" : 648484989,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0ODQ4NDk4OQ==",
      "original_commit_id" : "0feb2a65e4ca55f9b469c31d3d7d94287328c5f9",
      "original_line" : 18,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 679872945,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-09T23:26:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/648484989",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r649073219"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/649073219"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added a \"possibly\" to the beginning of the error strings, gated on `total_count > 1`, so that the existing tests that assert expected error messages don't need to be changed.",
      "commit_id" : "1061cf457b021ccf24f394dbb5cc00af575598ba",
      "created_at" : "2021-06-10T10:53:44Z",
      "diff_hunk" : "@@ -187,10 +201,13 @@ bool CTxMemPool::CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntr\n         staged_ancestors.erase(stage);\n         totalSizeWithAncestors += stageit->GetTxSize();\n \n-        if (stageit->GetSizeWithDescendants() + entry.GetTxSize() > limitDescendantSize) {\n+        // When multiple transactions are passed in, the ancestors and descendants of all transactions\n+        // considered together must be within limits even if they are not interdependent. This may be\n+        // stricter than the limits for each individual transaction.\n+        if (stageit->GetSizeWithDescendants() + total_virtual_size > limitDescendantSize) {\n             errString = strprintf(\"exceeds descendant size limit for tx %s [limit: %u]\", stageit->GetTx().GetHash().ToString(), limitDescendantSize);\n             return false;\n-        } else if (stageit->GetCountWithDescendants() + 1 > limitDescendantCount) {\n+        } else if (stageit->GetCountWithDescendants() + total_count > limitDescendantCount) {\n             errString = strprintf(\"too many descendants for tx %s [limit: %u]\", stageit->GetTx().GetHash().ToString(), limitDescendantCount);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r649073219",
      "id" : 649073219,
      "in_reply_to_id" : 647068181,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTA3MzIxOQ==",
      "original_commit_id" : "7d0e9c1970ee14032a2be3ee283511f8c85904c5",
      "original_line" : 211,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 680634416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-10T10:53:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/649073219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r649073470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/649073470"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done, see https://github.com/bitcoin/bitcoin/pull/21800#discussion_r649073219",
      "commit_id" : "1061cf457b021ccf24f394dbb5cc00af575598ba",
      "created_at" : "2021-06-10T10:54:06Z",
      "diff_hunk" : "@@ -151,33 +152,46 @@ void CTxMemPool::UpdateTransactionsFromBlock(const std::vector<uint256> &vHashes\n     }\n }\n \n-bool CTxMemPool::CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString, bool fSearchForParents /* = true */) const\n+bool CTxMemPool::CalculateMemPoolAncestors(const std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& entries,\n+                                           setEntries& setAncestors,\n+                                           const uint64_t limitAncestorCount,\n+                                           const uint64_t limitAncestorSize,\n+                                           const uint64_t limitDescendantCount,\n+                                           const uint64_t limitDescendantSize,\n+                                           std::string &errString,\n+                                           const bool fSearchForParents /*=true*/) const\n {\n-    CTxMemPoolEntry::Parents staged_ancestors;\n-    const CTransaction &tx = entry.GetTx();\n+    const size_t total_virtual_size = std::accumulate(entries.cbegin(), entries.cend(), 0,\n+                                      [](int64_t sum, const auto& entry)\n+                                      { return sum + GetVirtualTransactionSize(entry.get().GetTx()); });\n+    const size_t total_count = entries.size();\n \n+    CTxMemPoolEntry::Parents staged_ancestors;\n     if (fSearchForParents) {\n-        // Get parents of this transaction that are in the mempool\n-        // GetMemPoolParents() is only valid for entries in the mempool, so we\n-        // iterate mapTx to find parents.\n-        for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-            std::optional<txiter> piter = GetIter(tx.vin[i].prevout.hash);\n-            if (piter) {\n-                staged_ancestors.insert(**piter);\n-                if (staged_ancestors.size() + 1 > limitAncestorCount) {\n-                    errString = strprintf(\"too many unconfirmed parents [limit: %u]\", limitAncestorCount);\n-                    return false;\n+        for (const auto& entry : entries) {\n+            // Get parents of this transaction that are in the mempool\n+            // GetMemPoolParents() is only valid for entries in the mempool, so we\n+            // iterate mapTx to find parents.\n+            for (const auto& input : entry.get().GetTx().vin) {\n+                std::optional<txiter> piter = GetIter(input.prevout.hash);\n+                if (piter) {\n+                    staged_ancestors.insert(**piter);\n+                    if (staged_ancestors.size() + total_count > limitAncestorCount) {\n+                        errString = strprintf(\"too many unconfirmed parents [limit: %u]\", limitAncestorCount);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r649073470",
      "id" : 649073470,
      "in_reply_to_id" : 648471295,
      "line" : 180,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTA3MzQ3MA==",
      "original_commit_id" : "7d0e9c1970ee14032a2be3ee283511f8c85904c5",
      "original_line" : 180,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 50,
      "pull_request_review_id" : 680634737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-10T10:54:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/649073470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Incorporated doc suggestions from #22084 (to make it mergeable) and some review comments here, working on adding more edge casey tests that were discussed in PR Review Club last night.",
      "created_at" : "2021-06-10T10:55:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#issuecomment-858522666",
      "id" : 858522666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21800",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1ODUyMjY2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-10T10:55:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/858522666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r649848551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/649848551"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You may find #22097 of interest :)",
      "commit_id" : "1061cf457b021ccf24f394dbb5cc00af575598ba",
      "created_at" : "2021-06-11T09:52:37Z",
      "diff_hunk" : "@@ -14,6 +15,7 @@\n static constexpr uint32_t MAX_PACKAGE_COUNT{25};\n /** Default maximum total virtual size of transactions in a package in KvB. */\n static constexpr uint32_t MAX_PACKAGE_SIZE{101};\n+static_assert(MAX_PACKAGE_SIZE * 4 * 1000 >= MAX_STANDARD_TX_WEIGHT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21800#discussion_r649848551",
      "id" : 649848551,
      "in_reply_to_id" : 648484989,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTg0ODU1MQ==",
      "original_commit_id" : "0feb2a65e4ca55f9b469c31d3d7d94287328c5f9",
      "original_line" : 18,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 681656247,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21800",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-11T09:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/649848551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   }
]
