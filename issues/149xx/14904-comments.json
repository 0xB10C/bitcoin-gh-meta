[
   {
      "author_association" : "MEMBER",
      "body" : "You can already do both of these things.\r\n\r\n>  A viable solution is migrating chainstate to SSD, while keeping blocks stored on HDD.\r\n\r\nYou can start Bitcoin Core with `-blocksdir` to specify the location to store the blocks. The indexes and chainstate databases will remain in the datadir. So you can specify your datadir to be your SSD, and the blocksdir to be your hard drive.\r\n\r\n>  For PCs which are equipped with more than 8GB of RAM but without SSDs, there's another solution: loading all files placed in chainstate into memory before launching the full node.\r\n\r\nUse the `-dbcache` option to increase the size of the database cache. This will cache the chainstate database in memory. If it is larger than 8000 (8 GB), then the entire chainstate database will be cached in memory.",
      "created_at" : "2018-12-10T02:09:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14904#issuecomment-445627259",
      "id" : 445627259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14904",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTYyNzI1OQ==",
      "updated_at" : "2018-12-10T02:09:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445627259",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@achow101 Thank you for instruction!\r\n\r\n> You can start Bitcoin Core with -blocksdir to specify the location to store the blocks.\r\n\r\nIs it possible to make this config available through GUI?\r\n\r\n> If it is larger than 8000 (8 GB), then the entire chainstate database will be cached in memory.\r\n\r\nFor scenarios like #12058, tricks like using `cat chainstate/* > /dev/null` to manually load all files in chainstate seem to work.\r\nAdditionally, what if the computer has exactly 8GB of total RAM? Will storing compressed UTXO database in memory help?\r\nThough `dbcache` is available through GUI, I wish there could be some more hints for the user.",
      "created_at" : "2018-12-10T02:35:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14904#issuecomment-445635911",
      "id" : 445635911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14904",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTYzNTkxMQ==",
      "updated_at" : "2018-12-10T02:35:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445635911",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Is it possible to make this config available through GUI?\r\n\r\n@andronoob this option is new, available from 0.17.0, which was added in #12653. In #14374 the information panel was also extended. I guess you could submit a feature request with the use case.",
      "created_at" : "2018-12-11T01:14:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14904#issuecomment-446035826",
      "id" : 446035826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14904",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NjAzNTgyNg==",
      "updated_at" : "2018-12-11T01:14:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/446035826",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
