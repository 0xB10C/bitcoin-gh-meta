[
   {
      "author_association" : "MEMBER",
      "body" : "Looks good, thanks for splitting it out. utACK https://github.com/bitcoin/bitcoin/pull/12713/commits/6ad2a13cfdd46899c28f21899e107ee7d4c07877",
      "created_at" : "2018-03-18T10:08:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-373986229",
      "id" : 373986229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-18T10:08:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373986229",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 6ad2a13cfdd46899c28f21899e107ee7d4c07877 (Also noting that `-a=no` sets a to true, now)",
      "created_at" : "2018-03-18T10:39:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-373987818",
      "id" : 373987818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-18T10:39:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373987818",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yeah I didn't want to add support for strings like \"no\" \"disabled\" etc. because I don't think there was ever an intention to support non-integer parameters in the first place. If we wanted to support that it's easy enough. You can also use `-noa`, both now and before.",
      "created_at" : "2018-03-18T19:28:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374037341",
      "id" : 374037341,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-18T19:28:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374037341",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK https://github.com/bitcoin/bitcoin/commit/6ad2a13cfdd46899c28f21899e107ee7d4c07877",
      "created_at" : "2018-03-18T19:33:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374037719",
      "id" : 374037719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-18T19:33:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374037719",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6394033?v=4",
         "events_url" : "https://api.github.com/users/donaloconnor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/donaloconnor/followers",
         "following_url" : "https://api.github.com/users/donaloconnor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/donaloconnor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/donaloconnor",
         "id" : 6394033,
         "login" : "donaloconnor",
         "organizations_url" : "https://api.github.com/users/donaloconnor/orgs",
         "received_events_url" : "https://api.github.com/users/donaloconnor/received_events",
         "repos_url" : "https://api.github.com/users/donaloconnor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/donaloconnor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/donaloconnor"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 6ad2a13cfdd46899c28f21899e107ee7d4c07877.",
      "created_at" : "2018-03-18T22:24:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374057837",
      "id" : 374057837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-18T22:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374057837",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r175307783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175307783"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why not throw an error if it's a stupid value? IMHO, for instance, `-txindex=foo` should fail.",
      "commit_id" : "6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
      "created_at" : "2018-03-18T22:51:02Z",
      "diff_hunk" : "@@ -422,16 +422,14 @@ void ReleaseDirectoryLocks()\n /** Interpret string as boolean, for argument parsing */\n static bool InterpretBool(const std::string& strValue)\n {\n-    if (strValue.empty())\n-        return true;\n-    return (atoi(strValue) != 0);\n+    // These values mean false, anything else (including empty string) is true.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r175307783",
      "id" : 175307783,
      "original_commit_id" : "6ad2a13cfdd46899c28f21899e107ee7d4c07877",
      "original_position" : 7,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 104815072,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713",
      "updated_at" : "2018-03-21T07:05:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175307783",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r175309320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175309320"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thinking more about this, with proper argument validation we might as well reject `false` as a value for a boolean argument. This was never supported, so it feels weird to special case it now.",
      "commit_id" : "6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
      "created_at" : "2018-03-18T23:27:48Z",
      "diff_hunk" : "@@ -422,16 +422,14 @@ void ReleaseDirectoryLocks()\n /** Interpret string as boolean, for argument parsing */\n static bool InterpretBool(const std::string& strValue)\n {\n-    if (strValue.empty())\n-        return true;\n-    return (atoi(strValue) != 0);\n+    // These values mean false, anything else (including empty string) is true.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r175309320",
      "id" : 175309320,
      "in_reply_to_id" : 175307783,
      "original_commit_id" : "6ad2a13cfdd46899c28f21899e107ee7d4c07877",
      "original_position" : 7,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 104816553,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713",
      "updated_at" : "2018-03-21T07:05:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175309320",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r175329947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175329947"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@promag Two reasons. First, such a change would not be backwards compatible (a minor point, see below). A better reason is that it enables the `-printtoconsole` change to have a way of disabling the debug log file without actually adding new command line arguments. In other words, I first test if `-debuglogfile` boolean parses as \"false\" (i.e. `-nodebuglogfile` or `-debuglogfile=0`), and if it's not false I re-parse it as a string. There are already a *lot* of possible flags to give Bitcoin, and if we can re-use existing functionality without adding new flags that seems better to me.\r\n\r\n@MarcoFalke I actually agree, as accepting `false` opens the door for `disabled`, `untrue`, `nil`, `void`, `zip`, `null`, `non`, `nein`, ad infinitum.\r\n\r\nMy preferred semantics would be: `-nofoo` sets `foo` to false. Also `-foo=0` sets `foo` to false. Which is exactly what the *intention* of the existing code seems to be. I only handled the `false` flag as there is existing code committed in the Bitcoin repository that relies on it.\r\n\r\nI started this endeavor just wanting to get bitcoind printing to stdout when run in interactive mode. Whatever semantics allow that to happen are fine with me.",
      "commit_id" : "6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
      "created_at" : "2018-03-19T04:31:50Z",
      "diff_hunk" : "@@ -422,16 +422,14 @@ void ReleaseDirectoryLocks()\n /** Interpret string as boolean, for argument parsing */\n static bool InterpretBool(const std::string& strValue)\n {\n-    if (strValue.empty())\n-        return true;\n-    return (atoi(strValue) != 0);\n+    // These values mean false, anything else (including empty string) is true.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r175329947",
      "id" : 175329947,
      "in_reply_to_id" : 175307783,
      "original_commit_id" : "6ad2a13cfdd46899c28f21899e107ee7d4c07877",
      "original_position" : 7,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 104839072,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713",
      "updated_at" : "2018-03-21T07:05:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175329947",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r175450853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175450853"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I first test if -debuglogfile boolean parses as \"false\" (i.e. -nodebuglogfile or -debuglogfile=0), and if it's not false I re-parse it as a string.\r\n\r\nFeel free to discount this opinion, but if the option is `-debuglogfile=<filename>`, I would hope that `-debuglogfile=0` or `-debuglogfile=false` would just create log debug log files `0` or `false` respectively, instead of disabling logging.\r\n\r\nLike JoÃÂ£o and Marco, I would also want ambiguous values passed as boolean options to trigger errors.\r\n\r\nI guess I'm not so much a fan of option parsing trying to be very clever.",
      "commit_id" : "6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
      "created_at" : "2018-03-19T14:20:45Z",
      "diff_hunk" : "@@ -422,16 +422,14 @@ void ReleaseDirectoryLocks()\n /** Interpret string as boolean, for argument parsing */\n static bool InterpretBool(const std::string& strValue)\n {\n-    if (strValue.empty())\n-        return true;\n-    return (atoi(strValue) != 0);\n+    // These values mean false, anything else (including empty string) is true.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r175450853",
      "id" : 175450853,
      "in_reply_to_id" : 175307783,
      "original_commit_id" : "6ad2a13cfdd46899c28f21899e107ee7d4c07877",
      "original_position" : 7,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 104980380,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713",
      "updated_at" : "2018-03-21T07:05:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175450853",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r175484649"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175484649"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "+1 to what @ryanofsky says; if backwards-compatability is not a constraint, doing the least clever thing seems most consistent and likely to lead to the most maintainable code, and long term least confusion for users.\r\n\r\n(This PR seems like an improvement in readability of the argument parsing code, so any further simplification might be for another changeset.)",
      "commit_id" : "6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
      "created_at" : "2018-03-19T15:48:57Z",
      "diff_hunk" : "@@ -422,16 +422,14 @@ void ReleaseDirectoryLocks()\n /** Interpret string as boolean, for argument parsing */\n static bool InterpretBool(const std::string& strValue)\n {\n-    if (strValue.empty())\n-        return true;\n-    return (atoi(strValue) != 0);\n+    // These values mean false, anything else (including empty string) is true.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r175484649",
      "id" : 175484649,
      "in_reply_to_id" : 175307783,
      "original_commit_id" : "6ad2a13cfdd46899c28f21899e107ee7d4c07877",
      "original_position" : 7,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_review_id" : 105020544,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713",
      "updated_at" : "2018-03-21T07:05:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175484649",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/287215?v=4",
         "events_url" : "https://api.github.com/users/hkjn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hkjn/followers",
         "following_url" : "https://api.github.com/users/hkjn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hkjn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hkjn",
         "id" : 287215,
         "login" : "hkjn",
         "organizations_url" : "https://api.github.com/users/hkjn/orgs",
         "received_events_url" : "https://api.github.com/users/hkjn/received_events",
         "repos_url" : "https://api.github.com/users/hkjn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hkjn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hkjn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hkjn"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "<strike>Added \"refactoring\" label, since it doesn't change behavior</strike>\r\n\r\nutACK e944ec998fbd232b05ec9471ae6f19d1d32e0719\r\n\r\n\r\nWould you mind updating the OP, which ends up in the merge commit?",
      "created_at" : "2018-03-19T16:02:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374265678",
      "id" : 374265678,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-19T21:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374265678",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> since it doesn't change behavior\r\n\r\nThis is a change in behaviour. If I take the changes to the unit test, but not the changes to util.cpp, the unit tests fail. If I take the changes to util.cpp, but not the change to wallet_resendwallettransactions.py, then wallet_resendwallettransactions.py fails.\r\n\r\nEDIT: the reason for this is that `atoi(\"false\")` will return 0, so `-walletbroadcast=false` is equivalent to `-`walletbroadcast=0`\r\n\r\natoi reference: http://www.cplusplus.com/reference/cstdlib/atoi/ . The first non-whitespace character in false is not a digit, so atoi(\"false') = 0",
      "created_at" : "2018-03-19T21:09:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374378215",
      "id" : 374378215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-19T21:16:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374378215",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "These are all easy to implement. I can make `-debuglogfile=0` log to a file named `0`, I can make it not log at all, I can special case `-nodebuglogfile` and have that not create a file, I can parse `false` as false or parse it as true, I can make a backwards compatible change and I can make a backwards incompatible change.\r\n\r\nI'm not really sure what to do, as this has gotten an unusual amount of debate for something that is frankly quite banal. I got three different suggestions for how to disable the flag in the original PR:\r\n\r\n * -nodebuglogfile\r\n * -debuglogfile=0\r\n * -debuglogfile=/dev/null\r\n\r\nIf there is not consensus on whether we should change this I will just drop this change altogether and add a brand new flag in the original PR (-disablelogfile).",
      "created_at" : "2018-03-20T07:55:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374506432",
      "id" : 374506432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-20T07:55:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374506432",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm not really sure what to do, as this has gotten an unusual amount of debate for something that is frankly quite banal. I got three different suggestions for how to disable the flag in the original PR:\r\n\r\nFrom my reading of the feedback, I think if you go with `-nodebuglogfile` to disable logging, `-debuglogfile=<file>` to enable logging to a custom location, and `-debuglogfile` and `-debuglogfile=` to enable logging to the default location, you will have no objections. The ambivalence just came from zip/nein/0 stuff, which can be avoided by treating all nonempty string values the same.",
      "created_at" : "2018-03-20T09:40:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374533662",
      "id" : 374533662,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-20T09:40:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374533662",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK e944ec9.\r\n\r\nThis behavior as well as code seems slightly simpler than before, with more\r\ntests.\r\n\r\nI'll note we accept some pretty wacky combinations even after this change though,\r\nthat we may want to make errors in the future, at least for boolean options:\r\n\r\n```\r\n$ bitcoind -printtoconsole=0       # false\r\n$ bitcoind -noprinttoconsole       # false\r\n$ bitcoind -noprinttoconsole=no    # false\r\n$ bitcoind -noprinttoconsole=false # false\r\n$ bitcoind -noprinttoconsole=1     # false\r\n$ bitcoind -printtoconsole=1       # true\r\n$ bitcoind -printtoconsole=no      # true\r\n$ bitcoind -printtoconsole=false   # true\r\n$ bitcoind -noprinttoconsole=0     # true\r\n```",
      "created_at" : "2018-03-20T11:27:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374563792",
      "id" : 374563792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-20T11:27:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374563792",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/287215?v=4",
         "events_url" : "https://api.github.com/users/hkjn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hkjn/followers",
         "following_url" : "https://api.github.com/users/hkjn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hkjn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hkjn",
         "id" : 287215,
         "login" : "hkjn",
         "organizations_url" : "https://api.github.com/users/hkjn/orgs",
         "received_events_url" : "https://api.github.com/users/hkjn/received_events",
         "repos_url" : "https://api.github.com/users/hkjn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hkjn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hkjn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hkjn"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky I will put up another version of this diff with that change.",
      "created_at" : "2018-03-20T17:29:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374686659",
      "id" : 374686659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-20T17:29:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374686659",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Handle arguments like `-nofoo` more explicitly.\r\n\r\nThis change keeps track of whether an option was passed with the `-no` semantics. This way in #12689 I can do something like:\r\n\r\n```c++\r\nif (gArgs.IsArgInverted(\"-debuglogfile\")) {\r\n   ....\r\n}\r\n```\r\n\r\nto see if the debug log file should be disabled.\r\n\r\nI also removed some gratuitous boost and string copies.\r\n\r\n@jnewbery @MarcoFalke  You guys figure out how you want the `-foo=false` case to be handled and let me know what you decide on.",
      "created_at" : "2018-03-20T19:23:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374725138",
      "id" : 374725138,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-20T19:24:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374725138",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated for more consistent naming -- instead of \"negated\" and \"inverted\" I now always use the negated terminology.",
      "created_at" : "2018-03-21T05:41:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374838690",
      "id" : 374838690,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-21T05:41:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374838690",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r176064797"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176064797"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think we should expose this in the code base. Historically, `-nofoo` always implied `-foo=0`, so use cases within the code  base should always compare with the string `\"0\"` to check if foo was unset.\r\n\r\nYes, I know that that would forbid use cases, such as `-myfile=0`, but imo that is acceptable and desirable to keep previous behavior.\r\n\r\nEdit: This is bike shedding, so feel free to ignore.",
      "commit_id" : "6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
      "created_at" : "2018-03-21T12:31:19Z",
      "diff_hunk" : "@@ -242,6 +245,15 @@ class ArgsManager\n      */\n     bool IsArgSet(const std::string& strArg) const;\n \n+    /**\n+     * Return true if the argument was originally passed as a negated option,\n+     * i.e. -nofoo.\n+     *\n+     * @param strArg Argument to get (e.g. \"-foo\")\n+     * @return true if the argument was passed negated\n+     */\n+    bool IsArgNegated(const std::string& strArg) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r176064797",
      "id" : 176064797,
      "original_commit_id" : "6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
      "original_position" : 28,
      "path" : "src/util.h",
      "position" : 28,
      "pull_request_review_id" : 105700208,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713",
      "updated_at" : "2018-03-21T12:33:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176064797",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r176112611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176112611"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Historically, -nofoo always implied -foo=0, so use cases within the code base should always compare with the string \"0\" to check if foo was unset.\r\n\r\nThis is true for boolean options, and should still be true with this PR. I don't think it was ever historically true that specifying \"0\" or \"false\" for path type options would disable those options. At least this isn't the case currently for `-conf` `-debuglogfile` `-pid` `-rpccookiefile` `-wallet` or other path options. So whether or not special path strings are a good idea (I think they are a bad idea), I don't think there is a historic argument for having them.",
      "commit_id" : "6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
      "created_at" : "2018-03-21T14:56:53Z",
      "diff_hunk" : "@@ -242,6 +245,15 @@ class ArgsManager\n      */\n     bool IsArgSet(const std::string& strArg) const;\n \n+    /**\n+     * Return true if the argument was originally passed as a negated option,\n+     * i.e. -nofoo.\n+     *\n+     * @param strArg Argument to get (e.g. \"-foo\")\n+     * @return true if the argument was passed negated\n+     */\n+    bool IsArgNegated(const std::string& strArg) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#discussion_r176112611",
      "id" : 176112611,
      "in_reply_to_id" : 176064797,
      "original_commit_id" : "6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
      "original_position" : 28,
      "path" : "src/util.h",
      "position" : 28,
      "pull_request_review_id" : 105758133,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12713",
      "updated_at" : "2018-03-21T14:56:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176112611",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK the behaviour change. Making only the exact string \"0\" evaluate to false seems like better behaviour to me.\r\n\r\nTested ACK the negated argument change.\r\n\r\nACK the variable name changes.\r\n\r\nTested ACK the WIN32 boost::algorithm -> std::transform change on linux (by commenting out the #ifdef WIN32 in `ArgsManager::ParseParameters()` and `IsSwitchChar()`).\r\n\r\nThis needs release notes since it's a subtle change to the way that arguments are parsed.",
      "created_at" : "2018-03-21T15:27:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12713#issuecomment-374978703",
      "id" : 374978703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12713",
      "updated_at" : "2018-03-21T15:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374978703",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
