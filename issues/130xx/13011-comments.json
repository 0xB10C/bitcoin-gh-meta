[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182260079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182260079"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could use `MakeUnique<const uint256>(SerializeHash(*this, SER_GETHASH, 0));` here",
      "commit_id" : "fae63d51ab252579adbaceb6aaba935bae75de88",
      "created_at" : "2018-04-17T22:21:53Z",
      "diff_hunk" : "@@ -67,18 +67,18 @@ uint256 CTransaction::ComputeHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-uint256 CTransaction::GetWitnessHash() const\n+std::unique_ptr<const uint256> CTransaction::ComputeWitnessHash() const\n {\n     if (!HasWitness()) {\n-        return GetHash();\n+        return nullptr;\n     }\n-    return SerializeHash(*this, SER_GETHASH, 0);\n+    return std::unique_ptr<const uint256>{new uint256{SerializeHash(*this, SER_GETHASH, 0)}};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182260079",
      "id" : 182260079,
      "original_commit_id" : "fae63d51ab252579adbaceb6aaba935bae75de88",
      "original_position" : 12,
      "path" : "src/primitives/transaction.cpp",
      "position" : 12,
      "pull_request_review_id" : 113022730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011",
      "updated_at" : "2018-04-17T22:29:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182260079",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182260771"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182260771"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I believe you could remove some of the boilerplate and repetition here using member initialization in the header:\r\n\r\n```\r\nconst std::unique_ptr<const uint256> m_witness_hash = ComputeWitnessHash();\r\n```\r\n\r\nIt would be nice to do this for the other members, too.",
      "commit_id" : "fae63d51ab252579adbaceb6aaba935bae75de88",
      "created_at" : "2018-04-17T22:25:39Z",
      "diff_hunk" : "@@ -67,18 +67,18 @@ uint256 CTransaction::ComputeHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-uint256 CTransaction::GetWitnessHash() const\n+std::unique_ptr<const uint256> CTransaction::ComputeWitnessHash() const\n {\n     if (!HasWitness()) {\n-        return GetHash();\n+        return nullptr;\n     }\n-    return SerializeHash(*this, SER_GETHASH, 0);\n+    return std::unique_ptr<const uint256>{new uint256{SerializeHash(*this, SER_GETHASH, 0)}};\n }\n \n /* For backward compatibility, the hash is initialized to 0. TODO: remove the need for this default constructor entirely. */\n-CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash() {}\n-CTransaction::CTransaction(const CMutableTransaction &tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n-CTransaction::CTransaction(CMutableTransaction &&tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n+CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash{}, m_witness_hash{nullptr} {}\n+CTransaction::CTransaction(const CMutableTransaction& tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash{ComputeHash()}, m_witness_hash{ComputeWitnessHash()} {}\n+CTransaction::CTransaction(CMutableTransaction&& tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash{ComputeHash()}, m_witness_hash{ComputeWitnessHash()} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182260771",
      "id" : 182260771,
      "original_commit_id" : "fae63d51ab252579adbaceb6aaba935bae75de88",
      "original_position" : 21,
      "path" : "src/primitives/transaction.cpp",
      "position" : 21,
      "pull_request_review_id" : 113022730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011",
      "updated_at" : "2018-04-17T22:29:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182260771",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
