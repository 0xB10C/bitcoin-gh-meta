[
   {
      "author_association" : "MEMBER",
      "body" : "The build failure is due to an eight year old bug in clang: https://bugs.llvm.org/show_bug.cgi?id=8263",
      "created_at" : "2018-04-26T21:38:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-384797131",
      "id" : 384797131,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-04-26T21:38:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384797131",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I like the goal here but I find the changes a bit overwhelming for achieving this.  It seems like we could achieve this more easily in other ways, like (1) just building the hash on demand the first time it's requested, or (2) adding a deserialization flag to CTransaction that instructs it to skip the hash if we're not planning to use it?\r\n\r\n[I'm not sure if (1) is a great solution, since there might be some memory-cache-benefits to building the hash at the time of deserialization, and maybe no one likes the design of having a mutable hash inside of CTransaction, but it would be a super-small diff...]",
      "created_at" : "2018-04-27T13:04:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-384964026",
      "id" : 384964026,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-04-27T13:04:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384964026",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I didn't particularly like option (1) because it makes the caching run-time depended (it is always compiled in, but only used when it happens to be requested), compared to having it compile time enforced by typing `CPureTransaction` instead of `CTransaction`.\r\n\r\nNote that my approach is a variation of option (2) by passing through the type of the transaction to `ReadBlockFromDisk` instead of passing through an additional flag that is converted to a deserialization option and then passed on to the constructor of the transaction.\r\n\r\nSo I think having explicit types is advantageous in both code clarity and cleanness, with the tradeoff of a minimally larger diff.\r\n\r\nNote: I will push a fixed up version of the patch by next Monday to minimize the diff and (hopefully) work around the gcc and clang compiler bugs.",
      "created_at" : "2018-04-27T14:24:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-384985819",
      "id" : 384985819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-04-27T14:24:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384985819",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fair enough, I just don't want us to overlook simpler solutions that might be acceptable.  I'm happy to let the reviewers with stronger feelings about the design of these data types chime in.",
      "created_at" : "2018-04-27T14:40:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-384990768",
      "id" : 384990768,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-04-27T14:40:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384990768",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I just pushed a version that might compile on our buggy clang and that is according to the design that @sipa requested in https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-383145046\r\n\r\n> Then at the very least introduce alternate versions of CTransaction/CBlock that don't precompute anything, for use in reindexing and rescanning and serving blocks from disk.",
      "created_at" : "2018-04-27T15:09:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-384999627",
      "id" : 384999627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-04-27T15:09:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384999627",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@MarcoFalke Thanks for working on this, I'll review soon.\r\n\r\n@sdaftuar My preference is having separate types, for these reasons:\r\n* Having lazily-computed hashes in transactions involves synchronization structures (atomics at least to avoid multiple threads simultaneously getting a hash for the first time).\r\n* Smaller in memory in places where it's not needed.\r\n* We have the option of later moving the with-hash types into consensus code and not exposing it.",
      "created_at" : "2018-04-27T20:57:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-385092217",
      "id" : 385092217,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-04-27T20:57:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385092217",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This seems like very useful work, but for serving out historic blocks it would perhaps be better if we could (largely) avoid deserializing and re-serializing them entirely as doing so is tremendously expensive (involving a billionity mallocs). Better is better however. ",
      "created_at" : "2018-05-01T18:15:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-385745421",
      "id" : 385745421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-05-01T18:15:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385745421",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : ">  Having lazily-computed hashes in transactions involves synchronization structures (atomics at least to avoid multiple threads simultaneously getting a hash for the first time).\r\n\r\nAgree. The main thing I don't like about lazy evaluation is that it's much harder to reason about performance then. I think I prefer the current explicit solution, even though much more verbose.\r\n\r\n> This seems like very useful work, but for serving out historic blocks it would perhaps be better if we could (largely) avoid deserializing and re-serializing them entirely as doing so is tremendously expensive (involving a billionity mallocs). Better is better however.\r\n\r\nYes - I was also about to say this. How difficult would it be to serve the data directly from disk, without serialization/deserialization roundtrip?\r\n\r\n~~Edit: to do this efficiently would require a change to the on-disk format to add the size, or adding the on-disk block size to the block index.~~ OH this is actually already there, situated before the `nPos`:\r\n```\r\n    // Write index header\r\n    unsigned int nSize = GetSerializeSize(fileout, block);\r\n    fileout << messageStart << nSize;\r\n```",
      "created_at" : "2018-05-02T11:09:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-385942233",
      "id" : 385942233,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-05-02T11:18:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385942233",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> but for serving out historic blocks it would perhaps be better if we could (largely) avoid deserializing and re-serializing them entirely\r\n\r\nMy dumb try at this: #13151",
      "created_at" : "2018-05-02T12:17:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-385958355",
      "id" : 385958355,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-05-02T12:17:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385958355",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Even with 13151 something like this might very useful for making _rescan_ faster...  rescan is slow enough to make it largely unusable now.  I'd been thinking deserialization was worse than hashing in it, but the performance numbers above make me wonder.",
      "created_at" : "2018-05-02T18:08:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-386069372",
      "id" : 386069372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-05-02T18:08:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386069372",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Certainly Concept ACK if we can get rescan up for this (even as a separate PR), just using it for serving blocks for old nodes is maybe less worth it (at least post-13151).",
      "created_at" : "2018-05-02T19:57:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-386101356",
      "id" : 386101356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-05-02T19:57:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386101356",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Will do a rebase once the other pull is merged",
      "created_at" : "2018-05-02T20:00:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13098#issuecomment-386102286",
      "id" : 386102286,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13098",
      "updated_at" : "2018-05-02T20:00:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386102286",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
