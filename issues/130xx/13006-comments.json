[
   {
      "author_association" : "MEMBER",
      "body" : "This might be useful if used appropriately. What we mostly care in functional tests is the behaviour (on the rpc and p2p interface) not so much the by-products that end up in the debug.log. One exception is where the rpc or p2p interface don't provide sufficient information to be sure the behaviour happened for the right reason.\r\n\r\nIt seems asserting regex on the debug log can be done, but in almost all cases it would be orthogonal or rather in addition to existing test patterns. That is because a string logged to a text file does not imply the thing actually happened in the test. So if you expected, let's say a disconnect, you could wait until you observe that disconnect in the debug log and then (in addition) wait until you observe the disconnect in the network. Rather, it could make more sense to only wait for the disconnect happening in the network and then go read the debug log of the node that initiated the disconnect and assert on the reason for the disconnect, since those are usually not communicated via existing interfaces.\r\n\r\nIt seems that is what your example use case is doing, so Concept ACK on that, but Concept NACK on other use cases.",
      "created_at" : "2018-04-17T12:56:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/13006#issuecomment-381982311",
      "id" : 381982311,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13006",
      "updated_at" : "2018-04-17T12:56:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381982311",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK!  I wish I had more examples at the top of my head but I'm pretty sure I've run into plenty of situations where an assert_debug_log() would have made a test more robust, by ensuring that some observed behavior happened for the reason we expected and not multiple other changes that broke the testing environment's assumptions.  \r\n\r\nOne example along these lines that comes to mind which is analogous to your suggestion is something like: `assert_not_in_debug_log(node, \"Unable to bind RPC port...\")`.  This type of error comes up all the time for me in my CI runs of `test_runner`, resulting in cascading failures whenever something goes wrong in a way that prevents bitcoind from shutting down.  This would be much easier to spot if we had scripted tools for looking at the debug log to eg ensure that a node starts up correctly when that's what we expect.\r\n\r\nAnother thing that comes to mind is when you're manually debugging something, being able to inspect the debug log from the test framework could be a powerful tool.\r\n\r\nSo while this could become a crutch for poorly written tests, I would appreciate the addition to the toolkit of something that could also help improve test robustness and error detection.",
      "created_at" : "2018-04-17T13:17:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/13006#issuecomment-381988776",
      "id" : 381988776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13006",
      "updated_at" : "2018-04-17T13:17:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381988776",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\n\r\nDo you think it would have a big impact in the functional test performance, even an optimised implementation?",
      "created_at" : "2018-04-17T13:40:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/13006#issuecomment-381996013",
      "id" : 381996013,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13006",
      "updated_at" : "2018-04-17T13:40:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381996013",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag I don't think it will have any meaningful impact on test performance, given that we currently use polling loops all over the place. And it seems the example code above would only read the lines that were written to since the last read.",
      "created_at" : "2018-04-17T13:46:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/13006#issuecomment-381998071",
      "id" : 381998071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13006",
      "updated_at" : "2018-04-17T13:46:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381998071",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke I'm just asking because of the \"double flush\" (or whatever is done there) and the file open.\r\n\r\nBTW, for me this would be the first time to see log expectations. Anyone knows of other test suite doing the same?",
      "created_at" : "2018-04-17T14:18:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/13006#issuecomment-382009352",
      "id" : 382009352,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13006",
      "updated_at" : "2018-04-17T14:18:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382009352",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
