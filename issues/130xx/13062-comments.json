[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r183571007"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183571007"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Note, equivalent to `count = std::dynamic_extent` in std::span.",
      "commit_id" : "de61601d1f320b3c9094c82b823a204a52a204f3",
      "created_at" : "2018-04-23T23:54:52Z",
      "diff_hunk" : "@@ -23,7 +23,12 @@ class Span\n     constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n \n     constexpr C* data() const noexcept { return m_data; }\n+    constexpr C* begin() const noexcept { return m_data; }\n+    constexpr C* end() const noexcept { return m_data + m_size; }\n     constexpr std::ptrdiff_t size() const noexcept { return m_size; }\n+    constexpr C& operator[](std::ptrdiff_t pos) const noexcept { return m_data[pos]; }\n+\n+    constexpr Span<C> subspan(std::ptrdiff_t offset) const noexcept { return Span<C>(m_data + offset, m_size - offset); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r183571007",
      "id" : 183571007,
      "original_commit_id" : "3fd0d0bf52c5fd6f5a40e22460fcc666e4eea2d0",
      "original_position" : 9,
      "path" : "src/span.h",
      "position" : 9,
      "pull_request_review_id" : 114594507,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062",
      "updated_at" : "2018-04-28T00:04:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183571007",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Makes `interpreter.cpp` more self-contained, that's good.\r\nVerified that:\r\n- Consensus `IsPayToScriptHash` matches `CScript::IsPayToScriptHash`: copy-only apart from variable names\r\n- Consensus `IsWitnessProgram` matches `CScript::IsWitnessProgram`: \r\n  - a size_t becomes ptr_diff_t: not an issue as only positive values are possible (unsigned char + 2)\r\n  - `std::vector<unsigned char>(this->begin() + 2, this->end())` becomes `script.subspan(2)`: should be ok, it's defined as `Span(m_data + offset, m_size - offset)`\r\n- Consensus `IsPushOnly` matches `CScript::IsPushOnly`:\r\n  - `pc` becomes `Span` instead of a `const_iterator`: effective behavior is the same\r\n  - `GetOp` becomes `GetScriptOp`: GetOp is already defined in that way, so should be fine\r\n\r\nOther changes look straightforward.\r\n\r\nutACK 91c12000dd97d7b9b9c82d1bbc92c7bbadd3d6ed",
      "created_at" : "2018-04-25T13:51:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#issuecomment-384294167",
      "id" : 384294167,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13062",
      "updated_at" : "2018-04-25T13:51:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384294167",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems to be lacking a bunch of motivation. Can you clarify *why* you want to run a script stored in a span?",
      "created_at" : "2018-04-27T16:40:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#issuecomment-385026068",
      "id" : 385026068,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13062",
      "updated_at" : "2018-04-27T16:40:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385026068",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@TheBlueMatt They're not stored in a Span; a Span is just a way to refer to a script stored anywhere (vector, array, prevector, whatever custom structure that can hold a continuous sequence of bytes).\n\nI'll add some more motivation.",
      "created_at" : "2018-04-27T16:51:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#issuecomment-385029327",
      "id" : 385029327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13062",
      "updated_at" : "2018-04-27T16:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385029327",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Suresure, I was asking for motivation of where we want to do this in the immediate future (do you have any branches that run scripts in non-prevector form?). The only place I can think of it being useful is in libbitcoinconsensus.",
      "created_at" : "2018-04-27T16:55:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#issuecomment-385030495",
      "id" : 385030495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13062",
      "updated_at" : "2018-04-27T16:55:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385030495",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@TheBlueMatt No code to show, but I added some thoughts to the PR description.",
      "created_at" : "2018-04-27T17:02:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#issuecomment-385032610",
      "id" : 385032610,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13062",
      "updated_at" : "2018-04-27T17:02:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385032610",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah, the scriptPubKey/scriptSig distinction seems like a reasonable idea. Would love to see a branch with that implemented to see the feasibility of using this in the short-term after a merge.",
      "created_at" : "2018-04-27T17:12:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#issuecomment-385035134",
      "id" : 385035134,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13062",
      "updated_at" : "2018-04-27T17:12:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385035134",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184820685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184820685"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe this needs a check before dereference. Before, it would've been caught in the real GetScriptOp() by the newly removed\r\n```c++\r\nif (pc >= end)\r\n    return false;\r\n```",
      "commit_id" : "de61601d1f320b3c9094c82b823a204a52a204f3",
      "created_at" : "2018-04-27T22:29:48Z",
      "diff_hunk" : "@@ -304,31 +303,36 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n         }\n         else if (opcode == OP_PUSHDATA1)\n         {\n-            if (end - pc < 1)\n-                return false;\n-            nSize = *pc++;\n+            if (script.size() < 1) return false;\n+            nSize = script[0];\n+            script = script.subspan(1);\n         }\n         else if (opcode == OP_PUSHDATA2)\n         {\n-            if (end - pc < 2)\n-                return false;\n-            nSize = ReadLE16(&pc[0]);\n-            pc += 2;\n+            if (script.size() < 2) return false;\n+            nSize = ReadLE16(script.data());\n+            script = script.subspan(2);\n         }\n         else if (opcode == OP_PUSHDATA4)\n         {\n-            if (end - pc < 4)\n-                return false;\n-            nSize = ReadLE32(&pc[0]);\n-            pc += 4;\n+            if (script.size() < 4) return false;\n+            nSize = ReadLE32(script.data());\n+            script = script.subspan(4);\n         }\n-        if (end - pc < 0 || (unsigned int)(end - pc) < nSize)\n-            return false;\n-        if (pvchRet)\n-            pvchRet->assign(pc, pc + nSize);\n-        pc += nSize;\n+        if (script.size() < nSize) return false;\n+        if (pvchRet) pvchRet->assign(script.begin(), script.begin() + nSize);\n+        script = script.subspan(nSize);\n     }\n \n     opcodeRet = static_cast<opcodetype>(opcode);\n     return true;\n }\n+\n+bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator end, opcodetype& opcodeRet, std::vector<unsigned char>* pvchRet)\n+{\n+    Span<const unsigned char> script(&*pc, end - pc);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184820685",
      "id" : 184820685,
      "original_commit_id" : "f31d811228b028d4059deb8bb3b679bd10d463a7",
      "original_position" : 78,
      "path" : "src/script/script.cpp",
      "position" : null,
      "pull_request_review_id" : 116100048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062",
      "updated_at" : "2018-04-28T00:04:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184820685",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184822784"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184822784"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems unnecessarily brittle. How about caching the before-size and adding back the difference from the final script.size() ?",
      "commit_id" : "de61601d1f320b3c9094c82b823a204a52a204f3",
      "created_at" : "2018-04-27T22:45:40Z",
      "diff_hunk" : "@@ -304,31 +303,36 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n         }\n         else if (opcode == OP_PUSHDATA1)\n         {\n-            if (end - pc < 1)\n-                return false;\n-            nSize = *pc++;\n+            if (script.size() < 1) return false;\n+            nSize = script[0];\n+            script = script.subspan(1);\n         }\n         else if (opcode == OP_PUSHDATA2)\n         {\n-            if (end - pc < 2)\n-                return false;\n-            nSize = ReadLE16(&pc[0]);\n-            pc += 2;\n+            if (script.size() < 2) return false;\n+            nSize = ReadLE16(script.data());\n+            script = script.subspan(2);\n         }\n         else if (opcode == OP_PUSHDATA4)\n         {\n-            if (end - pc < 4)\n-                return false;\n-            nSize = ReadLE32(&pc[0]);\n-            pc += 4;\n+            if (script.size() < 4) return false;\n+            nSize = ReadLE32(script.data());\n+            script = script.subspan(4);\n         }\n-        if (end - pc < 0 || (unsigned int)(end - pc) < nSize)\n-            return false;\n-        if (pvchRet)\n-            pvchRet->assign(pc, pc + nSize);\n-        pc += nSize;\n+        if (script.size() < nSize) return false;\n+        if (pvchRet) pvchRet->assign(script.begin(), script.begin() + nSize);\n+        script = script.subspan(nSize);\n     }\n \n     opcodeRet = static_cast<opcodetype>(opcode);\n     return true;\n }\n+\n+bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator end, opcodetype& opcodeRet, std::vector<unsigned char>* pvchRet)\n+{\n+    Span<const unsigned char> script(&*pc, end - pc);\n+    bool ret = GetScriptOp(script, opcodeRet, pvchRet);\n+    assert(&*script.end() == &*end);\n+    pc += (&*script.begin() - &*pc);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184822784",
      "id" : 184822784,
      "original_commit_id" : "f31d811228b028d4059deb8bb3b679bd10d463a7",
      "original_position" : 81,
      "path" : "src/script/script.cpp",
      "position" : null,
      "pull_request_review_id" : 116100048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062",
      "updated_at" : "2018-04-28T00:04:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184822784",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184826273"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184826273"
         }
      },
      "author_association" : "MEMBER",
      "body" : "how did ```script[1]``` sneak in here?",
      "commit_id" : "de61601d1f320b3c9094c82b823a204a52a204f3",
      "created_at" : "2018-04-27T23:16:45Z",
      "diff_hunk" : "@@ -1383,6 +1383,44 @@ bool TransactionSignatureChecker::CheckSequence(const CScriptNum& nSequence) con\n     return true;\n }\n \n+/** Consensus-critical analogue of CScript::IsPayToScriptHash. */\n+static bool IsPayToScriptHash(const Span<const unsigned char>& script)\n+{\n+    return script.size() == 23 &&\n+           script[0] == OP_HASH160 &&\n+           script[1] == 0x14 &&\n+           script[22] == OP_EQUAL;\n+}\n+\n+/** Consensus-critical analogue of CScript::IsWitnessProgram. */\n+static bool IsWitnessProgram(const Span<const unsigned char>& script, int& version, Span<const unsigned char>& program)\n+{\n+    if (script.size() < 4 || script.size() > 42) return false;\n+    if (script[0] != OP_0 && (script[0] < OP_1 || script[1] > OP_16)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184826273",
      "id" : 184826273,
      "original_commit_id" : "5aa2610dd4152a0de0953c26fce3ef7132b0ff00",
      "original_position" : 17,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 116100048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062",
      "updated_at" : "2018-04-28T00:04:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184826273",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184830547"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184830547"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed, going to add a test.",
      "commit_id" : "de61601d1f320b3c9094c82b823a204a52a204f3",
      "created_at" : "2018-04-28T00:04:36Z",
      "diff_hunk" : "@@ -1383,6 +1383,44 @@ bool TransactionSignatureChecker::CheckSequence(const CScriptNum& nSequence) con\n     return true;\n }\n \n+/** Consensus-critical analogue of CScript::IsPayToScriptHash. */\n+static bool IsPayToScriptHash(const Span<const unsigned char>& script)\n+{\n+    return script.size() == 23 &&\n+           script[0] == OP_HASH160 &&\n+           script[1] == 0x14 &&\n+           script[22] == OP_EQUAL;\n+}\n+\n+/** Consensus-critical analogue of CScript::IsWitnessProgram. */\n+static bool IsWitnessProgram(const Span<const unsigned char>& script, int& version, Span<const unsigned char>& program)\n+{\n+    if (script.size() < 4 || script.size() > 42) return false;\n+    if (script[0] != OP_0 && (script[0] < OP_1 || script[1] > OP_16)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184830547",
      "id" : 184830547,
      "in_reply_to_id" : 184826273,
      "original_commit_id" : "5aa2610dd4152a0de0953c26fce3ef7132b0ff00",
      "original_position" : 17,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 116111518,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062",
      "updated_at" : "2018-04-28T00:04:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184830547",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184830564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184830564"
         }
      },
      "author_association" : "OWNER",
      "body" : "Good catch, fixed.",
      "commit_id" : "de61601d1f320b3c9094c82b823a204a52a204f3",
      "created_at" : "2018-04-28T00:04:46Z",
      "diff_hunk" : "@@ -304,31 +303,36 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n         }\n         else if (opcode == OP_PUSHDATA1)\n         {\n-            if (end - pc < 1)\n-                return false;\n-            nSize = *pc++;\n+            if (script.size() < 1) return false;\n+            nSize = script[0];\n+            script = script.subspan(1);\n         }\n         else if (opcode == OP_PUSHDATA2)\n         {\n-            if (end - pc < 2)\n-                return false;\n-            nSize = ReadLE16(&pc[0]);\n-            pc += 2;\n+            if (script.size() < 2) return false;\n+            nSize = ReadLE16(script.data());\n+            script = script.subspan(2);\n         }\n         else if (opcode == OP_PUSHDATA4)\n         {\n-            if (end - pc < 4)\n-                return false;\n-            nSize = ReadLE32(&pc[0]);\n-            pc += 4;\n+            if (script.size() < 4) return false;\n+            nSize = ReadLE32(script.data());\n+            script = script.subspan(4);\n         }\n-        if (end - pc < 0 || (unsigned int)(end - pc) < nSize)\n-            return false;\n-        if (pvchRet)\n-            pvchRet->assign(pc, pc + nSize);\n-        pc += nSize;\n+        if (script.size() < nSize) return false;\n+        if (pvchRet) pvchRet->assign(script.begin(), script.begin() + nSize);\n+        script = script.subspan(nSize);\n     }\n \n     opcodeRet = static_cast<opcodetype>(opcode);\n     return true;\n }\n+\n+bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator end, opcodetype& opcodeRet, std::vector<unsigned char>* pvchRet)\n+{\n+    Span<const unsigned char> script(&*pc, end - pc);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184830564",
      "id" : 184830564,
      "in_reply_to_id" : 184820685,
      "original_commit_id" : "f31d811228b028d4059deb8bb3b679bd10d463a7",
      "original_position" : 78,
      "path" : "src/script/script.cpp",
      "position" : null,
      "pull_request_review_id" : 116111538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062",
      "updated_at" : "2018-04-28T00:04:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184830564",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184830577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184830577"
         }
      },
      "author_association" : "OWNER",
      "body" : "That's indeed cleaner; done.",
      "commit_id" : "de61601d1f320b3c9094c82b823a204a52a204f3",
      "created_at" : "2018-04-28T00:04:58Z",
      "diff_hunk" : "@@ -304,31 +303,36 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n         }\n         else if (opcode == OP_PUSHDATA1)\n         {\n-            if (end - pc < 1)\n-                return false;\n-            nSize = *pc++;\n+            if (script.size() < 1) return false;\n+            nSize = script[0];\n+            script = script.subspan(1);\n         }\n         else if (opcode == OP_PUSHDATA2)\n         {\n-            if (end - pc < 2)\n-                return false;\n-            nSize = ReadLE16(&pc[0]);\n-            pc += 2;\n+            if (script.size() < 2) return false;\n+            nSize = ReadLE16(script.data());\n+            script = script.subspan(2);\n         }\n         else if (opcode == OP_PUSHDATA4)\n         {\n-            if (end - pc < 4)\n-                return false;\n-            nSize = ReadLE32(&pc[0]);\n-            pc += 4;\n+            if (script.size() < 4) return false;\n+            nSize = ReadLE32(script.data());\n+            script = script.subspan(4);\n         }\n-        if (end - pc < 0 || (unsigned int)(end - pc) < nSize)\n-            return false;\n-        if (pvchRet)\n-            pvchRet->assign(pc, pc + nSize);\n-        pc += nSize;\n+        if (script.size() < nSize) return false;\n+        if (pvchRet) pvchRet->assign(script.begin(), script.begin() + nSize);\n+        script = script.subspan(nSize);\n     }\n \n     opcodeRet = static_cast<opcodetype>(opcode);\n     return true;\n }\n+\n+bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator end, opcodetype& opcodeRet, std::vector<unsigned char>* pvchRet)\n+{\n+    Span<const unsigned char> script(&*pc, end - pc);\n+    bool ret = GetScriptOp(script, opcodeRet, pvchRet);\n+    assert(&*script.end() == &*end);\n+    pc += (&*script.begin() - &*pc);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13062#discussion_r184830577",
      "id" : 184830577,
      "in_reply_to_id" : 184822784,
      "original_commit_id" : "f31d811228b028d4059deb8bb3b679bd10d463a7",
      "original_position" : 81,
      "path" : "src/script/script.cpp",
      "position" : null,
      "pull_request_review_id" : 116111556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13062",
      "updated_at" : "2018-04-28T00:04:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184830577",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
