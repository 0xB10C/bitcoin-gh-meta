{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Add compile time checking for all `cs_main` runtime locking assertions.\r\n\r\nThis PR is a subset of #12665. The PR was broken up to make reviewing easier.\r\n\r\nThe intention is that literally all `EXCLUSIVE_LOCKS_REQUIRED`/`LOCKS_EXCLUDED`:s added in this PR should follow either directly or indirectly from `AssertLockHeld(Ã¢ÂÂ¦)`/`AssertLockNotHeld(Ã¢ÂÂ¦)`:s already existing in the repo.\r\n\r\nConsider the case where function `A(Ã¢ÂÂ¦)` contains `AssertLockHeld(cs_foo)` (without\r\nfirst locking `cs_foo` in `A`), and that `B(Ã¢ÂÂ¦)` calls `A(Ã¢ÂÂ¦)` (without first locking `cs_main`):\r\n* It _directly_ follows that: `A(Ã¢ÂÂ¦)` should have an `EXCLUSIVE_LOCKS_REQUIRED(cs_foo)` annotation.\r\n* It _indirectly_ follows that: `B(Ã¢ÂÂ¦)` should have an `EXCLUSIVE_LOCKS_REQUIRED(cs_foo)` annotation.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13083/comments",
   "created_at" : "2018-04-25T21:37:52Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13083/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/13083",
   "id" : 317803198,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13083/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 13083,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/13083.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13083",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/13083.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13083"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Add compile time checking for all cs_main runtime locking assertions",
   "updated_at" : "2018-04-25T21:37:52Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13083",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
