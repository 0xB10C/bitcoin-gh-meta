[
   {
      "body" : "Looks like in addition to this problem, there are several other similar issues where being given the wrong witness could blind a node to a transaction:\r\n\r\n- sigops checks (both the overall sigops check as well as the bytes-per-sigop check)\r\n- ancestor/descendant size\r\n- replace-by-fee logic\r\n",
      "created_at" : "2016-07-07T15:07:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8279#issuecomment-231106619",
      "id" : 231106619,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8279",
      "updated_at" : "2016-07-08T01:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/231106619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Hmm, that's a reasonably long list.\r\n\r\nI know we spoke a bit about how a wtxid-based mempool could work; might be worthwhile writing some of that down for sake of reference, and figuring out what it'd look like if we released segwit as-is and then added that on later.",
      "created_at" : "2016-07-09T23:04:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8279#issuecomment-231560665",
      "id" : 231560665,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8279",
      "updated_at" : "2016-07-09T23:04:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/231560665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "@petertodd, if the mempool and rejects filter worked based on wtxid, would INV packets also be updated to work based on wtxid? If not, the rejects filter would be useless since the node needs to know to not re-request rejected txs that are listed in INVs (which only use txid).\r\n\r\nThere might still be a solution here to avoid changing the p2p protocol and mempool. The one I'm thinking of: if the `GetTransactionCost()` check fails, do a contextual check on the on the tx to verify that the witnesses are actually redeeming witness program coins. If they're not, ban the peer but do _not_ add the txid to the rejects filter.\r\n\r\nMaybe do this for every failure before it gets to the contextual checks. Once it hits the contextual checks in the mempool, AreInputsStandard could check to make sure witnesses are redeeming witness program coins before continuing.\r\n\r\nNot ideal, but maybe good enough in practice.\r\n\r\nedit: Hmm, nevermind my idea. I guess an attacker could still mutate real witness transactions without changing the txid. A wtxid mempool+inv-packets might be the only solution. This is rough.",
      "created_at" : "2016-07-10T04:45:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8279#issuecomment-231570564",
      "id" : 231570564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8279",
      "updated_at" : "2016-07-10T08:31:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/231570564",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/470564?v=3",
         "events_url" : "https://api.github.com/users/chjj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/chjj/followers",
         "following_url" : "https://api.github.com/users/chjj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/chjj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/chjj",
         "id" : 470564,
         "login" : "chjj",
         "organizations_url" : "https://api.github.com/users/chjj/orgs",
         "received_events_url" : "https://api.github.com/users/chjj/received_events",
         "repos_url" : "https://api.github.com/users/chjj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/chjj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/chjj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/chjj"
      }
   },
   {
      "body" : "@chjj I hadn't written it up yet, but this is what I concluded as well.  Post-segwit, the fee rate check that we perform to determine whether a transaction might be able to enter the mempool can fail, without us being able to tell whether the txid is permanently bad -- eg for all you know there exists some slightly smaller witness which causes the feerate to be just high enough to make it in to the mempool.\r\n\r\nAs I think the fee rate check is far and away the most valuable thing to be caching success/failure in `recentRejects`, either we have to scrap that performance improvement, or maybe rework mempool acceptance to not perform these checks until after scripts have been validated (not sure how feasible this would be), or somehow remember and request transactions based on what we remember about the particular witness we previously evaluated.  This last approach -- reworking the p2p-layer to be based on wtxid's when upgraded peers communicate -- seems the most logical to me, but others may have a different view?",
      "created_at" : "2016-07-10T11:30:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8279#issuecomment-231584239",
      "id" : 231584239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8279",
      "updated_at" : "2016-07-10T11:30:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/231584239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Some ideas (based on an IRC discussion yesterday):\r\n\r\n1. Switch to a wtxids based invs/getdatas, as well as wtxid-indexed mempool, relay pool, and p2p logic.\r\n2. Relay resource cost information along with invs (fees, size, sigops). This would allow the receiver to decide ahead of time whether to accept a transaction, removing this as reason for entering the rejection cache (making it much less needed).\r\n3. Alternatively, extend BIP133 (feefilter) to have mandatory behaviour. This effectively does the same as (2), except the sender is responsible for filtering ahead of time.\r\n4. Remove the \"invalid witness does not cause insertion in rejectioncache\" rule entirely. This would simplify the code a lot, and (with the current protocol) does not allow an attacker to do anything they can't do already (independent from segwit), namely preventing a single peer from hearing about a transaction before it confirms. The rule does not work when transactions have intentionally malleable witnesses anyway.\r\n5. Verify all received transactions fully (assuming we requested them), even if we know we won't accept them due to feerate limits. This would allow us to determine conclusively whether the transaction was invalid (in which case we should never ask for it again) or malleated (in which case we should ban the node that sent it, but ask for it again from other peers). This has been suggested long before segwit as a means to detect other DoS attacks. Since by the time we get this option we've done most of the work already anyway (bandwidth was wasted, and UTXO entries were retrieved from the database), doing the actual script validation is not a huge amount of work anymore.\r\n\r\nMy preference is initially just (4), and perhaps (3) and (5) at some point as orthogonal optimizations. Things like (1) and (2) can be incorportated in a future reworked relay mechanism, perhaps one that works based on mempool synchronization rather than individual transaction relay.",
      "created_at" : "2016-07-10T12:14:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8279#issuecomment-231585955",
      "id" : 231585955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8279",
      "updated_at" : "2016-07-10T12:14:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/231585955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
