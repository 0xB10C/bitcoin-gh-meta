[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8203#discussion_r67096943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8203"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/67096943"
         }
      },
      "body" : "Note that most distributions already have something along those lines, e.g. on Debian-based there is a debian-tor group, and you make cookie auth work by adding users who need it to the debian-tor group. I'd reword this to just say that you need to make sure the bitcoind user is part of the Tor group.\r\n\r\nAnyone know how non-Debian distros do this?",
      "commit_id" : "5a8de3d299df59e3b409486704239917475ab521",
      "created_at" : "2016-06-15T04:08:34Z",
      "diff_hunk" : "@@ -95,12 +95,18 @@ Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n API, to create and destroy 'ephemeral' hidden services programmatically.\n Bitcoin Core has been updated to make use of this.\n \n-This means that if Tor is running (and proper authorization is available),\n-Bitcoin Core automatically creates a hidden service to listen on, without\n-manual configuration. This will positively affect the number of available\n-.onion nodes.\n+This means that if Tor is running (and proper authentication has been configured),\n+Bitcoin Core automatically creates a hidden service to listen on. This will positively \n+affect the number of available .onion nodes.\n \n This new feature is enabled by default if Bitcoin Core is listening, and\n a connection to Tor can be made. It can be configured with the `-listenonion`,\n `-torcontrol` and `-torpassword` settings. To show verbose debugging\n information, pass `-debug=tor`.\n+\n+Connecting to Tor's control socket API requires one of two authentication methods to be \n+configured.  The most straightforward is the use of the `-torpassword` flag and a `hash-password` \n+which can be enabled in Tor configuration.  Alternatively the user running bitcoind must have \n+write access to the `CookieAuthFile` specified in Tor configuration.  This can be achieved \n+by adding both the user running tor, and the user running bitcoind to the same group and setting \n+permissions appropriately.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8203#discussion_r67096943",
      "id" : 67096943,
      "original_commit_id" : "5a8de3d299df59e3b409486704239917475ab521",
      "original_position" : 22,
      "path" : "doc/tor.md",
      "position" : 22,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8203",
      "updated_at" : "2016-06-15T04:08:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/67096943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8203#discussion_r67308274"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8203"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/67308274"
         }
      },
      "body" : "Yes, giving an example for Debian may help here.",
      "commit_id" : "5a8de3d299df59e3b409486704239917475ab521",
      "created_at" : "2016-06-16T08:48:07Z",
      "diff_hunk" : "@@ -95,12 +95,18 @@ Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n API, to create and destroy 'ephemeral' hidden services programmatically.\n Bitcoin Core has been updated to make use of this.\n \n-This means that if Tor is running (and proper authorization is available),\n-Bitcoin Core automatically creates a hidden service to listen on, without\n-manual configuration. This will positively affect the number of available\n-.onion nodes.\n+This means that if Tor is running (and proper authentication has been configured),\n+Bitcoin Core automatically creates a hidden service to listen on. This will positively \n+affect the number of available .onion nodes.\n \n This new feature is enabled by default if Bitcoin Core is listening, and\n a connection to Tor can be made. It can be configured with the `-listenonion`,\n `-torcontrol` and `-torpassword` settings. To show verbose debugging\n information, pass `-debug=tor`.\n+\n+Connecting to Tor's control socket API requires one of two authentication methods to be \n+configured.  The most straightforward is the use of the `-torpassword` flag and a `hash-password` \n+which can be enabled in Tor configuration.  Alternatively the user running bitcoind must have \n+write access to the `CookieAuthFile` specified in Tor configuration.  This can be achieved \n+by adding both the user running tor, and the user running bitcoind to the same group and setting \n+permissions appropriately.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8203#discussion_r67308274",
      "id" : 67308274,
      "original_commit_id" : "5a8de3d299df59e3b409486704239917475ab521",
      "original_position" : 22,
      "path" : "doc/tor.md",
      "position" : 22,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8203",
      "updated_at" : "2016-06-16T08:48:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/67308274",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8203#discussion_r67308558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8203"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/67308558"
         }
      },
      "body" : "I'd reword this a bit - cookie authentication is by far the most straightforward (even automatic) if bitcoin core has access to tor's cookie file. This is the case on Windows with Tor Browser Bundle, for example. If not, then extra work is needed to set it up.",
      "commit_id" : "5a8de3d299df59e3b409486704239917475ab521",
      "created_at" : "2016-06-16T08:50:09Z",
      "diff_hunk" : "@@ -95,12 +95,18 @@ Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n API, to create and destroy 'ephemeral' hidden services programmatically.\n Bitcoin Core has been updated to make use of this.\n \n-This means that if Tor is running (and proper authorization is available),\n-Bitcoin Core automatically creates a hidden service to listen on, without\n-manual configuration. This will positively affect the number of available\n-.onion nodes.\n+This means that if Tor is running (and proper authentication has been configured),\n+Bitcoin Core automatically creates a hidden service to listen on. This will positively \n+affect the number of available .onion nodes.\n \n This new feature is enabled by default if Bitcoin Core is listening, and\n a connection to Tor can be made. It can be configured with the `-listenonion`,\n `-torcontrol` and `-torpassword` settings. To show verbose debugging\n information, pass `-debug=tor`.\n+\n+Connecting to Tor's control socket API requires one of two authentication methods to be ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8203#discussion_r67308558",
      "id" : 67308558,
      "original_commit_id" : "5a8de3d299df59e3b409486704239917475ab521",
      "original_position" : 17,
      "path" : "doc/tor.md",
      "position" : 17,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8203",
      "updated_at" : "2016-06-16T08:50:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/67308558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
