[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4347#discussion_r13803485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4347"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13803485"
         }
      },
      "body" : "BTW I was a bit surprised here; I do a keypoolrefill(3) with no keys left, but it needs to request four keys to exhaust the pool. Not sure yet why.",
      "commit_id" : "6c37f7fd78832442a26e56bd0787974927df4fb2",
      "created_at" : "2014-06-16T13:01:40Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Exercise the wallet keypool, and interaction with wallet encryption/locking\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def check_array_result(object_array, to_match, expected):\n+    \"\"\"\n+    Pass in array of JSON objects, a dictionary with key/value pairs\n+    to match against, and another dictionary with expected key/value\n+    pairs.\n+    \"\"\"\n+    num_matched = 0\n+    for item in object_array:\n+        all_match = True\n+        for key,value in to_match.items():\n+            if item[key] != value:\n+                all_match = False\n+        if not all_match:\n+            continue\n+        for key,value in expected.items():\n+            if item[key] != value:\n+                raise AssertionError(\"%s : expected %s=%s\"%(str(item), str(key), str(value)))\n+            num_matched = num_matched+1\n+    if num_matched == 0:\n+        raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n+\n+def run_test(nodes, tmpdir):\n+    # Encrypt wallet and wait to terminate\n+    nodes[0].encryptwallet('test')\n+    bitcoind_processes[0].wait()\n+    # Restart node 0\n+    nodes[0] = start_node(0, tmpdir)\n+    # Keep creating keys\n+    addr = nodes[0].getnewaddress()\n+    try:\n+        addr = nodes[0].getnewaddress()\n+        raise AssertionError('Keypool should be exhausted after one address')\n+    except JSONRPCException,e:\n+        assert(e.error['code']==-12)\n+\n+    # put three new keys in the keypool\n+    nodes[0].walletpassphrase('test', 12000)\n+    nodes[0].keypoolrefill(3)\n+    nodes[0].walletlock()\n+\n+    # drain the keys\n+    addr = set()\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4347#discussion_r13803485",
      "id" : 13803485,
      "original_commit_id" : "8230467a1b1a88d223b6b508e2bdda452a94011d",
      "original_position" : 68,
      "path" : "qa/rpc-tests/keypool.py",
      "position" : 68,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4347",
      "updated_at" : "2014-07-11T13:33:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13803485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4347#discussion_r14051504"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4347"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14051504"
         }
      },
      "body" : "Perhaps some remaining artefact of a default key, requested before filling the keypool with N extra keys?",
      "commit_id" : "6c37f7fd78832442a26e56bd0787974927df4fb2",
      "created_at" : "2014-06-21T20:31:45Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Exercise the wallet keypool, and interaction with wallet encryption/locking\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def check_array_result(object_array, to_match, expected):\n+    \"\"\"\n+    Pass in array of JSON objects, a dictionary with key/value pairs\n+    to match against, and another dictionary with expected key/value\n+    pairs.\n+    \"\"\"\n+    num_matched = 0\n+    for item in object_array:\n+        all_match = True\n+        for key,value in to_match.items():\n+            if item[key] != value:\n+                all_match = False\n+        if not all_match:\n+            continue\n+        for key,value in expected.items():\n+            if item[key] != value:\n+                raise AssertionError(\"%s : expected %s=%s\"%(str(item), str(key), str(value)))\n+            num_matched = num_matched+1\n+    if num_matched == 0:\n+        raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n+\n+def run_test(nodes, tmpdir):\n+    # Encrypt wallet and wait to terminate\n+    nodes[0].encryptwallet('test')\n+    bitcoind_processes[0].wait()\n+    # Restart node 0\n+    nodes[0] = start_node(0, tmpdir)\n+    # Keep creating keys\n+    addr = nodes[0].getnewaddress()\n+    try:\n+        addr = nodes[0].getnewaddress()\n+        raise AssertionError('Keypool should be exhausted after one address')\n+    except JSONRPCException,e:\n+        assert(e.error['code']==-12)\n+\n+    # put three new keys in the keypool\n+    nodes[0].walletpassphrase('test', 12000)\n+    nodes[0].keypoolrefill(3)\n+    nodes[0].walletlock()\n+\n+    # drain the keys\n+    addr = set()\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4347#discussion_r14051504",
      "id" : 14051504,
      "original_commit_id" : "8230467a1b1a88d223b6b508e2bdda452a94011d",
      "original_position" : 68,
      "path" : "qa/rpc-tests/keypool.py",
      "position" : 68,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4347",
      "updated_at" : "2014-07-11T13:33:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14051504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Untested ACK",
      "created_at" : "2014-06-21T20:34:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-46764089",
      "id" : 46764089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4347",
      "updated_at" : "2014-06-21T20:34:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/46764089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "untested ACK\r\n",
      "created_at" : "2014-06-21T20:38:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-46764168",
      "id" : 46764168,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4347",
      "updated_at" : "2014-06-21T20:38:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/46764168",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "I have a little concern that people will write code which doesn't handle this rare failure and when it happens simply fail to take change entirely... but I don't have anything better to suggest.",
      "created_at" : "2014-06-21T20:46:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-46764396",
      "id" : 46764396,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4347",
      "updated_at" : "2014-06-21T20:46:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/46764396",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@jgarzik The idea is that it should be possible to restart the mining thread with \"setgenerate\" after unlocking the wallet and generating a new keypool (still need to test this though). But requiring the entire process to shut down seems overly drastic.\r\nAnyhow who would be 'actively mining' using the internal miner and an encrypted wallet? I mean, I suppose the internal miner is still useful for testnet-in-a-box, but that doesn't require top security.\r\n\r\n@gmaxwell Well if you insist we can do it the careful way, make it an option then deprecate it over time. But if you don't take into account that RPC calls can fail that would be really strange, I doubt this is a very realistic concern.\r\n",
      "created_at" : "2014-06-22T09:24:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-46776283",
      "id" : 46776283,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4347",
      "updated_at" : "2014-06-22T09:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/46776283",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4347#discussion_r14053703"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4347"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14053703"
         }
      },
      "body" : "Right, that may be it - I want to debug this and know for sure before I merge this.\r\n\r\nRegarding the 'default key', after this pull it is only used to detect whether this is the first run with a wallet. A later pull could remove it entirely.\r\n",
      "commit_id" : "6c37f7fd78832442a26e56bd0787974927df4fb2",
      "created_at" : "2014-06-22T09:27:59Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Exercise the wallet keypool, and interaction with wallet encryption/locking\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def check_array_result(object_array, to_match, expected):\n+    \"\"\"\n+    Pass in array of JSON objects, a dictionary with key/value pairs\n+    to match against, and another dictionary with expected key/value\n+    pairs.\n+    \"\"\"\n+    num_matched = 0\n+    for item in object_array:\n+        all_match = True\n+        for key,value in to_match.items():\n+            if item[key] != value:\n+                all_match = False\n+        if not all_match:\n+            continue\n+        for key,value in expected.items():\n+            if item[key] != value:\n+                raise AssertionError(\"%s : expected %s=%s\"%(str(item), str(key), str(value)))\n+            num_matched = num_matched+1\n+    if num_matched == 0:\n+        raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n+\n+def run_test(nodes, tmpdir):\n+    # Encrypt wallet and wait to terminate\n+    nodes[0].encryptwallet('test')\n+    bitcoind_processes[0].wait()\n+    # Restart node 0\n+    nodes[0] = start_node(0, tmpdir)\n+    # Keep creating keys\n+    addr = nodes[0].getnewaddress()\n+    try:\n+        addr = nodes[0].getnewaddress()\n+        raise AssertionError('Keypool should be exhausted after one address')\n+    except JSONRPCException,e:\n+        assert(e.error['code']==-12)\n+\n+    # put three new keys in the keypool\n+    nodes[0].walletpassphrase('test', 12000)\n+    nodes[0].keypoolrefill(3)\n+    nodes[0].walletlock()\n+\n+    # drain the keys\n+    addr = set()\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4347#discussion_r14053703",
      "id" : 14053703,
      "original_commit_id" : "8230467a1b1a88d223b6b508e2bdda452a94011d",
      "original_position" : 68,
      "path" : "qa/rpc-tests/keypool.py",
      "position" : 68,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4347",
      "updated_at" : "2014-07-11T13:33:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14053703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj I doubt deprecating it would helpÃ¢ÂÂ it's just the kind of sharp interface which may break people from time to time even if they're amply warned. I don't think we should do any different, I mentioned the concern only for the chance that someone would have some brillant idea I was missing.",
      "created_at" : "2014-06-23T00:15:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-46797249",
      "id" : 46797249,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4347",
      "updated_at" : "2014-06-23T00:15:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/46797249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4347_3b43f959e006ee880af60c3c0f33da9dd7d1ffc9/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2014-07-04T10:24:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-48028913",
      "id" : 48028913,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4347",
      "updated_at" : "2014-07-04T10:24:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/48028913",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4347#discussion_r14820316"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4347"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14820316"
         }
      },
      "body" : "OK, nothing sinister is going on here. One is added to the target size in `TopUpKeypool`. No idea why, but it's not harmful.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/wallet.cpp#L1765 :\r\n```c++\r\n        while (setKeyPool.size() < (nTargetSize + 1))\r\n```\r\n",
      "commit_id" : "6c37f7fd78832442a26e56bd0787974927df4fb2",
      "created_at" : "2014-07-11T13:32:45Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Exercise the wallet keypool, and interaction with wallet encryption/locking\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def check_array_result(object_array, to_match, expected):\n+    \"\"\"\n+    Pass in array of JSON objects, a dictionary with key/value pairs\n+    to match against, and another dictionary with expected key/value\n+    pairs.\n+    \"\"\"\n+    num_matched = 0\n+    for item in object_array:\n+        all_match = True\n+        for key,value in to_match.items():\n+            if item[key] != value:\n+                all_match = False\n+        if not all_match:\n+            continue\n+        for key,value in expected.items():\n+            if item[key] != value:\n+                raise AssertionError(\"%s : expected %s=%s\"%(str(item), str(key), str(value)))\n+            num_matched = num_matched+1\n+    if num_matched == 0:\n+        raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n+\n+def run_test(nodes, tmpdir):\n+    # Encrypt wallet and wait to terminate\n+    nodes[0].encryptwallet('test')\n+    bitcoind_processes[0].wait()\n+    # Restart node 0\n+    nodes[0] = start_node(0, tmpdir)\n+    # Keep creating keys\n+    addr = nodes[0].getnewaddress()\n+    try:\n+        addr = nodes[0].getnewaddress()\n+        raise AssertionError('Keypool should be exhausted after one address')\n+    except JSONRPCException,e:\n+        assert(e.error['code']==-12)\n+\n+    # put three new keys in the keypool\n+    nodes[0].walletpassphrase('test', 12000)\n+    nodes[0].keypoolrefill(3)\n+    nodes[0].walletlock()\n+\n+    # drain the keys\n+    addr = set()\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())\n+    addr.add(nodes[0].getrawchangeaddress())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4347#discussion_r14820316",
      "id" : 14820316,
      "original_commit_id" : "8230467a1b1a88d223b6b508e2bdda452a94011d",
      "original_position" : 68,
      "path" : "qa/rpc-tests/keypool.py",
      "position" : 68,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4347",
      "updated_at" : "2014-07-11T13:33:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14820316",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
