[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23999#discussion_r780185697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23999"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780185697"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I would move this to a dedicated section in the developer notes and link straight to that. It prevents duplication and also makes this document less intimidating for users.",
      "commit_id" : "889b4778ba0328e072a0764051bceba1c22f1945",
      "created_at" : "2022-01-07T10:45:54Z",
      "diff_hunk" : "@@ -0,0 +1,88 @@\n+# SECURITY\n+\n+This document describes the security recommendations and issues that can be helpful for users and developers of Bitcoin Core.\n+\n+The first part of this document is dedicated to users and categorizes issues as P2P, RPC, Wallet and others. The second part is a list of best practices for developers.\n+\n+## Users\n+\n+â¹ï¸ There is no patch for human stupidity.\n+\n+Download Bitcoin Core only from below links, verify the integrity of the download before using:\n+\n+https://bitcoincore.org/en/download/\n+\n+https://github.com/bitcoin/bitcoin/releases\n+\n+Downloading Bitcoin Core from untrusted sources can result in using a [malware](https://bitcoin.stackexchange.com/a/107738/) that can steal your bitcoin and compromise your computer.\n+\n+### P2P\n+\n+Using non-default ports and non-listening nodes can improve security\n+\n+DNS seeds are used for bootstrapping the P2P network. If one of the domains used for default DNS seeds is hacked, this can impact nodes. A node checks 3 seeds at a time, so it would require coordination for a malicious seed to affect the network. You can use own DNS seed for bootstrapping.\n+\n+Difference in DNS seed and Seed node: https://bitcoin.stackexchange.com/a/17410/\n+\n+Having multiple connections to the network is fundamental to safety against eclipse attacks. If a user configured the node to only have outbound block-relay-only connections, they wouldn't be participating in addr relay, so wouldn't have a diverse addrman to identify candidates to connect to. It is suggested to have at least 10 outbound connections.\n+\n+`assumevalid=1` skips validation for scripts. A all scripts in transactions included in blocks that are ancestors of the _assumevalid_ block are assumed to be valid. While this does introduce a little bit of trust, people can independently check that block is part of the main chain.\n+\n+Known incidents when BGP hijacking was used to exploit Bitcoin users: https://www.wired.com/2014/08/isp-bitcoin-theft/\n+\n+Do not use blocks and chainstate from unknown sources. Attackers could be providing you a false blockchain, i.e. one that is valid but not the blockchain that all other nodes are following.\n+\n+### RPC\n+\n+The JSON-RPC interface is intended for local access. By default it will only accept connections from localhost, but it can be configured to be accessed for a wider netmask; e.g. a trusted LAN network. Bitcoin Core does not allow anyone to connect to the rpcport. You will need to explicitly allow an IP address to connect to it by using the `rpcallowip=<ip>` option in the _bitcoin.conf_ file. If you set it to 0.0.0.0, it will be open to all IP addresses, but this is not recommended as it is not secure.\n+\n+If you have a need to access it over an untrusted network like the internet, tunnel it through technology specifically designed for that, such as stunnel (SSL) or a VPN.\n+\n+[Executable, network access, authentication and string handling](/json-rpc-interface.md#security)\n+\n+[Multi user systems](https://medium.com/@lukedashjr/cve-2018-20587-advisory-and-full-disclosure-a3105551e78b)\n+\n+[#12763](https://github.com/bitcoin/bitcoin/pull/12763) added the RPC whitelisting feature that helps enforce application policies for services being built on top of Bitcoin Core. It suggested to not connect your Bitcoin node to arbitrary services, reduce risk and prevent unintended access.\n+\n+### Wallet\n+\n+[Encrypting the Wallet](/managing-wallets.md#encrypting-the-wallet)\n+\n+[Backing Up the Wallet](/managing-wallets.md#backing-up-the-wallet)\n+\n+Do not buy _wallet.dat_ files from anywhere. There are several websites that sell such files to newbies. You can read more about the issue here: https://github.com/bitcoin-core/gui/issues/77#issuecomment-721927922\n+\n+Understanding the difference between legacy and descriptor wallets:\n+\n+There is no XPUB in legacy wallets, `dumpwallet` will return private keys. `listdescriptors` can be used to get XPUB and XPRV for descriptor wallets.\n+\n+\n+### Other\n+\n+*notify config and commandline options accept shell commands to be based on different events in Bitcoin Core. Be careful while using these options and ensure that the commands are safe either by manual inspection or restrictions/alerts in the system used.\n+\n+## Developers\n+\n+â¹ï¸ Itâs a myth that those break cannot build.\n+\n+- [Developer Notes](/developer-notes.md)\n+\n+### Secure Programming Practices in C++",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23999#discussion_r780185697",
      "id" : 780185697,
      "line" : 70,
      "node_id" : "PRRC_kwDOABII584ugLBh",
      "original_commit_id" : "889b4778ba0328e072a0764051bceba1c22f1945",
      "original_line" : 70,
      "original_position" : 70,
      "original_start_line" : null,
      "path" : "doc/secure.md",
      "position" : 70,
      "pull_request_review_id" : 846496633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23999",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780185697/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T10:45:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780185697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23999#discussion_r780187032"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23999"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780187032"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The developer notes contain some remarks for reviewers. Maybe it makes sense to have a separate section there too.",
      "commit_id" : "889b4778ba0328e072a0764051bceba1c22f1945",
      "created_at" : "2022-01-07T10:48:24Z",
      "diff_hunk" : "@@ -0,0 +1,88 @@\n+# SECURITY\n+\n+This document describes the security recommendations and issues that can be helpful for users and developers of Bitcoin Core.\n+\n+The first part of this document is dedicated to users and categorizes issues as P2P, RPC, Wallet and others. The second part is a list of best practices for developers.\n+\n+## Users\n+\n+â¹ï¸ There is no patch for human stupidity.\n+\n+Download Bitcoin Core only from below links, verify the integrity of the download before using:\n+\n+https://bitcoincore.org/en/download/\n+\n+https://github.com/bitcoin/bitcoin/releases\n+\n+Downloading Bitcoin Core from untrusted sources can result in using a [malware](https://bitcoin.stackexchange.com/a/107738/) that can steal your bitcoin and compromise your computer.\n+\n+### P2P\n+\n+Using non-default ports and non-listening nodes can improve security\n+\n+DNS seeds are used for bootstrapping the P2P network. If one of the domains used for default DNS seeds is hacked, this can impact nodes. A node checks 3 seeds at a time, so it would require coordination for a malicious seed to affect the network. You can use own DNS seed for bootstrapping.\n+\n+Difference in DNS seed and Seed node: https://bitcoin.stackexchange.com/a/17410/\n+\n+Having multiple connections to the network is fundamental to safety against eclipse attacks. If a user configured the node to only have outbound block-relay-only connections, they wouldn't be participating in addr relay, so wouldn't have a diverse addrman to identify candidates to connect to. It is suggested to have at least 10 outbound connections.\n+\n+`assumevalid=1` skips validation for scripts. A all scripts in transactions included in blocks that are ancestors of the _assumevalid_ block are assumed to be valid. While this does introduce a little bit of trust, people can independently check that block is part of the main chain.\n+\n+Known incidents when BGP hijacking was used to exploit Bitcoin users: https://www.wired.com/2014/08/isp-bitcoin-theft/\n+\n+Do not use blocks and chainstate from unknown sources. Attackers could be providing you a false blockchain, i.e. one that is valid but not the blockchain that all other nodes are following.\n+\n+### RPC\n+\n+The JSON-RPC interface is intended for local access. By default it will only accept connections from localhost, but it can be configured to be accessed for a wider netmask; e.g. a trusted LAN network. Bitcoin Core does not allow anyone to connect to the rpcport. You will need to explicitly allow an IP address to connect to it by using the `rpcallowip=<ip>` option in the _bitcoin.conf_ file. If you set it to 0.0.0.0, it will be open to all IP addresses, but this is not recommended as it is not secure.\n+\n+If you have a need to access it over an untrusted network like the internet, tunnel it through technology specifically designed for that, such as stunnel (SSL) or a VPN.\n+\n+[Executable, network access, authentication and string handling](/json-rpc-interface.md#security)\n+\n+[Multi user systems](https://medium.com/@lukedashjr/cve-2018-20587-advisory-and-full-disclosure-a3105551e78b)\n+\n+[#12763](https://github.com/bitcoin/bitcoin/pull/12763) added the RPC whitelisting feature that helps enforce application policies for services being built on top of Bitcoin Core. It suggested to not connect your Bitcoin node to arbitrary services, reduce risk and prevent unintended access.\n+\n+### Wallet\n+\n+[Encrypting the Wallet](/managing-wallets.md#encrypting-the-wallet)\n+\n+[Backing Up the Wallet](/managing-wallets.md#backing-up-the-wallet)\n+\n+Do not buy _wallet.dat_ files from anywhere. There are several websites that sell such files to newbies. You can read more about the issue here: https://github.com/bitcoin-core/gui/issues/77#issuecomment-721927922\n+\n+Understanding the difference between legacy and descriptor wallets:\n+\n+There is no XPUB in legacy wallets, `dumpwallet` will return private keys. `listdescriptors` can be used to get XPUB and XPRV for descriptor wallets.\n+\n+\n+### Other\n+\n+*notify config and commandline options accept shell commands to be based on different events in Bitcoin Core. Be careful while using these options and ensure that the commands are safe either by manual inspection or restrictions/alerts in the system used.\n+\n+## Developers\n+\n+â¹ï¸ Itâs a myth that those break cannot build.\n+\n+- [Developer Notes](/developer-notes.md)\n+\n+### Secure Programming Practices in C++\n+\n+**Undefined Behavior (UB)**: there are no restrictions on the behavior of the program if certain rules of the language are violated. Examples of undefined behavior are uninitialized scalars, memory access outside of array bounds, signed integer overflow, null pointer dereference, access to an object through a pointer of a different type, etc. Compilers are not required to handle undefined behavior (although many simple situations are diagnosed), and the compiled program is not required to do anything meaningful.\n+\n+**Uninitialized variables** are Undefined Behavior, a typical outcome of which is reading stale stack or register values. In the best case, it generates a pseudorandom result which in edge cases might be the expected result or fixed by the compiler. In the worst case, an exploit may be created that leaks secrets by allowing use of an attacker-controlled value.\n+\n+**MemorySanitizer** (MSan) is a tool that detects uninitialized reads. It consists of a compiler instrumentation module and a run-time library. Typical slowdown is 3x and memory usage is 2x. MSan is supported on Linux/NetBSD/FreeBSD and requires compiling and linking all the code in your program, including libraries it uses and the C++ standard library, with -fsanitize=memory -fPIE -pie.\n+\n+**Valgrind** is a debugging and profiling tool suite to make programs faster and more correct. Its most popular tool, Memcheck, can detect memory-related errors common in C and C++ programs that can lead to crashes and unpredictable behavior. Here is a tutorial. Memcheck is not perfect: typical slowdown is 3-10x, memory usage is 2x, it can produce false positives (there are mechanisms for suppressing these; see the valgrind.supp file in Bitcoin Core), and it doesnât currently detect out-of-range reads or writes to arrays allocated statically or on the stack.\n+\n+### Finding vulnerabilities in pull requests during reviews",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23999#discussion_r780187032",
      "id" : 780187032,
      "line" : 80,
      "node_id" : "PRRC_kwDOABII584ugLWY",
      "original_commit_id" : "889b4778ba0328e072a0764051bceba1c22f1945",
      "original_line" : 80,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "doc/secure.md",
      "position" : 80,
      "pull_request_review_id" : 846498373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23999",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780187032/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T10:48:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780187032",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
