[
   {
      "author_association" : "MEMBER",
      "body" : "The new test included in the second commit demonstrates the problem highlighted in the OP (the test will fail on master).",
      "created_at" : "2022-11-04T13:53:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303579015",
      "id" : 1303579015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26451",
      "node_id" : "IC_kwDOABII585NswmH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303579015/reactions"
      },
      "updated_at" : "2022-11-04T13:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303579015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Because this new feerate criteria includes the ancestors of a new transaction in the score, we are able to eliminate the prohibition against including new unconfirmed parents in a replacement transaction, a slight relaxation of the prior rules.\r\n\r\nThis is elimination of bip125(or doc/policy/mempool-replacements.md) rule#2, if I understand correctly.\r\n\r\nOne interesting but understandable wrinkle is that in common use-cases, adding new unconfirmed inputs(to CPFP) is likely uneconomical if one is replacing high feerate children, even if the original ancestors are low feerate. I ran into this case when thinking about V3 which has a similar rule in place: https://github.com/bitcoin/bitcoin/pull/26403/commits/dc8b61160187bf8423f9e8d2d39d9724a35a43ec#diff-d18bbdec91d0f4825b512a31f34666b000c7b7e2e05a3d43570c4b971532616fR158\r\n\r\nSome basic testing of this new-unconfirmed-inputs case should make it obvious.",
      "created_at" : "2022-11-04T14:06:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303609521",
      "id" : 1303609521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26451",
      "node_id" : "IC_kwDOABII585Ns4Cx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303609521/reactions"
      },
      "updated_at" : "2022-11-04T14:06:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303609521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This is elimination of bip125(or doc/policy/mempool-replacements.md) rule#2, if I understand correctly.\r\n\r\nYes, this PR would eliminate rule 2, and modify rule 6.\r\n\r\nI agree with you that including more unconfirmed inputs makes it very difficult to replace high-feerate children under the policy I'm suggesting. If you look at the test I've added, the feerate needed in order to get the new transaction into the mempool is extremely high, illustrating the point that fixing incentive compatibility appears to make the pinning problem much, much worse.\r\n\r\nHowever, if we are interested in incentive compatibility of our replacement rules, I believe this is the most straightforward set of rules that we could adopt which would ensure that we never evict something that has a better mining score than a new incoming transaction.\r\n\r\n\r\n\r\n",
      "created_at" : "2022-11-04T14:11:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303615624",
      "id" : 1303615624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26451",
      "node_id" : "IC_kwDOABII585Ns5iI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303615624/reactions"
      },
      "updated_at" : "2022-11-04T14:11:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303615624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm asking for a test case of rule#2 being removed, as I don't think that's covered yet?",
      "created_at" : "2022-11-04T14:15:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303620946",
      "id" : 1303620946,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26451",
      "node_id" : "IC_kwDOABII585Ns61S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303620946/reactions"
      },
      "updated_at" : "2022-11-04T14:15:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303620946",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@instagibbs Done - I added back a modified version of the prior test, to demonstrate new unconfirmed inputs are permitted.",
      "created_at" : "2022-11-04T14:24:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303632495",
      "id" : 1303632495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26451",
      "node_id" : "IC_kwDOABII585Ns9pv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303632495/reactions"
      },
      "updated_at" : "2022-11-04T14:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303632495",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "concept ACK, would also need documentation in doc/policy/mempool-replacements.md of course",
      "created_at" : "2022-11-04T14:25:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303632960",
      "id" : 1303632960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26451",
      "node_id" : "IC_kwDOABII585Ns9xA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303632960/reactions"
      },
      "updated_at" : "2022-11-04T14:25:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303632960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I actually just realized that this PR does not guarantee incentive compatible replacements, either.  Will push up a test case to illustrate it (maybe it'll be fun for reviewers to figure out why in the meantime).",
      "created_at" : "2022-11-04T14:32:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303649608",
      "id" : 1303649608,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26451",
      "node_id" : "IC_kwDOABII585NtB1I",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303649608/reactions"
      },
      "updated_at" : "2022-11-04T14:32:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303649608",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Comment: whether or not this is the right trade-off depends on the state of the mempool. At one extreme, if the mempool is entirely empty we'd be better off with the higher fee transaction regardless. If the mempool was full, we may even be better off with a higher feerate, lower fee paying, transaction.\r\n\r\nPersonally I'd lean towards the latter assumption. But it's worth discussing.",
      "created_at" : "2022-11-04T16:29:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303840750",
      "id" : 1303840750,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26451",
      "node_id" : "IC_kwDOABII585Ntwfu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303840750/reactions"
      },
      "updated_at" : "2022-11-04T16:29:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303840750",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Based on discussions, I think the issue is that a new unconfirmed input could be included that actually would have been mined anyways, thus giving the replacement child a higher estimated miner score than it otherwise should have. Raising the \"min\" in the function between the ancestor and individual score.",
      "created_at" : "2022-11-04T17:03:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303889425",
      "id" : 1303889425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26451",
      "node_id" : "IC_kwDOABII585Nt8YR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303889425/reactions"
      },
      "updated_at" : "2022-11-04T17:03:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303889425",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26451#discussion_r1014556765"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014556765"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this type of policy changes would benefit from a more binding definition of \"incentive compatibility\". If we speak about a world where the network mempools backlog is always superior to `MAX_BLOCK_WEIGHT`, optimizing for mining score based on feerate sounds the most obvious. If we add the dimension of mempools congestion variance where emptyness is a non-null outcome, I think a miner could adopt a \"pure-replace-by-fee\" mempool acceptance policy until reaching `MAX_BLOCK_WEIGHT`.\r\n\r\nAnother layer of complexity in devising \"incentive compatibility\" could be to realize the best feerate mempool plausible is a combination of the replacement policy and an order of events. E.g, if you evict 2sat/vb A for 4sat/vb A' though after 1 min you receive 4 sat/vb B child of A, your mempool is at loss. This scenario sounds far from unplausible to me in a shared-utxo future (e.g 2-of-2 LN channels), where spenders are building chain of transactions in blindness of every co-spender. A miner mempool optimization could be to run a cache of all the replacements.\r\n\r\nOn this subject, earlier this year on the ML: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019921.html\r\n\r\nOf course, we could make abstraction of order of events complexity by assuming all received transactions are following templates (e.g nversion=3) where the design assumes only the most efficient package/chain of transactions propagate. However, I'm not sure how much our network transaction-relay \"transaction patterns\" (current and future) are realistic of potential miner mempools running with `DEFAULT_ANCESTOR_LIMIT=$HUGE` and out-of-band transaction-relay. If our design give margin for non-marginal fee asymmetries, in a future where fees are significantly contributing to block reward, you should expect some miners doing the efforts of capturing them.\r\n\r\nAll thoughts for future works, I think this is a good improvement for now.",
      "commit_id" : "ff77ab34fb219cf4e626690f4c9f919c18dc1045",
      "created_at" : "2022-11-05T03:36:09Z",
      "diff_hunk" : "@@ -922,30 +922,34 @@ bool MemPoolAccept::ReplacementChecks(Workspace& ws)\n     const uint256& hash = ws.m_hash;\n     TxValidationState& state = ws.m_state;\n \n+    // Calculate the predicted mining score of the new transaction.\n+    int64_t ancestor_size{0};\n+    CAmount ancestor_modified_fees{0};\n+    for (CTxMemPool::txiter it : ws.m_ancestors) {\n+        ancestor_size += it->GetTxSize();\n+        ancestor_modified_fees += it->GetModifiedFee();\n+    }\n+\n     CFeeRate newFeeRate(ws.m_modified_fees, ws.m_vsize);\n-    // Enforce Rule #6. The replacement transaction must have a higher feerate than its direct conflicts.\n-    // - The motivation for this check is to ensure that the replacement transaction is preferable for\n-    //   block-inclusion, compared to what would be removed from the mempool.\n-    // - This logic predates ancestor feerate-based transaction selection, which is why it doesn't\n-    //   consider feerates of descendants.\n-    // - Note: Ancestor feerate-based transaction selection has made this comparison insufficient to\n-    //   guarantee that this is incentive-compatible for miners, because it is possible for a\n-    //   descendant transaction of a direct conflict to pay a higher feerate than the transaction that\n-    //   might replace them, under these rules.\n-    if (const auto err_string{PaysMoreThanConflicts(ws.m_iters_conflicting, newFeeRate, hash)}) {\n-        return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"insufficient fee\", *err_string);\n+    if (ancestor_modified_fees * ws.m_vsize < ws.m_modified_fees * ancestor_size) {\n+        newFeeRate = CFeeRate(ancestor_modified_fees, ancestor_size);\n     }\n \n     // Calculate all conflicting entries and enforce Rule #5.\n     if (const auto err_string{GetEntriesForConflicts(tx, m_pool, ws.m_iters_conflicting, ws.m_all_conflicting)}) {\n         return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY,\n                              \"too many potential replacements\", *err_string);\n     }\n-    // Enforce Rule #2.\n-    if (const auto err_string{HasNoNewUnconfirmed(tx, m_pool, ws.m_iters_conflicting)}) {\n-        return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY,\n-                             \"replacement-adds-unconfirmed\", *err_string);\n+\n+    // Enforce feerate incentive compatibility. The replacement transaction\n+    // must have a higher mining score (= min(feerate, ancestor feerate)) than\n+    // the highest possible mining score of all its conflicts.\n+    // - The motivation for this check is to ensure that the replacement transaction is preferable for\n+    //   block-inclusion, compared to what would be removed from the mempool.\n+    if (const auto err_string{PaysMoreThanConflicts(ws.m_all_conflicting, newFeeRate, hash)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26451#discussion_r1014556765",
      "id" : 1014556765,
      "line" : 949,
      "node_id" : "PRRC_kwDOABII5848eOhd",
      "original_commit_id" : "ff77ab34fb219cf4e626690f4c9f919c18dc1045",
      "original_line" : 949,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 43,
      "pull_request_review_id" : 1169301807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014556765/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-05T03:36:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014556765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
