[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nWill it be better if `bumpfee` RPC had an argument `force` false by default and if true would replace transaction irrespective of signalling?\r\n\r\nExample: `bitcoin-cli -named bumpfee txid=<txid> force=true`",
      "created_at" : "2022-11-04T16:54:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26454#issuecomment-1303876356",
      "id" : 1303876356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26454",
      "node_id" : "IC_kwDOABII585Nt5ME",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303876356/reactions"
      },
      "updated_at" : "2022-11-04T16:54:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303876356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "In our wallet, we try not to make transactions that are unlikely to be propagated around the network. One of the ways that we do this is to make sure that a transaction is accepted into our own mempool. So we also (try to) adhere to mempool options as well. Thus this should respect the `-mempoolfullrbf` option.\r\n\r\nAdditionally, in line with the above principle, we generally don't make changes to the wallet involving relay policy until it is clear that a new policy has been adopted by the network. So this change should wait until `-mempoolfullrbf=1` is the default and has wide enough adoption that such transactions propagate well.\r\n\r\nThis also needs tests for the specific behavior.\r\n\r\n> No changes to the tests were required, as this case is not tested\r\n\r\nCI seems to disagree.",
      "created_at" : "2022-11-04T17:03:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26454#issuecomment-1303889480",
      "id" : 1303889480,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26454",
      "node_id" : "IC_kwDOABII585Nt8ZI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303889480/reactions"
      },
      "updated_at" : "2022-11-04T17:03:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303889480",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Will it be better if `bumpfee` RPC had an argument `force` false by default and if true would replace transaction irrespective of signalling?\r\n\r\nSounds right thing to do here to me. Also could have extra confirmation warning dialog in Qt GUI when trying to bump non-BIP125 tx.",
      "created_at" : "2022-11-04T17:28:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26454#issuecomment-1303916398",
      "id" : 1303916398,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26454",
      "node_id" : "IC_kwDOABII585NuC9u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303916398/reactions"
      },
      "updated_at" : "2022-11-04T17:28:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303916398",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I like the idea of an explicit `force` parameter. But it shouldn't be a positional argument.",
      "created_at" : "2022-11-04T18:15:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26454#issuecomment-1303970237",
      "id" : 1303970237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26454",
      "node_id" : "IC_kwDOABII585NuQG9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303970237/reactions"
      },
      "updated_at" : "2022-11-04T18:15:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303970237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\n\nOn November 4, 2022 6:04:03 PM GMT+01:00, Andrew Chow ***@***.***> wrote:\n>In our wallet, we try not to make transactions that are unlikely to be propagated around the network. One of the ways that we do this is to make sure that a transaction is accepted into our own mempool. So we also (try to) adhere to mempool options as well. Thus this should respect the `-mempoolfullrbf` option.\n\nThis isn't a matter of \"respect\": BIP 125 isn't a contract. We have a transaction that we would like to get mined that isn't getting mined. A fee bump is improving our chances.\n\n>Additionally, in line with the above principle, we generally don't make changes to the wallet involving relay policy until it is clear that a new policy has been adopted by the network. So this change should wait until `-mempoolfullrbf=1` is the default and has wide enough adoption that such transactions propagate well.\n\nBut this isn't really a question of relay policy: the fee bumped transaction is perfectly valid, and some nodes will propagate it.\n\nThe most likely scenario where this is relevant is congestion. In that scenario the minimum relay fee rate is not going to be the same on all nodes. So your fee bumped transaction genuinely has a higher chance of getting mined. Indeed, your own node may not be accepting the original to the mempool due to a higher than default relay fee. \n\n>This also needs tests for the specific behavior.\n>\n>> No changes to the tests were required, as this case is not tested\n>\n>CI seems to disagree.\n\nFWIW I ran `make check` as the docs suggested. I haven't done Core development in years, so I was going by what the README said.\n",
      "created_at" : "2022-11-04T18:29:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26454#issuecomment-1303982433",
      "id" : 1303982433,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26454",
      "node_id" : "IC_kwDOABII585NuTFh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303982433/reactions"
      },
      "updated_at" : "2022-11-04T18:29:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303982433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> FWIW I ran `make check` as the docs suggested. I haven't done Core development in years, so I was going by what the README said.\r\n\r\nFunctional test is  failing and `make check` only works for unit tests.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/test/README.md\r\n\r\n    test/functional/test_runner.py to run the standard test suite (try test/functional/test_runner.py -j 60 or a similar high number to run the tests more quickly in parallel)\r\n    test/functional/.py to run an individual test file\r\n    test/functional/test_runner.py --extended to run the extended test suite\r\n    test/functional/test_runner.py --help to see the various options for running tests \r\n    \r\nhttps://jonatack.github.io/articles/how-to-compile-bitcoin-core-and-run-the-tests",
      "created_at" : "2022-11-04T18:57:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26454#issuecomment-1304009883",
      "id" : 1304009883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26454",
      "node_id" : "IC_kwDOABII585NuZyb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304009883/reactions"
      },
      "updated_at" : "2022-11-04T18:57:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304009883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This isn't a matter of \"respect\": BIP 125 isn't a contract. We have a transaction that we would like to get mined that isn't getting mined. A fee bump is improving our chances.\r\n\r\nIt's not going to help if our own mempool isn't going to accept it. If that's the case, we can't even rebroadcast it unless we somehow store that the transaction needs to be unconditionally broadcast, or we go back unconditionally broadcasting all wallet transactions. But there's potential for a privacy leak there.\r\n\r\n> The most likely scenario where this is relevant is congestion. In that scenario the minimum relay fee rate is not going to be the same on all nodes. So your fee bumped transaction genuinely has a higher chance of getting mined. Indeed, your own node may not be accepting the original to the mempool due to a higher than default relay fee.\r\n\r\nIn that scenario, we should be checking the conditions for whether a transaction can be abandoned before allowing fee bumping. In such a situation, the same effect can be achieved by abandoning the transaction and recreating it.",
      "created_at" : "2022-11-04T19:12:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26454#issuecomment-1304043356",
      "id" : 1304043356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26454",
      "node_id" : "IC_kwDOABII585Nuh9c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304043356/reactions"
      },
      "updated_at" : "2022-11-04T19:12:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304043356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\n\nOn November 4, 2022 8:12:30 PM GMT+01:00, Andrew Chow ***@***.***> wrote:\n>> This isn't a matter of \"respect\": BIP 125 isn't a contract. We have a transaction that we would like to get mined that isn't getting mined. A fee bump is improving our chances.\n>\n>It's not going to help if our own mempool isn't going to accept it. If that's the case, we can't even rebroadcast it unless we somehow store that the transaction needs to be unconditionally broadcast, or we go back unconditionally broadcasting all wallet transactions. But there's potential for a privacy leak there.\n\n... and as I said, it'd be good to have a mechanism to simply force the transaction into our mempool and broadcast it to peers for these types of rare cases.\n\nThis is likely to be a rare case, so privacy leaks aren't relevant. And of course, privacy leaks can be mitigated by occasionally accepting full-rnf replacements.\n\n>> The most likely scenario where this is relevant is congestion. In that scenario the minimum relay fee rate is not going to be the same on all nodes. So your fee bumped transaction genuinely has a higher chance of getting mined. Indeed, your own node may not be accepting the original to the mempool due to a higher than default relay fee.\n>\n>In that scenario, we should be checking the conditions for whether a transaction can be abandoned before allowing fee bumping. In such a situation, the same effect can be achieved by abandoning the transaction and recreating it.\n\nThere is no safe way of recreating a transaction from the user's perspective. The correct thing to do is to feebump to ensure that the recipient isn't paid twice.\n\nCongestion is a transient condition. Not permanent.\n\nIndeed, abandontransaction is a very dangerous RPC call that can easily result in lost money. We should have added a true cancel transaction instead that double spent to avoid a double payment.\n",
      "created_at" : "2022-11-04T19:24:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26454#issuecomment-1304059761",
      "id" : 1304059761,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26454",
      "node_id" : "IC_kwDOABII585Nul9x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304059761/reactions"
      },
      "updated_at" : "2022-11-04T19:24:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304059761",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   }
]
