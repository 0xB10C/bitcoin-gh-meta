[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. Admittedly, I haven't been following this issue very closely, but wow, that mailing list post was very persuasive. The analogy between the `-mempoolfullrbf` flag and a hypothetical `-disable_v3_transaction_enforcement` flag to me was the most compelling part, as well as the framing:\r\n\r\n> Relay has only ever been a best-efforts concept, where we carve out a small subset of the entire transaction universe for which we try to optimize propagation.\r\n\r\nAdding options for different nodes to see different subsets of the transaction universe seems something we would really want to avoid unless the options provide very compelling benefits. And given limitations of `-mempoolfullrbf` described in footnote 3, the benefits it provides seem scant compared to the cost and complexity having to design for multiple mempool policies on the same network going forward.",
      "created_at" : "2022-11-01T14:43:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1298611730",
      "id" : 1298611730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NZz4S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298611730/reactions"
      },
      "updated_at" : "2022-11-01T14:43:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298611730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK\r\n\r\n> Does fullrbf offer any benefits other than breaking zeroconf business practices? If so, what are they?\r\n\r\nZeroconf businesses and projects are vulnerable by design. This can be fixed without changing anything in Bitcoin Core.\r\n\r\nFull RBF offers 2 benefits:\r\n\r\n- Better security for coinjoin and multi party contracts which is hard to fix without users trying full RBF using this option\r\n- Provide another policy option for users to replace transactions \r\n\r\n> Is it reasonable to enforce BIP 125's rbf rules on all transactions, if those rules themselves are not always incentive compatible?\r\n\r\nIts reasonable to try and collect some insights based on usage. This could be used to improve things in future.\r\n\r\n> If someone were to propose a command line option that breaks v3 transaction relay in the future, is there a logical basis for opposing that which is consistent with moving towards fullrbf now?\r\n\r\nI do not understand this question, v3 tx relay is still being discussed afaik and not sure how it's related to an option to use full RBF as Gloria mentioned in [this](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020937.html) email:\r\n\r\n\"_If you don't want your transactions to be subject to\r\nthese rules, just continue whatever you're doing and don't use nVersion=3._\"\r\n\r\nAnd some projects would continue to use nVersion=1 and nVersion=2.\r\n\r\n---\r\nFull RBF is already available as an option in Knots and custom bitcoind if someone running core with patches. This option could only make it easier for average users to try it and better insights.",
      "created_at" : "2022-11-01T15:32:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1298711392",
      "id" : 1298711392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NaMNg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298711392/reactions"
      },
      "updated_at" : "2022-11-01T15:49:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298711392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Full RBF offers 2 benefits:\r\n> \r\n> * Better security for coinjoin and multi party contracts which is hard to fix without users trying full RBF using this option\r\n\r\nAs discussed in the mailing list thread, the security problem with a coinjoin protocol/multiparty funded transaction protocol that Antoine described can still occur even if fullrbf were the norm.  So I believe this to be false (in the sense that I don't think @ariard or @instagibbs, who seem most familiar with the protocol being described, think the problem would be solved with fullrbf -- if I'm misunderstanding that viewpoint though I would welcome being corrected).\r\n\r\n> * Provide another policy option for users to replace transactions\r\n\r\n\"Providing another policy option\" is a circular reason.  The question I'm trying to get at is: what harm is there to the network from some users choosing to opt their transactions out of RBF?  The example Antoine gave would be in that category if fullrbf actually solved the problem he described, but since it doesn't seem to solve the problem I'm looking for other examples.  \r\n\r\n> > Is it reasonable to enforce BIP 125's rbf rules on all transactions, if those rules themselves are not always incentive compatible?\r\n> \r\n> Its reasonable to try and collect some insights based on usage. This could be used to improve things in future.\r\n\r\nWe have had 7 years to gain insights based on usage.  Something like 20-30% of all transactions opt-in already, I think?  I don't think we're going to learn anything more that we can't already learn from looking at current usage patterns.  \r\n\r\nPerhaps another way of phrasing this argument is, if you're going to advocate for fullrbf because non-replacement is not incentive compatible, then you should also be able to argue that our fullrbf policy is incentive compatible.  And I'm pointing out that fullrbf as it exists in master (when this `mempoolfullrbf` flag is enabled) is not incentive compatible in some obvious situations.  So it seems to me that an incentive compatibility argument cuts both ways, and those arguing that non-replacement is bad should implement an incentive compatible set of RBF rules first, before we enforce that on all transactions.\r\n\r\n> > If someone were to propose a command line option that breaks v3 transaction relay in the future, is there a logical basis for opposing that which is consistent with moving towards fullrbf now?\r\n> \r\n> I do not understand this question, v3 tx relay is still being discussed afaik and not sure how it's related to an option to use full RBF as Gloria as mentioned in [this](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020937.html) email:\r\n\r\nIf you read my full email and still do not understand my question then I'm not sure I can explain this any better here, but I tried to argue that the restriction on not allowing replacements of non-rbf-signaling transactions is similar in concept to a restriction to not allow arbitrary children of a v3 transaction, in the v3 transaction relay proposal that is being advanced.  I like the v3 proposal, and I think we should pursue it, and I worry that setting a precedent of breaking a policy for no network benefit could be used in the future to interfere with v3 down the road, because many of the same arguments would seem to apply.\r\n\r\nSo I'm looking for people who think that (a) the v3 transaction policy proposal is good and (b) that fullrbf is good to explain how those can be mutually compatible viewpoints, because from how I think about both of these issues, I'm unable to justify supporting fullrbf right now (given my understanding of current usage patterns on the network, where there seems to be little demand for transactions that opt-out of replacement under BIP 125 being doublespent) without also justifying offering knobs to break v3 in the future, which I would be opposed to doing.",
      "created_at" : "2022-11-01T15:54:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1298748489",
      "id" : 1298748489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NaVRJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298748489/reactions"
      },
      "updated_at" : "2022-11-01T15:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298748489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "NACK with longer form here: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021136.html\r\n\r\n> And I'm pointing out that fullrbf as it exists in master (when this mempoolfullrbf flag is enabled) is not incentive compatible in some obvious situations.\r\n\r\n\"I want to steal from 0-conf merchants\" is the \"use-case\" you're ignoring, and where the argument falls apart imo. It's the whole reason we're having this debate, it's that merchants are scared about it. If people didn't believe it was incentive compatible, we wouldn't be having this conversation at all.\r\n\r\nOstensibly, we are trying to allow people to bid fees for inclusion to blocks. Excluding people from *bidding against themselves* is clearly different than V3 type patterns which are for making bidding a robust process.\r\n\r\nedit: and for anyone reading I'm completely against stealing from merchants, and personally will not be working towards fullrbf-default-on efforts because of lack of ethical use-cases.",
      "created_at" : "2022-11-01T16:06:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1298763826",
      "id" : 1298763826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NaZAy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298763826/reactions"
      },
      "updated_at" : "2022-11-01T16:07:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298763826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> NACK with longer form here: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021136.html\r\n\r\nOne question I have from that post is about:\r\n\r\n> Removing a quite-likely-incentive-compatible option from the software just encourages miners to adopt an additional patch if they ever deem it necessary to increase their revenue\r\n\r\nTo me this is sounds like an argument *for* removing the option, not an argument *against* removing the option, because if we see miners actually taking the effort to patch their software in this way it gives us a real *empirical* confirmation that our mempool policy is not incentive-compatible, and that it needs to change.\r\n\r\nIn general, if bitcoin core software is designed around following a single mempool policy, and if we can observe whether or not miners are following that policy, it puts us in a solid position to be able to improve the policy over time, and have a network that is reliable and performant without painful edge cases and usability problems. If different mempools have different policies, it seems like it would be a lot harder to evaluate any one policy or for the network to be reliable and improve over time.",
      "created_at" : "2022-11-01T16:36:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1298807067",
      "id" : 1298807067,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Najkb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298807067/reactions"
      },
      "updated_at" : "2022-11-01T16:36:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298807067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> To me this is sounds like an argument for removing the option, not an argument against removing the option, because if we see miners actually taking the effort to patch their software in this way it gives us a real empirical confirmation that our mempool policy is not incentive-compatible, and that it needs to change.\r\n\r\nI don't think we should be encouraging miners to run even more patches to be profitable. That said, I think it's an ok argument for leaving it in as false unless other data comes in.  (this is my current stance fwiw) ",
      "created_at" : "2022-11-01T16:42:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1298814109",
      "id" : 1298814109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NalSd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298814109/reactions"
      },
      "updated_at" : "2022-11-01T16:47:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298814109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > And I'm pointing out that fullrbf as it exists in master (when this mempoolfullrbf flag is enabled) is not incentive compatible in some obvious situations.\r\n> \r\n> \"I want to steal from 0-conf merchants\" is the \"use-case\" you're ignoring, and where the argument falls apart imo. It's the whole reason we're having this debate, it's that merchants are scared about it. If people didn't believe it was incentive compatible, we wouldn't be having this conversation at all.\r\n\r\nI completely agree that the fullrbf policy currently in master is incentive compatible enough to help people steal from 0-conf merchants.  \r\n\r\nThe issue with incentive compatibility that I was trying to bring up here is that if you look at our rbf policy as a whole, you'd find problems with its design (namely, the lack of comparison between the ancestor feerate of an incoming transaction, and the actual feerates of all the transactions that would be evicted, can mean that we'd evict transactions that would be mined in the next block in favor of a transaction that may not be mined for a long time).  So in that sense, adopting fullrbf is trading one set of incentive compatibility problems for another.  It's not like we have a policy A that is so perfectly designed and  incentive compatible on the one hand, and this irrational non-replacement policy B on the other hand, and we're just trying to move everyone who is suffering in the backwards B world into the enlightened A world.  Instead, A itself has some good things about it, and it has some issues, and B has some good things about it, and some issues of its own.  \r\n\r\nSo if you put aside the question of 0-conf and just tried to look at the policies on their face, it's hard to argue that this is a strict improvement over giving people a choice of which policy regime to opt into.\r\n\r\n> edit: and for anyone reading I'm completely against stealing from merchants, and personally will not be working towards fullrbf-default-on efforts because of lack of ethical use-cases.\r\n\r\nI think this gets at the fundamental issue, which I think we both largely agree on, which is that the main use case of fullrbf is helping users steal from 0-conf merchants.  It's not that an opt-in non-replacement policy is fundamentally bad; it's just that businesses offering 0-conf services seem to be offering a reason to subvert the very policy on which they (predominantly) rely.\r\n\r\n> Ostensibly, we are trying to allow people to bid fees for inclusion to blocks. Excluding people from _bidding against themselves_ is clearly different than V3 type patterns which are for making bidding a robust process.\r\n\r\nI just want to make sure that no subtlety in my argument here was overlooked -- I do think that the v3 transaction proposal, as an opt-in set of restrictions on certain transactions to support a particular use case, makes sense.  I also think that when applied to the use cases we have in mind, the v3 proposal should make it easier for the best transactions to propagate to miners.  \r\n\r\nI would also argue that a non-replacement policy, when used correctly, can also help miners get the best transactions, if the transaction participants are better able to coordinate when to use CPFP and when not to.  The pinning issues with RBF highlight this issue exactly (wouldn't it make sense for wallets to be more willing to spend unconfirmed outputs from non-signaling incoming transactions and just fee bump them appropriately? with rbf transactions, pinning and the greater chance of having your child transaction becoming invalid make this messier).\r\n\r\nMy comparison of v3 to non-replacement transactions is in the use cases that we do not foresee, which might in turn create incentives that could be argued would theoretically make the v3 ruleset not incentive compatible.  This is essentially how I see 0-conf merchants' use of non-replacement transactions; they have turned a neutral policy into something that theoretically may not be incentive compatible, by creating an incentive to break it.\r\n\r\nWhat I'm arguing though is that we should wait to see evidence that there are actually transactions being broadcast and mined that subvert the policy, and not just postulate that there are reasons for the policy to be subverted and therefore we should move to break it prematurely.  This is because there may be countering reasons why the policy isn't being subverted (perhaps because people are mostly honest), and I don't think it's great to break a theoretically useful policy (non-replacement) without a really good reason. \r\n\r\nIn the analogy to v3 transactions, a similar scenario could occur if lots of non-lightning services start using v3 transactions for reasons that (likely) wouldn't make any sense, creating theoretical demand for more child transactions for fee bumping and access to unconfirmed coins.  I would hope that we would try to support the v3 use case by just communicating that this is a bad idea and not the intent of the policy, and wait until we were to actually see evidence of transactions being relayed and mined that violate the policy, rather than offer tools to subvert the policy prematurely just because of a theoretical incentive compatibility problem.",
      "created_at" : "2022-11-01T20:30:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1299101277",
      "id" : 1299101277,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NbrZd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1299101277/reactions"
      },
      "updated_at" : "2022-11-01T20:30:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1299101277",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think we're primarily disagreeing on if a knob should exist; I think it's fine and respectful, while picking a \"good\" default.",
      "created_at" : "2022-11-01T20:58:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1299146661",
      "id" : 1299146661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nb2el",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1299146661/reactions"
      },
      "updated_at" : "2022-11-01T20:58:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1299146661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26403](https://github.com/bitcoin/bitcoin/pull/26403) ([POLICY] Ephemeral anchors by instagibbs)\n* [#26305](https://github.com/bitcoin/bitcoin/pull/26305) (Enable `mempoolfullrbf=1` by default by ariard)\n* [#26287](https://github.com/bitcoin/bitcoin/pull/26287) (Temporarily disable -mempoolfullrbf for the main chain by MarcoFalke)\n* [#25038](https://github.com/bitcoin/bitcoin/pull/25038) (policy: nVersion=3 and Package RBF by glozow)\n* [#21422](https://github.com/bitcoin/bitcoin/pull/21422) (Add feerate histogram to getmempoolinfo by kiminuo)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-11-01T22:50:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1299324521",
      "id" : 1299324521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nch5p",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1299324521/reactions"
      },
      "updated_at" : "2022-11-04T10:52:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1299324521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reading the reasoning  on the mailing post, I think there are more long-term implications in the suggestion of adopting the transaction-relay policy of non-interfering use cases to what the network supposes. Especially the concern we might create mining income asymmetries due to unequal access to transactions flows bypassing policies, in a future where fees should substantially contribute to block reward. Beyond, policy design miner-incentive misalignement could create \"hidden\" security risks for protocols like Lightning, leading to sudden wreckage (e.g miner-bribing contract to ignore version=3 policy). I think a more complete layout of those implications should be pursued on the mailing list. To be clear, I'm not saying a transaction-relay philosophy \"to each use-case, a set of policy rules\" AFAIU  isn't a reasonable path forward, just we should rather understand better the implications. \r\n\r\nAnswering on the direct questions, as argued multiple times, full-rbf removes one DoS concern for multi-party transactions flows. The solution is satisfying in the sense, if full-rbf is deployed on the majority of the network, a participant to a coinjoin transaction can expect the target transaction, if it offers a better fee in the definition of BIP125 to propagate to the miners. The coinjoin protocol execution doesn't have to halt, and it can keep progressing forward as long as you have fee-bumping reserves available to compete with blockspace demand >\r\n\r\n>   As discussed in the mailing list thread, the security problem with a coinjoin protocol/multiparty funded transaction protocol that Antoine described can still occur even if fullrbf were the norm.\r\n\r\nHowever, reading this statement, I'm not sure if we all think about the same success/failure terms for the security problem raised ? The arguments why the solution is not satisfying are not clear to me.\r\n\r\nAnother more distant concern (yet to be backed up by more research), full-rbf removes a mass mempool-partitioning vector, where an attacker could partition all the network mempools states and from then alter fee-estimation or leverage this as a building block for advanced pinning (cf. the last attack scenario [0]). Of course, partitioning mempools states due to policy difference is always a potential outcome (e.g Taproot transactions between upgraded and non-upgrade nodes), however I wonder what level of difficulty and cost we should burden on an attacker, or consider this as inevitable.\r\n\r\nOn the second question, if we had a stronger model of what we mean by incentive-compatible, rather to evaluate any rule on a binary approach (i.e either compatible or not), we could adopt a quantitative approach. Each policy rule impact could be measured in deviation from an \"ideal\" mining income (as we're doing in cryptanalysis where we deviate from the perfect security of the one-time pad) and to be pondered with other dimensions like privacy or full-node DoS surface increased. If we had a consistent modeling of miner incentive-compatibility that we'll agree on, we could make legible statement if enforcing BIP125 rules on all transactions or not is a improvement. One could argue today that the non-replacement policy regime as expected by zeroconf operators is \"incentive-compatible\" in the sense it favors Bitcoin adoption as a payment system, as such increase fees volume (all depends how you construct your model, and what variables you select or not). \r\n\r\nOn the last question, if someone proposes a command line option that breaks v3 transaction relay in the future, I think I would be in favor of such change. I could understand a full-node operator which is not partaking in Lightning neither interested to have compelling fee-estimation, and willing to reduce the CPU DoS surface of a low-performance node. Any transaction-relay rules or mempool acceptance rules, even wisely designed and reviewed, increases the bug surface of a full-node, a risk a node operator could choose to not burden with.  \r\n\r\n[0]  https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/018011.html  ",
      "created_at" : "2022-11-02T03:39:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1299522242",
      "id" : 1299522242,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NdSLC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1299522242/reactions"
      },
      "updated_at" : "2022-11-02T03:47:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1299522242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Strong NACK\r\n\r\nBy doing this we're setting an extremely bad precedent that zeroconf \"breaking\" is our responsibility. Zeroconf is antithetical to the trustless, economic incentive driven, design of Bitcoin. It's a dangerous practice that has repeatedly bitten naive users leading to large losses.\r\n\r\n_Any_ option that changes mempool policy breaks zeroconf if used by miners because any difference in mempool policy can be exploited. `mempoolfullrbf` isn't special and claiming otherwise is dishonest for users.",
      "created_at" : "2022-11-02T09:07:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1299902325",
      "id" : 1299902325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Neu91",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1299902325/reactions"
      },
      "updated_at" : "2022-11-02T09:07:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1299902325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">By doing this we're setting an extremely bad precedent that zeroconf \"breaking\" is our responsibility. Zeroconf is antithetical to the trustless, economic incentive driven, design of Bitcoin. It's a dangerous practice that has repeatedly bitten naive users leading to large losses.\r\n\r\n@petertodd I'm not entirely sure I follow your argument, so I'd appreciate a clarification. I understand that you think two things: (a) zeroconf is antithetical to Bitcoin and should be eliminated, and (b) this PR (or the one that introduced `-mempoolfullrbf`) does not affect the safety of zeroconf in a material way, because it's inherently dangerous.\r\n\r\nI think I can accept both of those statements as your position, but if they are both true, why would you care strongly whether this PR is merged or not?  Why does anyone need the ability to enable fullrbf in the way that `-mempoolfullrbf` does, if not to improve the ability to steal from zeroconf merchants?  I'd like to understand if there's another use case for the fullrbf flag that I'm missing.",
      "created_at" : "2022-11-02T13:04:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1300371532",
      "id" : 1300371532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NghhM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1300371532/reactions"
      },
      "updated_at" : "2022-11-02T13:06:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1300371532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "On Wed, Nov 02, 2022 at 06:04:51AM -0700, Suhas Daftuar wrote:\n> >By doing this we're setting an extremely bad precedent that zeroconf \"breaking\" is our responsibility. Zeroconf is antithetical to the trustless, economic incentive driven, design of Bitcoin. It's a dangerous practice that has repeatedly bitten naive users leading to large losses.\n> \n> @petertodd I'm not entirely sure I follow your argument, so I'd appreciate a clarification. I understand that you think two things: (a) zeroconf is antithetical to Bitcoin and should be eliminated, and (b) this PR (or the one that introduced `-mempoolfullrbf`) does not affect the safety of zeroconf in a material way, because it's inherently dangerous.\n> \n> I think I can accept both of those statements as your position, but if they are both true, why would you care strongly whether this PR is merged or not?  Why does anyone need the ability to enable fullrbf in the way that `-mempoolfullrbf` does, if not to improve the ability to steal from zeroconf merchants?  I'd like to understand if there's another case for the fullrbf flag that I'm missing.\n\nFirst of all, people do on occasion send non-opt-in-signalling transactions\nthat need to be fee-bumped to get mined in a reasonable amount of time.\nSimilarly, it's perfectly valid to try to cancel a transaction sent in error,\nregardless of opt-in status. That alone is more than enough reason to support\nfull-rbf. The need to signal opt-in status is also of course a privacy harm.\nAgain, that's enough reason to support full-rbf.\n\nMore generally, zeroconf is dangerous. Both to users to mistakenly believe it\nto be secure and get defrauded, and all Bitcoin users who are harmed by\nattempts to make it secure. What you are doing here with this pull-req is\npolitics: you're trying to take away an option in an attempt to make it\ninconvenient enough for miners and other users that this dangerous feature\ncontinues to live on. And in the process, you're setting precedents that will\nharm Bitcoin development by constraining what we can do in the future without\nrunning into yet more nonsense politics from the people trying to continue to\nkeep zeroconf on life support.\n\nWe're lucky that we haven't yet invited legal action from businesses trying to\nkeep zeroconf a thing. We're much better off killing it while we can, at a time\nwhen it's hardly used.\n",
      "created_at" : "2022-11-02T14:15:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1300498224",
      "id" : 1300498224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NhAcw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1300498224/reactions"
      },
      "updated_at" : "2022-11-02T14:15:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1300498224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I have a question that is making me reconsider my concept ACK for this PR: Do people who support keeping the `-mempoolfullrbf` option believe keeping it will have a practical effect on network transaction propagation, and that removing it would be a real change? Or would removing the option basically be symbolic, and not likely to have a significant and observable effect on the behavior of network?\r\n\r\nI might have gotten the misconception from not reading deeply enough that having this option or not having it would basically make no practical difference for the network, because few people would be interested enough to set the option, and unless a large fraction of nodes did set the option, it wouldn't practically affect what transactions ultimately get propagated and confirmed. But maybe this is not the case, and only a few nodes and miners need to set the option for it to have a real, noticeable effect. If this is the case, I'd rescind my ACK, because I do think miners should have freedom to decide what transactions they want to confirm (whatever their reasoning), or even if they shouldn't have that freedom, trying to remove it by deleting a few lines of mempool code would just be a dumb/heavy-handed/ineffective tactic.\r\n\r\nFollowing this logic, I'd also support having `-disable_v3_transaction_enforcement` option if we believed enough people might enable that option for it to have a practical effect on the network (good or bad). I don't think bitcoin core should support options that are just symbolic ineffective signaling mechanisms without good use cases. I think if policy options like `-mempoolfullrbf` or `-disable_v3_transaction_enforcement` are added that are mostly intended to affect global network behavior rather than local node behavior, they should only be added on a temporary basis, as ways of providing backwards compatibility, or as ways of experimenting and gathering information so default P2P behavior can be more performant and reliable in the future. I think it would be bad thing to let mempool policy options accumulate over time, because it would make network behavior harder to reason about and create corner cases that make it less reliable.\r\n\r\n(I am only thinking here about what policy options it is good for bitcoin core software to support, and don't have an informed opinion about whether full RBF is good policy or not. Suhas's arguments that full RBF behavior is actually complicated and hard to reason about, and that RBF signalling can make usage simpler and mempool optimizations possible make sense to me. But ariard's concerns that RBF signalling could create attack vectors and be unsustainable also ring true. Peter Todd's concerns about zero conf may also be reasonable.)\r\n\r\nI just think regardless of whether full RBF policy is good or bad, that the `-mempoolfullrbf` option should have a shelf-life. It does not seem like a good thing in the long term for individual nodes to consciously choose different views of the transaction universe.",
      "created_at" : "2022-11-02T16:02:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1300767663",
      "id" : 1300767663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NiCOv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1300767663/reactions"
      },
      "updated_at" : "2022-11-02T16:02:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1300767663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`mempoolfullrbf=1` by itself won't do much for transaction propagation unless a non-trivial fraction of nodes enable it. In conjunction with `addnode` however it does make it much easier for people to opt-in to effective full-rbf relay policy for their own nodes, regardless of what % of nodes choose to run it. For example, a friend of mine told me that he was waiting for v24.0 to be released to run full-rbf, because his node was on Umbrel, and installing a custom patch would be annoying; he was going to peer with another full-rbf node to ensure propagation worked.\n\nAs for miners, again, if they _only_ use the `mempoolfullrbf=1` option it's symbolic until a non-trivial percentage of nodes enable it. But again, by using `addnode` to connect to other full-rbf nodes, it will get full-rbf replacements mined even with very little hash power running it.\n\nI and others are currently running a dozen or so nodes that have both full-rbf enabled, and preferential peering via a full-rbf service bit. So finding a node to peer with to get tx propagation to work reliably isn't too hard.\n\ntl;dr: if people choose too, they can use `mempoolfullrbf` to make a genuine difference. If people don't use it, it'll make no difference at all.\n\nOn November 2, 2022 5:02:27 PM GMT+01:00, Ryan Ofsky ***@***.***> wrote:\n>I have a question that is making me reconsider my concept ACK for this PR: Do people who support keeping the `-mempoolfullrbf` option believe keeping it will have a practical effect on network transaction propagation, and that removing it would be a real change? Or would removing the option basically be symbolic, and not likely to have a significant and observable effect on the behavior of network?\n>\n>I might have gotten the misconception from not reading deeply enough that having this option or not having it would basically make no practical difference for the network, because few people would be interested enough to set the option, and unless a large fraction of nodes did set the option, it wouldn't practically affect what transactions ultimately get propagated and confirmed. But maybe this is not the case, and only a few nodes and miners need to set the option for it to have a real, noticeable effect. If this is the case, I'd rescind my ACK, because I do think miners should have freedom to decide what transactions they want to confirm (whatever their reasoning), or even if they shouldn't have that freedom, trying to remove it by deleting a few lines of mempool code would just be a dumb/heavy-handed/ineffective tactic.\n>\n>Following this logic, I'd also support having `-disable_v3_transaction_enforcement` option if we believed enough people might enable that option for it to have a practical effect on the network (good or bad). I don't think bitcoin core should support options that are just symbolic ineffective signaling mechanisms without good use cases. I think if policy options like `-mempoolfullrbf` or `-disable_v3_transaction_enforcement` are added that are mostly intended to affect global network behavior rather than local node behavior, they should only be added on a temporary basis, as ways of providing backwards compatibility, or as ways of experimenting and gathering information so default P2P behavior can be more performant and reliable in the future. I think it would be bad thing to let mempool policy options accumulate over time, because it would make network behavior harder to reason about and create corner cases that make it less reliable.\n>\n>(I am only thinking here about what policy options it is good for bitcoin core software to support, and don't have an informed opinion about whether full RBF is good policy or not. Suhas's arguments that full RBF behavior is actually complicated and hard to reason about, and that RBF signalling can make usage simpler and mempool optimizations possible make sense to me. But ariard's concerns that RBF signalling could create attack vectors and be unsustainable also ring true. Peter Todd's concerns about zero conf may also be reasonable.)\n>\n>I just think regardless of whether full RBF policy is good or bad, that the `-mempoolfullrbf` option should have a shelf-life. It does not seem like a good thing in the long term for individual nodes to consciously choose different views of the transaction universe.\n>\n>-- \n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1300767663\n>You are receiving this because you were mentioned.\n>\n>Message ID: ***@***.***>",
      "created_at" : "2022-11-02T18:01:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1301023563",
      "id" : 1301023563,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NjAtL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301023563/reactions"
      },
      "updated_at" : "2022-11-02T18:01:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301023563",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If we merge this, anyone who wants to use the feature can do `git cherry-pick 3e27e317270fdc2dd02794fea9da016387699636` and compile. So the cat crawled slightly further out of the bag.\r\n\r\nI haven't had time to read all the mailinglist discussion. It could make sense to punt this feature, reopen the original PR and merge it later - depending on the outcome of that discussion. Unless there is an _urgent_ reason to have this feature in the current release.\r\n\r\nNit: commit message could point to the previous commit instead of the PR (Github will find the PR for you once you click on the commit).",
      "created_at" : "2022-11-03T08:03:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1301755629",
      "id" : 1301755629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nlzbt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301755629/reactions"
      },
      "updated_at" : "2022-11-03T08:03:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301755629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "As I said above:\n\nâFor example, a friend of mine told me that he was waiting for v24.0 to be released to run full-rbf, because his node was on Umbrel, and installing a custom patch would be annoying; he was going to peer with another full-rbf node to ensure propagation worked.â\n\nThe fact is, we're punting on this in response to a tiny handful of people complaining that they wanted zero conf to continue to work. And the effect of taking away options is to just put up barriers to people who quite rationally, think economically rational mempool policy is preferable over trust.\n\nOn November 3, 2022 9:03:38 AM GMT+01:00, Sjors Provoost ***@***.***> wrote:\n>If we merge this, anyone who wants to use the feature can do `git cherry-pick 3e27e317270fdc2dd02794fea9da016387699636` and compile. So the cat crawled slightly further out of the bag.\n>\n>I haven't had time to read all the mailinglist discussion. It could make sense to punt this feature, reopen the original PR and merge it later - depending on the outcome of that discussion. Unless there is an _urgent_ reason to have this feature in the current release.\n>\n>Nit: commit message could point to the previous commit instead of the PR (Github will find the PR for you once you click on the commit).\n>\n>-- \n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1301755629\n>You are receiving this because you were mentioned.\n>\n>Message ID: ***@***.***>",
      "created_at" : "2022-11-03T09:42:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1301850259",
      "id" : 1301850259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NmKiT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301850259/reactions"
      },
      "updated_at" : "2022-11-03T09:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301850259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "My two cents:\r\n\r\nIMHO, âfull RBFâ will be inevitable - without BIP125, an explicit flag in Core, or anyoneâs blessings.\r\n\r\nOnce the block subsidy is gone, miners will fight for scraps for survival and do everything they can to get better margins (fees). If Core doesn't explicitly allow full RBF transactions in its mempool, there will be other non-Core mempools or some sort of black market forming.\r\n\r\nSo either we formalize full RBF, which is preferable, or it will arise out-of-band.\r\n\r\nIf you want to give zero-confs businesses some grace period, shipping `mempoolfullrbf` defaulting to false seems reasonable. But removing the option doesn't make sense to me.",
      "created_at" : "2022-11-03T13:35:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1302126057",
      "id" : 1302126057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NnN3p",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302126057/reactions"
      },
      "updated_at" : "2022-11-03T14:23:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302126057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4769925?v=4",
         "events_url" : "https://api.github.com/users/hugohn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hugohn/followers",
         "following_url" : "https://api.github.com/users/hugohn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hugohn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hugohn",
         "id" : 4769925,
         "login" : "hugohn",
         "node_id" : "MDQ6VXNlcjQ3Njk5MjU=",
         "organizations_url" : "https://api.github.com/users/hugohn/orgs",
         "received_events_url" : "https://api.github.com/users/hugohn/received_events",
         "repos_url" : "https://api.github.com/users/hugohn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hugohn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hugohn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hugohn"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@petertodd but is that an _urgent_ need?\r\n\r\nAs you point out in your [mailinglist post](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021143.html), your friend could run the v24.0rc3 release candidate binary, in case we drop it from the final release. That said, this wouldn't be safe if there are additional bug fixes in future release candidates, and running release candidates in production is not a good idea in general.\r\n\r\nThe debate around RBF has been going on for almost a decade. I think it can wait a few more months for a point release. We can determine if your bounty program worked out (i.e. created a fait accompli) through something like [miningpool.observer](https://miningpool.observer).",
      "created_at" : "2022-11-03T13:41:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1302133133",
      "id" : 1302133133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NnPmN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302133133/reactions"
      },
      "updated_at" : "2022-11-03T13:41:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302133133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I've laid out my reasoning for removing this option on the mailing list (https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021135.html).\r\n\r\n> \"enabling fullrbf\" is really just taking away user choice to\r\nopt a transaction into a non-replacement policy regime.\r\n\r\n> I think we should ask, then, whether it is reasonable on its face that\r\nusers might want to opt-in to a non-replacement policy?  Or in other words,\r\nis it reasonable for a user to mark a transaction as non-replaceable and\r\nhave that indication be enforced by the network? Note that these are two\r\ndifferent questions: you could imagine a world where fullrbf is a dominant\r\npolicy, but users still use the BIP 125 signaling method to indicate, in an\r\nunenforced way, their intention to not replace a transaction.  This might\r\ngive useful information to the network or the recipient for how to interact\r\nwith such a transaction.\r\n\r\nThe ability to \"opt into a non-replacement policy\" sounds interesting in theory but I'm not sure if it's actually that useful.\r\n\r\n* From the POV of the sender: it's not useful for the sender beyond perhaps record-keeping purposes.\r\n* From the POV of other Core nodes: they might enforce non-RBF policy in their mempools and make it harder for a \"violating\" RBF transaction to propagate, but it's not impossible (especially given the role of miners below).\r\n* From the POV of miners: they don't care about non-RBF signaling - if you initiate a non-RBF transaction, then turn around and RBF it by routing around Core mempools or by submitting directly to miners, miners will happily take the RBF transaction to earn extra fees.\r\n* From the POV of the recipient: in theory the recipient should be benefiting the most from such a policy, but given the above, they also can't trust the non-RBF signaling from the sender.\r\n\r\nAt the end of the day, any signaling not backed by PoW holds no weight. And the reality is that any unconfirmed Bitcoin transaction can be RBF-ed, regardless of node policies.",
      "created_at" : "2022-11-03T15:13:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1302262134",
      "id" : 1302262134,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NnvF2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302262134/reactions"
      },
      "updated_at" : "2022-11-03T15:28:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302262134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4769925?v=4",
         "events_url" : "https://api.github.com/users/hugohn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hugohn/followers",
         "following_url" : "https://api.github.com/users/hugohn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hugohn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hugohn",
         "id" : 4769925,
         "login" : "hugohn",
         "node_id" : "MDQ6VXNlcjQ3Njk5MjU=",
         "organizations_url" : "https://api.github.com/users/hugohn/orgs",
         "received_events_url" : "https://api.github.com/users/hugohn/received_events",
         "repos_url" : "https://api.github.com/users/hugohn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hugohn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hugohn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hugohn"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 4a4086603e6b548a21c85eb4cad9e4d4e02573fd\r\n\r\nv24.0 release notes will have to be edited (when this is backported)\r\n\r\nThe term Full RBF is confusing. As @sdaftuar points out in his mailinglist post, `-mempoolfullrbf` really just means \"BIP 125 without the signal\". Without also getting rid of other BIP 125 constraints, we leave at least some pinning attacks unaddressed. So it's not a huge improvement for Lightning and other multi-party protocols, not an improvement for those who already signal BIP 125 by default. So imo the change is not useful enough to harm even \"a tiny handful of people\".\r\n\r\nIt would be even more confusing to have \"full rbf\" available now and \"maximal rbf\" later. Maybe it turns out we can't come up with a \"maximal RBF\" that is meaningfully more incentive compatible than \"full rbf\", but I think this should be explored a bit more.\r\n\r\nI also agree with @ajtowns that the general issue of divergent mempool policies is worth thinking through more. Since `-mempoolfullrbf` doesn't seem to solve any urgent problem, it seems reasonable to take more time to discuss things. ",
      "created_at" : "2022-11-03T15:35:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1302294309",
      "id" : 1302294309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nn28l",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302294309/reactions"
      },
      "updated_at" : "2022-11-03T15:37:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302294309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> We have had 7 years to gain insights based on usage. Something like 20-30% of all transactions opt-in already, I think? I don't think we're going to learn anything more that we can't already learn from looking at current usage patterns.\r\n\r\n@sdaftuar we have **NO** insights about usage of full rbf. I remember you suggesting full-rbf a few week backs in IRC. I think @petertodd is right and its just egos and politics else technically its very clear this option will help bitcoin.",
      "created_at" : "2022-11-03T17:32:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1302449135",
      "id" : 1302449135,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nocvv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302449135/reactions"
      },
      "updated_at" : "2022-11-03T18:09:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302449135",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> First of all, people do on occasion send non-opt-in-signalling transactions\r\nthat need to be fee-bumped to get mined in a reasonable amount of time.\r\nSimilarly, it's perfectly valid to try to cancel a transaction sent in error,\r\nregardless of opt-in status. [...] The need to signal opt-in status is also of course a privacy harm.\r\n\r\n@petertodd Thanks for providing these examples; I think theyâre worth consideration and reviewers should decide how compelling they are. \r\n\r\n> What you are doing here with this pull-req is\r\npolitics: you're trying to take away an option in an attempt to make it\r\ninconvenient enough for miners and other users that this dangerous feature\r\ncontinues to live on. \r\n\r\nThis is either poor phrasing or you have misunderstood my motivation: I have no intent with this PR to keep zeroconf going, and I am not arguing that zeroconf is a good or safe practice for the network.  It appears from Antoineâs recent mailing list post that he may also misunderstand me as somehow trying to protect zeroconf merchants or their business practices, so I will try to clarify my views here because that is not my interest at all.\r\n\r\nLet me start by saying that I think I mostly share your views that zeroconf â ie selling a product in an irrevocable way prior to a transaction having any confirmations â should not be relied upon for anything of material value. It seems to me that engaging in a practice like that is asking for trouble, and as I have thought about this issue in recent weeks it is unfortunate that zeroconf merchants exist, as their existence appears to be a lightning rod that attracts interest to pushing for fullrbf (which I now view as a protocol development mistake, at least at this time).\r\n\r\nBecause I share your view, Iâm surprised that zeroconf services appear to still be in operation, and it further makes me wonder if thereâs anything that we can do at the protocol level that would affect the existence of those operations.  Perhaps the services that exist today only engage in these practices in situations where theft could be detected and deterred via off-chain mechanisms (and hence, it may not be âzeroconfâ in the sense I defined it above, if there is recourse in the event the transaction doesnât confirm). If so, then even if such practices are bad for Bitcoin (which I think is hard to say without looking at concrete examples of merchant behavior), they may not go away in a fullrbf world either.\r\n\r\nIf non-replacement were something that I believed only existed to support zeroconf merchants, I would have stayed out of this debate.  However, I realized that what we are actually doing here is taking our opt-in non-replacement policy regime and deciding to get rid of it.  And it occurred to me that this is a policy that is independent of zeroconf practices â which are an outside-of-the-protocol merchant behavior, which we may be able to influence but not definitively eliminate â and moreover that non-replacement is actually a useful idea on its face.  In fact itâs such a useful idea that I think Iâd propose it or something like it in the future, if we were in a fullrbf world with the rbf policies we have today â but not for anything that has to do with zeroconf merchant practices, which seem insecure regardless of whether we have a non-replacement policy.\r\n\r\nSince I perhaps didnât explain this thoroughly in my mailing list post, I will expand on it here.  The RBF rules we have today are clumsy, and I have personally had countless discussions over the years with other developers about how to improve on them, primarily due to the pinning issues that exist and the incentive compatibility considerations that come with it.  On top of that, transaction chains themselves are hard to reason about in the context of coming up with optimal transaction selection for a miner and preventing mempool DoS in various ways (these are also topics I have substantial experience working on for this project).  In thinking about all this, one conclusion Iâve reached is that Bitcoinâs transaction relay protocol and user behavior would likely have been far better from the start if the expectation was that the network wouldnât generally relay transactions with unconfirmed parents â a position that I think is easy to justify if you look at the various anti-DoS rules weâve put in place over the last 10 years which have generally served to limit the transactions which get relayed on the network, in comparison to what early versions of the software supported.\r\n\r\nFrom a blank slate/initial policy of never allowing transactions with unconfirmed parents, relaxing that policy in specific situations to support narrow use cases which can be easily reasoned about would have been much better than the free-for-all we have now (where arbitrary transaction chains topologies are permitted, with the only limits being on certain kinds of package size and count).\r\n\r\nIn such a world, there would be a meaningful difference between transactions that can be replaced via feerate considerations, and transactions that the sender does not intend to replace.  In the latter case, CPFP is a far more reasonable strategy than in the former, because the recipient who chains a transaction has greater reason to believe that they are doing something helpful rather than harmful by creating the chained transaction which feebumps the parent (and not just pinning the transaction and irritating the sender, or creating a transaction that will disappear when the parent is replaced and need to be reissued, or creating a DoS vector for the network by relaying something that will need to be evicted later â which is the central issue that creates the pinning consideration in the first place).\r\n\r\nNow I get that we arenât starting from a blank slate; I wanted to take everyone through that thought experiment to try to understand that non-replacement is not intrinsically evil. Note that the CPFP use case I describe is completely benign, provided that the wallet engaging in it can reasonably handle the (likely rare, but certainly possible) situations where the first transaction doesnât confirm for some reason (eg by being able to reissue a payment if needed).\r\n\r\nMaybe you think improved CPFP policy is not compelling; that is fine and we can debate and perhaps disagree.  Or, perhaps the CPFP signal can still be in place on a network where the non-replacement is not enforced; that is hard for me to say without a lot more thought.\r\n\r\nIf you think about the policy regimes we have now or are currently discussing: (1) we have a way to opt-out of RBF (but still have lots of child transactions), (2) we have a way to opt-in to RBF (and still have lots of child transactions), and after the v3 proposal is deployed we will also have (3) a way to be able to opt-in to RBF and have just 1 child transaction (which itself will be limited).  In some ways option (2) is the least well-designed option, in that the transaction graph complexities interact with the replacement rules in ways that result in outcomes that are both suboptimal for wallets and also sometimes incentive incompatible for miners, and it would make more sense to have option (2) restrict the child transaction graph further than it does today (but perhaps not so limited as option (3) will be, which is really tailored to a single use-case). If that were a road we go down, then that would make (1) a more compelling option to have available as a policy on the network to facilitate use cases that involve lots of child transactions, and if we eliminate (1) now I fear that any attempt to bring it back in the future will fail due to concerns about zeroconf merchants â something outside our control as protocol developers.\r\n\r\nAnd as I said on the mailing list, I also fear that eliminating (1) for the reasons given could also apply to eliminating (3) in the future.  If you look at the reasons you gave above for not having (1) as a policy, I think at least two of them easily apply to the v3 transaction proposal â the consequences of users making mistakes and inadvertently using version 3 transactions when they intended to chain multiple children, and the privacy implications of another distinguished transaction type.  Now I think we have good answers to those objections â namely that no one should be using v3 transactions unless they mean to â but if your arguments are found to be compelling in this case, I fear that the v3 policy design may be subverted in the future and the efforts weâre putting in now are a waste of time.\r\n\r\nâ \r\n\r\nPerhaps it would be helpful to reviewers for me to explain what I think some of the best reasons to oppose this PR would be, in the interests of advancing the debate:\r\n\r\n1) Complexity. If itâs more complex for our mempool policy code to support both rbf and non-rbf transactions, then that might be a good reason to merge the two into one regime (this could be either due to code complexity or logical complexity of the policies interact).\r\n2) If you believe that this PR will be seen as a misguided endorsement of zeroconf then you might find that to be a compelling reason to reject this, even if you understood what Iâm trying to actually get at here with my arguments about relay design philosophy.  Even though endorsing zeroconf is not my intention, I guess this is probably an issue that would need to be addressed, given the apparent lack of understanding here already and the lengthy explanations I have had to write up!\r\n3) The level of user/miner interest in having a knob to enable fullrbf may be so high that itâs absurd we donât make the simple option available given what a simple code change it is to support, and the non-consensus nature of the option. (I think knobs should have intended use cases, so while Iâm sympathetic to the principle here, I think weighing this comes down to deciding how important the fullrbf use case is compared to the alternative.)\r\n4) The relative weighting of the other use cases that have been given for fullrbf, compared with my argument for the CPFP use case being strongest with non-replacement â reviewers can decide for themselves which use cases seem more compelling.\r\n",
      "created_at" : "2022-11-03T17:57:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1302477335",
      "id" : 1302477335,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NojoX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302477335/reactions"
      },
      "updated_at" : "2022-11-03T17:57:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302477335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I am surprised you wrote so much about full-rbf. \r\n\r\nAnyway:\r\n\r\n> This is either poor phrasing or you have misunderstood my motivation: I have no intent with this PR to keep zeroconf going, and I am not arguing that zeroconf is a good or safe practice for the network. It appears from Antoineâs recent mailing list post that he may also misunderstand me as somehow trying to protect zeroconf merchants or their business practices, so I will try to clarify my views here because that is not my interest at all.\r\n\r\nNeither zeroconf businesses nor Antoine is going to decide how bitcoin mempool works for replacing txs.\r\n\r\n > Let me start by saying that I think I mostly share your views that zeroconf â ie selling a product in an irrevocable way prior to a transaction having any confirmations â should not be relied upon for anything of material value. It seems to me that engaging in a practice like that is asking for trouble, and as I have thought about this issue in recent weeks it is unfortunate that zeroconf merchants exist, as their existence appears to be a lightning rod that attracts interest to pushing for fullrbf (which I now view as a protocol development mistake, at least at this time).\r\n \r\n zero confirmations are vulnerable w or w//o full rbf\r\n \r\n  > Because I share your view, Iâm surprised that zeroconf services appear to still be in operation, and it further makes me wonder if thereâs anything that we can do at the protocol level that would affect the existence of those operations. Perhaps the services that exist today only engage in these practices in situations where theft could be detected and deterred via off-chain mechanisms (and hence, it may not be âzeroconfâ in the sense I defined it above, if there is recourse in the event the transaction doesnât confirm). If so, then even if such practices are bad for Bitcoin (which I think is hard to say without looking at concrete examples of merchant behavior), they may not go away in a fullrbf world either.\r\n  \r\n  zero-conf businesses and projects are vulnerable irrespective of this PR \r\n  \r\n  <sub>john varvalho can try everything on twitter but his project is vulnerable</sub>\r\n  \r\n  Who will exploit this? IDK\r\n  \r\n  > If non-replacement were something that I believed only existed to support zeroconf merchants, I would have stayed out of this debate. However, I realized that what we are actually doing here is taking our opt-in non-replacement policy regime and deciding to get rid of it. And it occurred to me that this is a policy that is independent of zeroconf practices â which are an outside-of-the-protocol merchant behavior, which we may be able to influence but not definitively eliminate â and moreover that non-replacement is actually a useful idea on its face. In fact itâs such a useful idea that I think Iâd propose it or something like it in the future, if we were in a fullrbf world with the rbf policies we have today â but not for anything that has to do with zeroconf merchant practices, which seem insecure regardless of whether we have a non-replacement policy.\r\n  \r\nYou killed the idea for insights but whats we are looking for initially. Full RBF stats will only be visible when its used and available.\r\n\r\n> Since I perhaps didnât explain this thoroughly in my mailing list post, I will expand on it here. The RBF rules we have today are clumsy, and I have personally had countless discussions over the years with other developers about how to improve on them, primarily due to the pinning issues that exist and the incentive compatibility considerations that come with it. On top of that, transaction chains themselves are hard to reason about in the context of coming up with optimal transaction selection for a miner and preventing mempool DoS in various ways (these are also topics I have substantial experience working on for this project). In thinking about all this, one conclusion Iâve reached is that Bitcoinâs transaction relay protocol and user behavior would likely have been far better from the start if the expectation was that the network wouldnât generally relay transactions with unconfirmed parents â a position that I think is easy to justify if you look at the various anti-DoS rules weâve put in place over the last 10 years which have generally served to limit the transactions which get relayed on the network, in comparison to what early versions of the software supported.\r\n\r\n> From a blank slate/initial policy of never allowing transactions with unconfirmed parents, relaxing that policy in specific situations to support narrow use cases which can be easily reasoned about would have been much better than the free-for-all we have now (where arbitrary transaction chains topologies are permitted, with the only limits being on certain kinds of package size and count).\r\n\r\n> In such a world, there would be a meaningful difference between transactions that can be replaced via feerate considerations, and transactions that the sender does not intend to replace. In the latter case, CPFP is a far more reasonable strategy than in the former, because the recipient who chains a transaction has greater reason to believe that they are doing something helpful rather than harmful by creating the chained transaction which feebumps the parent (and not just pinning the transaction and irritating the sender, or creating a transaction that will disappear when the parent is replaced and need to be reissued, or creating a DoS vector for the network by relaying something that will need to be evicted later â which is the central issue that creates the pinning consideration in the first place).\r\n\r\n> Now I get that we arenât starting from a blank slate; I wanted to take everyone through that thought experiment to try to understand that non-replacement is not intrinsically evil. Note that the CPFP use case I describe is completely benign, provided that the wallet engaging in it can reasonably handle the (likely rare, but certainly possible) situations where the first transaction doesnât confirm for some reason (eg by being able to reissue a payment if needed).\r\n\r\n> Maybe you think improved CPFP policy is not compelling; that is fine and we can debate and perhaps disagree. Or, perhaps the CPFP signal can still be in place on a network where the non-replacement is not enforced; that is hard for me to say without a lot more thought.\r\n\r\nYou have improved in politics over RBF however, none of the the things I read above can change bitcoin core.\r\n\r\n\r\n> If you think about the policy regimes we have now or are currently discussing: (1) we have a way to opt-out of RBF (but still have lots of child transactions), (2) we have a way to opt-in to RBF (and still have lots of child transactions), and after the v3 proposal is deployed we will also have (3) a way to be able to opt-in to RBF and have just 1 child transaction (which itself will be limited). In some ways option (2) is the least well-designed option, in that the transaction graph complexities interact with the replacement rules in ways that result in outcomes that are both suboptimal for wallets and also sometimes incentive incompatible for miners, and it would make more sense to have option (2) restrict the child transaction graph further than it does today (but perhaps not so limited as option (3) will be, which is really tailored to a single use-case). If that were a road we go down, then that would make (1) a more compelling option to have available as a policy on the network to facilitate use cases that involve lots of child transactions, and if we eliminate (1) now I fear that any attempt to bring it back in the future will fail due to concerns about zeroconf merchants â something outside our control as protocol developers.\r\n\r\n\r\nThis is more complex and I do not understand.\r\n\r\n\r\n> And as I said on the mailing list, I also fear that eliminating (1) for the reasons given could also apply to eliminating (3) in the future. If you look at the reasons you gave above for not having (1) as a policy, I think at least two of them easily apply to the v3 transaction proposal â the consequences of users making mistakes and inadvertently using version 3 transactions when they intended to chain multiple children, and the privacy implications of another distinguished transaction type. Now I think we have good answers to those objections â namely that no one should be using v3 transactions unless they mean to â but if your arguments are found to be compelling in this case, I fear that the v3 policy design may be subverted in the future and the efforts weâre putting in now are a waste of time.\r\n\r\nI do not care about v3. This discussion is about full rbf.\r\n",
      "created_at" : "2022-11-03T18:43:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1302527561",
      "id" : 1302527561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nov5J",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302527561/reactions"
      },
      "updated_at" : "2022-11-03T18:49:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302527561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "FYI: https://twitter.com/lightcoin/status/1588249269412057088\r\n\r\n> I am planning to run [full-RBF] with that option enabled once 24.0 is released, assuming that's an option. If it is removed, I may just run the rc with the option enabled until mempoolfullrbf either gets into a main release or I find a reason to switch away from the rc version.\r\n\r\nNot the same person as the friend I mentioned above.",
      "created_at" : "2022-11-03T19:27:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1302570867",
      "id" : 1302570867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585No6dz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302570867/reactions"
      },
      "updated_at" : "2022-11-03T19:27:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302570867",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tentative concept ACK.\r\n\r\nAm still forming my opinion on this pull relative to #26287, but given the controversial nature of adding the option, the most prudent course may be not to include it for v24, while continuing discussion for future releases.",
      "created_at" : "2022-11-03T19:56:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1302598435",
      "id" : 1302598435,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NpBMj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302598435/reactions"
      },
      "updated_at" : "2022-11-03T19:56:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302598435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 4a4086603e6b548a21c85eb4cad9e4d4e02573fd - code review, basic testing\r\n\r\nWhen #25353 was proposed and merged, the rationale provided was that this would aid in \"the security of multi-party funded transactions against pinning attacks\", and in addition, objections were relatively minimal and non-specific [[ref]](https://github.com/bitcoin/bitcoin/pull/25373#issuecomment-1163422654). But, it turns out that this approach to full RBF [isn't sufficient](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021125.html) to make multi-party funded transactions secure against the types of pinning attacks. Furthermore specific objections have since been raised [[ref]](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021007.html) [[ref]](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021056.html). If we'd known that this approach didn't work for its intended use case earlier, I don't think #25353 would (or should) have been merged; so until we can fix the code/policy to achieve what it was originally intended to achieve, I think we should revert the change.",
      "created_at" : "2022-11-04T07:23:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303063389",
      "id" : 1303063389,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nqytd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303063389/reactions"
      },
      "updated_at" : "2022-11-04T07:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303063389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "If I understand correctly, the meta topic here seems to be templating for preference/curation/censorship of mempool txns, which templates to provide, and which to have as default. \n\nReplacement is just one option a node might prefer, of, probably, many, and first-seen or any other preference or dropping of txns are no less valid as potential settings. It is up to the individual node to decide. \n\nSo, it seems this kind of thing should be part of a superficial config for both nodes and wallets, not something that requires recompiling, as such a setting may need to be changed automatically or responsively.\n\nWe should not inject bias for any particular preference as default, but we probably do need to start with some sort of policy, so this should be set to current status quo consensus, not a new agenda for rbf to become a first-class default type. \n\nAll of this is not to mention the many things I could say that are great about merchants being able to opt in to 0conf, and that the risks there are currently very manageable and exposure can easily be limited to provide great value to merchants and consumers. \n\nWe can have rbf and 0conf coexisting, well, we already do! So let's be thoughtful and address the overall design intelligently and without passively aggressing or deciding for users in conflict with current consensus. Thanks! ",
      "created_at" : "2022-11-04T09:25:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303164829",
      "id" : 1303164829,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NrLed",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303164829/reactions"
      },
      "updated_at" : "2022-11-04T09:26:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303164829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18273620?v=4",
         "events_url" : "https://api.github.com/users/BitcoinErrorLog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinErrorLog/followers",
         "following_url" : "https://api.github.com/users/BitcoinErrorLog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinErrorLog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinErrorLog",
         "id" : 18273620,
         "login" : "BitcoinErrorLog",
         "node_id" : "MDQ6VXNlcjE4MjczNjIw",
         "organizations_url" : "https://api.github.com/users/BitcoinErrorLog/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinErrorLog/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinErrorLog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinErrorLog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinErrorLog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinErrorLog"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Strong NACK\r\nAs someone who has had transactions get stuck before, being able to RBF easily is the best experience for users.\r\n",
      "created_at" : "2022-11-04T10:17:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303217616",
      "id" : 1303217616,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NrYXQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303217616/reactions"
      },
      "updated_at" : "2022-11-04T10:17:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303217616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/87901949?v=4",
         "events_url" : "https://api.github.com/users/Bwahharharrr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Bwahharharrr/followers",
         "following_url" : "https://api.github.com/users/Bwahharharrr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Bwahharharrr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Bwahharharrr",
         "id" : 87901949,
         "login" : "Bwahharharrr",
         "node_id" : "MDQ6VXNlcjg3OTAxOTQ5",
         "organizations_url" : "https://api.github.com/users/Bwahharharrr/orgs",
         "received_events_url" : "https://api.github.com/users/Bwahharharrr/received_events",
         "repos_url" : "https://api.github.com/users/Bwahharharrr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Bwahharharrr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Bwahharharrr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Bwahharharrr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I generally like to leave subtle things to the experts (of which I consider the PR author and some of the ACKers of this PR to be) who have spent more time thinking about optimal default policy for Lightning and Layer 2 protocols longer term.\r\n\r\nI'm very uncomfortable though by talk of \"divergent mempool policies\" and how to prevent them. I'm of the view that if a significant subset of users want to change from default policy there shouldn't be roadblocks (e.g. already merged options removed) constructed to prevent them from doing so. Especially when there doesn't appear to perfect consensus on what the default should be. I get that the PR author doesn't think the current choice presented to users is the optimal one long term.\r\n\r\nDespite some opposition (that I personally consider short term thinking) I thought turning this option on by default and considering removing it afterwards was the best long term roadmap. This seems like a last minute screeching u-turn to me but I guess I have to have faith that this truly does hinder plans for the long term v3 transaction proposal. So I guess it is a faith based Concept ACK.",
      "created_at" : "2022-11-04T10:38:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303240298",
      "id" : 1303240298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nrd5q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303240298/reactions"
      },
      "updated_at" : "2022-11-04T10:38:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303240298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Among all these strong and soft feelings, let me say I understand and respect both points of view.\r\n\r\nStory: Another thing is that Bitcoin was for me always very peaceful because I could sleep well knowing that when a valid final (non-RBF) transaction is in the network, it will get mined eventually. And I had transactions in the mempool for half a year in 2020, all sent from my own UTXOs and 1sat/vB fee. I do not want to have a future option to take back my word which I gave (to my younger self) in the past. My nodes keep rebroadcasting all transactions from the mempool and have much higher limits, so none of them will be forgotten.\r\n\r\nThose transactions which opt-in to RBF can be replaced. That's fine. But that is opt-in. Something I learned is very important for Bitcoin. Making all the wallets opt-in to RBF by default is fine for me as long as I can still turn it off and it will be understood by network.\r\n\r\nOpt-in RBF is there already. No coding needed. Possibility to send a non-RBF transaction is there as well. But when it gets removed, I think that sooner or later there may arise a need for this functionality and it will need to be implemented anew.\r\n\r\nSo my point is we are showing something (some best-practices) to further generations. And despite something is technically possible (the miner can run a full-RBF node which I do not know about for example, but that's fine, it's not what everyone does and what I would expect since my transactions are not sent straight to any particular miner, but rather the peers), e.g. replacing the transaction although it does not opt-in to RBF, it does not have to be advertised. And when someone mentions sybil attacks â you only need one node which tells the truth.\r\n\r\nKeep your opinions. Please do not use \"strong\" words. Let the discussion flow.\r\n\r\nThanks for reading.\r\n\r\nAs for me and my household, ACK 4a40866",
      "created_at" : "2022-11-04T11:11:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303278716",
      "id" : 1303278716,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NrnR8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303278716/reactions"
      },
      "updated_at" : "2022-11-04T11:11:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303278716",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/244565?v=4",
         "events_url" : "https://api.github.com/users/jsarenik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jsarenik/followers",
         "following_url" : "https://api.github.com/users/jsarenik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jsarenik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jsarenik",
         "id" : 244565,
         "login" : "jsarenik",
         "node_id" : "MDQ6VXNlcjI0NDU2NQ==",
         "organizations_url" : "https://api.github.com/users/jsarenik/orgs",
         "received_events_url" : "https://api.github.com/users/jsarenik/received_events",
         "repos_url" : "https://api.github.com/users/jsarenik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jsarenik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jsarenik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jsarenik"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK\r\n\r\n* `mempoolfullrbf` is default off\r\n* 0-conf is not safe, now we also have alternatives",
      "created_at" : "2022-11-04T11:42:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303305705",
      "id" : 1303305705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nrt3p",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303305705/reactions"
      },
      "updated_at" : "2022-11-04T11:42:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303305705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6470319?v=4",
         "events_url" : "https://api.github.com/users/RCasatta/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RCasatta/followers",
         "following_url" : "https://api.github.com/users/RCasatta/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RCasatta/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RCasatta",
         "id" : 6470319,
         "login" : "RCasatta",
         "node_id" : "MDQ6VXNlcjY0NzAzMTk=",
         "organizations_url" : "https://api.github.com/users/RCasatta/orgs",
         "received_events_url" : "https://api.github.com/users/RCasatta/received_events",
         "repos_url" : "https://api.github.com/users/RCasatta/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RCasatta/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RCasatta/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RCasatta"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK\n\nzeroconf isn't a safe, making it a  tiny bit harder to RBF is delusional.",
      "created_at" : "2022-11-04T11:58:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303333398",
      "id" : 1303333398,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nr0oW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303333398/reactions"
      },
      "updated_at" : "2022-11-04T11:58:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303333398",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1087?v=4",
         "events_url" : "https://api.github.com/users/jwilkins/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jwilkins/followers",
         "following_url" : "https://api.github.com/users/jwilkins/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jwilkins/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jwilkins",
         "id" : 1087,
         "login" : "jwilkins",
         "node_id" : "MDQ6VXNlcjEwODc=",
         "organizations_url" : "https://api.github.com/users/jwilkins/orgs",
         "received_events_url" : "https://api.github.com/users/jwilkins/received_events",
         "repos_url" : "https://api.github.com/users/jwilkins/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jwilkins/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jwilkins/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jwilkins"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I tend to stay out of the drama, but this PR somewhat affects me personally, so I have to NACK it.\r\n\r\nI was also waiting for v24 to be released so that I could enable the option on my node. Removing it would force me to manually patch and compile, which is something I can definitely do, but it's not ideal for me.\r\n\r\nI don't think there's really much left to bring to the discussion, but what I'd like to say is that it's baffling to me how many people here are arguing we should just trust miners not to follow their economic incentive just because a BIP somewhere said so. I hope all the people acking here are fully aware of the implications of their arguments, because to me it just doesn't make any sense.\r\n\r\n------\r\n\r\nAnd replying to @jsarenik:\r\n\r\n>  ... knowing that when a valid final (non-RBF) transaction is in the network, it will get mined eventually.\r\n\r\nThis is not true at all. Even if it only spends your inputs it might get dropped from the mempool at some point. And if it comes from somebody else they could always try to replace it and potentially succeed.",
      "created_at" : "2022-11-04T11:58:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303334375",
      "id" : 1303334375,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nr03n",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303334375/reactions"
      },
      "updated_at" : "2022-11-04T11:58:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303334375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3058409?v=4",
         "events_url" : "https://api.github.com/users/afilini/events{/privacy}",
         "followers_url" : "https://api.github.com/users/afilini/followers",
         "following_url" : "https://api.github.com/users/afilini/following{/other_user}",
         "gists_url" : "https://api.github.com/users/afilini/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/afilini",
         "id" : 3058409,
         "login" : "afilini",
         "node_id" : "MDQ6VXNlcjMwNTg0MDk=",
         "organizations_url" : "https://api.github.com/users/afilini/orgs",
         "received_events_url" : "https://api.github.com/users/afilini/received_events",
         "repos_url" : "https://api.github.com/users/afilini/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/afilini/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/afilini/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/afilini"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Hi, first time commenting here. I'll first admit I have not invested nearly as much time thinking about this as most people here. I respect both views and I think I understand why some people ACK this as it seems the change doesn't solve the problem that was advertised when it was merged. I'd like to express why my general view of this _direction_ is a NACK. As I see it, the root issue isn't the rbf itself, but the merchants/users doing 0-conf transactions. The 0-conf transaction pattern, as I understand it, works under a new assumption that lives on the social layer rather than in the system itself. I don't believe the Bitcoin node software should add layers of protection for the users that are based on social assumptions. A switch to fullrbf may be inevitable because the nature of the protocol is such that double-spending a transaction that's not protected by energy requires no energy cost. We can't change this by hiding the UI buttons/commands or by adding new social assumptions i.e. the person has no communication channel with the miners. Eventually, these communication channels will exist because it will be profitable. As I see it, a transaction floating in the mempool is just a sequence of bits like any other bits on the internet. It's only when these become a part of the ledger that they get any kind of meaningful double-spend protection - until then, they're unsafe by definition. While I see the temptation to remove the UI buttons, I fear the use of such unsafe methods (or rather, relying on unsafe social assumptions) will become more adopted and eventually exploited on a great scale.\r\n\r\nThat said, it may be a good practice to ACK this and revert the code if the main objective was not fulfilled. Making rbf as simple as possible is in my opinion slightly more important than good practices because it comes with great benefits already mentioned above and, more importantly, it keeps the Bitcoin software free from encouraging the use of unsafe social assumptions. Full-rbf seems like a natural fit for the protocol because it's inline with its objective/trustless nature. Thanks for reading.\r\n\r\nTLDR; NACK unless rbf is re-added due to other benefits.",
      "created_at" : "2022-11-04T12:16:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303385801",
      "id" : 1303385801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NsBbJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303385801/reactions"
      },
      "updated_at" : "2022-11-04T12:17:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303385801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/157733?v=4",
         "events_url" : "https://api.github.com/users/phyro/events{/privacy}",
         "followers_url" : "https://api.github.com/users/phyro/followers",
         "following_url" : "https://api.github.com/users/phyro/following{/other_user}",
         "gists_url" : "https://api.github.com/users/phyro/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/phyro",
         "id" : 157733,
         "login" : "phyro",
         "node_id" : "MDQ6VXNlcjE1NzczMw==",
         "organizations_url" : "https://api.github.com/users/phyro/orgs",
         "received_events_url" : "https://api.github.com/users/phyro/received_events",
         "repos_url" : "https://api.github.com/users/phyro/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/phyro/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/phyro/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/phyro"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "\n> I don't think there's really much left to bring to the discussion, but what I'd like to say is that it's baffling to me how many people here are arguing we should just trust miners not to follow their economic incentive just because a BIP somewhere said so. \n\nMiner incentive is for total fees per block, not per txn. It is entirely possible that more fees are generated by respecting first-seen (0conf world) than by respecting replacements. Just saying!\n",
      "created_at" : "2022-11-04T12:17:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303390937",
      "id" : 1303390937,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NsCrZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303390937/reactions"
      },
      "updated_at" : "2022-11-04T12:17:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303390937",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18273620?v=4",
         "events_url" : "https://api.github.com/users/BitcoinErrorLog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinErrorLog/followers",
         "following_url" : "https://api.github.com/users/BitcoinErrorLog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinErrorLog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinErrorLog",
         "id" : 18273620,
         "login" : "BitcoinErrorLog",
         "node_id" : "MDQ6VXNlcjE4MjczNjIw",
         "organizations_url" : "https://api.github.com/users/BitcoinErrorLog/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinErrorLog/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinErrorLog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinErrorLog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinErrorLog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinErrorLog"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\n\nOn November 4, 2022 1:17:47 PM GMT+01:00, Bitcoin Error Log ***@***.***> wrote:\n>\n>> I don't think there's really much left to bring to the discussion, but what I'd like to say is that it's baffling to me how many people here are arguing we should just trust miners not to follow their economic incentive just because a BIP somewhere said so. \n>\n>Miner incentive is for total fees per block, not per txn. It is entirely possible that more fees are generated by respecting first-seen (0conf world) than by respecting replacements. Just saying!\n\nIf you're so confident of that, why are we removing an option to choose otherwise? Nothing wrong with letting miners decide one way or the other.\n\nI personally have been recently contacted by miners asking how they can turn fullrbf on. Obviously, pointing them to a config option is simplest for them.\n",
      "created_at" : "2022-11-04T12:21:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303404050",
      "id" : 1303404050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NsF4S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303404050/reactions"
      },
      "updated_at" : "2022-11-04T12:21:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303404050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Miner incentive is for total fees per block, not per txn. It is entirely possible that more fees are generated by respecting first-seen (0conf world) than by respecting replacements. Just saying!\r\n\r\nAbsolutely, I'm not saying miners *must* replace transactions (that would be unreasonable, just like saying that they *must not* is).\r\n\r\nAll I'm saying is that I believe miners will replace transactions if it's more convenient for them, and there's not much we can do about it. Surely we can't trusted them not to.",
      "created_at" : "2022-11-04T12:22:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303406610",
      "id" : 1303406610,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NsGgS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303406610/reactions"
      },
      "updated_at" : "2022-11-04T12:22:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303406610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3058409?v=4",
         "events_url" : "https://api.github.com/users/afilini/events{/privacy}",
         "followers_url" : "https://api.github.com/users/afilini/followers",
         "following_url" : "https://api.github.com/users/afilini/following{/other_user}",
         "gists_url" : "https://api.github.com/users/afilini/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/afilini",
         "id" : 3058409,
         "login" : "afilini",
         "node_id" : "MDQ6VXNlcjMwNTg0MDk=",
         "organizations_url" : "https://api.github.com/users/afilini/orgs",
         "received_events_url" : "https://api.github.com/users/afilini/received_events",
         "repos_url" : "https://api.github.com/users/afilini/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/afilini/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/afilini/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/afilini"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK\r\n\r\n- removing the `mempoolfullrbf` option doesn't make accepting unconfirmed transactions safe\r\n- some people want to run nodes with `mempoolfullrbf=true` (such as me), and just removing the option won't stop them from doing so (it's literally a one-line patch...)",
      "created_at" : "2022-11-04T12:22:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303408558",
      "id" : 1303408558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NsG-u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303408558/reactions"
      },
      "updated_at" : "2022-11-04T12:23:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303408558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25042473?v=4",
         "events_url" : "https://api.github.com/users/danielabrozzoni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/danielabrozzoni/followers",
         "following_url" : "https://api.github.com/users/danielabrozzoni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/danielabrozzoni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/danielabrozzoni",
         "id" : 25042473,
         "login" : "danielabrozzoni",
         "node_id" : "MDQ6VXNlcjI1MDQyNDcz",
         "organizations_url" : "https://api.github.com/users/danielabrozzoni/orgs",
         "received_events_url" : "https://api.github.com/users/danielabrozzoni/received_events",
         "repos_url" : "https://api.github.com/users/danielabrozzoni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/danielabrozzoni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/danielabrozzoni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/danielabrozzoni"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "0conf proponents are not saying they are \"safe\" they are saying they can manage the risk by establishing thresholds to cap their total exposure, and select txns with next-block-viable fee rates. A lot of people really do benefit from this behavior, including Bitcoiners, merchants and miners.",
      "created_at" : "2022-11-04T12:37:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303447662",
      "id" : 1303447662,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NsQhu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303447662/reactions"
      },
      "updated_at" : "2022-11-04T12:37:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303447662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18273620?v=4",
         "events_url" : "https://api.github.com/users/BitcoinErrorLog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinErrorLog/followers",
         "following_url" : "https://api.github.com/users/BitcoinErrorLog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinErrorLog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinErrorLog",
         "id" : 18273620,
         "login" : "BitcoinErrorLog",
         "node_id" : "MDQ6VXNlcjE4MjczNjIw",
         "organizations_url" : "https://api.github.com/users/BitcoinErrorLog/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinErrorLog/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinErrorLog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinErrorLog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinErrorLog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinErrorLog"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\n\nOn November 4, 2022 1:37:33 PM GMT+01:00, Bitcoin Error Log ***@***.***> wrote:\n>0conf proponents are not saying they are \"safe\" they are saying they can manage the risk by establishing thresholds to cap their total exposure, and select txns with next-block-viable fee rates.\n\nIs part of risk management trying to get incentive compatible, default off, options removed?\n\nThere's obviously demand for this option. Seems that the motivation to remove it comes from attempting to make zero conf safer.\n\n",
      "created_at" : "2022-11-04T13:19:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303530979",
      "id" : 1303530979,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nsk3j",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303530979/reactions"
      },
      "updated_at" : "2022-11-04T13:19:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303530979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK.\r\n\r\nI planned to use this feature both personally as well as on production for example on esplora/blockstream.info and Green wallet \r\n\r\nAs others have said we can also compile Bitcoin core but it would be an inconvenience and in general I think the rbf flag provides a false sense of security especially as we seen recently even non standard transactions can find their ways to miners.\r\n\r\nMostly agree with afilini/ptodd/dbrozzoni's points",
      "created_at" : "2022-11-04T13:53:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303580150",
      "id" : 1303580150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nsw32",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303580150/reactions"
      },
      "updated_at" : "2022-11-04T13:53:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303580150",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5269298?v=4",
         "events_url" : "https://api.github.com/users/greenaddress/events{/privacy}",
         "followers_url" : "https://api.github.com/users/greenaddress/followers",
         "following_url" : "https://api.github.com/users/greenaddress/following{/other_user}",
         "gists_url" : "https://api.github.com/users/greenaddress/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/greenaddress",
         "id" : 5269298,
         "login" : "greenaddress",
         "node_id" : "MDQ6VXNlcjUyNjkyOTg=",
         "organizations_url" : "https://api.github.com/users/greenaddress/orgs",
         "received_events_url" : "https://api.github.com/users/greenaddress/received_events",
         "repos_url" : "https://api.github.com/users/greenaddress/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/greenaddress/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/greenaddress/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/greenaddress"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK\r\n\r\nTransactions in the mempool will be replaced for any number of reasons.  Removing this option, and suggesting to users that some transactions won't be replaced by fee creates a false sense of security.\r\n\r\nI see that this effort will further the bifurcation between the \"people's mempool\"* where it's \"hard\" to RBF, and a \"miner's mempool\" where RBF is routine.  Thus reducing the value of \"regular users\" having the mempool at all.\r\n\r\nRemoving this would be strictly a reduction in value for the software I'm running, since it is guaranteed to diverge from what's coming in the next blocks.\r\n\r\n* I understand that there's no \"one mempool\", etc, and some unsophisticated miners may run \"vanilla core\" with the more sophisticated ones running out of band transaction collection mechanisms",
      "created_at" : "2022-11-04T13:59:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303595591",
      "id" : 1303595591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Ns0pH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303595591/reactions"
      },
      "updated_at" : "2022-11-04T13:59:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303595591",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/465946?v=4",
         "events_url" : "https://api.github.com/users/litch/events{/privacy}",
         "followers_url" : "https://api.github.com/users/litch/followers",
         "following_url" : "https://api.github.com/users/litch/following{/other_user}",
         "gists_url" : "https://api.github.com/users/litch/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/litch",
         "id" : 465946,
         "login" : "litch",
         "node_id" : "MDQ6VXNlcjQ2NTk0Ng==",
         "organizations_url" : "https://api.github.com/users/litch/orgs",
         "received_events_url" : "https://api.github.com/users/litch/received_events",
         "repos_url" : "https://api.github.com/users/litch/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/litch/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/litch/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/litch"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@greenaddress \r\n\r\n> I planned to use this feature both personally as well as on production for example on esplora/blockstream.info and Green wallet\r\n\r\nFor what purpose? I haven't seen an answer to \"Does fullrbf offer any benefits other than breaking zeroconf business practices? If so, what are they?\" yet; does the above imply you have one?",
      "created_at" : "2022-11-04T14:18:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303624108",
      "id" : 1303624108,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Ns7ms",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303624108/reactions"
      },
      "updated_at" : "2022-11-04T14:18:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303624108",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I support this Pull Request!",
      "created_at" : "2022-11-04T14:27:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303640876",
      "id" : 1303640876,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Ns_ss",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303640876/reactions"
      },
      "updated_at" : "2022-11-04T14:27:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303640876",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/117461293?v=4",
         "events_url" : "https://api.github.com/users/FixTheMoney21/events{/privacy}",
         "followers_url" : "https://api.github.com/users/FixTheMoney21/followers",
         "following_url" : "https://api.github.com/users/FixTheMoney21/following{/other_user}",
         "gists_url" : "https://api.github.com/users/FixTheMoney21/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/FixTheMoney21",
         "id" : 117461293,
         "login" : "FixTheMoney21",
         "node_id" : "U_kgDOBwBRLQ",
         "organizations_url" : "https://api.github.com/users/FixTheMoney21/orgs",
         "received_events_url" : "https://api.github.com/users/FixTheMoney21/received_events",
         "repos_url" : "https://api.github.com/users/FixTheMoney21/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/FixTheMoney21/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/FixTheMoney21/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/FixTheMoney21"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK for the simple reason that 0-confs are insecure and sooner we disincentivize its usage the better. I think it's a disservice to newcomers pretending that unconfirmed transactions are something other than just that - unconfirmed - and I'd like to see that notion gone once and for all. If a vendor is willing to accept the risk that's on them but I'm running `mempoolfullrbf` on my node (and patching the node even if this PR gets accepted). Everything else has been said already.",
      "created_at" : "2022-11-04T14:29:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303645609",
      "id" : 1303645609,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtA2p",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303645609/reactions"
      },
      "updated_at" : "2022-11-04T14:29:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303645609",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3636406?v=4",
         "events_url" : "https://api.github.com/users/mariodian/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mariodian/followers",
         "following_url" : "https://api.github.com/users/mariodian/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mariodian/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mariodian",
         "id" : 3636406,
         "login" : "mariodian",
         "node_id" : "MDQ6VXNlcjM2MzY0MDY=",
         "organizations_url" : "https://api.github.com/users/mariodian/orgs",
         "received_events_url" : "https://api.github.com/users/mariodian/received_events",
         "repos_url" : "https://api.github.com/users/mariodian/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mariodian/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mariodian/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mariodian"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK\r\n\r\nI was in the full RBF camp many years ago and am surprised how zero conf did survive this long but  almost all agree it will not survive on the long run, so better merge the strong hint at its time being over than to pretend first-seen-safe was still a thing.\r\n\r\n@petertodd you mention big losses from trust in zero conf. Is there a list of cases somewhere? I think it would help the argument.\r\n\r\n* **Mining pools** already have the technical expertise to do full RBF.\r\n* Most **relays** wouldn't enable full RBF until it's on by default. If anything, zero-conf accepting merchants probably would be better off, not worse if relays were all full-RBF. Then they wouldn't need to jump through hoops and loops to detect tx replacement all over the world for their risk assessment.",
      "created_at" : "2022-11-04T14:33:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303653314",
      "id" : 1303653314,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtCvC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303653314/reactions"
      },
      "updated_at" : "2022-11-04T14:35:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303653314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/96378?v=4",
         "events_url" : "https://api.github.com/users/Giszmo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Giszmo/followers",
         "following_url" : "https://api.github.com/users/Giszmo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Giszmo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Giszmo",
         "id" : 96378,
         "login" : "Giszmo",
         "node_id" : "MDQ6VXNlcjk2Mzc4",
         "organizations_url" : "https://api.github.com/users/Giszmo/orgs",
         "received_events_url" : "https://api.github.com/users/Giszmo/received_events",
         "repos_url" : "https://api.github.com/users/Giszmo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Giszmo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Giszmo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Giszmo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ajtowns \r\n> For what purpose?\r\n\r\nMultiple purposes I would say. As a wallet sender I want to be able to replace a transaction made in error as well as bump the fee in a congested situation regardless of if the user had the hindsight to set the rbf flag (especially since nodes and miners can ignore said flag, pretty useless)\r\n\r\nAs a receiver in a wallet I don't want the false sense of security, unconfirmed transactions can't be relied upon until they have a number of confirmations and if there is a transaction replacement with more incentives for miners to mine I want to be able to see it.\r\n\r\nFor the explorer similar arguments.\r\n\r\nMiners can ignore the rbf flag and have economic incentives to do so. \r\n\r\n",
      "created_at" : "2022-11-04T14:36:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303657996",
      "id" : 1303657996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtD4M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303657996/reactions"
      },
      "updated_at" : "2022-11-04T14:36:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303657996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5269298?v=4",
         "events_url" : "https://api.github.com/users/greenaddress/events{/privacy}",
         "followers_url" : "https://api.github.com/users/greenaddress/followers",
         "following_url" : "https://api.github.com/users/greenaddress/following{/other_user}",
         "gists_url" : "https://api.github.com/users/greenaddress/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/greenaddress",
         "id" : 5269298,
         "login" : "greenaddress",
         "node_id" : "MDQ6VXNlcjUyNjkyOTg=",
         "organizations_url" : "https://api.github.com/users/greenaddress/orgs",
         "received_events_url" : "https://api.github.com/users/greenaddress/received_events",
         "repos_url" : "https://api.github.com/users/greenaddress/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/greenaddress/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/greenaddress/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/greenaddress"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Giszmo The losses I've been told about were many years ago, and the ATM operators in question didn't want it to be made public (I got the sense that they might not have been entirely honest to investors...). I might be able to dig up the messages in question and ask. But I wouldn't be surprised if this is all long gone.\r\n\r\nAnyway, based on the fact that ATM's and in-person exchanges don't offer zeroconf anymore without good AML/KYC (at least in my experience across many countries), I think we can be confident that trying has lead to losses. It's obviously convenient to do so. But the fact is, they don't.",
      "created_at" : "2022-11-04T14:43:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303666868",
      "id" : 1303666868,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtGC0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303666868/reactions"
      },
      "updated_at" : "2022-11-04T14:43:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303666868",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Strong NACK\r\n\r\nIf this is merged, any successful attack on a business/wallet accepting zeroconf will be regarded as a successful attack on Bitcoin itself. Bitcoin developers should not been held responsible for the bad practices of certain actors.\r\n",
      "created_at" : "2022-11-04T14:46:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303671500",
      "id" : 1303671500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtHLM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303671500/reactions"
      },
      "updated_at" : "2022-11-04T14:48:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303671500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2343238?v=4",
         "events_url" : "https://api.github.com/users/ecdsa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ecdsa/followers",
         "following_url" : "https://api.github.com/users/ecdsa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ecdsa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ecdsa",
         "id" : 2343238,
         "login" : "ecdsa",
         "node_id" : "MDQ6VXNlcjIzNDMyMzg=",
         "organizations_url" : "https://api.github.com/users/ecdsa/orgs",
         "received_events_url" : "https://api.github.com/users/ecdsa/received_events",
         "repos_url" : "https://api.github.com/users/ecdsa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ecdsa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ecdsa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ecdsa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "NACK on eliminating the option\r\n\r\nIt has long been understood that the mempool should not be used to confirm transactions, and this is precisely the problem that proof of work in Bitcoin addresses.\r\n\r\nFull RBF being enabled by default will make this clear.\r\n\r\nThough there seems to be a lot of disagreement regarding full RBF being enabled by default.\r\nIt appears that businesses that rely on 0conf need more time to adapt, hence I am not in favor of full RBF being enabled by default for v24.\r\n\r\nIt could be a good idea to leave the option `-mempoolfullrbf` available for those who want to use it rather than fully eliminating it, and to review the results for v25 to see whether the option should be enabled by default later.\r\nMaybe even make it mandatory to choose between `-mempoolfullrbf=0` and `-mempoolfullrbf=1` with no default value to let the community decide without default bias. Though in practice this would not be practical for the average node operators.\r\n\r\nI concur with @petertodd that it's a great feature and enhances user experience and privacy to be able to cancel transactions while in mempool, regardless of opt-in status.\r\nSimilarly, fee-bumping during mempool congestion is great. ",
      "created_at" : "2022-11-04T14:52:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303679899",
      "id" : 1303679899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtJOb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303679899/reactions"
      },
      "updated_at" : "2022-11-04T14:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303679899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Full RBF being enabled by default will make this clear.\r\n\r\nNote that at the moment, the `mempoolfullrbf` option defaults to *off*. So all this pull-req would do is to remove the option entirely, for the subset of users who choose to turn it on.",
      "created_at" : "2022-11-04T14:59:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303689672",
      "id" : 1303689672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtLnI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303689672/reactions"
      },
      "updated_at" : "2022-11-04T14:59:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303689672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Note that at the moment, the mempoolfullrbf option defaults to off. So all this pull-req would do is to remove the option entirely, for the subset of users who choose to turn it on.\r\n\r\nYes, there are a lot of PRs linked to the Full RBF discussion, so I wanted to give my full perspective on it. ",
      "created_at" : "2022-11-04T15:02:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303697063",
      "id" : 1303697063,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtNan",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303697063/reactions"
      },
      "updated_at" : "2022-11-04T15:02:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303697063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Yes, there are a lot of PRs linked to the Full RBF discussion, so I wanted to give my full perspective on it.\r\n\r\nNo worries! Just wanted to provide context for others.",
      "created_at" : "2022-11-04T15:02:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303698452",
      "id" : 1303698452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtNwU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303698452/reactions"
      },
      "updated_at" : "2022-11-04T15:02:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303698452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK We should not incentivize the use of unconfirmed transactions. Having a mempoolfullrbf option is a great feature. We should imo consider making it default. Bitcoin is about censorship resistance and the easier it is to bump fees the more secure is the network imo.",
      "created_at" : "2022-11-04T15:07:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303707939",
      "id" : 1303707939,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtQEj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303707939/reactions"
      },
      "updated_at" : "2022-11-04T15:07:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303707939",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/98663991?v=4",
         "events_url" : "https://api.github.com/users/noobedo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/noobedo/followers",
         "following_url" : "https://api.github.com/users/noobedo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/noobedo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/noobedo",
         "id" : 98663991,
         "login" : "noobedo",
         "node_id" : "U_kgDOBeF-Nw",
         "organizations_url" : "https://api.github.com/users/noobedo/orgs",
         "received_events_url" : "https://api.github.com/users/noobedo/received_events",
         "repos_url" : "https://api.github.com/users/noobedo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/noobedo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/noobedo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/noobedo"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK  Miners can do this anyway without permission.   Security by \"hiding a config option\" is not how bitcoin should work.   Profit maximization and selfish mining is the very foundation of bitcoin.   Let use some logic here.   This is an option.   It's default OFF, so it doesn't matter anyway.   The last thing we want is for it to be normalized that miners run a fork!",
      "created_at" : "2022-11-04T15:12:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303725857",
      "id" : 1303725857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtUch",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303725857/reactions"
      },
      "updated_at" : "2022-11-04T15:12:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303725857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/50769?v=4",
         "events_url" : "https://api.github.com/users/earonesty/events{/privacy}",
         "followers_url" : "https://api.github.com/users/earonesty/followers",
         "following_url" : "https://api.github.com/users/earonesty/following{/other_user}",
         "gists_url" : "https://api.github.com/users/earonesty/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/earonesty",
         "id" : 50769,
         "login" : "earonesty",
         "node_id" : "MDQ6VXNlcjUwNzY5",
         "organizations_url" : "https://api.github.com/users/earonesty/orgs",
         "received_events_url" : "https://api.github.com/users/earonesty/received_events",
         "repos_url" : "https://api.github.com/users/earonesty/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/earonesty/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/earonesty/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/earonesty"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I just want to observe that very few of the reviewers on this PR have left comments that are responsive to the arguments I've laid out in my mailing list post or in my responses above.  (I do still owe Antoine a response to his review comments, which I plan to get to, but I don't plan to respond to any of the reviewer feedback that ignores my reasoning.)",
      "created_at" : "2022-11-04T15:31:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303768367",
      "id" : 1303768367,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nte0v",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303768367/reactions"
      },
      "updated_at" : "2022-11-04T15:31:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303768367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK. Accepting 0conf creates bad incentives and managing the risk becomes impossible if one of the businesses doing it becomes big.",
      "created_at" : "2022-11-04T15:44:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303783337",
      "id" : 1303783337,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Ntiep",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303783337/reactions"
      },
      "updated_at" : "2022-11-04T15:44:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303783337",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11386878?v=4",
         "events_url" : "https://api.github.com/users/miladmostavi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/miladmostavi/followers",
         "following_url" : "https://api.github.com/users/miladmostavi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/miladmostavi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/miladmostavi",
         "id" : 11386878,
         "login" : "miladmostavi",
         "node_id" : "MDQ6VXNlcjExMzg2ODc4",
         "organizations_url" : "https://api.github.com/users/miladmostavi/orgs",
         "received_events_url" : "https://api.github.com/users/miladmostavi/received_events",
         "repos_url" : "https://api.github.com/users/miladmostavi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/miladmostavi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/miladmostavi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/miladmostavi"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It appears some reviewers/commenters aren't reading the context and earlier comments from the PR author. \r\n\r\ne.g.\r\n\r\n> I have no intent with this PR to keep zeroconf going, and I am not arguing that zeroconf is a good or safe practice for the network.\r\n\r\nThe PR author is not seeking to support zero conf, it is more subtle than that. There are valid reasons to NACK this PR though (imo) as others have capably explained.",
      "created_at" : "2022-11-04T15:52:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303795301",
      "id" : 1303795301,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtlZl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303795301/reactions"
      },
      "updated_at" : "2022-11-04T15:52:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303795301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I think the real problem is the lack of distinction between miners vs routing and \"transaction tracking\" nodes.   \r\n\r\nMiners: should use this option.   it's in their best interests.  the idea of them *not* doing it is dangerous for bitcoin's stability\r\n\r\nNodes: should probably just route and maintain conflicts (subject to memory limits).   No reason otherwise not to maintain conflicts.   After all *either might be valid*.   What's the point in a mempool if not to enumerate unconfirmed, but possibly valid transactions?\r\n\r\nBut since the latter is a hard, unsolved problem, lets leave the option in so miners can do the right thing.\r\n",
      "created_at" : "2022-11-04T15:56:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303800043",
      "id" : 1303800043,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Ntmjr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303800043/reactions"
      },
      "updated_at" : "2022-11-04T15:56:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303800043",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/50769?v=4",
         "events_url" : "https://api.github.com/users/earonesty/events{/privacy}",
         "followers_url" : "https://api.github.com/users/earonesty/followers",
         "following_url" : "https://api.github.com/users/earonesty/following{/other_user}",
         "gists_url" : "https://api.github.com/users/earonesty/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/earonesty",
         "id" : 50769,
         "login" : "earonesty",
         "node_id" : "MDQ6VXNlcjUwNzY5",
         "organizations_url" : "https://api.github.com/users/earonesty/orgs",
         "received_events_url" : "https://api.github.com/users/earonesty/received_events",
         "repos_url" : "https://api.github.com/users/earonesty/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/earonesty/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/earonesty/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/earonesty"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> As a wallet sender I want to be able to replace a transaction made in error as well as bump the fee in a congested situation regardless of if the user had the hindsight to set the rbf flag (especially since nodes and miners can ignore said flag, pretty useless)\r\n\r\nFYI I just opened https://github.com/bitcoin/bitcoin/pull/26454 to allow the `bumpfee` RPC command to work regardless of BIP-125.",
      "created_at" : "2022-11-04T16:13:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303822354",
      "id" : 1303822354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NtsAS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303822354/reactions"
      },
      "updated_at" : "2022-11-04T16:13:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303822354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@michaelfolkson\r\n\r\n> The PR author is not seeking to support zero conf, it is more subtle than that.\r\n\r\nWhat the PR author *claims* is the goal of this pull-req is not relevant. We can all see that removing a disabled-by-default option to do full-rbf is a change that - intent or not - supports zeroconf continuing in the face of significant interest in running full-rbf. The many NACKs this is getting come from people who can plainly see that.",
      "created_at" : "2022-11-04T16:16:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303826164",
      "id" : 1303826164,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nts70",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 3,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 3,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303826164/reactions"
      },
      "updated_at" : "2022-11-04T16:16:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303826164",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Strong ACK - now that I understand the implications better, I think the way things are right now already give everyone the tools they need and the highest value Bitcoin outcome. The changes are not worth the compromise. Wallets can turn RBF on by default, miners can select what they want, etc. No need to specifically kill 0conf use cases.",
      "created_at" : "2022-11-04T16:29:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303840761",
      "id" : 1303840761,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Ntwf5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303840761/reactions"
      },
      "updated_at" : "2022-11-04T16:29:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303840761",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18273620?v=4",
         "events_url" : "https://api.github.com/users/BitcoinErrorLog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinErrorLog/followers",
         "following_url" : "https://api.github.com/users/BitcoinErrorLog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinErrorLog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinErrorLog",
         "id" : 18273620,
         "login" : "BitcoinErrorLog",
         "node_id" : "MDQ6VXNlcjE4MjczNjIw",
         "organizations_url" : "https://api.github.com/users/BitcoinErrorLog/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinErrorLog/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinErrorLog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinErrorLog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinErrorLog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinErrorLog"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm locking this conversation as \"too heated\" temporarily. There have been many comments from many users that have not read the motivations and are drive-by commenting that frankly are not adding much to the conversation. It will be unlocked in a few hours.",
      "created_at" : "2022-11-04T16:43:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1303860333",
      "id" : 1303860333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nt1Rt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303860333/reactions"
      },
      "updated_at" : "2022-11-04T16:43:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303860333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The mempoolfullrbf pull-req was created June 13th, almost five months ago. There's been tons of time to have discussion about an _option_ that isn't even enabled by default.\n\nShipping such an option simply gives people a chance to use it, and as has been made clear h the discussion above, lots of people intend to do just that. Taking this option away makes it clear that we are so concerned about zeroconf, that we can't even allow people to choose to run fullrbf.\n\nTell me, what other options do you want us to take away? Because there's a lot of other ones that make it trivial to double spend.\n\nOn November 5, 2022 12:02:43 AM GMT+01:00, Jon Atack ***@***.***> wrote:\n***@***.*** commented on this pull request.\n>\n>ACK 4a4086603e6b548a21c85eb4cad9e4d4e02573fd\n>\n>This option has never been released, and given that the current nuance of the discussion had not yet fully taken place when the decision to merge the option was made, the reasonable and prudent course seems to be not to add it for now, while continuing discussion for future releases. \n>\n>\n>\n>\n>-- \n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/26438#pullrequestreview-1169257069\n>You are receiving this because you were mentioned.\n>\n>Message ID: ***@***.***>",
      "created_at" : "2022-11-04T23:21:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304332058",
      "id" : 1304332058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nvoca",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304332058/reactions"
      },
      "updated_at" : "2022-11-04T23:21:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304332058",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Friendly suggestion from this [article](https://jonatack.github.io/articles/how-to-review-pull-requests-in-bitcoin-core#go-easy-on-the-people): \r\n\r\n*When you disagree, state your point of view once and move on. Don't flood the comments section, browbeat others or overreact. Be patient, never aggressive, pushy or bullying.*",
      "created_at" : "2022-11-04T23:45:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304342475",
      "id" : 1304342475,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nvq_L",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304342475/reactions"
      },
      "updated_at" : "2022-11-04T23:45:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304342475",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK\r\n\r\nRemoving this default off option is a bigger change than setting it to *default on* would be, it takes away choice for many users.\r\n\r\nIt also creates incentives to rely on zero conf. It doesn't take away the capability of criminals to exploit zero conf, and even creates a target rich environment to do that.\r\n\r\nIt creates incentives to create new authorities which decide which transactions are valid and which aren't (\"risk management\"). We don't need *nor want* middlemen to do that.\r\n\r\nIt's false that this is absolutely required to onboard new users instantly for businesses, a simple (not necessarily advisable) alternative would be transferring secret keys of preloaded UTXOs.\r\n\r\nI believe this will make Bitcoin less safe in the long run.\r\n",
      "created_at" : "2022-11-05T01:06:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304364815",
      "id" : 1304364815,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NvwcP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304364815/reactions"
      },
      "updated_at" : "2022-11-05T01:06:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304364815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1370997?v=4",
         "events_url" : "https://api.github.com/users/juestr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/juestr/followers",
         "following_url" : "https://api.github.com/users/juestr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/juestr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/juestr",
         "id" : 1370997,
         "login" : "juestr",
         "node_id" : "MDQ6VXNlcjEzNzA5OTc=",
         "organizations_url" : "https://api.github.com/users/juestr/orgs",
         "received_events_url" : "https://api.github.com/users/juestr/received_events",
         "repos_url" : "https://api.github.com/users/juestr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/juestr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/juestr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/juestr"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I have been running patched bitcoinds with a one-line change to enable full-RBF for multiple years.\r\nI operate several electrum servers, one of which is very popular and has hundreds of txs broadcast/day for years (actually 8000 tx/day for the past few months, some large service probably started using it to broadcast their txs). All servers are backed by patched bitcoinds (with the rbf opt-out commented out in validation.cpp).\r\n\r\n> If any reviewers are unconvinced by my rationale, I'd appreciate answers to the questions I laid out at the end of that email:\r\n> - Does fullrbf offer any benefits other than breaking zeroconf business practices? If so, what are they?\r\n\r\nThe reason I started to patch out the opt-out, is essentially what @greenaddress describes:\r\n> Multiple purposes I would say. As a wallet sender I want to be able to replace a transaction made in error as well as bump the fee in a congested situation regardless of if the user had the hindsight to set the rbf flag (especially since nodes and miners can ignore said flag, pretty useless)\r\n\r\nEvery time there is a mempool congestion for a significant amount of time (several weeks or more), users start flooding the forums/reddit/github/irc asking about stuck transactions. They are told they can use CPFP or RBF, or \"transaction accelerators\" in the past, or just to wait it out. If there is no change output, they might not be able to CPFP, and they can only RBF bump the fee if opt-in RBF was signalled. We had lots and lots of these \"support requests\" in the `#electrum` IRC channel, and on github (also on other platforms but these are where I spend my time). End of 2017, and more recently spring of 2021 there were remarkably long periods of mempool congestions.\r\n\r\nWe've had many users who created a tx using some other wallet which did not signal RBF, paying a low fee, freaking out about their tx being \"stuck\", finding guides how to CPFP/RBF in electrum, who then downloaded electrum only to find CPFP needs an is-mine output and RBF requires having opted-in to signalling originally. The only option seemingly left to these users were to wait it out. After experiencing these mempool congestions a few times, I figured I could just patch my node and give users a chance. \r\n\r\nIn particular, during the spring 2021 mempool congestion I was ready. To the self-selecting few who went to the trouble of coming to IRC and asking why the Electrum GUI does not let them \"increase the fee\" of their tx, I would explain how to configure Electrum to create a conflicting tx and to connect to my electrum server and broadcast there.\r\nAt the time that server was using the default `maxconnections=125`, always saturating it. These days I set higher limits and have more incoming connections. I think I helped four users to attempt an RBF, to either increase the fee or double-spend - merchant invoices have timeouts often not designed with a full mempool and the user lowballing the fee in mind. In two of the four cases, the replacement transaction got mined.\r\n\r\nAlso during spring 2021, I opened multiple lightning channels and was trying not to overpay in fees. One of my funding txs, which lacked a change output, got \"stuck\" in the mempool, and it did not signal RBF. I had to double-spend it or risk losing the coins: if too much time passes the remote node deletes the channel and if it gets mined after that, the money can only be recovered using manual cooperation between the channel counterparties. [0] This was around the time https://github.com/lightning/bolts/pull/839 got merged into the BOLTs - not yet implemented on most nodes so I could not even be certain how much time I have. I created a replacement tx to double-spend the funding and broadcast it on the patched electrum server. It worked: one of the replacement txs got mined (I kept bumping the fee).\r\n\r\nOverall IIRC my score is 3 out of 5 successful replacements of non-signalling txs. The ones that got mined on average took ~100 blocks - they were paying high next block fees and were at the top of the mempool (at least in the mempools they were accepted into!).\r\n\r\nSo that's my use case. Helping unlucky users to get their tx confirmed before an invoice expires, or double-spend after the invoice had already expired, or to fix my own mistakes.\r\n\r\nWhether the `-mempoolfullrbf` config parameter is kept or removed, it has little effect on me, the difference is whether or not I have to keep rebasing my trivial one-liner patch on every release. I already updated one of my nodes to run 24.0rc2 and to use `-mempoolfullrbf`, but I can always just go back to applying a patch.\r\n\r\n-----\r\n\r\n[0]: (EDIT) to clarify, the first commitment transaction can be used to unilaterally close the channel after the funding tx gets mined, however without anchor outputs that still assumes the feerate had been set to high enough to get mined",
      "created_at" : "2022-11-05T01:38:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304370679",
      "id" : 1304370679,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nvx33",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304370679/reactions"
      },
      "updated_at" : "2022-11-05T03:21:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304370679",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/29142493?v=4",
         "events_url" : "https://api.github.com/users/SomberNight/events{/privacy}",
         "followers_url" : "https://api.github.com/users/SomberNight/followers",
         "following_url" : "https://api.github.com/users/SomberNight/following{/other_user}",
         "gists_url" : "https://api.github.com/users/SomberNight/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/SomberNight",
         "id" : 29142493,
         "login" : "SomberNight",
         "node_id" : "MDQ6VXNlcjI5MTQyNDkz",
         "organizations_url" : "https://api.github.com/users/SomberNight/orgs",
         "received_events_url" : "https://api.github.com/users/SomberNight/received_events",
         "repos_url" : "https://api.github.com/users/SomberNight/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/SomberNight/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/SomberNight/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/SomberNight"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@SomberNight Thanks! I think those examples of stuck non-opt-in transactions are very clear use-cases of `mempoolfullrbf`. While not that common, during high fees this is an obvious lifesaver and we can't assume fees will always be low.\r\n\r\n> Whether the -mempoolfullrbf config parameter is kept or removed, it has little effect on me, the difference is whether or not I have to keep rebasing my trivial one-liner patch on every release. I already updated one of my nodes to run 24.0rc2 and to use -mempoolfullrbf, but I can always just go back to applying a patch.\r\n\r\nI'll also point out that in this type of use-case - a use-case that may happen in an emergency - it's definitely safer when those that need full-rbf can simply enable a flag rather than have to figure out what line to modify and how to recompile.",
      "created_at" : "2022-11-05T01:52:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304372947",
      "id" : 1304372947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NvybT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304372947/reactions"
      },
      "updated_at" : "2022-11-05T01:52:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304372947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Strong NACK. \r\n\r\n1. Mempool policies are not consensus rules. They canât even split the p2p network.\r\n\r\n2. Policies must be definable and controllable by node (i.e. full wallet=bitcoin) users.\r\n\r\n3. Devs providing option for user policy control is not âenforcing new rulesâ, but are just helping the users to execute their right.\r\n\r\n4. Not allowing users executing their rights with Bitcoin Core codebase/binary would provoke appearance of forks (since users will cherry-pick & compile themselves), reducing overall consensus security due to a possible mistakes on the user end",
      "created_at" : "2022-11-05T02:10:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304376606",
      "id" : 1304376606,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NvzUe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304376606/reactions"
      },
      "updated_at" : "2022-11-05T02:10:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304376606",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/372034?v=4",
         "events_url" : "https://api.github.com/users/dr-orlovsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dr-orlovsky/followers",
         "following_url" : "https://api.github.com/users/dr-orlovsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dr-orlovsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dr-orlovsky",
         "id" : 372034,
         "login" : "dr-orlovsky",
         "node_id" : "MDQ6VXNlcjM3MjAzNA==",
         "organizations_url" : "https://api.github.com/users/dr-orlovsky/orgs",
         "received_events_url" : "https://api.github.com/users/dr-orlovsky/received_events",
         "repos_url" : "https://api.github.com/users/dr-orlovsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dr-orlovsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dr-orlovsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dr-orlovsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sdaftuar \r\n\r\n> > What you are doing here with this pull-req is\r\n> > politics: you're trying to take away an option in an attempt to make it\r\n> > inconvenient enough for miners and other users that this dangerous feature\r\n> > continues to live on.\r\n> \r\n> This is either poor phrasing or you have misunderstood my motivation: I have no intent with this PR to keep zeroconf going, and I am not arguing that zeroconf is a good or safe practice for the network. It appears from Antoineâs recent mailing list post that he may also misunderstand me as somehow trying to protect zeroconf merchants or their business practices, so I will try to clarify my views here because that is not my interest at all.\r\n\r\nWhat your intent happens to be is not relevant. What is relevant is the effect of this proposed pull-req. This PR is a step towards keeping zeroconf going. As is the v24.0-only alternative: https://github.com/bitcoin/bitcoin/pull/26456\r\n\r\nThe status quo is v24.0 is getting released with `mempoolfullrbf`. Changing that status quo keeps zeroconf going. Which as I point out in the discussion around https://github.com/bitcoin/bitcoin/pull/26456, is particularly harmful now that John Carvallo is claiming his company is working to provide *new* zeroconf acceptance tools.\r\n\r\n> Since I perhaps didnât explain this thoroughly in my mailing list post, I will expand on it here. The RBF rules we have today are clumsy, and I have personally had countless discussions over the years with other developers about how to improve on them, primarily due to the pinning issues that exist and the incentive compatibility considerations that come with it. On top of that, transaction chains themselves are hard to reason about in the context of coming up with optimal transaction selection for a miner and preventing mempool DoS in various ways (these are also topics I have substantial experience working on for this project). In thinking about all this, one conclusion Iâve reached is that Bitcoinâs transaction relay protocol and user behavior would likely have been far better from the start if the expectation was that the network wouldnât generally relay transactions with unconfirmed parents â a position that I think is easy to justify if you look at the various anti-DoS rules weâve put in place over the last 10 years which have generally served to limit the transactions which get relayed on the network, in comparison to what early versions of the software supported.\r\n\r\nNone of this discussion is relevant to full-rbf.\r\n \r\n> From a blank slate/initial policy of never allowing transactions with unconfirmed parents, relaxing that policy in specific situations to support narrow use cases which can be easily reasoned about would have been much better than the free-for-all we have now (where arbitrary transaction chains topologies are permitted, with the only limits being on certain kinds of package size and count).\r\n\r\n...and again, none of this is relevant to full-rbf. Indeed, talking about all this as \"rules\" gives the misleading impression that there are hard and fast rules that govern transaction acceptance. Exactly what got us into trouble with zeroconf in the first place!\r\n\r\n> In such a world, there would be a meaningful difference between transactions that can be replaced via feerate considerations, and transactions that the sender does not intend to replace. In the latter case, CPFP is a far more reasonable strategy than in the former, because the recipient who chains a transaction has greater reason to believe that they are doing something helpful rather than harmful by creating the chained transaction which feebumps the parent (and not just pinning the transaction and irritating the sender, or creating a transaction that will disappear when the parent is replaced and need to be reissued, or creating a DoS vector for the network by relaying something that will need to be evicted later â which is the central issue that creates the pinning consideration in the first place).\r\n> \r\n> Now I get that we arenât starting from a blank slate; I wanted to take everyone through that thought experiment to try to understand that non-replacement is not intrinsically evil. Note that the CPFP use case I describe is completely benign, provided that the wallet engaging in it can reasonably handle the (likely rare, but certainly possible) situations where the first transaction doesnât confirm for some reason (eg by being able to reissue a payment if needed).\r\n\r\nDiscussions about how edge cases of RBF and CPFP policy are not relevant to full-rbf. Except in the obvious way that full-rbf in the future could simplify some of these interactions by removing a category from the mempool: non-replaceable transactions. \r\n\r\nAs we've repeatedly discussed, over literally years, non-replaceable transactions certainly can't be relied on as such in normal wallets, so evil or not, they are not a feature that we have any reason to support.\r\n\r\n> Maybe you think improved CPFP policy is not compelling; that is fine and we can debate and perhaps disagree. Or, perhaps the CPFP signal can still be in place on a network where the non-replacement is not enforced; that is hard for me to say without a lot more thought.\r\n> \r\n> If you think about the policy regimes we have now or are currently discussing: (1) we have a way to opt-out of RBF (but still have lots of child transactions), (2) we have a way to opt-in to RBF (and still have lots of child transactions), and after the v3 proposal is deployed we will also have (3) a way to be able to opt-in to RBF and have just 1 child transaction (which itself will be limited). In some ways option (2) is the least well-designed option, in that the transaction graph complexities interact with the replacement rules in ways that result in outcomes that are both suboptimal for wallets and also sometimes incentive incompatible for miners, and it would make more sense to have option (2) restrict the child transaction graph further than it does today (but perhaps not so limited as option (3) will be, which is really tailored to a single use-case). If that were a road we go down, then that would make (1) a more compelling option to have available as a policy on the network to facilitate use cases that involve lots of child transactions, and if we eliminate (1) now I fear that any attempt to bring it back in the future will fail due to concerns about zeroconf merchants â something outside our control as protocol developers.\r\n\r\n...and in all this proposed complexity, it's clear that eliminating the category of non-replaceable transactions would simplify things.\r\n\r\n> And as I said on the mailing list, I also fear that eliminating (1) for the reasons given could also apply to eliminating (3) in the future. If you look at the reasons you gave above for not having (1) as a policy, I think at least two of them easily apply to the v3 transaction proposal â the consequences of users making mistakes and inadvertently using version 3 transactions when they intended to chain multiple children, and the privacy implications of another distinguished transaction type. Now I think we have good answers to those objections â namely that no one should be using v3 transactions unless they mean to â but if your arguments are found to be compelling in this case, I fear that the v3 policy design may be subverted in the future and the efforts weâre putting in now are a waste of time.\r\n\r\nLet's look at a counter-argument: why are we proposing to *remove* an option to experiment with full-rbf policy, at the same time that we're also trying to design another possibly-incentive-incompatible transaction policy, v3?\r\n\r\nWhy wouldn't we try to get some data on what incentives actually look like when experimenting with policy is easier? Why are we trying to artificially restrict that process of experimentation?\r\n\r\n> Perhaps it would be helpful to reviewers for me to explain what I think some of the best reasons to oppose this PR would be, in the interests of advancing the debate:\r\n> \r\n>     1. Complexity. If itâs more complex for our mempool policy code to support both rbf and non-rbf transactions, then that might be a good reason to merge the two into one regime (this could be either due to code complexity or logical complexity of the policies interact).\r\n\r\nIt's clear that full-rbf can make the mempool simpler in the future. One policy vs two.\r\n\r\n>     2. If you believe that this PR will be seen as a misguided endorsement of zeroconf then you might find that to be a compelling reason to reject this, even if you understood what Iâm trying to actually get at here with my arguments about relay design philosophy.  Even though endorsing zeroconf is not my intention, I guess this is probably an issue that would need to be addressed, given the apparent lack of understanding here already and the lengthy explanations I have had to write up!\r\n\r\nYour arguments around relay design policy aren't relevant: yes, getting incentives right can be tricky. But full-rbf is a very clear case of incentives. And again, why are we diminishing our chances of getting data around incentives by trying to artificially prevent people from experimenting with them?\r\n\r\nRemember that we can't do that experimentation on testnet: testnet is worthless. The only place for experimentation with incentives is on mainnet, because incentives have to actually matter to be meaningful.\r\n\r\n>     3. The level of user/miner interest in having a knob to enable fullrbf may be so high that itâs absurd we donât make the simple option available given what a simple code change it is to support, and the non-consensus nature of the option. (I think knobs should have intended use cases, so while Iâm sympathetic to the principle here, I think weighing this comes down to deciding how important the fullrbf use case is compared to the alternative.)\r\n\r\nWe've got multiple wallet authors who have posted above saying they intend to make use of full-rbf. And there are extremely clear use-cases with recovering from stuck transactions. Which wallet authors have mentioned.\r\n \r\n>     4. The relative weighting of the other use cases that have been given for fullrbf, compared with my argument for the CPFP use case being strongest with non-replacement â reviewers can decide for themselves which use cases seem more compelling.\r\n\r\nWith the one exception of attempting to categorically prevent a transaction from being mined - the zeroconf \"use-case\" - having both CPFP and full-RBF simply means there is more than one way to get a transaction mined.\r\n\r\nAll pinning is about preventing transactions from getting mined at all. Full-RBF clearly can't make that problem worse. And it's clear that while it doesn't entirely prevent it in the multi-party scenario, it gets us closer to a solution.",
      "created_at" : "2022-11-05T02:15:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304378080",
      "id" : 1304378080,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nvzrg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304378080/reactions"
      },
      "updated_at" : "2022-11-05T02:15:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304378080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "im still confused.  is this revert to \"Remove mempoolfullrbf option\" wanting to remove the (-mempoolfullrbf) flag and make it so there is no more fullrbf at all?  \r\n\r\nso NACK on https://github.com/bitcoin/bitcoin/pull/25353 \r\n\r\nand ACK on this.. which reverts 25353 \r\n\r\n",
      "created_at" : "2022-11-05T02:17:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304378689",
      "id" : 1304378689,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nvz1B",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304378689/reactions"
      },
      "updated_at" : "2022-11-05T22:53:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304378689",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/777326?v=4",
         "events_url" : "https://api.github.com/users/jaybny/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaybny/followers",
         "following_url" : "https://api.github.com/users/jaybny/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaybny/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaybny",
         "id" : 777326,
         "login" : "jaybny",
         "node_id" : "MDQ6VXNlcjc3NzMyNg==",
         "organizations_url" : "https://api.github.com/users/jaybny/orgs",
         "received_events_url" : "https://api.github.com/users/jaybny/received_events",
         "repos_url" : "https://api.github.com/users/jaybny/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaybny/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaybny/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaybny"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@greenaddress \r\n\r\n> > For what purpose?\r\n> \r\n> Multiple purposes I would say. As a wallet sender I want to be able to replace a transaction made in error as well as bump the fee in a congested situation\r\n\r\nThose things are much more reliable if you set the rbf flag.\r\n\r\n> regardless of if the user had the hindsight to set the rbf flag (especially since nodes and miners can ignore said flag, pretty useless)\r\n\r\nAnd that is not reliable unless many nodes and miners support fullrbf, which is not something that a default false option achieves. It's also not relevant currently, as the mempool clears regularly.\r\n\r\nThis goal can also alternatively be achieved by lowering the mempool expiry time: just as a connected subgraph of fullrbf peers would allow you to broadcast a replacement tx; a connected subgraph of peers with a low expiry time, would also allow you to broadcast a replacement, and would allow you to do so without the other BIP 125 restrictions, such as having to increase the absolute fee, or not being able to conflict more than 100 descendants or not being able to introduce new unconfirmed parents.\r\n\r\n> As a receiver in a wallet I don't want the false sense of security, unconfirmed transactions can't be relied upon until they have a number of confirmations\r\n\r\nIt's always been your choice whether you give yourself a false sense of security in that case.\r\n\r\n> and if there is a transaction replacement with more incentives for miners to mine I want to be able to see it.\r\n\r\nAnd without or without full rbf it's quite easy to provide different nodes with different views of the mempool: simply announce conflicting txs at the same fee rate to different peers. That can be done in advance and used as an input to a transaction that you want to have finer propagation control over. It's also something that appears to be routinely occurring on the network currently.",
      "created_at" : "2022-11-05T03:33:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304391440",
      "id" : 1304391440,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nv28Q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304391440/reactions"
      },
      "updated_at" : "2022-11-05T03:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304391440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK",
      "created_at" : "2022-11-05T07:05:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304427467",
      "id" : 1304427467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nv_vL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304427467/reactions"
      },
      "updated_at" : "2022-11-05T07:05:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304427467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22024706?v=4",
         "events_url" : "https://api.github.com/users/UkolovaOlga/events{/privacy}",
         "followers_url" : "https://api.github.com/users/UkolovaOlga/followers",
         "following_url" : "https://api.github.com/users/UkolovaOlga/following{/other_user}",
         "gists_url" : "https://api.github.com/users/UkolovaOlga/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/UkolovaOlga",
         "id" : 22024706,
         "login" : "UkolovaOlga",
         "node_id" : "MDQ6VXNlcjIyMDI0NzA2",
         "organizations_url" : "https://api.github.com/users/UkolovaOlga/orgs",
         "received_events_url" : "https://api.github.com/users/UkolovaOlga/received_events",
         "repos_url" : "https://api.github.com/users/UkolovaOlga/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/UkolovaOlga/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/UkolovaOlga/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/UkolovaOlga"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\n\nOn November 5, 2022 4:33:21 AM GMT+01:00, Anthony Towns ***@***.***> wrote:\n***@***.*** \n>\n>> > For what purpose?\n>> \n>> Multiple purposes I would say. As a wallet sender I want to be able to replace a transaction made in error as well as bump the fee in a congested situation\n>\n>Those things are much more reliable if you set the rbf flag.\n\nSince services like Bitrerill treat opt-in-rbf transactions differently, wallets like Green and Electrum have reasons to send transactions without the flag.\n\nThose transactions can still however become stuck. And in that circumstance full-rbf is essential to get them unstuck. @SomberNight already explained this use-case above in detail and they personally would use a mempoolfullrbf flag for it.\n\n>> regardless of if the user had the hindsight to set the rbf flag (especially since nodes and miners can ignore said flag, pretty useless)\n>\n>And that is not reliable unless many nodes and miners support full-rbf, which is not something that a default false option achieves. It's also not relevant currently, as the mempool clears regularly.\n\nThe mempool is not guaranteed to clear regularly. Mempool pressure can, and does, change all the time. It's quite common for minimum fee OpenTimestamps transactions to take dozens of blocks to get mined due to mempool usage spikes. It is completely reasonable to want this feature for the times when pressure is high.\n\nNode support is not relevant to Green, as they can easily run their own. And of course, with the mempoolfullrbf option we can expect a lot more people to run full-rbf nodes. In testing I've found that there are enough of them out there now that a node with the usual 125 connections has a decent chance of having a full-rbf peer.\n\n>This goal can also alternatively be achieved by lowering the mempool expiry time: just as a connected subgraph of fullrbf peers would allow you to broadcast a replacement tx; a connected subgraph of peers with a low expiry time, would also allow you to broadcast a replacement, and would allow you to do so without the other BIP 125 restrictions, such as having to increase thec absolute fee, or not being able to conflict more than 100 descendants or not being able to introduce new unconfirmed parents.\n\nWhy are we discussing a convoluted alternative with clearly worse outcomes than just running full-rbf? That's not a like-for-like alternative to what these users want to do.\n\nIs it because you are concerned that providing the option at all would harm zeroconf? Let's be clear here.\n\n>> and if there is a transaction replacement with more incentives for miners to mine I want to be able to see it.\n>\n>And without or without full rbf it's quite easy to provide different nodes with different views of the mempool: simply announce conflicting txs at the same fee rate to different peers. That can be done in advance and used as an input to a transaction that you want to have finer propagation control over. It's also something that appears to be routinely occurring on the network currently.\n\nYour point? Why should the existence of another mechanism of double spending discourage the running of full-rbf nodes? Green (and others) have perfectly valid reasons to run them.\n\nIs it because you're trying to protect zeroconf by taking away an option?\n",
      "created_at" : "2022-11-05T08:01:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304436332",
      "id" : 1304436332,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwB5s",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304436332/reactions"
      },
      "updated_at" : "2022-11-05T08:01:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304436332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK",
      "created_at" : "2022-11-05T10:52:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304496391",
      "id" : 1304496391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwQkH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304496391/reactions"
      },
      "updated_at" : "2022-11-05T10:52:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304496391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK",
      "created_at" : "2022-11-05T11:11:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304499822",
      "id" : 1304499822,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwRZu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304499822/reactions"
      },
      "updated_at" : "2022-11-05T11:11:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304499822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/56899748?v=4",
         "events_url" : "https://api.github.com/users/satalik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satalik/followers",
         "following_url" : "https://api.github.com/users/satalik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satalik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satalik",
         "id" : 56899748,
         "login" : "satalik",
         "node_id" : "MDQ6VXNlcjU2ODk5NzQ4",
         "organizations_url" : "https://api.github.com/users/satalik/orgs",
         "received_events_url" : "https://api.github.com/users/satalik/received_events",
         "repos_url" : "https://api.github.com/users/satalik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satalik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satalik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satalik"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK",
      "created_at" : "2022-11-05T11:12:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304499978",
      "id" : 1304499978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwRcK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304499978/reactions"
      },
      "updated_at" : "2022-11-05T11:12:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304499978",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7918067?v=4",
         "events_url" : "https://api.github.com/users/jaonoctus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaonoctus/followers",
         "following_url" : "https://api.github.com/users/jaonoctus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaonoctus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaonoctus",
         "id" : 7918067,
         "login" : "jaonoctus",
         "node_id" : "MDQ6VXNlcjc5MTgwNjc=",
         "organizations_url" : "https://api.github.com/users/jaonoctus/orgs",
         "received_events_url" : "https://api.github.com/users/jaonoctus/received_events",
         "repos_url" : "https://api.github.com/users/jaonoctus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaonoctus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaonoctus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaonoctus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "My NACK on this comes mainly from a privacy perspective, whereby I do not like having to flag transactions as \"special\" in any way wherever possible, as its a key tool in wallet/transaction fingerprinting.\r\n\r\nHowever I also strongly believe that nobody should be (or should have been) treating entry to the mempool as a confirmation of a transaction. We have other tools available for these use cases now.\r\n\r\nAdmittedly I don't run a business which accepts unconfirmed transactions, but I certainly don't accept them as valid for payments received to myself. ",
      "created_at" : "2022-11-05T11:15:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304500358",
      "id" : 1304500358,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwRiG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304500358/reactions"
      },
      "updated_at" : "2022-11-05T11:15:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304500358",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK",
      "created_at" : "2022-11-05T12:24:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304536896",
      "id" : 1304536896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwadA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304536896/reactions"
      },
      "updated_at" : "2022-11-05T12:24:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304536896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/53601981?v=4",
         "events_url" : "https://api.github.com/users/blockchainjag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/blockchainjag/followers",
         "following_url" : "https://api.github.com/users/blockchainjag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/blockchainjag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/blockchainjag",
         "id" : 53601981,
         "login" : "blockchainjag",
         "node_id" : "MDQ6VXNlcjUzNjAxOTgx",
         "organizations_url" : "https://api.github.com/users/blockchainjag/orgs",
         "received_events_url" : "https://api.github.com/users/blockchainjag/received_events",
         "repos_url" : "https://api.github.com/users/blockchainjag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/blockchainjag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/blockchainjag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/blockchainjag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Reading the reasoning on the mailing post, I think there are more long-term implications in the suggestion of adopting the transaction-relay policy of non-interfering use cases to what the network supposes. Especially the concern we might create mining income asymmetries due to unequal access to transactions flows bypassing policies, in a future where fees should substantially contribute to block reward. \r\n\r\n@ariard I don't understand what you mean here.  The philosophy I'm articulating is one where, at least in this software project, we try to keep policy rules in sync with one another, generally only deviating in situations where node resources become an issue (so keeping flags for minimum relay fee, maximum mempool size, and perhaps transaction chain limits are probably fine -- as those only serve to interfere with relay for transactions that would have poor relay propagation properties anyway).\r\n\r\nIf the policy rules are largely in sync, and the policies are designed to accommodate all the use cases we can come up with, then no one has a strong incentive to relay transactions privately to miners.  I think this is the best outcome. \r\n\r\n> Answering on the direct questions, as argued multiple times, full-rbf removes one DoS concern for multi-party transactions flows. The solution is satisfying in the sense, if full-rbf is deployed on the majority of the network, a participant to a coinjoin transaction can expect the target transaction, if it offers a better fee in the definition of BIP125 to propagate to the miners. The coinjoin protocol execution doesn't have to halt, and it can keep progressing forward as long as you have fee-bumping reserves available to compete with blockspace demand >\r\n\r\nThanks for responding to this point, because I didn't expect after the recent discussion on ways to pin a coinjoin transaction that you would still think fullrbf is a solution.  (Furthermore, if we adopted a relay policy like I proposed in #26451, I think the pinning problem would get much, much worse, which further emphasizes the issue that pinning problems are hard to solve.)\r\n\r\nFor clarity to everyone else, I think it's helpful if we can establish what the coinjoin/multiparty funding transaction model is that you're working with, because it took me a few iterations of offline discussion with @instagibbs to understand the issue.  (Also, if my understanding is different than what you're thinking about, this would be a good time to get on the same page.)\r\n\r\nI believe the example of the coinjoin protocol you're thinking about is one where anonymous users express interest in a coinjoin, and start with some sort of signing round where they coordinate a transaction with inputs and outputs they each provide.  (I'm guessing there are various timeouts and such so that if one party stalls, they get dropped from the transaction, and the rest of the group continues.)\r\n\r\nOnce the inputs and signatures have been verified to look good to everyone -- perhaps there's a requirement that all the inputs are confirmed, and that all the inputs pass the standardness rules of Bitcoin Core -- then a coordinator will broadcast the transaction on the network.  The coordinator wants to be able to do this, and have it succeed, without having to inspect its own mempool, and without connecting to other nodes to see what is in their mempools.  As time passes, the coordinator may rbf this transaction to try to increase the likelihood that it confirms (it's not clear to me how this happens, do the other participants pre-sign feebumped versions initially?).\r\n\r\nIf the transaction becomes conflicted with what is in the chain, then the coordinator's wallet can detect this, determine which party's input was double-spent, and remove that party from the protocol and restart with the remaining users.  Eventually, the protocol will terminate when an honest subset of users are able to complete their coinjoin.\r\n\r\nThe problem arises when a user or group of users (or a user pretending to be a group of users, and able to take multiple inputs of the transaction) can indefinitely stall the protocol, by relaying a low feerate transaction that cannot be feebumped away, and which doesn't confirm on its own for a long time.  The question is, how might an adversary achieve this (and at what cost), and what tools are available to protocol designers to prevent it?  \r\n\r\nThe limitation of not inspecting your own or any other node's mempool to see what transactions are relayed on the public network is a significant limitation, and while I can understand why it would be very useful if we could design a protocol in this way, I'm not sure that limitation is one that the network should accept as a reason to enforce a policy on everyone.  But putting that aside, the pinning issues that exist even in a fullrbf world would make this protocol vulnerable to stalling all the same, albeit at greater cost than in a non-fullrbf world.  The example I gave on the mailing list was that an adversary could pin the coinjoin transaction by relaying a double-spend that was large and had low feerate.  If we adopted something like #26451, then this pin would be extremely effective if the adversary chained a single low fee, but high feerate transaction to their double-spend (under the rules I proposed in #26451, the replacement transaction would both need to be high fee to pay for all the fees being removed from the mempool, and high feerate to satisfy the incentive compatibility heuristic - even though the transactions generated by the adversary might not be mined for a long time, because the ancestor feerate of the child might be very low).\r\n\r\nI also mentioned on the mailing list that an adversary with multiple inputs into the coinjoin could use the 100 transaction limit to prevent any rbf from occurring at all.  The cost of this might not be very high, because the 100 transactions used can all be small.\r\n\r\nAnd finally just recently I thought of a new DoS attack that you could run into, which is that an adversary can use RBF to keep your coinjoin transaction out of the network's mempools, without ever actually having their coinjoin input double-spent in a mined block.  Imagine the coinjoin transaction is relayed on the network and in everyone's mempool.  The adversary can double-spend their input in a higher fee/higher feerate transaction that includes multiple inputs.  Then they double-spend that transaction by conflicting with one of the other inputs that were spending, resulting in a situation where the coinjoin transaction would be eligible for inclusion in node mempools (because there are no longer any conflicting spends of its inputs), but due to relay optimizations no node would reannounce or relay the transaction for a while, at least until the next block is mined.  For an adversary that is willing to issue one transaction at the prevailing block fees each block, the coinjoin could be stalled indefinitely with no ability to detect which user is causing the problem, assuming your model is that you don't inspect the mempool.\r\n\r\nI don't know if you think that all these attacks are too costly for anyone to bother with, but it seems to me that it would make more sense to iron out the deficiencies in our RBF policies and try to improve them first and decide what level of attacker costs you're concerned with, before asking the network to try to address this use case, since it seems like fullrbf is not going to be enough.  Moreover, based on recent mailing list discussion, it seems like the existing coinjoin implementations out there don't even signal for RBF on their transactions and aren't worried about these kinds of DoS vectors at the moment [[1](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021082.html)] [[2](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021152.html)].\r\n\r\nOne concrete problem with deploying fullrbf before these problems are worked out is that I would expect it to be even harder to change the replacement rules we have when more users' transactions would be affected.\r\n\r\n> Another more distant concern (yet to be backed up by more research), full-rbf removes a mass mempool-partitioning vector, where an attacker could partition all the network mempools states and from then alter fee-estimation or leverage this as a building block for advanced pinning (cf. the last attack scenario [0]). Of course, partitioning mempools states due to policy difference is always a potential outcome (e.g Taproot transactions between upgraded and non-upgrade nodes), however I wonder what level of difficulty and cost we should burden on an attacker, or consider this as inevitable.\r\n\r\nI think this is already possible in a fullrbf world, due to the ease with which someone can construct two transactions that are mutually non-replaceable under our current rules (if transaction A has higher feerate than B, but B has greater fees than A, then neither one will displace the other.). Perhaps I don't follow what your security model is for this concern?\r\n\r\n> On the second question, if we had a stronger model of what we mean by incentive-compatible, rather to evaluate any rule on a binary approach (i.e either compatible or not), we could adopt a quantitative approach. \r\n\r\nI completely agree that a problem we are running into is that the notion of what \"incentive compatible\" means is not well-defined.  I have attempted to articulate a philosophy of how I think we can work to meet different use cases that may not be incentive compatible if they were the only deployed policy on the network, but that I think are incentive compatible in the sense that users should have no need to subvert their flaws in the presence of policy options that meet their use case.  If people don't think my philosophy works, I'd be interested to hear of other philosophies that are workable to meet use cases on the network.  Thus far I'm not aware of any single set of policy rules that we could apply to all transactions that would satisfy the current use cases on the network (and please note that I'm ignoring the idea of \"zeroconf\" as a use case, which I think is a business practice that is not directly tied to any particular set of relay policies -- I'm thinking instead of CPFP, coinjoins, lightning, fee bumping, etc).\r\n\r\n> On the last question, if someone proposes a command line option that breaks v3 transaction relay in the future, I think I would be in favor of such change. I could understand a full-node operator which is not partaking in Lightning neither interested to have compelling fee-estimation, and willing to reduce the CPU DoS surface of a low-performance node. Any transaction-relay rules or mempool acceptance rules, even wisely designed and reviewed, increases the bug surface of a full-node, a risk a node operator could choose to not burden with.\r\n\r\nI completely disagree with this!  If you want to limit CPU DoS surface, don't relay transactions. It would be absurd to me that censoring a *type* of transaction would be a culture we'd want to promote in our project, for such a flimsy reason.\r\n",
      "created_at" : "2022-11-05T13:19:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304545627",
      "id" : 1304545627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nwclb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304545627/reactions"
      },
      "updated_at" : "2022-11-05T13:19:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304545627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> My NACK on this comes mainly from a privacy perspective, whereby I do not like having to flag transactions as \"special\" in any way wherever possible, as its a key tool in wallet/transaction fingerprinting.\r\n> \r\n> However I also strongly believe that nobody should be (or should have been) treating entry to the mempool as a confirmation of a transaction. We have other tools available for these use cases now.\r\n> \r\n> Admittedly I don't run a business which accepts unconfirmed transactions, but I certainly don't accept them as valid for payments received to myself.\r\n\r\nI agree with all these reasons, and as a node operator, both commercially and personally, I intend to enable mempoolfullrbf on my nodes once bitcoin-core 24.0 is released. I don't want to participate in activity that could be used to deanonymize transactions, and I also don't want to be complicit in theft. Lack of RBF signalling is not a strong enough guarantee a user is incapable of double-spending their coins since it relies upon the node implementation. Since people are doing this anyway with modified nodes, and now that there are good solutions that enable instant payments, I don't see a good reason for this use-case to be relied upon.\r\n\r\nFor these reasons, you have my NACK.",
      "created_at" : "2022-11-05T14:24:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304556503",
      "id" : 1304556503,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwfPX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304556503/reactions"
      },
      "updated_at" : "2022-11-05T14:24:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304556503",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/285690?v=4",
         "events_url" : "https://api.github.com/users/cryptoquick/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cryptoquick/followers",
         "following_url" : "https://api.github.com/users/cryptoquick/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cryptoquick/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cryptoquick",
         "id" : 285690,
         "login" : "cryptoquick",
         "node_id" : "MDQ6VXNlcjI4NTY5MA==",
         "organizations_url" : "https://api.github.com/users/cryptoquick/orgs",
         "received_events_url" : "https://api.github.com/users/cryptoquick/received_events",
         "repos_url" : "https://api.github.com/users/cryptoquick/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cryptoquick/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cryptoquick/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cryptoquick"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sdaftuar \r\n\r\n> If the policy rules are largely in sync, and the policies are designed to accommodate all the use cases we can come up with, then no one has a strong incentive to relay transactions privately to miners. I think this is the best outcome.\r\n\r\nAs made clear by multiple wallet authors (Green, Electrum, and [Trezor](https://twitter.com/slush/status/1588832641796943874)) and others, bumping fees and canceling non-opt-in-rbf transactions is an important usecase. All three of those wallets went to the trouble of NACKing this pull-req. This use-case is so important that one person who spoke up above has even been running a full-rbf patch for years to help users get their transactions unstuck in times of congestion.\r\n\r\nThat's a very strong incentive to relay transactions privately, and yet your pull-req here aims to put up road-blocks to that use-case.\r\n\r\n> The problem arises when a user or group of users (or a user pretending to be a group of users, and able to take multiple inputs of the transaction) can indefinitely stall the protocol, by relaying a low feerate transaction that cannot be feebumped away, and which doesn't confirm on its own for a long time. The question is, how might an adversary achieve this (and at what cost), and what tools are available to protocol designers to prevent it?\r\n\r\n(snip irrelevant coinjoin discussion)\r\n\r\n> I don't know if you think that all these attacks are too costly for anyone to bother with, but it seems to me that it would make more sense to iron out the deficiencies in our RBF policies and try to improve them first and decide what level of attacker costs you're concerned with, before asking the network to try to address this use case, since it seems like fullrbf is not going to be enough. Moreover, based on recent mailing list discussion, it seems like the existing coinjoin implementations out there don't even signal for RBF on their transactions and aren't worried about these kinds of DoS vectors at the moment [[1](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021082.html)] [[2](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-November/021152.html)].\r\n\r\nAs per the mailing list discussion, both Wasabi wallet and Joinmarket are well aware of full-rbf. In both cases RBF transactions and pinning are just another kind of DoS attack that they have to deal with - a much more common type of DoS attack is to simply fail to complete the signing round. Both wallets have mechanisms to assign blame, and they expect to have to improve those mechanisms over time for a variety of reasons.\r\n\r\nBringing up Coinjoin in this discussion is irrelevant: full-rbf certainly does not make the problem any worse, as it simply provides one more way that inputs can get mined. Bringing this up as a *blocker* to merging a default-off full-rbf patch is disingenuous.\r\n\r\nLet me repeat that: full-rbf fundamentally can't make pinning worse. Pinning attacks attempt to *prevent* a transaction from being mined. Full-RBF provides an *additional* way that a transaction can be mined.\r\n\r\n> One concrete problem with deploying fullrbf before these problems are worked out is that I would expect it to be even harder to change the replacement rules we have when more users' transactions would be affected.\r\n\r\nFull-RBF is identical to our current replacement rules, with the one difference that it applies to more transactions. That's it. There is no way some users/miners choosing to run it will make the pinning problem even worse.\r\n\r\n> I think this is already possible in a fullrbf world, due to the ease with which someone can construct two transactions that are mutually non-replaceable under our current rules (if transaction A has higher feerate than B, but B has greater fees than A, then neither one will displace the other.). Perhaps I don't follow what your security model is for this concern?\r\n\r\n...and again, bringing up this issue is an irrelevant distraction, as full-rbf clearly can't make the situation worse.\r\n\r\n> I completely agree that a problem we are running into is that the notion of what \"incentive compatible\" means is not well-defined. I have attempted to articulate a philosophy of how I think we can work to meet different use cases that may not be incentive compatible if they were the only deployed policy on the network, but that I think are incentive compatible in the sense that users should have no need to subvert their flaws in the presence of policy options that meet their use case. If people don't think my philosophy works, I'd be interested to hear of other philosophies that are workable to meet use cases on the network. Thus far I'm not aware of any single set of policy rules that we could apply to all transactions that would satisfy the current use cases on the network (and please note that I'm ignoring the idea of \"zeroconf\" as a use case, which I think is a business practice that is not directly tied to any particular set of relay policies -- I'm thinking instead of CPFP, coinjoins, lightning, fee bumping, etc).\r\n\r\nTalking about perfect notions of incentive compatibility is irrelevant to the discussion at hand. There are always going to be different notions of incentives and different mempool implementations. That's ok. The only users who can't accept diversity in mempool policy are those trying to make zeroconf work.\r\n\r\nMeanwhile, by taking away an option, you are restricting the ability of users and miners to experiment and learn about incentive compatible policies in favor of a top-down design approach. Why are you trying to restrict this experimentation?\r\n\r\n> I completely disagree with this! If you want to limit CPU DoS surface, don't relay transactions. It would be absurd to me that censoring a _type_ of transaction would be a culture we'd want to promote in our project, for such a flimsy reason.\r\n\r\nYou are trying to censor a type of transaction right now: full-rbf replacements. The status quo for v24.0 would be to provide an option for users and minors to relay/mine those transactions, and you are trying to take that option away.",
      "created_at" : "2022-11-05T14:27:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304556986",
      "id" : 1304556986,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwfW6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304556986/reactions"
      },
      "updated_at" : "2022-11-05T14:28:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304556986",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK\r\n\r\nJust as I have the option to decide the level of fees of a tx for my node to relay I want to have the option to choose if I want to make my mempool fullRBF or not.",
      "created_at" : "2022-11-05T14:52:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304561208",
      "id" : 1304561208,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwgY4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304561208/reactions"
      },
      "updated_at" : "2022-11-05T14:52:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304561208",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/47448562?v=4",
         "events_url" : "https://api.github.com/users/zndtoshi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/zndtoshi/followers",
         "following_url" : "https://api.github.com/users/zndtoshi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/zndtoshi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/zndtoshi",
         "id" : 47448562,
         "login" : "zndtoshi",
         "node_id" : "MDQ6VXNlcjQ3NDQ4NTYy",
         "organizations_url" : "https://api.github.com/users/zndtoshi/orgs",
         "received_events_url" : "https://api.github.com/users/zndtoshi/received_events",
         "repos_url" : "https://api.github.com/users/zndtoshi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/zndtoshi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/zndtoshi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/zndtoshi"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "The decision here is whether to facilitate a change in mempool policy to force txns that did not opt in to RBF to do so. This would change years of Bitcoin standard behavior and impose qualities on people that did not know or choose to opt in to those qualities. It is not Core's place to decide such a change for users. \r\n\r\nThis will just force us to have to create a RFS respect-first-seen flag, and go in circles. What does Core do when RFS people come in droves to comment on the issue of changing mempool policy to RFS by default? The whole thing is silly, no?\r\n\r\nRight now, people that want to RBF already can, and any wallet that wants to offer RBF-by-default as a differentiating service can (and some do). Meanwhile, merchants can accept and limit their risk and provide 0conf acceptance as a service to Bitcoiners that meet next-block-likely-inclusion fee requirements. We have a nice incentive-compatible stasis with maximum utility already. Do not break this.\r\n\r\nI do not want to have to lobby for RFS, and I do not want merchants to have to KYC me to provide fast service.",
      "created_at" : "2022-11-05T15:04:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304563380",
      "id" : 1304563380,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nwg60",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304563380/reactions"
      },
      "updated_at" : "2022-11-05T15:04:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304563380",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18273620?v=4",
         "events_url" : "https://api.github.com/users/BitcoinErrorLog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinErrorLog/followers",
         "following_url" : "https://api.github.com/users/BitcoinErrorLog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinErrorLog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinErrorLog",
         "id" : 18273620,
         "login" : "BitcoinErrorLog",
         "node_id" : "MDQ6VXNlcjE4MjczNjIw",
         "organizations_url" : "https://api.github.com/users/BitcoinErrorLog/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinErrorLog/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinErrorLog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinErrorLog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinErrorLog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinErrorLog"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK\r\n\r\nSecurity and freedom matter",
      "created_at" : "2022-11-05T15:08:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304564049",
      "id" : 1304564049,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwhFR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304564049/reactions"
      },
      "updated_at" : "2022-11-05T15:08:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304564049",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/117528352?v=4",
         "events_url" : "https://api.github.com/users/acwildride/events{/privacy}",
         "followers_url" : "https://api.github.com/users/acwildride/followers",
         "following_url" : "https://api.github.com/users/acwildride/following{/other_user}",
         "gists_url" : "https://api.github.com/users/acwildride/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/acwildride",
         "id" : 117528352,
         "login" : "acwildride",
         "node_id" : "U_kgDOBwFXIA",
         "organizations_url" : "https://api.github.com/users/acwildride/orgs",
         "received_events_url" : "https://api.github.com/users/acwildride/received_events",
         "repos_url" : "https://api.github.com/users/acwildride/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/acwildride/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/acwildride/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/acwildride"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "\r\n> This will just force us to have to create a RFS respect-first-seen flag, and go in circles. What does Core do when RFS people come in droves to comment on the issue of changing mempool policy to RFS by default? The whole thing is silly, no?\r\n\r\nI wouldn't even mind a (full-)RFS flag which effectively disables opt-in RBF, but I doubt you'd find many nodes running that.",
      "created_at" : "2022-11-05T15:28:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304567893",
      "id" : 1304567893,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwiBV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304567893/reactions"
      },
      "updated_at" : "2022-11-05T15:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304567893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1370997?v=4",
         "events_url" : "https://api.github.com/users/juestr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/juestr/followers",
         "following_url" : "https://api.github.com/users/juestr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/juestr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/juestr",
         "id" : 1370997,
         "login" : "juestr",
         "node_id" : "MDQ6VXNlcjEzNzA5OTc=",
         "organizations_url" : "https://api.github.com/users/juestr/orgs",
         "received_events_url" : "https://api.github.com/users/juestr/received_events",
         "repos_url" : "https://api.github.com/users/juestr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/juestr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/juestr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/juestr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "RFS flag makes no sense because there is no way to guarantee that the transaction will be seen \"first\" by all nodes in the network. RFS is just an illusion.",
      "created_at" : "2022-11-05T15:31:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304568339",
      "id" : 1304568339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585NwiIT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304568339/reactions"
      },
      "updated_at" : "2022-11-05T15:31:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304568339",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> RFS flag makes no sense because there is no way to guarantee that the transaction will be seen \"first\" by all nodes in the network. RFS is just an illusion.\r\n\r\nRight, full-RFS isn't going to work (save 0conf), but if node owners really want that local policy option I see little harm in it.",
      "created_at" : "2022-11-05T15:38:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304569515",
      "id" : 1304569515,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nwiar",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304569515/reactions"
      },
      "updated_at" : "2022-11-05T15:38:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304569515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1370997?v=4",
         "events_url" : "https://api.github.com/users/juestr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/juestr/followers",
         "following_url" : "https://api.github.com/users/juestr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/juestr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/juestr",
         "id" : 1370997,
         "login" : "juestr",
         "node_id" : "MDQ6VXNlcjEzNzA5OTc=",
         "organizations_url" : "https://api.github.com/users/juestr/orgs",
         "received_events_url" : "https://api.github.com/users/juestr/received_events",
         "repos_url" : "https://api.github.com/users/juestr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/juestr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/juestr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/juestr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The decision here is whether to facilitate a change in mempool policy to force txns that did not opt in to RBF to do so. This would change years of Bitcoin standard behavior and impose qualities on people that did not know or choose to opt in to those qualities.\r\n\r\nYou can repeat this statement if and when the mempool policy default is attempted to be changed in Core. Giving full nodes an option to change it (when some users are already doing this) without changing the default is not imposing anything. Leave it to the maintainers now please, I'll support whatever they do for this release. We can rehash all these same arguments when there are attempts to actually change the mempool policy default which even this PR author has said he would like to do.",
      "created_at" : "2022-11-05T15:41:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304570106",
      "id" : 1304570106,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nwij6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304570106/reactions"
      },
      "updated_at" : "2022-11-05T15:41:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304570106",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Hi @sdaftuar!\r\n\r\n> Does fullrbf offer any benefits other than breaking zeroconf business practices? If so, what are they?\r\n\r\nYes, it offers many benefits, and without it Bitcoin won't work properly! Users will lose $!\r\n\r\nSee here for details: https://fixingtao.com/2016/03/bitcoin-keep-calm-and-rbfcpfp-on/\r\n\r\nRetailers should not be relying on 0-conf, or L1 at all. Please use Lightning Network (or similar L2) instead.\r\n\r\n(NACK this proposal)",
      "created_at" : "2022-11-05T15:52:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304571841",
      "id" : 1304571841,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nwi_B",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304571841/reactions"
      },
      "updated_at" : "2022-11-05T15:52:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304571841",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/138706?v=4",
         "events_url" : "https://api.github.com/users/taoeffect/events{/privacy}",
         "followers_url" : "https://api.github.com/users/taoeffect/followers",
         "following_url" : "https://api.github.com/users/taoeffect/following{/other_user}",
         "gists_url" : "https://api.github.com/users/taoeffect/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/taoeffect",
         "id" : 138706,
         "login" : "taoeffect",
         "node_id" : "MDQ6VXNlcjEzODcwNg==",
         "organizations_url" : "https://api.github.com/users/taoeffect/orgs",
         "received_events_url" : "https://api.github.com/users/taoeffect/received_events",
         "repos_url" : "https://api.github.com/users/taoeffect/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/taoeffect/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/taoeffect/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/taoeffect"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : " > Leave it to the maintainers now please, I'll support whatever they do for this release.\r\n \r\n This is not Bitcoin",
      "created_at" : "2022-11-05T16:31:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304582005",
      "id" : 1304582005,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nwld1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304582005/reactions"
      },
      "updated_at" : "2022-11-05T16:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304582005",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Posting this on behalf of Tony:\r\n\r\n\"NACK.\r\n\r\nI appreciate all the considerations laid out in the mailing list post but I don't see it as a reason to revert the move toward progress that has already been in motion with the RC.\r\n\r\n    However, it seems to me that similar problems exist for such a protocol\r\n    even in a fullrbf world...\r\n\r\nJust because other problems and DoS vectors exist with Lightning and transaction pining, doesn't mean that we can't try to remove them one step at a time. I think you make a great argument about why it helps but doesn't stop it. Are you proposing that we delay until we fix those problems, which you later make the argument that we'll never really fix because user policies can always disable things like transaction v3? It gets to the point where you're arguing that policies don't really matter in the end and that any effort toward progress is pointless. To be fair, I don't know if transaction v3 is good enough to solve our problems or not and I think your thought experiments around -disable_v3_transaction_enforcement is interesting and should be a consideration as devs make progress towards it but I feel like it's a different issue that full RBF shouldn't be pinned to as a reason for not going forward with it.\r\n\r\n    Does fullrbf offer any benefits other than breaking zeroconf business\r\n    practices?  If so, what are they?\r\n\r\nYou can't break what is already broken. These were terrible assumptions to begin with. If you want instant transactions with delayed settlement, there's a thing called Lightning.\r\n\r\nTo start with, let's chat about why this doesn't change anything for them. If their arguments for why it's necessary revolve around the fact that they can do proper risk assessment and manage it appropriately, that doesn't change. Let them continue to do their risk assessment. There's still going to be a % of users that may decide to double spend given X amount of sats.\r\n\r\nSecondly, I find the original motivation for this change coming from Muun to be overstated and a use case that should not be advocated for. There's a difference between a merchant delivering a product on 0 conf and Muun providing 0 conf submarine swaps with the illusion that they are atomic. They are not and they are lying to their users, there's nothing atomic about them when it's 0 conf. Furthermore, there are many ways that their model is both unsustainable and insecure. There are plenty of ways to steal money from them regardless of 0 conf. I bring it up as an example of why users and use cases may be wrong in general, so why not rip the bandaid off now? You agree it should happen eventually, why not happen when it's at the top of everyone's minds and also to prevent other businesses in the future from falling trap to the illusions given by non-RBF and non-RBF companies?\"\r\n\r\nhttps://stacker.news/items/89456",
      "created_at" : "2022-11-05T16:40:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304583507",
      "id" : 1304583507,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nwl1T",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304583507/reactions"
      },
      "updated_at" : "2022-11-05T16:49:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304583507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept NACK.\r\n\r\nYour reasoning assumes mempool policy is a global decision made by the Bitcoin Core developers. This premise is incorrect. It is a per-node decision, subject to the whims of the owner of the individual node. While we don't have to actively support all options, there is no justification for denying users the right to use a policy when the development team is willing to maintain that support.\r\n\r\nAll arguments against full RBF are worth consideration only by those end users and when developers decide if we want to spend time maintaining/supporting the policy. To an extent, it may make sense to influence the default policy setting as well. But it is not an excuse to obstruct wilful developers from providing wilful users with a policy they wish to use.\r\n\r\n> Does fullrbf offer any benefits other than breaking zeroconf business practices? If so, what are they?\r\n\r\nExposing reality for what it is, at least. Unconfirmed transactions are no safer than RBF-enabled transactions, and the false idea that they are is apparently leading to businesses to harm not only themselves, but also users. For example, it was related to me that users paying for a product with a RBF-signalling transaction, are defrauded of their product, and have to jump through hoops to even get their bitcoins returned to them.\r\n\r\n(I'm assuming others have already offered more obvious use cases)\r\n\r\n>Is it reasonable to enforce BIP 125's rbf rules on all transactions, if those rules themselves are not always incentive compatible?\r\n\r\nTo begin with, \"incentive compatible\" is just one ideology/policy, not the only one. Most nodes gain nothing from fees, so have no direct incentive to favour higher fees in the first place. Some developers attempting to force only a limited ideology on Bitcoin Core is part of the project's problems, and not a valid justification.\r\n\r\n>If someone were to propose a command line option that breaks v3 transaction relay in the future, is there a logical basis for opposing that which is consistent with moving towards fullrbf now?\r\n\r\nNot comparable at all.",
      "created_at" : "2022-11-05T19:58:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304624504",
      "id" : 1304624504,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nwv14",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304624504/reactions"
      },
      "updated_at" : "2022-11-05T19:58:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304624504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK\r\n\r\nEnough people obviously want this option, and they can always run something other than bitcoin core if we don't give it to them. **I would be strongly against changing the default** of `-mempoolfullrbf` to `true`, but that is not what the commit you're reverting does. I think your reasoning @sdaftuar provided in bitcoin-dev misses the crux of this issue - mempool policy is up to each individual full node. I am very inline w/ @luke-jr's comment above.\r\n\r\nAs a general principle I am very in favor of Linux/Torvalds \"WE DO NOT BREAK USERSPACE\" golden rule. And I would hate to see anything that breaks zerconf **as long as it is being used** (regardless of how I or anyone else feels about it). So if that's how you feel it is your responsibility to campaign with full node operators to not take the time/effort to exercise this option (which is already their right, with or without this option being formalized).",
      "created_at" : "2022-11-05T21:39:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304646673",
      "id" : 1304646673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nw1QR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304646673/reactions"
      },
      "updated_at" : "2022-11-05T21:39:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304646673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Zeroconf is antithetical to the trustless, economic incentive driven, design of Bitcoin\r\n \r\n\r\n> > Does fullrbf offer any benefits other than breaking zeroconf business practices? If so, what are they?\r\n> \r\n> Exposing reality for what it is, at least. Unconfirmed transactions are no safer than RBF-enabled transactions, and the false idea that they are is apparently leading to businesses to harm not only themselves, but also users. For example, it was related to me that users paying for a product with a RBF-signalling transaction, are defrauded of their product, and have to jump through hoops to even get their bitcoins returned to them.\r\n> \r\n> (I'm assuming others have already offered more obvious use cases)\r\n\r\nexposing reality and breaking zeroconf? anything else? hope there is more. or this is just politics.   \r\n",
      "created_at" : "2022-11-05T22:49:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304655892",
      "id" : 1304655892,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nw3gU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304655892/reactions"
      },
      "updated_at" : "2022-11-05T22:49:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304655892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/777326?v=4",
         "events_url" : "https://api.github.com/users/jaybny/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaybny/followers",
         "following_url" : "https://api.github.com/users/jaybny/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaybny/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaybny",
         "id" : 777326,
         "login" : "jaybny",
         "node_id" : "MDQ6VXNlcjc3NzMyNg==",
         "organizations_url" : "https://api.github.com/users/jaybny/orgs",
         "received_events_url" : "https://api.github.com/users/jaybny/received_events",
         "repos_url" : "https://api.github.com/users/jaybny/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaybny/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaybny/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaybny"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> or this is just politics\r\n\r\nThat is the whole point . \r\n\r\nNothing should be easier to include in Bitcoin Core nor remove important things that are being being included and reviewed.\r\n\r\nEverything else is politics",
      "created_at" : "2022-11-05T23:04:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304659430",
      "id" : 1304659430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nw4Xm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304659430/reactions"
      },
      "updated_at" : "2022-11-05T23:24:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304659430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@ryanofsky  https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1300767663 \r\nthanks for this. is clears up a lot \r\n\r\nI think if this option flag has not been released yet, then it should not be released. because of the can of worms with competing options. `-disable_v3_transaction_enforcement`  @ryanofsky \r\n\r\nif removing this option is symbolic, the option itself is also symbolic  @ryanofsky \r\n\r\ngoing farther, those power-users that would set this flag, already have this code merged into bitcoin core and can copy/fork maintain their own special full rbf implementation. pretty straight forward for power users. \r\n\r\n> Does fullrbf offer any benefits other than breaking zeroconf business practices?  If so, what are they?\r\n\r\nstill no good response here. \r\n\r\nbreaking external (zeroconf) assumptions based on core devs assumptions as to what are best practices is not a reason to push code changes through bitcoin core \r\n\r\ncan see a better future solutions here with signaling \r\n\r\n\r\nACK  \r\nremove it ",
      "created_at" : "2022-11-05T23:37:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304666402",
      "id" : 1304666402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nw6Ei",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304666402/reactions"
      },
      "updated_at" : "2022-11-05T23:43:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304666402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/777326?v=4",
         "events_url" : "https://api.github.com/users/jaybny/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaybny/followers",
         "following_url" : "https://api.github.com/users/jaybny/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaybny/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaybny",
         "id" : 777326,
         "login" : "jaybny",
         "node_id" : "MDQ6VXNlcjc3NzMyNg==",
         "organizations_url" : "https://api.github.com/users/jaybny/orgs",
         "received_events_url" : "https://api.github.com/users/jaybny/received_events",
         "repos_url" : "https://api.github.com/users/jaybny/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaybny/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaybny/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaybny"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">if removing this option is symbolic\r\n\r\nnothing in this software is symbolic, almost everything works and has a function \r\n\r\nthis has become political now \r\n\r\n> going farther, those power-users that would set this flag, already have this code merged into bitcoin core and can copy/fork maintain their own special full rbf implementation. pretty straight forward for power users.\r\n\r\nnobody is saving power users and devs as this option is already available in knots\r\n\r\nthere is no flag as well",
      "created_at" : "2022-11-05T23:46:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304667619",
      "id" : 1304667619,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nw6Xj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304667619/reactions"
      },
      "updated_at" : "2022-11-05T23:47:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304667619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Multiple purposes I would say. As a wallet sender I want to be able to replace a transaction made in error as well as bump the fee in a congested situation regardless of if the user had the hindsight to set the rbf flag (especially since nodes and miners can ignore said flag, pretty useless)\r\n\r\n@greenaddress I'm not familiar with your wallet/service -- is there a reason that transactions your software generates (or that you generate as a user) don't always opt-in to RBF?  If there's an issue with why that can't be a default to avoid these kinds of problems, I'd be interested to hear it.\r\n\r\n@SomberNight Same question for you, I'm not familiar with what wallets the users you're referring to might be using; is there an issue with having opt-in be the default for these wallets?",
      "created_at" : "2022-11-06T00:07:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304672735",
      "id" : 1304672735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nw7nf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304672735/reactions"
      },
      "updated_at" : "2022-11-06T00:14:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304672735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\n\nOn November 5, 2022 4:04:46 PM GMT+01:00, Bitcoin Error Log ***@***.***> wrote:\n>The decision here is whether to facilitate a change in mempool policy to force txns that did not opt in to RBF to do so. This would change years of Bitcoin standard behavior and impose qualities on people that did not know or choose to opt in to those qualities. It is not Core's place to decide such a change for users. \n\nCore is not deciding such a change for users. Core is allowing users to choose such a change.\n\n>This will just force us to have to create a RFS respect-first-seen flag, and go in circles. What does Core do when RFS people come in droves to comment on the issue of changing mempool policy to RFS by default? The whole thing is silly, no?\n\nWe ignore them, because what they're asking for would be foolish.\n\n...and with a RFS flag, some merchants would demand it be set, those transactions would get stuck on occasion, and there would be reasons to override the flag.\n\nThe fact is in a decentralized system like Bitcoin, unconfirmed transactions are second class citizens and no amount of hope can change that.\n\nWhat's silly is trying to force the issue. Doubly silly when we're trying to force it by removing options!\n\n>Right now, people that want to RBF already can, and any wallet that wants to offer RBF-by-default as a differentiating service can (and some do). Meanwhile, merchants can accept and limit their risk and provide 0conf acceptance as a service to Bitcoiners that meet next-block-likely-inclusion fee requirements. We have a nice incentive-compatible stasis with maximum utility already. Do not break this.\n\nMultiple wallet authors have spoken up on this topic. The fact is for good user experience, the ability to double spend unconfirmed transactions of all types is important.\n\nMeanwhile, in the real world, the vast majority of Bitcoin users don't even try to rely on zeroconf because attempting to do so results in getting defrauded.\n\nIf by some dark magic zeroconf somehow worked reliably, merchants certainly would accept it widely. They don't, because decentralized wallets certainly can't safely rely on zeroconf.\n",
      "created_at" : "2022-11-06T00:49:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1304680904",
      "id" : 1304680904,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26438",
      "node_id" : "IC_kwDOABII585Nw9nI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304680904/reactions"
      },
      "updated_at" : "2022-11-06T00:49:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304680904",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   }
]
