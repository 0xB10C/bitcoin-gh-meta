[
   {
      "author_association" : "MEMBER",
      "body" : "It would make more sense to use the following code as it is uniform with the codebase but it breaks compatibility because passing a hash would require wrapping it between quotes.\r\n\r\n#19949 fixes this and should probably be merged first?\r\n\r\n```diff\r\ndiff --git a/src/rpc/blockchain.cpp b/src/rpc/blockchain.cpp\r\nindex 082e1a76a..cb171f27b 100644\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -642,7 +642,7 @@ static RPCHelpMan getblock()\r\n                 \"If verbosity is 2, returns an Object with information about block <hash> and information about each transaction.\\n\"\r\n                 \"If verbosity is 3, returns an Object with information about block <hash> and information about each transaction, including prevout information for inputs (only for unpruned blocks in the current best chain).\\n\",\r\n                 {\r\n-                    {\"blockhash|blockheight\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The block hash or height\", RPCArgOptions{.type_str={\"\", \"string or numeric\"}}},\r\n+                    {\"hash_or_height\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The block hash or height\", RPCArgOptions{.type_str={\"\", \"string or numeric\"}}},\r\n                     {\"verbosity|verbose\", RPCArg::Type::NUM, RPCArg::Default{1}, \"0 for hex-encoded data, 1 for a JSON object, 2 for JSON object with transaction data, and 3 for JSON object with transaction data including prevout information for inputs\"},\r\n                 },\r\n                 {\r\n@@ -706,18 +706,6 @@ static RPCHelpMan getblock()\r\n {\r\n     uint256 hash;\r\n     ChainstateManager& chainman = EnsureAnyChainman(request.context);\r\n-    if(request.params[0].get_str().length() == 64){\r\n-        hash = *ParseHashOrHeight(request.params[0], chainman)->phashBlock;\r\n-    }\r\n-    else{\r\n-        uint64_t blockHeight;\r\n-        if(ParseUInt64(request.params[0].get_str(),&blockHeight)){\r\n-            hash = *ParseHashOrHeight(blockHeight, chainman)->phashBlock;\r\n-        }\r\n-        else{\r\n-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block height invalid\");\r\n-        }\r\n-    }\r\n \r\n     int verbosity = 1;\r\n     if (!request.params[1].isNull()) {\r\n@@ -729,17 +717,11 @@ static RPCHelpMan getblock()\r\n     }\r\n \r\n     CBlock block;\r\n-    const CBlockIndex* pblockindex;\r\n     const CBlockIndex* tip;\r\n+    const auto* pblockindex{ParseHashOrHeight(request.params[0], chainman)};\r\n     {\r\n         LOCK(cs_main);\r\n-        pblockindex = chainman.m_blockman.LookupBlockIndex(hash);\r\n         tip = chainman.ActiveChain().Tip();\r\n-\r\n-        if (!pblockindex) {\r\n-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\r\n-        }\r\n-\r\n         block = GetBlockChecked(chainman.m_blockman, pblockindex);\r\n     }\r\n \r\ndiff --git a/src/rpc/client.cpp b/src/rpc/client.cpp\r\nindex 8688263ef..4273063da 100644\r\n--- a/src/rpc/client.cpp\r\n+++ b/src/rpc/client.cpp\r\n@@ -96,6 +96,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\r\n     { \"listunspent\", 2, \"addresses\" },\r\n     { \"listunspent\", 3, \"include_unsafe\" },\r\n     { \"listunspent\", 4, \"query_options\" },\r\n+    { \"getblock\", 0, \"hash_or_height\" },\r\n     { \"getblock\", 1, \"verbosity\" },\r\n     { \"getblock\", 1, \"verbose\" },\r\n     { \"getblockheader\", 1, \"verbose\" },\r\n```",
      "created_at" : "2022-11-08T10:40:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26469#issuecomment-1306998154",
      "id" : 1306998154,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26469",
      "node_id" : "IC_kwDOABII585N5zWK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1306998154/reactions"
      },
      "updated_at" : "2022-11-08T10:40:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1306998154",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It would make more sense to use the following code as it is uniform with the codebase but it breaks compatibility because passing a hash would require wrapping it between quotes.\r\n\r\nThe below code is more uniform agreed. The point of this was that this a fully backward compatible drop in implementation with a minimal impact on the codebase. There is an advantage to this method is that it becomes possible to throw not only on invalid hash but also independently on invalid height input. \r\n\r\nEdit: \r\nCommit chain fixed thanks @sipa \r\n\r\nApplied clang formatting to @aureleoules request to make the code more uniform. \r\n",
      "created_at" : "2022-11-08T10:56:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26469#issuecomment-1307017333",
      "id" : 1307017333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26469",
      "node_id" : "IC_kwDOABII585N54B1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1307017333/reactions"
      },
      "updated_at" : "2022-11-09T04:18:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1307017333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3104223?v=4",
         "events_url" : "https://api.github.com/users/russeree/events{/privacy}",
         "followers_url" : "https://api.github.com/users/russeree/followers",
         "following_url" : "https://api.github.com/users/russeree/following{/other_user}",
         "gists_url" : "https://api.github.com/users/russeree/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/russeree",
         "id" : 3104223,
         "login" : "russeree",
         "node_id" : "MDQ6VXNlcjMxMDQyMjM=",
         "organizations_url" : "https://api.github.com/users/russeree/orgs",
         "received_events_url" : "https://api.github.com/users/russeree/received_events",
         "repos_url" : "https://api.github.com/users/russeree/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/russeree/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/russeree/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/russeree"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26039](https://github.com/bitcoin/bitcoin/pull/26039) (rpc: Run type check against RPCArgs (1/2) by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-11-09T16:02:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26469#issuecomment-1308982935",
      "id" : 1308982935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26469",
      "node_id" : "IC_kwDOABII585OBX6X",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1308982935/reactions"
      },
      "updated_at" : "2022-11-09T16:02:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1308982935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It is possible to run the test locally. This way you don't have to push and wait for CI.",
      "created_at" : "2022-11-11T08:19:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26469#issuecomment-1311375305",
      "id" : 1311375305,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26469",
      "node_id" : "IC_kwDOABII585OKf_J",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1311375305/reactions"
      },
      "updated_at" : "2022-11-11T08:19:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1311375305",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> #19949 fixes this and should probably be merged first?\r\n\r\nI agree, #19949 doesn't take `getblock` into account, I don't recall why, probably an oversight. This PR here could be a follow-up building on top of it implementing the needed further changes for `getblock`.",
      "created_at" : "2022-11-12T21:14:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26469#issuecomment-1312573169",
      "id" : 1312573169,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26469",
      "node_id" : "IC_kwDOABII585OPEbx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1312573169/reactions"
      },
      "updated_at" : "2022-11-12T21:14:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1312573169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@russeree - you can turn on cirrus-ci on in your repo.\r\nThis way you can run CI against your repo topic branches.\r\nThis way you can make changes to a PR on a different branch (based on the PR)\r\nThen cherry-pick the change on top of the PR branch.\r\nThen squash if appropriate (or not) \r\n\r\nNOTES:\r\nAdd upstream remote repo...\r\ngit remote add upstream https://github.com/bitcoin/bitcoin\r\nWhen doing new work...\r\ngit checkout master\r\ngit pull upstream +master:master\r\ngit checkout -b \\<topic branch>\r\n\r\nAlso:\r\n\r\nOnce master is updated from upstream\r\nYou can\r\ngit checkout \\<topic branch>\r\ngit rebase master\r\nor\r\ngit rebase \\<passing commit hash>\r\n\r\nYou want to double check that the upstream head is passing CI\r\nThis way - you dont base work on a commit that isnt passing CI\r\nSo if your work fails CI it isnt because you based work on a failing commit. :) ",
      "created_at" : "2022-11-14T22:17:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26469#issuecomment-1314483733",
      "id" : 1314483733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26469",
      "node_id" : "IC_kwDOABII585OWW4V",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1314483733/reactions"
      },
      "updated_at" : "2022-11-14T22:21:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1314483733",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept NACK. See also more reasonable (yet still rejected) proposals #8457, #16439, #14858, #16345, #16317",
      "created_at" : "2022-11-14T22:58:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26469#issuecomment-1314515485",
      "id" : 1314515485,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26469",
      "node_id" : "IC_kwDOABII585OWeod",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1314515485/reactions"
      },
      "updated_at" : "2022-11-14T22:58:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1314515485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Concept NACK. See also more reasonable (yet still rejected) proposals #8457, #16439, #14858, #16345, #16317\r\n\r\nThese are my thoughts about those particular listed PRs. I would disagree that they are all 'more reasonable' but none the less here are my thoughts. \r\n\r\nJust curious as to why you would say an implementation such as #16317 is more reasonable since it clearely violates multiple suggestions outlined in the [developer notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#strings-and-formatting) including the use of c_str and and atoi instead of parse ParseInt32. Then you have #14858. This solution introduces a whole new include for regex expressions and again uses stoi() and defeats the purpose of the guidelines calling for a ParseInt(n)\r\n\r\n#16345 sure could be considered more reasonable since it adds a whole new RPC call as well as #16439 since it's very different solution and removes the ambiguity of using height as an argument. Also effects multiple RPCs. Both of these PRs actually create a new way defining the argument or create a new RPCs\r\n\r\nLastly #8457. This solution is quite close to the one in this PR.  Why it's more reasonable other than it has a throw for invalid height and height out of range.\r\n\r\n",
      "created_at" : "2022-11-15T00:11:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26469#issuecomment-1314576277",
      "id" : 1314576277,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26469",
      "node_id" : "IC_kwDOABII585OWteV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1314576277/reactions"
      },
      "updated_at" : "2022-11-15T00:17:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1314576277",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3104223?v=4",
         "events_url" : "https://api.github.com/users/russeree/events{/privacy}",
         "followers_url" : "https://api.github.com/users/russeree/followers",
         "following_url" : "https://api.github.com/users/russeree/following{/other_user}",
         "gists_url" : "https://api.github.com/users/russeree/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/russeree",
         "id" : 3104223,
         "login" : "russeree",
         "node_id" : "MDQ6VXNlcjMxMDQyMjM=",
         "organizations_url" : "https://api.github.com/users/russeree/orgs",
         "received_events_url" : "https://api.github.com/users/russeree/received_events",
         "repos_url" : "https://api.github.com/users/russeree/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/russeree/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/russeree/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/russeree"
      }
   }
]
