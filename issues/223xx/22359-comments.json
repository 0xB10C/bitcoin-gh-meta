[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21206 by ryanofsky\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-06-28T09:55:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-869546300",
      "id" : 869546300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2OTU0NjMwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-28T09:55:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/869546300",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag I agree. This is also my preferred solution (see #18840). Happy to reopen that one.",
      "created_at" : "2021-06-29T14:23:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870646789",
      "id" : 870646789,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MDY0Njc4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-29T14:23:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870646789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I could be missing something but it seems to me neither solution is clearly correct in all cases. The advantages of this solution over [#18440](https://github.com/bitcoin/bitcoin/pull/18840) are that:\r\n\r\n- It's more obvious what this solution is trying to do. This solution is plainly updating mempool status to reflect what's in the mempool, where [#18440](https://github.com/bitcoin/bitcoin/pull/18840) is broadening a sync that happens in a different part of the code without a specific explanation about why it's necessary.\r\n- [#18440](https://github.com/bitcoin/bitcoin/pull/18840) waits for extra notifications to be handled that may not be relevant, blocking longer than it needs to.\r\n- It's not clear whether [#18440](https://github.com/bitcoin/bitcoin/pull/18840) fixes the problem in all cases, since it's assuming that the mempool implementation will alway queue the removedFromMempool notification before the wallet RPC tries to sync with the queue. And even if this does work now, there is no unit test or other coverage for it to make sure the sync runs at the right point in the broken case, to make sure this stays fixed in the future.\r\n\r\nBut I do agree with the general point that a fully correct solution is probably a blocking solution. I just think the blocking should be targeted. Not more narrow or more wide than it needs to be. For example could add `std::condition_variable m_mempool_cv;` to `CWallet` and `m_mempool_cv.notify_all()` in `transactionRemovedFromMempool()` and `m_mempool_cv.wait(lock, []{return !replaced_tx.fInMempool})` in `bumpfee`\r\n\r\n\r\n\r\n",
      "created_at" : "2021-06-29T16:02:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870725266",
      "id" : 870725266,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MDcyNTI2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-29T16:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870725266",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> For example could add `std::condition_variable m_mempool_cv;` to `CWallet` and `m_mempool_cv.notify_all()` in `transactionRemovedFromMempool()` and `m_mempool_cv.wait(lock, []{return !replaced_tx.fInMempool})` in `bumpfee`\r\n\r\nThinking about this, in a really pathological case where a replaced transaction got added back to the mempool, this could hang. Dropping `CWalletTx::fInMempool` and giving transactions clear states like 730df28e00822f06c9fc11c86a74f764a2f5136c from #21206 would help here, because the replaced transaction could ambiguously transition from the _in-mempool_ state to an intermediate _in-mempool-but-replaced state_ to the _inactive_ state, and the `cv.wait()` could just wait for the transaction to be out of the intermediate state.\r\n\r\nAny case, will ACK this PR. IMO, this is the best fix for we have for now, and it is straightforward and simple, even if it is not 100% right in every case and doesn't have a fancy test.\r\n",
      "created_at" : "2021-06-29T16:28:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870744344",
      "id" : 870744344,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MDc0NDM0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-29T16:28:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870744344",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Should we do this in `transactionRemovedFromMempool` too perhaps?",
      "created_at" : "2021-06-29T18:18:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870813656",
      "id" : 870813656,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MDgxMzY1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-29T18:18:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870813656",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   }
]
