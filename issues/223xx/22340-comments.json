[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Over the last 24h i ran a blocks-only node that saw 106 blocks and downloaded 3.8MB in `cmpctblock` messages. Thats an average of 12KB bytes per `cmpctblock` message received from three high-bandwidth peers. Only 26KB would have been downloaded if `headers` messages would have been used instead.\r\nAssuming an average block size of 1.38MB the `cmpctblock` messages represented **2.5%** of downloaded block data.",
      "created_at" : "2021-06-26T15:12:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-869016710",
      "id" : 869016710,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2OTAxNjcxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-26T15:12:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/869016710",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery @amitiuttarwar @sipa @ajtowns Any thoughts?",
      "created_at" : "2021-07-01T02:46:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-871869724",
      "id" : 871869724,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MTg2OTcyNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-01T02:46:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871869724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems workable? Compact blocks should be seeing:\r\n\r\n * 12kB for short tx ids per cmpctblock message announcing a new block (for each high bw peer per block)\r\n * 2kB per getblocktxn message asking for the tx data (per block)\r\n * ~0 overhead for blocktxn message providing the block txns\r\n\r\nWhich should be ~38kB per block or about 5MB per day/144 blocks. Legacy block relay should just be:\r\n\r\n * ~0 overhead for headers message\r\n * ~0 overhead for GETDATA MSG_BLOCK request\r\n * ~0 ovehead for BLOCK message\r\n\r\nSo this makes sense to me.",
      "created_at" : "2021-07-02T05:20:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-872723147",
      "id" : 872723147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MjcyMzE0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-02T05:20:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872723147",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r662872834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662872834"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you can just exit this function immediately if `!m_ignore_incoming_txs`:\r\n\r\n```diff\r\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\r\n {\r\n     AssertLockHeld(cs_main);\r\n+\r\n+    // Never request high-bandwidth mode from peers if we're blocks-only. Our\r\n+    // mempool will not contain the transactions necessary to reconstruct the\r\n+    // compact block.\r\n+    if (m_ignore_incoming_txs) return;\r\n+\r\n     CNodeState* nodestate = State(nodeid);\r\n     if (!nodestate || !nodestate->fSupportsDesiredCmpctVersion) {\r\n         // Never ask from peers who can't provide witnesses.\r\n@@ -859,12 +865,10 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\r\n                 lNodesAnnouncingHeaderAndIDs.pop_front();\r\n             }\r\n \r\n-            if (!m_ignore_incoming_txs) {\r\n-                m_connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\r\n-                // save BIP152 bandwidth state: we select peer to be high-bandwidth\r\n-                pfrom->m_bip152_highbandwidth_to = true;\r\n-                lNodesAnnouncingHeaderAndIDs.push_back(pfrom->GetId());\r\n-            }\r\n+            m_connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\r\n+            // save BIP152 bandwidth state: we select peer to be high-bandwidth\r\n+            pfrom->m_bip152_highbandwidth_to = true;\r\n+            lNodesAnnouncingHeaderAndIDs.push_back(pfrom->GetId());\r\n             return true;\r\n         });\r\n     }\r\n```",
      "commit_id" : "e5993385d554655e4faf094826546b4f0d71dc8b",
      "created_at" : "2021-07-02T09:23:50Z",
      "diff_hunk" : "@@ -857,10 +858,13 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n                 });\n                 lNodesAnnouncingHeaderAndIDs.pop_front();\n             }\n-            m_connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\n-            // save BIP152 bandwidth state: we select peer to be high-bandwidth\n-            pfrom->m_bip152_highbandwidth_to = true;\n-            lNodesAnnouncingHeaderAndIDs.push_back(pfrom->GetId());\n+\n+            if (!m_ignore_incoming_txs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r662872834",
      "id" : 662872834,
      "line" : 862,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mjg3MjgzNA==",
      "original_commit_id" : "e5993385d554655e4faf094826546b4f0d71dc8b",
      "original_line" : 862,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 17,
      "pull_request_review_id" : 697997837,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-02T09:27:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662872834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r662873537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662873537"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can I convince you to make this conditional a bit more readable:\r\n\r\n```diff\r\n-                    if (!m_ignore_incoming_txs && nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\r\n+                    if (!m_ignore_incoming_txs\r\n+                        && nodestate->fSupportsDesiredCmpctVersion\r\n+                        && vGetData.size() == 1\r\n+                        && mapBlocksInFlight.size() == 1\r\n+                        && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\r\n```",
      "commit_id" : "e5993385d554655e4faf094826546b4f0d71dc8b",
      "created_at" : "2021-07-02T09:25:05Z",
      "diff_hunk" : "@@ -2100,7 +2104,7 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n                             pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n                 }\n                 if (vGetData.size() > 0) {\n-                    if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n+                    if (!m_ignore_incoming_txs && nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r662873537",
      "id" : 662873537,
      "line" : 2107,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mjg3MzUzNw==",
      "original_commit_id" : "e5993385d554655e4faf094826546b4f0d71dc8b",
      "original_line" : 2107,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 31,
      "pull_request_review_id" : 697997837,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-02T09:27:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662873537",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 6dfee13f650521f7542df0926aff01af9ac6a328",
      "created_at" : "2021-07-02T12:58:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-872977968",
      "id" : 872977968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3Mjk3Nzk2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-02T12:58:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872977968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is this true for transactions received via `sendrawtransaction`? What if some node, for whatever reason, receives all transactions, while having blocks-only mode?  For them, compact blocks are going to be beneficial, but this PR will disable it?",
      "created_at" : "2021-07-07T11:57:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-875542706",
      "id" : 875542706,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NTU0MjcwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-07T11:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875542706",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">  For them, compact blocks are going to be beneficial, but this PR will disable it?\r\n\r\n@naumenkogs yes this PR would disable compact blocks even if txs were received through `sendrawtransaction` and i think overall that's ok since that seems like an edge case to me. I would presume most blocks-only nodes don't submit enough txs through `sendrawtransaction` for this to matter, especially not continuously so that most blocks contain many of those txs. Or if a node is broadcasting that many txs it might not care about the additional bandwidth?\r\n\r\n[1] Technically it would be possible for a blocks-only node to ask for compact blocks if its mempool size (significantly) exceeds the overhead of compact blocks.\r\n[2] A config option enabling compact blocks for those individual blocks-only nodes that heavily use  `sendrawtransaction` could also help.\r\n\r\nDo you think adding [1] or [2] to this PR would be worth it?",
      "created_at" : "2021-07-08T18:14:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-876644398",
      "id" : 876644398,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NjY0NDM5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-08T18:14:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876644398",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think [2] is better than [1].\r\n\r\nWhether we want to add a new config option for this use case or just implement what you suggested originally âÂ my personal choice would be to ask for thoughts at the #bitcoin-core-dev meeting.",
      "created_at" : "2021-07-09T05:46:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-876930777",
      "id" : 876930777,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NjkzMDc3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-09T05:46:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876930777",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> yes this PR would disable compact blocks even if txs were received through sendrawtransaction and i think overall that's ok since that seems like an edge case to me.\r\n\r\nI agree that this seems like an edge case that wouldn't actually be used. Compact blocks exist to improve propagation speed/efficiency when a node is participating in tx relay. I'd prefer not to add a configuration option that we don't expect to be used, or to increase the complexity of this PR.",
      "created_at" : "2021-07-09T08:36:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-877017862",
      "id" : 877017862,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NzAxNzg2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-09T08:36:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/877017862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">I agree that this seems like an edge case that wouldn't actually be used. Compact blocks exist to improve propagation speed/efficiency when a node is participating in tx relay. I'd prefer not to add a configuration option that we don't expect to be used, or to increase the complexity of this PR.\r\n\r\nTo be clear, my worry is that some miners use the following setting:\r\n`A node in blocks-only mode with low-latency requirements (hence mining) is constantly fed with transactions via sendrawtransaction`, for whatever reason (e.g., they consider p2p tx relay insecure and disable it).\r\n\r\nI don't have any evidence of someone using this, just wanted to point out we are going to break this use case here, so I thought asking around makes sense.",
      "created_at" : "2021-07-09T08:55:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-877030117",
      "id" : 877030117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NzAzMDExNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-09T08:55:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/877030117",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs That seems very unlikely to me.",
      "created_at" : "2021-07-19T15:59:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-882665490",
      "id" : 882665490,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "IC_kwDOABII5840nGgS",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-19T15:59:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/882665490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#20799](https://github.com/bitcoin/bitcoin/pull/20799) (net processing: Only support version 2 compact blocks by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-07-23T01:16:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-885337899",
      "id" : 885337899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "IC_kwDOABII5840xS8r",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-03T22:14:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/885337899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r682637215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/682637215"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe its better to add here that we are also not sending getdata(CMPCT) in case of block-only? \r\n\r\nMy initial confusion was what about the low-band with case, and I missed the getdata(CMPCT) part in the code. \r\n\r\nIt would help clarify the doc a little better.    ",
      "commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "created_at" : "2021-08-04T13:52:15Z",
      "diff_hunk" : "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n {\n     AssertLockHeld(cs_main);\n+\n+    // Never request high-bandwidth mode from peers if we're blocks-only. Our\n+    // mempool will not contain the transactions necessary to reconstruct the\n+    // compact block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r682637215",
      "id" : 682637215,
      "line" : 837,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MjYzNzIxNQ==",
      "original_commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "original_line" : 837,
      "original_position" : 7,
      "original_start_line" : 835,
      "path" : "src/net_processing.cpp",
      "position" : 7,
      "pull_request_review_id" : 722311718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : 835,
      "start_side" : "RIGHT",
      "updated_at" : "2021-08-04T18:07:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/682637215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/36541669?v=4",
         "events_url" : "https://api.github.com/users/rajarshimaitra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rajarshimaitra/followers",
         "following_url" : "https://api.github.com/users/rajarshimaitra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rajarshimaitra",
         "id" : 36541669,
         "login" : "rajarshimaitra",
         "node_id" : "MDQ6VXNlcjM2NTQxNjY5",
         "organizations_url" : "https://api.github.com/users/rajarshimaitra/orgs",
         "received_events_url" : "https://api.github.com/users/rajarshimaitra/received_events",
         "repos_url" : "https://api.github.com/users/rajarshimaitra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rajarshimaitra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rajarshimaitra"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-08-04T14:23:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-892702469",
      "id" : 892702469,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "IC_kwDOABII5841NY8F",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-04T14:23:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892702469",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r682694454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/682694454"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is there any reason why we use `MaybeSetPeerAsAnnouncingHeaderAndIDs` instead of `MaybeSetPeerAsAnncouncingCompactBlocks`? Are they different things?",
      "commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "created_at" : "2021-08-04T14:54:01Z",
      "diff_hunk" : "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r682694454",
      "id" : 682694454,
      "line" : 831,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MjY5NDQ1NA==",
      "original_commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "original_line" : 831,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 1,
      "pull_request_review_id" : 722311718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-04T18:07:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/682694454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/36541669?v=4",
         "events_url" : "https://api.github.com/users/rajarshimaitra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rajarshimaitra/followers",
         "following_url" : "https://api.github.com/users/rajarshimaitra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rajarshimaitra",
         "id" : 36541669,
         "login" : "rajarshimaitra",
         "node_id" : "MDQ6VXNlcjM2NTQxNjY5",
         "organizations_url" : "https://api.github.com/users/rajarshimaitra/orgs",
         "received_events_url" : "https://api.github.com/users/rajarshimaitra/received_events",
         "repos_url" : "https://api.github.com/users/rajarshimaitra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rajarshimaitra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rajarshimaitra"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK.\r\n\r\nPerhaps a new test case in `p2p_compactblocks.py` or `p2p_compactblocks_hb.py` might be a good addition here, or in a follow-up? This changes behaviour but doesn't fail any tests.",
      "created_at" : "2021-08-04T16:39:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-892806688",
      "id" : 892806688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "IC_kwDOABII5841NyYg",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-04T16:39:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892806688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK 6dfee13f650521f7542df0926aff01af9ac6a328\r\nbut (as others have said) a test would be nice",
      "created_at" : "2021-08-04T18:06:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-892863104",
      "id" : 892863104,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "IC_kwDOABII5841OAKA",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-04T18:06:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892863104",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r683306717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683306717"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This isn't the right place for that documentation. This function is for sending `sendcmpct(hb=true)` to the three peers that sent us blocks most recently.",
      "commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "created_at" : "2021-08-05T09:53:20Z",
      "diff_hunk" : "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n {\n     AssertLockHeld(cs_main);\n+\n+    // Never request high-bandwidth mode from peers if we're blocks-only. Our\n+    // mempool will not contain the transactions necessary to reconstruct the\n+    // compact block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r683306717",
      "id" : 683306717,
      "in_reply_to_id" : 682637215,
      "line" : 837,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MzMwNjcxNw==",
      "original_commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "original_line" : 837,
      "original_position" : 7,
      "original_start_line" : 835,
      "path" : "src/net_processing.cpp",
      "position" : 7,
      "pull_request_review_id" : 723160728,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : 835,
      "start_side" : "RIGHT",
      "updated_at" : "2021-08-05T09:53:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683306717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684200376"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684200376"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In [BIP 152](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki#headerandshortids) the structure that is used for the `cmcptblock` message is called `HeaderAndShortIDs`.\r\nI am assuming that this were the name came from. The function was introduced in the initial compact block PR: https://github.com/bitcoin/bitcoin/pull/8068",
      "commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "created_at" : "2021-08-06T12:36:01Z",
      "diff_hunk" : "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684200376",
      "id" : 684200376,
      "in_reply_to_id" : 682694454,
      "line" : 831,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NDIwMDM3Ng==",
      "original_commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "original_line" : 831,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 1,
      "pull_request_review_id" : 724310624,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-06T12:36:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684200376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684369129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684369129"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @jnewbery, that makes sense.",
      "commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "created_at" : "2021-08-06T16:42:40Z",
      "diff_hunk" : "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n {\n     AssertLockHeld(cs_main);\n+\n+    // Never request high-bandwidth mode from peers if we're blocks-only. Our\n+    // mempool will not contain the transactions necessary to reconstruct the\n+    // compact block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684369129",
      "id" : 684369129,
      "in_reply_to_id" : 682637215,
      "line" : 837,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NDM2OTEyOQ==",
      "original_commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "original_line" : 837,
      "original_position" : 7,
      "original_start_line" : 835,
      "path" : "src/net_processing.cpp",
      "position" : 7,
      "pull_request_review_id" : 724536328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : 835,
      "start_side" : "RIGHT",
      "updated_at" : "2021-08-06T16:42:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684369129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/36541669?v=4",
         "events_url" : "https://api.github.com/users/rajarshimaitra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rajarshimaitra/followers",
         "following_url" : "https://api.github.com/users/rajarshimaitra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rajarshimaitra",
         "id" : 36541669,
         "login" : "rajarshimaitra",
         "node_id" : "MDQ6VXNlcjM2NTQxNjY5",
         "organizations_url" : "https://api.github.com/users/rajarshimaitra/orgs",
         "received_events_url" : "https://api.github.com/users/rajarshimaitra/received_events",
         "repos_url" : "https://api.github.com/users/rajarshimaitra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rajarshimaitra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rajarshimaitra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684371206"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684371206"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, I guess it comes from there. Still a little hard to guess, as the name seems quite generic (Headers and IDs). It also doesn't have any doc comment above it indicate it's related to compact blocks. Could help with some pointers.  ",
      "commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "created_at" : "2021-08-06T16:46:10Z",
      "diff_hunk" : "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684371206",
      "id" : 684371206,
      "in_reply_to_id" : 682694454,
      "line" : 831,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NDM3MTIwNg==",
      "original_commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "original_line" : 831,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 1,
      "pull_request_review_id" : 724539068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-06T16:46:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684371206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/36541669?v=4",
         "events_url" : "https://api.github.com/users/rajarshimaitra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rajarshimaitra/followers",
         "following_url" : "https://api.github.com/users/rajarshimaitra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rajarshimaitra",
         "id" : 36541669,
         "login" : "rajarshimaitra",
         "node_id" : "MDQ6VXNlcjM2NTQxNjY5",
         "organizations_url" : "https://api.github.com/users/rajarshimaitra/orgs",
         "received_events_url" : "https://api.github.com/users/rajarshimaitra/received_events",
         "repos_url" : "https://api.github.com/users/rajarshimaitra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rajarshimaitra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rajarshimaitra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684419963"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684419963"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree that headers-and-ids is not very helpful here (and in a few other places in the code). Maybe it could be updated in a different PR.",
      "commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "created_at" : "2021-08-06T18:12:40Z",
      "diff_hunk" : "@@ -831,6 +831,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r684419963",
      "id" : 684419963,
      "in_reply_to_id" : 682694454,
      "line" : 831,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NDQxOTk2Mw==",
      "original_commit_id" : "6dfee13f650521f7542df0926aff01af9ac6a328",
      "original_line" : 831,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 1,
      "pull_request_review_id" : 724602472,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-06T18:12:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/684419963",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685218980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685218980"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you use the cached chain, all the nodes will already be out of IBD:\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_compactblocks_blocksonly.py b/test/functional/p2p_compactblocks_blocksonly.py\r\nindex b97fdfdb14..bf486d8eda 100755\r\n--- a/test/functional/p2p_compactblocks_blocksonly.py\r\n+++ b/test/functional/p2p_compactblocks_blocksonly.py\r\n@@ -25,7 +25,6 @@ from test_framework.messages import (\r\n \r\n class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n-        self.setup_clean_chain = True\r\n         self.num_nodes = 3\r\n         self.extra_args = [[\"-blocksonly\"], [], []]\r\n \r\n@@ -41,15 +40,9 @@ class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n         return block\r\n \r\n     def run_test(self):\r\n-        self.connect_nodes(0, 2)\r\n-        self.connect_nodes(1, 2)\r\n-\r\n-        # Generate some blocks so all nodes are out of IBD.\r\n-        self.nodes[2].generate(10)\r\n-        self.sync_blocks()\r\n-\r\n-        self.disconnect_nodes(0, 2)\r\n-        self.disconnect_nodes(1, 2)\r\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\r\n+        for i in range(3):\r\n+            assert not self.nodes[i].getblockchaininfo()['initialblockdownload']\r\n \r\n         p2p_conn_node0 = self.nodes[0].add_p2p_connection(P2PInterface())\r\n         p2p_conn_node1 = self.nodes[1].add_p2p_connection(P2PInterface())\r\n\r\n```",
      "commit_id" : "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "created_at" : "2021-08-09T13:59:46Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test p2p blocksonly mode & compact block relay\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.p2p import P2PInterface\n+from test_framework.util import assert_equal\n+from test_framework.blocktools import (\n+    NORMAL_GBT_REQUEST_PARAMS,\n+    add_witness_commitment,\n+    create_block,\n+)\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    MSG_CMPCT_BLOCK,\n+    CInv,\n+    CBlockHeader,\n+    msg_block,\n+    msg_sendcmpct,\n+    msg_headers,\n+)\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[\"-blocksonly\"], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        block = create_block(tmpl=self.nodes[2].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS))\n+        add_witness_commitment(block)\n+        block.solve()\n+        self.nodes[2].submitblock(block.serialize().hex())\n+        return block\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 2)\n+        self.connect_nodes(1, 2)\n+\n+        # Generate some blocks so all nodes are out of IBD.\n+        self.nodes[2].generate(10)\n+        self.sync_blocks()\n+\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685218980",
      "id" : 685218980,
      "line" : 52,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTIxODk4MA==",
      "original_commit_id" : "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "original_line" : 52,
      "original_position" : 52,
      "original_start_line" : 44,
      "path" : "test/functional/p2p_compactblocks_blocksonly.py",
      "position" : 52,
      "pull_request_review_id" : 725414813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : 44,
      "start_side" : "RIGHT",
      "updated_at" : "2021-08-09T15:53:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685218980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685306116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685306116"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Alternatively, just generate the block on the node:\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_compactblocks_blocksonly.py b/test/functional/p2p_compactblocks_blocksonly.py\r\nindex b97fdfdb14..b55dddc01a 100755\r\n--- a/test/functional/p2p_compactblocks_blocksonly.py\r\n+++ b/test/functional/p2p_compactblocks_blocksonly.py\r\n@@ -7,17 +7,14 @@\r\n from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.p2p import P2PInterface\r\n from test_framework.util import assert_equal\r\n-from test_framework.blocktools import (\r\n-    NORMAL_GBT_REQUEST_PARAMS,\r\n-    add_witness_commitment,\r\n-    create_block,\r\n-)\r\n from test_framework.messages import (\r\n     MSG_BLOCK,\r\n     MSG_WITNESS_FLAG,\r\n     MSG_CMPCT_BLOCK,\r\n+    CBlock,\r\n     CInv,\r\n     CBlockHeader,\r\n+    from_hex,\r\n     msg_block,\r\n     msg_sendcmpct,\r\n     msg_headers,\r\n@@ -34,10 +31,10 @@ class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n         self.sync_all()\r\n \r\n     def build_block_on_tip(self):\r\n-        block = create_block(tmpl=self.nodes[2].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS))\r\n-        add_witness_commitment(block)\r\n-        block.solve()\r\n-        self.nodes[2].submitblock(block.serialize().hex())\r\n+        blockhash = self.nodes[2].generate(1)[0]\r\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\r\n+        block = from_hex(CBlock(), block_hex)\r\n+        block.rehash()\r\n         return block\r\n \r\n     def run_test(self):\r\n```",
      "commit_id" : "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "created_at" : "2021-08-09T15:39:45Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test p2p blocksonly mode & compact block relay\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.p2p import P2PInterface\n+from test_framework.util import assert_equal\n+from test_framework.blocktools import (\n+    NORMAL_GBT_REQUEST_PARAMS,\n+    add_witness_commitment,\n+    create_block,\n+)\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    MSG_CMPCT_BLOCK,\n+    CInv,\n+    CBlockHeader,\n+    msg_block,\n+    msg_sendcmpct,\n+    msg_headers,\n+)\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[\"-blocksonly\"], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685306116",
      "id" : 685306116,
      "line" : 36,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTMwNjExNg==",
      "original_commit_id" : "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "test/functional/p2p_compactblocks_blocksonly.py",
      "position" : 36,
      "pull_request_review_id" : 725414813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-09T15:53:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685306116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685306379"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685306379"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please sort imports :slightly_smiling_face: ",
      "commit_id" : "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "created_at" : "2021-08-09T15:40:02Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test p2p blocksonly mode & compact block relay\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685306379",
      "id" : 685306379,
      "line" : 7,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTMwNjM3OQ==",
      "original_commit_id" : "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "original_line" : 7,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "test/functional/p2p_compactblocks_blocksonly.py",
      "position" : 7,
      "pull_request_review_id" : 725414813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-09T15:53:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685306379",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685312787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685312787"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This assumes that the node will send `sendcmpct` synchronously and before responding to the `ping` above. That's true right now, since `MaybeSetPeerAsAnnouncingHeaderAndIDs` is called in the synchronous `BlockChecked()` validation interface callback, but that may change in the future. (I'd like to change this to remove the synchronous `BlockChecked` callback).\r\n\r\nA less racy way to do this would be to use `wait_until()` so that the test doesn't immediately fail if the `sendcmpct` message isn't received before the `pong`.",
      "commit_id" : "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "created_at" : "2021-08-09T15:47:41Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test p2p blocksonly mode & compact block relay\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.p2p import P2PInterface\n+from test_framework.util import assert_equal\n+from test_framework.blocktools import (\n+    NORMAL_GBT_REQUEST_PARAMS,\n+    add_witness_commitment,\n+    create_block,\n+)\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    MSG_CMPCT_BLOCK,\n+    CInv,\n+    CBlockHeader,\n+    msg_block,\n+    msg_sendcmpct,\n+    msg_headers,\n+)\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[\"-blocksonly\"], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        block = create_block(tmpl=self.nodes[2].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS))\n+        add_witness_commitment(block)\n+        block.solve()\n+        self.nodes[2].submitblock(block.serialize().hex())\n+        return block\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 2)\n+        self.connect_nodes(1, 2)\n+\n+        # Generate some blocks so all nodes are out of IBD.\n+        self.nodes[2].generate(10)\n+        self.sync_blocks()\n+\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+\n+        p2p_conn_node0 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_node1 = self.nodes[1].add_p2p_connection(P2PInterface())\n+        assert_equal(p2p_conn_node0.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_node1.message_count['sendcmpct'], 2)\n+        p2p_conn_node0.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_node1.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Topology:\n+        #   p2p_conn_node0 ---> node0         node1 <--- p2p_conn_node1\n+        #                              node2\n+        #\n+        # node2 produces blocks which get passed to node0 and node1\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Part 1: Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_node0.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        assert_equal(p2p_conn_node0.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_node0.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_node1.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        assert_equal(p2p_conn_node1.message_count['sendcmpct'], 3)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685312787",
      "id" : 685312787,
      "line" : 83,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTMxMjc4Nw==",
      "original_commit_id" : "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "original_line" : 83,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "test/functional/p2p_compactblocks_blocksonly.py",
      "position" : 83,
      "pull_request_review_id" : 725414813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-09T15:53:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685312787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685317001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685317001"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need for \"Part 1\" or \"Part 2\" in these logs (tests have a habit of being rearranged, so these logs will fall out of date)",
      "commit_id" : "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "created_at" : "2021-08-09T15:52:39Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test p2p blocksonly mode & compact block relay\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.p2p import P2PInterface\n+from test_framework.util import assert_equal\n+from test_framework.blocktools import (\n+    NORMAL_GBT_REQUEST_PARAMS,\n+    add_witness_commitment,\n+    create_block,\n+)\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    MSG_CMPCT_BLOCK,\n+    CInv,\n+    CBlockHeader,\n+    msg_block,\n+    msg_sendcmpct,\n+    msg_headers,\n+)\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[\"-blocksonly\"], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        block = create_block(tmpl=self.nodes[2].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS))\n+        add_witness_commitment(block)\n+        block.solve()\n+        self.nodes[2].submitblock(block.serialize().hex())\n+        return block\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 2)\n+        self.connect_nodes(1, 2)\n+\n+        # Generate some blocks so all nodes are out of IBD.\n+        self.nodes[2].generate(10)\n+        self.sync_blocks()\n+\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+\n+        p2p_conn_node0 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_node1 = self.nodes[1].add_p2p_connection(P2PInterface())\n+        assert_equal(p2p_conn_node0.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_node1.message_count['sendcmpct'], 2)\n+        p2p_conn_node0.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_node1.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Topology:\n+        #   p2p_conn_node0 ---> node0         node1 <--- p2p_conn_node1\n+        #                              node2\n+        #\n+        # node2 produces blocks which get passed to node0 and node1\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Part 1: Test that blocksonly nodes do not request high bandwidth mode.\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r685317001",
      "id" : 685317001,
      "line" : 68,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTMxNzAwMQ==",
      "original_commit_id" : "217a80d9157f7d8b14351ed5bf529f9959f11110",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "test/functional/p2p_compactblocks_blocksonly.py",
      "position" : 68,
      "pull_request_review_id" : 725414813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-09T15:53:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685317001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the review @jnewbery! I took all your suggestions.\r\n\r\nI also added two new test cases:\r\nOne to test that on regular low bandwidth connections (no blocksonly nodes involved) `getdata(CMPCT)` is still sent. 8b1b308555382ea1b7390615371ecaa066c4af3b\r\nAnd one to test that blocksonly nodes still serve compact blocks in hb and lb mode. 8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "created_at" : "2021-08-09T20:45:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-895531146",
      "id" : 895531146,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "IC_kwDOABII5841YLiK",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-09T20:45:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/895531146",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686056461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686056461"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        # node2 produces blocks which get passed to the rest of the nodes\r\n```",
      "commit_id" : "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "created_at" : "2021-08-10T14:09:03Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for i in range(3):\n+            assert not self.nodes[i].getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        assert_equal(p2p_conn_blocksonly.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_high_bw.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_low_bw.message_count['sendcmpct'], 2)\n+        p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_high_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_low_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the reset of the nodes",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686056461",
      "id" : 686056461,
      "line" : 68,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjA1NjQ2MQ==",
      "original_commit_id" : "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "test/functional/p2p_compactblocks_blocksonly.py",
      "position" : 68,
      "pull_request_review_id" : 726487585,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-10T14:55:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686056461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686065386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686065386"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be 4 now that there are 4 nodes? Or maybe even better:\r\n\r\n```suggestion\r\n        for node in self.nodes:\r\n            assert not node.getblockchaininfo()['initialblockdownload']\r\n```",
      "commit_id" : "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "created_at" : "2021-08-10T14:18:39Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for i in range(3):\n+            assert not self.nodes[i].getblockchaininfo()['initialblockdownload']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686065386",
      "id" : 686065386,
      "line" : 44,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjA2NTM4Ng==",
      "original_commit_id" : "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "original_line" : 44,
      "original_position" : 44,
      "original_start_line" : 43,
      "path" : "test/functional/p2p_compactblocks_blocksonly.py",
      "position" : 44,
      "pull_request_review_id" : 726487585,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : 43,
      "start_side" : "RIGHT",
      "updated_at" : "2021-08-10T14:55:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686065386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686094198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686094198"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\r\n            assert_equal(conn.message_count['sendcmpct'], 2)\r\n            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\r\n```",
      "commit_id" : "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "created_at" : "2021-08-10T14:49:12Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for i in range(3):\n+            assert not self.nodes[i].getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        assert_equal(p2p_conn_blocksonly.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_high_bw.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_low_bw.message_count['sendcmpct'], 2)\n+        p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_high_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_low_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686094198",
      "id" : 686094198,
      "line" : 54,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjA5NDE5OA==",
      "original_commit_id" : "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : 49,
      "path" : "test/functional/p2p_compactblocks_blocksonly.py",
      "position" : 54,
      "pull_request_review_id" : 726487585,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : 49,
      "start_side" : "RIGHT",
      "updated_at" : "2021-08-10T14:55:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686094198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686097074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686097074"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you separate the test for existence of the `cmpctblock` message from the test of its hash, you don't need the `sync_send_with_ping()` call:\r\n\r\n```suggestion\r\n                if 'cmpctblock' not in p2p_conn_blocksonly.last_message:\r\n                    return False\r\n                sha256 = p2p_conn_blocksonly.last_message['cmpctblock'].header_and_shortids.header.rehash()\r\n```\r\n\r\nI'd also suggest using a lambda so that you don't need to have a named function returning the inner function, and also parametrizing the connection. Full diff:\r\n\r\n```diff\r\n         self.log.info(\"Test that blocksonly nodes still serve compact blocks.\")\r\n \r\n-        def test_for_cmpctblock(block):\r\n-            def test():\r\n-                sha256 = p2p_conn_blocksonly.last_message['cmpctblock'].header_and_shortids.header.rehash()\r\n-                return sha256 == block.sha256\r\n-            return test\r\n+        def test_for_cmpctblock(conn, block):\r\n+            if 'cmpctblock' not in conn.last_message:\r\n+                return False\r\n+            return conn.last_message['cmpctblock'].header_and_shortids.header.rehash() == block.sha256\r\n \r\n         p2p_conn_blocksonly.send_message(msg_getdata([CInv(MSG_CMPCT_BLOCK, block0.sha256)]))\r\n-        p2p_conn_blocksonly.sync_send_with_ping()\r\n-        p2p_conn_blocksonly.wait_until(test_for_cmpctblock(block0))\r\n+        p2p_conn_blocksonly.wait_until(lambda: test_for_cmpctblock(p2p_conn_blocksonly, block0))\r\n \r\n         # Request high bandwidth mode from node0\r\n         p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=True, version=2))\r\n@@ -127,7 +123,7 @@ class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\r\n         block2 = self.build_block_on_tip()\r\n         self.nodes[0].submitblock(block1.serialize().hex())\r\n         self.nodes[0].submitblock(block2.serialize().hex())\r\n-        p2p_conn_blocksonly.wait_until(test_for_cmpctblock(block2))\r\n+        p2p_conn_blocksonly.wait_until(lambda: test_for_cmpctblock(p2p_conn_blocksonly, block2))\r\n```",
      "commit_id" : "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "created_at" : "2021-08-10T14:52:14Z",
      "diff_hunk" : "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_getdata,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for i in range(3):\n+            assert not self.nodes[i].getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        assert_equal(p2p_conn_blocksonly.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_high_bw.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_low_bw.message_count['sendcmpct'], 2)\n+        p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_high_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        p2p_conn_low_bw.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #   3 -> low bandwidth\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks which get passed to the reset of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that blocksonly nodes do not request high bandwidth mode.\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A blocksonly node should not request high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\n+        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request high\n+        # bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_high_bw.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n+        assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n+\n+        # Don't send a block from the p2p_conn_low_bw so the bitcoind node\n+        # doesn't select it for high bw relay.\n+        self.nodes[3].submitblock(block0.serialize().hex())\n+\n+        self.log.info(\"Test that blocksonly nodes send getdata(BLOCK) instead\"\n+                      \"of getdata(CMPCT) in low bandwidth mode.\")\n+\n+        block1 = self.build_block_on_tip()\n+\n+        p2p_conn_blocksonly.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_blocksonly.sync_send_with_ping()\n+        assert_equal(p2p_conn_blocksonly.last_message['getdata'].inv, [CInv(MSG_BLOCK | MSG_WITNESS_FLAG, block1.sha256)])\n+\n+        p2p_conn_high_bw.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_high_bw.sync_send_with_ping()\n+        assert_equal(p2p_conn_high_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n+\n+        self.log.info(\"Test that getdata(CMPCT) is still sent on regular low bandwdith connections.\")\n+\n+        p2p_conn_low_bw.send_and_ping(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_low_bw.sync_with_ping()\n+        assert_equal(p2p_conn_low_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n+\n+        self.log.info(\"Test that blocksonly nodes still serve compact blocks.\")\n+\n+        def test_for_cmpctblock(block):\n+            def test():\n+                sha256 = p2p_conn_blocksonly.last_message['cmpctblock'].header_and_shortids.header.rehash()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#discussion_r686097074",
      "id" : 686097074,
      "line" : 116,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjA5NzA3NA==",
      "original_commit_id" : "8c4159aeccdad58a71ff61b3e21b26a4f24a6029",
      "original_line" : 116,
      "original_position" : 116,
      "original_start_line" : null,
      "path" : "test/functional/p2p_compactblocks_blocksonly.py",
      "position" : 116,
      "pull_request_review_id" : 726487585,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22340",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-10T14:55:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686097074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Started looking at this PR.  Rebased to current master, debug build is clean, but the new test times out for me locally on every run (out of five).\r\n\r\n<details><summary>test output</summary><p>\r\n\r\n```\r\n$ test/functional/p2p_compactblocks_blocksonly.py \r\n2021-08-10T15:36:10.388000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_ypwy_8d2\r\n2021-08-10T15:36:11.582000Z TestFramework (INFO): Test that blocksonly nodes do not request high bandwidth mode.\r\n2021-08-10T15:37:11.677000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: ''''\r\n        def test_function():\r\n            if check_connected:\r\n                assert self.is_connected\r\n            return test_function_in()\r\n'''\r\n2021-08-10T15:37:11.677000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 131, in main\r\n    self.run_test()\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/p2p_compactblocks_blocksonly.py\", line 79, in run_test\r\n    p2p_conn_blocksonly.wait_until(lambda: p2p_conn_blocksonly.message_count['sendcmpct'] == 2)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/p2p.py\", line 451, in wait_until\r\n    wait_until_helper(test_function, timeout=timeout, lock=p2p_lock, timeout_factor=self.timeout_factor)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/util.py\", line 256, in wait_until_helper\r\n    raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\nAssertionError: Predicate ''''\r\n        def test_function():\r\n            if check_connected:\r\n                assert self.is_connected\r\n            return test_function_in()\r\n''' not true after 60.0 seconds\r\n2021-08-10T15:37:11.729000Z TestFramework (INFO): Stopping nodes\r\n2021-08-10T15:37:11.891000Z TestFramework (WARNING): Not cleaning up dir /tmp/bitcoin_func_test_ypwy_8d2\r\n2021-08-10T15:37:11.892000Z TestFramework (ERROR): Test failed. Test logging available at /tmp/bitcoin_func_test_ypwy_8d2/test_framework.log\r\n2021-08-10T15:37:11.894000Z TestFramework (ERROR): \r\n2021-08-10T15:37:11.896000Z TestFramework (ERROR): Hint: Call /home/jon/projects/bitcoin/bitcoin/test/functional/combine_logs.py '/tmp/bitcoin_func_test_ypwy_8d2' to consolidate all logs\r\n2021-08-10T15:37:11.896000Z TestFramework (ERROR): \r\n2021-08-10T15:37:11.897000Z TestFramework (ERROR): If this failure happened unexpectedly or intermittently, please file a bug and provide a link or upload of the combined log.\r\n2021-08-10T15:37:11.897000Z TestFramework (ERROR): https://github.com/bitcoin/bitcoin/issues\r\n2021-08-10T15:37:11.897000Z TestFramework (ERROR): \r\n```\r\n</p></details>\r\n",
      "created_at" : "2021-08-10T17:13:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22340#issuecomment-896164568",
      "id" : 896164568,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22340",
      "node_id" : "IC_kwDOABII5841amLY",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-10T17:13:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896164568",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
