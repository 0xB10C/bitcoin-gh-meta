[
   {
      "author_association" : "MEMBER",
      "body" : "Forgot to flag this: there is one mainnet block that violated P2SH, and one testnet block as well.  For now I carved out both, but perhaps we could consider migration to a new testnet (4?) instead and drop the testnet exception?  Seems like it might be cleaner to have a new testnet that always has P2SH and segwit from genesis....  Does anyone think this would be worth proposing?",
      "created_at" : "2017-11-20T20:36:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-345823546",
      "id" : 345823546,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11739",
      "updated_at" : "2017-11-20T20:36:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345823546",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11739#discussion_r152248328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11739"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152248328"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixup nit: in commit 3a76e3c962516cdf7d577aa3dcbe0251b94e5355: You probably meant to use ```if (fStrictPayToScriptHash) { flags |= SCRIPT_VERIFY_P2SH; }```, as BIP16Height was removed and thus fails to compile.",
      "commit_id" : "199573e9927b2806ff0850a685e5ad354247f88e",
      "created_at" : "2017-11-21T11:31:09Z",
      "diff_hunk" : "@@ -1611,7 +1611,18 @@ static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consensus::Params& consensusparams) {\n     AssertLockHeld(cs_main);\n \n-    unsigned int flags = SCRIPT_VERIFY_NONE;\n+\n+    // BIP16 didn't become active until Apr 1 2012\n+    // However, only one historical block violated the P2SH rules, so for simplicity, always leave P2SH\n+    // on except for the one violating block.\n+    bool fStrictPayToScriptHash = true;\n+\n+    if (pindex->phashBlock != nullptr && (*(pindex->phashBlock) == uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\") ||\n+                (*(pindex->phashBlock) == uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\")))) { // testnet block!\n+        fStrictPayToScriptHash = false;\n+    }\n+\n+    unsigned int flags = fStrictPayToScriptHash ? SCRIPT_VERIFY_P2SH : SCRIPT_VERIFY_NONE;\n \n     // Start enforcing P2SH (BIP16)\n     if (pindex->nHeight >= consensusparams.BIP16Height) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11739#discussion_r152248328",
      "id" : 152248328,
      "original_commit_id" : "3a76e3c962516cdf7d577aa3dcbe0251b94e5355",
      "original_position" : 19,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 78079355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11739",
      "updated_at" : "2017-11-21T11:31:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152248328",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. At a code level not so interesting, I suppose (except for maybe the P2SH backdating), but it's generally a nice property for us to, over time, enforce soft forks like SegWit universally.\n\nOn November 20, 2017 12:32:05 PM PST, Suhas Daftuar <notifications@github.com> wrote:\n>As discussed at the IRC meeting back in October\n>(https://botbot.me/freenode/bitcoin-core-dev/2017-10-12/?msg=92231929&page=2),\n>I had looked into the feasibility of enforcing P2SH and\n>SCRIPT_VERIFY_WITNESS back to the genesis block.\n>\n>The P2SH change is pretty straightforward -- there was only one\n>historical block on mainnet that violated the rule, so I carved out an\n>exception to it, similar to the way we have exceptions for the BIP30\n>violators.\n>\n>The segwit change is not entirely as clear.  The code changes\n>themselves are relatively straightforward: we can just always turn on\n>SCRIPT_VERIFY_WITNESS whenever P2SH is active.  However conceptually,\n>this amounts to splitting up BIP141 into two parts, the part that\n>implements new script rules, and the part that handles witness\n>commitments in blocks.  \n>\n>Arguably though the script rules are really defined in BIP 143 anyway,\n>and so this really amounts to backdating BIP 143 -- script rules for v0\n>segwit outputs -- back to genesis.  So maybe conceptually this isn't so\n>bad...\n>\n>I don't feel strongly about this change in either direction; I started\n>working on it because I was searching for a way to simplify the way we\n>understand and implement the consensus rules around segwit, but I'm not\n>yet sure whether I think this achieves anything toward that goal.\n>\n>ping @TheBlueMatt \n>You can view, comment on, or merge this pull request online at:\n>\n>  https://github.com/bitcoin/bitcoin/pull/11739\n>\n>-- Commit Summary --\n>\n>  * Use P2SH consensus rules for all blocks\n>  * Separate NULLDUMMY enforcement from SEGWIT enforcement\n>  * Always enforce SCRIPT_VERIFY_WITNESS with P2SH\n>  * [qa] Remove some pre-activation segwit tests\n> * scripted-diff: rename IsWitnessEnabled -> IsWitnessCommitmentEnabled\n>\n>-- File Changes --\n>\n>    M src/chainparams.cpp (3)\n>    M src/consensus/params.h (2)\n>    M src/miner.cpp (2)\n>    M src/net_processing.cpp (8)\n>    M src/validation.cpp (49)\n>    M src/validation.h (5)\n>    M src/wallet/rpcwallet.cpp (2)\n>    M test/functional/p2p-segwit.py (2)\n>    M test/functional/segwit.py (8)\n>\n>-- Patch Links --\n>\n>https://github.com/bitcoin/bitcoin/pull/11739.patch\n>https://github.com/bitcoin/bitcoin/pull/11739.diff\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/11739\n",
      "created_at" : "2017-11-22T00:10:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-346202002",
      "id" : 346202002,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11739",
      "updated_at" : "2017-11-22T00:10:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346202002",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "The code changes here don't look as bad as I would have expected. I'd prefer to encapsulate the exception block hashes in chainparams, though.",
      "created_at" : "2017-11-22T01:44:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-346217588",
      "id" : 346217588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11739",
      "updated_at" : "2017-11-22T01:44:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346217588",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK!   as far as testnet, restarting with a new testnet would be fine, but there are a bunch of very interesting test cases in testnet we should consider extracting. One possibility would be to instrument the codebase to call the gprof things to record branch coverage data at each block; an then make a list of testnet blocks that increased cover.  Seems like a real pain though.",
      "created_at" : "2017-11-23T01:36:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-346515145",
      "id" : 346515145,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11739",
      "updated_at" : "2017-11-23T01:36:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346515145",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nits addressed.",
      "created_at" : "2017-12-05T22:21:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-349461292",
      "id" : 349461292,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11739",
      "updated_at" : "2017-12-05T22:21:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349461292",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
