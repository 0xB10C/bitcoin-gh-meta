[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152377332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152377332"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[tests] Remove rpc property from TestNode in p2p-segwit.py\"\r\n\r\nDid you mean to s/node.p2p/p2p/ here and below?",
      "commit_id" : "a328ab35888baaa481b5b59e41472f91e8802f8e",
      "created_at" : "2017-11-21T19:25:53Z",
      "diff_hunk" : "@@ -31,11 +31,38 @@ def get_virtual_size(witness_block):\n     vsize = int((3*base_size + total_size + 3)/4)\n     return vsize\n \n+def test_transaction_acceptance(node, p2p, tx, with_witness, accepted, reason=None):\n+    \"\"\"Send a transaction to the node and check that it's accepted to the mempool\n+\n+    - Submit the transaction over the p2p interface\n+    - use the getrawmempool rpc to check for acceptance.\"\"\"\n+    tx_message = msg_tx(tx)\n+    if with_witness:\n+        tx_message = msg_witness_tx(tx)\n+    p2p.send_message(tx_message)\n+    p2p.sync_with_ping()\n+    assert_equal(tx.hash in node.getrawmempool(), accepted)\n+    if (reason != None and not accepted):\n+        # Check the rejection reason as well.\n+        with mininode_lock:\n+            assert_equal(p2p.last_message[\"reject\"].reason, reason)\n+\n+def test_witness_block(node, p2p, block, accepted, with_witness=True):\n+    \"\"\"Send a block to the node and check that it's accepted\n+\n+    - Submit the block over the p2p interface\n+    - use the getbestblockhash rpc to check for acceptance.\"\"\"\n+    if with_witness:\n+        node.p2p.send_message(msg_witness_block(block))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152377332",
      "id" : 152377332,
      "original_commit_id" : "ff3b19c608b465dd4af8a13280f92e5a91dd6b78",
      "original_position" : 26,
      "path" : "test/functional/p2p-segwit.py",
      "position" : null,
      "pull_request_review_id" : 78230563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712",
      "updated_at" : "2017-11-23T15:34:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152377332",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152378395"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152378395"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[tests] Remove rpc property from TestNode in p2p-segwit.py\"\r\n\r\nDo you want to s/node.rpc/node/ here for consistency with test_transaction_acceptance? Another alternative which would also be nice would be to pass these functions just rpc objects instead of nodes.\r\n",
      "commit_id" : "a328ab35888baaa481b5b59e41472f91e8802f8e",
      "created_at" : "2017-11-21T19:30:04Z",
      "diff_hunk" : "@@ -31,11 +31,38 @@ def get_virtual_size(witness_block):\n     vsize = int((3*base_size + total_size + 3)/4)\n     return vsize\n \n+def test_transaction_acceptance(node, p2p, tx, with_witness, accepted, reason=None):\n+    \"\"\"Send a transaction to the node and check that it's accepted to the mempool\n+\n+    - Submit the transaction over the p2p interface\n+    - use the getrawmempool rpc to check for acceptance.\"\"\"\n+    tx_message = msg_tx(tx)\n+    if with_witness:\n+        tx_message = msg_witness_tx(tx)\n+    p2p.send_message(tx_message)\n+    p2p.sync_with_ping()\n+    assert_equal(tx.hash in node.getrawmempool(), accepted)\n+    if (reason != None and not accepted):\n+        # Check the rejection reason as well.\n+        with mininode_lock:\n+            assert_equal(p2p.last_message[\"reject\"].reason, reason)\n+\n+def test_witness_block(node, p2p, block, accepted, with_witness=True):\n+    \"\"\"Send a block to the node and check that it's accepted\n+\n+    - Submit the block over the p2p interface\n+    - use the getbestblockhash rpc to check for acceptance.\"\"\"\n+    if with_witness:\n+        node.p2p.send_message(msg_witness_block(block))\n+    else:\n+        node.p2p.send_message(msg_block(block))\n+    p2p.sync_with_ping()\n+    assert_equal(node.rpc.getbestblockhash() == block.hash, accepted)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152378395",
      "id" : 152378395,
      "original_commit_id" : "ff3b19c608b465dd4af8a13280f92e5a91dd6b78",
      "original_position" : 30,
      "path" : "test/functional/p2p-segwit.py",
      "position" : null,
      "pull_request_review_id" : 78230563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712",
      "updated_at" : "2017-11-23T15:34:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152378395",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152379930"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152379930"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "[tests] Remove rpc property from TestNode in p2p-segwit.py\r\n\r\nNot a comment on this PR but this whole test file is very repetitive. With a few lambdas / local helper functions it could probably be made a lot shorter and more readable.",
      "commit_id" : "a328ab35888baaa481b5b59e41472f91e8802f8e",
      "created_at" : "2017-11-21T19:36:12Z",
      "diff_hunk" : "@@ -1818,45 +1824,45 @@ def test_non_standard_witness(self):\n         # Testing native P2WSH\n         # Witness stack size, excluding witnessScript, over 100 is non-standard\n         p2wsh_txs[0].wit.vtxinwit[0].scriptWitness.stack = [pad] * 101 + [scripts[0]]\n-        self.std_node.test_transaction_acceptance(p2wsh_txs[0], True, False, b'bad-witness-nonstandard')\n+        test_transaction_acceptance(self.nodes[1], self.std_node, p2wsh_txs[0], True, False, b'bad-witness-nonstandard')\n         # Non-standard nodes should accept\n-        self.test_node.test_transaction_acceptance(p2wsh_txs[0], True, True)\n+        test_transaction_acceptance(self.nodes[0], self.test_node, p2wsh_txs[0], True, True)\n \n         # Stack element size over 80 bytes is non-standard\n         p2wsh_txs[1].wit.vtxinwit[0].scriptWitness.stack = [pad * 81] * 100 + [scripts[1]]\n-        self.std_node.test_transaction_acceptance(p2wsh_txs[1], True, False, b'bad-witness-nonstandard')\n+        test_transaction_acceptance(self.nodes[1], self.std_node, p2wsh_txs[1], True, False, b'bad-witness-nonstandard')\n         # Non-standard nodes should accept\n-        self.test_node.test_transaction_acceptance(p2wsh_txs[1], True, True)\n+        test_transaction_acceptance(self.nodes[0], self.test_node, p2wsh_txs[1], True, True)\n         # Standard nodes should accept if element size is not over 80 bytes\n         p2wsh_txs[1].wit.vtxinwit[0].scriptWitness.stack = [pad * 80] * 100 + [scripts[1]]\n-        self.std_node.test_transaction_acceptance(p2wsh_txs[1], True, True)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, p2wsh_txs[1], True, True)\n \n         # witnessScript size at 3600 bytes is standard\n         p2wsh_txs[2].wit.vtxinwit[0].scriptWitness.stack = [pad, pad, scripts[2]]\n-        self.test_node.test_transaction_acceptance(p2wsh_txs[2], True, True)\n-        self.std_node.test_transaction_acceptance(p2wsh_txs[2], True, True)\n+        test_transaction_acceptance(self.nodes[0], self.test_node, p2wsh_txs[2], True, True)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, p2wsh_txs[2], True, True)\n \n         # witnessScript size at 3601 bytes is non-standard\n         p2wsh_txs[3].wit.vtxinwit[0].scriptWitness.stack = [pad, pad, pad, scripts[3]]\n-        self.std_node.test_transaction_acceptance(p2wsh_txs[3], True, False, b'bad-witness-nonstandard')\n+        test_transaction_acceptance(self.nodes[1], self.std_node, p2wsh_txs[3], True, False, b'bad-witness-nonstandard')\n         # Non-standard nodes should accept\n-        self.test_node.test_transaction_acceptance(p2wsh_txs[3], True, True)\n+        test_transaction_acceptance(self.nodes[0], self.test_node, p2wsh_txs[3], True, True)\n \n         # Repeating the same tests with P2SH-P2WSH\n         p2sh_txs[0].wit.vtxinwit[0].scriptWitness.stack = [pad] * 101 + [scripts[0]]\n-        self.std_node.test_transaction_acceptance(p2sh_txs[0], True, False, b'bad-witness-nonstandard')\n-        self.test_node.test_transaction_acceptance(p2sh_txs[0], True, True)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, p2sh_txs[0], True, False, b'bad-witness-nonstandard')\n+        test_transaction_acceptance(self.nodes[0], self.test_node, p2sh_txs[0], True, True)\n         p2sh_txs[1].wit.vtxinwit[0].scriptWitness.stack = [pad * 81] * 100 + [scripts[1]]\n-        self.std_node.test_transaction_acceptance(p2sh_txs[1], True, False, b'bad-witness-nonstandard')\n-        self.test_node.test_transaction_acceptance(p2sh_txs[1], True, True)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, p2sh_txs[1], True, False, b'bad-witness-nonstandard')\n+        test_transaction_acceptance(self.nodes[0], self.test_node, p2sh_txs[1], True, True)\n         p2sh_txs[1].wit.vtxinwit[0].scriptWitness.stack = [pad * 80] * 100 + [scripts[1]]\n-        self.std_node.test_transaction_acceptance(p2sh_txs[1], True, True)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, p2sh_txs[1], True, True)\n         p2sh_txs[2].wit.vtxinwit[0].scriptWitness.stack = [pad, pad, scripts[2]]\n-        self.test_node.test_transaction_acceptance(p2sh_txs[2], True, True)\n-        self.std_node.test_transaction_acceptance(p2sh_txs[2], True, True)\n+        test_transaction_acceptance(self.nodes[0], self.test_node, p2sh_txs[2], True, True)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, p2sh_txs[2], True, True)\n         p2sh_txs[3].wit.vtxinwit[0].scriptWitness.stack = [pad, pad, pad, scripts[3]]\n-        self.std_node.test_transaction_acceptance(p2sh_txs[3], True, False, b'bad-witness-nonstandard')\n-        self.test_node.test_transaction_acceptance(p2sh_txs[3], True, True)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, p2sh_txs[3], True, False, b'bad-witness-nonstandard')\n+        test_transaction_acceptance(self.nodes[0], self.test_node, p2sh_txs[3], True, True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152379930",
      "id" : 152379930,
      "original_commit_id" : "ff3b19c608b465dd4af8a13280f92e5a91dd6b78",
      "original_position" : 835,
      "path" : "test/functional/p2p-segwit.py",
      "position" : null,
      "pull_request_review_id" : 78230563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712",
      "updated_at" : "2017-11-23T15:34:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152379930",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152382964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152382964"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[tests] instantiate NodeConnCB in TestNode\"\r\n\r\nCan similary control flow and revert this whole commit, see main comment.",
      "commit_id" : "a328ab35888baaa481b5b59e41472f91e8802f8e",
      "created_at" : "2017-11-21T19:48:13Z",
      "diff_hunk" : "@@ -158,16 +158,20 @@ def node_encrypt_wallet(self, passphrase):\n         self.encryptwallet(passphrase)\n         self.wait_until_stopped()\n \n-    def add_p2p_connection(self, p2p_conn, **kwargs):\n+    def add_p2p_connection(self, p2p_conn_type, **kwargs):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152382964",
      "id" : 152382964,
      "original_commit_id" : "fb8592236b8fae27609d87adbd4d09323d17c8f0",
      "original_position" : 5,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : null,
      "pull_request_review_id" : 78230563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712",
      "updated_at" : "2017-11-23T15:34:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152382964",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152404154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152404154"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[tests] Make NodeConnCB a subclass of NodeConn\"\r\n\r\nCan get rid of all these default parameters repeated so many times. See main comment.",
      "commit_id" : "a328ab35888baaa481b5b59e41472f91e8802f8e",
      "created_at" : "2017-11-21T21:17:46Z",
      "diff_hunk" : "@@ -34,7 +35,7 @@\n # message is received from the node-under-test. Subclass NodeConnCB and\n # override the on_*() methods if you need custom behaviour.\n class BaseNode(NodeConnCB):\n-    def __init__(self):\n+    def __init__(self, dstaddr, dstport, net=\"regtest\", services=NODE_NETWORK, send_version=True):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152404154",
      "id" : 152404154,
      "original_commit_id" : "40876ac740e79a8cf248bb099b7fe1a212a641ae",
      "original_position" : 13,
      "path" : "test/functional/example_test.py",
      "position" : null,
      "pull_request_review_id" : 78230563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712",
      "updated_at" : "2017-11-23T15:34:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152404154",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks Russ. I much prefer your suggested way of passing the constructed NodeConnCB object to TestNode. I've incorporated your change and split the PR into smaller commits to aid reviewing.",
      "created_at" : "2017-11-23T15:37:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11712#issuecomment-346648643",
      "id" : 346648643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11712",
      "updated_at" : "2017-11-23T15:37:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346648643",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153235647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153235647"
         }
      },
      "author_association" : "MEMBER",
      "body" : "stylte-nit: Any reason for this change? I think the previous is easier to read python code.",
      "commit_id" : "a328ab35888baaa481b5b59e41472f91e8802f8e",
      "created_at" : "2017-11-27T15:50:42Z",
      "diff_hunk" : "@@ -185,10 +184,8 @@ def p2p(self):\n     def disconnect_p2ps(self):\n         \"\"\"Close all p2p connections to the node.\"\"\"\n         for p in self.p2ps:\n-            # Connection could have already been closed by other end.\n-            if p.connection is not None:\n-                p.connection.disconnect_node()\n-        self.p2ps = []\n+            p.peer_disconnect()\n+        del self.p2ps[:]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153235647",
      "id" : 153235647,
      "original_commit_id" : "4e8531ff2ddfb6649a5542b67c04fe8b170574ba",
      "original_position" : 38,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : 38,
      "pull_request_review_id" : 79212251,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712",
      "updated_at" : "2017-11-27T15:58:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153235647",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153271032"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153271032"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There's some discussion of the differences here: https://stackoverflow.com/questions/850795/different-ways-of-clearing-lists\r\n\r\nIf there was a different reference to this array, then `self.p2ps = []` wouldn't clear that array, it would just change `self.p2ps` to point to a new, empty array.\r\n\r\nPractically, there's not much difference, but I think I prefer `del self.p2ps[:]`. I actually got this from @ryanofsky's commit - perhaps he had a specific reason to make this change?",
      "commit_id" : "a328ab35888baaa481b5b59e41472f91e8802f8e",
      "created_at" : "2017-11-27T17:45:32Z",
      "diff_hunk" : "@@ -185,10 +184,8 @@ def p2p(self):\n     def disconnect_p2ps(self):\n         \"\"\"Close all p2p connections to the node.\"\"\"\n         for p in self.p2ps:\n-            # Connection could have already been closed by other end.\n-            if p.connection is not None:\n-                p.connection.disconnect_node()\n-        self.p2ps = []\n+            p.peer_disconnect()\n+        del self.p2ps[:]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153271032",
      "id" : 153271032,
      "in_reply_to_id" : 153235647,
      "original_commit_id" : "4e8531ff2ddfb6649a5542b67c04fe8b170574ba",
      "original_position" : 38,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : 38,
      "pull_request_review_id" : 79252831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11712",
      "updated_at" : "2017-11-27T17:45:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153271032",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
