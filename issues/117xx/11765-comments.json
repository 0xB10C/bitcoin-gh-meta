[
   {
      "author_association" : "MEMBER",
      "body" : "Nice. Thanks for contributing.\r\nConcept ACK.\r\n\r\nWhat holds you back in completing this with supporting hex/bin? Should be trivial.",
      "created_at" : "2017-11-25T08:22:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346926397",
      "id" : 346926397,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11765",
      "updated_at" : "2017-11-25T08:22:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346926397",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@jonasschnelli Yeah I noticed the hex/bin pattern but wasn't entirely sure if I should use those here too.  I suppose I wasn't sure exactly what should be serialized in this case, as the other endpoints using bin/hex are serializing whole class/struct instances like CBlockHeader or CBlock, whereas this is a simple hash string.  I can certainly add that support.\r\n\r\nThanks for taking a look!",
      "created_at" : "2017-11-25T08:34:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346926916",
      "id" : 346926916,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11765",
      "updated_at" : "2017-11-25T08:34:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346926916",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8744958?v=4",
         "events_url" : "https://api.github.com/users/aaron-hanson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aaron-hanson/followers",
         "following_url" : "https://api.github.com/users/aaron-hanson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aaron-hanson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aaron-hanson",
         "id" : 8744958,
         "login" : "aaron-hanson",
         "organizations_url" : "https://api.github.com/users/aaron-hanson/orgs",
         "received_events_url" : "https://api.github.com/users/aaron-hanson/received_events",
         "repos_url" : "https://api.github.com/users/aaron-hanson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aaron-hanson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aaron-hanson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aaron-hanson"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@aaron-hanson.\r\nYou can just create a data stream and push the hashes onto the stream. A rest client could save ~50% brutto bandwidth over a JSON/hexstring.\r\n```\r\nCDataStream ssFooBar(SER_NETWORK, PROTOCOL_VERSION);\r\nssGetUTXOResponse << pindex->GetBlockHash();\r\n```\r\n",
      "created_at" : "2017-11-25T08:39:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346927096",
      "id" : 346927096,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11765",
      "updated_at" : "2017-11-25T08:39:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346927096",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Added bin/hex formats, associated tests and documentation.",
      "created_at" : "2017-11-25T10:16:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346931585",
      "id" : 346931585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11765",
      "updated_at" : "2017-11-25T10:16:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346931585",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8744958?v=4",
         "events_url" : "https://api.github.com/users/aaron-hanson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aaron-hanson/followers",
         "following_url" : "https://api.github.com/users/aaron-hanson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aaron-hanson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aaron-hanson",
         "id" : 8744958,
         "login" : "aaron-hanson",
         "organizations_url" : "https://api.github.com/users/aaron-hanson/orgs",
         "received_events_url" : "https://api.github.com/users/aaron-hanson/received_events",
         "repos_url" : "https://api.github.com/users/aaron-hanson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aaron-hanson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aaron-hanson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aaron-hanson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11765#discussion_r153052912"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11765"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153052912"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Instead of forming the stream, use `req->WriteReply(HTTP_OK, pindex->GetBlockHash()->GetHex());`?",
      "commit_id" : "bef7f92092641bb448b2a137c3a1e0eda7b941da",
      "created_at" : "2017-11-25T19:48:11Z",
      "diff_hunk" : "@@ -269,6 +269,56 @@ static bool rest_block_notxdetails(HTTPRequest* req, const std::string& strURIPa\n     return rest_block(req, strURIPart, false);\n }\n \n+static bool rest_blockhash(HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req))\n+        return false;\n+    std::string strHeight;\n+    const RetFormat rf = ParseDataFormat(strHeight, strURIPart);\n+\n+    int32_t nHeight;\n+    if (!ParseInt32(strHeight, &nHeight))\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error\");\n+\n+    LOCK(cs_main);\n+    if (nHeight < 0 || nHeight > chainActive.Height())\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Block height out of range: \" + strHeight);\n+\n+    const CBlockIndex *pindex = chainActive[nHeight];\n+\n+    switch (rf) {\n+    case RF_BINARY: {\n+        CDataStream ssGetBlockHashResponse(SER_NETWORK, PROTOCOL_VERSION);\n+        ssGetBlockHashResponse << pindex->GetBlockHash();\n+        std::string binaryHash = ssGetBlockHashResponse.str();\n+\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        req->WriteReply(HTTP_OK, binaryHash);\n+        return true;\n+    }\n+    case RF_HEX: {\n+        CDataStream ssGetBlockHashResponse(SER_NETWORK, PROTOCOL_VERSION);\n+        ssGetBlockHashResponse << pindex->GetBlockHash();\n+        std::string strHex = HexStr(ssGetBlockHashResponse.begin(), ssGetBlockHashResponse.end()) + \"\\n\";\n+\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11765#discussion_r153052912",
      "id" : 153052912,
      "original_commit_id" : "e02f4c34256060dbba5e549855a2fad9a8d9b6f1",
      "original_position" : 37,
      "path" : "src/rest.cpp",
      "position" : 37,
      "pull_request_review_id" : 79010062,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11765",
      "updated_at" : "2017-11-25T21:14:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153052912",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11765#discussion_r153053540"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11765"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153053540"
         }
      },
      "author_association" : "NONE",
      "body" : "Yeah I was wondering about this...I had just followed the pattern for the other endpoints' hex formats.  Directly writing the output of pindex->GetBlockHash().GetHex() reverses the order of the bytes as compared to HexStr().  I'm not sure which is correct?",
      "commit_id" : "bef7f92092641bb448b2a137c3a1e0eda7b941da",
      "created_at" : "2017-11-25T20:20:22Z",
      "diff_hunk" : "@@ -269,6 +269,56 @@ static bool rest_block_notxdetails(HTTPRequest* req, const std::string& strURIPa\n     return rest_block(req, strURIPart, false);\n }\n \n+static bool rest_blockhash(HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req))\n+        return false;\n+    std::string strHeight;\n+    const RetFormat rf = ParseDataFormat(strHeight, strURIPart);\n+\n+    int32_t nHeight;\n+    if (!ParseInt32(strHeight, &nHeight))\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error\");\n+\n+    LOCK(cs_main);\n+    if (nHeight < 0 || nHeight > chainActive.Height())\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Block height out of range: \" + strHeight);\n+\n+    const CBlockIndex *pindex = chainActive[nHeight];\n+\n+    switch (rf) {\n+    case RF_BINARY: {\n+        CDataStream ssGetBlockHashResponse(SER_NETWORK, PROTOCOL_VERSION);\n+        ssGetBlockHashResponse << pindex->GetBlockHash();\n+        std::string binaryHash = ssGetBlockHashResponse.str();\n+\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        req->WriteReply(HTTP_OK, binaryHash);\n+        return true;\n+    }\n+    case RF_HEX: {\n+        CDataStream ssGetBlockHashResponse(SER_NETWORK, PROTOCOL_VERSION);\n+        ssGetBlockHashResponse << pindex->GetBlockHash();\n+        std::string strHex = HexStr(ssGetBlockHashResponse.begin(), ssGetBlockHashResponse.end()) + \"\\n\";\n+\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11765#discussion_r153053540",
      "id" : 153053540,
      "in_reply_to_id" : 153052912,
      "original_commit_id" : "e02f4c34256060dbba5e549855a2fad9a8d9b6f1",
      "original_position" : 37,
      "path" : "src/rest.cpp",
      "position" : 37,
      "pull_request_review_id" : 79010596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11765",
      "updated_at" : "2017-11-25T21:14:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153053540",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8744958?v=4",
         "events_url" : "https://api.github.com/users/aaron-hanson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aaron-hanson/followers",
         "following_url" : "https://api.github.com/users/aaron-hanson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aaron-hanson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aaron-hanson",
         "id" : 8744958,
         "login" : "aaron-hanson",
         "organizations_url" : "https://api.github.com/users/aaron-hanson/orgs",
         "received_events_url" : "https://api.github.com/users/aaron-hanson/received_events",
         "repos_url" : "https://api.github.com/users/aaron-hanson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aaron-hanson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aaron-hanson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aaron-hanson"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Another option would be to overload /rest/block/[hash|height].[bin,hex.json]. Note that json response includes the hash.\r\n\r\n@promag - I thought about this too...  After researching a bit I found an older issue (#6011) about essentially the same thing, but in RPC.  I assumed from the opinions there that I should probably just add this blockhash endpoint and not overload the block endpoint.",
      "created_at" : "2017-11-25T23:28:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346973037",
      "id" : 346973037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11765",
      "updated_at" : "2017-11-25T23:28:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346973037",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8744958?v=4",
         "events_url" : "https://api.github.com/users/aaron-hanson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aaron-hanson/followers",
         "following_url" : "https://api.github.com/users/aaron-hanson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aaron-hanson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aaron-hanson",
         "id" : 8744958,
         "login" : "aaron-hanson",
         "organizations_url" : "https://api.github.com/users/aaron-hanson/orgs",
         "received_events_url" : "https://api.github.com/users/aaron-hanson/received_events",
         "repos_url" : "https://api.github.com/users/aaron-hanson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aaron-hanson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aaron-hanson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aaron-hanson"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "As others say in #6011, it was possible to query block by height but with 2 calls. With REST call there is no way unless you walk back from the tip. Unless we want to mirror the RPC interface, I think overloading sounds cooler.\r\n\r\nIn that scenario, the difference between the 2 endpoints would be cache headers, since by hash the block is immutable but not by height (at least near the tip).",
      "created_at" : "2017-11-26T00:52:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346976256",
      "id" : 346976256,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11765",
      "updated_at" : "2017-11-26T00:53:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346976256",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "BTW nice first contribution.",
      "created_at" : "2017-11-26T00:54:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346976318",
      "id" : 346976318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11765",
      "updated_at" : "2017-11-26T00:54:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346976318",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
