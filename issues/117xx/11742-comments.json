[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152313807"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152313807"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fix alignment.",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-11-21T15:43:14Z",
      "diff_hunk" : "@@ -988,6 +988,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"    (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152313807",
      "id" : 152313807,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 14,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78156375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152313807",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152314242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152314242"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "IMO as it is this block is not needed.",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-11-21T15:44:30Z",
      "diff_hunk" : "@@ -988,6 +988,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"    (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (if any)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nSend the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152314242",
      "id" : 152314242,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 53,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78156375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152314242",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152314577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152314577"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Add test?",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-11-21T15:45:30Z",
      "diff_hunk" : "@@ -988,6 +988,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"    (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (if any)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nSend the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    {\n+        LOCK(cs_main);\n+        const CCoinsViewCache& view = *pcoinsTip;\n+        for (size_t o = 0; o < tx->vout.size(); o++) {\n+            bool is_tx_in_chain = !view.AccessCoin(COutPoint(tx_hash, o)).IsSpent();\n+            if (is_tx_in_chain) {\n+                result.push_back(Pair(\"allowed\", false));\n+                result.push_back(Pair(\"error\", \"transaction already in block chain\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152314577",
      "id" : 152314577,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 60,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78156375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152314577",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152315829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152315829"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Already default value. Or remove default value from declaration?",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-11-21T15:49:16Z",
      "diff_hunk" : "@@ -4386,7 +4395,8 @@ bool LoadMempool(void)\n             if (nTime + nExpiryTimeout > nNow) {\n                 LOCK(cs_main);\n                 AcceptToMemoryPoolWithTime(chainparams, mempool, state, tx, nullptr /* pfMissingInputs */, nTime,\n-                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */);\n+                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */,\n+                                           nullptr /* test_accept */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152315829",
      "id" : 152315829,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 64,
      "path" : "src/validation.cpp",
      "position" : 64,
      "pull_request_review_id" : 78156375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152315829",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152644533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152644533"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note this is ATMPWT, not ATMP ;)",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-11-22T18:21:52Z",
      "diff_hunk" : "@@ -4386,7 +4395,8 @@ bool LoadMempool(void)\n             if (nTime + nExpiryTimeout > nNow) {\n                 LOCK(cs_main);\n                 AcceptToMemoryPoolWithTime(chainparams, mempool, state, tx, nullptr /* pfMissingInputs */, nTime,\n-                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */);\n+                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */,\n+                                           nullptr /* test_accept */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152644533",
      "id" : 152644533,
      "in_reply_to_id" : 152315829,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 64,
      "path" : "src/validation.cpp",
      "position" : 64,
      "pull_request_review_id" : 78539121,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152644533",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152644588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152644588"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-11-22T18:22:06Z",
      "diff_hunk" : "@@ -988,6 +988,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"    (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152644588",
      "id" : 152644588,
      "in_reply_to_id" : 152313807,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 14,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78539175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152644588",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152647067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152647067"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah!",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-11-22T18:32:58Z",
      "diff_hunk" : "@@ -4386,7 +4395,8 @@ bool LoadMempool(void)\n             if (nTime + nExpiryTimeout > nNow) {\n                 LOCK(cs_main);\n                 AcceptToMemoryPoolWithTime(chainparams, mempool, state, tx, nullptr /* pfMissingInputs */, nTime,\n-                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */);\n+                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */,\n+                                           nullptr /* test_accept */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152647067",
      "id" : 152647067,
      "in_reply_to_id" : 152315829,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 64,
      "path" : "src/validation.cpp",
      "position" : 64,
      "pull_request_review_id" : 78542049,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152647067",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152647669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152647669"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Extra space.",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-11-22T18:35:45Z",
      "diff_hunk" : "@@ -998,6 +1078,7 @@ static const CRPCCommand commands[] =\n     { \"rawtransactions\",    \"sendrawtransaction\",     &sendrawtransaction,     {\"hexstring\",\"allowhighfees\"} },\n     { \"rawtransactions\",    \"combinerawtransaction\",  &combinerawtransaction,  {\"txs\"} },\n     { \"rawtransactions\",    \"signrawtransaction\",     &signrawtransaction,     {\"hexstring\",\"prevtxs\",\"privkeys\",\"sighashtype\"} }, /* uses wallet if enabled */\n+    { \"rawtransactions\",    \"testmempoolaccept\",      &testmempoolaccept,       {\"hexstring\",\"allowhighfees\"} },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152647669",
      "id" : 152647669,
      "original_commit_id" : "e0c1f055858792f51cc77b4f4b25ead9fe70b166",
      "original_position" : 91,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78542757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152647669",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152648061"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152648061"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Send?",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-11-22T18:37:34Z",
      "diff_hunk" : "@@ -988,6 +988,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (if any)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nSend the transaction (signed hex)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152648061",
      "id" : 152648061,
      "original_commit_id" : "e0c1f055858792f51cc77b4f4b25ead9fe70b166",
      "original_position" : 26,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78542757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152648061",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152648918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152648918"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "error? optional?",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-11-22T18:41:37Z",
      "diff_hunk" : "@@ -988,6 +988,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (if any)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152648918",
      "id" : 152648918,
      "original_commit_id" : "e0c1f055858792f51cc77b4f4b25ead9fe70b166",
      "original_position" : 19,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78542757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152648918",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155144465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155144465"
         }
      },
      "author_association" : "OWNER",
      "body" : "This first `const` has no effect.",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-06T04:27:59Z",
      "diff_hunk" : "@@ -578,7 +578,7 @@ class CTxMemPool\n     /** Populate setDescendants with all in-mempool descendants of hash.\n      *  Assumes that setDescendants includes all in-mempool descendants of anything\n      *  already in it.  */\n-    void CalculateDescendants(txiter it, setEntries &setDescendants);\n+    void CalculateDescendants(const txiter it, setEntries& setDescendants) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155144465",
      "id" : 155144465,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 5,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 81413721,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155144465",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I am so happy about this, big concept ACK. Some tests would be nice.",
      "created_at" : "2017-12-06T04:57:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-349533704",
      "id" : 349533704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-06T04:57:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349533704",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice. Finally.\r\nutACK fa12a9481ea7d930c75f109f3c10b200db70e501\r\n\r\nA comment for the new parameter of `AcceptToMemoryPool` in `validation.h` would be nice.",
      "created_at" : "2017-12-06T07:07:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-349554127",
      "id" : 349554127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-06T07:07:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349554127",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155379057"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155379057"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems somewhat redundant to return the parameter as-is, no?",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-06T22:21:15Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155379057",
      "id" : 155379057,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 17,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81689103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155379057",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155382539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155382539"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ugh, I meannnnn, checking against pcoinsTip really sucks. Maybe just call ATMP and then check for the \"txn-already-known\" return? Or just return false (since its not \"accepted to mempool\", so I'd kinda expect that) and the rejection reason will be txn-already-known.",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-06T22:37:29Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    LOCK(cs_main);\n+    const CCoinsViewCache& view = *pcoinsTip;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155382539",
      "id" : 155382539,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 54,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81689103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155382539",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155388151"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155388151"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Missing `\\n`.",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-06T23:05:32Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155388151",
      "id" : 155388151,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 24,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81699739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155388151",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155389515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155389515"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`when 'allowed' is false`",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-06T23:12:32Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155389515",
      "id" : 155389515,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 19,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81699739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155389515",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155391946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155391946"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess this was borrowed from `sendrawtransaction`.\r\n\r\nThere, there is an extra test `bool fHaveMempool = mempool.exists(hashTx)`, \r\nbut it could be replaced by checking the ATMP error `txn-already-in-mempool`.\r\n\r\nHowever in other PR I recall @sipa said it was kind of bad thing to rely on these rejection reasons.",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-06T23:25:35Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    LOCK(cs_main);\n+    const CCoinsViewCache& view = *pcoinsTip;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155391946",
      "id" : 155391946,
      "in_reply_to_id" : 155382539,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 54,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81704038,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155391946",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155426102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155426102"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, will rename this to `txid` and the parameter to `rawtx` to make clear that they are different.",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-07T04:01:44Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155426102",
      "id" : 155426102,
      "in_reply_to_id" : 155379057,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 17,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81742565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155426102",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155426418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155426418"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, this is mostly a convenience check to provide a helpful message in case the tx recently confirmed for whatever reason. Otherwise you'd be left with `missing_inputs`, which is correct but might not be helpful at first.",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-07T04:05:09Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    LOCK(cs_main);\n+    const CCoinsViewCache& view = *pcoinsTip;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155426418",
      "id" : 155426418,
      "in_reply_to_id" : 155382539,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 54,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81742905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155426418",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155654315"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155654315"
         }
      },
      "author_association" : "MEMBER",
      "body" : "On a second thought, I don't think it makes sense to have the blockchain check here. Will return false as suggested by @TheBlueMatt ",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-07T22:04:06Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    LOCK(cs_main);\n+    const CCoinsViewCache& view = *pcoinsTip;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155654315",
      "id" : 155654315,
      "in_reply_to_id" : 155382539,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 54,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 82009765,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155654315",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r156117353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156117353"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There is no new line to indicate a paragraph, which groups the rpcs into two logical sections.",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-11T16:06:51Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r156117353",
      "id" : 156117353,
      "in_reply_to_id" : 155388151,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 24,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 82543126,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156117353",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r156119690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156119690"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thx, fixed.",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-11T16:14:23Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r156119690",
      "id" : 156119690,
      "in_reply_to_id" : 155389515,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 19,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 82545999,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-18T14:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156119690",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Removed the unused imports to make travis green.",
      "created_at" : "2017-12-14T04:31:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-351606057",
      "id" : 351606057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-14T04:31:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351606057",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "can someone remind me why this one is acceptable while the other ~dozen attempts have failed?",
      "created_at" : "2017-12-19T14:45:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-352776951",
      "id" : 352776951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-19T14:45:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352776951",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@instagibbs  Revelant history https://github.com/bitcoin/bitcoin/pull/7552 from @laanwj \r\n\r\nI think this one can work because it has a better name. `verifyrawtransaction` is complex because there is lot's of bike-shed about the args and what `verifying` means. The meaning of `testmempoolaccept` is obvious and can't be misinterpreted, nor would it make sense to have more parameters.",
      "created_at" : "2017-12-19T16:32:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-352812398",
      "id" : 352812398,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-19T16:32:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352812398",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157811719"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157811719"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I understand this is reflected in sendraw as well, but humor me: what times is state not `IsInvalid` but it would reject it?",
      "commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "created_at" : "2017-12-19T16:50:56Z",
      "diff_hunk" : "@@ -992,6 +992,78 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"rawtx\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"rawtx\\\"          (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"txid\", tx_hash.GetHex()));\n+\n+    LOCK(cs_main);\n+\n+    CValidationState state;\n+    bool missing_inputs;\n+    bool test_accept_res;\n+    bool res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+        nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, &test_accept_res);\n+    assert(!res);\n+    result.push_back(Pair(\"allowed\", test_accept_res));\n+    if (!test_accept_res) {\n+        if (state.IsInvalid()) {\n+            result.push_back(Pair(\"reject-reason\", strprintf(\"%i: %s\", state.GetRejectCode(), state.GetRejectReason())));\n+        } else if (missing_inputs) {\n+            result.push_back(Pair(\"reject-reason\", \"Missing inputs\"));\n+        } else {\n+            result.push_back(Pair(\"reject-reason\", state.GetRejectReason()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157811719",
      "id" : 157811719,
      "original_commit_id" : "2df0c25133544e38314d9a4e25c2996dff660be0",
      "original_position" : 69,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 84516065,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2017-12-19T16:59:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157811719",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@instagibbs Previous pulls were:\r\n\r\n* #11201: Solves the general case (a list of transactions), but ended up in a state of {WIP, needs review, will revisit later}. Haven't checked what is actually missing there.\r\n* #7552: Also solves the general case (a list of transactions), but tried to implement some tx pool checking logic in a separate function. Then people raised concerns that this might result in unwanted behavior. (I.e. `verifytransaction` tells you everything is fine, but your mempool rejects). Also ended in a state {WIP, needs review, will revisit later}...\r\n\r\nI think this pull (`testmempoolaccept`) nicely exploits the existing checks for consensus/standardness that are called in ATMP, without touching too much of validation code. A future pull can extend this rpc to take lists of more than one raw transaction and feed them into an ephemeral mempool (e.g. based on the current mempool).",
      "created_at" : "2017-12-19T18:18:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-352842691",
      "id" : 352842691,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-19T22:40:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352842691",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "conceptACK, seems useful and more accessible/convenient than current alternatives",
      "created_at" : "2017-12-19T21:17:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-352889141",
      "id" : 352889141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-19T21:17:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352889141",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/5269298?v=4",
         "events_url" : "https://api.github.com/users/greenaddress/events{/privacy}",
         "followers_url" : "https://api.github.com/users/greenaddress/followers",
         "following_url" : "https://api.github.com/users/greenaddress/following{/other_user}",
         "gists_url" : "https://api.github.com/users/greenaddress/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/greenaddress",
         "id" : 5269298,
         "login" : "greenaddress",
         "organizations_url" : "https://api.github.com/users/greenaddress/orgs",
         "received_events_url" : "https://api.github.com/users/greenaddress/received_events",
         "repos_url" : "https://api.github.com/users/greenaddress/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/greenaddress/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/greenaddress/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/greenaddress"
      }
   }
]
