[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153224963"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11770"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153224963"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Instead of moving them to a separate file, you could add convenience wrappers to the `test_node` class? Thus, it would not be required to pass in host and port all the time.",
      "commit_id" : "e485e5f86447a2d4af833882362f80cc8d65a2b9",
      "created_at" : "2017-11-27T15:17:33Z",
      "diff_hunk" : "@@ -0,0 +1,23 @@\n+import http.client\n+\n+\n+#allows simple http get calls\n+def http_get_call(host, port, path, response_object = 0):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153224963",
      "id" : 153224963,
      "original_commit_id" : "5ee1c95b4ac29d3202b72255ade8a347a012cb1e",
      "original_position" : 5,
      "path" : "test/functional/test_framework/rest.py",
      "position" : 5,
      "pull_request_review_id" : 79199700,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11770",
      "updated_at" : "2017-11-27T15:22:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153224963",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for reviewing.\r\nI will update according to the review soon.\r\n> Maybe too much for REST?\r\n\r\nRationale for this PR is that some light client(or other services) wants to use information about block or mempool for estimating fee. This is pretty close to the motivation of `getutxo` in terms of it places some trust on the full node. core's fee estimation logic is likely to update to a more sophisticated scheme in the near future so many clients may want to use core's logic directly.\r\n> At least the the URI could be improved. This looks weird:\r\n\r\nYou are right. Can I use `&foo=bar` style query parameter here? I didn't because other endpoint didn't. in that case, what about\r\n`/rest/fee.json?target=<TARGET>&mode=<MODE>` and make `mode` optional? Though I'm not sure how easy this is to implement. \r\n\r\nOtherwise all I can think is enabling to omit `<MODE>` . and query in the form like\r\n`/rest/fee/5.json`",
      "created_at" : "2017-11-27T18:35:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-347280308",
      "id" : 347280308,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11770",
      "updated_at" : "2017-11-27T18:41:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347280308",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/10084960?v=4",
         "events_url" : "https://api.github.com/users/joemphilips/events{/privacy}",
         "followers_url" : "https://api.github.com/users/joemphilips/followers",
         "following_url" : "https://api.github.com/users/joemphilips/following{/other_user}",
         "gists_url" : "https://api.github.com/users/joemphilips/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/joemphilips",
         "id" : 10084960,
         "login" : "joemphilips",
         "organizations_url" : "https://api.github.com/users/joemphilips/orgs",
         "received_events_url" : "https://api.github.com/users/joemphilips/received_events",
         "repos_url" : "https://api.github.com/users/joemphilips/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/joemphilips/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/joemphilips/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/joemphilips"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "My vote goes to `GET /rest/fee?target=<TARGET>&mode=<MODE>`, with query parameters and without extension. IMO all endpoints should return JSON, unless `Accept: ` headers requests other format.",
      "created_at" : "2017-11-27T19:03:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-347289770",
      "id" : 347289770,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11770",
      "updated_at" : "2017-11-27T19:03:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347289770",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
