[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139109843"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139109843"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, `GetDataDir()` argument defaults to `true` so it'd be clearer to leave it out imo",
      "commit_id" : "bb37a030bd9e021cc58a6e55b579de232f6ce6ab",
      "created_at" : "2017-09-15T10:00:39Z",
      "diff_hunk" : "@@ -151,10 +151,31 @@ void OptionsModel::Init(bool resetSettings)\n     language = settings.value(\"language\").toString();\n }\n \n+/** Helper function to copy contents from one QSettings to another.\n+ * By using allKeys this also covers nested settings in a hierarchy.\n+ */\n+static void copySettings(QSettings &dst, const QSettings &src)\n+{\n+    for (const QString &key: src.allKeys()) {\n+        dst.setValue(key, src.value(key));\n+    }\n+}\n+\n+/** Back up a QSettings to an ini-formatted file. */\n+static void backupSettings(const fs::path &filename, const QSettings &src)\n+{\n+    QSettings dst(GUIUtil::boostPathToQString(filename), QSettings::IniFormat);\n+    qInfo() << \"Backing up GUI settings to\" << GUIUtil::boostPathToQString(filename);\n+    copySettings(dst, src);\n+}\n+\n void OptionsModel::Reset()\n {\n     QSettings settings;\n \n+    // Backup old settings for troubleshooting\n+    backupSettings(GetDataDir(true) / \"guisettings.bak\", settings);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139109843",
      "id" : 139109843,
      "original_commit_id" : "232a1089dd90878ca95a01f0ce053c4b1ffba88e",
      "original_position" : 27,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 62997824,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338",
      "updated_at" : "2017-09-15T10:12:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139109843",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139110101"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139110101"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, space between `&key` and the colon",
      "commit_id" : "bb37a030bd9e021cc58a6e55b579de232f6ce6ab",
      "created_at" : "2017-09-15T10:01:44Z",
      "diff_hunk" : "@@ -151,10 +151,31 @@ void OptionsModel::Init(bool resetSettings)\n     language = settings.value(\"language\").toString();\n }\n \n+/** Helper function to copy contents from one QSettings to another.\n+ * By using allKeys this also covers nested settings in a hierarchy.\n+ */\n+static void copySettings(QSettings &dst, const QSettings &src)\n+{\n+    for (const QString &key: src.allKeys()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139110101",
      "id" : 139110101,
      "original_commit_id" : "232a1089dd90878ca95a01f0ce053c4b1ffba88e",
      "original_position" : 9,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 62997824,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338",
      "updated_at" : "2017-09-15T10:12:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139110101",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139110672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139110672"
         }
      },
      "author_association" : "OWNER",
      "body" : "Isn't it the other way around: clearer to leave it in, because it's explicit?",
      "commit_id" : "bb37a030bd9e021cc58a6e55b579de232f6ce6ab",
      "created_at" : "2017-09-15T10:04:15Z",
      "diff_hunk" : "@@ -151,10 +151,31 @@ void OptionsModel::Init(bool resetSettings)\n     language = settings.value(\"language\").toString();\n }\n \n+/** Helper function to copy contents from one QSettings to another.\n+ * By using allKeys this also covers nested settings in a hierarchy.\n+ */\n+static void copySettings(QSettings &dst, const QSettings &src)\n+{\n+    for (const QString &key: src.allKeys()) {\n+        dst.setValue(key, src.value(key));\n+    }\n+}\n+\n+/** Back up a QSettings to an ini-formatted file. */\n+static void backupSettings(const fs::path &filename, const QSettings &src)\n+{\n+    QSettings dst(GUIUtil::boostPathToQString(filename), QSettings::IniFormat);\n+    qInfo() << \"Backing up GUI settings to\" << GUIUtil::boostPathToQString(filename);\n+    copySettings(dst, src);\n+}\n+\n void OptionsModel::Reset()\n {\n     QSettings settings;\n \n+    // Backup old settings for troubleshooting\n+    backupSettings(GetDataDir(true) / \"guisettings.bak\", settings);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139110672",
      "id" : 139110672,
      "in_reply_to_id" : 139109843,
      "original_commit_id" : "232a1089dd90878ca95a01f0ce053c4b1ffba88e",
      "original_position" : 27,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 62998745,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338",
      "updated_at" : "2017-09-15T10:12:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139110672",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139110695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139110695"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will fix",
      "commit_id" : "bb37a030bd9e021cc58a6e55b579de232f6ce6ab",
      "created_at" : "2017-09-15T10:04:21Z",
      "diff_hunk" : "@@ -151,10 +151,31 @@ void OptionsModel::Init(bool resetSettings)\n     language = settings.value(\"language\").toString();\n }\n \n+/** Helper function to copy contents from one QSettings to another.\n+ * By using allKeys this also covers nested settings in a hierarchy.\n+ */\n+static void copySettings(QSettings &dst, const QSettings &src)\n+{\n+    for (const QString &key: src.allKeys()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139110695",
      "id" : 139110695,
      "in_reply_to_id" : 139110101,
      "original_commit_id" : "232a1089dd90878ca95a01f0ce053c4b1ffba88e",
      "original_position" : 9,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 62998765,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338",
      "updated_at" : "2017-09-15T10:12:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139110695",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139111417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139111417"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Normally I'd say yes, but in this case it just leaves me wondering what the argument is doing, because in most other cases of `GetDataDir` in the code, the argument is left out. Personal preference",
      "commit_id" : "bb37a030bd9e021cc58a6e55b579de232f6ce6ab",
      "created_at" : "2017-09-15T10:08:06Z",
      "diff_hunk" : "@@ -151,10 +151,31 @@ void OptionsModel::Init(bool resetSettings)\n     language = settings.value(\"language\").toString();\n }\n \n+/** Helper function to copy contents from one QSettings to another.\n+ * By using allKeys this also covers nested settings in a hierarchy.\n+ */\n+static void copySettings(QSettings &dst, const QSettings &src)\n+{\n+    for (const QString &key: src.allKeys()) {\n+        dst.setValue(key, src.value(key));\n+    }\n+}\n+\n+/** Back up a QSettings to an ini-formatted file. */\n+static void backupSettings(const fs::path &filename, const QSettings &src)\n+{\n+    QSettings dst(GUIUtil::boostPathToQString(filename), QSettings::IniFormat);\n+    qInfo() << \"Backing up GUI settings to\" << GUIUtil::boostPathToQString(filename);\n+    copySettings(dst, src);\n+}\n+\n void OptionsModel::Reset()\n {\n     QSettings settings;\n \n+    // Backup old settings for troubleshooting\n+    backupSettings(GetDataDir(true) / \"guisettings.bak\", settings);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139111417",
      "id" : 139111417,
      "in_reply_to_id" : 139109843,
      "original_commit_id" : "232a1089dd90878ca95a01f0ce053c4b1ffba88e",
      "original_position" : 27,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 62999593,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338",
      "updated_at" : "2017-09-15T10:12:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139111417",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139112058"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139112058"
         }
      },
      "author_association" : "OWNER",
      "body" : "During the initialization sequence it's really important to get this right. E.g. I had to check the order in `src/qt/bitcoin.cpp` that calling `GetDataDir(true)` was allowed at this point.\r\n\r\nAgree that boolean arguments are unclear, so are default arguments, so it's kind of choosing between evils here. Instead of an argument to `GetDataDir` we should have done `GetSpecificDataDir` and `GetRootDataDir` or such. Anyhow... I don't think this code is particularly unclear, I'll add 'to chain-specific datadir' in the comment.",
      "commit_id" : "bb37a030bd9e021cc58a6e55b579de232f6ce6ab",
      "created_at" : "2017-09-15T10:11:49Z",
      "diff_hunk" : "@@ -151,10 +151,31 @@ void OptionsModel::Init(bool resetSettings)\n     language = settings.value(\"language\").toString();\n }\n \n+/** Helper function to copy contents from one QSettings to another.\n+ * By using allKeys this also covers nested settings in a hierarchy.\n+ */\n+static void copySettings(QSettings &dst, const QSettings &src)\n+{\n+    for (const QString &key: src.allKeys()) {\n+        dst.setValue(key, src.value(key));\n+    }\n+}\n+\n+/** Back up a QSettings to an ini-formatted file. */\n+static void backupSettings(const fs::path &filename, const QSettings &src)\n+{\n+    QSettings dst(GUIUtil::boostPathToQString(filename), QSettings::IniFormat);\n+    qInfo() << \"Backing up GUI settings to\" << GUIUtil::boostPathToQString(filename);\n+    copySettings(dst, src);\n+}\n+\n void OptionsModel::Reset()\n {\n     QSettings settings;\n \n+    // Backup old settings for troubleshooting\n+    backupSettings(GetDataDir(true) / \"guisettings.bak\", settings);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11338#discussion_r139112058",
      "id" : 139112058,
      "in_reply_to_id" : 139109843,
      "original_commit_id" : "232a1089dd90878ca95a01f0ce053c4b1ffba88e",
      "original_position" : 27,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 63000348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11338",
      "updated_at" : "2017-09-15T10:12:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139112058",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK https://github.com/bitcoin/bitcoin/pull/11338/commits/bb37a030bd9e021cc58a6e55b579de232f6ce6ab",
      "created_at" : "2017-09-15T10:14:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11338#issuecomment-329741761",
      "id" : 329741761,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11338",
      "updated_at" : "2017-09-15T10:14:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329741761",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   }
]
