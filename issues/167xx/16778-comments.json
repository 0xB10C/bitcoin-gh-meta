[
   {
      "author_association" : "NONE",
      "body" : "Is this issue #10210 and [comment](https://github.com/bitcoin/bitcoin/issues/10210#issuecomment-294231685) still valid? Commented on Apr 14, 2017:\r\n\r\n> The hanging thread here is the dnsseed thread. Because glibc's async dns lookup is horribly broken (see https://sourceware.org/bugzilla/show_bug.cgi?id=20874), we stopped using it in #9229. #10215 will make the dnsseed thread exit a bit faster, but until we move to libevent's dns lookup, we're stuck with this as the best we can do.",
      "created_at" : "2019-09-03T20:57:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16778#issuecomment-527637018",
      "id" : 527637018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16778",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNzYzNzAxOA==",
      "updated_at" : "2019-09-03T20:57:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/527637018",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/54221205?v=4",
         "events_url" : "https://api.github.com/users/Nikolay-Po/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Nikolay-Po/followers",
         "following_url" : "https://api.github.com/users/Nikolay-Po/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Nikolay-Po/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Nikolay-Po",
         "id" : 54221205,
         "login" : "Nikolay-Po",
         "node_id" : "MDQ6VXNlcjU0MjIxMjA1",
         "organizations_url" : "https://api.github.com/users/Nikolay-Po/orgs",
         "received_events_url" : "https://api.github.com/users/Nikolay-Po/received_events",
         "repos_url" : "https://api.github.com/users/Nikolay-Po/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Nikolay-Po/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Nikolay-Po/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Nikolay-Po"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I believe so, yes. We may be able to do some magic to exit even if that thread is running if it's the only one (and in DNS lookup), but that's likely a more involved change.\n\n> On Sep 3, 2019, at 16:58, Nikolay-Po <notifications@github.com> wrote:\n> \n> Is this issue #10210 and comment still valid? Commented on Apr 14, 2017:\n> \n> The hanging thread here is the dnsseed thread. Because glibc's async dns lookup is horribly broken (see https://sourceware.org/bugzilla/show_bug.cgi?id=20874), we stopped using it in #9229. #10215 will make the dnsseed thread exit a bit faster, but until we move to libevent's dns lookup, we're stuck with this as the best we can do.\n> \n> â\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
      "created_at" : "2019-09-03T21:12:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16778#issuecomment-527642475",
      "id" : 527642475,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16778",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNzY0MjQ3NQ==",
      "updated_at" : "2019-09-03T21:12:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/527642475",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Right before splash screen will gone, the status of address seed is futex_wait. But when main GUI window is appeared, the seed thread status become sk_wait_data.\r\n\r\n```\r\nF S   UID   PID  PPID   LWP  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD\r\n1 S  1000 25719 24555 25974  0  80   0 - 122507 futex_ pts/1   00:00:00 bitcoin-dnsseed\r\n\r\n```\r\n\r\n```\r\n1 S  1000 25719 24555 25974  0  80   0 - 137291 sk_wai pts/1   00:00:00 bitcoin-dnsseed\r\n```\r\n\r\nCan't complete last 240 (or even more) blocks update because of Bitcoin Core disability to finish the closure. While searching a solution, I found a thread when a man claiming he lost a year of bitcoin(-qt?) uptime upon unsuccessfull closure (probably dnsseed caused). After he restarted the core the node had to re-scan all blocks loaded during a year.  Are there any hints for:\r\n\r\n1. How to terminate dnsseed thread but not terminating bitcoin-qt to let it finish DB update? If I'm sending SIGQUIT to thread PPID by htop it interrupting whole bitcoin-qt and the database block count remains as before bitcoin-qt start. Is there a different way, may be some Bitcoin Core RPC request or operating system message? Anything that will close dnsseed but let bitcoin-qt to finish.\r\n2. May I can change the order of closing operations to let the database finish it's operation before ThreadDNSAddressSeed? If yes then how to do that in sources?\r\n3. I'm not satisfied by node database behavior on unexpected exits. Why after SIGQUIT or any other exits except normal stop there are none already loaded and scanned blocks  present in chain state? After unexpected stop the blocks which was acquired during last run are not in the chain and are need to be re-scanned. May be some mechanism for periodic database update is needed to not loose a lot of CPU time for rescan, for example, a year of uptime? I'd prefer periodic, say, daily, database maintenance procedure to keep the blocks validated even in case of unexpected node operation interruption.",
      "created_at" : "2019-09-03T21:57:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16778#issuecomment-527656746",
      "id" : 527656746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16778",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNzY1Njc0Ng==",
      "updated_at" : "2019-09-03T21:58:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/527656746",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/54221205?v=4",
         "events_url" : "https://api.github.com/users/Nikolay-Po/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Nikolay-Po/followers",
         "following_url" : "https://api.github.com/users/Nikolay-Po/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Nikolay-Po/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Nikolay-Po",
         "id" : 54221205,
         "login" : "Nikolay-Po",
         "node_id" : "MDQ6VXNlcjU0MjIxMjA1",
         "organizations_url" : "https://api.github.com/users/Nikolay-Po/orgs",
         "received_events_url" : "https://api.github.com/users/Nikolay-Po/received_events",
         "repos_url" : "https://api.github.com/users/Nikolay-Po/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Nikolay-Po/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Nikolay-Po/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Nikolay-Po"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "It seems to me I have found a workaround how to exit from dnsseed hang and let the Core to update the database on exit (but at next run):\r\n\r\n1. If ps status of dnsseed thread is \"sk_wai\" then there is a problem: Bitcoin Core can not be stopped normally and the database cannot be updated completely. The node will definitely hang on exit. The blocks will remain on the media but not indexed.\r\n2. In case of (1), to recover from ThreadDNSAddressSeed lockout I'm killing the Core by sending SIGKILL. SIGQUIT doesn't heal the hang. If I will send SIGQUIT then dnsseed will hang right on next bitcoin-qt start and chain state update will not be performed.\r\n3. After killing by SIGKILL, the ThreadDNSAddressSeed will not hang at next start, at least first time. After sudden Core kill, at next bitcoin-qt start, dnsseed thread is present for some time while splash screen is displayed, between \"Loading data\" status gone and GUI window appearance. The waiting channel of dnsseed is \"poll_s\". After GUI window appearance dnsseed is not here and I can wait for database synchronization completion. At this stage the blocks on disk which was left not indexed at previous run  on disk become indexed and the database become complete in sync without dnsseed hang.\r\n4. When database synchronization is complete and ThreadDNSAddressSeed is not running or hanging I'm closing the Core normally. Bitcoin-qt finishing it's operation normally and completely. The database on media remains in good current state, without the loose of last run chainstate update.\r\n5. I'm starting bitcoin-qt again to continue node operation for some next days.\r\n6. Wile running for some time, ThreadDNSAddressSeed become active and most probably will hang. Periodically I'm checking the status of dnsseed thread. And if it is hanging and there are several days passed, I'm performing the procedure form start, point 1.\r\n\r\nOf course this workaround is not a solution, but it, at least, allow not to loose, say, a year of chainstate update. I can control the hang and can kill and restart the Core before it will accumulate a lot of blocks without possibility to store correct chainstate.\r\n\r\n",
      "created_at" : "2019-09-06T17:16:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16778#issuecomment-528938179",
      "id" : 528938179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16778",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyODkzODE3OQ==",
      "updated_at" : "2019-09-06T17:16:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/528938179",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/54221205?v=4",
         "events_url" : "https://api.github.com/users/Nikolay-Po/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Nikolay-Po/followers",
         "following_url" : "https://api.github.com/users/Nikolay-Po/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Nikolay-Po/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Nikolay-Po",
         "id" : 54221205,
         "login" : "Nikolay-Po",
         "node_id" : "MDQ6VXNlcjU0MjIxMjA1",
         "organizations_url" : "https://api.github.com/users/Nikolay-Po/orgs",
         "received_events_url" : "https://api.github.com/users/Nikolay-Po/received_events",
         "repos_url" : "https://api.github.com/users/Nikolay-Po/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Nikolay-Po/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Nikolay-Po/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Nikolay-Po"
      }
   }
]
