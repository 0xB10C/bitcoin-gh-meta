[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317276226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317276226"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: You might want to make it the same length in bits an all architectures:\r\n\r\n```suggestion\r\n            const uint64_t asmap_version{hasher(m_asmap)};\r\n            s << asmap_version;\r\n```",
      "commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "created_at" : "2019-08-23T19:40:27Z",
      "diff_hunk" : "@@ -304,8 +336,14 @@ class CAddrMan\n \n         unsigned char nVersion = 1;\n         s << nVersion;\n-        s << ((unsigned char)32);\n+        s << ((unsigned char)36);\n         s << nKey;\n+        unsigned long long asmap_version = 0;\n+        if (m_asmap.size() != 0) {\n+            std::hash<std::vector<bool>> hasher;\n+            asmap_version = hasher(m_asmap);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317276226",
      "id" : 317276226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzI3NjIyNg==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 81,
      "path" : "src/addrman.h",
      "position" : 81,
      "pull_request_review_id" : 279188467,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-08-23T19:42:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317276226",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317276773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317276773"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This doesn't look like json. Also, this file is 21 MB, a bit too much for the git repo.\r\n\r\nYou might be better off adding a makefile rule `%.bin.h: %.bin` (similar to `%.json.h: %.json`).",
      "commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "created_at" : "2019-08-23T19:42:19Z",
      "diff_hunk" : "@@ -5,6 +5,8 @@\n #include <test/setup_common.h>\n #include <string>\n #include <boost/test/unit_test.hpp>\n+#include <util/asmap.h>\n+#include <test/data/asmap.json.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317276773",
      "id" : 317276773,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzI3Njc3Mw==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 5,
      "path" : "src/test/addrman_tests.cpp",
      "position" : 5,
      "pull_request_review_id" : 279188467,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-08-23T19:42:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317276773",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317281198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317281198"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For a big file that needs processing, maybe add a `contrib` script that fetches it (checking  the sha256 hash) and does its (determinstic) thing. And then just add the result to the repo.",
      "commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "created_at" : "2019-08-23T19:56:38Z",
      "diff_hunk" : "@@ -5,6 +5,8 @@\n #include <test/setup_common.h>\n #include <string>\n #include <boost/test/unit_test.hpp>\n+#include <util/asmap.h>\n+#include <test/data/asmap.json.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317281198",
      "id" : 317281198,
      "in_reply_to_id" : 317276773,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzI4MTE5OA==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 5,
      "path" : "src/test/addrman_tests.cpp",
      "position" : 5,
      "pull_request_review_id" : 279195084,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-08-23T19:56:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317281198",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317288685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317288685"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, I'll do both things.",
      "commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "created_at" : "2019-08-23T20:21:36Z",
      "diff_hunk" : "@@ -5,6 +5,8 @@\n #include <test/setup_common.h>\n #include <string>\n #include <boost/test/unit_test.hpp>\n+#include <util/asmap.h>\n+#include <test/data/asmap.json.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317288685",
      "id" : 317288685,
      "in_reply_to_id" : 317276773,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzI4ODY4NQ==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 5,
      "path" : "src/test/addrman_tests.cpp",
      "position" : 5,
      "pull_request_review_id" : 279205133,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-08-23T20:21:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317288685",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16673](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16673.html) (Relog configuration args on debug.log rotation by LarryRuane)\n* [#16539](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16539.html) (wallet: lower -txmaxfee default from 0.1 to 0.01 BTC by Sjors)\n* [#16115](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16115.html) (On bitcoind startup, write config args to debug.log by LarryRuane)\n* [#15759](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15759.html) (p2p: Add 2 outbound blocks-only connections by sdaftuar)\n* [#13462](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13462.html) (Make SER_GETHASH implicit for CHashWriter and SerializeHash by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-08-23T22:21:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524480139",
      "id" : 524480139,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDQ4MDEzOQ==",
      "updated_at" : "2019-08-24T05:37:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524480139",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328392"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Don't pass the map by value; it's copying the entire megabyte bitmap on every call.",
      "commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "created_at" : "2019-08-23T23:15:47Z",
      "diff_hunk" : "@@ -0,0 +1,103 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+\n+int DecodeBits(std::vector<bool> stream, int* bitpos, int minval, const int bit_sizes[], int bit_sizes_n)\n+{\n+    int val = minval;\n+    bool bit;\n+    for (int pos = 0; pos < bit_sizes_n; pos++) {\n+        int bit_size = bit_sizes[pos];\n+        if (pos + 1 < bit_sizes_n) {\n+            bit = stream.at(*bitpos);\n+            *bitpos = *bitpos + 1;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << bit_size);\n+        } else {\n+            for (int b = 0; b < bit_size; b++) {\n+                bit = stream.at(*bitpos);\n+                *bitpos = *bitpos + 1;\n+                val += bit << (bit_size - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;\n+}\n+\n+const int TYPE_BIT_SIZES[] = {0, 0, 1};\n+int DecodeType(std::vector<bool> stream, int* bitpos)\n+{\n+    return DecodeBits(stream, bitpos, 0, TYPE_BIT_SIZES, 3);\n+}\n+\n+const int ASN_BIT_SIZES[] = {15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n+int DecodeASN(std::vector<bool> stream, int* bitpos)\n+{\n+    return DecodeBits(stream, bitpos, 1, ASN_BIT_SIZES, 10);\n+}\n+\n+const int MATCH_BIT_SIZES[] = {1, 2, 3, 4, 5, 6, 7, 8};\n+int DecodeMatch(std::vector<bool> stream, int* bitpos)\n+{\n+    return DecodeBits(stream, bitpos, 2, MATCH_BIT_SIZES, 8);\n+}\n+\n+const int JUMP_BIT_SIZES[] = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n+int DecodeJump(std::vector<bool> stream, int* bitpos) {\n+    return DecodeBits(stream, bitpos, 17, JUMP_BIT_SIZES, 26);\n+}\n+\n+int BitLength(int target)\n+{\n+    int result = 0;\n+    while (target > 0) {\n+        target = target / 2;\n+        result++;\n+    }\n+    return result;\n+}\n+\n+int Interpret(std::vector<bool> asmap, unsigned long long num, int bits)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328392",
      "id" : 317328392,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzMyODM5Mg==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 67,
      "path" : "src/util/asmap.cpp",
      "position" : 67,
      "pull_request_review_id" : 279255830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-08-23T23:20:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328392",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328472"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Don't pass the entire map by value.",
      "commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "created_at" : "2019-08-23T23:16:26Z",
      "diff_hunk" : "@@ -0,0 +1,103 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+\n+int DecodeBits(std::vector<bool> stream, int* bitpos, int minval, const int bit_sizes[], int bit_sizes_n)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328472",
      "id" : 317328472,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzMyODQ3Mg==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 8,
      "path" : "src/util/asmap.cpp",
      "position" : 8,
      "pull_request_review_id" : 279255830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-08-23T23:20:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328472",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328716"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328716"
         }
      },
      "author_association" : "MEMBER",
      "body" : "An unsigned long long is generally not enough to represent an IPv6 address. Maybe you want to pass the IP address also as an `std::vector<bool>`, and have the caller convert the IP address to a bitmap?",
      "commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "created_at" : "2019-08-23T23:18:09Z",
      "diff_hunk" : "@@ -0,0 +1,5 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+int Interpret(std::vector<bool> asmap, unsigned long long num, int bits);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328716",
      "id" : 317328716,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzMyODcxNg==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 5,
      "path" : "src/util/asmap.h",
      "position" : 5,
      "pull_request_review_id" : 279255830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-08-23T23:21:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328716",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328977"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A more C++ish way to do this would be to pass a `std::vector<bool>::const_iterator& it` (for the beginning of the value, updated to be after the value afterwards) and a `const std::vector<bool>::const_iterator& end` (for the end of the area).",
      "commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "created_at" : "2019-08-23T23:19:58Z",
      "diff_hunk" : "@@ -0,0 +1,103 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+\n+int DecodeBits(std::vector<bool> stream, int* bitpos, int minval, const int bit_sizes[], int bit_sizes_n)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328977",
      "id" : 317328977,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzMyODk3Nw==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 8,
      "path" : "src/util/asmap.cpp",
      "position" : 8,
      "pull_request_review_id" : 279255830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-08-23T23:20:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328977",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317334544"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317334544"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think using std::hash is the right choice here, as it has no well-defined semantics (even updating your c++ stdlib could change the function). You can use `SerializeHash(m_asmap)` instead.",
      "commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "created_at" : "2019-08-24T00:08:17Z",
      "diff_hunk" : "@@ -304,8 +336,14 @@ class CAddrMan\n \n         unsigned char nVersion = 1;\n         s << nVersion;\n-        s << ((unsigned char)32);\n+        s << ((unsigned char)36);\n         s << nKey;\n+        unsigned long long asmap_version = 0;\n+        if (m_asmap.size() != 0) {\n+            std::hash<std::vector<bool>> hasher;\n+            asmap_version = hasher(m_asmap);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317334544",
      "id" : 317334544,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzMzNDU0NA==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 81,
      "path" : "src/addrman.h",
      "position" : 81,
      "pull_request_review_id" : 279263258,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-08-24T00:08:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317334544",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "FWIW, the asmap generated from https://dev.maxmind.com/geoip/geoip2/geolite2/ is 988387 bytes in size.",
      "created_at" : "2019-08-24T00:15:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524497855",
      "id" : 524497855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDQ5Nzg1NQ==",
      "updated_at" : "2019-08-24T00:15:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524497855",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Encoding the map as bool[] array in the source code will add to the executable 4 bytes per bit in the map, that's a bit excessive. You should probably encode it as a encode it as a uint8_t[] instead (with 8 bits per array element).",
      "created_at" : "2019-08-24T00:22:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524498652",
      "id" : 524498652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDQ5ODY1Mg==",
      "updated_at" : "2019-08-24T00:22:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524498652",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@sipa Would you mind providing the python script used to generate the asmap? I think Bitcoiners like @TheBlueMatt and myself who maintain their own BGP full table view of the Internet would like to generate their own asmap instead of trusting maxmind, or at least verify it.",
      "created_at" : "2019-08-24T05:39:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524522538",
      "id" : 524522538,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDUyMjUzOA==",
      "updated_at" : "2019-08-24T05:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524522538",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/232186?v=4",
         "events_url" : "https://api.github.com/users/wiz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/wiz/followers",
         "following_url" : "https://api.github.com/users/wiz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/wiz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/wiz",
         "id" : 232186,
         "login" : "wiz",
         "node_id" : "MDQ6VXNlcjIzMjE4Ng==",
         "organizations_url" : "https://api.github.com/users/wiz/orgs",
         "received_events_url" : "https://api.github.com/users/wiz/received_events",
         "repos_url" : "https://api.github.com/users/wiz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/wiz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/wiz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/wiz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-08-24T05:42:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524522713",
      "id" : 524522713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDUyMjcxMw==",
      "updated_at" : "2019-08-24T05:42:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524522713",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@wiz The script is here: https://gist.github.com/sipa/b90070570597b950f29a6297772a7636 though we need more tooling to convert from common dump formats,  sanity check, ... I'll publish some when they're a bit cleaned up and usable.\r\n",
      "created_at" : "2019-08-24T09:06:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524534484",
      "id" : 524534484,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDUzNDQ4NA==",
      "updated_at" : "2019-08-24T09:06:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524534484",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for the script, it helps a lot with my own implementation and I also wanted to point out a few potential attack vectors to circumvent the asmap protection:\r\n\r\n1) Private ASN ranges\r\n\r\nThere are several ASN ranges which can be used as originating ASNs without registration or verification and could be used to circumvent the asmap protection. For example I could announce one /24 from 65000, one /24 from 65001, and so on, all behind my actual ASN, in order to launch  an Erebus attack. I propose that we map any IP blocks originating from the following invalid ASNs to the next-valid ASN upstream of it:\r\n\r\n```                                                                            \r\n0                       # Reserved RFC7607                                     \r\n23456                   # AS_TRANS RFC6793                                     \r\n64496-64511             # Reserved for use in docs and code RFC5398            \r\n64512-65534             # Reserved for Private Use RFC6996                     \r\n65535                   # Reserved RFC7300                                     \r\n65536-65551             # Reserved for use in docs and code RFC5398            \r\n65552-131071            # Reserved                                             \r\n4200000000-4294967294   # Reserved for Private Use RFC6996                     \r\n4294967295              # Reserved RFC7300                                     \r\n```\r\n\r\n2) Multiple originating ASNs\r\n\r\nThere are actually around 50 routing prefixes on the Internet that legitimately have multiple originating ASNs, so it's not always a strict 1:1 mapping. For example, a valid use case could be an ISP that aggregates multiple customer /29 or /30 prefixes into a single /24 announcement (since /24 is the smallest globally routable prefix size that would be generally accepted) and my router indicates *all* of the multiple originating ASNs in curly braces like this:\r\n```\r\n141.145.0.0/19 {AS7160,43898} \r\n144.21.0.0 {AS7160,AS43894}\r\n158.13.154.0/24 {AS367,AS1479,AS1504,AS1526,AS1541}\r\n160.34.0.0/20 {AS4192,AS7160}\r\n160.34.16.0/20 {AS7160,AS43898} \r\n```\r\nOf course this could be used to circumvent the asmap protection as well, so for this case I also propose we instead identify the upstream aggregating ASN as the originating ASN. For my implementation I'm simply going to use a regex to strip out the curly braces aggregation to ignore it.\r\n\r\n",
      "created_at" : "2019-08-24T11:27:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524542883",
      "id" : 524542883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDU0Mjg4Mw==",
      "updated_at" : "2019-08-24T11:27:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524542883",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/232186?v=4",
         "events_url" : "https://api.github.com/users/wiz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/wiz/followers",
         "following_url" : "https://api.github.com/users/wiz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/wiz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/wiz",
         "id" : 232186,
         "login" : "wiz",
         "node_id" : "MDQ6VXNlcjIzMjE4Ng==",
         "organizations_url" : "https://api.github.com/users/wiz/orgs",
         "received_events_url" : "https://api.github.com/users/wiz/received_events",
         "repos_url" : "https://api.github.com/users/wiz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/wiz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/wiz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/wiz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@wiz Very good points!\r\n\r\n> 1. Private ASN ranges\r\n\r\nBesides using private ASN ranges another obvious attack vector would be to make use of non-reserved but unused or unallocated AS-numbers as a faux downstream for a specific attacker controlled prefix:\r\n\r\nAssume that `AS54321` is a non-private but unused or unallocated ASN.\r\n\r\nAn attacker `AS666` with upstream transit provider `AS123` could fake having `AS54321` as a downstream transit customer with the network `200.201.202.0/24`.\r\n\r\nThe global view would hence be:\r\n* `200.201.202.0/24`: `AS123 AS666 AS54321`\r\n\r\nTraffic to `200.201.202.0/24` would end up in the hands of `AS666` who get a free extra slot our ASN lottery :-) This could obviously be repeated with `N` additional prefixes networks to get `N` extra slots.\r\n\r\nAssuming that `AS54321` is not in active use by any other organisation no one will complain about this behaviour. (In contrast to \"prefix hijacking\" where the hijacked network will notice that their traffic is routed in a strange way and complain.) \r\n\r\nHow can we guard against this attack?\r\n\r\n#### To guard against an attacker making use of non-IANA allocated ASNs as faux specific attacker controlled prefix:\r\n\r\nInstead of blacklisting known reserved AS numbers, we should be stricter and apply a whitelisting approach: allow only AS number ranges that have been been allocated to the five Regional Internet Registries (AFRINIC, APNIC, ARIN, LACNIC and RIPE) by IANA. That data is available in machine readable form.\r\n\r\n#### To guard against an attacker making use of IANA allocated but RIR unallocated ASNs as faux downstream for a specific attacker controlled prefix:\r\n\r\nI believe all five RIR:s provide machine readable lists of the individual ASNs they have assigned to organisations.\r\n\r\n(Note that this data comes with the country code for the organisation that has been assigned the AS-number. That could be handy if we some time in the future would like to implement logic for avoiding country or region based netsplits. If incorporated in the `asmap` data we could say not only what ASN a peer belongs to but also the region (based on which RIR that handed out the ASN) and also which country the organisation announcing the peers prefix belongs to. This would be a good approximation for the actual country/region of the peer.)\r\n\r\n#### To guard against an attacker making use of IANA allocated and RIR allocated ASNs as faux downstreams for a specific attacker controlled prefix:\r\n\r\nThis is harder to guard against.\r\n\r\nPerhaps we could require that a prefix-to-ASN mapping has been stable over say `N` months before being included in the `asmap`. That would make the described attack harder to carry out without being noticed.\r\n\r\nAnother approach would be to analyse a full routing table when creating the `asmap` and reason about the ASNs that are in the path to the announcing origin AS. Could be tricky to distinguish between tier-1:s and attackers :-\\",
      "created_at" : "2019-08-24T15:52:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524561108",
      "id" : 524561108,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDU2MTEwOA==",
      "updated_at" : "2019-08-24T15:52:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524561108",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Yeah, the AS map mitigation may be flawed. How about requiring everyone to also have a few Tor peers, presumably bypassing the network partition attack?",
      "created_at" : "2019-08-24T17:47:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524568966",
      "id" : 524568966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDU2ODk2Ng==",
      "updated_at" : "2019-08-24T17:47:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524568966",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/232186?v=4",
         "events_url" : "https://api.github.com/users/wiz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/wiz/followers",
         "following_url" : "https://api.github.com/users/wiz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/wiz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/wiz",
         "id" : 232186,
         "login" : "wiz",
         "node_id" : "MDQ6VXNlcjIzMjE4Ng==",
         "organizations_url" : "https://api.github.com/users/wiz/orgs",
         "received_events_url" : "https://api.github.com/users/wiz/received_events",
         "repos_url" : "https://api.github.com/users/wiz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/wiz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/wiz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/wiz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Indeed. ASN mappings are *not* a foolproof solution, but they're better than just using /16s (after all, there are lots of unused /16s you could announce if you wanted to). Ultimately some monitoring and building up filtering lists over time as we observe malicious behavior may improve things, but, indeed, ensuring redundant connectivity is the only ultimate solution. Once #15759 lands, I'd really like to propose a default of 2 additional blocksonly Tor connections if Tor support is enabled (see-also https://twitter.com/TheBlueMatt/status/1160620919775211520, in which someone suggested their ISP was censoring Bitcoin P2P traffic, and only after setting bitcoind to Tor-only did it manage to connect).",
      "created_at" : "2019-08-24T18:56:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524573216",
      "id" : 524573216,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDU3MzIxNg==",
      "updated_at" : "2019-08-24T18:56:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524573216",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "One thing we can play with after we build an initial table is to look at the paths, instead of looking only at the last ASN in the path. eg if, from many vantage points on the internet, a given IP block always passes from AS 1 to AS 2, we could consider it as a part of AS 1 (given it appears to only have one provider - AS 1). In order to avoid Western bias we'd need to do it across geographic regions and from many vantage points (eg maybe contact a Tier 1 and get their full routing table view, not just the selected routes), but once we get the infrastructure in place, further filtering can be played with.",
      "created_at" : "2019-08-24T19:06:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524573795",
      "id" : 524573795,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDU3Mzc5NQ==",
      "updated_at" : "2019-08-24T19:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524573795",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]
