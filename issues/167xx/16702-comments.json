[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317276226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317276226"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: You might want to make it the same length in bits an all architectures:\r\n\r\n```suggestion\r\n            const uint64_t asmap_version{hasher(m_asmap)};\r\n            s << asmap_version;\r\n```",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-23T19:40:27Z",
      "diff_hunk" : "@@ -304,8 +336,14 @@ class CAddrMan\n \n         unsigned char nVersion = 1;\n         s << nVersion;\n-        s << ((unsigned char)32);\n+        s << ((unsigned char)36);\n         s << nKey;\n+        unsigned long long asmap_version = 0;\n+        if (m_asmap.size() != 0) {\n+            std::hash<std::vector<bool>> hasher;\n+            asmap_version = hasher(m_asmap);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317276226",
      "id" : 317276226,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzI3NjIyNg==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 81,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 279188467,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317276226",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317276773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317276773"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This doesn't look like json. Also, this file is 21 MB, a bit too much for the git repo.\r\n\r\nYou might be better off adding a makefile rule `%.bin.h: %.bin` (similar to `%.json.h: %.json`).",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-23T19:42:19Z",
      "diff_hunk" : "@@ -5,6 +5,8 @@\n #include <test/setup_common.h>\n #include <string>\n #include <boost/test/unit_test.hpp>\n+#include <util/asmap.h>\n+#include <test/data/asmap.json.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317276773",
      "id" : 317276773,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzI3Njc3Mw==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 5,
      "path" : "src/test/addrman_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 279188467,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317276773",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317281198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317281198"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For a big file that needs processing, maybe add a `contrib` script that fetches it (checking  the sha256 hash) and does its (determinstic) thing. And then just add the result to the repo.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-23T19:56:38Z",
      "diff_hunk" : "@@ -5,6 +5,8 @@\n #include <test/setup_common.h>\n #include <string>\n #include <boost/test/unit_test.hpp>\n+#include <util/asmap.h>\n+#include <test/data/asmap.json.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317281198",
      "id" : 317281198,
      "in_reply_to_id" : 317276773,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzI4MTE5OA==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 5,
      "path" : "src/test/addrman_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 279195084,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317281198",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317288685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317288685"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, I'll do both things.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-23T20:21:36Z",
      "diff_hunk" : "@@ -5,6 +5,8 @@\n #include <test/setup_common.h>\n #include <string>\n #include <boost/test/unit_test.hpp>\n+#include <util/asmap.h>\n+#include <test/data/asmap.json.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317288685",
      "id" : 317288685,
      "in_reply_to_id" : 317276773,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzI4ODY4NQ==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 5,
      "path" : "src/test/addrman_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 279205133,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317288685",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17399](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17399.html) (validation: Templatize ValidationState instead of subclassing by jkczyz)\n* [#17383](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17383.html) (Refactor: Move consts to their correct translation units by jnewbery)\n* [#16748](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16748.html) ([WIP] Add support for addrv2 (BIP155) by dongcarl)\n* [#16673](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16673.html) (Relog configuration args on debug.log rotation by LarryRuane)\n* [#16548](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16548.html) (Make the global flag *fDiscover* an instance variable of CConnman by mmachicao)\n* [#16115](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16115.html) (On bitcoind startup, write config args to debug.log by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-08-23T22:21:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524480139",
      "id" : 524480139,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDQ4MDEzOQ==",
      "updated_at" : "2019-11-30T06:18:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524480139",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328392"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Don't pass the map by value; it's copying the entire megabyte bitmap on every call.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-23T23:15:47Z",
      "diff_hunk" : "@@ -0,0 +1,103 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+\n+int DecodeBits(std::vector<bool> stream, int* bitpos, int minval, const int bit_sizes[], int bit_sizes_n)\n+{\n+    int val = minval;\n+    bool bit;\n+    for (int pos = 0; pos < bit_sizes_n; pos++) {\n+        int bit_size = bit_sizes[pos];\n+        if (pos + 1 < bit_sizes_n) {\n+            bit = stream.at(*bitpos);\n+            *bitpos = *bitpos + 1;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << bit_size);\n+        } else {\n+            for (int b = 0; b < bit_size; b++) {\n+                bit = stream.at(*bitpos);\n+                *bitpos = *bitpos + 1;\n+                val += bit << (bit_size - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;\n+}\n+\n+const int TYPE_BIT_SIZES[] = {0, 0, 1};\n+int DecodeType(std::vector<bool> stream, int* bitpos)\n+{\n+    return DecodeBits(stream, bitpos, 0, TYPE_BIT_SIZES, 3);\n+}\n+\n+const int ASN_BIT_SIZES[] = {15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n+int DecodeASN(std::vector<bool> stream, int* bitpos)\n+{\n+    return DecodeBits(stream, bitpos, 1, ASN_BIT_SIZES, 10);\n+}\n+\n+const int MATCH_BIT_SIZES[] = {1, 2, 3, 4, 5, 6, 7, 8};\n+int DecodeMatch(std::vector<bool> stream, int* bitpos)\n+{\n+    return DecodeBits(stream, bitpos, 2, MATCH_BIT_SIZES, 8);\n+}\n+\n+const int JUMP_BIT_SIZES[] = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n+int DecodeJump(std::vector<bool> stream, int* bitpos) {\n+    return DecodeBits(stream, bitpos, 17, JUMP_BIT_SIZES, 26);\n+}\n+\n+int BitLength(int target)\n+{\n+    int result = 0;\n+    while (target > 0) {\n+        target = target / 2;\n+        result++;\n+    }\n+    return result;\n+}\n+\n+int Interpret(std::vector<bool> asmap, unsigned long long num, int bits)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328392",
      "id" : 317328392,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzMyODM5Mg==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 67,
      "path" : "src/util/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 279255830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328392",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328472"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Don't pass the entire map by value.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-23T23:16:26Z",
      "diff_hunk" : "@@ -0,0 +1,103 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+\n+int DecodeBits(std::vector<bool> stream, int* bitpos, int minval, const int bit_sizes[], int bit_sizes_n)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328472",
      "id" : 317328472,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzMyODQ3Mg==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 8,
      "path" : "src/util/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 279255830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328472",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328716"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328716"
         }
      },
      "author_association" : "MEMBER",
      "body" : "An unsigned long long is generally not enough to represent an IPv6 address. Maybe you want to pass the IP address also as an `std::vector<bool>`, and have the caller convert the IP address to a bitmap?",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-23T23:18:09Z",
      "diff_hunk" : "@@ -0,0 +1,5 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+int Interpret(std::vector<bool> asmap, unsigned long long num, int bits);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328716",
      "id" : 317328716,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzMyODcxNg==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 5,
      "path" : "src/util/asmap.h",
      "position" : null,
      "pull_request_review_id" : 279255830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328716",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328977"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A more C++ish way to do this would be to pass a `std::vector<bool>::const_iterator& it` (for the beginning of the value, updated to be after the value afterwards) and a `const std::vector<bool>::const_iterator& end` (for the end of the area).",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-23T23:19:58Z",
      "diff_hunk" : "@@ -0,0 +1,103 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+\n+int DecodeBits(std::vector<bool> stream, int* bitpos, int minval, const int bit_sizes[], int bit_sizes_n)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317328977",
      "id" : 317328977,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzMyODk3Nw==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 8,
      "path" : "src/util/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 279255830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317328977",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317334544"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317334544"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think using std::hash is the right choice here, as it has no well-defined semantics (even updating your c++ stdlib could change the function). You can use `SerializeHash(m_asmap)` instead.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-24T00:08:17Z",
      "diff_hunk" : "@@ -304,8 +336,14 @@ class CAddrMan\n \n         unsigned char nVersion = 1;\n         s << nVersion;\n-        s << ((unsigned char)32);\n+        s << ((unsigned char)36);\n         s << nKey;\n+        unsigned long long asmap_version = 0;\n+        if (m_asmap.size() != 0) {\n+            std::hash<std::vector<bool>> hasher;\n+            asmap_version = hasher(m_asmap);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317334544",
      "id" : 317334544,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzMzNDU0NA==",
      "original_commit_id" : "c8fdb2fe3efbf72d963c623bc316a3a9456cf4eb",
      "original_position" : 81,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 279263258,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317334544",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "FWIW, the asmap generated from https://dev.maxmind.com/geoip/geoip2/geolite2/ is 988387 bytes in size.",
      "created_at" : "2019-08-24T00:15:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524497855",
      "id" : 524497855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDQ5Nzg1NQ==",
      "updated_at" : "2019-08-24T00:15:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524497855",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Encoding the map as bool[] array in the source code will add to the executable 4 bytes per bit in the map, that's a bit excessive. You should probably encode it as a encode it as a uint8_t[] instead (with 8 bits per array element).",
      "created_at" : "2019-08-24T00:22:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524498652",
      "id" : 524498652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDQ5ODY1Mg==",
      "updated_at" : "2019-08-24T00:22:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524498652",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@sipa Would you mind providing the python script used to generate the asmap? I think Bitcoiners like @TheBlueMatt and myself who maintain their own BGP full table view of the Internet would like to generate their own asmap instead of trusting maxmind, or at least verify it.",
      "created_at" : "2019-08-24T05:39:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524522538",
      "id" : 524522538,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDUyMjUzOA==",
      "updated_at" : "2019-08-24T05:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524522538",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/232186?v=4",
         "events_url" : "https://api.github.com/users/wiz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/wiz/followers",
         "following_url" : "https://api.github.com/users/wiz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/wiz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/wiz",
         "id" : 232186,
         "login" : "wiz",
         "node_id" : "MDQ6VXNlcjIzMjE4Ng==",
         "organizations_url" : "https://api.github.com/users/wiz/orgs",
         "received_events_url" : "https://api.github.com/users/wiz/received_events",
         "repos_url" : "https://api.github.com/users/wiz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/wiz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/wiz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/wiz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-08-24T05:42:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524522713",
      "id" : 524522713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDUyMjcxMw==",
      "updated_at" : "2019-08-24T05:42:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524522713",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@wiz The script is here: https://gist.github.com/sipa/b90070570597b950f29a6297772a7636 though we need more tooling to convert from common dump formats,  sanity check, ... I'll publish some when they're a bit cleaned up and usable.\r\n",
      "created_at" : "2019-08-24T09:06:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524534484",
      "id" : 524534484,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDUzNDQ4NA==",
      "updated_at" : "2019-08-24T09:06:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524534484",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for the script, it helps a lot with my own implementation and I also wanted to point out a few potential attack vectors to circumvent the asmap protection:\r\n\r\n1) Private ASN ranges\r\n\r\nThere are several ASN ranges which can be used as originating ASNs without registration or verification and could be used to circumvent the asmap protection. For example I could announce one /24 from 65000, one /24 from 65001, and so on, all behind my actual ASN, in order to launch  an Erebus attack. I propose that we map any IP blocks originating from the following invalid ASNs to the next-valid ASN upstream of it:\r\n\r\n```                                                                            \r\n0                       # Reserved RFC7607                                     \r\n23456                   # AS_TRANS RFC6793                                     \r\n64496-64511             # Reserved for use in docs and code RFC5398            \r\n64512-65534             # Reserved for Private Use RFC6996                     \r\n65535                   # Reserved RFC7300                                     \r\n65536-65551             # Reserved for use in docs and code RFC5398            \r\n65552-131071            # Reserved                                             \r\n4200000000-4294967294   # Reserved for Private Use RFC6996                     \r\n4294967295              # Reserved RFC7300                                     \r\n```\r\n\r\n2) Multiple originating ASNs\r\n\r\nThere are actually around 50 routing prefixes on the Internet that legitimately have multiple originating ASNs, so it's not always a strict 1:1 mapping. For example, a valid use case could be an ISP that aggregates multiple customer /29 or /30 prefixes into a single /24 announcement (since /24 is the smallest globally routable prefix size that would be generally accepted) and my router indicates *all* of the multiple originating ASNs in curly braces like this:\r\n```\r\n141.145.0.0/19 {AS7160,43898} \r\n144.21.0.0 {AS7160,AS43894}\r\n158.13.154.0/24 {AS367,AS1479,AS1504,AS1526,AS1541}\r\n160.34.0.0/20 {AS4192,AS7160}\r\n160.34.16.0/20 {AS7160,AS43898} \r\n```\r\nOf course this could be used to circumvent the asmap protection as well, so for this case I also propose we instead identify the upstream aggregating ASN as the originating ASN. For my implementation I'm simply going to use a regex to strip out the curly braces aggregation to ignore it.\r\n\r\n",
      "created_at" : "2019-08-24T11:27:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524542883",
      "id" : 524542883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDU0Mjg4Mw==",
      "updated_at" : "2019-08-24T11:27:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524542883",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/232186?v=4",
         "events_url" : "https://api.github.com/users/wiz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/wiz/followers",
         "following_url" : "https://api.github.com/users/wiz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/wiz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/wiz",
         "id" : 232186,
         "login" : "wiz",
         "node_id" : "MDQ6VXNlcjIzMjE4Ng==",
         "organizations_url" : "https://api.github.com/users/wiz/orgs",
         "received_events_url" : "https://api.github.com/users/wiz/received_events",
         "repos_url" : "https://api.github.com/users/wiz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/wiz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/wiz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/wiz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@wiz Very good points!\r\n\r\n> 1. Private ASN ranges\r\n\r\nBesides using private ASN ranges another obvious attack vector would be to make use of non-reserved but unused or unallocated AS-numbers as a faux downstream for a specific attacker controlled prefix:\r\n\r\nAssume that `AS54321` is a non-private but unused or unallocated ASN.\r\n\r\nAn attacker `AS666` with upstream transit provider `AS123` could fake having `AS54321` as a downstream transit customer with the network `200.201.202.0/24`.\r\n\r\nThe global view would hence be:\r\n* `200.201.202.0/24`: `AS123 AS666 AS54321`\r\n\r\nTraffic to `200.201.202.0/24` would end up in the hands of `AS666` who get a free extra slot our ASN lottery :-) This could obviously be repeated with `N` additional prefixes to get `N` extra slots.\r\n\r\nAssuming that `AS54321` is not in active use by any organisation no one will complain about this behaviour. (In contrast to \"prefix hijacking\" where the hijacked network will notice that their traffic is routed in a strange way and complain.) \r\n\r\nHow can we guard against this attack?\r\n\r\n#### To guard against an attacker making use of non-IANA allocated ASNs as faux specific attacker controlled prefix:\r\n\r\nInstead of blacklisting known reserved AS numbers, we could be stricter and apply a whitelisting approach: allow only AS number ranges that have been been allocated to the five Regional Internet Registries (AFRINIC, APNIC, ARIN, LACNIC and RIPE) by IANA. That data is available in machine readable form.\r\n\r\n#### To guard against an attacker making use of IANA allocated but RIR unallocated ASNs as faux downstream for a specific attacker controlled prefix:\r\n\r\nI believe all five RIR:s provide machine readable lists of the individual ASNs they have assigned to organisations.\r\n\r\n(Note that this data comes with the country code for the organisation that has been assigned the AS-number. That could be handy if we some time in the future would like to implement logic for avoiding country or region based netsplits. If incorporated in the `asmap` data we could say not only what ASN a peer belongs to but also the region (based on which RIR that handed out the ASN) and also which country the organisation announcing the peers prefix belongs to. This would be a good approximation for the actual country/region of the peer.)\r\n\r\n#### To guard against an attacker making use of IANA allocated _and_ RIR allocated ASNs as faux downstreams for a specific attacker controlled prefix:\r\n\r\nThis is harder to guard against.\r\n\r\nPerhaps we could require that a prefix-to-ASN mapping has been stable over say `N` months before being included in the `asmap`. That would make the described attack harder to carry out without being noticed.\r\n\r\nAnother approach would be to analyse a full routing table when creating the `asmap` and reason about the ASNs that are in the path to the announcing origin AS. Could be tricky to distinguish between tier-1:s and attackers :-\\",
      "created_at" : "2019-08-24T15:52:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524561108",
      "id" : 524561108,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDU2MTEwOA==",
      "updated_at" : "2019-08-25T12:18:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524561108",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Yeah, the AS map mitigation may be flawed. How about requiring everyone to also have a few Tor peers, presumably bypassing the network partition attack?",
      "created_at" : "2019-08-24T17:47:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524568966",
      "id" : 524568966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDU2ODk2Ng==",
      "updated_at" : "2019-08-24T17:47:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524568966",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/232186?v=4",
         "events_url" : "https://api.github.com/users/wiz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/wiz/followers",
         "following_url" : "https://api.github.com/users/wiz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/wiz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/wiz",
         "id" : 232186,
         "login" : "wiz",
         "node_id" : "MDQ6VXNlcjIzMjE4Ng==",
         "organizations_url" : "https://api.github.com/users/wiz/orgs",
         "received_events_url" : "https://api.github.com/users/wiz/received_events",
         "repos_url" : "https://api.github.com/users/wiz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/wiz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/wiz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/wiz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Indeed. ASN mappings are *not* a foolproof solution, but they're better than just using /16s (after all, there are lots of unused /16s you could announce if you wanted to). Ultimately some monitoring and building up filtering lists over time as we observe malicious behavior may improve things, but, indeed, ensuring redundant connectivity is the only ultimate solution. Once #15759 lands, I'd really like to propose a default of 2 additional blocksonly Tor connections if Tor support is enabled (see-also https://twitter.com/TheBlueMatt/status/1160620919775211520, in which someone suggested their ISP was censoring Bitcoin P2P traffic, and only after setting bitcoind to Tor-only did it manage to connect).",
      "created_at" : "2019-08-24T18:56:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524573216",
      "id" : 524573216,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDU3MzIxNg==",
      "updated_at" : "2019-08-24T18:56:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524573216",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "One thing we can play with after we build an initial table is to look at the paths, instead of looking only at the last ASN in the path. eg if, from many vantage points on the internet, a given IP block always passes from AS 1 to AS 2, we could consider it as a part of AS 1 (given it appears to only have one provider - AS 1). In order to avoid Western bias we'd need to do it across geographic regions and from many vantage points (eg maybe contact a Tier 1 and get their full routing table view, not just the selected routes), but once we get the infrastructure in place, further filtering can be played with.",
      "created_at" : "2019-08-24T19:06:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524573795",
      "id" : 524573795,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDU3Mzc5NQ==",
      "updated_at" : "2019-08-24T19:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524573795",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317796962"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317796962"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is still a very C-like way of passing arguments. I suggest:\r\n* Instead of a vector reference and pointer to int position, pass a start (reference to) const_iterator, and an end const_iterator.\r\n* Instead of a pointer to an array of bit sizes and a length, pass a const reference to a vector of bit sizes.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-26T21:01:14Z",
      "diff_hunk" : "@@ -0,0 +1,103 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+\n+int DecodeBits(const std::vector<bool> &stream, int* bitpos, int minval, const int bit_sizes[], int bit_sizes_n)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317796962",
      "id" : 317796962,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzc5Njk2Mg==",
      "original_commit_id" : "229da7eb00622a25a948a2f554883f605ffea57a",
      "original_position" : 8,
      "path" : "src/util/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 279835662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317796962",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317797182"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317797182"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Similarly for these you can pass a start and end iterator to the bits in the vector.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-26T21:01:48Z",
      "diff_hunk" : "@@ -0,0 +1,103 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+\n+int DecodeBits(const std::vector<bool> &stream, int* bitpos, int minval, const int bit_sizes[], int bit_sizes_n)\n+{\n+    int val = minval;\n+    bool bit;\n+    for (int pos = 0; pos < bit_sizes_n; pos++) {\n+        int bit_size = bit_sizes[pos];\n+        if (pos + 1 < bit_sizes_n) {\n+            bit = stream.at(*bitpos);\n+            *bitpos = *bitpos + 1;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << bit_size);\n+        } else {\n+            for (int b = 0; b < bit_size; b++) {\n+                bit = stream.at(*bitpos);\n+                *bitpos = *bitpos + 1;\n+                val += bit << (bit_size - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;\n+}\n+\n+const int TYPE_BIT_SIZES[] = {0, 0, 1};\n+int DecodeType(const std::vector<bool> &stream, int* bitpos)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317797182",
      "id" : 317797182,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzc5NzE4Mg==",
      "original_commit_id" : "229da7eb00622a25a948a2f554883f605ffea57a",
      "original_position" : 35,
      "path" : "src/util/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 279835662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317797182",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317797688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317797688"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You probably want to use `uint32_t` as return type here and the functions calling it, as `int` doesn't have a well defined range.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-26T21:03:12Z",
      "diff_hunk" : "@@ -0,0 +1,103 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+\n+int DecodeBits(const std::vector<bool> &stream, int* bitpos, int minval, const int bit_sizes[], int bit_sizes_n)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317797688",
      "id" : 317797688,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzc5NzY4OA==",
      "original_commit_id" : "229da7eb00622a25a948a2f554883f605ffea57a",
      "original_position" : 8,
      "path" : "src/util/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 279835662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317797688",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317798246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317798246"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Most of the functions and global constants in this file can be in an anonymous namespace (which makes them not pollute the global namespace, and allows some optimizations).",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-26T21:04:42Z",
      "diff_hunk" : "@@ -0,0 +1,103 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+\n+int DecodeBits(const std::vector<bool> &stream, int* bitpos, int minval, const int bit_sizes[], int bit_sizes_n)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317798246",
      "id" : 317798246,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzc5ODI0Ng==",
      "original_commit_id" : "229da7eb00622a25a948a2f554883f605ffea57a",
      "original_position" : 8,
      "path" : "src/util/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 279835662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317798246",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317798736"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317798736"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can use src/crypto/common.h's `CountBits` for this (which uses the efficient `__builtin_clz` if it exists).",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-26T21:05:53Z",
      "diff_hunk" : "@@ -0,0 +1,103 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+\n+int DecodeBits(const std::vector<bool> &stream, int* bitpos, int minval, const int bit_sizes[], int bit_sizes_n)\n+{\n+    int val = minval;\n+    bool bit;\n+    for (int pos = 0; pos < bit_sizes_n; pos++) {\n+        int bit_size = bit_sizes[pos];\n+        if (pos + 1 < bit_sizes_n) {\n+            bit = stream.at(*bitpos);\n+            *bitpos = *bitpos + 1;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << bit_size);\n+        } else {\n+            for (int b = 0; b < bit_size; b++) {\n+                bit = stream.at(*bitpos);\n+                *bitpos = *bitpos + 1;\n+                val += bit << (bit_size - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;\n+}\n+\n+const int TYPE_BIT_SIZES[] = {0, 0, 1};\n+int DecodeType(const std::vector<bool> &stream, int* bitpos)\n+{\n+    return DecodeBits(stream, bitpos, 0, TYPE_BIT_SIZES, 3);\n+}\n+\n+const int ASN_BIT_SIZES[] = {15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n+int DecodeASN(const std::vector<bool> &stream, int* bitpos)\n+{\n+    return DecodeBits(stream, bitpos, 1, ASN_BIT_SIZES, 10);\n+}\n+\n+const int MATCH_BIT_SIZES[] = {1, 2, 3, 4, 5, 6, 7, 8};\n+int DecodeMatch(const std::vector<bool> &stream, int* bitpos)\n+{\n+    return DecodeBits(stream, bitpos, 2, MATCH_BIT_SIZES, 8);\n+}\n+\n+const int JUMP_BIT_SIZES[] = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n+int DecodeJump(const std::vector<bool> &stream, int* bitpos) {\n+    return DecodeBits(stream, bitpos, 17, JUMP_BIT_SIZES, 26);\n+}\n+\n+int BitLength(int target)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r317798736",
      "id" : 317798736,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzc5ODczNg==",
      "original_commit_id" : "229da7eb00622a25a948a2f554883f605ffea57a",
      "original_position" : 57,
      "path" : "src/util/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 279835662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317798736",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318238276"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318238276"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\nsrc/util/asmap.h seems to be missing the expected include guard:\r\n  #ifndef BITCOIN_UTIL_ASMAP_H\r\n  #define BITCOIN_UTIL_ASMAP_H\r\n  ...\r\n  #endif // BITCOIN_UTIL_ASMAP_H",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-27T18:43:59Z",
      "diff_hunk" : "@@ -0,0 +1,5 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318238276",
      "id" : 318238276,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODIzODI3Ng==",
      "original_commit_id" : "0921912adb68078fa47c7552758b4af3f88828e2",
      "original_position" : 4,
      "path" : "src/util/asmap.h",
      "position" : 4,
      "pull_request_review_id" : 280398196,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318238276",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318245688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318245688"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Will do. What is it actually used for?",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-27T19:01:00Z",
      "diff_hunk" : "@@ -0,0 +1,5 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318245688",
      "id" : 318245688,
      "in_reply_to_id" : 318238276,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODI0NTY4OA==",
      "original_commit_id" : "0921912adb68078fa47c7552758b4af3f88828e2",
      "original_position" : 4,
      "path" : "src/util/asmap.h",
      "position" : 4,
      "pull_request_review_id" : 280407630,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318245688",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318253311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318253311"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think compilers will spit out warnings if symbols are declared more than once. This will happen with this header, if it is (indirectly) included twice.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-27T19:19:39Z",
      "diff_hunk" : "@@ -0,0 +1,5 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318253311",
      "id" : 318253311,
      "in_reply_to_id" : 318238276,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODI1MzMxMQ==",
      "original_commit_id" : "0921912adb68078fa47c7552758b4af3f88828e2",
      "original_position" : 4,
      "path" : "src/util/asmap.h",
      "position" : 4,
      "pull_request_review_id" : 280417242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318253311",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318465087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318465087"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why isn't it usable from the command line?",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-28T08:52:20Z",
      "diff_hunk" : "@@ -429,6 +435,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-peertimeout=<n>\", strprintf(\"Specify p2p connection timeout in seconds. This option determines the amount of time a peer may be inactive before the connection to it is dropped. (minimum: 1, default: %d)\", DEFAULT_PEER_CONNECT_TIMEOUT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping, relative to the -datadir path (only useable from configuration file, not command line)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318465087",
      "id" : 318465087,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODQ2NTA4Nw==",
      "original_commit_id" : "d688a65773f7e1fabf749a185186515a5523b202",
      "original_position" : 25,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 280680935,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318465087",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318475859"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318475859"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Bump `nVersion` if `-asmap` is set? ",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-28T09:15:52Z",
      "diff_hunk" : "@@ -304,8 +337,13 @@ class CAddrMan\n \n         unsigned char nVersion = 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318475859",
      "id" : 318475859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODQ3NTg1OQ==",
      "original_commit_id" : "d688a65773f7e1fabf749a185186515a5523b202",
      "original_position" : 74,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 280680935,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318475859",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318600401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318600401"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "no real reason, will allow command line ",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-28T14:05:33Z",
      "diff_hunk" : "@@ -429,6 +435,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-peertimeout=<n>\", strprintf(\"Specify p2p connection timeout in seconds. This option determines the amount of time a peer may be inactive before the connection to it is dropped. (minimum: 1, default: %d)\", DEFAULT_PEER_CONNECT_TIMEOUT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping, relative to the -datadir path (only useable from configuration file, not command line)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318600401",
      "id" : 318600401,
      "in_reply_to_id" : 318465087,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODYwMDQwMQ==",
      "original_commit_id" : "d688a65773f7e1fabf749a185186515a5523b202",
      "original_position" : 25,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 280855040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318600401",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318636426"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318636426"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See https://en.wikipedia.org/wiki/Include_guard",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-28T15:08:53Z",
      "diff_hunk" : "@@ -0,0 +1,5 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318636426",
      "id" : 318636426,
      "in_reply_to_id" : 318238276,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODYzNjQyNg==",
      "original_commit_id" : "0921912adb68078fa47c7552758b4af3f88828e2",
      "original_position" : 4,
      "path" : "src/util/asmap.h",
      "position" : 4,
      "pull_request_review_id" : 280902010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318636426",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318654442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318654442"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I hesitated to do this because I don't have a good sense of when the version number should be used for in this context.\r\nIn my implementation nKeySize tells you whether hash is present or not. Perhaps you're right and nVersion is a better way to track whether asmap is present.\r\n\r\nOpinions from other reviewers?",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-28T15:42:06Z",
      "diff_hunk" : "@@ -304,8 +337,13 @@ class CAddrMan\n \n         unsigned char nVersion = 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318654442",
      "id" : 318654442,
      "in_reply_to_id" : 318475859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODY1NDQ0Mg==",
      "original_commit_id" : "d688a65773f7e1fabf749a185186515a5523b202",
      "original_position" : 74,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 280925217,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318654442",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318656660"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318656660"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I would say `nVersion` says something about backwards compatibility, but at first glance it doesn't look like the current version rejects a higher `nVersion`. In any case I prefer directly checking the version over implicit checks that will confuse future devs.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-28T15:46:07Z",
      "diff_hunk" : "@@ -304,8 +337,13 @@ class CAddrMan\n \n         unsigned char nVersion = 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318656660",
      "id" : 318656660,
      "in_reply_to_id" : 318475859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODY1NjY2MA==",
      "original_commit_id" : "d688a65773f7e1fabf749a185186515a5523b202",
      "original_position" : 74,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 280927900,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318656660",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318679687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318679687"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If you feed addrman serialized by my current implementation to the pre-PR code, ```keySize != 32``` will fail.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-28T16:34:10Z",
      "diff_hunk" : "@@ -304,8 +337,13 @@ class CAddrMan\n \n         unsigned char nVersion = 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318679687",
      "id" : 318679687,
      "in_reply_to_id" : 318475859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODY3OTY4Nw==",
      "original_commit_id" : "d688a65773f7e1fabf749a185186515a5523b202",
      "original_position" : 74,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 280957005,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318679687",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318722425"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318722425"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you're swapping bit order here. The high bits from the IP's bytes should go first.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-08-28T18:12:01Z",
      "diff_hunk" : "@@ -470,6 +471,25 @@ std::vector<unsigned char> CNetAddr::GetGroup() const\n     else\n         nBits = 32;\n \n+    // Ignore nBits, use 128 bits to obtain ASN\n+    if (asmap.size() != 0 && (nClass == NET_IPV4 || nClass == NET_IPV6)) {\n+        nClass = NET_IPV6;\n+        std::vector<bool> ip_bits(128);\n+        for (int8_t byte_i = 0; byte_i < 16; ++byte_i) {\n+            uint8_t cur_byte = GetByte(byte_i);\n+            for (uint8_t bit_i = 0; bit_i < 8; ++bit_i) {\n+                ip_bits[byte_i * 8 + bit_i] = (cur_byte >> bit_i) & 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r318722425",
      "id" : 318722425,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODcyMjQyNQ==",
      "original_commit_id" : "7450dab5764d52f4bb73a16f7ae97578b7dba00f",
      "original_position" : 28,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 281011720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318722425",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-09-07T11:32:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-529099959",
      "id" : 529099959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyOTA5OTk1OQ==",
      "updated_at" : "2019-09-07T11:32:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529099959",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Do we need to know the actual ASNs, or isn't it enough to just differentiate between distinct ASNs without necessarily knowing their numbers?\r\n\r\nRe Tor: Tor is centralised, so does it actually protect from partitioning at all?",
      "created_at" : "2019-09-20T21:13:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-533710818",
      "id" : 533710818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMzcxMDgxOA==",
      "updated_at" : "2019-09-20T21:13:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/533710818",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@luke-jr there is no particular requirement in knowing the actual AS numbers, at least in a simplified .\r\nDo you see a way to optimize it by not using ASNs?\r\n\r\nAlso, I suggest to not have Tor discussion here. It seems there are couple more relevant PRs now.",
      "created_at" : "2019-09-21T12:59:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-533796151",
      "id" : 533796151,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMzc5NjE1MQ==",
      "updated_at" : "2019-09-21T12:59:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/533796151",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I haven't looked at the actual implementation, but it seems obvious that if we don't need to know the AS numbers, then not using them can make the asmap file even smaller (unless it already is omitting them).",
      "created_at" : "2019-09-21T13:38:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-533798722",
      "id" : 533798722,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMzc5ODcyMg==",
      "updated_at" : "2019-09-21T13:38:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/533798722",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(But if we tie the address database to known-AS asmap data, it may become more difficult to remove the specific AS numbers later...)",
      "created_at" : "2019-09-21T13:39:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-533798805",
      "id" : 533798805,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMzc5ODgwNQ==",
      "updated_at" : "2019-09-21T13:39:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/533798805",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK (adding 0.20 milestone optimistically)",
      "created_at" : "2019-11-01T10:11:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-548736168",
      "id" : 548736168,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODczNjE2OA==",
      "updated_at" : "2019-11-01T10:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548736168",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased and cleaned up commits. Should be ready for review.\r\nI would also suggest taking a look at the related [issue](https://github.com/bitcoin/bitcoin/issues/16599), which has more high-level discussion on the consequences of this change.",
      "created_at" : "2019-11-25T22:02:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-558359839",
      "id" : 558359839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1ODM1OTgzOQ==",
      "updated_at" : "2019-11-25T22:02:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558359839",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs Nice -- good timing. I'd like to host this PR for the PR review club session on Wednesday, December 11th. Would you be available to join in/co-host/participate?",
      "created_at" : "2019-11-28T17:40:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-559570540",
      "id" : 559570540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTU3MDU0MA==",
      "updated_at" : "2019-11-28T17:40:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559570540",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Review meeting on this PR is up: https://bitcoincore.reviews/16702.html... could @fanquake or someone add a `review club` label here?",
      "created_at" : "2019-11-29T09:29:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-559722751",
      "id" : 559722751,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTcyMjc1MQ==",
      "updated_at" : "2019-11-29T09:29:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559722751",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Sjors \r\n>Do we need to reconsider the number of buckets and their size?\r\n\r\nThis is a sensitive topic: [Ethan's Eclipse paper](https://www.usenix.org/node/190891) suggests more buckets, [Erebus](https://erebus-attack.comp.nus.edu.sg/) suggests less buckets...\r\nSo I would keep this discussion out of the PR.",
      "created_at" : "2019-12-05T21:19:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-562322811",
      "id" : 562322811,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MjMyMjgxMQ==",
      "updated_at" : "2019-12-05T21:19:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562322811",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356507305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356507305"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: s/exsiting/existing/",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T10:10:33Z",
      "diff_hunk" : "@@ -268,6 +275,46 @@ class CAddrMan\n     void SetServices_(const CService &addr, ServiceFlags nServices) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n public:\n+    // Compressed IP->ASN mapping, loaded from a file when a node starts.\n+    // Should be always empty if no file was provided.\n+    // This mapping is then used for bucketing nodes in Addrman.\n+    //\n+    // If asmap is provided, nodes will be bucketed by\n+    // AS they belong to, in order to make impossible for a node\n+    // to connect to several nodes hosted in a single AS.\n+    // This is done in response to Erebus attack, but also to generally\n+    // diversify the connections every node creates,\n+    // especially useful when a large fraction of nodes\n+    // operate under a couple of cloud providers.\n+    //\n+    // If a new asmap was provided, the exsiting records",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356507305",
      "id" : 356507305,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjUwNzMwNQ==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 62,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 330426658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356507305",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356614688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356614688"
         }
      },
      "author_association" : "MEMBER",
      "body" : "would generally prefer for the implementation of this function to in the `cpp` instead of the header, is there a specific reason to put it here?",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T14:02:14Z",
      "diff_hunk" : "@@ -268,6 +275,46 @@ class CAddrMan\n     void SetServices_(const CService &addr, ServiceFlags nServices) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n public:\n+    // Compressed IP->ASN mapping, loaded from a file when a node starts.\n+    // Should be always empty if no file was provided.\n+    // This mapping is then used for bucketing nodes in Addrman.\n+    //\n+    // If asmap is provided, nodes will be bucketed by\n+    // AS they belong to, in order to make impossible for a node\n+    // to connect to several nodes hosted in a single AS.\n+    // This is done in response to Erebus attack, but also to generally\n+    // diversify the connections every node creates,\n+    // especially useful when a large fraction of nodes\n+    // operate under a couple of cloud providers.\n+    //\n+    // If a new asmap was provided, the exsiting records\n+    // would be re-bucketed accordingly.\n+    std::vector<bool> m_asmap;\n+\n+    static std::vector<bool> DecodeAsmap(fs::path path)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356614688",
      "id" : 356614688,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjYxNDY4OA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 66,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 330559968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356614688",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "meta: if you want to be credited correctly, please change your gitconfig user.name to something other than \"User\" and `git commit --amend --reset-author` your commits:\r\n```bash\r\n$ git show --pretty=full 4128c9c8124e4627cc45f6df2b7017a89296fc5a\r\ncommit 4128c9c8124e4627cc45f6df2b7017a89296fc5a (pull/16702/head)\r\nAuthor:     User <â¦@â¦>\r\nCommit:     User <â¦@â¦>\r\n```",
      "created_at" : "2019-12-11T14:06:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-564557409",
      "id" : 564557409,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDU1NzQwOQ==",
      "updated_at" : "2019-12-11T14:06:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564557409",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356722432"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356722432"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason this is placed last instead of in alphabetical order?",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T17:05:43Z",
      "diff_hunk" : "@@ -525,6 +526,7 @@ libbitcoin_util_a_SOURCES = \\\n   util/time.cpp \\\n   util/url.cpp \\\n   util/validation.cpp \\\n+  util/asmap.cpp \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356722432",
      "id" : 356722432,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjcyMjQzMg==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 12,
      "path" : "src/Makefile.am",
      "position" : null,
      "pull_request_review_id" : 330426658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356722432",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356739537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356739537"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it be possible to distinguish between no file found, and file that cannot be opened? I can across this the first few tries and it reads more like a file is found but cannot be opened, rather than no file being found which was the actual case (and probably the more frequent one) if the wrong path to the file is entered.",
      "commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "created_at" : "2019-12-11T17:40:46Z",
      "diff_hunk" : "@@ -268,6 +275,46 @@ class CAddrMan\n     void SetServices_(const CService &addr, ServiceFlags nServices) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n public:\n+    // Compressed IP->ASN mapping, loaded from a file when a node starts.\n+    // Should be always empty if no file was provided.\n+    // This mapping is then used for bucketing nodes in Addrman.\n+    //\n+    // If asmap is provided, nodes will be bucketed by\n+    // AS they belong to, in order to make impossible for a node\n+    // to connect to several nodes hosted in a single AS.\n+    // This is done in response to Erebus attack, but also to generally\n+    // diversify the connections every node creates,\n+    // especially useful when a large fraction of nodes\n+    // operate under a couple of cloud providers.\n+    //\n+    // If a new asmap was provided, the exsiting records\n+    // would be re-bucketed accordingly.\n+    std::vector<bool> m_asmap;\n+\n+    static std::vector<bool> DecodeAsmap(fs::path path)\n+    {\n+        std::vector<bool> bits;\n+        FILE *filestr = fsbridge::fopen(path, \"rb\");\n+        CAutoFile file(filestr, SER_DISK, CLIENT_VERSION);\n+        if (file.IsNull()) {\n+            LogPrintf(\"Failed to open asmap file from disk.\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356739537",
      "id" : 356739537,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjczOTUzNw==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 72,
      "path" : "src/addrman.h",
      "position" : 72,
      "pull_request_review_id" : 330426658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-11T17:59:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356739537",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356740713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356740713"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could add code documentation here? Is this the same as line 320 above: `version byte (currently 1)`?",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T17:43:15Z",
      "diff_hunk" : "@@ -302,7 +349,7 @@ class CAddrMan\n     {\n         LOCK(cs);\n \n-        unsigned char nVersion = 1;\n+        unsigned char nVersion = 2;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356740713",
      "id" : 356740713,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njc0MDcxMw==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 98,
      "path" : "src/addrman.h",
      "position" : 82,
      "pull_request_review_id" : 330426658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356740713",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356742334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356742334"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I could be misunderstanding; should this comment be 2 lines lower if it refers to the first part of the conditional?",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T17:46:47Z",
      "diff_hunk" : "@@ -417,20 +460,48 @@ class CAddrMan\n         }\n         nTried -= nLost;\n \n-        // Deserialize positions in the new table (if possible).\n+        // Store positions in the new table buckets to apply later (if possible).\n+        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n+\n         for (int bucket = 0; bucket < nUBuckets; bucket++) {\n             int nSize = 0;\n             s >> nSize;\n             for (int n = 0; n < nSize; n++) {\n                 int nIndex = 0;\n                 s >> nIndex;\n                 if (nIndex >= 0 && nIndex < nNew) {\n-                    CAddrInfo &info = mapInfo[nIndex];\n-                    int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-                    if (nVersion == 1 && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 && info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS) {\n-                        info.nRefCount++;\n-                        vvNew[bucket][nUBucketPos] = nIndex;\n-                    }\n+                    entryToBucket[nIndex] = bucket;\n+                }\n+            }\n+        }\n+\n+        uint256 supplied_asmap_version;\n+        if (m_asmap.size() != 0) {\n+            supplied_asmap_version = SerializeHash(m_asmap);\n+        }\n+        uint256 serialized_asmap_version;\n+        if (nVersion > 1) {\n+            s >> serialized_asmap_version;\n+        }\n+\n+        for (int n = 0; n < nNew; n++) {\n+            CAddrInfo &info = mapInfo[n];\n+            int bucket = entryToBucket[n];\n+            int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n+            // Bucketing has not changed, using existing bucket positions for the new table",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356742334",
      "id" : 356742334,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njc0MjMzNA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 189,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 330426658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356742334",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356744971"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356744971"
         }
      },
      "author_association" : "MEMBER",
      "body" : "suggestion: add the default\r\n```diff\r\nANY, OptionsCategory::CONNECTION);\r\n-    gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping, relative to the -datadir path\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\r\n+    gArgs.AddArg(\"-asmap=<file>\", strprintf(\"Specify asn mapping, relative to the -datadir path (default: %u)\", DEFAULT_ASMAP_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\r\n```",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T17:52:26Z",
      "diff_hunk" : "@@ -426,6 +432,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-peertimeout=<n>\", strprintf(\"Specify p2p connection timeout in seconds. This option determines the amount of time a peer may be inactive before the connection to it is dropped. (minimum: 1, default: %d)\", DEFAULT_PEER_CONNECT_TIMEOUT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping, relative to the -datadir path\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356744971",
      "id" : 356744971,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njc0NDk3MQ==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 25,
      "path" : "src/init.cpp",
      "position" : 25,
      "pull_request_review_id" : 330426658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356744971",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "As requested I'm expanding on my comments from PR review club.\r\n\r\nI canÂ see the case for merging this but it does make addrmanâs behavior more complex.\r\n\r\n**Complexity costs to discovering and fixing bugs:**\r\nHaving outgoing connection logic depend on asmap makes reasoning about connection behavior harder.\r\n\r\nFor instance consider a bug causing outgoing connections are being made to IP addresses in the same group. This would fairly easy to detect in the current logic, you would just look at the log files and see outgoing connections to the same /16. Under the new logic you would need to read and understand which IPs belonged to which ASNs and then use that logic to understand the logs. \r\n\r\n@jnewbery brought up that better logging in this PR could make reduce the impact on debugging. I agree and II would suggest adding the following log statement when determining the group of an IP:\r\n`IP 1.2.3.4 from ASN 444 in group 56`\r\n\r\nThat being said, it may still be the case that if the bug exists in the group logic it may not show up in the log files.",
      "created_at" : "2019-12-11T18:52:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-564681862",
      "id" : 564681862,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDY4MTg2Mg==",
      "updated_at" : "2019-12-11T18:52:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564681862",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "One thought I had during PR review club was that it might be interesting to see each peer's ASN in `rpc getpeerinfo` where possible.",
      "created_at" : "2019-12-11T19:00:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-564685093",
      "id" : 564685093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDY4NTA5Mw==",
      "updated_at" : "2019-12-11T19:00:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564685093",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356779224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356779224"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What is the argument that a corrupted asmap file can't cause an infinite loop here? I could be reading this wrong but it seems like an op_code 1 that jumps to itself it will never exit.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T19:05:15Z",
      "diff_hunk" : "@@ -0,0 +1,97 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+#include <crypto/common.h>\n+\n+namespace {\n+\n+uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, const std::vector<uint8_t> &bit_sizes)\n+{\n+    uint32_t val = minval;\n+    bool bit;\n+    for (std::vector<uint8_t>::const_iterator bit_sizes_it = bit_sizes.begin();\n+        bit_sizes_it != bit_sizes.end(); ++bit_sizes_it) {\n+        if (bit_sizes_it + 1 != bit_sizes.end()) {\n+            bit = *bitpos;\n+            bitpos++;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << *bit_sizes_it);\n+        } else {\n+            for (int b = 0; b < *bit_sizes_it; b++) {\n+                bit = *bitpos;\n+                bitpos++;\n+                val += bit << (*bit_sizes_it - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;\n+}\n+\n+const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+}\n+\n+const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+}\n+\n+\n+const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+}\n+\n+\n+const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+}\n+\n+}\n+\n+uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n+{\n+    std::vector<bool>::const_iterator pos = asmap.begin();\n+    uint8_t bits = ip.size();\n+    uint8_t default_asn = 0;\n+    uint32_t opcode, jump, match, matchlen;\n+    while (1) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356779224",
      "id" : 356779224,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njc3OTIyNA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 71,
      "path" : "src/util/asmap.cpp",
      "position" : 71,
      "pull_request_review_id" : 330772088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356779224",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356782592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356782592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "DecodeType increments `pos` itself. The jump is relative to the end of the jump instruction.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T19:12:20Z",
      "diff_hunk" : "@@ -0,0 +1,97 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+#include <crypto/common.h>\n+\n+namespace {\n+\n+uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, const std::vector<uint8_t> &bit_sizes)\n+{\n+    uint32_t val = minval;\n+    bool bit;\n+    for (std::vector<uint8_t>::const_iterator bit_sizes_it = bit_sizes.begin();\n+        bit_sizes_it != bit_sizes.end(); ++bit_sizes_it) {\n+        if (bit_sizes_it + 1 != bit_sizes.end()) {\n+            bit = *bitpos;\n+            bitpos++;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << *bit_sizes_it);\n+        } else {\n+            for (int b = 0; b < *bit_sizes_it; b++) {\n+                bit = *bitpos;\n+                bitpos++;\n+                val += bit << (*bit_sizes_it - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;\n+}\n+\n+const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+}\n+\n+const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+}\n+\n+\n+const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+}\n+\n+\n+const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+}\n+\n+}\n+\n+uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n+{\n+    std::vector<bool>::const_iterator pos = asmap.begin();\n+    uint8_t bits = ip.size();\n+    uint8_t default_asn = 0;\n+    uint32_t opcode, jump, match, matchlen;\n+    while (1) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356782592",
      "id" : 356782592,
      "in_reply_to_id" : 356779224,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njc4MjU5Mg==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 71,
      "path" : "src/util/asmap.cpp",
      "position" : 71,
      "pull_request_review_id" : 330776440,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356782592",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356784516"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356784516"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "1. What happens when you return `-1` and the type is  `uint32_t`? Does it return `(2^32)-1`?\r\n\r\n2. It doesn't seem like anything checks for `-1` to catch this error. \r\n\r\n3. If the call stack was `DecodeJump-->DecodeBits` and `DecodeBits` returns `-1` then the next operation would be `pos += jump;` where `jump=-1`. Does this then integer overflow `pos`?\r\n\r\n",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T19:16:16Z",
      "diff_hunk" : "@@ -0,0 +1,97 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+#include <crypto/common.h>\n+\n+namespace {\n+\n+uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, const std::vector<uint8_t> &bit_sizes)\n+{\n+    uint32_t val = minval;\n+    bool bit;\n+    for (std::vector<uint8_t>::const_iterator bit_sizes_it = bit_sizes.begin();\n+        bit_sizes_it != bit_sizes.end(); ++bit_sizes_it) {\n+        if (bit_sizes_it + 1 != bit_sizes.end()) {\n+            bit = *bitpos;\n+            bitpos++;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << *bit_sizes_it);\n+        } else {\n+            for (int b = 0; b < *bit_sizes_it; b++) {\n+                bit = *bitpos;\n+                bitpos++;\n+                val += bit << (*bit_sizes_it - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356784516",
      "id" : 356784516,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njc4NDUxNg==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 34,
      "path" : "src/util/asmap.cpp",
      "position" : 34,
      "pull_request_review_id" : 330778917,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356784516",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356785710"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356785710"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It might make sense to log how we ended up here since it seems like something real bad must've happened. Is there any way to recover or is this case so bad that should the Bitcoin node should immediately stop?",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T19:18:36Z",
      "diff_hunk" : "@@ -0,0 +1,97 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+#include <crypto/common.h>\n+\n+namespace {\n+\n+uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, const std::vector<uint8_t> &bit_sizes)\n+{\n+    uint32_t val = minval;\n+    bool bit;\n+    for (std::vector<uint8_t>::const_iterator bit_sizes_it = bit_sizes.begin();\n+        bit_sizes_it != bit_sizes.end(); ++bit_sizes_it) {\n+        if (bit_sizes_it + 1 != bit_sizes.end()) {\n+            bit = *bitpos;\n+            bitpos++;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << *bit_sizes_it);\n+        } else {\n+            for (int b = 0; b < *bit_sizes_it; b++) {\n+                bit = *bitpos;\n+                bitpos++;\n+                val += bit << (*bit_sizes_it - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;\n+}\n+\n+const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+}\n+\n+const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+}\n+\n+\n+const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+}\n+\n+\n+const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+}\n+\n+}\n+\n+uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n+{\n+    std::vector<bool>::const_iterator pos = asmap.begin();\n+    uint8_t bits = ip.size();\n+    uint8_t default_asn = 0;\n+    uint32_t opcode, jump, match, matchlen;\n+    while (1) {\n+        assert(pos != asmap.end());\n+        opcode = DecodeType(pos);\n+        if (opcode == 0) {\n+            return DecodeASN(pos);\n+        } else if (opcode == 1) {\n+            jump = DecodeJump(pos);\n+            if (ip[ip.size() - bits]) {\n+                pos += jump;\n+            }\n+            bits--;\n+        } else if (opcode == 2) {\n+            match = DecodeMatch(pos);\n+            matchlen = CountBits(match) - 1;\n+            for (uint32_t bit = 0; bit < matchlen; bit++) {\n+                if ((ip[ip.size() - bits]) != ((match >> (matchlen - 1 - bit)) & 1)) {\n+                    return default_asn;\n+                }\n+                bits--;\n+            }\n+        } else if (opcode == 3) {\n+            default_asn = DecodeASN(pos);\n+        } else {\n+            assert(0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356785710",
      "id" : 356785710,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njc4NTcxMA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 94,
      "path" : "src/util/asmap.cpp",
      "position" : 94,
      "pull_request_review_id" : 330780400,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356785710",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356786391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356786391"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I would suggest using an enum or some constant to help document the intent of these values",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T19:19:59Z",
      "diff_hunk" : "@@ -0,0 +1,97 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+#include <crypto/common.h>\n+\n+namespace {\n+\n+uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, const std::vector<uint8_t> &bit_sizes)\n+{\n+    uint32_t val = minval;\n+    bool bit;\n+    for (std::vector<uint8_t>::const_iterator bit_sizes_it = bit_sizes.begin();\n+        bit_sizes_it != bit_sizes.end(); ++bit_sizes_it) {\n+        if (bit_sizes_it + 1 != bit_sizes.end()) {\n+            bit = *bitpos;\n+            bitpos++;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << *bit_sizes_it);\n+        } else {\n+            for (int b = 0; b < *bit_sizes_it; b++) {\n+                bit = *bitpos;\n+                bitpos++;\n+                val += bit << (*bit_sizes_it - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;\n+}\n+\n+const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+}\n+\n+const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+}\n+\n+\n+const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+}\n+\n+\n+const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+}\n+\n+}\n+\n+uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n+{\n+    std::vector<bool>::const_iterator pos = asmap.begin();\n+    uint8_t bits = ip.size();\n+    uint8_t default_asn = 0;\n+    uint32_t opcode, jump, match, matchlen;\n+    while (1) {\n+        assert(pos != asmap.end());\n+        opcode = DecodeType(pos);\n+        if (opcode == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356786391",
      "id" : 356786391,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njc4NjM5MQ==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 74,
      "path" : "src/util/asmap.cpp",
      "position" : 74,
      "pull_request_review_id" : 330781251,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356786391",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356790248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356790248"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd add parens here to make the order of operations more explicit to a reader\r\n`(asn >> (8 * i)) & 0xFF`",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T19:27:50Z",
      "diff_hunk" : "@@ -470,6 +471,27 @@ std::vector<unsigned char> CNetAddr::GetGroup() const\n     else\n         nBits = 32;\n \n+    // If asmap is supplied and the address is IPv4/IPv6,\n+    // ignore nBits and use 32/128 bits to obtain ASN from asmap.\n+    // ASN is then returned to be used for bucketing.\n+    if (asmap.size() != 0 && (nClass == NET_IPV4 || nClass == NET_IPV6)) {\n+        nClass = NET_IPV6;\n+        std::vector<bool> ip_bits(128);\n+        for (int8_t byte_i = 0; byte_i < 16; ++byte_i) {\n+            uint8_t cur_byte = GetByte(15 - byte_i);\n+            for (uint8_t bit_i = 0; bit_i < 8; ++bit_i) {\n+                ip_bits[byte_i * 8 + bit_i] = (cur_byte >> (7 - bit_i)) & 1;\n+            }\n+        }\n+\n+        uint32_t asn = Interpret(asmap, ip_bits);\n+        vchRet.push_back(nClass);\n+        for (int i = 0; i < 4; i++) {\n+            vchRet.push_back(asn >> (8 * i) & 0xFF);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356790248",
      "id" : 356790248,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njc5MDI0OA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 37,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 330786137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356790248",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356811171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356811171"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That makes sense. I guess you'd need to exploit an integer overflow.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T20:13:26Z",
      "diff_hunk" : "@@ -0,0 +1,97 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+#include <crypto/common.h>\n+\n+namespace {\n+\n+uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, const std::vector<uint8_t> &bit_sizes)\n+{\n+    uint32_t val = minval;\n+    bool bit;\n+    for (std::vector<uint8_t>::const_iterator bit_sizes_it = bit_sizes.begin();\n+        bit_sizes_it != bit_sizes.end(); ++bit_sizes_it) {\n+        if (bit_sizes_it + 1 != bit_sizes.end()) {\n+            bit = *bitpos;\n+            bitpos++;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << *bit_sizes_it);\n+        } else {\n+            for (int b = 0; b < *bit_sizes_it; b++) {\n+                bit = *bitpos;\n+                bitpos++;\n+                val += bit << (*bit_sizes_it - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;\n+}\n+\n+const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+}\n+\n+const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+}\n+\n+\n+const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+}\n+\n+\n+const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+{\n+    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+}\n+\n+}\n+\n+uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n+{\n+    std::vector<bool>::const_iterator pos = asmap.begin();\n+    uint8_t bits = ip.size();\n+    uint8_t default_asn = 0;\n+    uint32_t opcode, jump, match, matchlen;\n+    while (1) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356811171",
      "id" : 356811171,
      "in_reply_to_id" : 356779224,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjgxMTE3MQ==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 71,
      "path" : "src/util/asmap.cpp",
      "position" : 71,
      "pull_request_review_id" : 330813034,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356811171",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356832913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356832913"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Further to https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356739537, would suggest here `\"Could not find or parse specified asmap: '%s'\"`.\r\n\r\nRationale: the most frequent cause is likely to be an incorrect path or filename, not an unparseable file, and this error message will be output in both cases.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T21:05:04Z",
      "diff_hunk" : "@@ -1807,6 +1814,21 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // set asmap if supplied\n+    if (gArgs.IsArgSet(\"-asmap\")) {\n+        const fs::path asmap_path = GetDataDir() / gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);\n+        std::vector<bool> asmap = CAddrMan::DecodeAsmap(asmap_path);\n+        if (asmap.size() == 0) {\n+            InitError(strprintf(_(\"Could not parse specified asmap: '%s'\").translated, asmap_path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356832913",
      "id" : 356832913,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjgzMjkxMw==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 38,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 330841850,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356832913",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "4b6543941 isn't compiling for me. I'm getting two errors in `test/addrman_tests.cpp` based on changes to `GetTriedBucket` and `GetNewBucket`.",
      "created_at" : "2019-12-11T21:13:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-564735414",
      "id" : 564735414,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDczNTQxNA==",
      "updated_at" : "2019-12-11T21:13:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564735414",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356839948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356839948"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This appears to be a bug. Passing `-asmap` with no file specified returns:\r\n`Error: Could not parse specified asmap: '\"/home/jon/.bitcoin\"'`\r\n\r\nIt seems it should error by looking for the default file defined in [line 104](https://github.com/bitcoin/bitcoin/pull/16702/files#diff-c865a8939105e6350a50af02766291b7R104) above:\r\n`Error: Could not parse specified asmap: '\"/home/jon/.bitcoin/ip_asn.map\"'`\r\n",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T21:20:22Z",
      "diff_hunk" : "@@ -1807,6 +1814,21 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // set asmap if supplied\n+    if (gArgs.IsArgSet(\"-asmap\")) {\n+        const fs::path asmap_path = GetDataDir() / gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356839948",
      "id" : 356839948,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjgzOTk0OA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 35,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 330850237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356839948",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356845287"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356845287"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should it be mentioned in the bitcoind --help that `-asmap` can be passed without a file and in this case it defaults to looking for \"ip_asn.map\" (the `DEFAULT_ASMAP_FILENAME`)",
      "commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "created_at" : "2019-12-11T21:31:49Z",
      "diff_hunk" : "@@ -426,6 +432,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-peertimeout=<n>\", strprintf(\"Specify p2p connection timeout in seconds. This option determines the amount of time a peer may be inactive before the connection to it is dropped. (minimum: 1, default: %d)\", DEFAULT_PEER_CONNECT_TIMEOUT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping, relative to the -datadir path\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356845287",
      "id" : 356845287,
      "in_reply_to_id" : 356744971,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njg0NTI4Nw==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 25,
      "path" : "src/init.cpp",
      "position" : 25,
      "pull_request_review_id" : 330856725,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-11T21:31:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356845287",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356884878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356884878"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think what you want here is:\r\n```diff\r\n-        const fs::path asmap_path = GetDataDir() / gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);\r\n+        std::string asmap_file = gArgs.GetArg(\"-asmap\", \"\");\r\n+        if (asmap_file.empty()) {\r\n+            asmap_file = DEFAULT_ASMAP_FILENAME;\r\n+        }\r\n+        const fs::path asmap_path = GetDataDir() / asmap_file;\r\n```\r\nThis provides the behavior of defaulting to `DEFAULT_ASMAP_FILENAME` if the user passes `-asmap` without a filename.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T23:10:57Z",
      "diff_hunk" : "@@ -1807,6 +1814,21 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // set asmap if supplied\n+    if (gArgs.IsArgSet(\"-asmap\")) {\n+        const fs::path asmap_path = GetDataDir() / gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356884878",
      "id" : 356884878,
      "in_reply_to_id" : 356839948,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njg4NDg3OA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 35,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 330905261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356884878",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356885944"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356885944"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Weird. You're handling a special case when somebody passes -asmap=\"\".\r\nWhat if somebody passes -asmap=\" \" or asmap=\"/\"? These are conditions, which are equally possible in users stupidity. If a user don't want asmap, they ignore the flag.\r\nI don't think protecting against a specific case of empty string is reasonable. Other opinions?",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T23:14:24Z",
      "diff_hunk" : "@@ -1807,6 +1814,21 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // set asmap if supplied\n+    if (gArgs.IsArgSet(\"-asmap\")) {\n+        const fs::path asmap_path = GetDataDir() / gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356885944",
      "id" : 356885944,
      "in_reply_to_id" : 356839948,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njg4NTk0NA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 35,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 330906541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356885944",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356886932"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356886932"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suggest to provide feedback on which filename was opened:\r\n```diff\r\n-        LogPrintf(\"Opened asmap file (%d bytes) from disk.\\n\", length);\r\n+        LogPrintf(\"Opened asmap file %s (%d bytes) from disk.\\n\", path, length);\r\n```\r\nTested examples of output:\r\n```\r\nOpened asmap file \"/home/jon/.bitcoin/ip_asn.map\" (932999 bytes) from disk.\r\nOpened asmap file \"/home/jon/.bitcoin/../projects/bitcoin/asmap/demo.map\" (932999 bytes) from disk.\r\n```",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-11T23:17:40Z",
      "diff_hunk" : "@@ -268,6 +275,46 @@ class CAddrMan\n     void SetServices_(const CService &addr, ServiceFlags nServices) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n public:\n+    // Compressed IP->ASN mapping, loaded from a file when a node starts.\n+    // Should be always empty if no file was provided.\n+    // This mapping is then used for bucketing nodes in Addrman.\n+    //\n+    // If asmap is provided, nodes will be bucketed by\n+    // AS they belong to, in order to make impossible for a node\n+    // to connect to several nodes hosted in a single AS.\n+    // This is done in response to Erebus attack, but also to generally\n+    // diversify the connections every node creates,\n+    // especially useful when a large fraction of nodes\n+    // operate under a couple of cloud providers.\n+    //\n+    // If a new asmap was provided, the exsiting records\n+    // would be re-bucketed accordingly.\n+    std::vector<bool> m_asmap;\n+\n+    static std::vector<bool> DecodeAsmap(fs::path path)\n+    {\n+        std::vector<bool> bits;\n+        FILE *filestr = fsbridge::fopen(path, \"rb\");\n+        CAutoFile file(filestr, SER_DISK, CLIENT_VERSION);\n+        if (file.IsNull()) {\n+            LogPrintf(\"Failed to open asmap file from disk.\\n\");\n+            return bits;\n+        }\n+        fseek(filestr, 0, SEEK_END);\n+        int length = ftell(filestr);\n+        LogPrintf(\"Opened asmap file (%d bytes) from disk.\\n\", length);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356886932",
      "id" : 356886932,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njg4NjkzMg==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 77,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 330907717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356886932",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356887454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356887454"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I could be misunderstanding, but in what case is `DEFAULT_ASMAP_FILENAME` used otherwise? This handles the case for passing -asmap, e.g. a user wants asmap bucketing with the default filename. FWIW, I have been testing this PR rebased to master.",
      "commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "created_at" : "2019-12-11T23:19:33Z",
      "diff_hunk" : "@@ -1807,6 +1814,21 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // set asmap if supplied\n+    if (gArgs.IsArgSet(\"-asmap\")) {\n+        const fs::path asmap_path = GetDataDir() / gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r356887454",
      "id" : 356887454,
      "in_reply_to_id" : 356839948,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Njg4NzQ1NA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 35,
      "path" : "src/init.cpp",
      "position" : 35,
      "pull_request_review_id" : 330908336,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-11T23:24:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356887454",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r357139904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357139904"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If I understand the intended interface in this PR:\r\n\r\n1) `bitcoind`: use /16 bucketing\r\n2) `bitcoind -asmap`: use default asmap file in the datadir\r\n3) `bitcoind -asmap=<path-to-file>`: use specifed asmap\r\n\r\nMy suggestion handles case 2.\r\n\r\nI could be confused, but I don't see in what case `DEFAULT_ASMAP_FILENAME` would be used otherwise. AFAICT, behind the `if (gArgs.IsArgSet(\"-asmap\"))` conditional, `DEFAULT_ASMAP_FILENAME` in `gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME)` will never be called.\r\n\r\n\r\n",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-12T13:20:10Z",
      "diff_hunk" : "@@ -1807,6 +1814,21 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // set asmap if supplied\n+    if (gArgs.IsArgSet(\"-asmap\")) {\n+        const fs::path asmap_path = GetDataDir() / gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r357139904",
      "id" : 357139904,
      "in_reply_to_id" : 356839948,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzEzOTkwNA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 35,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 331222888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357139904",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r358009483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358009483"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Edit: tested with different scenarios and @jonatack s code works as described. It loosely follows the same pattern as `-prune` which uses similar behavior of the three cases, so I would say it is consistent as well.\r\n\r\nWith current code starting `bitcoind -asmap` (with no default file present):\r\n```\r\n  2019-12-15T21:40:36Z Opened asmap file (864 bytes) from disk.\r\n  2019-12-15T21:40:36Z\r\n\r\n  ************************\r\n  EXCEPTION: NSt3__18ios_base7failureE\r\n  CAutoFile::read: fread failed: unspecified iostream_category error bitcoin in AppInit()\r\n\r\n  ************************\r\n  EXCEPTION: NSt3__18ios_base7failureE\r\n  CAutoFile::read: fread failed: unspecified iostream_category error bitcoin in AppInit()\r\n```\r\n\r\nWith change:\r\n```\r\n2019-12-15T21:59:13Z Failed to open asmap file from disk.\r\n2019-12-15T21:59:13Z Error: Could not parse specified asmap: '\"/path/to/testnet3/ip_asn.map\"'\r\nError: Could not parse specified asmap: '\"/path/to/testnet3/ip_asn.map\"'\r\n```",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-15T22:04:08Z",
      "diff_hunk" : "@@ -1807,6 +1814,21 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // set asmap if supplied\n+    if (gArgs.IsArgSet(\"-asmap\")) {\n+        const fs::path asmap_path = GetDataDir() / gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r358009483",
      "id" : 358009483,
      "in_reply_to_id" : 356839948,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1ODAwOTQ4Mw==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 35,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 332290599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358009483",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r358011994"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358011994"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@fjahr that version would ignore any user-specified file, e.g. case 3.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-15T22:42:26Z",
      "diff_hunk" : "@@ -1807,6 +1814,21 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // set asmap if supplied\n+    if (gArgs.IsArgSet(\"-asmap\")) {\n+        const fs::path asmap_path = GetDataDir() / gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r358011994",
      "id" : 358011994,
      "in_reply_to_id" : 356839948,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1ODAxMTk5NA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 35,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 332292941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358011994",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r358012079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358012079"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonatack yeah, I am just revising my answer as I am doing more testing, commented prematurely",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-15T22:43:40Z",
      "diff_hunk" : "@@ -1807,6 +1814,21 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // set asmap if supplied\n+    if (gArgs.IsArgSet(\"-asmap\")) {\n+        const fs::path asmap_path = GetDataDir() / gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r358012079",
      "id" : 358012079,
      "in_reply_to_id" : 356839948,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1ODAxMjA3OQ==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 35,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 332293036,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358012079",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nAlso built, ran automated tests, did some manual testing, light code review on 4b65439415a17bcb6f99bb1996c5ce01c70d08b6.\r\n\r\nI have two thoughts:\r\n- Should we include an implementation of the encoding code here as well, to make sure that anyone who wants to use it has a reference implementation that is reviewed properly? Otherwise, I think there should be at least some more documentation.\r\n- Should there be some detection on possibly malicious asmap files? I.e. would it be possible that the user ends up with a file that maps all IPs to one ASN and thus ends up with only one bucket, making it easier to eclipse attack? Should we warn about that? Maybe we should fall back to /16 below a certain number?",
      "created_at" : "2019-12-15T23:58:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-565860818",
      "id" : 565860818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTg2MDgxOA==",
      "updated_at" : "2019-12-15T23:58:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565860818",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r359493452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359493452"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It was already messed up before me... But alright, will put my file in a proper place.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-18T18:12:24Z",
      "diff_hunk" : "@@ -525,6 +526,7 @@ libbitcoin_util_a_SOURCES = \\\n   util/time.cpp \\\n   util/url.cpp \\\n   util/validation.cpp \\\n+  util/asmap.cpp \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r359493452",
      "id" : 359493452,
      "in_reply_to_id" : 356722432,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTQ5MzQ1Mg==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 12,
      "path" : "src/Makefile.am",
      "position" : null,
      "pull_request_review_id" : 334165742,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359493452",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r359517964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359517964"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I didn't think about `-asmap` call without a parameter as \"use existing\". But yeah, perhaps it makes sense. Especially since both of you share that intuition. Will apply your suggested change.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-18T19:06:43Z",
      "diff_hunk" : "@@ -1807,6 +1814,21 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // set asmap if supplied\n+    if (gArgs.IsArgSet(\"-asmap\")) {\n+        const fs::path asmap_path = GetDataDir() / gArgs.GetArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r359517964",
      "id" : 359517964,
      "in_reply_to_id" : 356839948,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTUxNzk2NA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 35,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 334197209,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:29:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359517964",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r359531853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359531853"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm thinking this should probably be ``assert(0)`` âÂ the file is corrupted\r\n@sipa ?",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-18T19:37:48Z",
      "diff_hunk" : "@@ -0,0 +1,97 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+#include <crypto/common.h>\n+\n+namespace {\n+\n+uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, const std::vector<uint8_t> &bit_sizes)\n+{\n+    uint32_t val = minval;\n+    bool bit;\n+    for (std::vector<uint8_t>::const_iterator bit_sizes_it = bit_sizes.begin();\n+        bit_sizes_it != bit_sizes.end(); ++bit_sizes_it) {\n+        if (bit_sizes_it + 1 != bit_sizes.end()) {\n+            bit = *bitpos;\n+            bitpos++;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << *bit_sizes_it);\n+        } else {\n+            for (int b = 0; b < *bit_sizes_it; b++) {\n+                bit = *bitpos;\n+                bitpos++;\n+                val += bit << (*bit_sizes_it - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r359531853",
      "id" : 359531853,
      "in_reply_to_id" : 356784516,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTUzMTg1Mw==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 34,
      "path" : "src/util/asmap.cpp",
      "position" : 34,
      "pull_request_review_id" : 334215198,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:37:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359531853",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r359536948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359536948"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Your opinion in other util related issues would be also useful.",
      "commit_id" : "49dbb9cf7921687d57c168fd8052a778652138e2",
      "created_at" : "2019-12-18T19:49:45Z",
      "diff_hunk" : "@@ -0,0 +1,97 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <vector>\n+#include <assert.h>\n+#include <crypto/common.h>\n+\n+namespace {\n+\n+uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, const std::vector<uint8_t> &bit_sizes)\n+{\n+    uint32_t val = minval;\n+    bool bit;\n+    for (std::vector<uint8_t>::const_iterator bit_sizes_it = bit_sizes.begin();\n+        bit_sizes_it != bit_sizes.end(); ++bit_sizes_it) {\n+        if (bit_sizes_it + 1 != bit_sizes.end()) {\n+            bit = *bitpos;\n+            bitpos++;\n+        } else {\n+            bit = 0;\n+        }\n+        if (bit) {\n+            val += (1 << *bit_sizes_it);\n+        } else {\n+            for (int b = 0; b < *bit_sizes_it; b++) {\n+                bit = *bitpos;\n+                bitpos++;\n+                val += bit << (*bit_sizes_it - 1 - b);\n+            }\n+            return val;\n+        }\n+    }\n+    return -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16702#discussion_r359536948",
      "id" : 359536948,
      "in_reply_to_id" : 356784516,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTUzNjk0OA==",
      "original_commit_id" : "4128c9c8124e4627cc45f6df2b7017a89296fc5a",
      "original_position" : 34,
      "path" : "src/util/asmap.cpp",
      "position" : 34,
      "pull_request_review_id" : 334221935,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16702",
      "updated_at" : "2019-12-18T19:49:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359536948",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   }
]
