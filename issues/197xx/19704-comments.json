[
   {
      "author_association" : "MEMBER",
      "body" : "This was requested by @MarcoFalke @sdaftuar and @theuni in #19607 (https://github.com/bitcoin/bitcoin/pull/19607#discussion_r462032894).\r\n\r\nChanging `CConnman* connman` to `CConnman& m_connman` is the continuation of work in #19174. See https://github.com/bitcoin/bitcoin/pull/19542#issuecomment-660303800 and https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-658627037 for further discussion. Prior to this PR, connman was a pointer in PeerLogicValidation, but a reference everywhere else in net_processing. Changing it to a reference in PeerLogicValidation is required before moving the rest of the functions into PeerLogicValidation.\r\n\r\n",
      "created_at" : "2020-08-12T11:42:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-672821085",
      "id" : 672821085,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MjgyMTA4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T11:42:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672821085",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Fuzzers fail because `ProcessMessage` is used in the harnesses.",
      "created_at" : "2020-08-12T12:23:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-672838354",
      "id" : 672838354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MjgzODM1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T12:23:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672838354",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK -- this is definitely a more appropriate location for `ProcessMessage` than the whole net_processing module scope. ",
      "created_at" : "2020-08-12T12:57:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-672854102",
      "id" : 672854102,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Mjg1NDEwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T12:57:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672854102",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've fixed the fuzz build (I think). Let's see what Travis thinks.",
      "created_at" : "2020-08-12T13:20:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-672865975",
      "id" : 672865975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Mjg2NTk3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T13:20:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672865975",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2020-08-12T13:30:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-672872005",
      "id" : 672872005,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Mjg3MjAwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T13:30:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672872005",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Light approach ACK, if there is a follow-up code branch to see where this is heading I'd look at it. ",
      "created_at" : "2020-08-13T20:09:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-673685601",
      "id" : 673685601,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzY4NTYwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T20:09:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673685601",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept Ack and lite-cr ack (doesn't seem to change any logic, just refactor).\r\n\r\nIn terms of approach might be nice to encapsulate processmessage as a subclass that only has access to the relevant references out of the PeerLogicValidation state, but I don't think that's required (just thinking ahead that we might want all the individual message handlers in their own class).\r\n\r\nedit: another reason for this is you can appropriately bind things in the interior class as const where relevant.\r\n",
      "created_at" : "2020-08-13T20:39:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-673698948",
      "id" : 673698948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzY5ODk0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T20:39:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673698948",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Lots of discussion on this at http://www.erisian.com.au/meetbot/bitcoin-core-dev/2020/bitcoin-core-dev.2020-08-13-19.00.log.html#l-104",
      "created_at" : "2020-08-14T09:44:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-673990948",
      "id" : 673990948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Mzk5MDk0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-14T09:44:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673990948",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK cbcb80abc8b3bddaba81e8ba2b22c7d957f02f37.\r\n\r\nAm I missing something or this should have refactoring label?\r\n\r\nFirst 2 commits could be merged on its own.",
      "created_at" : "2020-08-14T14:03:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-674090872",
      "id" : 674090872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDA5MDg3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-14T14:03:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674090872",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474475437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474475437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit eb170099f3ea91555b56fdaaae89a64fe04b93be: It seems a bit confusing to pass in chainparams to be stored as a reference in a member variable, but then pass in the consensus params via a parameter of a function call, even though they can be \"derived\" from the chain params.\r\n\r\nI'd suggest the following patch:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 71b235f56b..4a5c7acc46 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -9,6 +9,7 @@\r\n #include <banman.h>\r\n #include <blockencodings.h>\r\n #include <blockfilter.h>\r\n+#include <chainparams.h>\r\n #include <consensus/validation.h>\r\n #include <hash.h>\r\n #include <index/blockfilterindex.h>\r\n@@ -1219,13 +1220,12 @@ PeerLogicValidation::PeerLogicValidation(const CChainParams& chainparams, CConnm\r\n     // same probability that we have in the reject filter).\r\n     g_recent_confirmed_transactions.reset(new CRollingBloomFilter(48000, 0.000001));\r\n \r\n-    const Consensus::Params& consensusParams = Params().GetConsensus();\r\n     // Stale tip checking and peer eviction are on two different timers, but we\r\n     // don't want them to get out of sync due to drift in the scheduler, so we\r\n     // combine them in one function and schedule at the quicker (peer-eviction)\r\n     // timer.\r\n     static_assert(EXTRA_PEER_CHECK_INTERVAL < STALE_CHECK_INTERVAL, \"peer eviction timer should be less than stale tip check timer\");\r\n-    scheduler.scheduleEvery([this, consensusParams] { this->CheckForStaleTipAndEvictPeers(consensusParams); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\r\n+    scheduler.scheduleEvery([this] { this->CheckForStaleTipAndEvictPeers(); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\r\n \r\n     // schedule next run for 10-15 minutes in the future\r\n     const std::chrono::milliseconds delta = std::chrono::minutes{10} + GetRandMillis(std::chrono::minutes{5});\r\n@@ -4011,7 +4011,7 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n     }\r\n }\r\n \r\n-void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\r\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers()\r\n {\r\n     LOCK(cs_main);\r\n \r\n@@ -4022,7 +4022,7 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\r\n     if (time_in_seconds > m_stale_tip_check_time) {\r\n         // Check whether our tip is stale, and if so, allow using an extra\r\n         // outbound peer\r\n-        if (!fImporting && !fReindex && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale(consensusParams)) {\r\n+        if (!fImporting && !fReindex && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale(m_chainparams.GetConsensus())) {\r\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\", time_in_seconds - g_last_tip_update);\r\n             m_connman.SetTryNewOutboundPeer(true);\r\n         } else if (m_connman.GetTryNewOutboundPeer()) {\r\ndiff --git a/src/net_processing.h b/src/net_processing.h\r\nindex b7a680f8ff..819c2c3d9f 100644\r\n--- a/src/net_processing.h\r\n+++ b/src/net_processing.h\r\n@@ -6,12 +6,11 @@\r\n #ifndef BITCOIN_NET_PROCESSING_H\r\n #define BITCOIN_NET_PROCESSING_H\r\n \r\n-#include <chainparams.h>\r\n-#include <consensus/params.h>\r\n #include <net.h>\r\n #include <sync.h>\r\n #include <validationinterface.h>\r\n \r\n+class CChainParams;\r\n class CTxMemPool;\r\n class ChainstateManager;\r\n \r\n@@ -82,7 +81,7 @@ public:\r\n     /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\r\n     void ConsiderEviction(CNode& pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n     /** Evict extra outbound peers. If we think our tip may be stale, connect to an extra outbound */\r\n-    void CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams);\r\n+    void CheckForStaleTipAndEvictPeers();\r\n     /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\r\n     void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n     /** Retrieve unbroadcast transactions from the mempool and reattempt sending to peers */\r\ndiff --git a/src/test/denialofservice_tests.cpp b/src/test/denialofservice_tests.cpp\r\nindex c94d7c2d00..024345326d 100644\r\n--- a/src/test/denialofservice_tests.cpp\r\n+++ b/src/test/denialofservice_tests.cpp\r\n@@ -169,7 +169,7 @@ BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\r\n         AddRandomOutboundPeer(vNodes, *peerLogic, connman.get());\r\n     }\r\n \r\n-    peerLogic->CheckForStaleTipAndEvictPeers(consensusParams);\r\n+    peerLogic->CheckForStaleTipAndEvictPeers();\r\n \r\n     // No nodes should be marked for disconnection while we have no extra peers\r\n     for (const CNode *node : vNodes) {\r\n@@ -180,7 +180,7 @@ BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\r\n \r\n     // Now tip should definitely be stale, and we should look for an extra\r\n     // outbound peer\r\n-    peerLogic->CheckForStaleTipAndEvictPeers(consensusParams);\r\n+    peerLogic->CheckForStaleTipAndEvictPeers();\r\n     BOOST_CHECK(connman->GetTryNewOutboundPeer());\r\n \r\n     // Still no peers should be marked for disconnection\r\n@@ -193,7 +193,7 @@ BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\r\n     // required time connected check should be satisfied).\r\n     AddRandomOutboundPeer(vNodes, *peerLogic, connman.get());\r\n \r\n-    peerLogic->CheckForStaleTipAndEvictPeers(consensusParams);\r\n+    peerLogic->CheckForStaleTipAndEvictPeers();\r\n     for (int i=0; i<max_outbound_full_relay; ++i) {\r\n         BOOST_CHECK(vNodes[i]->fDisconnect == false);\r\n     }\r\n@@ -206,7 +206,7 @@ BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\r\n     // peer, and check that the next newest node gets evicted.\r\n     UpdateLastBlockAnnounceTime(vNodes.back()->GetId(), GetTime());\r\n \r\n-    peerLogic->CheckForStaleTipAndEvictPeers(consensusParams);\r\n+    peerLogic->CheckForStaleTipAndEvictPeers();\r\n     for (int i=0; i<max_outbound_full_relay-1; ++i) {\r\n         BOOST_CHECK(vNodes[i]->fDisconnect == false);\r\n     }\r\n",
      "commit_id" : "cbcb80abc8b3bddaba81e8ba2b22c7d957f02f37",
      "created_at" : "2020-08-21T07:36:42Z",
      "diff_hunk" : "@@ -149,8 +150,9 @@ static void AddRandomOutboundPeer(std::vector<CNode *> &vNodes, PeerLogicValidat\n \n BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\n {\n+    const CChainParams& chainparams = Params();\n     auto connman = MakeUnique<CConnmanTest>(0x1337, 0x1337);\n-    auto peerLogic = MakeUnique<PeerLogicValidation>(*connman, nullptr, *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n+    auto peerLogic = MakeUnique<PeerLogicValidation>(chainparams, *connman, nullptr, *m_node.scheduler, *m_node.chainman, *m_node.mempool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474475437",
      "id" : 474475437,
      "line" : 155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ3NTQzNw==",
      "original_commit_id" : "eb170099f3ea91555b56fdaaae89a64fe04b93be",
      "original_line" : 155,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/test/denialofservice_tests.cpp",
      "position" : 18,
      "pull_request_review_id" : 472270285,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-21T07:42:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474475437",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474476502"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474476502"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit eb170099f3ea91555b56fdaaae89a64fe04b93be: Seems a bit odd to require the whole header when only the name is needed (the compiler doesn't need to know the struct memory layout to keep a pointer or reference as a member variable)\r\n\r\nNote that txmemool.h isn't included either.\r\n\r\nI suggest the patch from the other comment",
      "commit_id" : "cbcb80abc8b3bddaba81e8ba2b22c7d957f02f37",
      "created_at" : "2020-08-21T07:38:02Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_NET_PROCESSING_H\n #define BITCOIN_NET_PROCESSING_H\n \n+#include <chainparams.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474476502",
      "id" : 474476502,
      "line" : 9,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ3NjUwMg==",
      "original_commit_id" : "eb170099f3ea91555b56fdaaae89a64fe04b93be",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 4,
      "pull_request_review_id" : 472270285,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-21T07:42:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474476502",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
