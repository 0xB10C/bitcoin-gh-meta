[
   {
      "author_association" : "OWNER",
      "body" : "For context: I had a node go into an infinite loop, when a bit flip in a transaction in the block file caused the merkle root check to fail. It kept printing the same message, pegging the CPU at 100% but without advancing:\r\n```\r\n2018-02-27 07:47:02 ERROR: ConnectBlock: Consensus::CheckBlock: bad-txnmrklroot,\r\n hashMerkleRoot mismatch (code 16)\r\n2018-02-27 07:47:02 ERROR: ConnectTip(): ConnectBlock 0000000000000000003cd56ca3\r\ncf3dbc186ff3a6713f6972a11089b6ae4bf625 failed\r\n```\r\nIt might be due to software or hardware reasons (in my case, I found out in retrospect that the CPU was seriously overheating). In this kind of case it is better to give up and have the user manually check the issue, than try to continue.\r\n\r\n>  I think we might as well get rid of this call and assume that the corruption will eventually be detected later.\r\n\r\nI'm not sure removing the check is the best way forward. I'm happy that the corruption was detected as early as possible so I could take action and fix the CPU cooler. However, it could stop trying after one time, then give up. Or am I misunderstanding what this does?",
      "created_at" : "2018-03-01T07:13:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12561#issuecomment-369498460",
      "id" : 369498460,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12561",
      "updated_at" : "2018-03-01T07:13:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369498460",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I'm not sure removing the check is the best way forward. I'm happy that the corruption was detected as early as possible so I could take action and fix the CPU cooler. However, it could stop trying after one time, then give up. Or am I misunderstanding what this does?\r\n\r\nYeah it's not clear to me what is best.  With my current proposal here, we skip the CheckBlock check altogether and go straight on to transaction validation.  If some transaction was mutated (say due to disk corruption), it's likely that some validation would fail, and the node would fall out of sync, which would be an indicator to the operator that something is wrong.\r\n\r\nFor situations where the disk corruption could have been detected, I think it's better to more explicitly let the user know, rather than have to infer it from a random-looking validation failure.  However, in general we aren't able to detect all the forms of disk corruption that can happen (eg, typically we never know if the block was written correctly because we use an in-memory copy for validation).  So I wasn't sure it was worth trying to maintain some special-case logic to detect something that in general is unknowable.\r\n\r\nBut if you think catching this kind of thing some of the time is still better than nothing then I could just add back the CheckBlock() call and an assert that any failures cannot be due to potential corruption; I think that's also a reasonable way to improve this behavior.",
      "created_at" : "2018-03-05T02:16:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12561#issuecomment-370291093",
      "id" : 370291093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12561",
      "updated_at" : "2018-03-05T02:16:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370291093",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj I changed this to just shut down if we encounter a corrupt block in ConnectBlock().",
      "created_at" : "2018-03-05T15:48:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12561#issuecomment-370462825",
      "id" : 370462825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12561",
      "updated_at" : "2018-03-05T15:48:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370462825",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK https://github.com/bitcoin/bitcoin/pull/12561/commits/0e7c52dc6cbb8fd881a0dd57a6167a812fe71dc4 looks good to me now\r\n(will try to test this once I get home, as I still have the corrupted file)",
      "created_at" : "2018-03-05T17:45:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12561#issuecomment-370502480",
      "id" : 370502480,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12561",
      "updated_at" : "2018-03-05T17:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370502480",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
