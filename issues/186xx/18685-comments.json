[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410270513"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410270513"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    PerBlockConnectTrace(CBlockIndex* index, const std::shared_ptr<const CBlock>& block) : pindex(index), pblock(block) {}\r\n```\r\n\r\nstyle nit to avoid shared_ptr increment/decrement",
      "commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "created_at" : "2020-04-17T14:43:45Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410270513",
      "id" : 410270513,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MDUxMw==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2519,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395517042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-18T16:23:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410270513",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410271078"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410271078"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is this needed?",
      "commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "created_at" : "2020-04-17T14:44:40Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. The BlockConnected validationinterface signal is\n+ * fired after a single ABCS call for all blocks that were connected in that\n+ * ABCS call.\n  */\n-class ConnectTrace {\n-private:\n-    std::vector<PerBlockConnectTrace> blocksConnected;\n-\n-public:\n-    explicit ConnectTrace() : blocksConnected(1) {}\n-\n-    void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n-        assert(!blocksConnected.back().pindex);\n-        assert(pindex);\n-        assert(pblock);\n-        blocksConnected.back().pindex = pindex;\n-        blocksConnected.back().pblock = std::move(pblock);\n-        blocksConnected.emplace_back();\n-    }\n-\n-    std::vector<PerBlockConnectTrace>& GetBlocksConnected() {\n-        // We always keep one extra block at the end of our list because\n-        // blocks are added after all the conflicted transactions have\n-        // been filled in. Thus, the last entry should always be an empty\n-        // one waiting for the transactions from the next block. We pop\n-        // the last entry here to make sure the list we return is sane.\n-        assert(!blocksConnected.back().pindex);\n-        blocksConnected.pop_back();\n-        return blocksConnected;\n-    }\n-};\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410271078",
      "id" : 410271078,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MTA3OA==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2528,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395517042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-18T16:23:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410271078",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410272193"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410272193"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is this change to auto? `auto` shouldn't be used in consensus code unless there is a reason ",
      "commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "created_at" : "2020-04-17T14:46:26Z",
      "diff_hunk" : "@@ -2868,7 +2843,7 @@ bool CChainState::ActivateBestChain(BlockValidationState &state, const CChainPar\n                 }\n                 pindexNewTip = m_chain.Tip();\n \n-                for (const PerBlockConnectTrace& trace : connectTrace.GetBlocksConnected()) {\n+                for (auto& trace : connectTrace) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410272193",
      "id" : 410272193,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MjE5Mw==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2846,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395517042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-18T16:23:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410272193",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410272555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410272555"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\nusing ConnectTrace = std::vector<PerBlockConnectTrace>;\r\n```\r\n\r\nstyle nit for C++11",
      "commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "created_at" : "2020-04-17T14:46:59Z",
      "diff_hunk" : "@@ -409,7 +409,9 @@ enum DisconnectResult\n     DISCONNECT_FAILED   // Something else went wrong.\n };\n \n-class ConnectTrace;\n+// forward declaration for ActivateBestChainStep and ConnectTip\n+struct PerBlockConnectTrace;\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410272555",
      "id" : 410272555,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MjU1NQ==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 414,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 395517042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-18T16:23:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410272555",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410307560"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410307560"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\r\n\r\nNote to other reviewers: This comment obviously no longer applies after 312d27b\r\n",
      "commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "created_at" : "2020-04-17T15:43:17Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. The BlockConnected validationinterface signal is\n+ * fired after a single ABCS call for all blocks that were connected in that\n+ * ABCS call.\n  */\n-class ConnectTrace {\n-private:\n-    std::vector<PerBlockConnectTrace> blocksConnected;\n-\n-public:\n-    explicit ConnectTrace() : blocksConnected(1) {}\n-\n-    void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n-        assert(!blocksConnected.back().pindex);\n-        assert(pindex);\n-        assert(pblock);\n-        blocksConnected.back().pindex = pindex;\n-        blocksConnected.back().pblock = std::move(pblock);\n-        blocksConnected.emplace_back();\n-    }\n-\n-    std::vector<PerBlockConnectTrace>& GetBlocksConnected() {\n-        // We always keep one extra block at the end of our list because\n-        // blocks are added after all the conflicted transactions have\n-        // been filled in. Thus, the last entry should always be an empty\n-        // one waiting for the transactions from the next block. We pop\n-        // the last entry here to make sure the list we return is sane.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410307560",
      "id" : 410307560,
      "line" : 2548,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMwNzU2MA==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2548,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 44,
      "pull_request_review_id" : 395566048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-18T16:23:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410307560",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717136"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717136"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for this comment! It sent me down a bit of a rabbit hole about how to pass smart pointers. Here's what I've learned:\r\n\r\nI think your suggestion to change the ctor to take a const lvalue reference makes a copy and therefore increases the ref count (the `const` is the callee saying to the caller \"I won't steal this reference\", and so if the callee wants to keep ownership, it needs to make a copy). We can avoid that copy in three ways:\r\n\r\n- pass by non-const lvalue reference (`std::shared_ptr<const CBlock>&`) which is the callee saying \"I may or may not steal this reference\" and call the constructor with an lvalue (ie `thisBlock` below).\r\n- pass by value (`std::shared_ptr<const CBlock>`), and have the caller cast to rvalue reference in the call (ie `std::move(thisBlock)` below). The `std::move` is the caller saying \"I no longer want ownership of this reference. In this case, the caller can still keep shared ownership by passing an lvalue (`thisBlock`), which would increase the ref count.\r\n- pass by rvalue (`std::shared_ptr<const CBlock>&&`) which is the callee saying \"I will steal ownership\". The caller has to call using an rvalue reference (`std::move(thisBlock)`). Calling by lvalue would be invalid.\r\n\r\nI think it's best to keep this as pass-by-value and have the caller pass it with an rvalue reference.\r\n\r\nAlso, the initializer list needs to use a std::move to prevent the ref increment/decrement, which I'll change.\r\n\r\nSome references:\r\n- summary of ways to pass smart pointers as arguments (it's talking about unique_ptr, but the same concepts are true for shared_ptrs): https://stackoverflow.com/questions/8114276/how-do-i-pass-a-unique-ptr-argument-to-a-constructor-or-a-function\r\n- CPP Core Guidelines on passing shared pointers: http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-sharedptrparam-owner\r\n- Herb Sutter on smart pointer parameters: https://herbsutter.com/2013/06/05/gotw-91-solution-smart-pointer-parameters/\r\n- Scott Meyers on passing move types by value/rvalue reference: http://scottmeyers.blogspot.com/2014/07/should-move-only-types-ever-be-passed.html\r\n- Demonstration code of the different ways to pass a shared_ptr and the effect on ref counts: https://gist.github.com/jnewbery/10ee24a5ce783932accddbe4347f110e",
      "commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "created_at" : "2020-04-18T16:12:56Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717136",
      "id" : 410717136,
      "in_reply_to_id" : 410270513,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxNzEzNg==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2519,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395927302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-18T16:23:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717136",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717223"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's not needed. I just wanted to keep it here so the comment made sense and I didn't have to move it to the header file.",
      "commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "created_at" : "2020-04-18T16:13:40Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. The BlockConnected validationinterface signal is\n+ * fired after a single ABCS call for all blocks that were connected in that\n+ * ABCS call.\n  */\n-class ConnectTrace {\n-private:\n-    std::vector<PerBlockConnectTrace> blocksConnected;\n-\n-public:\n-    explicit ConnectTrace() : blocksConnected(1) {}\n-\n-    void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n-        assert(!blocksConnected.back().pindex);\n-        assert(pindex);\n-        assert(pblock);\n-        blocksConnected.back().pindex = pindex;\n-        blocksConnected.back().pblock = std::move(pblock);\n-        blocksConnected.emplace_back();\n-    }\n-\n-    std::vector<PerBlockConnectTrace>& GetBlocksConnected() {\n-        // We always keep one extra block at the end of our list because\n-        // blocks are added after all the conflicted transactions have\n-        // been filled in. Thus, the last entry should always be an empty\n-        // one waiting for the transactions from the next block. We pop\n-        // the last entry here to make sure the list we return is sane.\n-        assert(!blocksConnected.back().pindex);\n-        blocksConnected.pop_back();\n-        return blocksConnected;\n-    }\n-};\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717223",
      "id" : 410717223,
      "in_reply_to_id" : 410271078,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxNzIyMw==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2528,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395927361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-18T16:23:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717223",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717291"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sounds sensible. I'll revert.",
      "commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "created_at" : "2020-04-18T16:13:57Z",
      "diff_hunk" : "@@ -2868,7 +2843,7 @@ bool CChainState::ActivateBestChain(BlockValidationState &state, const CChainPar\n                 }\n                 pindexNewTip = m_chain.Tip();\n \n-                for (const PerBlockConnectTrace& trace : connectTrace.GetBlocksConnected()) {\n+                for (auto& trace : connectTrace) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717291",
      "id" : 410717291,
      "in_reply_to_id" : 410272193,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxNzI5MQ==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2846,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395927406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-18T16:23:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717291",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410718508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410718508"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it makes a difference for aliases which are not templates (and I can't see this in the style guide), but changed anyway.",
      "commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "created_at" : "2020-04-18T16:24:01Z",
      "diff_hunk" : "@@ -409,7 +409,9 @@ enum DisconnectResult\n     DISCONNECT_FAILED   // Something else went wrong.\n };\n \n-class ConnectTrace;\n+// forward declaration for ActivateBestChainStep and ConnectTip\n+struct PerBlockConnectTrace;\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410718508",
      "id" : 410718508,
      "in_reply_to_id" : 410272555,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxODUwOA==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 414,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 395928292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-18T16:24:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410718508",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @MarcoFalke . I've addressed your comments.",
      "created_at" : "2020-04-18T16:24:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-615898514",
      "id" : 615898514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNTg5ODUxNA==",
      "updated_at" : "2020-04-18T16:24:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/615898514",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410721803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410721803"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Didn't see the new comment, but I think you can put the new comment to the single place where connecttrace is instantiated. No strong opinion, though.",
      "commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "created_at" : "2020-04-18T16:52:04Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. The BlockConnected validationinterface signal is\n+ * fired after a single ABCS call for all blocks that were connected in that\n+ * ABCS call.\n  */\n-class ConnectTrace {\n-private:\n-    std::vector<PerBlockConnectTrace> blocksConnected;\n-\n-public:\n-    explicit ConnectTrace() : blocksConnected(1) {}\n-\n-    void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n-        assert(!blocksConnected.back().pindex);\n-        assert(pindex);\n-        assert(pblock);\n-        blocksConnected.back().pindex = pindex;\n-        blocksConnected.back().pblock = std::move(pblock);\n-        blocksConnected.emplace_back();\n-    }\n-\n-    std::vector<PerBlockConnectTrace>& GetBlocksConnected() {\n-        // We always keep one extra block at the end of our list because\n-        // blocks are added after all the conflicted transactions have\n-        // been filled in. Thus, the last entry should always be an empty\n-        // one waiting for the transactions from the next block. We pop\n-        // the last entry here to make sure the list we return is sane.\n-        assert(!blocksConnected.back().pindex);\n-        blocksConnected.pop_back();\n-        return blocksConnected;\n-    }\n-};\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410721803",
      "id" : 410721803,
      "in_reply_to_id" : 410271078,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcyMTgwMw==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2528,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395930706,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-18T16:52:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410721803",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
