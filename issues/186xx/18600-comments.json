[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17954 (wallet: Remove calls to Chain::Lock methods by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-04-12T04:13:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18600#issuecomment-612561562",
      "id" : 612561562,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18600",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjU2MTU2Mg==",
      "updated_at" : "2020-04-12T04:13:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612561562",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18600#discussion_r407511482"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407511482"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validationinterface] Extend TransactionRemovedFromMempool with fIsConflicted\" (9eb9af6c56f52628cca4cc5241c0f88adb9f689d)\r\n\r\nShould just call this argument `conflicted` or `is_conflicted`",
      "commit_id" : "b34318d4cc27d61d2b9cc6a97c9584eb0dada6e4",
      "created_at" : "2020-04-13T14:37:42Z",
      "diff_hunk" : "@@ -158,7 +158,7 @@ class NotificationsProxy : public CValidationInterface\n     {\n         m_notifications->transactionAddedToMempool(tx);\n     }\n-    void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+    void TransactionRemovedFromMempool(const CTransactionRef& tx, bool fIsConflicted) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18600#discussion_r407511482",
      "id" : 407511482,
      "line" : 161,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUxMTQ4Mg==",
      "original_commit_id" : "9eb9af6c56f52628cca4cc5241c0f88adb9f689d",
      "original_line" : 161,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : 5,
      "pull_request_review_id" : 392185125,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18600",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-13T15:45:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407511482",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18600#discussion_r407516183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407516183"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validationinterface] Extend TransactionRemovedFromMempool with fIsConflicted\" (9eb9af6c56f52628cca4cc5241c0f88adb9f689d)\r\n\r\nI'd think it'd be more straightforward to just pass along the reason instead of having the mempool interpret it on behalf of the wallet. But this is just a guess, and I think since @jnewbery proposed this, you both probably know the tradeoffs between `bool conflicted` and `MemPoolRemovalReason reason` better than me and this is probably fine",
      "commit_id" : "b34318d4cc27d61d2b9cc6a97c9584eb0dada6e4",
      "created_at" : "2020-04-13T14:46:53Z",
      "diff_hunk" : "@@ -410,7 +410,8 @@ void CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n         // for any reason except being included in a block. Clients interested\n         // in transactions included in blocks can subscribe to the BlockConnected\n         // notification.\n-        GetMainSignals().TransactionRemovedFromMempool(it->GetSharedTx());\n+        GetMainSignals().TransactionRemovedFromMempool(it->GetSharedTx(), reason == MemPoolRemovalReason::CONFLICT",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18600#discussion_r407516183",
      "id" : 407516183,
      "line" : 413,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUxNjE4Mw==",
      "original_commit_id" : "9eb9af6c56f52628cca4cc5241c0f88adb9f689d",
      "original_line" : 413,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 5,
      "pull_request_review_id" : 392185125,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18600",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-13T15:45:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407516183",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18600#discussion_r407544261"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407544261"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[rpcwallet] Add `conflicted` as transaction description field\" (1af561a8f2bc93ac029b7304fb6da12e6094b860)\r\n\r\nI think this should probably be Status::UNCONFIRMED rather than Status::CONFLICTED. That should restore the original behavior before #16624 (a31be09bfd77eed497a8e251d31358e16e2f2eb1 +   7e89994133725125dddbfa8d45484e3b9ed51c6e) and avoid introducing an entirely new transaction state that wallet code has never had to deal with, where a transaction is conflicting with something not in a specific block. This should also allow reverting `GetDepthInMainChain` below and leaving it unchanged.\r\n\r\nAt a high level I think it makes sense to mark these transactions unconfirmed instead of conflicted because we know there are cases the wallet can't detect unconfirmed transactions becoming conflicted, and cases where it can't detect a conflicting transactions becoming unconfirmed, and unconfirmed is the more conservative choice than conflicted for balances, etc\r\n\r\nI haven't looked at your `wallet_txn_doublespend.py` test yet, so I'm not sure how changing this would interact that. Another way of testing this code which might be better from the point of view of #18600 is to add a regression test to `feature_notifications.py` to ensure that this commit restores the `-walletnotify` notifications that were lost in #16624",
      "commit_id" : "b34318d4cc27d61d2b9cc6a97c9584eb0dada6e4",
      "created_at" : "2020-04-13T15:39:10Z",
      "diff_hunk" : "@@ -1105,12 +1105,16 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& ptx) {\n     }\n }\n \n-void CWallet::transactionRemovedFromMempool(const CTransactionRef &ptx) {\n+void CWallet::transactionRemovedFromMempool(const CTransactionRef &ptx, bool fIsConflicted) {\n     LOCK(cs_wallet);\n     auto it = mapWallet.find(ptx->GetHash());\n     if (it != mapWallet.end()) {\n         it->second.fInMempool = false;\n     }\n+    if (fIsConflicted) {\n+        CWalletTx::Confirmation confirm(CWalletTx::Status::CONFLICTED, /* block_height */ 0, /* block_hash */ {}, /* nIndex */ 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18600#discussion_r407544261",
      "id" : 407544261,
      "line" : 1115,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0NDI2MQ==",
      "original_commit_id" : "497c50205534aa32931a048d02a3a2004460fe64",
      "original_line" : 1115,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 21,
      "pull_request_review_id" : 392185125,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18600",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-13T15:45:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407544261",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18600#discussion_r407550301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407550301"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe even just pass the original removal reason to the sink? Compressing `REPLACED` into a boolean called `conflicted` is not wrong, but maybe not the most straightforward either.",
      "commit_id" : "b34318d4cc27d61d2b9cc6a97c9584eb0dada6e4",
      "created_at" : "2020-04-13T15:50:34Z",
      "diff_hunk" : "@@ -158,7 +158,7 @@ class NotificationsProxy : public CValidationInterface\n     {\n         m_notifications->transactionAddedToMempool(tx);\n     }\n-    void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+    void TransactionRemovedFromMempool(const CTransactionRef& tx, bool fIsConflicted) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18600#discussion_r407550301",
      "id" : 407550301,
      "in_reply_to_id" : 407511482,
      "line" : 161,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1MDMwMQ==",
      "original_commit_id" : "9eb9af6c56f52628cca4cc5241c0f88adb9f689d",
      "original_line" : 161,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : 5,
      "pull_request_review_id" : 392232926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18600",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-13T15:50:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407550301",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18600#discussion_r407555257"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407555257"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Some comments might be better as log statements, to aid debugability. See https://github.com/bitcoin/bitcoin/tree/master/test/functional#general-test-writing-advice\r\n```suggestion\r\n        self.log.info('Verify node0 sees children as conflicted')\r\n```",
      "commit_id" : "b34318d4cc27d61d2b9cc6a97c9584eb0dada6e4",
      "created_at" : "2020-04-13T15:59:29Z",
      "diff_hunk" : "@@ -139,5 +140,99 @@ def run_test(self):\n         # Node1's balance should be its initial balance (1250 for 25 block rewards) plus the doublespend:\n         assert_equal(self.nodes[1].getbalance(), 1250 + 1240)\n \n+        # Following test limb check that if a transaction of concern conflicted due to its parent\n+        # or anterior transaction being conflicted, wallet is able to detect it, independently of\n+        # reason (either block or mempool)\n+\n+        # Get a \"blind\" address from node0\n+        connect_nodes(self.nodes[0], 1)\n+        node0_address_blind = self.nodes[0].getnewaddress()\n+        txid_origin = self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), Decimal(\"10\"))\n+        self.nodes[1].generate(1)\n+        self.sync_blocks([self.nodes[0], self.nodes[1]])\n+\n+        # Build parent conflicted tx from node1 to node1\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[1].gettransaction(txid_origin)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs_parent_conflicted_tx = []\n+        inputs_parent_conflicted_tx.append({\"txid\": txid_origin, \"vout\": nA, \"sequence\": BIP125_SEQUENCE_NUMBER})\n+        outputs_parent_conflicted_tx = {}\n+        outputs_parent_conflicted_tx[self.nodes[1].getnewaddress()] = Decimal(\"9.99998\")\n+\n+        # Broadcast parent conflicted tx\n+        parent_conflicted_tx = self.nodes[1].signrawtransactionwithwallet(self.nodes[1].createrawtransaction(inputs_parent_conflicted_tx, outputs_parent_conflicted_tx))\n+        parent_conflicted_txid = self.nodes[1].sendrawtransaction(parent_conflicted_tx[\"hex\"])\n+\n+        # Build children conflicted tx\n+        inputs_children_conflicted_tx = []\n+        inputs_children_conflicted_tx.append({\"txid\": parent_conflicted_txid, \"vout\": 0})\n+        outputs_children_conflicted_tx = {}\n+        outputs_children_conflicted_tx[node0_address_blind] = Decimal(\"9.99996\")\n+\n+        #Broadcast children conflicted tx\n+        node1s_children_conflicted_tx = self.nodes[1].signrawtransactionwithwallet(self.nodes[1].createrawtransaction(inputs_children_conflicted_tx, outputs_children_conflicted_tx))\n+        children_conflicted_txid = self.nodes[1].sendrawtransaction(node1s_children_conflicted_tx[\"hex\"])\n+        self.sync_mempools([self.nodes[0], self.nodes[1]])\n+\n+        # Verify node0 sees conflicted paying back\n+        node0s_children_conflicted_tx = self.nodes[0].gettransaction(children_conflicted_txid)\n+\n+        assert_equal(node0s_children_conflicted_tx[\"confirmations\"], 0)\n+        assert_equal(node0s_children_conflicted_tx[\"details\"][0][\"category\"], \"receive\")\n+\n+        # Build conflicting tx, double-spending parent conflicted\n+        inputs_conflicting_tx = []\n+        inputs_conflicting_tx.append({\"txid\": txid_origin, \"vout\": nA})\n+        outputs_conflicting_tx = {}\n+        outputs_conflicting_tx[self.nodes[1].getnewaddress()] = Decimal(\"9.99980\")\n+\n+        # Broadcast conflicting tx to node1 mempool and generate a block\n+        conflicting_tx= self.nodes[1].signrawtransactionwithwallet(self.nodes[1].createrawtransaction(inputs_conflicting_tx, outputs_conflicting_tx))\n+        conflicting_txid = self.nodes[1].sendrawtransaction(conflicting_tx[\"hex\"])\n+        self.nodes[1].generate(1)\n+        self.sync_blocks([self.nodes[0], self.nodes[1]])\n+\n+        # Verify node0 sees children as conflicted",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18600#discussion_r407555257",
      "id" : 407555257,
      "line" : 194,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NTI1Nw==",
      "original_commit_id" : "b34318d4cc27d61d2b9cc6a97c9584eb0dada6e4",
      "original_line" : 194,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "test/functional/wallet_txn_doublespend.py",
      "position" : 63,
      "pull_request_review_id" : 392239037,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18600",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-13T15:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407555257",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
