[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18698 (Make g_chainman internal to validation by MarcoFalke)\n* #18644 (net: Reduce `TransportDeserializer` interface to 2 methods by dongcarl)\n* #18242 (Add BIP324 encrypted p2p transport de-/serializer (only used in tests) by jonasschnelli)\n* #15206 (Immediately disconnect on invalid net message checksum by jonasschnelli)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.<!--2502f1a698b3751726fa55edcda76cd3-->\n\n### Coverage\n\n| Coverage  | Change ([pull 18638](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/18638/total.coverage/index.html), 0f96c4b9c8eed32c3fdf1203a2f9a2be59a5f4a2) | Reference ([master](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/index.html), 75fcfdaf8b4b68ef1d1fcd606fb36c9265e15918)   |\n|-----------|-------------------------|--------------------|\n| Lines     | +0.0020 %            | 90.3582 %        |\n| Functions | +0.1431 %            | 85.0787 %        |\n| Branches  | +0.0089 %            | 51.8202 %        |\n\n<sup>Updated at: 2020-04-15T00:09:25.322904.</sup>\n",
      "created_at" : "2020-04-14T20:24:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#issuecomment-613662430",
      "id" : 613662430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18638",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMzY2MjQzMA==",
      "updated_at" : "2020-05-14T23:53:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/613662430",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Coverage changes:\r\n\r\n* https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/src/net.cpp.gcov.html#1123\r\n* https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/18638/total.coverage/src/net.cpp.gcov.html#1123\r\n\r\nand\r\n\r\n* https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/src/net_processing.cpp.gcov.html#3095\r\n* https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/18638/total.coverage/src/net_processing.cpp.gcov.html#3095",
      "created_at" : "2020-04-15T00:50:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#issuecomment-613753413",
      "id" : 613753413,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18638",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMzc1MzQxMw==",
      "updated_at" : "2020-04-15T00:50:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/613753413",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-04-24T22:34:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#issuecomment-619266542",
      "id" : 619266542,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18638",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTI2NjU0Mg==",
      "updated_at" : "2020-04-24T22:34:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619266542",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2020-04-25T12:44:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#issuecomment-619374262",
      "id" : 619374262,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18638",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTM3NDI2Mg==",
      "updated_at" : "2020-04-25T12:44:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619374262",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nWon't this potentially cause issues (e.g. ping timeouts) in P2P tests that already use mockable time for other things, but are not expecting it to have an effect on pings?\r\n\r\n(seems not, given that all the tests still pass)\r\n",
      "created_at" : "2020-05-04T13:22:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#issuecomment-623460571",
      "id" : 623460571,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18638",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzQ2MDU3MQ==",
      "updated_at" : "2020-05-04T13:22:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623460571",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The `-peertimeout` is still measured in wall clock time, and because most of the test run through faster than what the `-peertimeout` is, this should not lead to issues in general. There are two tests `test/functional/feature_maxuploadtarget.py` and `test/functional/feature_bip68_sequence.py` which mine a lot of blocks (more than 100) under mocktime. This can take time when the tests are run under valgrind, so I had to bump the `-peertimeout` for those tests.\r\n\r\nOther tests should not be affected. If they are, it should be trivial to fix them up.",
      "created_at" : "2020-05-04T13:42:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#issuecomment-623471752",
      "id" : 623471752,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18638",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzQ3MTc1Mg==",
      "updated_at" : "2020-05-04T13:43:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623471752",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: mockable is better than non-mockable :)",
      "created_at" : "2020-05-04T14:03:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#issuecomment-623483202",
      "id" : 623483202,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18638",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzQ4MzIwMg==",
      "updated_at" : "2020-05-04T14:03:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623483202",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2020-05-12T22:16:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#issuecomment-627627968",
      "id" : 627627968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18638",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzYyNzk2OA==",
      "updated_at" : "2020-05-12T22:16:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627627968",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r426916085"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426916085"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "From what I understand, `minping` is the best/shortest round trip time measured so far. Thus, would it be a good idea to repeat this chunk with a shorter `ping_delay` in order to check that `minping` gets updated correctly? I tried with `ping_delay` = 25 locally and it was updated from 29 to 25 as expected.",
      "commit_id" : "fae51ad9b43795c826b9eedc155559435f5cda14",
      "created_at" : "2020-05-18T22:00:18Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ping message\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import (\n+    msg_pong,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+PING_INTERVAL = 2 * 60\n+\n+\n+class msg_pong_corrupt(msg_pong):\n+    def serialize(self):\n+        return b\"\"\n+\n+\n+class NodePongAdd1(P2PInterface):\n+    def on_ping(self, message):\n+        self.send_message(msg_pong(message.nonce + 1))\n+\n+\n+class NodeNoPong(P2PInterface):\n+    def on_ping(self, message):\n+        pass\n+\n+\n+class PingPongTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [['-peertimeout=3']]\n+\n+    def check_peer_info(self, *, pingtime, minping, pingwait):\n+        stats = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(stats.pop('pingtime', None), pingtime)\n+        assert_equal(stats.pop('minping', None), minping)\n+        assert_equal(stats.pop('pingwait', None), pingwait)\n+\n+    def mock_forward(self, delta):\n+        self.mock_time += delta\n+        self.nodes[0].setmocktime(self.mock_time)\n+\n+    def run_test(self):\n+        self.mock_time = int(time.time())\n+        self.mock_forward(0)\n+\n+        self.log.info('Check that ping is sent after connection is established')\n+        no_pong_node = self.nodes[0].add_p2p_connection(NodeNoPong())\n+        self.mock_forward(3)\n+        assert no_pong_node.last_message.pop('ping').nonce != 0\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=3)\n+\n+        self.log.info('Reply without nonce cancels ping')\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Short payload']):\n+            no_pong_node.send_and_ping(msg_pong_corrupt())\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=None)\n+\n+        self.log.info('Reply without ping')\n+        with self.nodes[0].assert_debug_log([\n+                'pong peer=0: Unsolicited pong without ping, 0 expected, 0 received, 8 bytes',\n+        ]):\n+            no_pong_node.send_and_ping(msg_pong())\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=None)\n+\n+        self.log.info('Reply with wrong nonce does not cancel ping')\n+        assert 'ping' not in no_pong_node.last_message\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Nonce mismatch']):\n+            # mock time PING_INTERVAL ahead to trigger node into sending a ping\n+            self.mock_forward(PING_INTERVAL + 1)\n+            wait_until(lambda: 'ping' in no_pong_node.last_message)\n+            self.mock_forward(9)\n+            # Send the wrong pong\n+            no_pong_node.send_and_ping(msg_pong(no_pong_node.last_message.pop('ping').nonce - 1))\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=9)\n+\n+        self.log.info('Reply with zero nonce does cancel ping')\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Nonce zero']):\n+            no_pong_node.send_and_ping(msg_pong(0))\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=None)\n+\n+        self.log.info('Check that ping is properly reported on RPC')\n+        assert 'ping' not in no_pong_node.last_message\n+        # mock time PING_INTERVAL ahead to trigger node into sending a ping\n+        self.mock_forward(PING_INTERVAL + 1)\n+        wait_until(lambda: 'ping' in no_pong_node.last_message)\n+        ping_delay = 29\n+        self.mock_forward(ping_delay)\n+        wait_until(lambda: 'ping' in no_pong_node.last_message)\n+        no_pong_node.send_and_ping(msg_pong(no_pong_node.last_message.pop('ping').nonce))\n+        self.check_peer_info(pingtime=ping_delay, minping=ping_delay, pingwait=None)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r426916085",
      "id" : 426916085,
      "line" : 102,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjA4NQ==",
      "original_commit_id" : "fac63aba8db1d0198391414a3867894f837e9df3",
      "original_line" : 102,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ping.py",
      "position" : 102,
      "pull_request_review_id" : 413967888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T22:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426916085",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r426917683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426917683"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Also I'm just wondering, why is `ping_delay` 29? I'm not sure if it's arbitrary or a chosen magic number.",
      "commit_id" : "fae51ad9b43795c826b9eedc155559435f5cda14",
      "created_at" : "2020-05-18T22:04:44Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ping message\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import (\n+    msg_pong,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+PING_INTERVAL = 2 * 60\n+\n+\n+class msg_pong_corrupt(msg_pong):\n+    def serialize(self):\n+        return b\"\"\n+\n+\n+class NodePongAdd1(P2PInterface):\n+    def on_ping(self, message):\n+        self.send_message(msg_pong(message.nonce + 1))\n+\n+\n+class NodeNoPong(P2PInterface):\n+    def on_ping(self, message):\n+        pass\n+\n+\n+class PingPongTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [['-peertimeout=3']]\n+\n+    def check_peer_info(self, *, pingtime, minping, pingwait):\n+        stats = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(stats.pop('pingtime', None), pingtime)\n+        assert_equal(stats.pop('minping', None), minping)\n+        assert_equal(stats.pop('pingwait', None), pingwait)\n+\n+    def mock_forward(self, delta):\n+        self.mock_time += delta\n+        self.nodes[0].setmocktime(self.mock_time)\n+\n+    def run_test(self):\n+        self.mock_time = int(time.time())\n+        self.mock_forward(0)\n+\n+        self.log.info('Check that ping is sent after connection is established')\n+        no_pong_node = self.nodes[0].add_p2p_connection(NodeNoPong())\n+        self.mock_forward(3)\n+        assert no_pong_node.last_message.pop('ping').nonce != 0\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=3)\n+\n+        self.log.info('Reply without nonce cancels ping')\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Short payload']):\n+            no_pong_node.send_and_ping(msg_pong_corrupt())\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=None)\n+\n+        self.log.info('Reply without ping')\n+        with self.nodes[0].assert_debug_log([\n+                'pong peer=0: Unsolicited pong without ping, 0 expected, 0 received, 8 bytes',\n+        ]):\n+            no_pong_node.send_and_ping(msg_pong())\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=None)\n+\n+        self.log.info('Reply with wrong nonce does not cancel ping')\n+        assert 'ping' not in no_pong_node.last_message\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Nonce mismatch']):\n+            # mock time PING_INTERVAL ahead to trigger node into sending a ping\n+            self.mock_forward(PING_INTERVAL + 1)\n+            wait_until(lambda: 'ping' in no_pong_node.last_message)\n+            self.mock_forward(9)\n+            # Send the wrong pong\n+            no_pong_node.send_and_ping(msg_pong(no_pong_node.last_message.pop('ping').nonce - 1))\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=9)\n+\n+        self.log.info('Reply with zero nonce does cancel ping')\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Nonce zero']):\n+            no_pong_node.send_and_ping(msg_pong(0))\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=None)\n+\n+        self.log.info('Check that ping is properly reported on RPC')\n+        assert 'ping' not in no_pong_node.last_message\n+        # mock time PING_INTERVAL ahead to trigger node into sending a ping\n+        self.mock_forward(PING_INTERVAL + 1)\n+        wait_until(lambda: 'ping' in no_pong_node.last_message)\n+        ping_delay = 29\n+        self.mock_forward(ping_delay)\n+        wait_until(lambda: 'ping' in no_pong_node.last_message)\n+        no_pong_node.send_and_ping(msg_pong(no_pong_node.last_message.pop('ping').nonce))\n+        self.check_peer_info(pingtime=ping_delay, minping=ping_delay, pingwait=None)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r426917683",
      "id" : 426917683,
      "in_reply_to_id" : 426916085,
      "line" : 102,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNzY4Mw==",
      "original_commit_id" : "fac63aba8db1d0198391414a3867894f837e9df3",
      "original_line" : 102,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ping.py",
      "position" : 102,
      "pull_request_review_id" : 413967888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T22:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426917683",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r426923791"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426923791"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hm, I'm surprised it isn't `Nonce zero`? I thought no nonce is equivalent to nonce=0 for [msg_pong](https://github.com/bitcoin/bitcoin/blob/dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b/test/functional/test_framework/messages.py#L1210). The test failed when I changed the error message, though.",
      "commit_id" : "fae51ad9b43795c826b9eedc155559435f5cda14",
      "created_at" : "2020-05-18T22:20:56Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ping message\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import (\n+    msg_pong,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+PING_INTERVAL = 2 * 60\n+\n+\n+class msg_pong_corrupt(msg_pong):\n+    def serialize(self):\n+        return b\"\"\n+\n+\n+class NodePongAdd1(P2PInterface):\n+    def on_ping(self, message):\n+        self.send_message(msg_pong(message.nonce + 1))\n+\n+\n+class NodeNoPong(P2PInterface):\n+    def on_ping(self, message):\n+        pass\n+\n+\n+class PingPongTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [['-peertimeout=3']]\n+\n+    def check_peer_info(self, *, pingtime, minping, pingwait):\n+        stats = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(stats.pop('pingtime', None), pingtime)\n+        assert_equal(stats.pop('minping', None), minping)\n+        assert_equal(stats.pop('pingwait', None), pingwait)\n+\n+    def mock_forward(self, delta):\n+        self.mock_time += delta\n+        self.nodes[0].setmocktime(self.mock_time)\n+\n+    def run_test(self):\n+        self.mock_time = int(time.time())\n+        self.mock_forward(0)\n+\n+        self.log.info('Check that ping is sent after connection is established')\n+        no_pong_node = self.nodes[0].add_p2p_connection(NodeNoPong())\n+        self.mock_forward(3)\n+        assert no_pong_node.last_message.pop('ping').nonce != 0\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=3)\n+\n+        self.log.info('Reply without nonce cancels ping')\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Short payload']):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r426923791",
      "id" : 426923791,
      "line" : 65,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyMzc5MQ==",
      "original_commit_id" : "fac63aba8db1d0198391414a3867894f837e9df3",
      "original_line" : 65,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ping.py",
      "position" : 65,
      "pull_request_review_id" : 413967888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T22:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426923791",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r426929454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426929454"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think microseconds is correct (I think millis would be a bug if this wasn't in a unit test), but since it looks like you're switching from millis to micros, could this be an issue at all? The test passes for me.",
      "commit_id" : "fae51ad9b43795c826b9eedc155559435f5cda14",
      "created_at" : "2020-05-18T22:37:32Z",
      "diff_hunk" : "@@ -74,7 +74,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     p2p_node.SetSendVersion(PROTOCOL_VERSION);\n     g_setup->m_node.peer_logic->InitializeNode(&p2p_node);\n     try {\n-        (void)ProcessMessage(&p2p_node, random_message_type, random_bytes_data_stream, GetTimeMillis(), Params(), *g_setup->m_node.mempool, g_setup->m_node.connman.get(), g_setup->m_node.banman.get(), std::atomic<bool>{false});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r426929454",
      "id" : 426929454,
      "line" : 77,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTQ1NA==",
      "original_commit_id" : "fac63aba8db1d0198391414a3867894f837e9df3",
      "original_line" : 77,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message.cpp",
      "position" : 13,
      "pull_request_review_id" : 413967888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T22:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426929454",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r427638935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427638935"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, this looks like a bug in the test to me as well. Luckily by making the time type safe, this is less likely to happen in the future.\r\n\r\nRegardless, instead of depending on the current time, which is not deterministic and might cause issues while fuzzing, the fuzz test should ask the fuzz engine for a time value.\r\n\r\nHowever, this seems out of scope for the changes in this pull request.",
      "commit_id" : "fae51ad9b43795c826b9eedc155559435f5cda14",
      "created_at" : "2020-05-19T22:35:16Z",
      "diff_hunk" : "@@ -74,7 +74,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     p2p_node.SetSendVersion(PROTOCOL_VERSION);\n     g_setup->m_node.peer_logic->InitializeNode(&p2p_node);\n     try {\n-        (void)ProcessMessage(&p2p_node, random_message_type, random_bytes_data_stream, GetTimeMillis(), Params(), *g_setup->m_node.mempool, g_setup->m_node.connman.get(), g_setup->m_node.banman.get(), std::atomic<bool>{false});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r427638935",
      "id" : 427638935,
      "in_reply_to_id" : 426929454,
      "line" : 77,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYzODkzNQ==",
      "original_commit_id" : "fac63aba8db1d0198391414a3867894f837e9df3",
      "original_line" : 77,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message.cpp",
      "position" : 13,
      "pull_request_review_id" : 414870779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T22:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427638935",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r427639581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427639581"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Be aware that a `msg_pong_corrupt` is sent (not a `msg_pong`)",
      "commit_id" : "fae51ad9b43795c826b9eedc155559435f5cda14",
      "created_at" : "2020-05-19T22:37:14Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ping message\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import (\n+    msg_pong,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+PING_INTERVAL = 2 * 60\n+\n+\n+class msg_pong_corrupt(msg_pong):\n+    def serialize(self):\n+        return b\"\"\n+\n+\n+class NodePongAdd1(P2PInterface):\n+    def on_ping(self, message):\n+        self.send_message(msg_pong(message.nonce + 1))\n+\n+\n+class NodeNoPong(P2PInterface):\n+    def on_ping(self, message):\n+        pass\n+\n+\n+class PingPongTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [['-peertimeout=3']]\n+\n+    def check_peer_info(self, *, pingtime, minping, pingwait):\n+        stats = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(stats.pop('pingtime', None), pingtime)\n+        assert_equal(stats.pop('minping', None), minping)\n+        assert_equal(stats.pop('pingwait', None), pingwait)\n+\n+    def mock_forward(self, delta):\n+        self.mock_time += delta\n+        self.nodes[0].setmocktime(self.mock_time)\n+\n+    def run_test(self):\n+        self.mock_time = int(time.time())\n+        self.mock_forward(0)\n+\n+        self.log.info('Check that ping is sent after connection is established')\n+        no_pong_node = self.nodes[0].add_p2p_connection(NodeNoPong())\n+        self.mock_forward(3)\n+        assert no_pong_node.last_message.pop('ping').nonce != 0\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=3)\n+\n+        self.log.info('Reply without nonce cancels ping')\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Short payload']):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r427639581",
      "id" : 427639581,
      "in_reply_to_id" : 426923791,
      "line" : 65,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYzOTU4MQ==",
      "original_commit_id" : "fac63aba8db1d0198391414a3867894f837e9df3",
      "original_line" : 65,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ping.py",
      "position" : 65,
      "pull_request_review_id" : 414871622,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T22:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427639581",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r427639815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427639815"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point! Will extend the test as suggested by you.",
      "commit_id" : "fae51ad9b43795c826b9eedc155559435f5cda14",
      "created_at" : "2020-05-19T22:37:54Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ping message\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import (\n+    msg_pong,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+PING_INTERVAL = 2 * 60\n+\n+\n+class msg_pong_corrupt(msg_pong):\n+    def serialize(self):\n+        return b\"\"\n+\n+\n+class NodePongAdd1(P2PInterface):\n+    def on_ping(self, message):\n+        self.send_message(msg_pong(message.nonce + 1))\n+\n+\n+class NodeNoPong(P2PInterface):\n+    def on_ping(self, message):\n+        pass\n+\n+\n+class PingPongTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [['-peertimeout=3']]\n+\n+    def check_peer_info(self, *, pingtime, minping, pingwait):\n+        stats = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(stats.pop('pingtime', None), pingtime)\n+        assert_equal(stats.pop('minping', None), minping)\n+        assert_equal(stats.pop('pingwait', None), pingwait)\n+\n+    def mock_forward(self, delta):\n+        self.mock_time += delta\n+        self.nodes[0].setmocktime(self.mock_time)\n+\n+    def run_test(self):\n+        self.mock_time = int(time.time())\n+        self.mock_forward(0)\n+\n+        self.log.info('Check that ping is sent after connection is established')\n+        no_pong_node = self.nodes[0].add_p2p_connection(NodeNoPong())\n+        self.mock_forward(3)\n+        assert no_pong_node.last_message.pop('ping').nonce != 0\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=3)\n+\n+        self.log.info('Reply without nonce cancels ping')\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Short payload']):\n+            no_pong_node.send_and_ping(msg_pong_corrupt())\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=None)\n+\n+        self.log.info('Reply without ping')\n+        with self.nodes[0].assert_debug_log([\n+                'pong peer=0: Unsolicited pong without ping, 0 expected, 0 received, 8 bytes',\n+        ]):\n+            no_pong_node.send_and_ping(msg_pong())\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=None)\n+\n+        self.log.info('Reply with wrong nonce does not cancel ping')\n+        assert 'ping' not in no_pong_node.last_message\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Nonce mismatch']):\n+            # mock time PING_INTERVAL ahead to trigger node into sending a ping\n+            self.mock_forward(PING_INTERVAL + 1)\n+            wait_until(lambda: 'ping' in no_pong_node.last_message)\n+            self.mock_forward(9)\n+            # Send the wrong pong\n+            no_pong_node.send_and_ping(msg_pong(no_pong_node.last_message.pop('ping').nonce - 1))\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=9)\n+\n+        self.log.info('Reply with zero nonce does cancel ping')\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Nonce zero']):\n+            no_pong_node.send_and_ping(msg_pong(0))\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=None)\n+\n+        self.log.info('Check that ping is properly reported on RPC')\n+        assert 'ping' not in no_pong_node.last_message\n+        # mock time PING_INTERVAL ahead to trigger node into sending a ping\n+        self.mock_forward(PING_INTERVAL + 1)\n+        wait_until(lambda: 'ping' in no_pong_node.last_message)\n+        ping_delay = 29\n+        self.mock_forward(ping_delay)\n+        wait_until(lambda: 'ping' in no_pong_node.last_message)\n+        no_pong_node.send_and_ping(msg_pong(no_pong_node.last_message.pop('ping').nonce))\n+        self.check_peer_info(pingtime=ping_delay, minping=ping_delay, pingwait=None)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r427639815",
      "id" : 427639815,
      "in_reply_to_id" : 426916085,
      "line" : 102,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYzOTgxNQ==",
      "original_commit_id" : "fac63aba8db1d0198391414a3867894f837e9df3",
      "original_line" : 102,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ping.py",
      "position" : 102,
      "pull_request_review_id" : 414871909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T22:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427639815",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed feedback by @gzhao408 ",
      "created_at" : "2020-05-19T23:28:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#issuecomment-631140601",
      "id" : 631140601,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18638",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTE0MDYwMQ==",
      "updated_at" : "2020-05-19T23:28:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631140601",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r427667427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427667427"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah, that's it ð ",
      "commit_id" : "fae51ad9b43795c826b9eedc155559435f5cda14",
      "created_at" : "2020-05-20T00:01:59Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ping message\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import (\n+    msg_pong,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+PING_INTERVAL = 2 * 60\n+\n+\n+class msg_pong_corrupt(msg_pong):\n+    def serialize(self):\n+        return b\"\"\n+\n+\n+class NodePongAdd1(P2PInterface):\n+    def on_ping(self, message):\n+        self.send_message(msg_pong(message.nonce + 1))\n+\n+\n+class NodeNoPong(P2PInterface):\n+    def on_ping(self, message):\n+        pass\n+\n+\n+class PingPongTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [['-peertimeout=3']]\n+\n+    def check_peer_info(self, *, pingtime, minping, pingwait):\n+        stats = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(stats.pop('pingtime', None), pingtime)\n+        assert_equal(stats.pop('minping', None), minping)\n+        assert_equal(stats.pop('pingwait', None), pingwait)\n+\n+    def mock_forward(self, delta):\n+        self.mock_time += delta\n+        self.nodes[0].setmocktime(self.mock_time)\n+\n+    def run_test(self):\n+        self.mock_time = int(time.time())\n+        self.mock_forward(0)\n+\n+        self.log.info('Check that ping is sent after connection is established')\n+        no_pong_node = self.nodes[0].add_p2p_connection(NodeNoPong())\n+        self.mock_forward(3)\n+        assert no_pong_node.last_message.pop('ping').nonce != 0\n+        self.check_peer_info(pingtime=None, minping=None, pingwait=3)\n+\n+        self.log.info('Reply without nonce cancels ping')\n+        with self.nodes[0].assert_debug_log(['pong peer=0: Short payload']):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18638#discussion_r427667427",
      "id" : 427667427,
      "in_reply_to_id" : 426923791,
      "line" : 65,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY2NzQyNw==",
      "original_commit_id" : "fac63aba8db1d0198391414a3867894f837e9df3",
      "original_line" : 65,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ping.py",
      "position" : 65,
      "pull_request_review_id" : 414904669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-20T00:02:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427667427",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   }
]
