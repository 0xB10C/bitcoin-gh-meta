[
   {
      "author_association" : "MEMBER",
      "body" : "My assumption is that those TODOs would be taken care of as part of #18807. Is that correct @amitiuttarwar ?",
      "created_at" : "2020-05-06T00:42:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-624381434",
      "id" : 624381434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDM4MTQzNA==",
      "updated_at" : "2020-05-06T00:42:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624381434",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@fanquake sorry for the confusion ð\r\n@gzhao408 offered to implement these follow ups, so I asked her to open a PR so I & others could review. I was thinking (now that this PR is open), I'd update #18807 to let reviewers know, & focus that PR on updates to release notes and tests. \r\ndoes that seem reasonable? ",
      "created_at" : "2020-05-06T02:02:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-624404573",
      "id" : 624404573,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDQwNDU3Mw==",
      "updated_at" : "2020-05-06T02:02:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624404573",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> does that seem reasonable?\r\n\r\n@amitiuttarwar Yea of course. Just wanted to clarify that you weren't both working on the same changes in parallel.",
      "created_at" : "2020-05-06T02:06:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-624405490",
      "id" : 624405490,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDQwNTQ5MA==",
      "updated_at" : "2020-05-06T02:06:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624405490",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@fanquake thanks!\r\n\r\nConcept ACK :) will review soon ",
      "created_at" : "2020-05-06T02:11:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-624406521",
      "id" : 624406521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDQwNjUyMQ==",
      "updated_at" : "2020-05-06T02:11:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624406521",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r420908838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420908838"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        if (m_mempool.exists(txid)) {\r\n```\r\n\r\nstyle-nit: (feel free to ignore)\r\n\r\nWhen an `if` has an else branch, I generally recommend not using inversion in the condition, just to avoid double negation, which can make code harder to read. Obviously not an issue here, so feel free to ignore.\r\n\r\nHowever, while this fights the symptom (unbroadcast txid exists), it doesn't prevent it from happening. Also, `RelayTransaction` is hopefully already a noop if the txid does not exist.\r\n\r\nWhat do you think about adding this check to the mempool member function that adds the unbroadcast transactions to the set? This way, the error will be caught as early as possible.",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-06T16:02:54Z",
      "diff_hunk" : "@@ -815,7 +815,12 @@ void PeerLogicValidation::ReattemptInitialBroadcast(CScheduler& scheduler) const\n     std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n \n     for (const uint256& txid : unbroadcast_txids) {\n-        RelayTransaction(txid, *connman);\n+        // Sanity check: all unbroadcast txns should exist in the mempool\n+        if (!m_mempool.exists(txid)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r420908838",
      "id" : 420908838,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkwODgzOA==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 819,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 406762220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T00:35:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420908838",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r420910109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420910109"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: instead of a \"blind cast\" I slightly prefer the one that enables compile time checks and fails compilation in case it should be impossible to cast without loss of precision.\r\n\r\n```suggestion\r\n    ret.pushKV(\"unbroadcastsize\", int64_t{pool.GetUnbroadcastTxs().size())};\r\n```",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-06T16:04:46Z",
      "diff_hunk" : "@@ -1389,6 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n+    ret.pushKV(\"unbroadcastsize\", (int64_t)pool.GetUnbroadcastTxs().size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r420910109",
      "id" : 420910109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkxMDEwOQ==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 1394,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 406762220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T00:35:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420910109",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r421008446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421008446"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point about inversion on an if+else, I'll rearrange to make it more clear.\r\n\r\nYeah, I think it'd make sense to add this check to `AddUnbroadcastTx` ([here](https://github.com/bitcoin/bitcoin/blob/7bcc42b4035b878719d13201286e322989b415c5/src/txmempool.h#L705)).\r\nApart from making sure we only add txids that exist in the mempool to unbroadcast, I think this sanity check helps if a tx was removed from the mempool but somehow stayed in the unbroadcast set - which shouldn't happen, but just in case?",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-06T18:37:28Z",
      "diff_hunk" : "@@ -815,7 +815,12 @@ void PeerLogicValidation::ReattemptInitialBroadcast(CScheduler& scheduler) const\n     std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n \n     for (const uint256& txid : unbroadcast_txids) {\n-        RelayTransaction(txid, *connman);\n+        // Sanity check: all unbroadcast txns should exist in the mempool\n+        if (!m_mempool.exists(txid)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r421008446",
      "id" : 421008446,
      "in_reply_to_id" : 420908838,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAwODQ0Ng==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 819,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 406885157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T00:35:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421008446",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r421014509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421014509"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Jup, better to do the check in two places than in one. This needs a mempool lookup, but the cost doesn't seem too much, as this is only done every 10 minutes or when a new transaction is added to the mempool anyway.",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-06T18:47:28Z",
      "diff_hunk" : "@@ -815,7 +815,12 @@ void PeerLogicValidation::ReattemptInitialBroadcast(CScheduler& scheduler) const\n     std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n \n     for (const uint256& txid : unbroadcast_txids) {\n-        RelayTransaction(txid, *connman);\n+        // Sanity check: all unbroadcast txns should exist in the mempool\n+        if (!m_mempool.exists(txid)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r421014509",
      "id" : 421014509,
      "in_reply_to_id" : 420908838,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAxNDUwOQ==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 819,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 406892494,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T00:35:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421014509",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. Code looks good, will do ACK when @MarcoFalke comments are addressed.",
      "created_at" : "2020-05-07T13:21:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-625251641",
      "id" : 625251641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTI1MTY0MQ==",
      "updated_at" : "2020-05-07T13:21:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625251641",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422529987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422529987"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That makes sense. The only issue is it wouldn't be consistent with all the other casts throughout the file. I'm not sure what's the best practice: let this one be inconsistent, change all of them in this PR, or change all of them in a followup PR? ",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-09T18:31:05Z",
      "diff_hunk" : "@@ -1389,6 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n+    ret.pushKV(\"unbroadcastsize\", (int64_t)pool.GetUnbroadcastTxs().size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422529987",
      "id" : 422529987,
      "in_reply_to_id" : 420910109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUyOTk4Nw==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 1394,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 408673963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T00:35:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422529987",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422531192"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422531192"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The guideline is that new code should follow best practices, old code can stay as is.",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-09T18:41:54Z",
      "diff_hunk" : "@@ -1389,6 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n+    ret.pushKV(\"unbroadcastsize\", (int64_t)pool.GetUnbroadcastTxs().size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422531192",
      "id" : 422531192,
      "in_reply_to_id" : 420910109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUzMTE5Mg==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 1394,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 408674857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T00:35:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422531192",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422531489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422531489"
         }
      },
      "author_association" : "MEMBER",
      "body" : "it's tough to aim for consistency in bitcoin bc the project values careful review for any changes (thus refactor PRs are generally only considered if there's a feature being built on top) so generally, we try to improve over time as we touch lines of code. \r\n\r\nanother example you'll see is mismatched naming conventions. code that's been touched recently adheres to the best practices, but code that's been around for longer still follows old conventions \r\n\r\n(tldr- improve what you touch over time instead of aiming for consistency) ",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-09T18:44:31Z",
      "diff_hunk" : "@@ -1389,6 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n+    ret.pushKV(\"unbroadcastsize\", (int64_t)pool.GetUnbroadcastTxs().size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422531489",
      "id" : 422531489,
      "in_reply_to_id" : 420910109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUzMTQ4OQ==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 1394,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 408675042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T00:35:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422531489",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422534493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422534493"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Makes sense, thank you!",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-09T19:12:52Z",
      "diff_hunk" : "@@ -1389,6 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n+    ret.pushKV(\"unbroadcastsize\", (int64_t)pool.GetUnbroadcastTxs().size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422534493",
      "id" : 422534493,
      "in_reply_to_id" : 420910109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUzNDQ5Mw==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 1394,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 408677031,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T00:35:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422534493",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry for all the force pushes ð. Addressed MarcoFalke's comments and the `mempool_packages.py` error. As mzumsande said, it was due to the `unbroadcast` value changing in between calls (i.e. a transaction completed initial broadcast while the test was running, so a subsequent call with `verbose=True` was inconsistent with before. \r\n\r\nWith `unbroadcast` as one of the mempool entry fields, it's probably not a good idea to compare mempool entries as a whole, ie `assert_equal(mempool0[tx], mempool1[tx]` because `unbroadcast` might be different. Most tests are more specific than this, so they are ok. I fixed `mempool_packages.py` by having the node wait for `len(mempool)` invs, so all `unbroadcast`s should be False.",
      "created_at" : "2020-05-09T22:04:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-626241339",
      "id" : 626241339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjI0MTMzOQ==",
      "updated_at" : "2020-05-09T22:04:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626241339",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I meant an earlier spot in my comment: The `assert_equal(entry, mempool[x])` in L92 can fail because \r\n`mempool = self.nodes[0].getrawmempool(True)` and \r\n`entry = self.nodes[0].getmempoolentry(x)` \r\ncan have inconsistent unbroadcast flags if we haven't waited before calling `getrawmempool` the first time.",
      "created_at" : "2020-05-13T00:03:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-627663719",
      "id" : 627663719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzY2MzcxOQ==",
      "updated_at" : "2020-05-13T00:03:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627663719",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I meant an earlier spot in my comment: The `assert_equal(entry, mempool[x])` in L92 \r\n\r\n@mzumsande OMG I am so sorry ð¤¦ââï¸ that should have been obvious. Just fixed it (I hope), waiting to see what travis says. \r\n\r\n",
      "created_at" : "2020-05-13T00:40:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-627674733",
      "id" : 627674733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzY3NDczMw==",
      "updated_at" : "2020-05-13T00:41:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627674733",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #12677 (RPC: Add ancestor{count,size,fees} to listunspent output by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-13T08:38:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-627838670",
      "id" : 627838670,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzgzODY3MA==",
      "updated_at" : "2020-05-13T08:38:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627838670",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424416374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424416374"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The condition for initial broadcast is not that an inv was sent, but that a getdata was received\r\n\r\nI think you can simply replace this with a `self.sync_mempools()` and remove the newly added p2p connection",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-13T12:59:13Z",
      "diff_hunk" : "@@ -72,6 +74,10 @@ def run_test(self):\n             value = sent_value\n             chain.append(txid)\n \n+        # Wait until mempool transactions have passed initial broadcast (got an inv for each one)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424416374",
      "id" : 424416374,
      "line" : 77,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxNjM3NA==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 77,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 20,
      "pull_request_review_id" : 410896873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T12:59:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424416374",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424419308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424419308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    ret.pushKV(\"unbroadcastsize\", int64_t{pool.GetUnbroadcastTxs().size())};\r\n```\r\n\r\nThis does the same thing, but has additional compile time checks that fail compilation when the conversion comes with a loss of precision.",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-13T13:03:30Z",
      "diff_hunk" : "@@ -1389,7 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n-\n+    ret.pushKV(\"unbroadcastsize\", static_cast<int64_t>(pool.GetUnbroadcastTxs().size()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424419308",
      "id" : 424419308,
      "line" : 1394,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxOTMwOA==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 1394,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 21,
      "pull_request_review_id" : 410900699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T13:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424419308",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424697810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424697810"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think you can simply replace this with a self.sync_mempools() and remove the newly added p2p connection\r\n\r\nI've tried this, but it times out: `AssertionError: Mempool sync timed out after 60s`\r\n\r\n> The condition for initial broadcast is not that an inv was sent, but that a getdata was received\r\n\r\nOh this is my misunderstanding. I can try to have a `wait_until` that counts the `msg_getdata`s received by `nodes[0]`? Open to suggestions",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-13T20:02:12Z",
      "diff_hunk" : "@@ -72,6 +74,10 @@ def run_test(self):\n             value = sent_value\n             chain.append(txid)\n \n+        # Wait until mempool transactions have passed initial broadcast (got an inv for each one)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424697810",
      "id" : 424697810,
      "in_reply_to_id" : 424416374,
      "line" : 77,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5NzgxMA==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 77,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 20,
      "pull_request_review_id" : 411256894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T20:03:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424697810",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424700892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424700892"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, I missed that the second node has a stricter `limitancestorcount` set.\r\n\r\nIn that case your suggestion to wait for the getdata makes most sense, I guess.\r\n\r\nSo \r\n\r\n* register callback in mininode to send getdata when inv arrives\r\n* wait for invs\r\n* sync_with_ping (to flush all buffers)\r\n\r\nshould work",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-13T20:07:59Z",
      "diff_hunk" : "@@ -72,6 +74,10 @@ def run_test(self):\n             value = sent_value\n             chain.append(txid)\n \n+        # Wait until mempool transactions have passed initial broadcast (got an inv for each one)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424700892",
      "id" : 424700892,
      "in_reply_to_id" : 424416374,
      "line" : 77,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwMDg5Mg==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 77,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 20,
      "pull_request_review_id" : 411260915,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T20:08:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424700892",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424701189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424701189"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Really sorry about this - I got a compilation error: \r\n```\r\nrpc/blockchain.cpp:1394:43: error: non-constant-expression cannot be narrowed from type 'std::__1::set<uint256, std::__1::less<uint256>,\r\n      std::__1::allocator<uint256> >::size_type' (aka 'unsigned long') to 'int64_t' (aka 'long long') in initializer list [-Wc++11-narrowing]\r\n    ret.pushKV(\"unbroadcastsize\", int64_t{pool.GetUnbroadcastTxs().size()});\r\n                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nrpc/blockchain.cpp:1394:43: note: insert an explicit cast to silence this issue\r\n    ret.pushKV(\"unbroadcastsize\", int64_t{pool.GetUnbroadcastTxs().size()});\r\n                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                                          static_cast<int64_t>(          )\r\n```\r\nSo I followed the suggestion to fix it. I'm not sure why it didn't work for me.",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-13T20:08:36Z",
      "diff_hunk" : "@@ -1389,7 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n-\n+    ret.pushKV(\"unbroadcastsize\", static_cast<int64_t>(pool.GetUnbroadcastTxs().size()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424701189",
      "id" : 424701189,
      "in_reply_to_id" : 424419308,
      "line" : 1394,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwMTE4OQ==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 1394,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 21,
      "pull_request_review_id" : 411261320,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T20:08:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424701189",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424702151"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424702151"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you, this is super helpful! ð ",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-13T20:10:22Z",
      "diff_hunk" : "@@ -72,6 +74,10 @@ def run_test(self):\n             value = sent_value\n             chain.append(txid)\n \n+        # Wait until mempool transactions have passed initial broadcast (got an inv for each one)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424702151",
      "id" : 424702151,
      "in_reply_to_id" : 424416374,
      "line" : 77,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwMjE1MQ==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 77,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 20,
      "pull_request_review_id" : 411262553,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T20:10:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424702151",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424708021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424708021"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, I guess you can use this signature `bool pushKV(const std::string&, uint64_t)`. It should already be selected by default, so I don't see why we want to cast in the first place.\r\n\r\nI think you can either:\r\n\r\n* Remove the cast\r\n* Select the signature for `uint64_t`",
      "commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "created_at" : "2020-05-13T20:21:19Z",
      "diff_hunk" : "@@ -1389,7 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n-\n+    ret.pushKV(\"unbroadcastsize\", static_cast<int64_t>(pool.GetUnbroadcastTxs().size()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424708021",
      "id" : 424708021,
      "in_reply_to_id" : 424419308,
      "line" : 1394,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwODAyMQ==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 1394,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 21,
      "pull_request_review_id" : 411270051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T20:21:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424708021",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
