[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18867#discussion_r419431163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18867"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419431163"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                if (e.what() != std::string{\"Attempted to overwrite an unspent coin (when possible_overwrite is false)\"}) raise e;\r\n```\r\n\r\nCould `expected_code_path` be removed with this fixup? If yes, that seems preferable, as it is less code.",
      "commit_id" : "b5f971a16ecbfcb0487b274f09516f17dfa19ab6",
      "created_at" : "2020-05-04T13:22:40Z",
      "diff_hunk" : "@@ -0,0 +1,295 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <amount.h>\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <coins.h>\n+#include <consensus/tx_verify.h>\n+#include <consensus/validation.h>\n+#include <key.h>\n+#include <node/coinstats.h>\n+#include <optional.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <validation.h>\n+\n+#include <cstdint>\n+#include <limits>\n+#include <string>\n+#include <vector>\n+\n+namespace {\n+const Coin EMPTY_COIN{};\n+\n+bool operator==(const Coin& a, const Coin& b)\n+{\n+    if (a.IsSpent() && b.IsSpent()) return true;\n+    return static_cast<bool>(a.fCoinBase) == static_cast<bool>(b.fCoinBase) && a.nHeight == b.nHeight && a.out == b.out;\n+}\n+} // namespace\n+\n+void initialize()\n+{\n+    static const ECCVerifyHandle ecc_verify_handle;\n+    ECC_Start();\n+    SelectParams(CBaseChainParams::REGTEST);\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    CCoinsView backend_coins_view;\n+    CCoinsViewCache coins_view_cache{&backend_coins_view};\n+    COutPoint random_out_point;\n+    Coin random_coin;\n+    CMutableTransaction random_mutable_transaction;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 9)) {\n+        case 0: {\n+            if (random_coin.IsSpent()) {\n+                break;\n+            }\n+            Coin coin = random_coin;\n+            bool expected_code_path = false;\n+            try {\n+                coins_view_cache.AddCoin(random_out_point, std::move(coin), fuzzed_data_provider.ConsumeBool());\n+                expected_code_path = true;\n+            } catch (const std::logic_error& e) {\n+                if (e.what() == std::string{\"Attempted to overwrite an unspent coin (when possible_overwrite is false)\"}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18867#discussion_r419431163",
      "id" : 419431163,
      "line" : 64,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzMTE2Mw==",
      "original_commit_id" : "b5f971a16ecbfcb0487b274f09516f17dfa19ab6",
      "original_line" : 64,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/test/fuzz/coins_view.cpp",
      "position" : 64,
      "pull_request_review_id" : 404980944,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18867",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-04T13:22:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419431163",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18867#discussion_r419440744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18867"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419440744"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The current formulation is intentional. The problem with doing it the way you suggest is that the `throw;` line (I assume `raise e;` was a typo :)) will not be covered. That would be bad for `src/test/fuzz/` where I want literally 100% line coverage to be able to see fuzzing harness gaps where our inputs are not able to reach :)",
      "commit_id" : "b5f971a16ecbfcb0487b274f09516f17dfa19ab6",
      "created_at" : "2020-05-04T13:36:09Z",
      "diff_hunk" : "@@ -0,0 +1,295 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <amount.h>\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <coins.h>\n+#include <consensus/tx_verify.h>\n+#include <consensus/validation.h>\n+#include <key.h>\n+#include <node/coinstats.h>\n+#include <optional.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <validation.h>\n+\n+#include <cstdint>\n+#include <limits>\n+#include <string>\n+#include <vector>\n+\n+namespace {\n+const Coin EMPTY_COIN{};\n+\n+bool operator==(const Coin& a, const Coin& b)\n+{\n+    if (a.IsSpent() && b.IsSpent()) return true;\n+    return static_cast<bool>(a.fCoinBase) == static_cast<bool>(b.fCoinBase) && a.nHeight == b.nHeight && a.out == b.out;\n+}\n+} // namespace\n+\n+void initialize()\n+{\n+    static const ECCVerifyHandle ecc_verify_handle;\n+    ECC_Start();\n+    SelectParams(CBaseChainParams::REGTEST);\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    CCoinsView backend_coins_view;\n+    CCoinsViewCache coins_view_cache{&backend_coins_view};\n+    COutPoint random_out_point;\n+    Coin random_coin;\n+    CMutableTransaction random_mutable_transaction;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 9)) {\n+        case 0: {\n+            if (random_coin.IsSpent()) {\n+                break;\n+            }\n+            Coin coin = random_coin;\n+            bool expected_code_path = false;\n+            try {\n+                coins_view_cache.AddCoin(random_out_point, std::move(coin), fuzzed_data_provider.ConsumeBool());\n+                expected_code_path = true;\n+            } catch (const std::logic_error& e) {\n+                if (e.what() == std::string{\"Attempted to overwrite an unspent coin (when possible_overwrite is false)\"}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18867#discussion_r419440744",
      "id" : 419440744,
      "in_reply_to_id" : 419431163,
      "line" : 64,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0MDc0NA==",
      "original_commit_id" : "b5f971a16ecbfcb0487b274f09516f17dfa19ab6",
      "original_line" : 64,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/test/fuzz/coins_view.cpp",
      "position" : 64,
      "pull_request_review_id" : 404992786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18867",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-04T13:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419440744",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "nice, Concept ACK",
      "created_at" : "2020-05-04T15:42:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18867#issuecomment-623541065",
      "id" : 623541065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18867",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzU0MTA2NQ==",
      "updated_at" : "2020-05-04T15:42:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623541065",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK https://github.com/bitcoin/bitcoin/pull/18867/commits/b5f971a16ecbfcb0487b274f09516f17dfa19ab6",
      "created_at" : "2020-05-13T19:39:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18867#issuecomment-628204316",
      "id" : 628204316,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18867",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyODIwNDMxNg==",
      "updated_at" : "2020-05-13T19:39:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628204316",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Would you mind reviewing? :)",
      "created_at" : "2020-05-18T20:12:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18867#issuecomment-630410609",
      "id" : 630410609,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18867",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDQxMDYwOQ==",
      "updated_at" : "2020-05-18T20:12:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630410609",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
