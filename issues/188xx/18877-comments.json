[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems the `lint` target fails in the Travis CI.",
      "created_at" : "2020-05-05T08:46:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-623933451",
      "id" : 623933451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzkzMzQ1MQ==",
      "updated_at" : "2020-05-05T08:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623933451",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18698 (Make g_chainman internal to validation by MarcoFalke)\n* #18638 (net: Use mockable time for ping/pong, add tests by MarcoFalke)\n* #18242 (Add BIP324 encrypted p2p transport de-/serializer (only used in tests) by jonasschnelli)\n* #18000 (Index for UTXO Set Statistics by fjahr)\n* #17479 (Return BlockValidationState from ProcessNewBlock if CheckBlock/AcceptBlock fails by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-05T09:25:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-623950453",
      "id" : 623950453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzk1MDQ1Mw==",
      "updated_at" : "2020-05-06T03:03:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623950453",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r420393465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420393465"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`g_enabled_filter_types.count(BlockFilterType::BASIC)`? otherwise `#include <algorithm>`.",
      "commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "created_at" : "2020-05-05T20:42:43Z",
      "diff_hunk" : "@@ -986,6 +987,16 @@ bool AppInitParameterInteraction()\n         }\n     }\n \n+    // Signal NODE_COMPACT_FILTERS if peercfilters and required index are both enabled.\n+    if (gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS)) {\n+        const bool index_enabled = std::find(g_enabled_filter_types.begin(),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r420393465",
      "id" : 420393465,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM5MzQ2NQ==",
      "original_commit_id" : "493eb3bd47628610627d805ca520b9a0187b5240",
      "original_line" : 992,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 406139827,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-06T15:25:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420393465",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r420531180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420531180"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good suggestion. Taken.",
      "commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "created_at" : "2020-05-06T03:52:17Z",
      "diff_hunk" : "@@ -986,6 +987,16 @@ bool AppInitParameterInteraction()\n         }\n     }\n \n+    // Signal NODE_COMPACT_FILTERS if peercfilters and required index are both enabled.\n+    if (gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS)) {\n+        const bool index_enabled = std::find(g_enabled_filter_types.begin(),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r420531180",
      "id" : 420531180,
      "in_reply_to_id" : 420393465,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzMTE4MA==",
      "original_commit_id" : "493eb3bd47628610627d805ca520b9a0187b5240",
      "original_line" : 992,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 406289036,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-06T15:25:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420531180",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Note to reviewers: the Travis failures are timeouts and can be ignored. This PR is ready for review.",
      "created_at" : "2020-05-06T03:52:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-624428221",
      "id" : 624428221,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDQyODIyMQ==",
      "updated_at" : "2020-05-06T03:52:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624428221",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421010893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421010893"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Update `allNetMessageTypes` as per namespace comment.",
      "commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "created_at" : "2020-05-06T18:41:33Z",
      "diff_hunk" : "@@ -234,6 +234,20 @@ extern const char *GETBLOCKTXN;\n  * @since protocol version 70014 as described by BIP 152\n  */\n extern const char *BLOCKTXN;\n+/**\n+ * getcfcheckpt requests evenly spaced compact filter headers, enabling\n+ * parallelized download and validation of the headers between them.\n+ * Only available with service bit NODE_COMPACT_FILTERS as described by\n+ * BIP 157 & 158.\n+ */\n+extern const char *GETCFCHECKPT;\n+/**\n+ * cfcheckpt is a response to a getcfcheckpt request containing a vector of\n+ * evenly spaced filter headers for blocks on the requested chain.\n+ * Only available with service bit NODE_COMPACT_FILTERS as described by\n+ * BIP 157 & 158.\n+ */\n+extern const char *CFCHECKPT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421010893",
      "id" : 421010893,
      "line" : 250,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAxMDg5Mw==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 250,
      "original_position" : 17,
      "original_start_line" : 237,
      "path" : "src/protocol.h",
      "position" : 17,
      "pull_request_review_id" : 406888129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : 237,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-07T00:09:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421010893",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421021746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421021746"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Might be worth separating these checks. Otherwise, the logging is not quite accurate when `-peercfilters` is not set.",
      "commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "created_at" : "2020-05-06T18:59:13Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421021746",
      "id" : 421021746,
      "line" : 1999,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyMTc0Ng==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 1999,
      "original_position" : 52,
      "original_start_line" : 1991,
      "path" : "src/net_processing.cpp",
      "position" : 52,
      "pull_request_review_id" : 406888129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : 1991,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-07T00:09:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421021746",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421029307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421029307"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Also use `const` here for consistency with `stop_index`?",
      "commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "created_at" : "2020-05-06T19:12:02Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421029307",
      "id" : 421029307,
      "line" : 1989,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyOTMwNw==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 1989,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 42,
      "pull_request_review_id" : 406888129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T00:09:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421029307",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421043128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421043128"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Given block heights are of type `int` in `CBlockIndex`, perhaps `height` and `CFCHECKPT_INTERVAL` should be `int` as well instead of `uint32_t`.",
      "commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "created_at" : "2020-05-06T19:36:37Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and was at some point connected to the active chain.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {\n+            LogPrint(BCLog::NET, \"peer %d requested invalid block hash: %s\\n\",\n+                     pfrom->GetId(), stop_hash.ToString());\n+            pfrom->fDisconnect = true;\n+            return false;\n+        }\n+    }\n+\n+    filter_index = GetBlockFilterIndex(filter_type);\n+    if (!filter_index) {\n+        LogPrint(BCLog::NET, \"Filter index for supported type %s not found\\n\", BlockFilterTypeName(filter_type));\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+/**\n+ * Handle a cfcheckpt request.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   vRecv           The raw message received\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   connman         Pointer to the connection manager\n+ */\n+static void ProcessGetCFCheckPt(CNode* pfrom, CDataStream& vRecv, const CChainParams& chain_params,\n+                                CConnman* connman)\n+{\n+    uint8_t filter_type_ser;\n+    uint256 stop_hash;\n+\n+    vRecv >> filter_type_ser >> stop_hash;\n+\n+    const BlockFilterType filter_type = static_cast<BlockFilterType>(filter_type_ser);\n+\n+    const CBlockIndex* stop_index;\n+    BlockFilterIndex* filter_index;\n+    if (!PrepareBlockFilterRequest(pfrom, chain_params, filter_type, stop_hash,\n+                                   stop_index, filter_index)) {\n+        return;\n+    }\n+\n+    std::vector<uint256> headers(stop_index->nHeight / CFCHECKPT_INTERVAL);\n+\n+    // Populate headers.\n+    const CBlockIndex* block_index = stop_index;\n+    for (int i = headers.size() - 1; i >= 0; i--) {\n+        uint32_t height = (i + 1) * CFCHECKPT_INTERVAL;\n+        block_index = block_index->GetAncestor(height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421043128",
      "id" : 421043128,
      "line" : 2056,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA0MzEyOA==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 2056,
      "original_position" : 109,
      "original_start_line" : 2050,
      "path" : "src/net_processing.cpp",
      "position" : 109,
      "pull_request_review_id" : 406888129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : 2050,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-07T00:09:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421043128",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421057005"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421057005"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/cfcheckpt/getcfcheckpt",
      "commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "created_at" : "2020-05-06T20:01:22Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and was at some point connected to the active chain.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {\n+            LogPrint(BCLog::NET, \"peer %d requested invalid block hash: %s\\n\",\n+                     pfrom->GetId(), stop_hash.ToString());\n+            pfrom->fDisconnect = true;\n+            return false;\n+        }\n+    }\n+\n+    filter_index = GetBlockFilterIndex(filter_type);\n+    if (!filter_index) {\n+        LogPrint(BCLog::NET, \"Filter index for supported type %s not found\\n\", BlockFilterTypeName(filter_type));\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+/**\n+ * Handle a cfcheckpt request.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421057005",
      "id" : 421057005,
      "line" : 2024,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA1NzAwNQ==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 2024,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 77,
      "pull_request_review_id" : 406888129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T00:09:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421057005",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421330556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421330556"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is the following scenario plausible ? Client receives from peers block H1 as tip and goes offline. H1 is reorg'ed out of the active chain. After a month, Client goes back and try to start filter-sync through checkpoints. Sending H1 will be rejected as per `BlockRequestAllowed` we reject reorg'ed out block older than a month, but has been part of the active chain and dutifully announced.\r\n\r\nIt maybe a marginal issue, but at least comment should mention that stop block should have been connected to the active chain in the last month.",
      "commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "created_at" : "2020-05-07T08:29:42Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and was at some point connected to the active chain.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421330556",
      "id" : 421330556,
      "line" : 2006,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMzMDU1Ng==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 2006,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 59,
      "pull_request_review_id" : 407256641,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T08:53:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421330556",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421344230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421344230"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this test verify the following spec requirement \"StopHash MUST be known to belong to a block accepted by the receiving peer. This is the case if the peer had previously sent a headers or inv message with any descendent blocks\" ?\r\n\r\nThis point is unclear to me with regards to the receiver requirement, what should we do in case of peer asking for a `StopHash` non-yet-announced to them. Do we check `StopHash` inferior ou equal to its `pindexBestHeaderSent` somewhere ?",
      "commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "created_at" : "2020-05-07T08:51:29Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peercfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421344230",
      "id" : 421344230,
      "line" : 24,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM0NDIzMA==",
      "original_commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "original_line" : 24,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : 24,
      "pull_request_review_id" : 407256641,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T08:53:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421344230",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
