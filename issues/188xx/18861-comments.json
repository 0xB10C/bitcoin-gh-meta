[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17303 (p2p: Stop relaying non-mempool txs, improve tx privacy slightly by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-04T07:52:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-623312942",
      "id" : 623312942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzMxMjk0Mg==",
      "updated_at" : "2020-05-04T07:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623312942",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-05-04T13:35:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-623467736",
      "id" : 623467736,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzQ2NzczNg==",
      "updated_at" : "2020-05-04T13:35:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623467736",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-05-04T14:03:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-623483603",
      "id" : 623483603,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzQ4MzYwMw==",
      "updated_at" : "2020-05-04T14:03:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623483603",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. code looks reasonable, just checks for presence on `setInventoryTxToSend` before sending the TX. I'll review in more depth later this week, but one piece of feedback for the description\r\n\r\nI got a bit confused by this part: \r\n> I believe it is however still possible to GETDATA a transaction that we have just learned about (from another peer, or from our local wallet), and answer it before we have announced it to the requesting peer.\r\n\r\nAn attempt to reword based on my understanding: \r\nif we recently learned about a transaction & a peer sends us a GETDATA before we announce it to them, we should not fulfill the request. That is a privacy leak.",
      "created_at" : "2020-05-04T18:16:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-623623739",
      "id" : 623623739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzYyMzczOQ==",
      "updated_at" : "2020-05-04T18:16:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623623739",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r419695831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419695831"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`setInventoryTxToSend` isn't only for initial broadcasts, though. At least the RPC method `sendrawtransaction` can add a transaction to it that has already been relayed previously.",
      "commit_id" : "353a391356fcf758f67683ecd2cbef759665b30b",
      "created_at" : "2020-05-04T20:06:32Z",
      "diff_hunk" : "@@ -1633,24 +1633,34 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             const CInv &inv = *it;\n             it++;\n \n+            bool too_recent = false;\n+            {\n+                // Check if the requested transaction is so recent that we're just\n+                // about to announce it to the peer; if so, they certainly shouldn't\n+                // know we already have it.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r419695831",
      "id" : 419695831,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5NTgzMQ==",
      "original_commit_id" : "998d4363375b444940286fc03262aae9f488da02",
      "original_line" : 1640,
      "original_position" : 8,
      "original_start_line" : 1638,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 405307663,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-07T22:54:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419695831",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r419707909"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419707909"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's a good point.\r\n\r\nOne possibility is making setInventoryTxToSend track a boolean determining if it's a possible re-submission.\r\n\r\nAnother is just not caring. The entries in setInventoryTxToSend are filtered by filterInventoryKnown, so it won't contain anything we know the other party already knows about. Of course, that filter is limited in size, but with 50000 entries I believe it can't expire entries faster than after 47 minutes (50000 invs / 35 (invs / msg) * (2s / msg) = 2857s), long after the entries are gone from the relay map (from which they expire after 15 minutes).\r\n\r\nIn other words: this is worrying about the situation where (a) you announced an INV (b) at least 47 minutes passed, during which you respond to a BIP35 mempool request from the peer (c) you try to rebroadcast (d) in the few seconds after the rebroadcast is scheduled but before it's sent out, you receive a GETDATA.",
      "commit_id" : "353a391356fcf758f67683ecd2cbef759665b30b",
      "created_at" : "2020-05-04T20:28:32Z",
      "diff_hunk" : "@@ -1633,24 +1633,34 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             const CInv &inv = *it;\n             it++;\n \n+            bool too_recent = false;\n+            {\n+                // Check if the requested transaction is so recent that we're just\n+                // about to announce it to the peer; if so, they certainly shouldn't\n+                // know we already have it.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r419707909",
      "id" : 419707909,
      "in_reply_to_id" : 419695831,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwNzkwOQ==",
      "original_commit_id" : "998d4363375b444940286fc03262aae9f488da02",
      "original_line" : 1640,
      "original_position" : 8,
      "original_start_line" : 1638,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 405322265,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-07T22:54:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419707909",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.",
      "created_at" : "2020-05-05T02:13:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-623799619",
      "id" : 623799619,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzc5OTYxOQ==",
      "updated_at" : "2020-05-05T02:13:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623799619",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I agree with @amitiuttarwar that the PR description is confusing (you switch the perspective of 'we' being the node sending the GETDATA and 'we' being the node receiving it). PR descriptions end up in the merge commit, so it'd be good to fix that up.\r\n\r\nI think that rather than adding another bool to the already complex `ProcessGetData` which only exists to skip over a code block, it'd be clearer to refactor the getdata tx processing into its own function. That turns your change into a two line fix.\r\n\r\nI've done that here: https://github.com/jnewbery/bitcoin/tree/pr18861.1. Feel free to use it if you think it's useful.\r\n\r\n(The function signature for `ProcessGetTransactionData()` isn't great, and I'd prefer to send individual NOTFOUND messages within that function instead of batching them, but that's no longer a pure refactor and could be done later.)",
      "created_at" : "2020-05-06T22:04:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-624915567",
      "id" : 624915567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDkxNTU2Nw==",
      "updated_at" : "2020-05-06T22:11:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624915567",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> (The function signature for ProcessGetTransactionData() isn't great, and I'd prefer to send individual NOTFOUND messages within that function instead of batching them, but that's no longer a pure refactor and could be done later.)\r\n\r\nIt would be unfortunate to make the protocol implementation less efficient just because it results in slightly cleaner code. How about an alternative, where a helper function is introduced that just returns true or false, which ProcessGetData then calls to determine which request should be turned into a TX, and which batched into NOTFOUND (where the actual construction/sending of those messages remains in ProcessGetData)?",
      "created_at" : "2020-05-07T08:30:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-625110689",
      "id" : 625110689,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTExMDY4OQ==",
      "updated_at" : "2020-05-07T08:31:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625110689",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(apologies that this conversation has wandered off-topic for the fix in this PR)\r\n\r\n> It would be unfortunate to make the protocol implementation less efficient just because it results in slightly cleaner code.\r\n\r\nLet me turn that around, and say \"it would be unfortunate to make less clean code, in order to make the wire protocol infinitesimally more efficient.\"\r\n\r\nRemember that the notfound path is the rare, failure case. How rare? Here are some stats from my node's first two peers:\r\n\r\n```\r\n> bcli getpeerinfo\r\n[\r\n  {\r\n    \"id\": 0,\r\n    [...]\r\n    \"bytessent_per_msg\": {\r\n      [...]\r\n      \"notfound\": 122,\r\n      [...]\r\n      \"tx\": 212229,\r\n    },\r\n    \"bytesrecv_per_msg\": {\r\n      [...]\r\n      \"notfound\": 427,\r\n      [...]\r\n      \"tx\": 31755274,\r\n    }\r\n  },\r\n  {\r\n    \"id\": 1,\r\n    [...]\r\n    \"bytessent_per_msg\": {\r\n      [...]\r\n      \"notfound\": 1098,\r\n      [...]\r\n      \"tx\": 108708,\r\n    },\r\n    \"bytesrecv_per_msg\": {\r\n      [...]\r\n      \"notfound\": 926,\r\n      [...]\r\n      \"tx\": 93436726,\r\n    }\r\n  },\r\n[...]\r\n```\r\n\r\nAlmost all notfound messages are 61 bytes (24 bytes header + 37 bytes data). Let's assume that an average tx message is 250 bytes for header+data.\r\n\r\nThat means for my first two peers I sent/received ~42 notfound messages and sent/received ~500,000 tx messages.\r\n\r\nLooking through my debug logs, the vast majority of notfound messages are 37 bytes, indicating a single item. So, for almost all calls of ProcessGetData(), there are zero or one notfound items, and batching has no effect on wire efficiency. Batching notfounds would save <100 messages per day for me (run `grep \"sending notfound\" .bitcoin/debug.log | grep -v \"37 bytes\"` to see for yourself).\r\n\r\nIn the adversarial case, it's more expensive for us to serve transactions than notfounds, so being more efficient doesn't protect us from any attacks.\r\n\r\nSending notfounds individually also has the nice effect of making getdata responses serial in the order we received them.\r\n\r\n> How about [...] a helper function [...] that just returns true or false\r\n\r\nI think that's better than the status quo, but I prefer delgating out to a function to do all the transaction GETDATA processing and message sending, so that it matches the responsibilities of ProcessGetBlockData() exactly.",
      "created_at" : "2020-05-07T16:16:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-625353711",
      "id" : 625353711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTM1MzcxMQ==",
      "updated_at" : "2020-05-07T16:16:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625353711",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery I've abstracted out a function for determining what tx requests to respond to. We can talk about further abstractions later.\r\n\r\n@amitiuttarwar I've also rewritten the PR description with a bunch of background information, and summarized the issue @luke-jr's brought up above.",
      "created_at" : "2020-05-07T18:28:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-625423256",
      "id" : 625423256,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTQyMzI1Ng==",
      "updated_at" : "2020-05-07T18:30:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625423256",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r421830539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421830539"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: no need for this else. The if clause returns early.",
      "commit_id" : "353a391356fcf758f67683ecd2cbef759665b30b",
      "created_at" : "2020-05-07T22:27:31Z",
      "diff_hunk" : "@@ -1604,6 +1604,36 @@ void static ProcessGetBlockData(CNode* pfrom, const CChainParams& chainparams, c\n     }\n }\n \n+//! Determine whether or not a peer can request a transaction, and return a reference to it if so.\n+Optional<CTransactionRef> static FindTxForGetData(CNode* peer, const CInv& inv, std::chrono::microseconds mempool_req, std::chrono::microseconds longlived_mempool_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    // Check if the requested transaction is so recent that we're just\n+    // about to announce it to the peer; if so, they certainly shouldn't\n+    // know we already have it.\n+    {\n+        LOCK(peer->m_tx_relay->cs_tx_inventory);\n+        if (peer->m_tx_relay->setInventoryTxToSend.count(inv.hash)) return {};\n+    }\n+\n+    auto mi = mapRelay.find(inv.hash);\n+    if (mi != mapRelay.end()) {\n+        // Send stream from relay memory\n+        return mi->second;\n+    } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r421830539",
      "id" : 421830539,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzMDUzOQ==",
      "original_commit_id" : "a00dae0108b50d951f8307cc63ee0353d3c5e712",
      "original_line" : 1622,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 407880316,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T22:54:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421830539",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r421839870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421839870"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, also reflowed the code a bit more.",
      "commit_id" : "353a391356fcf758f67683ecd2cbef759665b30b",
      "created_at" : "2020-05-07T22:54:36Z",
      "diff_hunk" : "@@ -1604,6 +1604,36 @@ void static ProcessGetBlockData(CNode* pfrom, const CChainParams& chainparams, c\n     }\n }\n \n+//! Determine whether or not a peer can request a transaction, and return a reference to it if so.\n+Optional<CTransactionRef> static FindTxForGetData(CNode* peer, const CInv& inv, std::chrono::microseconds mempool_req, std::chrono::microseconds longlived_mempool_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    // Check if the requested transaction is so recent that we're just\n+    // about to announce it to the peer; if so, they certainly shouldn't\n+    // know we already have it.\n+    {\n+        LOCK(peer->m_tx_relay->cs_tx_inventory);\n+        if (peer->m_tx_relay->setInventoryTxToSend.count(inv.hash)) return {};\n+    }\n+\n+    auto mi = mapRelay.find(inv.hash);\n+    if (mi != mapRelay.end()) {\n+        // Send stream from relay memory\n+        return mi->second;\n+    } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r421839870",
      "id" : 421839870,
      "in_reply_to_id" : 421830539,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzOTg3MA==",
      "original_commit_id" : "a00dae0108b50d951f8307cc63ee0353d3c5e712",
      "original_line" : 1622,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 407891066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T22:54:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421839870",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 353a391356fcf758f67683ecd2cbef759665b30b",
      "created_at" : "2020-05-08T01:27:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-625579008",
      "id" : 625579008,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTU3OTAwOA==",
      "updated_at" : "2020-05-08T01:27:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625579008",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK 353a391\r\nI like that we got rid of the `push` variable, looks cleaner now.\r\n\r\nDo you think there can be timing analysis, to distinguish \"it's in the setInventoryTxToSend, not sharing with you\" and \"I couldn't find it in the mempool\". \r\nMaybe I'm overthinking and mempool lookup is fast enough to not make any difference (should be same order as internet latencies or lower), but is that true for full mempools?\r\n\r\nIf really only applies to txs left MapRelay (but still in the mempool. (because I assume MapRelay lookups are very fast, unlike maybe mempool lookups).",
      "created_at" : "2020-05-08T13:41:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-625821697",
      "id" : 625821697,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTgyMTY5Nw==",
      "updated_at" : "2020-05-08T13:41:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625821697",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Maybe I'm overthinking and mempool lookup is fast enough to not make any difference (should be same order as internet latencies or lower), but is that true for full mempools?\r\n\r\n> If really only applies to txs left MapRelay (but still in the mempool. (because I assume MapRelay lookups are very fast, unlike maybe mempool lookups).\r\n\r\nBoth `mapRelay` and mempool lookups should be fast. `mapRelay` is a map, so lookups are O(logn), but the map is small. Mempool lookups are by an unordered map of txid, so are O(1). We could make `mapRelay` an unordered map for O(1) lookups, but I think we probably just want to remove it entirely eventually (#17303).",
      "created_at" : "2020-05-08T15:25:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-625869490",
      "id" : 625869490,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTg2OTQ5MA==",
      "updated_at" : "2020-05-08T15:25:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625869490",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r422540387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422540387"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: could update `CInv& inv` to be `uint256& tx_hsh` since function just uses `inv` to look up the hash 3 times? ",
      "commit_id" : "353a391356fcf758f67683ecd2cbef759665b30b",
      "created_at" : "2020-05-09T20:09:12Z",
      "diff_hunk" : "@@ -1604,6 +1604,34 @@ void static ProcessGetBlockData(CNode* pfrom, const CChainParams& chainparams, c\n     }\n }\n \n+//! Determine whether or not a peer can request a transaction, and return a reference to it if so.\n+Optional<CTransactionRef> static FindTxForGetData(CNode* peer, const CInv& inv, std::chrono::microseconds mempool_req, std::chrono::microseconds longlived_mempool_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r422540387",
      "id" : 422540387,
      "line" : 1608,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MDM4Nw==",
      "original_commit_id" : "353a391356fcf758f67683ecd2cbef759665b30b",
      "original_line" : 1608,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 408680749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-09T20:31:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422540387",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r422540975"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422540975"
         }
      },
      "author_association" : "MEMBER",
      "body" : "not sure what \"stream\" means here. `mi` will be an iterator to a `uint256, CTransaction` element on the map. I think this is a relic, but might be worth updating (or just removing) if you touch the code again.",
      "commit_id" : "353a391356fcf758f67683ecd2cbef759665b30b",
      "created_at" : "2020-05-09T20:15:16Z",
      "diff_hunk" : "@@ -1604,6 +1604,34 @@ void static ProcessGetBlockData(CNode* pfrom, const CChainParams& chainparams, c\n     }\n }\n \n+//! Determine whether or not a peer can request a transaction, and return a reference to it if so.\n+Optional<CTransactionRef> static FindTxForGetData(CNode* peer, const CInv& inv, std::chrono::microseconds mempool_req, std::chrono::microseconds longlived_mempool_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    // Check if the requested transaction is so recent that we're just\n+    // about to announce it to the peer; if so, they certainly shouldn't\n+    // know we already have it.\n+    {\n+        LOCK(peer->m_tx_relay->cs_tx_inventory);\n+        if (peer->m_tx_relay->setInventoryTxToSend.count(inv.hash)) return {};\n+    }\n+\n+    // Send stream from relay memory",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r422540975",
      "id" : 422540975,
      "line" : 1618,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MDk3NQ==",
      "original_commit_id" : "353a391356fcf758f67683ecd2cbef759665b30b",
      "original_line" : 1618,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 408680749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-09T20:31:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422540975",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   }
]
