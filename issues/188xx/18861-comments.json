[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17303 (p2p: Stop relaying non-mempool txs, improve tx privacy slightly by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-04T07:52:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-623312942",
      "id" : 623312942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzMxMjk0Mg==",
      "updated_at" : "2020-05-04T07:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623312942",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-05-04T13:35:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-623467736",
      "id" : 623467736,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzQ2NzczNg==",
      "updated_at" : "2020-05-04T13:35:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623467736",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-05-04T14:03:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-623483603",
      "id" : 623483603,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzQ4MzYwMw==",
      "updated_at" : "2020-05-04T14:03:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623483603",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. code looks reasonable, just checks for presence on `setInventoryTxToSend` before sending the TX. I'll review in more depth later this week, but one piece of feedback for the description\r\n\r\nI got a bit confused by this part: \r\n> I believe it is however still possible to GETDATA a transaction that we have just learned about (from another peer, or from our local wallet), and answer it before we have announced it to the requesting peer.\r\n\r\nAn attempt to reword based on my understanding: \r\nif we recently learned about a transaction & a peer sends us a GETDATA before we announce it to them, we should not fulfill the request. That is a privacy leak.",
      "created_at" : "2020-05-04T18:16:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-623623739",
      "id" : 623623739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzYyMzczOQ==",
      "updated_at" : "2020-05-04T18:16:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623623739",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r419695831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419695831"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`setInventoryTxToSend` isn't only for initial broadcasts, though. At least the RPC method `sendrawtransaction` can add a transaction to it that has already been relayed previously.",
      "commit_id" : "998d4363375b444940286fc03262aae9f488da02",
      "created_at" : "2020-05-04T20:06:32Z",
      "diff_hunk" : "@@ -1633,24 +1633,34 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             const CInv &inv = *it;\n             it++;\n \n+            bool too_recent = false;\n+            {\n+                // Check if the requested transaction is so recent that we're just\n+                // about to announce it to the peer; if so, they certainly shouldn't\n+                // know we already have it.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r419695831",
      "id" : 419695831,
      "line" : 1640,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5NTgzMQ==",
      "original_commit_id" : "998d4363375b444940286fc03262aae9f488da02",
      "original_line" : 1640,
      "original_position" : 8,
      "original_start_line" : 1638,
      "path" : "src/net_processing.cpp",
      "position" : 8,
      "pull_request_review_id" : 405307663,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861",
      "side" : "RIGHT",
      "start_line" : 1638,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-04T20:07:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419695831",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r419707909"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419707909"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's a good point.\r\n\r\nOne possibility is making setInventoryTxToSend track a boolean determining if it's a possible re-submission.\r\n\r\nAnother is just not caring. The entries in setInventoryTxToSend are filtered by filterInventoryKnown, so it won't contain anything we know the other party already knows about. Of course, that filter is limited in size, but with 50000 entries I believe it can't expire entries faster than after 47 minutes (50000 invs / 35 (invs / msg) * (2s / msg) = 2857s), long after the entries are gone from the relay map (from which they expire after 15 minutes).\r\n\r\nIn other words: this is worrying about the situation where (a) you announced an INV (b) at least 47 minutes passed, during which you respond to a BIP35 mempool request from the peer (c) you try to rebroadcast (d) in the few seconds after the rebroadcast is scheduled but before it's sent out, you receive a GETDATA.",
      "commit_id" : "998d4363375b444940286fc03262aae9f488da02",
      "created_at" : "2020-05-04T20:28:32Z",
      "diff_hunk" : "@@ -1633,24 +1633,34 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             const CInv &inv = *it;\n             it++;\n \n+            bool too_recent = false;\n+            {\n+                // Check if the requested transaction is so recent that we're just\n+                // about to announce it to the peer; if so, they certainly shouldn't\n+                // know we already have it.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861#discussion_r419707909",
      "id" : 419707909,
      "in_reply_to_id" : 419695831,
      "line" : 1640,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwNzkwOQ==",
      "original_commit_id" : "998d4363375b444940286fc03262aae9f488da02",
      "original_line" : 1640,
      "original_position" : 8,
      "original_start_line" : 1638,
      "path" : "src/net_processing.cpp",
      "position" : 8,
      "pull_request_review_id" : 405322265,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861",
      "side" : "RIGHT",
      "start_line" : 1638,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-04T20:50:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419707909",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
