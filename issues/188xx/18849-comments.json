[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18731 (refactor: Make CCheckQueue RAII-styled by hebasto)\n* #18710 (Add local thread pool to CCheckQueue by hebasto)\n* #18468 (Span improvements by sipa)\n* #18450 (util: Use locale independent ToString(â¦) instead of locale dependent strprintf(â¦) for low-level string formatting by practicalswift)\n* #18216 (test, build: Enable -Werror=sign-compare by Empact)\n* #18071 (Refactoring CHashWriter & Get{Prevouts,Sequence,Outputs}Hash to SHA256 by JeremyRubin)\n* #17977 ([WIP] Implement BIP 340-342 validation (Schnorr/taproot/tapscript) by sipa)\n* #16224 (gui: Bilingual GUI error messages by hebasto)\n* #13062 (Make script interpreter independent from storage type CScript by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-02T12:30:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-622946443",
      "id" : 622946443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjk0NjQ0Mw==",
      "updated_at" : "2020-05-04T17:02:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622946443",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would be interesting to see this benchmarked to be able to reason about risk vs reward (where the ideal reward would be a significant measurable _and_ user-perceivable performance improvement) :)",
      "created_at" : "2020-05-02T15:38:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-622972234",
      "id" : 622972234,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjk3MjIzNA==",
      "updated_at" : "2020-05-02T15:38:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622972234",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd be very interested to see the benchmarks of this :)\r\nI've tried doing similar things in the past, but C++ makes this somewhat scary for a big project with lots of contributors because it requires more careful tracking of lifetimes.\r\nAlso a few full IBD profiles I've done in the past show IIRC ~10-15% of local IBD time is spent on `new` and `delete`.\r\n ",
      "created_at" : "2020-05-04T11:09:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-623401118",
      "id" : 623401118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzQwMTExOA==",
      "updated_at" : "2020-05-04T11:09:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623401118",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18849#discussion_r419362562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18849"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419362562"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "what about returning a `std::array<unsigned char, 18>` instead?",
      "commit_id" : "26ae7d1f3729e5bcd8cbfb4b13458e6fb386f11d",
      "created_at" : "2020-05-04T11:12:17Z",
      "diff_hunk" : "@@ -723,14 +724,14 @@ bool CService::GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const\n /**\n  * @returns An identifier unique to this service's address and port number.\n  */\n-std::vector<unsigned char> CService::GetKey() const\n-{\n-     std::vector<unsigned char> vKey;\n-     vKey.resize(18);\n-     memcpy(vKey.data(), ip, 16);\n-     vKey[16] = port / 0x100; // most significant byte of our port\n-     vKey[17] = port & 0x0FF; // least significant byte of our port\n-     return vKey;\n+CServiceKey CService::GetKey() const\n+{\n+    CServiceKey vKey;\n+    vKey.resize(18);\n+    memcpy(vKey.data(), ip, 16);\n+    vKey[16] = port / 0x100; // most significant byte of our port\n+    vKey[17] = port & 0x0FF; // least significant byte of our port\n+    return vKey;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#discussion_r419362562",
      "id" : 419362562,
      "line" : 734,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MjU2Mg==",
      "original_commit_id" : "a80f49e566303ce85c2f15ee192d037e31e6e163",
      "original_line" : 734,
      "original_position" : 27,
      "original_start_line" : 727,
      "path" : "src/netaddress.cpp",
      "position" : 27,
      "pull_request_review_id" : 404893825,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18849",
      "side" : "RIGHT",
      "start_line" : 727,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-15T16:28:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419362562",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18849#discussion_r419508333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18849"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419508333"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this makes more sense",
      "commit_id" : "26ae7d1f3729e5bcd8cbfb4b13458e6fb386f11d",
      "created_at" : "2020-05-04T15:08:34Z",
      "diff_hunk" : "@@ -723,14 +724,14 @@ bool CService::GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const\n /**\n  * @returns An identifier unique to this service's address and port number.\n  */\n-std::vector<unsigned char> CService::GetKey() const\n-{\n-     std::vector<unsigned char> vKey;\n-     vKey.resize(18);\n-     memcpy(vKey.data(), ip, 16);\n-     vKey[16] = port / 0x100; // most significant byte of our port\n-     vKey[17] = port & 0x0FF; // least significant byte of our port\n-     return vKey;\n+CServiceKey CService::GetKey() const\n+{\n+    CServiceKey vKey;\n+    vKey.resize(18);\n+    memcpy(vKey.data(), ip, 16);\n+    vKey[16] = port / 0x100; // most significant byte of our port\n+    vKey[17] = port & 0x0FF; // least significant byte of our port\n+    return vKey;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#discussion_r419508333",
      "id" : 419508333,
      "in_reply_to_id" : 419362562,
      "line" : 734,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUwODMzMw==",
      "original_commit_id" : "a80f49e566303ce85c2f15ee192d037e31e6e163",
      "original_line" : 734,
      "original_position" : 27,
      "original_start_line" : 727,
      "path" : "src/netaddress.cpp",
      "position" : 27,
      "pull_request_review_id" : 405079173,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18849",
      "side" : "RIGHT",
      "start_line" : 727,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-15T16:28:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419508333",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "One of the hottest allocations that I found that might be the \"easiest\" to take a stab at is:\r\n\r\n`cacheCoins` `unordered_map` in `CCoinsViewCache::AddCoin`:\r\n\r\n`typedef std::unordered_map<COutPoint, CCoinsCacheEntry, SaltedOutpointHasher> CCoinsMap`\r\n\r\n\r\n![May04-081624](https://user-images.githubusercontent.com/45598/80982027-94174d80-8ddf-11ea-8972-4112742492dc.png)\r\n\r\nThis picture shows that (looks like the `cacheCoins.emplace` call in `AddCoin`) is doing 60 million dynamic allocations for this small heaptrack snapshot of IBD (I think I ran this one for 5-10 minutes...?). With peak memory usage of 202.5MB.\r\n\r\nOne thing I'm trying now is a custom arena allocator for this map to see if that helps.",
      "created_at" : "2020-05-04T15:26:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-623531668",
      "id" : 623531668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzUzMTY2OA==",
      "updated_at" : "2020-05-04T15:27:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623531668",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Also a few full IBD profiles I've done in the past show IIRC ~10-15% of local IBD time is spent on new and delete.\r\n\r\nThis is a bit higher than I expected, but yes this is why gamedevs typically ban dynamic allocations from their main game loop, it absolutely kills performance: heap fragmentation, cache incoherency, etc, etc. Most high performing games arena-allocate or use custom allocators. I'm going into this from a gamedev mindset, I see IBD as our main loop. Let's minimize time spent per frame and maximize FPS (in our case, blocks/txs per second :sweat_smile: ). If we can arena/custom allocate some of these hotspots it might help a bunch.",
      "created_at" : "2020-05-04T15:38:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-623538984",
      "id" : 623538984,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzUzODk4NA==",
      "updated_at" : "2020-05-04T15:38:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623538984",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jb55 The CCoinsMap is where the actual UTXO cache is stored - it should be one allocation per UTXO. That's a huge number, because we cache a huge number of UTXOs, but I don't expect it will be easy to reduce. IBD performance heavily relies on being able to delete cache entries if they're created and spent without a flush to disk in between, which seems incompatible with arena allocation.",
      "created_at" : "2020-05-04T22:17:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-623737476",
      "id" : 623737476,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzczNzQ3Ng==",
      "updated_at" : "2020-05-04T22:30:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623737476",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @jb55 The CCoinsMap is where the actual UTXO cache is stored - it\n> should be one allocation per UTXO. That's a huge number, because we\n> cache a huge number of UTXOs, but I don't expect it will be easy to\n> reduce.\n\nyes in this case the only thing we could do better is a custom allocator\nthat maintains an efficient memory layout for cache friendliness, This\nis something I wanted to try as well in addition to reducing allocations\nwhere possible.\n",
      "created_at" : "2020-05-05T09:21:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-623948640",
      "id" : 623948640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzk0ODY0MA==",
      "updated_at" : "2020-05-05T09:21:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623948640",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "We could also replace the hashmap with one that preserves cache locality, like SwissTable (CC https://github.com/bitcoin/bitcoin/pull/16718)",
      "created_at" : "2020-05-05T10:10:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-623968554",
      "id" : 623968554,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzk2ODU1NA==",
      "updated_at" : "2020-05-05T10:10:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623968554",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: allocator, looks like there is some prior art here: https://github.com/bitcoin/bitcoin/pull/16801",
      "created_at" : "2020-05-05T18:23:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-624226380",
      "id" : 624226380,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDIyNjM4MA==",
      "updated_at" : "2020-05-05T18:23:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624226380",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18849#discussion_r425914672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18849"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425914672"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I decided against this for now since it would require me to implement a bunch of new Serialization machinery for std::array which I couldn't figure out how to do.",
      "commit_id" : "26ae7d1f3729e5bcd8cbfb4b13458e6fb386f11d",
      "created_at" : "2020-05-15T16:29:10Z",
      "diff_hunk" : "@@ -723,14 +724,14 @@ bool CService::GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const\n /**\n  * @returns An identifier unique to this service's address and port number.\n  */\n-std::vector<unsigned char> CService::GetKey() const\n-{\n-     std::vector<unsigned char> vKey;\n-     vKey.resize(18);\n-     memcpy(vKey.data(), ip, 16);\n-     vKey[16] = port / 0x100; // most significant byte of our port\n-     vKey[17] = port & 0x0FF; // least significant byte of our port\n-     return vKey;\n+CServiceKey CService::GetKey() const\n+{\n+    CServiceKey vKey;\n+    vKey.resize(18);\n+    memcpy(vKey.data(), ip, 16);\n+    vKey[16] = port / 0x100; // most significant byte of our port\n+    vKey[17] = port & 0x0FF; // least significant byte of our port\n+    return vKey;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#discussion_r425914672",
      "id" : 425914672,
      "in_reply_to_id" : 419362562,
      "line" : 734,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkxNDY3Mg==",
      "original_commit_id" : "a80f49e566303ce85c2f15ee192d037e31e6e163",
      "original_line" : 734,
      "original_position" : 27,
      "original_start_line" : 727,
      "path" : "src/netaddress.cpp",
      "position" : 27,
      "pull_request_review_id" : 412795871,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18849",
      "side" : "RIGHT",
      "start_line" : 727,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-15T16:29:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425914672",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   }
]
