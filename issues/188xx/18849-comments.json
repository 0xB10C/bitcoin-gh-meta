[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18851 (refactor: Replace thread_local use with a mutex-protected map by laanwj)\n* #18731 (refactor: Make CCheckQueue RAII-styled by hebasto)\n* #18710 (Add local thread pool to CCheckQueue by hebasto)\n* #18468 (Span improvements by sipa)\n* #18450 (util: Use locale independent ToString(â¦) instead of locale dependent strprintf(â¦) for low-level string formatting by practicalswift)\n* #18216 (test, build: Enable -Werror=sign-compare by Empact)\n* #18071 (Refactoring CHashWriter & Get{Prevouts,Sequence,Outputs}Hash to SHA256 by JeremyRubin)\n* #17977 ([WIP] Implement BIP 340-342 validation (Schnorr/taproot/tapscript) by sipa)\n* #16224 (gui: Bilingual GUI error messages by hebasto)\n* #13062 (Make script interpreter independent from storage type CScript by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-02T12:30:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-622946443",
      "id" : 622946443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjk0NjQ0Mw==",
      "updated_at" : "2020-05-03T05:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622946443",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would be interesting to see this benchmarked to be able to reason about risk vs reward (where the ideal reward would be a significant measurable _and_ user-perceivable performance improvement) :)",
      "created_at" : "2020-05-02T15:38:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-622972234",
      "id" : 622972234,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjk3MjIzNA==",
      "updated_at" : "2020-05-02T15:38:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622972234",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd be very interested to see the benchmarks of this :)\r\nI've tried doing similar things in the past, but C++ makes this somewhat scary for a big project with lots of contributors because it requires more careful tracking of lifetimes.\r\nAlso a few full IBD profiles I've done in the past show IIRC ~10-15% of local IBD time is spent on `new` and `delete`.\r\n ",
      "created_at" : "2020-05-04T11:09:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#issuecomment-623401118",
      "id" : 623401118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18849",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzQwMTExOA==",
      "updated_at" : "2020-05-04T11:09:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623401118",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18849#discussion_r419362562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18849"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419362562"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "what about returning a `std::array<unsigned char, 18>` instead?",
      "commit_id" : "a80f49e566303ce85c2f15ee192d037e31e6e163",
      "created_at" : "2020-05-04T11:12:17Z",
      "diff_hunk" : "@@ -723,14 +724,14 @@ bool CService::GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const\n /**\n  * @returns An identifier unique to this service's address and port number.\n  */\n-std::vector<unsigned char> CService::GetKey() const\n-{\n-     std::vector<unsigned char> vKey;\n-     vKey.resize(18);\n-     memcpy(vKey.data(), ip, 16);\n-     vKey[16] = port / 0x100; // most significant byte of our port\n-     vKey[17] = port & 0x0FF; // least significant byte of our port\n-     return vKey;\n+CServiceKey CService::GetKey() const\n+{\n+    CServiceKey vKey;\n+    vKey.resize(18);\n+    memcpy(vKey.data(), ip, 16);\n+    vKey[16] = port / 0x100; // most significant byte of our port\n+    vKey[17] = port & 0x0FF; // least significant byte of our port\n+    return vKey;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18849#discussion_r419362562",
      "id" : 419362562,
      "line" : 734,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MjU2Mg==",
      "original_commit_id" : "a80f49e566303ce85c2f15ee192d037e31e6e163",
      "original_line" : 734,
      "original_position" : 27,
      "original_start_line" : 727,
      "path" : "src/netaddress.cpp",
      "position" : 27,
      "pull_request_review_id" : 404893825,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18849",
      "side" : "RIGHT",
      "start_line" : 727,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-04T11:12:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419362562",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   }
]
