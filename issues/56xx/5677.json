{
   "assignee" : null,
   "body" : "This is a work in progress, but I'm PR'ing this in case anyone wants to run benchmarks (@gmaxwell, @jgarzik).\r\n\r\n- *Replace usage of boost::asio with [libevent2](http://libevent.org/)*. boost::asio is not part of C++11, so unlike other boost there is no forwards-compatibility reason to stick with it. Together with #4738 (convert json_spirit to UniValue), this rids Bitcoin Core of the worst offenders with regard to compile-time slowness.\r\n- *Replace spit-and-duct-tape http server with evhttp*. Front-end http handling is handled by libevent, a work queue (with configurable depth and parallelism) is used to handle application requests.\r\n- *Wrap HTTP request in C++ class*; this makes the application code mostly HTTP-server-neutral\r\n- *Refactor RPC to move all http-specific code to a separate file*. Theoreticaly this can allow building without HTTP server but with another RPC backend, e.g. Qt's debug console (currently not implemented) or future RPC mechanisms people may want to use.\r\n- *HTTP dispatch mechanism*; services (e.g., RPC, REST) register which URL paths they want to handle.\r\n\r\nBy using a proven, high-performance asynchronous networking library (also used by Tor) and HTTP server, problems such as #5674, #5655, #344 should be avoided.\r\n\r\nWhat works? bitcoind, bitcoin-cli, bitcoin-qt. Unit tests and RPC/REST tests pass. The aim for now is everything but SSL support.\r\n\r\nConfiguration options:\r\n\r\n- `-rpcthreads`: repurposed as \"number of  work handler threads\". Still defaults to 4.\r\n- `-rpcworkqueue`: maximum depth of work queue. When this is reached, new requests will return a 500 Internal Error.\r\n- `-rpctimeout`: inactivity time, in seconds, after which to disconnect a client.\r\n- `-debug=http`: low-level http activity logging\r\n\r\n(due to the separation of RPC and HTTP server, renaming this options may make sense)\r\n\r\nTODO:\r\n\r\n- ~~Build system (currently hardcodes libraries, so this will definitely not pass Travis)~~ (thanks @theuni)\r\n- ~~REST and RPC register their own request handlers respectively~~\r\n- Qt debug console must register a RPCTimerInterface (to make timeouts in the debug console work with -server=0)\r\n- Interrupt/Shutdown flow needs to be cleaned up, I added some hardcoded uglyness. To do this, modules must be able to register their own 'interrupt me' function without relying on boost thread interrupt functionality.\r\n\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 17,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5677/comments",
   "created_at" : "2015-01-18T16:15:02Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5677/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/5677",
   "id" : 54701083,
   "labels" : [
      {
         "color" : "006b75",
         "name" : "REST",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/REST"
      },
      {
         "color" : "0052cc",
         "name" : "RPC",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5677/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 5677,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/5677.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5677",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/5677.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5677"
   },
   "state" : "open",
   "title" : "[PoC] libevent-based http server",
   "updated_at" : "2015-01-23T16:13:56Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5677",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   }
}
