[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r908731433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908731433"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@vasild could you explain what the following block\r\n```cpp\r\n#ifndef WSAEAGAIN\r\n#ifdef EAGAIN\r\n#define WSAEAGAIN EAGAIN\r\n#else\r\n#define WSAEAGAIN WSAEWOULDBLOCK\r\n#endif\r\n#endif\r\n```\r\nis accounting for (given you added it)? I'd have thought everything inside this #else block could be replaced by `#define WSAEAGAIN WSAEWOULDBLOCK`, as `WSAEAGAIN` would never be defined?\r\n",
      "commit_id" : "ae2db1c4764e2ab0e027c9526ba51c5330bb8b1e",
      "created_at" : "2022-06-28T16:55:03Z",
      "diff_hunk" : "@@ -34,19 +37,20 @@\n #include <unistd.h>\n #endif\n \n+// We map Linux / BSD error functions and codes, to the equivalent\n+// Windows definitions, and use the WSA* names throughout our code.\n+// Note that glibc defines EWOULDBLOCK as EAGAIN (see errno.h).\n #ifndef WIN32\n typedef unsigned int SOCKET;\n-#include <errno.h>\n+#include <cerrno>\n #define WSAGetLastError()   errno\n #define WSAEINVAL           EINVAL\n-#define WSAEALREADY         EALREADY\n #define WSAEWOULDBLOCK      EWOULDBLOCK\n #define WSAEAGAIN           EAGAIN\n #define WSAEMSGSIZE         EMSGSIZE\n #define WSAEINTR            EINTR\n #define WSAEINPROGRESS      EINPROGRESS\n #define WSAEADDRINUSE       EADDRINUSE\n-#define WSAENOTSOCK         EBADF\n #define INVALID_SOCKET      (SOCKET)(~0)\n #define SOCKET_ERROR        -1\n #else",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r908731433",
      "id" : 908731433,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII5842KiQp",
      "original_commit_id" : "e872992e897e0894e64544a4d100bd96f82512e5",
      "original_line" : 56,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/compat/compat.h",
      "position" : 53,
      "pull_request_review_id" : 1022102168,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908731433/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-28T16:55:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908731433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
