[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "TODO: see if something has to be done about this assert:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/8462cd56010a8beadf95d4f3cb1357ca9d88493b/src/bench/addrman.cpp#L91",
      "created_at" : "2021-05-31T16:34:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-851589805",
      "id" : 851589805,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MTU4OTgwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-31T16:34:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/851589805",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think that's just a way to test that the returned address object isn't empty. Should probably replace it with another test.",
      "created_at" : "2021-05-31T16:36:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-851590531",
      "id" : 851590531,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MTU5MDUzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-31T16:36:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/851590531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, earlier I was convinced it would be better to get rid of ports completely for I2P, but at the time I thought it didn't exist as a concept there. I was unaware that the concept *does* exists for newer versions of the protocol.\r\n\r\nThis is more forward compatible with future versions of `i2pd` and new SAM protocol, so seems better to me.",
      "created_at" : "2021-06-02T15:51:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-853143208",
      "id" : 853143208,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MzE0MzIwOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-02T15:52:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853143208",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r644216009"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644216009"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this is exactly what we want. As (with SAM 3.1) we're unable to connect to anything except port 0 (from the perspective of later versions), shouldn't this equally bias away from port 0, as we bias away from the default port for other networks?\r\n\r\nIn other words: maybe this can be done a bit cleaner by having a network-dependent default port, which is 0 for I2P and the normal port for everything else?",
      "commit_id" : "4401bb56cf3822950b221c3fa47fb0b65312d12f",
      "created_at" : "2021-06-02T18:22:23Z",
      "diff_hunk" : "@@ -2019,8 +2019,9 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             // from advertising themselves as a service on another host and\n             // port, causing a DoS attack as nodes around the network attempt\n             // to connect to it fruitlessly.\n-            if (addr.GetPort() != Params().GetDefaultPort() && nTries < 50)\n+            if (!addr.IsI2P() && addr.GetPort() != Params().GetDefaultPort() && nTries < 50) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r644216009",
      "id" : 644216009,
      "line" : 2022,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDIxNjAwOQ==",
      "original_commit_id" : "4401bb56cf3822950b221c3fa47fb0b65312d12f",
      "original_line" : 2022,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 674541400,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T18:22:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644216009",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r644694720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644694720"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the limitation of only being able to connect to ports that equal 0 is purely internal to the I2P code - it depends on the SAM version being used and higher level code shouldn't care about that or be aware of it. So I planted the refuse-to-connect-to-non-zero-ports [check in i2p.cpp](https://github.com/bitcoin/bitcoin/pull/22112/commits/4401bb56cf3822950b221c3fa47fb0b65312d12f#diff-8945a03581b372d674f34dcb6a63e537343e376ebcd9d8c7c3d94d4366cd9b9dR175-R180).\r\n\r\nThis allows some day to remove that by only modifying `i2p.cpp` - easier, compared to if this knowledge is spilled in other modules.\r\n\r\nA network-dependent default port seems like an unnecessary generalization to me because it is only relevant for I2P. If there was at least one other network that used !=8333 default port, then it would be more appealing :)\r\n\r\nOff-scope: I think this entire `if` should be removed.",
      "commit_id" : "4401bb56cf3822950b221c3fa47fb0b65312d12f",
      "created_at" : "2021-06-03T10:56:51Z",
      "diff_hunk" : "@@ -2019,8 +2019,9 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             // from advertising themselves as a service on another host and\n             // port, causing a DoS attack as nodes around the network attempt\n             // to connect to it fruitlessly.\n-            if (addr.GetPort() != Params().GetDefaultPort() && nTries < 50)\n+            if (!addr.IsI2P() && addr.GetPort() != Params().GetDefaultPort() && nTries < 50) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r644694720",
      "id" : 644694720,
      "in_reply_to_id" : 644216009,
      "line" : 2022,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDY5NDcyMA==",
      "original_commit_id" : "4401bb56cf3822950b221c3fa47fb0b65312d12f",
      "original_line" : 2022,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 675147662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-03T10:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644694720",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> ... I was convinced it would be better to get rid of ports completely for I2P, but at the time I thought it didn't exist as a concept there. I was unaware that the concept does exists for newer versions of the protocol.\r\n\r\nMe too!",
      "created_at" : "2021-06-03T10:58:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-853781755",
      "id" : 853781755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1Mzc4MTc1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-03T10:58:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853781755",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> TODO: see if something has to be done about this assert:\r\n> \r\n> https://github.com/bitcoin/bitcoin/blob/8462cd56010a8beadf95d4f3cb1357ca9d88493b/src/bench/addrman.cpp#L91\r\n\r\nThat seems to be ok as it is - addresses being used in the bench are generated, not taken from real-world addrman. The code that generates them takes care to avoid port 0:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a9435e34457e0bfebd22e574fe63428537948aeb/src/bench/addrman.cpp#L35-L37\r\n\r\nSo it might as well generate I2P addresses with !=0 ports. Currently it generates only IPv6 addresses.",
      "created_at" : "2021-06-03T12:00:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-853815021",
      "id" : 853815021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MzgxNTAyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-03T12:00:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853815021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r656320196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/656320196"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It may be good to update the comment preceding this line to explain the exception for I2P.",
      "commit_id" : "4401bb56cf3822950b221c3fa47fb0b65312d12f",
      "created_at" : "2021-06-22T15:12:10Z",
      "diff_hunk" : "@@ -2019,8 +2019,9 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             // from advertising themselves as a service on another host and\n             // port, causing a DoS attack as nodes around the network attempt\n             // to connect to it fruitlessly.\n-            if (addr.GetPort() != Params().GetDefaultPort() && nTries < 50)\n+            if (!addr.IsI2P() && addr.GetPort() != Params().GetDefaultPort() && nTries < 50) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r656320196",
      "id" : 656320196,
      "in_reply_to_id" : 644216009,
      "line" : 2022,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjMyMDE5Ng==",
      "original_commit_id" : "4401bb56cf3822950b221c3fa47fb0b65312d12f",
      "original_line" : 2022,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 689644247,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-22T15:12:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/656320196",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`4401bb56cf...a9cacd29a1`: add a test and a comment\r\n\r\n> outbound connections are no longer made to any of the 13 I2P addresses in my addrman (all with port 8333), which is a bit of collateral annoyance for these nodes\r\n\r\nYes, that's really unfortunate and annoying. I wonder if it can be avoided...",
      "created_at" : "2021-06-23T09:22:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-866677772",
      "id" : 866677772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NjY3Nzc3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-23T09:22:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/866677772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ISTM with this change we would need a way to manually or automatically convert the existing I2P entries in the addrman from port 8333 to 0. ",
      "created_at" : "2021-06-23T09:23:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-866677980",
      "id" : 866677980,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NjY3Nzk4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-23T09:23:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/866677980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r656918013"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/656918013"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added a comment.",
      "commit_id" : "d6255891dacc8a867aff1098082ab1cc9efddfa9",
      "created_at" : "2021-06-23T09:23:06Z",
      "diff_hunk" : "@@ -2019,8 +2019,9 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             // from advertising themselves as a service on another host and\n             // port, causing a DoS attack as nodes around the network attempt\n             // to connect to it fruitlessly.\n-            if (addr.GetPort() != Params().GetDefaultPort() && nTries < 50)\n+            if (!addr.IsI2P() && addr.GetPort() != Params().GetDefaultPort() && nTries < 50) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r656918013",
      "id" : 656918013,
      "in_reply_to_id" : 644216009,
      "line" : 2023,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjkxODAxMw==",
      "original_commit_id" : "4401bb56cf3822950b221c3fa47fb0b65312d12f",
      "original_line" : 2023,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 690415720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-23T09:23:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/656918013",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> `4401bb56cf...a9cacd29a1`: add a test and a comment\r\n\r\nAdd the test to the test runner?  ",
      "created_at" : "2021-06-23T09:35:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-866686056",
      "id" : 866686056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NjY4NjA1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-23T09:36:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/866686056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`a9cacd29a1...d6255891da`: add the newly added test to `test_runner.py` (forgotten in the previous push)\r\n\r\n> Add the test to the test runner?\r\n\r\nYes :hear_no_evil: ",
      "created_at" : "2021-06-23T09:48:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-866694441",
      "id" : 866694441,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NjY5NDQ0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-23T09:48:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/866694441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`d6255891da...28f98950ee`: rename the functional test to match the naming convention",
      "created_at" : "2021-06-23T10:29:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-866721847",
      "id" : 866721847,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NjcyMTg0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-23T10:29:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/866721847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "`test_runner.py#check_script_prefixes()` is unhappy about the name of the test file\r\n\r\nedit: snap!",
      "created_at" : "2021-06-23T10:29:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-866721927",
      "id" : 866721927,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NjcyMTkyNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-23T10:29:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/866721927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 28f98950ee89dafcb75b131b810f5a933c2977b3 modulo https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-866677980",
      "created_at" : "2021-06-23T10:32:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-866724349",
      "id" : 866724349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NjcyNDM0OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-23T10:32:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/866724349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "IRC discussion with @vasild and I regarding whether the remedies here and in #21514 are less desirable than leaving the \"double connections\" issue unresolved: https://www.erisian.com.au/bitcoin-core-dev/log-2021-06-23.html#l-167",
      "created_at" : "2021-06-23T14:46:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-866902236",
      "id" : 866902236,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NjkwMjIzNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-23T14:46:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/866902236",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`28f98950ee..0c6db5b87f`: append a new commit that changes the ports of existent I2P addrman entries to 0.",
      "created_at" : "2021-06-29T10:20:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-870469254",
      "id" : 870469254,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MDQ2OTI1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-29T10:20:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870469254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`0c6db5b87f...b336f12eda`: no need to lock `CAddrMan::cs` in the `ResetI2PPorts()` method, it is already locked by the caller and in `master` the mutex is not recursive anymore.",
      "created_at" : "2021-06-29T11:48:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-870525146",
      "id" : 870525146,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MDUyNTE0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-29T11:48:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870525146",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[Coverage report](https://people.freebsd.org/~vd/pr22112_b336f12ed_coverage/modified_and_not_covered.html) for modified lines by this PR and not covered by tests. There is just one line which was also not covered before this PR (this PR changed `Params().GetDefaultPort()` to `PORT_SAM31` in that line).\r\n\r\nThe new method added in the last commit is [fully covered](https://people.freebsd.org/~vd/pr22112_b336f12ed_coverage/src/addrman.cpp.gcov.html#670) (I don't know what that red minus is on line 731, but it looks bogus).\r\n\r\nThe last commit `addrman: reset I2P ports to 0 when loading from disk` is somewhat optional, feel free to ACK the last but one commit. From the list in: https://github.com/bitcoin/bitcoin/issues/21389#issuecomment-866925116 this full PR implements option 3. Without the last commit it implements option 2.",
      "created_at" : "2021-06-29T13:09:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-870585034",
      "id" : 870585034,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MDU4NTAzNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-29T13:09:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870585034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r661599653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661599653"
         }
      },
      "author_association" : "MEMBER",
      "body" : "b336f12 it looks like this line can be pulled out of the conditional\r\n```diff\r\n             // Reposition from (bucket, i) to (bucket_target, i_target) or delete if the target\r\n             // position is occupied.\r\n+            vvTried[bucket][i] = -1;\r\n \r\n             if (vvTried[bucket_target][i_target] == -1) {\r\n                 vvTried[bucket_target][i_target] = id;\r\n-                vvTried[bucket][i] = -1;\r\n                 addr_info = addr_info_newport;\r\n             } else {\r\n-                vvTried[bucket][i] = -1;\r\n```\r\n",
      "commit_id" : "b336f12eda9ce3aeefc6d573c4068a27beef8def",
      "created_at" : "2021-06-30T15:44:41Z",
      "diff_hunk" : "@@ -665,3 +666,88 @@ std::vector<bool> CAddrMan::DecodeAsmap(fs::path path)\n     }\n     return bits;\n }\n+\n+void CAddrMan::ResetI2PPorts()\n+{\n+    for (int bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; ++bucket) {\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+            const auto id = vvNew[bucket][i];\n+            if (id == -1) {\n+                continue;\n+            }\n+            auto& addr_info = mapInfo[id];\n+            if (!addr_info.IsI2P() || addr_info.GetPort() == i2p::sam::PORT_SAM31) {\n+                continue;\n+            }\n+\n+            auto addr_info_newport = addr_info;\n+            // The below changes addr_info_newport.GetKey() which is used in finding\n+            // a bucket and a position within that bucket. So a re-bucketing may be necessary.\n+            addr_info_newport.port = i2p::sam::PORT_SAM31;\n+\n+            // Reposition entries of vvNew within the same bucket because we don't know the source\n+            // address which led to the decision to store the entry in vvNew[bucket] so we can't\n+            // re-evaluate that decision, but even if we could, CAddrInfo::GetNewBucket() does not\n+            // use CAddrInfo::GetKey() so it would end up in the same bucket as before the port\n+            // change.\n+            const auto i_target = addr_info_newport.GetBucketPosition(nKey, true, bucket);\n+\n+            if (i_target == i) { // No need to re-position.\n+                addr_info = addr_info_newport;\n+                continue;\n+            }\n+\n+            // Reposition from i to i_target or delete if the target position is occupied.\n+\n+            if (vvNew[bucket][i_target] == -1) {\n+                vvNew[bucket][i_target] = id;\n+                vvNew[bucket][i] = -1;\n+                addr_info = addr_info_newport;\n+            } else {\n+                ClearNew(bucket, i);\n+            }\n+        }\n+    }\n+\n+    for (int bucket = 0; bucket < ADDRMAN_TRIED_BUCKET_COUNT; ++bucket) {\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+            const auto id = vvTried[bucket][i];\n+            if (id == -1) {\n+                continue;\n+            }\n+            auto& addr_info = mapInfo[id];\n+            if (!addr_info.IsI2P() || addr_info.GetPort() == i2p::sam::PORT_SAM31) {\n+                continue;\n+            }\n+\n+            auto addr_info_newport = addr_info;\n+            // The below changes addr_info_newport.GetKey() which is used in finding\n+            // a bucket and a position within that bucket. So a re-bucketing may be necessary.\n+            addr_info_newport.port = i2p::sam::PORT_SAM31;\n+\n+            const auto bucket_target = addr_info_newport.GetTriedBucket(nKey, m_asmap);\n+            const auto i_target = addr_info_newport.GetBucketPosition(nKey, false, bucket_target);\n+\n+            if (bucket_target == bucket && i_target == i) { // No need to re-position.\n+                addr_info = addr_info_newport;\n+                continue;\n+            }\n+\n+            // Reposition from (bucket, i) to (bucket_target, i_target) or delete if the target\n+            // position is occupied.\n+\n+            if (vvTried[bucket_target][i_target] == -1) {\n+                vvTried[bucket_target][i_target] = id;\n+                vvTried[bucket][i] = -1;\n+                addr_info = addr_info_newport;\n+            } else {\n+                vvTried[bucket][i] = -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r661599653",
      "id" : 661599653,
      "line" : 744,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTU5OTY1Mw==",
      "original_commit_id" : "b336f12eda9ce3aeefc6d573c4068a27beef8def",
      "original_line" : 744,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 87,
      "pull_request_review_id" : 696335576,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-30T15:54:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661599653",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r661604130"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661604130"
         }
      },
      "author_association" : "MEMBER",
      "body" : "b336f12 would asserts like those seen in `CAddrMan::Delete()` be a good idea?\r\n```diff\r\n@@ -675,6 +675,7 @@ void CAddrMan::ResetI2PPorts()\r\n             if (id == -1) {\r\n                 continue;\r\n             }\r\n+            assert(mapInfo.count(id) != 0);\r\n             auto& addr_info = mapInfo[id];\r\n@@ -716,6 +717,7 @@ void CAddrMan::ResetI2PPorts()\r\n             if (id == -1) {\r\n                 continue;\r\n             }\r\n+            assert(mapInfo.count(id) != 0);\r\n             auto& addr_info = mapInfo[id];\r\n@@ -737,13 +739,13 @@ void CAddrMan::ResetI2PPorts()\r\n             if (vvTried[bucket_target][i_target] == -1) {\r\n                 vvTried[bucket_target][i_target] = id;\r\n                 addr_info = addr_info_newport;\r\n             } else {\r\n+                assert(addr_info.nRefCount == 0);\r\n                 SwapRandom(addr_info.nRandomPos, vRandom.size() - 1);\r\n```\r\n",
      "commit_id" : "b336f12eda9ce3aeefc6d573c4068a27beef8def",
      "created_at" : "2021-06-30T15:49:37Z",
      "diff_hunk" : "@@ -665,3 +666,88 @@ std::vector<bool> CAddrMan::DecodeAsmap(fs::path path)\n     }\n     return bits;\n }\n+\n+void CAddrMan::ResetI2PPorts()\n+{\n+    for (int bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; ++bucket) {\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+            const auto id = vvNew[bucket][i];\n+            if (id == -1) {\n+                continue;\n+            }\n+            auto& addr_info = mapInfo[id];\n+            if (!addr_info.IsI2P() || addr_info.GetPort() == i2p::sam::PORT_SAM31) {\n+                continue;\n+            }\n+\n+            auto addr_info_newport = addr_info;\n+            // The below changes addr_info_newport.GetKey() which is used in finding\n+            // a bucket and a position within that bucket. So a re-bucketing may be necessary.\n+            addr_info_newport.port = i2p::sam::PORT_SAM31;\n+\n+            // Reposition entries of vvNew within the same bucket because we don't know the source\n+            // address which led to the decision to store the entry in vvNew[bucket] so we can't\n+            // re-evaluate that decision, but even if we could, CAddrInfo::GetNewBucket() does not\n+            // use CAddrInfo::GetKey() so it would end up in the same bucket as before the port\n+            // change.\n+            const auto i_target = addr_info_newport.GetBucketPosition(nKey, true, bucket);\n+\n+            if (i_target == i) { // No need to re-position.\n+                addr_info = addr_info_newport;\n+                continue;\n+            }\n+\n+            // Reposition from i to i_target or delete if the target position is occupied.\n+\n+            if (vvNew[bucket][i_target] == -1) {\n+                vvNew[bucket][i_target] = id;\n+                vvNew[bucket][i] = -1;\n+                addr_info = addr_info_newport;\n+            } else {\n+                ClearNew(bucket, i);\n+            }\n+        }\n+    }\n+\n+    for (int bucket = 0; bucket < ADDRMAN_TRIED_BUCKET_COUNT; ++bucket) {\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+            const auto id = vvTried[bucket][i];\n+            if (id == -1) {\n+                continue;\n+            }\n+            auto& addr_info = mapInfo[id];\n+            if (!addr_info.IsI2P() || addr_info.GetPort() == i2p::sam::PORT_SAM31) {\n+                continue;\n+            }\n+\n+            auto addr_info_newport = addr_info;\n+            // The below changes addr_info_newport.GetKey() which is used in finding\n+            // a bucket and a position within that bucket. So a re-bucketing may be necessary.\n+            addr_info_newport.port = i2p::sam::PORT_SAM31;\n+\n+            const auto bucket_target = addr_info_newport.GetTriedBucket(nKey, m_asmap);\n+            const auto i_target = addr_info_newport.GetBucketPosition(nKey, false, bucket_target);\n+\n+            if (bucket_target == bucket && i_target == i) { // No need to re-position.\n+                addr_info = addr_info_newport;\n+                continue;\n+            }\n+\n+            // Reposition from (bucket, i) to (bucket_target, i_target) or delete if the target\n+            // position is occupied.\n+\n+            if (vvTried[bucket_target][i_target] == -1) {\n+                vvTried[bucket_target][i_target] = id;\n+                vvTried[bucket][i] = -1;\n+                addr_info = addr_info_newport;\n+            } else {\n+                vvTried[bucket][i] = -1;\n+                SwapRandom(addr_info.nRandomPos, vRandom.size() - 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r661604130",
      "id" : 661604130,
      "line" : 745,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTYwNDEzMA==",
      "original_commit_id" : "b336f12eda9ce3aeefc6d573c4068a27beef8def",
      "original_line" : 745,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 88,
      "pull_request_review_id" : 696335576,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-30T15:54:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661604130",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22179 by vasild\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-06-30T16:11:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-871537613",
      "id" : 871537613,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MTUzNzYxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-30T16:11:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871537613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested this rebased to master, then restarted the node after backing up `peers.dat`:\r\n\r\n- `Loaded 65986 addresses from peers.dat`\r\n- The number of I2P addresses reported by `-addrinfo` and `getnodeaddresses 0 i2p` dropped from 15 to 5 (all have port 0 as expected)\r\n- `I2P: SAM session created: my address=zsxwyo6qcn3chqzwxnseusqgsnuw3maqnztkiypyfxtya4snkoka.b32.i2p:0`\r\n- No outbound I2P connections (set using `addnode` without port number in the conf file), 4 inbound ones after a minute\r\n\r\nRestarted again, no change:\r\n\r\n- `Loaded 66102 addresses from peers.dat`\r\n- 5 I2P addresses known (port 0 as expected)\r\n- `I2P: SAM session created: my address=zsxwyo6qcn3chqzwxnseusqgsnuw3maqnztkiypyfxtya4snkoka.b32.i2p:0`\r\n- No outbound I2P connections (as above), 4 inbound ones after a few minutes\r\n- Tried `addpeeraddress` to re-add the I2P addresses, it returns `\"success\": true` but the address isn't added.\r\n\r\nThe outbound I2P connections via `addnode` sans port number needs to be resolved.\r\n\r\nIt's unfortunate to lose I2P addresses due to the bucket repositioning (10 out of 15, in my case), though I suppose it's a minor inconvenience affecting only a small number of existing nodes running I2P.\r\n\r\nPort 0 is default in SAM 3.2 and up per https://geti2p.net/en/docs/api (and portful routing starts from SAM 3.3 IIUC) but port 0 looks odd when all the other networks default to another value (8333, etc). Users may think it's a bug if not documented, e.g. in `doc/i2p.md` and the release notes.",
      "created_at" : "2021-06-30T19:58:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-871687616",
      "id" : 871687616,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MTY4NzYxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-01T14:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871687616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r662156772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662156772"
         }
      },
      "author_association" : "MEMBER",
      "body" : "From testing and offline discussion with @vasild, it seems a network-dependent `GetDefaultPort()` is indeed needed.",
      "commit_id" : "b336f12eda9ce3aeefc6d573c4068a27beef8def",
      "created_at" : "2021-07-01T10:01:50Z",
      "diff_hunk" : "@@ -2019,8 +2019,9 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             // from advertising themselves as a service on another host and\n             // port, causing a DoS attack as nodes around the network attempt\n             // to connect to it fruitlessly.\n-            if (addr.GetPort() != Params().GetDefaultPort() && nTries < 50)\n+            if (!addr.IsI2P() && addr.GetPort() != Params().GetDefaultPort() && nTries < 50) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r662156772",
      "id" : 662156772,
      "in_reply_to_id" : 644216009,
      "line" : 2023,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjE1Njc3Mg==",
      "original_commit_id" : "4401bb56cf3822950b221c3fa47fb0b65312d12f",
      "original_line" : 2023,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 697058290,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-01T10:01:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662156772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r662243726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662243726"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Did that, but after that changed the code to remove the existent entry (if any), so the above is not relevant any more.",
      "commit_id" : "36cf2ca392bb12247db252d3cf1182cdfc29d20d",
      "created_at" : "2021-07-01T12:27:06Z",
      "diff_hunk" : "@@ -665,3 +666,88 @@ std::vector<bool> CAddrMan::DecodeAsmap(fs::path path)\n     }\n     return bits;\n }\n+\n+void CAddrMan::ResetI2PPorts()\n+{\n+    for (int bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; ++bucket) {\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+            const auto id = vvNew[bucket][i];\n+            if (id == -1) {\n+                continue;\n+            }\n+            auto& addr_info = mapInfo[id];\n+            if (!addr_info.IsI2P() || addr_info.GetPort() == i2p::sam::PORT_SAM31) {\n+                continue;\n+            }\n+\n+            auto addr_info_newport = addr_info;\n+            // The below changes addr_info_newport.GetKey() which is used in finding\n+            // a bucket and a position within that bucket. So a re-bucketing may be necessary.\n+            addr_info_newport.port = i2p::sam::PORT_SAM31;\n+\n+            // Reposition entries of vvNew within the same bucket because we don't know the source\n+            // address which led to the decision to store the entry in vvNew[bucket] so we can't\n+            // re-evaluate that decision, but even if we could, CAddrInfo::GetNewBucket() does not\n+            // use CAddrInfo::GetKey() so it would end up in the same bucket as before the port\n+            // change.\n+            const auto i_target = addr_info_newport.GetBucketPosition(nKey, true, bucket);\n+\n+            if (i_target == i) { // No need to re-position.\n+                addr_info = addr_info_newport;\n+                continue;\n+            }\n+\n+            // Reposition from i to i_target or delete if the target position is occupied.\n+\n+            if (vvNew[bucket][i_target] == -1) {\n+                vvNew[bucket][i_target] = id;\n+                vvNew[bucket][i] = -1;\n+                addr_info = addr_info_newport;\n+            } else {\n+                ClearNew(bucket, i);\n+            }\n+        }\n+    }\n+\n+    for (int bucket = 0; bucket < ADDRMAN_TRIED_BUCKET_COUNT; ++bucket) {\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+            const auto id = vvTried[bucket][i];\n+            if (id == -1) {\n+                continue;\n+            }\n+            auto& addr_info = mapInfo[id];\n+            if (!addr_info.IsI2P() || addr_info.GetPort() == i2p::sam::PORT_SAM31) {\n+                continue;\n+            }\n+\n+            auto addr_info_newport = addr_info;\n+            // The below changes addr_info_newport.GetKey() which is used in finding\n+            // a bucket and a position within that bucket. So a re-bucketing may be necessary.\n+            addr_info_newport.port = i2p::sam::PORT_SAM31;\n+\n+            const auto bucket_target = addr_info_newport.GetTriedBucket(nKey, m_asmap);\n+            const auto i_target = addr_info_newport.GetBucketPosition(nKey, false, bucket_target);\n+\n+            if (bucket_target == bucket && i_target == i) { // No need to re-position.\n+                addr_info = addr_info_newport;\n+                continue;\n+            }\n+\n+            // Reposition from (bucket, i) to (bucket_target, i_target) or delete if the target\n+            // position is occupied.\n+\n+            if (vvTried[bucket_target][i_target] == -1) {\n+                vvTried[bucket_target][i_target] = id;\n+                vvTried[bucket][i] = -1;\n+                addr_info = addr_info_newport;\n+            } else {\n+                vvTried[bucket][i] = -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r662243726",
      "id" : 662243726,
      "in_reply_to_id" : 661599653,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjI0MzcyNg==",
      "original_commit_id" : "b336f12eda9ce3aeefc6d573c4068a27beef8def",
      "original_line" : 744,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : null,
      "pull_request_review_id" : 697181215,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-01T12:27:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662243726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r662245348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662245348"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think asserts are too excessive - if something goes wrong with this code I don't think it is critical enough to stop the node (that's during startup). Instead of the first two asserts I added a check & early quit. The 3rd suggested assert is not relevant now because I changed those lines to remove the existent entry (not the I2P one).",
      "commit_id" : "36cf2ca392bb12247db252d3cf1182cdfc29d20d",
      "created_at" : "2021-07-01T12:29:23Z",
      "diff_hunk" : "@@ -665,3 +666,88 @@ std::vector<bool> CAddrMan::DecodeAsmap(fs::path path)\n     }\n     return bits;\n }\n+\n+void CAddrMan::ResetI2PPorts()\n+{\n+    for (int bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; ++bucket) {\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+            const auto id = vvNew[bucket][i];\n+            if (id == -1) {\n+                continue;\n+            }\n+            auto& addr_info = mapInfo[id];\n+            if (!addr_info.IsI2P() || addr_info.GetPort() == i2p::sam::PORT_SAM31) {\n+                continue;\n+            }\n+\n+            auto addr_info_newport = addr_info;\n+            // The below changes addr_info_newport.GetKey() which is used in finding\n+            // a bucket and a position within that bucket. So a re-bucketing may be necessary.\n+            addr_info_newport.port = i2p::sam::PORT_SAM31;\n+\n+            // Reposition entries of vvNew within the same bucket because we don't know the source\n+            // address which led to the decision to store the entry in vvNew[bucket] so we can't\n+            // re-evaluate that decision, but even if we could, CAddrInfo::GetNewBucket() does not\n+            // use CAddrInfo::GetKey() so it would end up in the same bucket as before the port\n+            // change.\n+            const auto i_target = addr_info_newport.GetBucketPosition(nKey, true, bucket);\n+\n+            if (i_target == i) { // No need to re-position.\n+                addr_info = addr_info_newport;\n+                continue;\n+            }\n+\n+            // Reposition from i to i_target or delete if the target position is occupied.\n+\n+            if (vvNew[bucket][i_target] == -1) {\n+                vvNew[bucket][i_target] = id;\n+                vvNew[bucket][i] = -1;\n+                addr_info = addr_info_newport;\n+            } else {\n+                ClearNew(bucket, i);\n+            }\n+        }\n+    }\n+\n+    for (int bucket = 0; bucket < ADDRMAN_TRIED_BUCKET_COUNT; ++bucket) {\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+            const auto id = vvTried[bucket][i];\n+            if (id == -1) {\n+                continue;\n+            }\n+            auto& addr_info = mapInfo[id];\n+            if (!addr_info.IsI2P() || addr_info.GetPort() == i2p::sam::PORT_SAM31) {\n+                continue;\n+            }\n+\n+            auto addr_info_newport = addr_info;\n+            // The below changes addr_info_newport.GetKey() which is used in finding\n+            // a bucket and a position within that bucket. So a re-bucketing may be necessary.\n+            addr_info_newport.port = i2p::sam::PORT_SAM31;\n+\n+            const auto bucket_target = addr_info_newport.GetTriedBucket(nKey, m_asmap);\n+            const auto i_target = addr_info_newport.GetBucketPosition(nKey, false, bucket_target);\n+\n+            if (bucket_target == bucket && i_target == i) { // No need to re-position.\n+                addr_info = addr_info_newport;\n+                continue;\n+            }\n+\n+            // Reposition from (bucket, i) to (bucket_target, i_target) or delete if the target\n+            // position is occupied.\n+\n+            if (vvTried[bucket_target][i_target] == -1) {\n+                vvTried[bucket_target][i_target] = id;\n+                vvTried[bucket][i] = -1;\n+                addr_info = addr_info_newport;\n+            } else {\n+                vvTried[bucket][i] = -1;\n+                SwapRandom(addr_info.nRandomPos, vRandom.size() - 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r662245348",
      "id" : 662245348,
      "in_reply_to_id" : 661604130,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjI0NTM0OA==",
      "original_commit_id" : "b336f12eda9ce3aeefc6d573c4068a27beef8def",
      "original_line" : 745,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : null,
      "pull_request_review_id" : 697183371,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-01T12:29:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662245348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\n$ test/lint/lint-circular-dependencies.sh\r\nA new circular dependency in the form of \"chainparams -> i2p -> chainparams\" appears to have been introduced.\r\n```\r\n",
      "created_at" : "2021-07-01T12:56:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-872223073",
      "id" : 872223073,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MjIyMzA3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-01T13:11:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872223073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`b336f12eda...e4684144e9`:\r\n\r\n* If a collision occurs due to re-bucketing of the I2P address with the changed port to 0, then remove the other entry, not the I2P one. Looks like I2P addresses are more precious than a random one from an addrman filled mostly with IPv4 addresses.\r\n\r\n* If `addnode=foo.b32.i2p` is specified (without port) then we would do something like `Lookup(str, GetDefaultPort())` and would end up with `CService` with address `foo.b32.i2p` and port `8333` which is not what we want (we want port `0`) (thanks, @jonatack for discovering this!). So, implement @sipa's [suggestion](https://github.com/bitcoin/bitcoin/pull/22112#discussion_r644216009) of network-dependent default port.\r\n\r\n* Took some suggestions.",
      "created_at" : "2021-07-01T12:58:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-872224803",
      "id" : 872224803,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MjIyNDgwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-01T13:18:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872224803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r662285093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662285093"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "So, network-dependent default port seems to be the most elegant solution to [resolve addresses without ports](https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-872224803) properly - e.g. `1.2.3.4` should be treated as `1.2.3.4:8333` and `foo.b32.i2p` as `foo.b32.i2p:0`.\r\n\r\nNow this line looks better?\r\n\r\n\r\n```cpp\r\nif (addr.GetPort() != Params().GetDefaultPort(addr.GetNetwork()) && nTries < 50) {\r\n```",
      "commit_id" : "36cf2ca392bb12247db252d3cf1182cdfc29d20d",
      "created_at" : "2021-07-01T13:23:24Z",
      "diff_hunk" : "@@ -2019,8 +2019,9 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             // from advertising themselves as a service on another host and\n             // port, causing a DoS attack as nodes around the network attempt\n             // to connect to it fruitlessly.\n-            if (addr.GetPort() != Params().GetDefaultPort() && nTries < 50)\n+            if (!addr.IsI2P() && addr.GetPort() != Params().GetDefaultPort() && nTries < 50) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r662285093",
      "id" : 662285093,
      "in_reply_to_id" : 644216009,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjI4NTA5Mw==",
      "original_commit_id" : "4401bb56cf3822950b221c3fa47fb0b65312d12f",
      "original_line" : 2023,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 697238956,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-01T13:23:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662285093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`e4684144e9...36cf2ca392`: define the default SAM 3.1 port in `netaddress.h`, which is included in both `i2p.h` and `chainparams.h` to avoid circular dependency `i2p.h` -> `chainparams.h` -> `i2p.h`",
      "created_at" : "2021-07-01T13:25:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-872246188",
      "id" : 872246188,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MjI0NjE4OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-01T13:25:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872246188",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added 22.0 milestone (@jonatack mentioned that one of the solutions to the [I2P port problem](https://github.com/bitcoin/bitcoin/issues/21389#issuecomment-866925116) needs to make it in, and I think that makes sense. From what I understand this PR is preferred.)",
      "created_at" : "2021-07-01T14:26:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#issuecomment-872293292",
      "id" : 872293292,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MjI5MzI5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-01T14:26:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872293292",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r662362227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662362227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "FWIW the asserts passed for me in mainnet testing.",
      "commit_id" : "36cf2ca392bb12247db252d3cf1182cdfc29d20d",
      "created_at" : "2021-07-01T14:53:36Z",
      "diff_hunk" : "@@ -665,3 +666,88 @@ std::vector<bool> CAddrMan::DecodeAsmap(fs::path path)\n     }\n     return bits;\n }\n+\n+void CAddrMan::ResetI2PPorts()\n+{\n+    for (int bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; ++bucket) {\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+            const auto id = vvNew[bucket][i];\n+            if (id == -1) {\n+                continue;\n+            }\n+            auto& addr_info = mapInfo[id];\n+            if (!addr_info.IsI2P() || addr_info.GetPort() == i2p::sam::PORT_SAM31) {\n+                continue;\n+            }\n+\n+            auto addr_info_newport = addr_info;\n+            // The below changes addr_info_newport.GetKey() which is used in finding\n+            // a bucket and a position within that bucket. So a re-bucketing may be necessary.\n+            addr_info_newport.port = i2p::sam::PORT_SAM31;\n+\n+            // Reposition entries of vvNew within the same bucket because we don't know the source\n+            // address which led to the decision to store the entry in vvNew[bucket] so we can't\n+            // re-evaluate that decision, but even if we could, CAddrInfo::GetNewBucket() does not\n+            // use CAddrInfo::GetKey() so it would end up in the same bucket as before the port\n+            // change.\n+            const auto i_target = addr_info_newport.GetBucketPosition(nKey, true, bucket);\n+\n+            if (i_target == i) { // No need to re-position.\n+                addr_info = addr_info_newport;\n+                continue;\n+            }\n+\n+            // Reposition from i to i_target or delete if the target position is occupied.\n+\n+            if (vvNew[bucket][i_target] == -1) {\n+                vvNew[bucket][i_target] = id;\n+                vvNew[bucket][i] = -1;\n+                addr_info = addr_info_newport;\n+            } else {\n+                ClearNew(bucket, i);\n+            }\n+        }\n+    }\n+\n+    for (int bucket = 0; bucket < ADDRMAN_TRIED_BUCKET_COUNT; ++bucket) {\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+            const auto id = vvTried[bucket][i];\n+            if (id == -1) {\n+                continue;\n+            }\n+            auto& addr_info = mapInfo[id];\n+            if (!addr_info.IsI2P() || addr_info.GetPort() == i2p::sam::PORT_SAM31) {\n+                continue;\n+            }\n+\n+            auto addr_info_newport = addr_info;\n+            // The below changes addr_info_newport.GetKey() which is used in finding\n+            // a bucket and a position within that bucket. So a re-bucketing may be necessary.\n+            addr_info_newport.port = i2p::sam::PORT_SAM31;\n+\n+            const auto bucket_target = addr_info_newport.GetTriedBucket(nKey, m_asmap);\n+            const auto i_target = addr_info_newport.GetBucketPosition(nKey, false, bucket_target);\n+\n+            if (bucket_target == bucket && i_target == i) { // No need to re-position.\n+                addr_info = addr_info_newport;\n+                continue;\n+            }\n+\n+            // Reposition from (bucket, i) to (bucket_target, i_target) or delete if the target\n+            // position is occupied.\n+\n+            if (vvTried[bucket_target][i_target] == -1) {\n+                vvTried[bucket_target][i_target] = id;\n+                vvTried[bucket][i] = -1;\n+                addr_info = addr_info_newport;\n+            } else {\n+                vvTried[bucket][i] = -1;\n+                SwapRandom(addr_info.nRandomPos, vRandom.size() - 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22112#discussion_r662362227",
      "id" : 662362227,
      "in_reply_to_id" : 661604130,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjM2MjIyNw==",
      "original_commit_id" : "b336f12eda9ce3aeefc6d573c4068a27beef8def",
      "original_line" : 745,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : null,
      "pull_request_review_id" : 697345376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22112",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-01T14:53:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662362227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
