[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22019 (wallet: Introduce SelectionResult for encapsulating a coin selection solution by achow101)\n* #22009 (wallet: Decide which coin selection solution to use based on waste metric by achow101)\n* #22008 (wallet: Cleanup and refactor CreateTransactionInternal by achow101)\n* #21260 (wallet: indicate whether a transaction is in the mempool by danben)\n* #20205 (wallet: Properly support a wallet id by achow101)\n* #19101 (refactor: remove ::vpwallets and related global variables by ryanofsky)\n* #17526 (Use Single Random Draw In addition to knapsack as coin selection fallback by achow101)\n* #17355 (gui: grey out used address in address book by za-kk)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n* #15719 (Wallet passive startup by ryanofsky)\n* #14707 ([RPC] Include coinbase transactions in receivedby RPCs by andrewtoth)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-05-30T16:05:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22100#issuecomment-851022611",
      "id" : 851022611,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22100",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MTAyMjYxMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-07T23:06:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/851022611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642592067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642592067"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How come you're able to move `GetCredit` but not `GetDebit`?",
      "commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "created_at" : "2021-05-31T16:29:58Z",
      "diff_hunk" : "@@ -677,25 +640,16 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     isminetype IsMine(const CTxDestination& dest) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     isminetype IsMine(const CScript& script) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    isminetype IsMine(const CTxIn& txin) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     /**\n      * Returns amount of debit if the input matches the\n      * filter, otherwise returns 0\n      */\n     CAmount GetDebit(const CTxIn& txin, const isminefilter& filter) const;\n     isminetype IsMine(const CTxOut& txout) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    CAmount GetCredit(const CTxOut& txout, const isminefilter& filter) const;\n-    bool IsChange(const CTxOut& txout) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    bool IsChange(const CScript& script) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    CAmount GetChange(const CTxOut& txout) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool IsMine(const CTransaction& tx) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     /** should probably be renamed to IsRelevantToMe */\n     bool IsFromMe(const CTransaction& tx) const;\n     CAmount GetDebit(const CTransaction& tx, const isminefilter& filter) const;\n-    /** Returns whether all of the inputs match the filter */\n-    bool IsAllFromMe(const CTransaction& tx, const isminefilter& filter) const;\n-    CAmount GetCredit(const CTransaction& tx, const isminefilter& filter) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642592067",
      "id" : 642592067,
      "line" : 697,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjU5MjA2Nw==",
      "original_commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "original_line" : 697,
      "original_position" : 191,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 191,
      "pull_request_review_id" : 672442046,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-31T16:50:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642592067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642612870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642612870"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642592067\r\n\r\n> How come you're able to move `GetCredit` but not `GetDebit`?\r\n\r\nI would like to move it, but it's kept in place for now to avoid circular dependencies. The problem is that the `CWallet::SyncTransaction` method needs to call `CWallet::AddToWalletIfInvolvingMe` which needs to call `CWallet::IsFromMe` which needs to call `CWallet::GetDebit`. These functions can't be moved out of `wallet.cpp` to `receive.cpp`, because `wallet.cpp` can't depend on `receive.cpp` (by design, higher level `receive.cpp` `spend.cpp` and a future `sync.cpp` are all meant to depend on the lower level `wallet.cpp` `CWallet` object).\r\n\r\nI think a future fix for this will move `CWallet::SyncTransaction` along with chain attach and rescan code from `wallet.cpp` to `sync.cpp`. It should then be no problem for `sync.cpp` to depend on `receive.cpp` and for `CWallet::AddToWalletIfInvolvingMe` and related code to move to `receive.cpp`. The reason I didn't create `sync.cpp` and move these things already is that I was waiting for #20773 to split up the monolithic `CWallet::Create` function to make this easier.",
      "commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "created_at" : "2021-05-31T17:30:05Z",
      "diff_hunk" : "@@ -677,25 +640,16 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     isminetype IsMine(const CTxDestination& dest) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     isminetype IsMine(const CScript& script) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    isminetype IsMine(const CTxIn& txin) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     /**\n      * Returns amount of debit if the input matches the\n      * filter, otherwise returns 0\n      */\n     CAmount GetDebit(const CTxIn& txin, const isminefilter& filter) const;\n     isminetype IsMine(const CTxOut& txout) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    CAmount GetCredit(const CTxOut& txout, const isminefilter& filter) const;\n-    bool IsChange(const CTxOut& txout) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    bool IsChange(const CScript& script) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    CAmount GetChange(const CTxOut& txout) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool IsMine(const CTransaction& tx) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     /** should probably be renamed to IsRelevantToMe */\n     bool IsFromMe(const CTransaction& tx) const;\n     CAmount GetDebit(const CTransaction& tx, const isminefilter& filter) const;\n-    /** Returns whether all of the inputs match the filter */\n-    bool IsAllFromMe(const CTransaction& tx, const isminefilter& filter) const;\n-    CAmount GetCredit(const CTransaction& tx, const isminefilter& filter) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642612870",
      "id" : 642612870,
      "in_reply_to_id" : 642592067,
      "line" : 697,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjYxMjg3MA==",
      "original_commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "original_line" : 697,
      "original_position" : 191,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 191,
      "pull_request_review_id" : 672466425,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-31T17:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642612870",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642653123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642653123"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Comparing to 4e11f88320b644b67db55fe737815451ca7d0681 (which I reviewed in #21206) what is the motivation to prefix with `Cached`? Is it relevant for the caller that some caching is involved? Is it a way to remember that concurrent syncs can happen and so the return value can be out of date?",
      "commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "created_at" : "2021-05-31T19:39:48Z",
      "diff_hunk" : "@@ -10,11 +10,55 @@\n #include <wallet/transaction.h>\n #include <wallet/wallet.h>\n \n+isminetype InputIsMine(const CWallet& wallet, const CTxIn& txin) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+\n+/** Returns whether all of the inputs match the filter */\n+bool AllInputsMine(const CWallet& wallet, const CTransaction& tx, const isminefilter& filter);\n+\n+CAmount OutputGetCredit(const CWallet& wallet, const CTxOut& txout, const isminefilter& filter);\n+CAmount TxGetCredit(const CWallet& wallet, const CTransaction& tx, const isminefilter& filter);\n+\n+bool ScriptIsChange(const CWallet& wallet, const CScript& script) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+bool OutputIsChange(const CWallet& wallet, const CTxOut& txout) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+CAmount OutputGetChange(const CWallet& wallet, const CTxOut& txout) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+CAmount TxGetChange(const CWallet& wallet, const CTransaction& tx);\n+\n+CAmount CachedTxGetCredit(const CWallet& wallet, const CWalletTx& wtx, const isminefilter& filter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642653123",
      "id" : 642653123,
      "line" : 26,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjY1MzEyMw==",
      "original_commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "original_line" : 26,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/receive.h",
      "position" : 17,
      "pull_request_review_id" : 672511585,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-31T19:44:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642653123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642664678"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642664678"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642653123\r\n\r\n> Comparing to [4e11f88](https://github.com/bitcoin/bitcoin/commit/4e11f88320b644b67db55fe737815451ca7d0681) (which I reviewed in #21206) what is the motivation to prefix with `Cached`? Is it relevant for the caller that some caching is involved? Is it a way to remember that concurrent syncs can happen and so the return value can be out of date?\r\n\r\nThere should be no changes since #21206, but `CachedTx` is in debit/credit/change function names when the functions take `CWalletTx` arguments, since the point of `CWalletTx` class is to encapsulate `CTransaction` plus cached balance information. Functions named `Tx` instead of `CachedTx` just take plain `CTransaction` arguments by comparison. And functions named `Input`, `Output`, or `Script` take those things as arguments.\r\n\r\nI think it makes calling code more readable if function names explicitly say what they compute values from and whether values may be stale due to caching. But this is just a naming convention I settled on because I didnt like the previous convention where there are so many slightly different functions all having the same name. There could be better approaches I didn't think of though.\r\n\r\nRe: concurrency, I think cs_wallet doesn't really allow too much and there shouldn't be caching problems related to that. Caching more affects state transitions when blocks are connected disconnected and transactions are abandoned or replaced or added or removed from the mempool.",
      "commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "created_at" : "2021-05-31T20:21:39Z",
      "diff_hunk" : "@@ -10,11 +10,55 @@\n #include <wallet/transaction.h>\n #include <wallet/wallet.h>\n \n+isminetype InputIsMine(const CWallet& wallet, const CTxIn& txin) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+\n+/** Returns whether all of the inputs match the filter */\n+bool AllInputsMine(const CWallet& wallet, const CTransaction& tx, const isminefilter& filter);\n+\n+CAmount OutputGetCredit(const CWallet& wallet, const CTxOut& txout, const isminefilter& filter);\n+CAmount TxGetCredit(const CWallet& wallet, const CTransaction& tx, const isminefilter& filter);\n+\n+bool ScriptIsChange(const CWallet& wallet, const CScript& script) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+bool OutputIsChange(const CWallet& wallet, const CTxOut& txout) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+CAmount OutputGetChange(const CWallet& wallet, const CTxOut& txout) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+CAmount TxGetChange(const CWallet& wallet, const CTransaction& tx);\n+\n+CAmount CachedTxGetCredit(const CWallet& wallet, const CWalletTx& wtx, const isminefilter& filter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642664678",
      "id" : 642664678,
      "in_reply_to_id" : 642653123,
      "line" : 26,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjY2NDY3OA==",
      "original_commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "original_line" : 26,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/receive.h",
      "position" : 17,
      "pull_request_review_id" : 672524610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-31T20:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642664678",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642675557"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642675557"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Functions named Tx instead of CachedTx just take plain CTransaction arguments by comparison\r\n\r\nThanks for the clarification. An alternative prefix could be `Wallet`, so in this case, could be `WalletTxGetCredit`. But it's fine as is and agree with the convention.\r\n\r\n> Re: concurrency, I think cs_wallet doesn't really allow too much and there shouldn't be caching problems related to that. Caching more affects state transitions when blocks are connected disconnected and transactions are abandoned or replaced or added or removed from the mempool.\r\n\r\nRight, didn't mean to imply otherwise.",
      "commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "created_at" : "2021-05-31T21:02:41Z",
      "diff_hunk" : "@@ -10,11 +10,55 @@\n #include <wallet/transaction.h>\n #include <wallet/wallet.h>\n \n+isminetype InputIsMine(const CWallet& wallet, const CTxIn& txin) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+\n+/** Returns whether all of the inputs match the filter */\n+bool AllInputsMine(const CWallet& wallet, const CTransaction& tx, const isminefilter& filter);\n+\n+CAmount OutputGetCredit(const CWallet& wallet, const CTxOut& txout, const isminefilter& filter);\n+CAmount TxGetCredit(const CWallet& wallet, const CTransaction& tx, const isminefilter& filter);\n+\n+bool ScriptIsChange(const CWallet& wallet, const CScript& script) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+bool OutputIsChange(const CWallet& wallet, const CTxOut& txout) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+CAmount OutputGetChange(const CWallet& wallet, const CTxOut& txout) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+CAmount TxGetChange(const CWallet& wallet, const CTransaction& tx);\n+\n+CAmount CachedTxGetCredit(const CWallet& wallet, const CWalletTx& wtx, const isminefilter& filter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642675557",
      "id" : 642675557,
      "in_reply_to_id" : 642653123,
      "line" : 26,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjY3NTU1Nw==",
      "original_commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "original_line" : 26,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/receive.h",
      "position" : 17,
      "pull_request_review_id" : 672536735,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-31T21:02:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642675557",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642698155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642698155"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642664678\r\n\r\n> > Functions named Tx instead of CachedTx just take plain CTransaction arguments by comparison\r\n> \r\n> Thanks for the clarification. An alternative prefix could be `Wallet`, so in this case, could be `WalletTxGetCredit`. But it's fine as is and agree with the convention.\r\n\r\nThat suggestion is pretty good too. Maybe I should `s/CachedTx/WalletTx/g` in this PR. Will do if reviewers want that. I was anticipating renaming `CWalletTx` to `CachedTransaction` later (and namespacing so its full name would be `wallet::CachedTransaction`) but maybe I am jumping the gun a little bit and should stick with `WalletTx` here.\r\n \r\n> Right, didn't mean to imply otherwise.\r\n\r\nSorry about that, I just misinterpreted \"concurrent syncs\" it sounds like.",
      "commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "created_at" : "2021-05-31T22:54:37Z",
      "diff_hunk" : "@@ -10,11 +10,55 @@\n #include <wallet/transaction.h>\n #include <wallet/wallet.h>\n \n+isminetype InputIsMine(const CWallet& wallet, const CTxIn& txin) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+\n+/** Returns whether all of the inputs match the filter */\n+bool AllInputsMine(const CWallet& wallet, const CTransaction& tx, const isminefilter& filter);\n+\n+CAmount OutputGetCredit(const CWallet& wallet, const CTxOut& txout, const isminefilter& filter);\n+CAmount TxGetCredit(const CWallet& wallet, const CTransaction& tx, const isminefilter& filter);\n+\n+bool ScriptIsChange(const CWallet& wallet, const CScript& script) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+bool OutputIsChange(const CWallet& wallet, const CTxOut& txout) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+CAmount OutputGetChange(const CWallet& wallet, const CTxOut& txout) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+CAmount TxGetChange(const CWallet& wallet, const CTransaction& tx);\n+\n+CAmount CachedTxGetCredit(const CWallet& wallet, const CWalletTx& wtx, const isminefilter& filter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642698155",
      "id" : 642698155,
      "in_reply_to_id" : 642653123,
      "line" : 26,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjY5ODE1NQ==",
      "original_commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "original_line" : 26,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/receive.h",
      "position" : 17,
      "pull_request_review_id" : 672560455,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-31T22:54:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642698155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642699195"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642699195"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Both are just fine to me, as long as the motivation and convention are clear.",
      "commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "created_at" : "2021-05-31T23:01:20Z",
      "diff_hunk" : "@@ -10,11 +10,55 @@\n #include <wallet/transaction.h>\n #include <wallet/wallet.h>\n \n+isminetype InputIsMine(const CWallet& wallet, const CTxIn& txin) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+\n+/** Returns whether all of the inputs match the filter */\n+bool AllInputsMine(const CWallet& wallet, const CTransaction& tx, const isminefilter& filter);\n+\n+CAmount OutputGetCredit(const CWallet& wallet, const CTxOut& txout, const isminefilter& filter);\n+CAmount TxGetCredit(const CWallet& wallet, const CTransaction& tx, const isminefilter& filter);\n+\n+bool ScriptIsChange(const CWallet& wallet, const CScript& script) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+bool OutputIsChange(const CWallet& wallet, const CTxOut& txout) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+CAmount OutputGetChange(const CWallet& wallet, const CTxOut& txout) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+CAmount TxGetChange(const CWallet& wallet, const CTransaction& tx);\n+\n+CAmount CachedTxGetCredit(const CWallet& wallet, const CWalletTx& wtx, const isminefilter& filter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22100#discussion_r642699195",
      "id" : 642699195,
      "in_reply_to_id" : 642653123,
      "line" : 26,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjY5OTE5NQ==",
      "original_commit_id" : "a3f623035a2653049d098f43e55b9e01850cb16c",
      "original_line" : 26,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/receive.h",
      "position" : 17,
      "pull_request_review_id" : 672561537,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-31T23:01:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642699195",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-06-09T12:00:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22100#issuecomment-857634715",
      "id" : 857634715,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22100",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1NzYzNDcxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-09T12:00:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/857634715",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
