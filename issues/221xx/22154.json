{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Currently bech32m addresses are classfied as bech32. Because bech32m is incompatible with bech32, we need to define a new `OutputType` for it so that it can be handled correctly. This PR adds `OutputType::BECH32M`, updates all of the relevant `OutputType` classifications, and handle requests for bech32m addresses. There is now a `bech32m` address type string that can be used.\r\n\r\n* `tr()` descriptors now report their output type as `OutputType::BECH32M`. `WtinessV1Taproot` and `WitnessUnknown` are also classified as `OutputType::BECH32M`.\r\n* Bech32m addresses are completely disabled for legacy wallets. They cannot be imported (explicitly disallowed in `importaddress` and `importmulti`), will not be created when getting all destinations for a pubkey, and will not be added with `addmultisigaddress`. Additional protections have been added to `LegacyScriptPubKeyMan` to disallow attempting to retrieve bech32m addresses.\r\n* Since Taproot multisigs are not implemented yet, `createmultisig` will also disallow the bech32m address type.\r\n* As Taproot is not yet active, `DescriptorScriptPubKeyMan` cannot and will not create a `tr()` descriptor. Protections have been added to make sure this cannot occur.\r\n* The change address type detection algorithm has been updated to return `bech32m` when there is a segwit v1+ output script and the wallet has a bech32m `ScriptPubKeyMan`, falling back to bech32 if one is not available.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22154/comments",
   "created_at" : "2021-06-04T21:47:42Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22154/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/22154",
   "id" : 911866308,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22154/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NjYyMDc4OTk1",
   "number" : 22154,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/22154.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22154",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/22154.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22154"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Add OutputType::BECH32M and related wallet support for fetching bech32m addresses",
   "updated_at" : "2021-06-04T21:47:42Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22154",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
      "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
      "followers_url" : "https://api.github.com/users/achow101/followers",
      "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/achow101",
      "id" : 3782274,
      "login" : "achow101",
      "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
      "organizations_url" : "https://api.github.com/users/achow101/orgs",
      "received_events_url" : "https://api.github.com/users/achow101/received_events",
      "repos_url" : "https://api.github.com/users/achow101/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/achow101"
   }
}
