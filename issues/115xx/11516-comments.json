[
   {
      "author_association" : "OWNER",
      "body" : "Is this necessary? There is no problem with creating a one-past-end pointer; only dereferencing them, which doesn't happen here.",
      "created_at" : "2017-10-18T09:16:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11516#issuecomment-337518961",
      "id" : 337518961,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11516",
      "updated_at" : "2017-10-18T09:16:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337518961",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa Both zero length `memset`:s and creating of one-past-end pointers are legal, so from a language legality sense this change is not needed.\r\n\r\nHowever, I've seen multiple static analyzers flag this line of code as a potential mistake. This small change makes it apparent for both static analyzers and humans what the real intention of the code is.\r\n\r\nMy experience is that code that looks like potential mistakes to static analyzers tend to confuse humans too.  I think there is a good case for helping static analyzers (and perhaps humans too?) in this case. It also has the added benefit of getting rid of an unnecessary `memset` call and getting three additional test cases that cover the key length boundaries.\r\n\r\nIn summary I think this change is worth it :-)",
      "created_at" : "2017-10-18T10:15:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11516#issuecomment-337539285",
      "id" : 337539285,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11516",
      "updated_at" : "2017-10-18T10:17:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337539285",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Pointers to the end of a range are absolutely valid C/C++. This is commonly used for iteration end-exclusive ranges. So is a zero-length memset.\r\n\r\nI tend towards NACK adding unnecessary checks here. I think minor harmless changes to fix static analyzer false-positives are sometimes okay, but at some point it goes too far, we don't write our code to appease static analyzers. This kind of ruffling the code can introduce bugs.\r\n\r\nACK on the tests though.",
      "created_at" : "2017-10-18T13:29:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11516#issuecomment-337590429",
      "id" : 337590429,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11516",
      "updated_at" : "2017-10-18T13:31:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337590429",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
