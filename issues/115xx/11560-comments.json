[
   {
      "author_association" : "MEMBER",
      "body" : "I'm still working on a unit test for this, but wanted to get some eyes on it for consideration in 0.15.0.2.",
      "created_at" : "2017-10-25T19:44:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-339448546",
      "id" : 339448546,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
      "updated_at" : "2017-10-25T19:44:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339448546",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r146967629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146967629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd prefer to see this be a int_64 max, so I don't need to reason about how monotone our clocks aren't.",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-25T19:50:08Z",
      "diff_hunk" : "@@ -2928,10 +2940,61 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::CheckForStaleTip(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+    LOCK(cs_main);\n+\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = time_in_seconds;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r146967629",
      "id" : 146967629,
      "original_commit_id" : "a64bbc03ddaae5bd55c82f60223a6c29a08b0a20",
      "original_position" : 65,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 71990058,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146967629",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r146969139"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146969139"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-25T19:56:28Z",
      "diff_hunk" : "@@ -2928,10 +2940,61 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::CheckForStaleTip(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+    LOCK(cs_main);\n+\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = time_in_seconds;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r146969139",
      "id" : 146969139,
      "in_reply_to_id" : 146967629,
      "original_commit_id" : "a64bbc03ddaae5bd55c82f60223a6c29a08b0a20",
      "original_position" : 65,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 71991866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146969139",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Remind me how the scheduler works... when blocks are slow is this going to result in all hosts on the network triggering their extra peer at basically the same time?  Or do we not need to insert a bit of randomness in order to spread them out over the checking interval?",
      "created_at" : "2017-10-26T01:17:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-339520793",
      "id" : 339520793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
      "updated_at" : "2017-10-26T01:17:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339520793",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Regarding the scheduler, I mentioned this on IRC to @gmaxwell:\r\n> gmaxwell: my understanding of the scheduler is that it'll start scheduling callbacks at some point after startup, so i wouldn't expect the network to be completely synced\r\n> gmaxwell: also there's random drift, since the scheduler schedules the next callback N milliseconds after the prior one finishes \r\n> but worth discussing whether the interval is short enough that there still might be too much concentration of everyone trying to find a new peer\r\n\r\nI updated this PR with a unit test.",
      "created_at" : "2017-10-26T15:58:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-339714002",
      "id" : 339714002,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
      "updated_at" : "2017-10-26T15:58:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339714002",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needed rebase after #11490.",
      "created_at" : "2017-10-26T20:11:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-339786560",
      "id" : 339786560,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
      "updated_at" : "2017-10-26T20:11:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339786560",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147284900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147284900"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You may want to note the (IMO) critical part of the cpp comment:\r\n\"Also exclude peers that haven't finished initial connection handshake yet\" ie \"this may return a value less than the number of outbound connections - the number of normal outbound connection slots in cases where some outbound connections are not yet fully connected\".",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-26T22:30:12Z",
      "diff_hunk" : "@@ -251,6 +253,16 @@ class CConnman\n     void GetBanned(banmap_t &banmap);\n     void SetBanned(const banmap_t &banmap);\n \n+    // This allows temporarily exceeding nMaxOutbound, with the goal of finding\n+    // a peer that is better than all our current peers.\n+    void SetTryNewOutboundPeer(bool flag);\n+    bool GetTryNewOutboundPeer();\n+\n+    // Return the number of outbound peers we have in excess of our target (eg,\n+    // if we previously called SetTryNewOutboundPeer(true), and have since set\n+    // to false, we may have extra peers that we wish to disconnect).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147284900",
      "id" : 147284900,
      "original_commit_id" : "89412654c65a95b3da286ffce2c0b535f5b54b96",
      "original_position" : 27,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 72360655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147284900",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147288662"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147288662"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm confused - it looks like we wont ever have both a feeler and an extra outbound open at one time, why change this?",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-26T22:55:36Z",
      "diff_hunk" : "@@ -1068,7 +1068,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n     CAddress addr;\n     int nInbound = 0;\n-    int nMaxInbound = nMaxConnections - (nMaxOutbound + nMaxFeeler);\n+    int nMaxInbound = nMaxConnections - (nMaxOutbound + nMaxFeeler + nMaxExtraOutbound);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147288662",
      "id" : 147288662,
      "original_commit_id" : "89412654c65a95b3da286ffce2c0b535f5b54b96",
      "original_position" : 5,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 72360655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147288662",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147481774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147481774"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Care to add a comment here (or in the comment block above) noting that we will not make a new connection if we have our \"extra slot\" used by *either* a feeler or an \"extra outbound\", both are not allowed.",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-27T18:17:57Z",
      "diff_hunk" : "@@ -1781,9 +1817,14 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         //  * Only make a feeler connection once every few minutes.\n         //\n         bool fFeeler = false;\n-        if (nOutbound >= nMaxOutbound) {\n+\n+        bool extra_outbound = GetTryNewOutboundPeer();\n+\n+        int desired_outbound = nMaxOutbound + (extra_outbound ? nMaxExtraOutbound : 0);\n+\n+        if (nOutbound >= desired_outbound) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147481774",
      "id" : 147481774,
      "original_commit_id" : "89412654c65a95b3da286ffce2c0b535f5b54b96",
      "original_position" : 76,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 72589243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147481774",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147483839"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147483839"
         }
      },
      "author_association" : "MEMBER",
      "body" : "whoops, this comment is wrong, will fix.",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-27T18:25:41Z",
      "diff_hunk" : "@@ -413,6 +426,10 @@ class CConnman\n     std::thread threadOpenAddedConnections;\n     std::thread threadOpenConnections;\n     std::thread threadMessageHandler;\n+\n+    /** flag for stealing a feeler connection to find a new outbound peer */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147483839",
      "id" : 147483839,
      "original_commit_id" : "89412654c65a95b3da286ffce2c0b535f5b54b96",
      "original_position" : 46,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 72591502,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147483839",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147485327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147485327"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> it looks like we wont ever have both a feeler and an extra outbound at one time\r\n\r\nWe will in general have both a feeler and an extra outbound at the same time.  There was an incorrect comment (from a first iteration of this patch) describing the extra outbound peer as \"stealing\" the feeler connection, but that is not actually true.  I'll delete that comment.",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-27T18:32:21Z",
      "diff_hunk" : "@@ -1068,7 +1068,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n     CAddress addr;\n     int nInbound = 0;\n-    int nMaxInbound = nMaxConnections - (nMaxOutbound + nMaxFeeler);\n+    int nMaxInbound = nMaxConnections - (nMaxOutbound + nMaxFeeler + nMaxExtraOutbound);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147485327",
      "id" : 147485327,
      "in_reply_to_id" : 147288662,
      "original_commit_id" : "89412654c65a95b3da286ffce2c0b535f5b54b96",
      "original_position" : 5,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 72593303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147485327",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147486960"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147486960"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Shouldn't there be an equivalent addition for compact block announcements?",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-27T18:39:11Z",
      "diff_hunk" : "@@ -2382,6 +2399,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         // because it is set in UpdateBlockAvailability. Some nullptr checks\n         // are still present, however, as belt-and-suspenders.\n \n+        if (received_new_header && pindexLast->nChainWork > chainActive.Tip()->nChainWork) {\n+            nodestate->m_last_block_announcement = GetTime();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147486960",
      "id" : 147486960,
      "original_commit_id" : "b258e7cefd6b534e920e80a45eba12d200b5fdbc",
      "original_position" : 64,
      "path" : "src/net_processing.cpp",
      "position" : 122,
      "pull_request_review_id" : 72589243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147486960",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147490732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147490732"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Please no more locking documentation - use the self-documenting AssertLockHeld or GUARDED_BY.",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-27T18:55:29Z",
      "diff_hunk" : "@@ -436,6 +436,15 @@ void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman* connman) {\n }\n \n // Requires cs_main\n+bool TipMayBeStale(const Consensus::Params &consensusParams)\n+{\n+    if (g_last_tip_update == 0) {\n+        g_last_tip_update = GetTime();\n+    }\n+    return g_last_tip_update < GetTime() - consensusParams.nPowTargetSpacing * 3 && mapBlocksInFlight.empty();\n+}\n+\n+// Requires cs_main",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147490732",
      "id" : 147490732,
      "original_commit_id" : "c6fac39488f54671857a9c4367888586dbd5b4f4",
      "original_position" : 28,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 72589243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147490732",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pushed up a few small fixups.",
      "created_at" : "2017-10-27T19:03:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340058659",
      "id" : 340058659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
      "updated_at" : "2017-10-27T19:03:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340058659",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147493512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147493512"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Shouldnt this almost always be true (because we only call this function once every STALE_CHECK_INTERVAL)? Also, I think we can turn this down way more than 5 minutes, if we think we're behind, and we connect to someone, it shouldn't take them 5 minutes to send us a header, and if it does, we probably weren't behind and our existing peers are fine, so we should just disconnect them.",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-27T19:08:16Z",
      "diff_hunk" : "@@ -2941,6 +2953,57 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::CheckForStaleTip(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+    LOCK(cs_main);\n+\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                if (time_in_seconds - pnode->nTimeConnected > STALE_CHECK_INTERVAL/2) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147493512",
      "id" : 147493512,
      "original_commit_id" : "c6fac39488f54671857a9c4367888586dbd5b4f4",
      "original_position" : 80,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 72589243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147493512",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt raised concerns about holding the 9th connection for too long.  One concern would be if we are reducing the number of available inbound slots on the network by too much. Another potentially more serious concern is that if we're holding the 9th connection long enough for a new block to be found and relayed, then over time we'll be selecting for peers with the fastest connectivity.\r\n\r\nIn the extreme, you could imagine that this algorithm would reduce to nodes grinding away, trying to connect to the peer that was closest to the miners (or the FIBRE network or similar), which is probably not what we want.\r\n\r\nIn this case, we only intend for the 9th connection to tell us whether we're really behind (eg because our existing peers are all broken) or if the network is just slow.  We can determine that very quickly after connection, so I think I'm going to change this so that we disconnect extra peers more quickly (ie on a faster timer than every 10 minutes, and requiring a shorter connection time), and reset the TryExtraOutboundPeer flag in CConnman after disconnecting an extra peer, essentially waiting until we decide at the next stale-tip-check that we're still stale, before trying another 9th peer.",
      "created_at" : "2017-10-27T20:43:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340080341",
      "id" : 340080341,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
      "updated_at" : "2017-10-27T21:15:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340080341",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519600"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519600"
         }
      },
      "author_association" : "MEMBER",
      "body" : "oops, yes.",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-27T21:22:32Z",
      "diff_hunk" : "@@ -2382,6 +2399,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         // because it is set in UpdateBlockAvailability. Some nullptr checks\n         // are still present, however, as belt-and-suspenders.\n \n+        if (received_new_header && pindexLast->nChainWork > chainActive.Tip()->nChainWork) {\n+            nodestate->m_last_block_announcement = GetTime();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519600",
      "id" : 147519600,
      "in_reply_to_id" : 147486960,
      "original_commit_id" : "b258e7cefd6b534e920e80a45eba12d200b5fdbc",
      "original_position" : 64,
      "path" : "src/net_processing.cpp",
      "position" : 122,
      "pull_request_review_id" : 72633737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519600",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519872"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519872"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe almost always, but definitely not always -- our outbound peers can initiate disconnects, too, and it might take us a while to find one.\r\n\r\nI've pushed up changes to split the peer eviction onto a shorter timer (2.5 minutes), where we only require 30 seconds of connectivity to disconnect.",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-27T21:24:21Z",
      "diff_hunk" : "@@ -2941,6 +2953,57 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::CheckForStaleTip(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+    LOCK(cs_main);\n+\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                if (time_in_seconds - pnode->nTimeConnected > STALE_CHECK_INTERVAL/2) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519872",
      "id" : 147519872,
      "in_reply_to_id" : 147493512,
      "original_commit_id" : "c6fac39488f54671857a9c4367888586dbd5b4f4",
      "original_position" : 80,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 72634066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519872",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519932"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519932"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sounds good",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-27T21:24:43Z",
      "diff_hunk" : "@@ -436,6 +436,15 @@ void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman* connman) {\n }\n \n // Requires cs_main\n+bool TipMayBeStale(const Consensus::Params &consensusParams)\n+{\n+    if (g_last_tip_update == 0) {\n+        g_last_tip_update = GetTime();\n+    }\n+    return g_last_tip_update < GetTime() - consensusParams.nPowTargetSpacing * 3 && mapBlocksInFlight.empty();\n+}\n+\n+// Requires cs_main",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519932",
      "id" : 147519932,
      "in_reply_to_id" : 147490732,
      "original_commit_id" : "c6fac39488f54671857a9c4367888586dbd5b4f4",
      "original_position" : 28,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 72634135,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519932",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147521702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147521702"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure if this comment was made before we chatted offline, but it is possible to have both a feeler and an \"extra\" outbound peer simultaneously (just not in the same loop iteration, but that's nonsensical anyway since we only initiate a single connection in a single loop iteration, regardless).",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-27T21:36:00Z",
      "diff_hunk" : "@@ -1781,9 +1817,14 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         //  * Only make a feeler connection once every few minutes.\n         //\n         bool fFeeler = false;\n-        if (nOutbound >= nMaxOutbound) {\n+\n+        bool extra_outbound = GetTryNewOutboundPeer();\n+\n+        int desired_outbound = nMaxOutbound + (extra_outbound ? nMaxExtraOutbound : 0);\n+\n+        if (nOutbound >= desired_outbound) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147521702",
      "id" : 147521702,
      "in_reply_to_id" : 147481774,
      "original_commit_id" : "89412654c65a95b3da286ffce2c0b535f5b54b96",
      "original_position" : 76,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 72636260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147521702",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed @TheBlueMatt's nits.",
      "created_at" : "2017-10-27T21:36:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340095522",
      "id" : 340095522,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
      "updated_at" : "2017-10-27T21:36:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340095522",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147539231"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147539231"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this might be greatly simplified by extending CSemaphore to have an adjustable threshold.",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-28T00:12:33Z",
      "diff_hunk" : "@@ -1693,6 +1693,38 @@ void CConnman::ProcessOneShot()\n     }\n }\n \n+bool CConnman::GetTryNewOutboundPeer()\n+{\n+    LOCK(m_cs_outbound_peer);\n+    return m_try_another_outbound_peer;\n+}\n+\n+void CConnman::SetTryNewOutboundPeer(bool flag)\n+{\n+    LOCK(m_cs_outbound_peer);\n+    m_try_another_outbound_peer = flag;\n+}\n+\n+// Return the number of peers we have over our outbound connection limit\n+// Exclude peers that are marked for disconnect, or are going to be\n+// disconnected soon (eg one-shots and feelers)\n+// Also exclude peers that haven't finished initial connection handshake yet\n+// (so that we don't decide we're over our desired connection limit, and then\n+// evict some peer that has finished the handshake)\n+int CConnman::GetExtraOutboundCount()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147539231",
      "id" : 147539231,
      "original_commit_id" : "89412654c65a95b3da286ffce2c0b535f5b54b96",
      "original_position" : 31,
      "path" : "src/net.cpp",
      "position" : 22,
      "pull_request_review_id" : 72655694,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147539231",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147556553"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147556553"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any thoughts on @TheBlueMatt's suggestion (mentioned on IRC yesterday) to just use the feeler connection for the extra peer, rather than initiate a potential 10th connection?\r\n\r\nhttps://botbot.me/freenode/bitcoin-core-dev/2017-10-27/?msg=92828477&page=2\r\n\r\nI'm leaning towards doing that, so nMaxExtraOutbound would go away.  I guess this function wouldn't change though.\r\n\r\n",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-28T15:11:20Z",
      "diff_hunk" : "@@ -1693,6 +1693,38 @@ void CConnman::ProcessOneShot()\n     }\n }\n \n+bool CConnman::GetTryNewOutboundPeer()\n+{\n+    LOCK(m_cs_outbound_peer);\n+    return m_try_another_outbound_peer;\n+}\n+\n+void CConnman::SetTryNewOutboundPeer(bool flag)\n+{\n+    LOCK(m_cs_outbound_peer);\n+    m_try_another_outbound_peer = flag;\n+}\n+\n+// Return the number of peers we have over our outbound connection limit\n+// Exclude peers that are marked for disconnect, or are going to be\n+// disconnected soon (eg one-shots and feelers)\n+// Also exclude peers that haven't finished initial connection handshake yet\n+// (so that we don't decide we're over our desired connection limit, and then\n+// evict some peer that has finished the handshake)\n+int CConnman::GetExtraOutboundCount()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147556553",
      "id" : 147556553,
      "in_reply_to_id" : 147539231,
      "original_commit_id" : "89412654c65a95b3da286ffce2c0b535f5b54b96",
      "original_position" : 31,
      "path" : "src/net.cpp",
      "position" : 22,
      "pull_request_review_id" : 72673995,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147556553",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Needs rebase.",
      "created_at" : "2017-10-28T18:22:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340210331",
      "id" : 340210331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
      "updated_at" : "2017-10-28T18:22:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340210331",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Squashed and rebased.",
      "created_at" : "2017-10-28T19:26:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340214132",
      "id" : 340214132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
      "updated_at" : "2017-10-28T19:26:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340214132",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Without seeing the code, I think that would probably be simpler and more\nobvious.\n\nI wonder if we could actually combine the behavior with feelers. Launch a\nfeeler every 20 min or so as usual, and rather than disconnecting\nimmediately, replace a worse connection if necessary, and upgrade from\nfeeler to full outbound.\n\nOn Oct 28, 2017 11:11 AM, \"Suhas Daftuar\" <notifications@github.com> wrote:\n\n> *@sdaftuar* commented on this pull request.\n> ------------------------------\n>\n> In src/net.cpp\n> <https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147556553>:\n>\n> > +    return m_try_another_outbound_peer;\n> +}\n> +\n> +void CConnman::SetTryNewOutboundPeer(bool flag)\n> +{\n> +    LOCK(m_cs_outbound_peer);\n> +    m_try_another_outbound_peer = flag;\n> +}\n> +\n> +// Return the number of peers we have over our outbound connection limit\n> +// Exclude peers that are marked for disconnect, or are going to be\n> +// disconnected soon (eg one-shots and feelers)\n> +// Also exclude peers that haven't finished initial connection handshake yet\n> +// (so that we don't decide we're over our desired connection limit, and then\n> +// evict some peer that has finished the handshake)\n> +int CConnman::GetExtraOutboundCount()\n>\n> Any thoughts on @TheBlueMatt <https://github.com/thebluematt>'s\n> suggestion (mentioned on IRC yesterday) to just use the feeler connection\n> for the extra peer, rather than initiate a potential 10th connection?\n>\n> https://botbot.me/freenode/bitcoin-core-dev/2017-10-27/?\n> msg=92828477&page=2\n>\n> I'm leaning towards doing that, so nMaxExtraOutbound would go away. I\n> guess this function wouldn't change though.\n>\n> Ã¢ÂÂ\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147556553>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAZdEzhjrlXqpR_iPo_-CIcNtvbYKR8cks5sw0QdgaJpZM4QGjZX>\n> .\n>\n",
      "created_at" : "2017-10-28T19:50:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340215496",
      "id" : 340215496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
      "updated_at" : "2017-10-28T19:50:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340215496",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed a bug and changed the extra peer connection to be exclusive with a feeler, rather than in addition to a feeler.\r\n",
      "created_at" : "2017-10-29T13:41:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340263187",
      "id" : 340263187,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
      "updated_at" : "2017-10-29T13:41:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340263187",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588350"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If this loop fails to run when it should-- e.g. host it suspended, then later when it does run it will run additional times.  I believe this should be = time_in_seconds + STALE_CHECK_INTERVAL.",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-29T17:40:00Z",
      "diff_hunk" : "@@ -3004,6 +3021,81 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                constexpr int64_t min_connect_time = EXTRA_PEER_CHECK_INTERVAL / 5;\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > min_connect_time && state.nBlocksInFlight == 0) {\n+                    LogPrint(BCLog::NET, \"disconnecting extra outbound peer=%d (last block announcement received at time %d\\n\", pnode->GetId(), oldest_block_announcement);\n+                    pnode->fDisconnect = true;\n+                    return true;\n+                } else {\n+                    LogPrint(BCLog::NET, \"keeping outbound peer=%d chosen for eviction, (connect time: %d, blocks_in_flight: %d)\\n\", pnode->GetId(), pnode->nTimeConnected, state.nBlocksInFlight);\n+                    return false;\n+                }\n+            });\n+            if (disconnected) {\n+                // If we disconnected an extra peer, that means we successfully\n+                // connected to at least one peer after the last time we\n+                // detected a stale tip. Don't try any more extra peers until\n+                // we next detect a stale tip, to limit the load we put on the\n+                // network from these extra connections.\n+                connman->SetTryNewOutboundPeer(false);\n+            }\n+        }\n+    }\n+}\n+\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+\n+    EvictExtraOutboundPeers(time_in_seconds);\n+\n+    if (time_in_seconds > m_stale_tip_check_time) {\n+        LOCK(cs_main);\n+        // Check whether our tip is stale, and if so, allow using an extra\n+        // outbound peer\n+        if (TipMayBeStale(consensusParams)) {\n+            LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\", time_in_seconds - g_last_tip_update);\n+            connman->SetTryNewOutboundPeer(true);\n+        } else {\n+            connman->SetTryNewOutboundPeer(false);\n+        }\n+        m_stale_tip_check_time += STALE_CHECK_INTERVAL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588350",
      "id" : 147588350,
      "original_commit_id" : "f07dc993e7ea888833f2147a16a43a8830aa8a92",
      "original_position" : 126,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 72704403,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588350",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588441"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Doubly so because nothing appears to initialize it to a time to begin with...",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-29T17:43:13Z",
      "diff_hunk" : "@@ -3004,6 +3021,81 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                constexpr int64_t min_connect_time = EXTRA_PEER_CHECK_INTERVAL / 5;\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > min_connect_time && state.nBlocksInFlight == 0) {\n+                    LogPrint(BCLog::NET, \"disconnecting extra outbound peer=%d (last block announcement received at time %d\\n\", pnode->GetId(), oldest_block_announcement);\n+                    pnode->fDisconnect = true;\n+                    return true;\n+                } else {\n+                    LogPrint(BCLog::NET, \"keeping outbound peer=%d chosen for eviction, (connect time: %d, blocks_in_flight: %d)\\n\", pnode->GetId(), pnode->nTimeConnected, state.nBlocksInFlight);\n+                    return false;\n+                }\n+            });\n+            if (disconnected) {\n+                // If we disconnected an extra peer, that means we successfully\n+                // connected to at least one peer after the last time we\n+                // detected a stale tip. Don't try any more extra peers until\n+                // we next detect a stale tip, to limit the load we put on the\n+                // network from these extra connections.\n+                connman->SetTryNewOutboundPeer(false);\n+            }\n+        }\n+    }\n+}\n+\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+\n+    EvictExtraOutboundPeers(time_in_seconds);\n+\n+    if (time_in_seconds > m_stale_tip_check_time) {\n+        LOCK(cs_main);\n+        // Check whether our tip is stale, and if so, allow using an extra\n+        // outbound peer\n+        if (TipMayBeStale(consensusParams)) {\n+            LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\", time_in_seconds - g_last_tip_update);\n+            connman->SetTryNewOutboundPeer(true);\n+        } else {\n+            connman->SetTryNewOutboundPeer(false);\n+        }\n+        m_stale_tip_check_time += STALE_CHECK_INTERVAL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588441",
      "id" : 147588441,
      "in_reply_to_id" : 147588350,
      "original_commit_id" : "f07dc993e7ea888833f2147a16a43a8830aa8a92",
      "original_position" : 126,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 72704486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588441",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588654"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for catching that; fixed.",
      "commit_id" : "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
      "created_at" : "2017-10-29T17:51:50Z",
      "diff_hunk" : "@@ -3004,6 +3021,81 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                constexpr int64_t min_connect_time = EXTRA_PEER_CHECK_INTERVAL / 5;\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > min_connect_time && state.nBlocksInFlight == 0) {\n+                    LogPrint(BCLog::NET, \"disconnecting extra outbound peer=%d (last block announcement received at time %d\\n\", pnode->GetId(), oldest_block_announcement);\n+                    pnode->fDisconnect = true;\n+                    return true;\n+                } else {\n+                    LogPrint(BCLog::NET, \"keeping outbound peer=%d chosen for eviction, (connect time: %d, blocks_in_flight: %d)\\n\", pnode->GetId(), pnode->nTimeConnected, state.nBlocksInFlight);\n+                    return false;\n+                }\n+            });\n+            if (disconnected) {\n+                // If we disconnected an extra peer, that means we successfully\n+                // connected to at least one peer after the last time we\n+                // detected a stale tip. Don't try any more extra peers until\n+                // we next detect a stale tip, to limit the load we put on the\n+                // network from these extra connections.\n+                connman->SetTryNewOutboundPeer(false);\n+            }\n+        }\n+    }\n+}\n+\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+\n+    EvictExtraOutboundPeers(time_in_seconds);\n+\n+    if (time_in_seconds > m_stale_tip_check_time) {\n+        LOCK(cs_main);\n+        // Check whether our tip is stale, and if so, allow using an extra\n+        // outbound peer\n+        if (TipMayBeStale(consensusParams)) {\n+            LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\", time_in_seconds - g_last_tip_update);\n+            connman->SetTryNewOutboundPeer(true);\n+        } else {\n+            connman->SetTryNewOutboundPeer(false);\n+        }\n+        m_stale_tip_check_time += STALE_CHECK_INTERVAL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588654",
      "id" : 147588654,
      "in_reply_to_id" : 147588350,
      "original_commit_id" : "f07dc993e7ea888833f2147a16a43a8830aa8a92",
      "original_position" : 126,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 72704710,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
      "updated_at" : "2017-10-29T17:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588654",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
