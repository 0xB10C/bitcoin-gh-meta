{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "It appears 7629efcc2c3a8a8a7c17b1300cd466ec6c8c1f3f from bitcoin/bitcoin#23603 introduced a regression with build tool flags evaluation.\r\n\r\nOn macOS system:\r\n- pre-PR23603 master (ae017b81604761b57e22c28913c4ce81bf2e31ce):\r\n```\r\n% make -C depends print-darwin_CXXFLAGS \r\ndarwin_CXXFLAGS=-pipe\r\n% make -C depends print-host_CXXFLAGS\r\nhost_CXXFLAGS=-pipe\r\n```\r\n- the current master (d05be150ca23c0c1d7a6a908a3c43dce181209a8):\r\n```\r\n% make -C depends print-darwin_CXXFLAGS\r\ndarwin_CXXFLAGS=-pipe\r\n% make -C depends print-host_CXXFLAGS  \r\nhost_CXXFLAGS=-arch x86_64\r\n```\r\n\r\nIt's obvious a flag being set in `depends/hosts/darwin.mk`, i.e., `-pipe`, is lost.\r\n\r\nA naive approach to fix 7629efcc2c3a8a8a7c17b1300cd466ec6c8c1f3f by replacing an assignment with an append:\r\n```diff\r\n--- a/depends/builders/darwin.mk\r\n+++ b/depends/builders/darwin.mk\r\n@@ -22,7 +22,7 @@ darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\r\n darwin_native_binutils=\r\n darwin_native_toolchain=\r\n \r\n-x86_64_darwin_CFLAGS = -arch x86_64\r\n-x86_64_darwin_CXXFLAGS = $(x86_64_darwin_CFLAGS)\r\n-aarch64_darwin_CFLAGS = -arch arm64\r\n-aarch64_darwin_CXXFLAGS = $(aarch64_darwin_CFLAGS)\r\n+x86_64_darwin_CFLAGS += -arch x86_64\r\n+x86_64_darwin_CXXFLAGS += $(x86_64_darwin_CFLAGS)\r\n+aarch64_darwin_CFLAGS += -arch arm64\r\n+aarch64_darwin_CXXFLAGS += $(aarch64_darwin_CFLAGS)\r\n```\r\nis wrong:\r\n```\r\n% make -C depends print-darwin_CXXFLAGS\r\ndarwin_CXXFLAGS=-pipe\r\n% make -C depends print-host_CXXFLAGS  \r\nhost_CXXFLAGS=-pipe -pipe -arch x86_64\r\n```\r\n\r\nThis PR suggests to deffer the evaluation of the `$(host_arch)_$(host_os)_$(flags)` and `$(host_arch)_$(host_os)_$(release_type)_$(flags)` variables by avoiding the append operator `+=`. See https://www.gnu.org/software/make/manual/make.html#Reading-Makefiles for more details.\r\n\r\nFor 8e83a1dc22adc24c39a169d3739087f32600a0df from this PR:\r\n```\r\n% make -C depends print-darwin_CXXFLAGS        \r\ndarwin_CXXFLAGS=-pipe\r\n% make -C depends print-host_CXXFLAGS          \r\nhost_CXXFLAGS=-arch x86_64 -pipe\r\n```\r\n\r\n---\r\n\r\nThe second commit suggests a simple alternative to bitcoin/bitcoin#23609 inspired by https://github.com/bitcoin/bitcoin/pull/23609#issuecomment-984249800, and fixes warnings like this one\r\n```\r\nld: warning: direct access in function 'QMetaTypeIdQObject<QWindow*, 8>::qt_metatype_id()' from file '/Users/hebasto/bitcoin/depends/aarch64-apple-darwin21.1.0/plugins/platforms/libqcocoa.a(qcocoaintegration.o)' to global weak symbol 'QtMetaTypePrivate::QMetaTypeFunctionHelper<QWindow*, true>::Construct(void*, void const*)' from file 'qt/libbitcoinqt.a(libbitcoinqt_a-walletcontroller.o)' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\r\n```\r\n\r\nwhen building with depends for macOS.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23817/comments",
   "created_at" : "2021-12-19T10:41:22Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23817/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/23817",
   "id" : 1084067110,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23817/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII584wCyfX",
   "number" : 23817,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/23817.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23817",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/23817.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23817"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23817/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23817/timeline",
   "title" : "build: Don't evaluate variables immediately if they could be set later",
   "updated_at" : "2021-12-19T10:47:01Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23817",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
      "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
      "followers_url" : "https://api.github.com/users/hebasto/followers",
      "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/hebasto",
      "id" : 32963518,
      "login" : "hebasto",
      "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
      "organizations_url" : "https://api.github.com/users/hebasto/orgs",
      "received_events_url" : "https://api.github.com/users/hebasto/received_events",
      "repos_url" : "https://api.github.com/users/hebasto/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/hebasto"
   }
}
