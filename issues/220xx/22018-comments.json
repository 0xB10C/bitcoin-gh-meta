[
   {
      "author_association" : "MEMBER",
      "body" : "> Users should be able to spend unconfirmed UTXO\r\n\r\nNACK. The dangers of spending untrusted and unconfirmed UTXOs are well understood. We should not be spending such UTXOs.\r\n\r\n***\r\n\r\nI don't think it is useful to compare our behavior to a select few wallets. Rather the analysis needs to be done across all transactions on the blockchain. While not avoiding partial spends may be a fingerprint, avoiding partial spends may also provide a way to fingerprint transactions. It's not as if this option magically makes fingerprinting impossible.",
      "created_at" : "2021-05-21T22:00:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-846284054",
      "id" : 846284054,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22018",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NjI4NDA1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-21T22:00:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/846284054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The dangers of spending untrusted and unconfirmed UTXOs are well understood. We should not be spending such UTXOs.\r\n\r\nWhat are these dangers that don't affect other wallets or power users who can use CLI?\r\n\r\n> I don't think it is useful to compare our behavior to a select few wallets. Rather the analysis needs to be done across all transactions on the blockchain\r\n\r\nI can include few other wallets that are used more. It is a privacy issue even if attacker can identify core wallet addresses based on few wallets that victim might be using. \r\n\r\n> It's not as if this option magically makes fingerprinting impossible.\r\n\r\nThere is no option or technology that magically solves all privacy issues.\r\n\r\n",
      "created_at" : "2021-05-25T05:46:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-847553908",
      "id" : 847553908,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22018",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NzU1MzkwOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-25T09:17:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847553908",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK on spending unconfirmed outputs. Just because other wallets do dangerous things we don't have to do the same thing. This has a higher priority than wallet fingerprinting in almost everyone's mind, I think. But I also don't have a good, exhaustive resource on the dangers of 0-conf handy at the moment, I will see if I can find something soon.\r\n\r\nFor your other comments concerning `OUTPUT_GROUP_MAX_ENTRIES` I think #17854 is relevant. I had briefly started to work on an alternative suggestion back then, maybe I can dig up an old branch.",
      "created_at" : "2021-05-27T00:06:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-849200300",
      "id" : 849200300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22018",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0OTIwMDMwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-27T00:06:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/849200300",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> NACK on spending unconfirmed outputs. Just because other wallets do dangerous things we don't have to do the same thing. This has a higher priority than wallet fingerprinting in almost everyone's mind, I think. But I also don't have a good, exhaustive resource on the dangers of 0-conf handy at the moment, I will see if I can find something soon.\r\n\r\nHow about locking all UTXOs associated with a scriptpubkey until all are confirmed?\r\n\r\n> For your other comments concerning OUTPUT_GROUP_MAX_ENTRIES I think #17854 is relevant. I had briefly started to work on an alternative suggestion back then, maybe I can dig up an old branch\r\n\r\nThanks for the link. Alternative suggestion branch will be helpful if you can find it.",
      "created_at" : "2021-05-27T07:25:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-849402033",
      "id" : 849402033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22018",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0OTQwMjAzMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-27T07:25:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/849402033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm also NACK on spending incoming unconfirmed outputs unless the user is made aware of the many problems associated with that behavior.\r\n\r\n---\r\n\r\n@prayank23 \r\n\r\n> How about locking all UTXOs associated with a scriptpubkey until all are confirmed?\r\n\r\nI think that would require additional communication to the user about why they can't spend their funds.  For existing incoming payments, the GUI and the RPCs track confirmed and unconfirmed balances separately, so I think it's pretty clear why you can't spend the money you just received.  But if you previously received a confirmed 1.00 BTC to address bc1blahblah and you just received an additional unconfirmed 0.01 BTC to that same address, it would be confusing why you couldn't spend your previous 1.00 BTC balance.\r\n\r\nAdditionally, an attacker could prevent an honest user from being able to spending their coins by simply always keeping a transaction paying a reused address in the mempool.",
      "created_at" : "2021-05-29T00:45:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850738180",
      "id" : 850738180,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22018",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MDczODE4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-29T00:45:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850738180",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> How about locking all UTXOs associated with a scriptpubkey until all are confirmed?\r\n\r\nNACK. It would make it trivial to make it impossible for an attacker to start locking people out of their funds. All that it would take is for an attacker to create a dust spam transaction that sends to a bunch of addresses. If this transaction were at the min relay fee, and if fees were above the minimum, then the transaction could remain in the mempool for a very long time, during which time all of the users whose addresses are in receiving the spam would be unable to send some or all of their funds. Furthermore, this would become another way to fingerprint a user - from this, it would be possible to learn that users are not using Bitcoin Core.",
      "created_at" : "2021-05-29T03:32:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850761723",
      "id" : 850761723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22018",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MDc2MTcyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-29T03:32:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850761723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@harding \r\n\r\n> I'm also NACK on spending incoming unconfirmed outputs unless the user is made aware of the many problems associated with that behavior.\r\n\r\nIs there a link to know about all the problems associated with spending unconfirmed outputs? How can we make the users aware of these things?\r\n\r\n> I think that would require additional communication to the user about why they can't spend their funds. \r\n\r\nIt can be done with a warning message in GUI, highlight the locked unspents with red color etc. and similar warning printed as log in bitcoind.\r\n\r\n> it would be confusing why you couldn't spend your previous 1.00 BTC balance\r\n\r\nConfusion in some cases is better than unknowingly using one of inputs selected by algorithm that affects your privacy. People who use coin control for all transactions will never have issues but others who use coin selection algorithm are already confused lot of times about the inputs selected in different transactions. \r\n\r\n> Additionally, an attacker could prevent an honest user from being able to spending their coins by simply always keeping a transaction paying a reused address in the mempool.\r\n\r\nI have mentioned this above but I think it will not be an issue. Consider this example:\r\n\r\nAttacker sends 0.001 BTC to one of my address so I am unable to use UTXOs associated with it. \r\n\r\nPositive: Automatically locking UTXOs associated with the address is good for my privacy and attacker has no clue about my wallet or reasons for not spending these UTXOs\r\n\r\nNegative: I am unable to use some of my bitcoin. What can I do to change this? Unlock UTXOs if I really want to use them.\r\n\r\nAt least I know someone is trying to know more about my wallet and transactions.\r\n\r\n@achow101 \r\n\r\n> Furthermore, this would become another way to fingerprint a user - from this, it would be possible to learn that users are not using Bitcoin Core.\r\n\r\nThis is incorrect. If someone sends me 0.001 BTC to one of my address which already has 0.01 UTXO associated with it, it is almost impossible to guess the reason why I did not spend them yet. It could be any wallet and I have just decide not use them yet or they were not selected by algorithm.\r\n\r\n---\r\n\r\nThere is a **problem** and I am looking for **solutions**. Unfortunately NACKs with no alternative solution do not solve the problem.",
      "created_at" : "2021-05-29T07:03:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850784015",
      "id" : 850784015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22018",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MDc4NDAxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-29T07:03:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850784015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Is there a link to know about all the problems associated with spending unconfirmed outputs?\r\n\r\nNot that I know of, but I can list the problems I'm aware of:\r\n\r\n- If the payment to you is conflicted, your re-spend becomes invalid but you still might be legally obligated to pay your receipient\r\n- If the payment to you is RBF'd, your re-spend becomes invalid, requiring you to issue a new payment.  This can be quite an ordeal (you might need to ask for a new invoice and a new exchange rate, you might need to update your accounting records)\r\n- If you issue a new payment, you must be absolutely certain it conflicts with *all* previous payments you issued for that item/service so that a mempool reshuffling or block chain reorg doesn't result in you double paying\r\n- You payment might not be relayed due to mempool ancestor/descendent limits\r\n- All the problems above are multiplied by each additional person spending unconfirmed incoming payments, e.g. if Alice pays Bob who pays Carol who pays Dan, now payment to Dan are broken each time any one of Alice, Bob, or Carol decides to RBF fee bump their transaction, or when Bob's decides to create a large transaction with his change output, or Carol's low feerate transaction gets dropped from the mempool, etc.\r\n\r\n> How can we make the users aware of these things?\r\n\r\nI think that's too much technical detail to put on end users for such a minor issue as spending money they haven't fully received yet.  Even if we could solve all of the above problems with a nice UI, I'd be wary of making it easy for people to spend unconfirmed incoming payments---letting users do that minimizes the essential security difference between unconfirmed transactions and confirmed transactions.  For developers, I think it's ok to allow them to bypass the restriction if we (or someone else) provides documentation.  I think the recently-added exceptions to the PSBT commands is a reasonable way to do that.\r\n\r\n> Confusion in some cases is better than unknowingly using one of inputs selected by algorithm that affects your privacy. People who use coin control for all transactions will never have issues but others who use coin selection algorithm are already confused lot of times about the inputs selected in different transactions.\r\n\r\nHuh?  Most users don't care about what inputs gets selected, so why would they be confused by that?\r\n\r\n> Negative: I am unable to use some of my bitcoin. What can I do to change this? Unlock UTXOs if I really want to use them.\r\n> \r\n> At least I know someone is trying to know more about my wallet and transactions.\r\n\r\nA better approach IMO to making Bitcoin Core users perform extra steps to spend their money would be to get other wallets to use the same safety-first approach of Bitcoin Core to not allowing spending of incoming unconfirmed outputs.\r\n\r\n> There is a **problem** and I am looking for **solutions**. Unfortunately NACKs with no alternative solution do not solve the problem.\r\n\r\nThe only truly effective approach to preventing wallet fingerprinting is to get all wallets to implement a standardized set of behavior.  To do that, I think you want to first identify what the best practices are and then try to get every wallet to implement those best practices.  In the case of incoming unconfirmed outputs, I think the best practice is to not spend them (except for CPFP fee bumping).  Bitcoin Core implements that non-spending behavior, so I think the goal should be to get other wallets to adopt that same behavior.",
      "created_at" : "2021-05-29T07:58:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22018#issuecomment-850791177",
      "id" : 850791177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22018",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MDc5MTE3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-29T07:58:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850791177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   }
]
