[
   {
      "author_association" : "MEMBER",
      "body" : "I agree this makes sense.  \r\n\r\nWhile you're improving the addrfetch logic, perhaps we could also add a timeout for disconnection so that if an addrfetch peer hasn't responded to our `getaddr` for some amount of time, we eventually disconnect regardless?  I believe right now we'd just stay connected indefinitely to such a peer.",
      "created_at" : "2021-05-28T16:50:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-850544924",
      "id" : 850544924,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MDU0NDkyNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-28T16:50:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850544924",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2021-05-29T03:27:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-850761176",
      "id" : 850761176,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MDc2MTE3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-29T03:27:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850761176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Tested ACK [b6c5d1e](https://github.com/bitcoin/bitcoin/commit/b6c5d1e450dde6a54bd785504c923adfb45c7060).\r\n> I ran the node with the args `-debug=net -dnsseed=0 -seednode=<IP> -fixedseeds=0` using the master branch and this PR branch (table below).\r\n> \r\n> The way `ADDR_FETCH` is used today to fetch new address from a seed IP seems not work as expected, since the first message is only self-announcement and the `ADDR` message with 1000 addresses is received via `OUTBOUND_FULL_RELAY` from the same peer.\r\n> \r\n> As shown in the second table, after the proposed change in this PR, the first `ADDR_FETCH` connection actually fetches for addresses.\r\n> \r\n> Master Branch results:\r\n> \r\n> From IP\tConnection Type\t`vAddr` size\t`AddrMan` size\tself-announcement\r\n> `seed_ip`\t`ADDR_FETCH`\t1\t0\tyes\r\n> `seed_ip`\t`OUTBOUND_FULL_RELAY`\t1\t1\tyes\r\n> `seed_ip`\t`OUTBOUND_FULL_RELAY`\t1000\t1\tno\r\n> `new_ip`\t`OUTBOUND_FULL_RELAY`\t1\t870\tyes\r\n> PR Branch results:\r\n> \r\n> From IP\tConnection Type\t`vAddr` size\t`AddrMan` size\tself-announcement\r\n> `seed_ip`\t`ADDR_FETCH`\t1\t0\tyes\r\n> `seed_ip`\t`ADDR_FETCH`\t1000\t1\tno\r\n> `new_ip`\t`OUTBOUND_FULL_RELAY`\t1\t870\tyes\r\n\r\n",
      "created_at" : "2021-05-29T11:02:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-850814371",
      "id" : 850814371,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MDgxNDM3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-29T11:02:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850814371",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/81614858?v=4",
         "events_url" : "https://api.github.com/users/Gondayt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Gondayt/followers",
         "following_url" : "https://api.github.com/users/Gondayt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Gondayt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Gondayt",
         "id" : 81614858,
         "login" : "Gondayt",
         "node_id" : "MDQ6VXNlcjgxNjE0ODU4",
         "organizations_url" : "https://api.github.com/users/Gondayt/orgs",
         "received_events_url" : "https://api.github.com/users/Gondayt/received_events",
         "repos_url" : "https://api.github.com/users/Gondayt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Gondayt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Gondayt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Gondayt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> While you're improving the addrfetch logic, perhaps we could also add a timeout for disconnection so that if an addrfetch peer hasn't responded to our `getaddr` for some amount of time, we eventually disconnect regardless? I believe right now we'd just stay connected indefinitely to such a peer.\r\n\r\nYes, I think that would be useful, and I will add this. I think such an addrfetch peer also wouldn't count toward the max full outbound limit in spite of effectively behaving like one. As for the timeout, I'd suggest a value `4*AVG_ADDRESS_BROADCAST_INTERVAL = 2min` after connection.\r\n\r\n> half baked thought: Wondering if it would make sense to combine this value with the one used here. In my understanding, both are trying to use the number of addrs to discern [response to getaddr] vs [probably a self-announcement]. We could introduce a constant that's used in both places.\r\n\r\nDo you suggest just using `size > 10` instead of 1 in the check? More seems difficult, because the rest of the criteria work on the level of individual addrs.\r\n\r\n> I'm also wondering if we can add functional test coverage for `AddrFetch` connections. I think the groundwork is in place with the outbound-full-relay and block-relay-only connections. We might just be able to add the addr-fetch option to TestNode.add_outbound_p2p_connection, the addconnection RPC, and CConnman::AddConnection\r\ntimeout behavior is tested. \r\n\r\nGood idea! I think it would make sense to combine this with @sdaftuar 's suggestion of a timeout, so that the timout will be tested. \r\nAdding AddrFetch to the test framework actually does seem to work exactly as you suggested, just need to figure out some details and will add this in the next days (unless reviewers prefer that to be a separate PR). \r\n",
      "created_at" : "2021-05-30T17:51:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-851036683",
      "id" : 851036683,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MTAzNjY4Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-30T17:52:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/851036683",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   }
]
