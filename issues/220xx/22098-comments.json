[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r642127752"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642127752"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not that it matters much, but at this point, the address is already in addrman, so this returns success=false.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-05-30T20:58:44Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r642127752",
      "id" : 642127752,
      "line" : 39,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjEyNzc1Mg==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 39,
      "pull_request_review_id" : 671863773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T17:59:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642127752",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r642129821"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642129821"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure why this use of `-connect` is even allowed considering that `-connect`  without an argument leads to the node trying to connect to nothingness, but maybe add some dummy argument so that it is not confused with a boolean option.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-05-30T21:18:12Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r642129821",
      "id" : 642129821,
      "line" : 67,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjEyOTgyMQ==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 67,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 67,
      "pull_request_review_id" : 671863773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T17:59:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642129821",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644190076"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644190076"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The test runs quite long (much waiting). I don't think it's possible to prevent this (mocking time doesn't seem possible) but running `init_arg_tests` before `existing_outbound_connections_test` would save one 11 second wait because addrman would still be empty.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-02T17:45:50Z",
      "diff_hunk" : "@@ -17,6 +17,7 @@ def set_test_params(self):\n     def run_test(self):\n         self.existing_outbound_connections_test()\n         self.existing_block_relay_connections_test()\n+        self.init_arg_tests()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644190076",
      "id" : 644190076,
      "line" : 21,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDE5MDA3Ng==",
      "original_commit_id" : "1e03a9e7f302fe461b79b7b4f8456ef008628139",
      "original_line" : 20,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 21,
      "pull_request_review_id" : 671863773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T17:59:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644190076",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644330212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644330212"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ah, totally. this line is unnecessary when running the tests together, but I added it so the `existing_block_relay_connections_test` setup would not be dependent on `existing_outbound_connections_test`. would it better if I change the IP address to be something new? ",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-02T21:23:45Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644330212",
      "id" : 644330212,
      "in_reply_to_id" : 642127752,
      "line" : 39,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDMzMDIxMg==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 39,
      "pull_request_review_id" : 674694886,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T21:24:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644330212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644353410"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644353410"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "oh, I see. No, I don't think that is necessary.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-02T22:11:19Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644353410",
      "id" : 644353410,
      "in_reply_to_id" : 642127752,
      "line" : 39,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDM1MzQxMA==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 39,
      "pull_request_review_id" : 674723758,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T22:11:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644353410",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644919783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644919783"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You don't need to specify the default value for this arg:\r\n\r\n```suggestion\r\n        self.restart_node(0)\r\n```\r\n\r\nwill just restart with the default extra args.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-03T15:57:03Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644919783",
      "id" : 644919783,
      "line" : 61,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDkxOTc4Mw==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 61,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 61,
      "pull_request_review_id" : 675450423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-03T16:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644919783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644919955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644919955"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As above:\r\n\r\n```suggestion\r\n        self.restart_node(0)\r\n```",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-03T15:57:17Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0, [\"-forcednsseed=0\", \"-dnsseed=1\", \"-connect=0\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644919955",
      "id" : 644919955,
      "line" : 89,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDkxOTk1NQ==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 89,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 89,
      "pull_request_review_id" : 675450423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-03T16:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644919955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644920673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644920673"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Consider:\r\n\r\n```suggestion\r\n        for i in itertools.count():\r\n```\r\n\r\nTo avoid the magic `1500` constant. You'll need to import `itertools`.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-03T15:58:10Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0, [\"-forcednsseed=0\", \"-dnsseed=1\", \"-connect=0\"])\n+\n+    def wait_time_tests(self):\n+        self.log.info(\"Check the delay before querying DNS seeds\")\n+\n+        # Populate addrman with < 1000 addresses\n+        for i in range(5):\n+            a = f\"192.0.0.{i}\"\n+            self.nodes[0].addpeeraddress(a, 8333)\n+\n+        # The delay should be 11 seconds\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Waiting 11 seconds before querying DNS seeds.\\n\"])):\n+            self.restart_node(0)\n+\n+        # Populate addrman with > 1000 addresses\n+        for i in range(1500):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644920673",
      "id" : 644920673,
      "line" : 104,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDkyMDY3Mw==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 104,
      "original_position" : 104,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 104,
      "pull_request_review_id" : 675450423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-03T16:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644920673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644924852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644924852"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you're touching these anyway...\r\n\r\n```suggestion\r\nstatic constexpr bool DEFAULT_FORCEDNSSEED{false};\r\nstatic constexpr bool DEFAULT_DNSSEED{true};\r\nstatic constexpr bool DEFAULT_FIXEDSEEDS{true};\r\n```",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-03T16:03:17Z",
      "diff_hunk" : "@@ -79,9 +79,9 @@ static const int64_t DEFAULT_PEER_CONNECT_TIMEOUT = 60;\n /** Number of file descriptors required for message capture **/\n static const int NUM_FDS_MESSAGE_CAPTURE = 1;\n \n-static const bool DEFAULT_FORCEDNSSEED = false;\n-static const bool DEFAULT_DNSSEED = true;\n-static const bool DEFAULT_FIXEDSEEDS = true;\n+static constexpr bool DEFAULT_FORCEDNSSEED = false;\n+static constexpr bool DEFAULT_DNSSEED = true;\n+static constexpr bool DEFAULT_FIXEDSEEDS = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644924852",
      "id" : 644924852,
      "line" : 84,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDkyNDg1Mg==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 84,
      "original_position" : 9,
      "original_start_line" : 82,
      "path" : "src/net.h",
      "position" : 9,
      "pull_request_review_id" : 675450423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : 82,
      "start_side" : "RIGHT",
      "updated_at" : "2021-06-03T16:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644924852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
