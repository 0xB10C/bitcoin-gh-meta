[
   {
      "author_association" : "MEMBER",
      "body" : "Note that there will be a followup PR to this which introduces a struct that encapsulates the selection. This struct will also do the waste calculation which will remove the ugly tuples stuff that is currently done to allow for the waste calculation.",
      "created_at" : "2021-05-21T00:32:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-845569762",
      "id" : 845569762,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NTU2OTc2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-21T00:32:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845569762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22100 (refactor: Clean up new wallet spend, receive files added #21207 by ryanofsky)\n* #22019 (wallet: Introduce SelectionResult for encapsulating a coin selection solution by achow101)\n* #22008 (wallet: Cleanup and refactor CreateTransactionInternal by achow101)\n* #21206 (refactor: Make CWalletTx sync state type-safe by ryanofsky)\n* #17526 (Use Single Random Draw In addition to knapsack as coin selection fallback by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-05-21T03:52:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-845633808",
      "id" : 845633808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NTYzMzgwOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-02T12:33:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845633808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "With #17331 now merged, this is ready for review.",
      "created_at" : "2021-05-25T15:49:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-847987209",
      "id" : 847987209,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0Nzk4NzIwOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-25T15:49:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847987209",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-05-30T11:54:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-850987723",
      "id" : 850987723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MDk4NzcyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-30T11:54:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850987723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643151092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643151092"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```\r\nif (change_cost == 0) {\r\n  ..\r\n}\r\n```",
      "commit_id" : "a92c5611ad6661a8467371422da6a4b5a17366d7",
      "created_at" : "2021-06-01T14:23:08Z",
      "diff_hunk" : "@@ -341,3 +341,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_value += coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    // When we are not making change (change_cost  == 0), consider the excess we are throwing away to fees\n+    waste += selected_value - target;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643151092",
      "id" : 643151092,
      "line" : 365,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MzE1MTA5Mg==",
      "original_commit_id" : "a92c5611ad6661a8467371422da6a4b5a17366d7",
      "original_line" : 365,
      "original_position" : 25,
      "original_start_line" : 364,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 25,
      "pull_request_review_id" : 673138660,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
      "side" : "RIGHT",
      "start_line" : 364,
      "start_side" : "RIGHT",
      "updated_at" : "2021-06-01T14:23:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643151092",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/283533?v=4",
         "events_url" : "https://api.github.com/users/OttoAllmendinger/events{/privacy}",
         "followers_url" : "https://api.github.com/users/OttoAllmendinger/followers",
         "following_url" : "https://api.github.com/users/OttoAllmendinger/following{/other_user}",
         "gists_url" : "https://api.github.com/users/OttoAllmendinger/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/OttoAllmendinger",
         "id" : 283533,
         "login" : "OttoAllmendinger",
         "node_id" : "MDQ6VXNlcjI4MzUzMw==",
         "organizations_url" : "https://api.github.com/users/OttoAllmendinger/orgs",
         "received_events_url" : "https://api.github.com/users/OttoAllmendinger/received_events",
         "repos_url" : "https://api.github.com/users/OttoAllmendinger/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/OttoAllmendinger/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/OttoAllmendinger/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/OttoAllmendinger"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643151389"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643151389"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`return waste;`",
      "commit_id" : "a92c5611ad6661a8467371422da6a4b5a17366d7",
      "created_at" : "2021-06-01T14:23:25Z",
      "diff_hunk" : "@@ -341,3 +341,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_value += coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    // When we are not making change (change_cost  == 0), consider the excess we are throwing away to fees\n+    waste += selected_value - target;\n+\n+    return target;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643151389",
      "id" : 643151389,
      "line" : 367,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MzE1MTM4OQ==",
      "original_commit_id" : "a92c5611ad6661a8467371422da6a4b5a17366d7",
      "original_line" : 367,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 27,
      "pull_request_review_id" : 673138660,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-01T14:23:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643151389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/283533?v=4",
         "events_url" : "https://api.github.com/users/OttoAllmendinger/events{/privacy}",
         "followers_url" : "https://api.github.com/users/OttoAllmendinger/followers",
         "following_url" : "https://api.github.com/users/OttoAllmendinger/following{/other_user}",
         "gists_url" : "https://api.github.com/users/OttoAllmendinger/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/OttoAllmendinger",
         "id" : 283533,
         "login" : "OttoAllmendinger",
         "node_id" : "MDQ6VXNlcjI4MzUzMw==",
         "organizations_url" : "https://api.github.com/users/OttoAllmendinger/orgs",
         "received_events_url" : "https://api.github.com/users/OttoAllmendinger/received_events",
         "repos_url" : "https://api.github.com/users/OttoAllmendinger/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/OttoAllmendinger/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/OttoAllmendinger/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/OttoAllmendinger"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643325871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643325871"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
      "created_at" : "2021-06-01T17:15:10Z",
      "diff_hunk" : "@@ -341,3 +341,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_value += coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    // When we are not making change (change_cost  == 0), consider the excess we are throwing away to fees\n+    waste += selected_value - target;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643325871",
      "id" : 643325871,
      "in_reply_to_id" : 643151092,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MzMyNTg3MQ==",
      "original_commit_id" : "a92c5611ad6661a8467371422da6a4b5a17366d7",
      "original_line" : 365,
      "original_position" : 25,
      "original_start_line" : 364,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 673388146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-06-01T17:15:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643325871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643325955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643325955"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
      "created_at" : "2021-06-01T17:15:14Z",
      "diff_hunk" : "@@ -341,3 +341,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n {\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n+\n+CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, const CAmount change_cost, const CAmount target)\n+{\n+    // If the result is empty, then selection failed. Don't use this one, so set waste to very high\n+    if (inputs.empty()) {\n+        return MAX_MONEY;\n+    }\n+\n+    // Always consider the cost of spending an input now vs in the future.\n+    CAmount waste = 0;\n+    CAmount selected_value = 0;\n+    for (const CInputCoin& coin : inputs) {\n+        waste += coin.m_fee - coin.m_long_term_fee;\n+        selected_value += coin.txout.nValue;\n+    }\n+\n+    // Consider the cost of making change and spending it in the future\n+    // If we aren't making change, the caller should've set change_cost to 0\n+    waste += change_cost;\n+\n+    // When we are not making change (change_cost  == 0), consider the excess we are throwing away to fees\n+    waste += selected_value - target;\n+\n+    return target;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r643325955",
      "id" : 643325955,
      "in_reply_to_id" : 643151389,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MzMyNTk1NQ==",
      "original_commit_id" : "a92c5611ad6661a8467371422da6a4b5a17366d7",
      "original_line" : 367,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 673388199,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-01T17:15:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643325955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644254194"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644254194"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can std::move `bnb_coins` here to avoid a copy.",
      "commit_id" : "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
      "created_at" : "2021-06-02T19:16:52Z",
      "diff_hunk" : "@@ -357,17 +357,49 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: selected inputs, selected value, cost of change, target\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<std::set<CInputCoin>, CAmount, CAmount, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(bnb_coins, bnb_value, /* cost of change */ CAmount(0), nTargetValue));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644254194",
      "id" : 644254194,
      "line" : 371,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDI1NDE5NA==",
      "original_commit_id" : "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
      "original_line" : 371,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 17,
      "pull_request_review_id" : 674595615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T19:22:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644254194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644254456"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644254456"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can std::move `knapsack_coins` here to avoid a copy.",
      "commit_id" : "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
      "created_at" : "2021-06-02T19:17:18Z",
      "diff_hunk" : "@@ -357,17 +357,49 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: selected inputs, selected value, cost of change, target\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<std::set<CInputCoin>, CAmount, CAmount, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(bnb_coins, bnb_value, /* cost of change */ CAmount(0), nTargetValue));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);\n+    if (knapsack_ret) {\n+        results.push_back(std::make_tuple(knapsack_coins, knapsack_value, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644254456",
      "id" : 644254456,
      "line" : 382,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDI1NDQ1Ng==",
      "original_commit_id" : "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
      "original_line" : 382,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 29,
      "pull_request_review_id" : 674595615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T19:22:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644254456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644255181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644255181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's slightly inefficient to copy the selected inputs into setCoinsRet inside the loop itself, as it may result in multiple useless copies.\r\n\r\nAs an alternative, you could create a vector of e.g. `(CAmount waste, std::ref<std::set<CInputCoins>> inputs)` pairs by `std::transform`ing the `results` vector, and then returning `*std::min(that vector).second`.",
      "commit_id" : "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
      "created_at" : "2021-06-02T19:18:33Z",
      "diff_hunk" : "@@ -357,17 +357,49 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n+    // Vector of results for use with waste calculation\n+    // In order: selected inputs, selected value, cost of change, target\n+    // TODO: Use a struct representing the selection result\n+    std::vector<std::tuple<std::set<CInputCoin>, CAmount, CAmount, CAmount>> results;\n \n     // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n     std::vector<OutputGroup> positive_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n-    if (SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, setCoinsRet, nValueRet)) {\n-        return true;\n+    std::set<CInputCoin> bnb_coins;\n+    CAmount bnb_value;\n+    bool bnb_ret = SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change, bnb_coins, bnb_value);\n+    if (bnb_ret) {\n+        results.push_back(std::make_tuple(bnb_coins, bnb_value, /* cost of change */ CAmount(0), nTargetValue));\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n     // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n     // So we need to include that for KnapsackSolver as well, as we are expecting to create a change output.\n-    return KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, setCoinsRet, nValueRet);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + coin_selection_params.m_change_fee, all_groups, knapsack_coins, knapsack_value);\n+    if (knapsack_ret) {\n+        results.push_back(std::make_tuple(knapsack_coins, knapsack_value, coin_selection_params.m_cost_of_change, nTargetValue + coin_selection_params.m_change_fee));\n+    }\n+\n+    if (results.size() == 0) {\n+        // No solution found\n+        return false;\n+    }\n+\n+    // Choose the result with the best waste\n+    CAmount best_waste = MAX_MONEY;\n+    for (const auto& result : results) {\n+        const auto& selected_inputs = std::get<0>(result);\n+        CAmount this_waste = GetSelectionWaste(selected_inputs, std::get<2>(result), std::get<3>(result));\n+        // Update the best waste either when this waste is better, or when the waste is the same and this result has more inputs\n+        if (this_waste < best_waste || (this_waste == best_waste && selected_inputs.size() > setCoinsRet.size())) {\n+            setCoinsRet = selected_inputs;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#discussion_r644255181",
      "id" : 644255181,
      "line" : 397,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDI1NTE4MQ==",
      "original_commit_id" : "e09aab121dc9251dd9236f75f83eb4353c9b72ee",
      "original_line" : 397,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 44,
      "pull_request_review_id" : 674595615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T19:22:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644255181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Does this introduce any behavior changes besides the long-term feerate change?\r\n>\r\n> I would think not, as the BNB search always has waste 0, so if it works, it will still always be chosen?\r\n\r\nThere is a behavior change as BnB can non-zero waste. Part of the waste is the excess thrown away to fees. Because BnB uses a matching window, it is possible for it to have an excess which is included as part of the waste calculation. Additionally, the difference between the fee and the long term fee is usually non-zero, so the waste is also usually non-zero.\r\n\r\nThe main result of this behavior change is that when target feerate is less than the long term feerate, we will choose the result that consolidates more. This is because the difference between the fee and the long term fee will be negative which generally makes the waste negative. When you have more inputs, the waste will be more negative, and so the most negative solution is used. When the target feerate is greater than the long term feerate, then we will choose the result that pays the least fees. This is because the difference between the fee and the long term fee is positive, so the waste is generally positive. With less inputs, both the waste and fees will be lower, so we end up choosing the solution with lower fees.\r\n\r\nThis strategy does not necessarily mean that one algorithm will tend to be chosen over another, but rather as a standard way to measure how \"good\" they are.",
      "created_at" : "2021-06-02T21:10:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-853384998",
      "id" : 853384998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MzM4NDk5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-02T21:10:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853384998",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@achow101 Oh, of course. Thanks for reminding me on the point of the waste metric.",
      "created_at" : "2021-06-02T21:13:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22009#issuecomment-853386169",
      "id" : 853386169,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MzM4NjE2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-02T21:13:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853386169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
