[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639712155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639712155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe you can omit `--descriptors` when this check is present, @achow101?",
      "commit_id" : "69b071e5dbd165eaa63092914a79e592f3a48d4b",
      "created_at" : "2021-05-26T13:13:00Z",
      "diff_hunk" : "@@ -0,0 +1,145 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test a basic M-of-N multisig setup between multiple people using descriptor wallets and PSBTs, as well as a signing flow.\n+\n+This is meant to be documentation as much as functional tests, so it is kept as simple and readable as possible.\n+\"\"\"\n+\n+from test_framework.address import base58_to_byte\n+from test_framework.descriptors import descsum_create\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+\n+class WalletMultisigDescriptorPSBTTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        self.wallet_names = []\n+        self.extra_args = [[\"-keypool=100\"]] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639712155",
      "id" : 639712155,
      "line" : 28,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTcxMjE1NQ==",
      "original_commit_id" : "4069660cac1c50f2b6f066223e95cc5e6d68a3dc",
      "original_line" : 28,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "test/functional/wallet_multisig_descriptor_psbt.py",
      "position" : 28,
      "pull_request_review_id" : 669000786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-26T13:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639712155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639712512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639712512"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: 2021",
      "commit_id" : "69b071e5dbd165eaa63092914a79e592f3a48d4b",
      "created_at" : "2021-05-26T13:13:22Z",
      "diff_hunk" : "@@ -0,0 +1,145 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639712512",
      "id" : 639712512,
      "line" : 2,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTcxMjUxMg==",
      "original_commit_id" : "4069660cac1c50f2b6f066223e95cc5e6d68a3dc",
      "original_line" : 2,
      "original_position" : 2,
      "original_start_line" : null,
      "path" : "test/functional/wallet_multisig_descriptor_psbt.py",
      "position" : 2,
      "pull_request_review_id" : 669000786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-26T13:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639712512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639720462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639720462"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"is to create a new descriptor wallet. Avoid reusing this wallet for any other purpose.\"\r\n\r\nCould add a hint here on how to extract the xpub. Using `listdescriptors` and maybe pick the one from `pkh`, since you're least likely to accidentally reuse that (legacy addresses).",
      "commit_id" : "69b071e5dbd165eaa63092914a79e592f3a48d4b",
      "created_at" : "2021-05-26T13:22:32Z",
      "diff_hunk" : "@@ -131,6 +131,27 @@ Key order does not matter for `sortedmulti()`. `sortedmulti()` behaves in the sa\n as `multi()` does but the keys are reordered in the resulting script such that they\n are lexicographically ordered as described in BIP67.\n \n+#### Basic multisig example\n+\n+For a good example of a basic M-of-N multisig between multiple participants using descriptor\n+wallets and PSBTs, as well as a signing flow, see [this functional test](/test/functional/wallet_multisig_descriptor_psbt.py).\n+The basic steps are:\n+\n+  1. Every participant generates an xpub. The most straightforward way is to create a new wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639720462",
      "id" : 639720462,
      "line" : 140,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTcyMDQ2Mg==",
      "original_commit_id" : "4069660cac1c50f2b6f066223e95cc5e6d68a3dc",
      "original_line" : 140,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : 10,
      "pull_request_review_id" : 669000786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-26T13:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639720462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639721497"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639721497"
         }
      },
      "author_association" : "MEMBER",
      "body" : "So they have to make a fresh watch-only wallet first.",
      "commit_id" : "69b071e5dbd165eaa63092914a79e592f3a48d4b",
      "created_at" : "2021-05-26T13:23:43Z",
      "diff_hunk" : "@@ -131,6 +131,27 @@ Key order does not matter for `sortedmulti()`. `sortedmulti()` behaves in the sa\n as `multi()` does but the keys are reordered in the resulting script such that they\n are lexicographically ordered as described in BIP67.\n \n+#### Basic multisig example\n+\n+For a good example of a basic M-of-N multisig between multiple participants using descriptor\n+wallets and PSBTs, as well as a signing flow, see [this functional test](/test/functional/wallet_multisig_descriptor_psbt.py).\n+The basic steps are:\n+\n+  1. Every participant generates an xpub. The most straightforward way is to create a new wallet\n+  2. The multisig is created by importing the following descriptors: `wsh(sortedmulti(<M>,xpubA/<0,1>/*,xpubB/<0,1>/*,â¦,xpubN/<0,1>/*))`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639721497",
      "id" : 639721497,
      "line" : 141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTcyMTQ5Nw==",
      "original_commit_id" : "4069660cac1c50f2b6f066223e95cc5e6d68a3dc",
      "original_line" : 141,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : 11,
      "pull_request_review_id" : 669000786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-26T13:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639721497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639721973"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639721973"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`every participant checks that it gets the same addresses)` maybe move to step 3",
      "commit_id" : "69b071e5dbd165eaa63092914a79e592f3a48d4b",
      "created_at" : "2021-05-26T13:24:18Z",
      "diff_hunk" : "@@ -131,6 +131,27 @@ Key order does not matter for `sortedmulti()`. `sortedmulti()` behaves in the sa\n as `multi()` does but the keys are reordered in the resulting script such that they\n are lexicographically ordered as described in BIP67.\n \n+#### Basic multisig example\n+\n+For a good example of a basic M-of-N multisig between multiple participants using descriptor\n+wallets and PSBTs, as well as a signing flow, see [this functional test](/test/functional/wallet_multisig_descriptor_psbt.py).\n+The basic steps are:\n+\n+  1. Every participant generates an xpub. The most straightforward way is to create a new wallet\n+  2. The multisig is created by importing the following descriptors: `wsh(sortedmulti(<M>,xpubA/<0,1>/*,xpubB/<0,1>/*,â¦,xpubN/<0,1>/*))`\n+    (one descriptor w/ `0` for receiving addresses and another w/ `1` for change). The resulting\n+    wallet is watch-only and every participant does this\n+  3. A receiving address is generated for the multisig\n+  4. Funds are sent to the resulting address (every participant checks that it gets the same addresses)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639721973",
      "id" : 639721973,
      "line" : 145,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTcyMTk3Mw==",
      "original_commit_id" : "4069660cac1c50f2b6f066223e95cc5e6d68a3dc",
      "original_line" : 145,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : 15,
      "pull_request_review_id" : 669000786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-26T13:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639721973",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639722630"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639722630"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(much easier in the GUI)",
      "commit_id" : "69b071e5dbd165eaa63092914a79e592f3a48d4b",
      "created_at" : "2021-05-26T13:25:01Z",
      "diff_hunk" : "@@ -131,6 +131,27 @@ Key order does not matter for `sortedmulti()`. `sortedmulti()` behaves in the sa\n as `multi()` does but the keys are reordered in the resulting script such that they\n are lexicographically ordered as described in BIP67.\n \n+#### Basic multisig example\n+\n+For a good example of a basic M-of-N multisig between multiple participants using descriptor\n+wallets and PSBTs, as well as a signing flow, see [this functional test](/test/functional/wallet_multisig_descriptor_psbt.py).\n+The basic steps are:\n+\n+  1. Every participant generates an xpub. The most straightforward way is to create a new wallet\n+  2. The multisig is created by importing the following descriptors: `wsh(sortedmulti(<M>,xpubA/<0,1>/*,xpubB/<0,1>/*,â¦,xpubN/<0,1>/*))`\n+    (one descriptor w/ `0` for receiving addresses and another w/ `1` for change). The resulting\n+    wallet is watch-only and every participant does this\n+  3. A receiving address is generated for the multisig\n+  4. Funds are sent to the resulting address (every participant checks that it gets the same addresses)\n+  5. A sending transaction is created using `walletcreatefundedpsbt` (anyone can initiate this)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639722630",
      "id" : 639722630,
      "line" : 146,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTcyMjYzMA==",
      "original_commit_id" : "4069660cac1c50f2b6f066223e95cc5e6d68a3dc",
      "original_line" : 146,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : 16,
      "pull_request_review_id" : 669000786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-26T13:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639722630",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639723123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639723123"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(or load psbt in the GUI, which takes care of 7 too)",
      "commit_id" : "69b071e5dbd165eaa63092914a79e592f3a48d4b",
      "created_at" : "2021-05-26T13:25:32Z",
      "diff_hunk" : "@@ -131,6 +131,27 @@ Key order does not matter for `sortedmulti()`. `sortedmulti()` behaves in the sa\n as `multi()` does but the keys are reordered in the resulting script such that they\n are lexicographically ordered as described in BIP67.\n \n+#### Basic multisig example\n+\n+For a good example of a basic M-of-N multisig between multiple participants using descriptor\n+wallets and PSBTs, as well as a signing flow, see [this functional test](/test/functional/wallet_multisig_descriptor_psbt.py).\n+The basic steps are:\n+\n+  1. Every participant generates an xpub. The most straightforward way is to create a new wallet\n+  2. The multisig is created by importing the following descriptors: `wsh(sortedmulti(<M>,xpubA/<0,1>/*,xpubB/<0,1>/*,â¦,xpubN/<0,1>/*))`\n+    (one descriptor w/ `0` for receiving addresses and another w/ `1` for change). The resulting\n+    wallet is watch-only and every participant does this\n+  3. A receiving address is generated for the multisig\n+  4. Funds are sent to the resulting address (every participant checks that it gets the same addresses)\n+  5. A sending transaction is created using `walletcreatefundedpsbt` (anyone can initiate this)\n+  6. At least `M` users check the PSBT with `decodepsbt` and (if OK) signs it with `walletprocesspsbt`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639723123",
      "id" : 639723123,
      "line" : 147,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTcyMzEyMw==",
      "original_commit_id" : "4069660cac1c50f2b6f066223e95cc5e6d68a3dc",
      "original_line" : 147,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : 17,
      "pull_request_review_id" : 669000786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-26T13:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639723123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the thorough review and suggestions @Sjors ! I've addressed all your feedback in my latest push.\r\n\r\n> This documentation and example also help illustrate where things could be made easier, e.g.:\r\n> \r\n> * having a wallet with just a seed, but no descriptors, and a way to ask it for an xpub\r\n\r\nI see the benefit of this - I found it tricky to extract a wallet's xpubs in bitcoin core (didn't find a way to do this w/ the GUI, the only way I know is w/ the rpc command `listdescritptors` as documented/tested here, but that means users will need to use the console for this). While most other wallets seem to make this easily accessible\r\n\r\n> * and RPC call (or wallet-tool command) to create a multisig descriptor given a bunch xpubs\r\n\r\nInteresting idea - I guess this would take care of step 2 in one easy command? Is the reason you suggest this to push forward \"standardization\" of multisigs similar to the approach outlined here?\r\n",
      "created_at" : "2021-05-26T14:45:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-848831321",
      "id" : 848831321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0ODgzMTMyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-26T14:45:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/848831321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639800354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639800354"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just for my understanding, what are the practical drawbacks/risks of someone re-using this wallet for other purposes? To me it's not obvious why I shouldn't have a \"signer\" wallet that signs for a few multisigs and also has some of its own funds",
      "commit_id" : "932de9b3cb7baf128a506dda3c3ec5a88e07b6ca",
      "created_at" : "2021-05-26T14:47:23Z",
      "diff_hunk" : "@@ -131,6 +131,27 @@ Key order does not matter for `sortedmulti()`. `sortedmulti()` behaves in the sa\n as `multi()` does but the keys are reordered in the resulting script such that they\n are lexicographically ordered as described in BIP67.\n \n+#### Basic multisig example\n+\n+For a good example of a basic M-of-N multisig between multiple participants using descriptor\n+wallets and PSBTs, as well as a signing flow, see [this functional test](/test/functional/wallet_multisig_descriptor_psbt.py).\n+The basic steps are:\n+\n+  1. Every participant generates an xpub. The most straightforward way is to create a new wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639800354",
      "id" : 639800354,
      "in_reply_to_id" : 639720462,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTgwMDM1NA==",
      "original_commit_id" : "4069660cac1c50f2b6f066223e95cc5e6d68a3dc",
      "original_line" : 140,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : null,
      "pull_request_review_id" : 669120730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-26T14:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639800354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639821031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639821031"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's bad for your privacy if (and only if) you share that xpub with co-signers. They'll be able to guess the single-signature wallet derivation and see your transactions. If the M-of-N is just you then it doesn't matter.",
      "commit_id" : "932de9b3cb7baf128a506dda3c3ec5a88e07b6ca",
      "created_at" : "2021-05-26T15:08:51Z",
      "diff_hunk" : "@@ -131,6 +131,27 @@ Key order does not matter for `sortedmulti()`. `sortedmulti()` behaves in the sa\n as `multi()` does but the keys are reordered in the resulting script such that they\n are lexicographically ordered as described in BIP67.\n \n+#### Basic multisig example\n+\n+For a good example of a basic M-of-N multisig between multiple participants using descriptor\n+wallets and PSBTs, as well as a signing flow, see [this functional test](/test/functional/wallet_multisig_descriptor_psbt.py).\n+The basic steps are:\n+\n+  1. Every participant generates an xpub. The most straightforward way is to create a new wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639821031",
      "id" : 639821031,
      "in_reply_to_id" : 639720462,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTgyMTAzMQ==",
      "original_commit_id" : "4069660cac1c50f2b6f066223e95cc5e6d68a3dc",
      "original_line" : 140,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : null,
      "pull_request_review_id" : 669148783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-26T15:09:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639821031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639823159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639823159"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah OK got it - thanks!",
      "commit_id" : "932de9b3cb7baf128a506dda3c3ec5a88e07b6ca",
      "created_at" : "2021-05-26T15:11:12Z",
      "diff_hunk" : "@@ -131,6 +131,27 @@ Key order does not matter for `sortedmulti()`. `sortedmulti()` behaves in the sa\n as `multi()` does but the keys are reordered in the resulting script such that they\n are lexicographically ordered as described in BIP67.\n \n+#### Basic multisig example\n+\n+For a good example of a basic M-of-N multisig between multiple participants using descriptor\n+wallets and PSBTs, as well as a signing flow, see [this functional test](/test/functional/wallet_multisig_descriptor_psbt.py).\n+The basic steps are:\n+\n+  1. Every participant generates an xpub. The most straightforward way is to create a new wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639823159",
      "id" : 639823159,
      "in_reply_to_id" : 639720462,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTgyMzE1OQ==",
      "original_commit_id" : "4069660cac1c50f2b6f066223e95cc5e6d68a3dc",
      "original_line" : 140,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : null,
      "pull_request_review_id" : 669151689,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-26T15:11:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639823159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Eventually it would be nice if step (1) and (2) are trivial to do with RPC or standalone tools. And then hopefully also easy to add GUI support for them. E.g. a screen where you can share your xpub, copy-paste xpubs from your co-signers, set the threshold, etc. Standardisation is another issue.",
      "created_at" : "2021-05-26T15:11:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-848853056",
      "id" : 848853056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0ODg1MzA1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-26T15:11:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/848853056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639827069"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639827069"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you have a wallet with just signers, this may not matter, but generally, if you have one wallet with multiple unrelated funds/descriptors imported, its balances will be the sum of all, with no way to separate them out. That may not be what you want.",
      "commit_id" : "932de9b3cb7baf128a506dda3c3ec5a88e07b6ca",
      "created_at" : "2021-05-26T15:15:21Z",
      "diff_hunk" : "@@ -131,6 +131,27 @@ Key order does not matter for `sortedmulti()`. `sortedmulti()` behaves in the sa\n as `multi()` does but the keys are reordered in the resulting script such that they\n are lexicographically ordered as described in BIP67.\n \n+#### Basic multisig example\n+\n+For a good example of a basic M-of-N multisig between multiple participants using descriptor\n+wallets and PSBTs, as well as a signing flow, see [this functional test](/test/functional/wallet_multisig_descriptor_psbt.py).\n+The basic steps are:\n+\n+  1. Every participant generates an xpub. The most straightforward way is to create a new wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639827069",
      "id" : 639827069,
      "in_reply_to_id" : 639720462,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTgyNzA2OQ==",
      "original_commit_id" : "4069660cac1c50f2b6f066223e95cc5e6d68a3dc",
      "original_line" : 140,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : null,
      "pull_request_review_id" : 669156919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-26T15:15:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639827069",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Any thoughts about me adding some caution/disclaimer text in the docs about the interoperability of this mulitsig with (external) common hardware wallets? Based on my testing so far it isn't as straightforward as just getting an xpub from your HW device and using that as a signer in the multisig. For example, ColdCard has some restrictions/checks (and a proprietary configuration text file for multisig), and I haven't been able to get a ColdCard to sign one of these PSBTs (even after trying to setup everything how they want it ð). It's strange, and I plan on following up with popular HW wallet providers because I would expect it to work seamlessly, but as of now it doesn't seem to (and could lead to locked funds if someone tries this before HW wallets get updated).\r\n\r\nHow I would expect a wallet like ColdCard to handle this is when the user goes to sign the PSBT w/ their HW wallet:\r\n  1. The wallet runs `> decodepsbt \"psbt\" (the PSBT base64 string)` and sees something like:\r\n\r\n```javascript\r\n{\r\n  tx: {\r\n    txid: '...',\r\n    hash: '...',\r\n    version: 2,\r\n    size: 94,\r\n    vsize: 94,\r\n    weight: 376,\r\n    ...\r\n    vin: [ [Object] ],\r\n    vout: [ [Object] ]\r\n  },\r\n  ...\r\n  inputs: [\r\n    {\r\n      witness_utxo: [Object],\r\n      non_witness_utxo: [Object],\r\n      witness_script: [Object],\r\n      bip32_derivs: [Array]\r\n    }\r\n  ],\r\n  outputs: [ {} ],\r\n}\r\n```\r\n\r\n  2. Now (before signing the PSBT) the HW wallet can just check the `inputs`: `witness_script.asm` to verify this is a standard N-of-M multisig transfer, and `bip32_derivs` to verify that this device's `master_fingerprint` is present and to determine the `path`/`pubkey` it needs to sign for:\r\n\r\n```javascript\r\n...\r\nwitness_script: {\r\n  asm: '2 <pubkeyA> <pubkeyB> <pubkeyC> 3 OP_CHECKMULTISIG',\r\n  hex: '...',\r\n  type: 'multisig'\r\n},\r\nbip32_derivs: [\r\n  {\r\n    pubkey: <pubkeyA>,\r\n    master_fingerprint: <deviceAFingerprint>,\r\n    path: 'm/0/0'\r\n  },\r\n  {\r\n    pubkey: <pubkeyB>,\r\n    master_fingerprint: <deviceBFingerprint>,\r\n    path: 'm/0/0'\r\n  },\r\n  {\r\n    pubkey: <pubkeyC>,\r\n    master_fingerprint: <deviceCFingerprint>,\r\n    path: 'm/0/0'\r\n  }\r\n]\r\n```\r\n\r\nAnd after these very simple checks it should be able to sign the PSBT without any additional setup/configuration from the end user. Am I over simplifying this or missing anything? Just want to get some feedback before I chase issues down with HW wallets",
      "created_at" : "2021-05-26T16:37:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-848929887",
      "id" : 848929887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0ODkyOTg4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-26T16:41:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/848929887",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think the ColdCard file format for communicating wallet info is essentially the Electrum format.\r\n\r\nAfaik with Trezor and Ledger it is a simple matter of getting an xpub (e.g. using HWI).\r\n\r\nIt's probably still most practical to use something Specter Desktop to configure multisig wallets. Once setup, spending can be done with just Bitcoin Core afaik.\r\n\r\nNote that for signing each device should not just check that it's own keys are present, but also that cosigners weren't changed. So these need to be registered. ColdCard does that, which is why it's a bit more complicated to setup. Trezor and Ledger don't, so they're easier to setup, but also easier to fool.\r\n\r\nThere are folks working on standardization of the setup process, e.g. [BIP 86](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki) and [BIP 129](https://github.com/bitcoin/bips/blob/master/bip-0129.mediawiki).\r\n\r\nAlso take a look at a PSBT extension that would includes xpubs: #17034: that could theoretically let you switch to trust-on-first-use when spending. But you really should verify an address before receiving coins on it, not when you spend from it. ",
      "created_at" : "2021-05-26T17:44:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-848987712",
      "id" : 848987712,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0ODk4NzcxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-26T17:44:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/848987712",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the explanation and links, very helpful. I'll look into all of this more.\r\n\r\n> But you really should verify an address before receiving coins on it, not when you spend from it.\r\n\r\nI guess this last sentence is where I get caught up. By the time I try to sign a PSBT (as a multisig co-signer):\r\n\r\n  1. The watch-only multisig has funds I am trying to spend\r\n  2. I really care about where I am sending these funds, the amount, and the fee. And that's what I'm verifying on my device, as usual\r\n\r\nSo is there a practical attack vector where somehow I am given a PSBT that has changed/different cosigners? I guess I'm missing the point of the extra complexity and setup on the HW side (and now I have to trust software outside of bitcoin core like Specter). Especially when I would think a lot of multisigs are either self-contained (ie my own M-of-N multis) or between \"friends\" (it's not like I'm signing random PSBTs I get from who knows where). Or I'm still missing something?\r\n\r\nI guess the worst case scenarios is the multisig \"coordinator\" gets me to sign a PSBT that's still a standard M-of-N multisig as documented here, and that I'm a cosigner for, but the other cosigners have been changed? Maybe they can get me to do this a few times (to extract some info?) but what's the harm since they shouldn't be able to trick me into sending funds anywhere?\r\n\r\nSending to the multisig seems like an entirely separate concern, and seems to be handled pretty well in this process (as outlined in these docs) because participants create/import their watch-only multisig once, and then would obviously generate new receive addresses there (and all participants are checking that the receive addresses match)",
      "created_at" : "2021-05-26T18:10:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-849007655",
      "id" : 849007655,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0OTAwNzY1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-26T18:10:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/849007655",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@mjdietzx one thing to worry about is an attacker modifying the change address to a 2-of-3, with two of his keys, and hold you ransom.",
      "created_at" : "2021-05-26T18:14:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-849009869",
      "id" : 849009869,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0OTAwOTg2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-26T18:14:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/849009869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> one thing to worry about is an attacker modifying the change address to a 2-of-3, with two of his keys, and hold you ransom.\r\n\r\nIsn't that checked against here, where every participant checks the PSBT w/ `decodepsbt` with their watch-only multisig before signing (step 6 in the docs this PR adds)? https://github.com/bitcoin/bitcoin/pull/22067/files#diff-94f52fa5de899f58d07aca5026545378bc3da616d4927d71435fa0224eda589bR41",
      "created_at" : "2021-05-26T18:18:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-849012877",
      "id" : 849012877,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0OTAxMjg3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-26T18:18:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/849012877",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, but the reason you can do this check is because you imported the xpubs from other devices. That's what makes the setup tedious.",
      "created_at" : "2021-05-26T18:29:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-849020305",
      "id" : 849020305,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0OTAyMDMwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-26T18:29:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/849020305",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r642006601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642006601"
         }
      },
      "author_association" : "NONE",
      "body" : "This line can be removed, can't it ?",
      "commit_id" : "932de9b3cb7baf128a506dda3c3ec5a88e07b6ca",
      "created_at" : "2021-05-30T02:10:12Z",
      "diff_hunk" : "@@ -0,0 +1,156 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test a basic M-of-N multisig setup between multiple people using descriptor wallets and PSBTs, as well as a signing flow.\n+\n+This is meant to be documentation as much as functional tests, so it is kept as simple and readable as possible.\n+\"\"\"\n+\n+from test_framework.address import base58_to_byte\n+from test_framework.descriptors import descsum_create\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+\n+class WalletMultisigDescriptorPSBTTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        self.wallet_names = []\n+        self.extra_args = [[\"-keypool=100\"]] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def _get_xpub(self, wallet):\n+        \"\"\"Extract the wallet's xpubs using `listdescriptors` and pick the one from the `pkh` descriptor since it's least likely to be accidentally reused (legacy addresses).\"\"\"\n+        descriptor = next(filter(lambda d: d[\"desc\"].startswith(\"pkh\"), wallet.listdescriptors()[\"descriptors\"]))\n+        return descriptor[\"desc\"].split(\"]\")[-1].split(\"/\")[0]\n+\n+    def _check_psbt(self, psbt, to, value, multisig):\n+        \"\"\"Helper method for any of the N participants to check the psbt with decodepsbt and verify it is OK before signing.\"\"\"\n+        tx = multisig.decodepsbt(psbt)[\"tx\"]\n+        amount = 0\n+        for vout in tx[\"vout\"]:\n+            address = vout[\"scriptPubKey\"][\"address\"]\n+            assert_equal(multisig.getaddressinfo(address)[\"ischange\"], address != to)\n+            if address == to:\n+                amount += vout[\"value\"]\n+        assert_approx(amount, float(value), vspan=0.001)\n+\n+    def generate_and_exchange_xpubs(self, participants):\n+        \"\"\"Every participant generates an xpub. The most straightforward way is to create a new descriptor wallet. Avoid reusing this wallet for any other purpose..\"\"\"\n+        for i, node in enumerate(participants):\n+            node.createwallet(wallet_name=f\"participant_{i}\", descriptors=True)\n+            yield self._get_xpub(node.get_wallet_rpc(f\"participant_{i}\"))\n+\n+    def participants_import_descriptors(self, participants, xpubs):\n+        \"\"\"The multisig is created by importing the following descriptors. The resulting wallet is watch-only and every participant can do this.\"\"\"\n+        # some simple validation, this will throw if the base58 checksum of any xpub is invalid\n+        assert_equal(len(xpubs), self.N)\n+        [base58_to_byte(xpub) for xpub in xpubs]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r642006601",
      "id" : 642006601,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjAwNjYwMQ==",
      "original_commit_id" : "932de9b3cb7baf128a506dda3c3ec5a88e07b6ca",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "test/functional/wallet_multisig_descriptor_psbt.py",
      "position" : 56,
      "pull_request_review_id" : 671784856,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-30T02:12:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642006601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84432093?v=4",
         "events_url" : "https://api.github.com/users/lsilva01/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lsilva01/followers",
         "following_url" : "https://api.github.com/users/lsilva01/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lsilva01/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lsilva01",
         "id" : 84432093,
         "login" : "lsilva01",
         "node_id" : "MDQ6VXNlcjg0NDMyMDkz",
         "organizations_url" : "https://api.github.com/users/lsilva01/orgs",
         "received_events_url" : "https://api.github.com/users/lsilva01/received_events",
         "repos_url" : "https://api.github.com/users/lsilva01/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lsilva01/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lsilva01"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r643178119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643178119"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This line is not strictly necessary. `base58_to_byte` will throw an exception if one of the provided `xpubs` checksum is invalid.\r\n\r\nBut at second glance this is confusing how I did it. I may get rid of it, or make it more obvious this is input validation",
      "commit_id" : "932de9b3cb7baf128a506dda3c3ec5a88e07b6ca",
      "created_at" : "2021-06-01T14:51:52Z",
      "diff_hunk" : "@@ -0,0 +1,156 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test a basic M-of-N multisig setup between multiple people using descriptor wallets and PSBTs, as well as a signing flow.\n+\n+This is meant to be documentation as much as functional tests, so it is kept as simple and readable as possible.\n+\"\"\"\n+\n+from test_framework.address import base58_to_byte\n+from test_framework.descriptors import descsum_create\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+\n+class WalletMultisigDescriptorPSBTTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        self.wallet_names = []\n+        self.extra_args = [[\"-keypool=100\"]] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def _get_xpub(self, wallet):\n+        \"\"\"Extract the wallet's xpubs using `listdescriptors` and pick the one from the `pkh` descriptor since it's least likely to be accidentally reused (legacy addresses).\"\"\"\n+        descriptor = next(filter(lambda d: d[\"desc\"].startswith(\"pkh\"), wallet.listdescriptors()[\"descriptors\"]))\n+        return descriptor[\"desc\"].split(\"]\")[-1].split(\"/\")[0]\n+\n+    def _check_psbt(self, psbt, to, value, multisig):\n+        \"\"\"Helper method for any of the N participants to check the psbt with decodepsbt and verify it is OK before signing.\"\"\"\n+        tx = multisig.decodepsbt(psbt)[\"tx\"]\n+        amount = 0\n+        for vout in tx[\"vout\"]:\n+            address = vout[\"scriptPubKey\"][\"address\"]\n+            assert_equal(multisig.getaddressinfo(address)[\"ischange\"], address != to)\n+            if address == to:\n+                amount += vout[\"value\"]\n+        assert_approx(amount, float(value), vspan=0.001)\n+\n+    def generate_and_exchange_xpubs(self, participants):\n+        \"\"\"Every participant generates an xpub. The most straightforward way is to create a new descriptor wallet. Avoid reusing this wallet for any other purpose..\"\"\"\n+        for i, node in enumerate(participants):\n+            node.createwallet(wallet_name=f\"participant_{i}\", descriptors=True)\n+            yield self._get_xpub(node.get_wallet_rpc(f\"participant_{i}\"))\n+\n+    def participants_import_descriptors(self, participants, xpubs):\n+        \"\"\"The multisig is created by importing the following descriptors. The resulting wallet is watch-only and every participant can do this.\"\"\"\n+        # some simple validation, this will throw if the base58 checksum of any xpub is invalid\n+        assert_equal(len(xpubs), self.N)\n+        [base58_to_byte(xpub) for xpub in xpubs]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r643178119",
      "id" : 643178119,
      "in_reply_to_id" : 642006601,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MzE3ODExOQ==",
      "original_commit_id" : "932de9b3cb7baf128a506dda3c3ec5a88e07b6ca",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "test/functional/wallet_multisig_descriptor_psbt.py",
      "position" : 56,
      "pull_request_review_id" : 673178226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-01T14:51:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/643178119",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-06-09T13:44:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-857706769",
      "id" : 857706769,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1NzcwNjc2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-09T13:44:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/857706769",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thank you for working on this!\r\n\r\nI think this is a great first step, but ultimately we will need [BIP 129](https://github.com/bitcoin/bips/blob/master/bip-0129.mediawiki), [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki), (possibly) [BIP 88](https://github.com/bitcoin/bips/blob/master/bip-0088.mediawiki), and [PSBT v2](https://github.com/bitcoin/bips/blob/master/bip-0370.mediawiki) support.\r\n\r\nAs @Sjors pointed out, I think this is useful because it also provides us a list of To Do's (besides the above):\r\n\r\n- having a wallet with just a seed, but no descriptors, and a way to ask it for an xpub\r\n- RPC call (or wallet-tool command) to create a multisig descriptor given a bunch xpubs\r\n- GUI support\r\n\r\n> It's probably still most practical to use something Specter Desktop to configure multisig wallets. Once setup, spending can be done with just Bitcoin Core afaik.\r\n\r\nI agree this is the case for now, but hopefully in the future Bitcoin Core can be a full fledged coordinator.\r\n\r\n>  2. Create a watch-only descriptor wallet (blank, private keys disabled). Now the multisig is created by importing the\r\n     following descriptors: `wsh(sortedmulti(<M>,xpubA/<0,1>/*,xpubB/<0,1>/*,â¦,xpubN/<0,1>/*))`\r\n\r\nThis isn't the proper way to write two descriptors (see [here](https://github.com/bitcoin/bitcoin/issues/21199#issuecomment-780772418)).  I think using a [descriptor template](https://github.com/bitcoin/bips/blob/master/bip-0129.mediawiki#Descriptor_Template) would be better.",
      "created_at" : "2021-06-28T20:21:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-870010329",
      "id" : 870010329,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MDAxMDMyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-28T20:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870010329",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r669934862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669934862"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I made this more clear in the code/comment: https://github.com/bitcoin/bitcoin/pull/22067/files#diff-94f52fa5de899f58d07aca5026545378bc3da616d4927d71435fa0224eda589bR56-R58",
      "commit_id" : "13edc4dbee46591c5a5ae66ea9d83c179528c2a0",
      "created_at" : "2021-07-14T20:35:04Z",
      "diff_hunk" : "@@ -0,0 +1,156 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test a basic M-of-N multisig setup between multiple people using descriptor wallets and PSBTs, as well as a signing flow.\n+\n+This is meant to be documentation as much as functional tests, so it is kept as simple and readable as possible.\n+\"\"\"\n+\n+from test_framework.address import base58_to_byte\n+from test_framework.descriptors import descsum_create\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+\n+class WalletMultisigDescriptorPSBTTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        self.wallet_names = []\n+        self.extra_args = [[\"-keypool=100\"]] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def _get_xpub(self, wallet):\n+        \"\"\"Extract the wallet's xpubs using `listdescriptors` and pick the one from the `pkh` descriptor since it's least likely to be accidentally reused (legacy addresses).\"\"\"\n+        descriptor = next(filter(lambda d: d[\"desc\"].startswith(\"pkh\"), wallet.listdescriptors()[\"descriptors\"]))\n+        return descriptor[\"desc\"].split(\"]\")[-1].split(\"/\")[0]\n+\n+    def _check_psbt(self, psbt, to, value, multisig):\n+        \"\"\"Helper method for any of the N participants to check the psbt with decodepsbt and verify it is OK before signing.\"\"\"\n+        tx = multisig.decodepsbt(psbt)[\"tx\"]\n+        amount = 0\n+        for vout in tx[\"vout\"]:\n+            address = vout[\"scriptPubKey\"][\"address\"]\n+            assert_equal(multisig.getaddressinfo(address)[\"ischange\"], address != to)\n+            if address == to:\n+                amount += vout[\"value\"]\n+        assert_approx(amount, float(value), vspan=0.001)\n+\n+    def generate_and_exchange_xpubs(self, participants):\n+        \"\"\"Every participant generates an xpub. The most straightforward way is to create a new descriptor wallet. Avoid reusing this wallet for any other purpose..\"\"\"\n+        for i, node in enumerate(participants):\n+            node.createwallet(wallet_name=f\"participant_{i}\", descriptors=True)\n+            yield self._get_xpub(node.get_wallet_rpc(f\"participant_{i}\"))\n+\n+    def participants_import_descriptors(self, participants, xpubs):\n+        \"\"\"The multisig is created by importing the following descriptors. The resulting wallet is watch-only and every participant can do this.\"\"\"\n+        # some simple validation, this will throw if the base58 checksum of any xpub is invalid\n+        assert_equal(len(xpubs), self.N)\n+        [base58_to_byte(xpub) for xpub in xpubs]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#discussion_r669934862",
      "id" : 669934862,
      "in_reply_to_id" : 642006601,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTkzNDg2Mg==",
      "original_commit_id" : "932de9b3cb7baf128a506dda3c3ec5a88e07b6ca",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "test/functional/wallet_multisig_descriptor_psbt.py",
      "position" : null,
      "pull_request_review_id" : 706696247,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22067",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-14T20:35:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669934862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Rspigler Thanks for the review, re point 2:\r\n> This isn't the proper way to write two descriptors (see here). I think using a descriptor template would be better.\r\n\r\nIs this better? https://github.com/bitcoin/bitcoin/pull/22067/files#diff-00ec9f97461f6bb94a37daf8069e5acf832ea4d5a31a8d7d4968c285d2fcac9bR144",
      "created_at" : "2021-07-14T20:39:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-880193552",
      "id" : 880193552,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg4MDE5MzU1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-14T20:39:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880193552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj If you have a chance can you give this a quick review?",
      "created_at" : "2021-07-14T20:42:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-880194710",
      "id" : 880194710,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg4MDE5NDcxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-14T20:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880194710",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> `wsh(sortedmulti(<M>,XPUB1/**,XPUB2/**,â¦,XPUBN/**))` `/0/*,/1/*`\r\n\r\nYes, that is the proper template!\r\n\r\nHowever, now that I think about it again, since this is documenting the setup for Bitcoin Core which doesn't have support for templates yet, the directions should probably write out explicitly the importing of both descriptors separately - which is what users will have to do.  So something like this:\r\n\r\n> Now the multisig is created by importing the two descriptors; For example:\r\n>     `wsh(sortedmulti(<M>,XPUB1/0/*,XPUB2/0/*,...XPUBN/0/*))`\r\n>     `wsh(sortedmulti(<M>,XPUB1/1/*,XPUB2/1/*,...XPUBN/1/*))`\r\n> \r\n> (one descriptor w/ `0` in the derivation path for receiving addresses and another w/ `1` for change).  Every participant does this\r\n\r\nAnd maybe templates not be mentioned at all.  Sorry for flip flopping on you",
      "created_at" : "2021-07-15T01:09:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-880312028",
      "id" : 880312028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg4MDMxMjAyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-15T01:09:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880312028",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   }
]
