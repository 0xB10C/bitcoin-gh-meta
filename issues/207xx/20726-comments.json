[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20729 (p2p: standardize on outbound-{full, block}-relay connection type naming by jonatack)\n* #20373 (refactor, net: Increase CNode data member encapsulation by hebasto)\n* #19860 (Improve diversification of new connections: privacy and stability by naumenkogs)\n* #19843 (Refactoring and minor improvement for self-advertisements by naumenkogs)\n* #19315 ([tests] Allow outbound & block-relay-only connections in functional tests. by amitiuttarwar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-20T00:26:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748544179",
      "id" : 748544179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODU0NDE3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-22T14:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748544179",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546324067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546324067"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We do relay transactions with manual peers, right?",
      "commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "created_at" : "2020-12-20T05:21:50Z",
      "diff_hunk" : "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {\n+            pfrom.UpdateConnectionType(ConnectionType::INBOUND_BLOCK_RELAY);\n+        }\n+        // If an outbound peer (manual or block-relay-only) sends us this\n+        // message, we just ignore it. We won't relay transactions with such",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546324067",
      "id" : 546324067,
      "line" : 2597,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMyNDA2Nw==",
      "original_commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "original_line" : 2597,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 39,
      "pull_request_review_id" : 555987112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-20T05:29:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546324067",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nI think the inbound-block-relay connection type highlights that it may be a good idea to use more clear terms for outbound-full-relay and outbound-block-relay connections. In short: `{inbound, outbound}-{full, block}-relay`. I'll post a proposal/RFC.",
      "created_at" : "2020-12-20T08:27:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748578410",
      "id" : 748578410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODU3ODQxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-20T08:27:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748578410",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-12-20T12:02:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748598786",
      "id" : 748598786,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODU5ODc4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-20T12:02:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748598786",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK to having a way to not send `addr` messages to inbound block-relay-only peers.\r\n\r\nDid you consider doing this implicitly, i.e. only consider a peer an addr-relay peer if:\r\n\r\n1. it's an outbound peer that isn't block-relay-peer; or\r\n2. it's an inbound peer and we've received an `addr`, `addrv2` or `getaddr` from the peer.\r\n\r\nFor inbound peers we would defer initializing the addr-relay data structures and considering the peer an addr-relay peer until we receive the first address traffic from it.\r\n\r\nI think this would achieve the goals you want (reduce bandwidth, avoid relaying addresses to black holes, potentially reduce memory usage in future) without the need for a protocol change.",
      "created_at" : "2020-12-20T12:32:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748601961",
      "id" : 748601961,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODYwMTk2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-20T13:34:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748601961",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa Thanks for taking a look!\r\n\r\n> If I understand it correctly, the BIP idea doesn't concern itself with this being outbound->inbound or not, but the implementation only ever announces it in the outbound direction, and will disconnect if it's received from a (full) outbound peer. Is that worth pointing out (e.g. \"Peers MAY decide to not serve peers that announce this flag\").\r\n\r\nYes good observation.  When I was working on this, I realized that there was no protocol need to restrict this as being a message from inbound->outbound peer, so while I didn't have an immediate use case for outbound peers sending this message to inbound ones, I also thought there seemed to be little downside to permitting it in the future.\r\n\r\nThe only case where I thought it could be problematic is if we connect out to a peer that we expect to be a full-relay peer, and it turns out the peer tells us we won't get any transactions from them -- in this case I think we ought to disconnect.  (Arguably it's a bug that today we don't do this when we get fRelay=false from such a peer in their version message.)\r\n\r\nI'll update the BIP to reflect that peers should feel free to use this information in deciding who to stay connected to.\r\n\r\n> Should interaction with tx-relay specific other messages like mempool, filterload, filteradd, filterclear, feefilter be specified (e.g. these messages are disabled/forbidden/ignored on block only connections)?\r\n\r\nYes, I should both specify that those messages are not permitted, and I think disconnect peers who send them to us after negotiating BLOCKRELAY. I think this will require an extra piece of state for outbound peers who might send us a BLOCKRELAY message, but that seems no big deal.\r\n \r\n> Maybe it's worth pointing out that blocktxn/getblocktxn still function?\r\n\r\nI'll update the BIP to explicitly reflect this as well.\r\n",
      "created_at" : "2020-12-20T16:52:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748632153",
      "id" : 748632153,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODYzMjE1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-20T16:52:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748632153",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546402275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546402275"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I should update the comment to be clearer. What I meant to describe was that we only disconnect an outbound peer who sends us the BLOCKRELAY message if we expect them to be a tx-relay or addr-relay peer.  If we are connecting to them as a MANUAL connection, then we'll stay connected and just not relay transactions on that link.\r\n\r\nIn addition to fixing the comment, I could improve the code to ensure we don't advertise addrs to such peers either -- I think that will be easy to do at the same time that I ensure that a BLOCKRELAY peer doesn't send us other disallowed messages (mempool, filterload/add/clear, etc).",
      "commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "created_at" : "2020-12-20T16:56:53Z",
      "diff_hunk" : "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {\n+            pfrom.UpdateConnectionType(ConnectionType::INBOUND_BLOCK_RELAY);\n+        }\n+        // If an outbound peer (manual or block-relay-only) sends us this\n+        // message, we just ignore it. We won't relay transactions with such",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546402275",
      "id" : 546402275,
      "in_reply_to_id" : 546324067,
      "line" : 2597,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMjI3NQ==",
      "original_commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "original_line" : 2597,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 39,
      "pull_request_review_id" : 556034286,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-20T16:56:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546402275",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : " > Did you consider doing this implicitly, i.e. only consider a peer an addr-relay peer if:\r\n\r\n@jnewbery I think we could improve addr-relay by making guesses about our peers, but it seems to me that the logic is much clearer if we just explicitly add support for peers telling each other what they're trying to do.  Updating the protocol with a new message type is not particularly difficult or costly; having implementations guess at what a peer is doing based on observed behavior seems much more error-prone and increases the maintenance burden on the project with additional code complexity.\r\n\r\nI'd go further and suggest that in the future, we consider adding some kind of p2p message to explicitly negotiate addr-relay behavior (perhaps by indicating for which networks a peer is interested in gossiping addresses).\r\n\r\n> 1. it's an outbound peer that isn't block-relay-peer; or\r\n> 2. it's an inbound peer and we've received an `addr`, `addrv2` or `getaddr` from the peer.\r\n> \r\n> For inbound peers we would defer initializing the addr-relay data structures and considering the peer an addr-relay peer until we receive the first address traffic from it.\r\n> \r\n> I think this would achieve the goals you want (reduce bandwidth, avoid relaying addresses to black holes, potentially reduce memory usage in future) without the need for a protocol change.\r\n\r\nI don't think this would achieve a nice way to eliminate the `m_tx_relay` pointer that we keep per-peer, because the existing protocol doesn't have a good way to communicate that transaction relay will never be enabled on the link.  At any rate, finding a workaround to try to infer the desired behavior seems unnecessarily complex -- better to document it in a BIP and add a simple way to understand what is happening.",
      "created_at" : "2020-12-21T03:55:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748742978",
      "id" : 748742978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODc0Mjk3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-21T03:55:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748742978",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not suggesting that we make guesses or have workarounds. The proposal is that peers opt in to address relay by relaying addresses. That's the most reliable heuristic we have, and it works reliably for all peers on the network, not just those that have upgraded to version 70018. This would work today with clients that connect to us and that are addr relay black holes.\r\n\r\n> ... increases the maintenance burden on the project with additional code complexity.\r\n\r\nI've implemented my suggestion here: https://github.com/bitcoin/bitcoin/compare/master...jnewbery:2020-12-implicit-addr-relay?expand=1. It's a 20 line change, and doesn't seem too complex.\r\n\r\n> I don't think this would achieve a nice way to eliminate the m_tx_relay pointer that we keep per-peer, because the existing protocol doesn't have a good way to communicate that transaction relay will never be enabled on the link.\r\n\r\nI didn't implement this on my branch, but it'd be easy to do. Just defer initializing the m_tx_relay pointer until the peer has implicitly opted in to tx relay (but that seems to be a different issue from what you're trying to accomplish in this PR).\r\n\r\nOne problem with a new `blockrelay` message is that it's peculiarly specific to the Bitcoin Core implementation at this point in time. It's the first feature negotiation message that opts _out_ of certain features (`tx`, `inv`, `getdata(tx)`) but remains silent on other features or potential future features (are cfilters supported on inbound-block-relay peers? What about Erlay/`sendrecon`/etc?)",
      "created_at" : "2020-12-21T09:39:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748876374",
      "id" : 748876374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODg3NjM3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-21T09:39:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748876374",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I've implemented my suggestion here: https://github.com/bitcoin/bitcoin/compare/master...jnewbery:2020-12-implicit-addr-relay?expand=1. It's a 20 line change, and doesn't seem too complex.\r\n\r\nThe downside to an approach like this (for both `m_addr_known` and `m_tx_relay`) is that we don't get the benefit of limiting and bounding the resources that will be used on the peer at the time of connection.  Adding a p2p message that is sent at the start of a connection (such as the one proposed here) allows us to do that.  Once we have a way to bound the resources of a peer that is connecting to us with this intent, I plan to propose that we increase the number of inbound connection slots that we can service, and reserve some of those for BLOCKRELAY peers.  From there, I think we could then start to increase the number of outbound block-relay-only connections we make without concern that we are taking over too many inbound connection slots on the network or using up too many node resources.\r\n\r\nFor some additional context, please see https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-480400958 and https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688918364.  Note also the ambiguity of our current approach to guessing that a peer is an inbound-block-relay-only peer, such as was done in #19670.",
      "created_at" : "2020-12-21T17:25:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-749097571",
      "id" : 749097571,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0OTA5NzU3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-21T17:25:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749097571",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar Thanks for the additional context. This makes much more sense to me now that I understand the longer term plan. The change in #19670 to favour inbound-block-relay-only peers also makes much more sense when we're limiting the memory usage of inbound-block-relay-only peers.\r\n\r\nConcept ACK.",
      "created_at" : "2020-12-22T13:34:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-749542537",
      "id" : 749542537,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0OTU0MjUzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-22T13:34:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749542537",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Limpisey168 If you're going to review, please leave meaningful comments.",
      "created_at" : "2020-12-23T19:00:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-750431457",
      "id" : 750431457,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MDQzMTQ1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-23T19:00:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/750431457",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548346466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548346466"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does it make sense to have `m_conn_type` be `std::atomic` (rather than protected by a mutex) if updating it is going to also invalidate other members?\r\n\r\nIt's not clear to me that having `m_conn_type` be modified is actually the right approach -- we don't change the connection type when a peer wants us to send compact block announcements or not, eg. It might make more sense to have the connection type stay as \"inbound\" but have an extra flag for \"want blocks-only behaviour\" -- that flag could just be `m_tx_relay == nullptr` at which point you don't need to have locking to keep `m_tx_relay` and `m_conn_type` in sync. You still need something to ensure you don't free `m_tx_relay` while someone else might be using it, but that could be just changing it to a `shared_ptr`?\r\n\r\nActually, perhaps `m_tx_relay` simply shouldn't be allocated until you've received their VERACK, rather than contemplating deallocating it?",
      "commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "created_at" : "2020-12-24T01:51:17Z",
      "diff_hunk" : "@@ -558,6 +560,15 @@ Network CNode::ConnectedThroughNetwork() const\n     return IsInboundConn() && m_inbound_onion ? NET_ONION : addr.GetNetClass();\n }\n \n+void CNode::UpdateConnectionType(ConnectionType new_conn_type)\n+{\n+    assert(m_conn_type == ConnectionType::INBOUND);\n+    assert(new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY);\n+    m_conn_type = new_conn_type;\n+    // We can now drop some unnecessary data structures.\n+    // TODO: deallocate m_tx_relay and m_addr_known.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548346466",
      "id" : 548346466,
      "line" : 569,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM0NjQ2Ng==",
      "original_commit_id" : "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
      "original_line" : 569,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 19,
      "pull_request_review_id" : 558299565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-24T02:40:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548346466",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548352366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548352366"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wouldn't \"BLKRELAYONLY\" be a better name for this concept, or even separating it out into its components as \"TXRELAY false\" and \"ADDRRELAY false\" ? Seems surprising that a \"BLOCKRELAY\" message would change tx and addr relay behaviour, but not change block relay behaviour...",
      "commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "created_at" : "2020-12-24T02:20:00Z",
      "diff_hunk" : "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548352366",
      "id" : 548352366,
      "line" : 2575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1MjM2Ng==",
      "original_commit_id" : "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
      "original_line" : 2575,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 17,
      "pull_request_review_id" : 558299565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-24T02:40:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548352366",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548359957"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548359957"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I thiiink this could be problematic if the peer sends two `BLOCKRELAY` messages in a row?\r\n\r\n- initially `ConnectionType::Inbound` \r\n- they send first `BLOCKRELAY` message, we hit this code & update to `ConnectionType::INBOUND_BLOCK_RELAY`\r\n- they send another `BLOCKRELAY` message, we hit this code again because `IsInboundConn()` would be true \r\n- `UpdateConnectionType` is invoked, which asserts the connection type is `ConnectionType::INBOUND`. ",
      "commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "created_at" : "2020-12-24T02:57:16Z",
      "diff_hunk" : "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548359957",
      "id" : 548359957,
      "line" : 2593,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1OTk1Nw==",
      "original_commit_id" : "47994f4ec94d1283f34e4770497725bdb83de1f3",
      "original_line" : 2593,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 35,
      "pull_request_review_id" : 558313151,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-24T02:57:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548359957",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   }
]
