[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20582 ([doc] Fix documentation of options onlynet and listenonion by wodry)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-23T21:38:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20757#issuecomment-750483780",
      "id" : 750483780,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20757",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MDQ4Mzc4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-02T14:48:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/750483780",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Seem ok to me",
      "created_at" : "2020-12-24T12:27:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20757#issuecomment-750868910",
      "id" : 750868910,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20757",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MDg2ODkxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-24T12:27:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/750868910",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/46527252?v=4",
         "events_url" : "https://api.github.com/users/RiccardoMasutti/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RiccardoMasutti/followers",
         "following_url" : "https://api.github.com/users/RiccardoMasutti/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RiccardoMasutti/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RiccardoMasutti",
         "id" : 46527252,
         "login" : "RiccardoMasutti",
         "node_id" : "MDQ6VXNlcjQ2NTI3MjUy",
         "organizations_url" : "https://api.github.com/users/RiccardoMasutti/orgs",
         "received_events_url" : "https://api.github.com/users/RiccardoMasutti/received_events",
         "repos_url" : "https://api.github.com/users/RiccardoMasutti/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RiccardoMasutti/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RiccardoMasutti/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RiccardoMasutti"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There doesn't seem to be much interest here. Will close soon if no further interest or ACKs.",
      "created_at" : "2021-01-03T18:40:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20757#issuecomment-753659158",
      "id" : 753659158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20757",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzY1OTE1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T18:40:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753659158",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20757#discussion_r552370280"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20757"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552370280"
         }
      },
      "author_association" : "NONE",
      "body" : "On debian, I had to add `CookieAuthFileGroupReadable 1`, not comment-out",
      "commit_id" : "8d6197d635ec70d8cafbcd9c36bedbe72d4bb6f1",
      "created_at" : "2021-01-06T05:01:39Z",
      "diff_hunk" : "@@ -117,37 +117,104 @@ for normal IPv4/IPv6 communication, use:\n \n ## 3. Automatically create a Bitcoin Core onion service\n \n-Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n-API, to create and destroy 'ephemeral' onion services programmatically.\n-Bitcoin Core has been updated to make use of this.\n-\n-This means that if Tor is running (and proper authentication has been configured),\n-Bitcoin Core automatically creates an onion service to listen on. This will positively\n-affect the number of available .onion nodes.\n-\n-This new feature is enabled by default if Bitcoin Core is listening (`-listen`), and\n-requires a Tor connection to work. It can be explicitly disabled with `-listenonion=0`\n-and, if not disabled, configured using the `-torcontrol` and `-torpassword` settings.\n-To show verbose debugging information, pass `-debug=tor`.\n-\n-Connecting to Tor's control socket API requires one of two authentication methods to be\n-configured. It also requires the control socket to be enabled, e.g. put `ControlPort 9051`\n-in `torrc` config file. For cookie authentication the user running bitcoind must have read\n-access to the `CookieAuthFile` specified in Tor configuration. In some cases this is\n-preconfigured and the creation of an onion service is automatic. If permission problems\n-are seen with `-debug=tor` they can be resolved by adding both the user running Tor and\n-the user running bitcoind to the same group and setting permissions appropriately. On\n-Debian-based systems the user running bitcoind can be added to the debian-tor group,\n-which has the appropriate permissions. Before starting bitcoind you will need to re-login\n-to allow debian-tor group to be applied. Otherwise you will see the following notice: \"tor:\n-Authentication cookie /run/tor/control.authcookie could not be opened (check permissions)\"\n-on debug.log.\n-\n-An alternative authentication method is the use\n-of the `-torpassword=password` option. The `password` is the clear text form that\n-was used when generating the hashed password for the `HashedControlPassword` option\n-in the tor configuration file. The hashed password can be obtained with the command\n-`tor --hash-password password` (read the tor manual for more details).\n+Bitcoin Core makes use of Tor's control socket API to create and destroy\n+ephemeral onion services programmatically. This means that if Tor is running and\n+proper authentication has been configured, Bitcoin Core automatically creates an\n+onion service to listen on. The goal is to increase the number of available\n+onion nodes.\n+\n+This feature is enabled by default if Bitcoin Core is listening (`-listen`) and\n+it requires a Tor connection to work. It can be explicitly disabled with\n+`-listenonion=0`. If it is not disabled, it can be configured using the\n+`-torcontrol` and `-torpassword` settings.\n+\n+To see verbose Tor information in the bitcoind debug log, pass `-debug=tor`.\n+\n+### Control Port\n+\n+You may need to set up the Tor Control Port. On most Linux distributions there\n+will be the following commented-out settings in `/etc/tor/torrc`:\n+\n+```\n+ControlPort 9051\n+CookieAuthentication 1\n+CookieAuthFileGroupReadable 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20757#discussion_r552370280",
      "id" : 552370280,
      "line" : 141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM3MDI4MA==",
      "original_commit_id" : "8d6197d635ec70d8cafbcd9c36bedbe72d4bb6f1",
      "original_line" : 141,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/tor.md",
      "position" : 86,
      "pull_request_review_id" : 562326481,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20757",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T05:01:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552370280",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20757#discussion_r552370706"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20757"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552370706"
         }
      },
      "author_association" : "NONE",
      "body" : "This all worked for me on Debian, except that `usermod` wasn't found.  To fix, I ran `su -`, then the command.",
      "commit_id" : "8d6197d635ec70d8cafbcd9c36bedbe72d4bb6f1",
      "created_at" : "2021-01-06T05:03:39Z",
      "diff_hunk" : "@@ -117,37 +117,104 @@ for normal IPv4/IPv6 communication, use:\n \n ## 3. Automatically create a Bitcoin Core onion service\n \n-Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n-API, to create and destroy 'ephemeral' onion services programmatically.\n-Bitcoin Core has been updated to make use of this.\n-\n-This means that if Tor is running (and proper authentication has been configured),\n-Bitcoin Core automatically creates an onion service to listen on. This will positively\n-affect the number of available .onion nodes.\n-\n-This new feature is enabled by default if Bitcoin Core is listening (`-listen`), and\n-requires a Tor connection to work. It can be explicitly disabled with `-listenonion=0`\n-and, if not disabled, configured using the `-torcontrol` and `-torpassword` settings.\n-To show verbose debugging information, pass `-debug=tor`.\n-\n-Connecting to Tor's control socket API requires one of two authentication methods to be\n-configured. It also requires the control socket to be enabled, e.g. put `ControlPort 9051`\n-in `torrc` config file. For cookie authentication the user running bitcoind must have read\n-access to the `CookieAuthFile` specified in Tor configuration. In some cases this is\n-preconfigured and the creation of an onion service is automatic. If permission problems\n-are seen with `-debug=tor` they can be resolved by adding both the user running Tor and\n-the user running bitcoind to the same group and setting permissions appropriately. On\n-Debian-based systems the user running bitcoind can be added to the debian-tor group,\n-which has the appropriate permissions. Before starting bitcoind you will need to re-login\n-to allow debian-tor group to be applied. Otherwise you will see the following notice: \"tor:\n-Authentication cookie /run/tor/control.authcookie could not be opened (check permissions)\"\n-on debug.log.\n-\n-An alternative authentication method is the use\n-of the `-torpassword=password` option. The `password` is the clear text form that\n-was used when generating the hashed password for the `HashedControlPassword` option\n-in the tor configuration file. The hashed password can be obtained with the command\n-`tor --hash-password password` (read the tor manual for more details).\n+Bitcoin Core makes use of Tor's control socket API to create and destroy\n+ephemeral onion services programmatically. This means that if Tor is running and\n+proper authentication has been configured, Bitcoin Core automatically creates an\n+onion service to listen on. The goal is to increase the number of available\n+onion nodes.\n+\n+This feature is enabled by default if Bitcoin Core is listening (`-listen`) and\n+it requires a Tor connection to work. It can be explicitly disabled with\n+`-listenonion=0`. If it is not disabled, it can be configured using the\n+`-torcontrol` and `-torpassword` settings.\n+\n+To see verbose Tor information in the bitcoind debug log, pass `-debug=tor`.\n+\n+### Control Port\n+\n+You may need to set up the Tor Control Port. On most Linux distributions there\n+will be the following commented-out settings in `/etc/tor/torrc`:\n+\n+```\n+ControlPort 9051\n+CookieAuthentication 1\n+CookieAuthFileGroupReadable 1\n+```\n+\n+Uncomment those, save, and restart Tor (usually `systemctl restart tor` or `sudo\n+systemctl restart tor` on most systemd-based systems, including recent Debian\n+and Ubuntu, or just restart the computer).\n+\n+On some systems (such as Arch Linux), you may also need to add the following\n+line:\n+\n+```\n+DataDirectoryGroupReadable 1\n+```\n+\n+### Authentication\n+\n+Connecting to Tor's control socket API requires one of two authentication\n+methods to be configured: cookie authentication or bitcoind's `-torpassword`\n+configuration option.\n+\n+#### Cookie authentication\n+\n+For cookie authentication, the user running bitcoind must have read access to\n+the `CookieAuthFile` specified in the Tor configuration. In some cases this is\n+preconfigured and the creation of an onion service is automatic. Don't forget to\n+use the `-debug=tor` bitcoind configuration option to enable Tor debug logging.\n+\n+If a permissions problem is seen in the debug log, e.g. `tor: Authentication\n+cookie /run/tor/control.authcookie could not be opened (check permissions)`, it\n+can be resolved by adding both the user running Tor and the user running\n+bitcoind to the same Tor group and setting permissions appropriately.\n+\n+On Debian-derived systems, the Tor group will likely be `debian-tor` and one way\n+to verify could be to list the groups and grep for a \"tor\" group name:\n+\n+```\n+getent group | cut -d: -f1 | grep -i tor\n+```\n+\n+You can also check the group of the cookie file. On most Linux systems, the Tor\n+auth cookie will usually be `/run/tor/control.authcookie`:\n+\n+```\n+stat -c '%G' /run/tor/control.authcookie\n+```\n+\n+Once you have determined the `${TORGROUP}` and selected the `${USER}` that will\n+run bitcoind, run this as root:\n+\n+```\n+usermod -a -G ${TORGROUP} ${USER}\n+```",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20757#discussion_r552370706",
      "id" : 552370706,
      "line" : 192,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM3MDcwNg==",
      "original_commit_id" : "8d6197d635ec70d8cafbcd9c36bedbe72d4bb6f1",
      "original_line" : 192,
      "original_position" : 107,
      "original_start_line" : null,
      "path" : "doc/tor.md",
      "position" : 137,
      "pull_request_review_id" : 562327035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20757",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T05:07:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552370706",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20757#discussion_r552371206"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20757"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552371206"
         }
      },
      "author_association" : "NONE",
      "body" : "What \"groups command above\"?  The above commands just show the Tor group is `debian-tor`, not that the user is in the Tor group?  What works is the `/run/tor/control.authcookie` example below.",
      "commit_id" : "8d6197d635ec70d8cafbcd9c36bedbe72d4bb6f1",
      "created_at" : "2021-01-06T05:05:45Z",
      "diff_hunk" : "@@ -117,37 +117,104 @@ for normal IPv4/IPv6 communication, use:\n \n ## 3. Automatically create a Bitcoin Core onion service\n \n-Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n-API, to create and destroy 'ephemeral' onion services programmatically.\n-Bitcoin Core has been updated to make use of this.\n-\n-This means that if Tor is running (and proper authentication has been configured),\n-Bitcoin Core automatically creates an onion service to listen on. This will positively\n-affect the number of available .onion nodes.\n-\n-This new feature is enabled by default if Bitcoin Core is listening (`-listen`), and\n-requires a Tor connection to work. It can be explicitly disabled with `-listenonion=0`\n-and, if not disabled, configured using the `-torcontrol` and `-torpassword` settings.\n-To show verbose debugging information, pass `-debug=tor`.\n-\n-Connecting to Tor's control socket API requires one of two authentication methods to be\n-configured. It also requires the control socket to be enabled, e.g. put `ControlPort 9051`\n-in `torrc` config file. For cookie authentication the user running bitcoind must have read\n-access to the `CookieAuthFile` specified in Tor configuration. In some cases this is\n-preconfigured and the creation of an onion service is automatic. If permission problems\n-are seen with `-debug=tor` they can be resolved by adding both the user running Tor and\n-the user running bitcoind to the same group and setting permissions appropriately. On\n-Debian-based systems the user running bitcoind can be added to the debian-tor group,\n-which has the appropriate permissions. Before starting bitcoind you will need to re-login\n-to allow debian-tor group to be applied. Otherwise you will see the following notice: \"tor:\n-Authentication cookie /run/tor/control.authcookie could not be opened (check permissions)\"\n-on debug.log.\n-\n-An alternative authentication method is the use\n-of the `-torpassword=password` option. The `password` is the clear text form that\n-was used when generating the hashed password for the `HashedControlPassword` option\n-in the tor configuration file. The hashed password can be obtained with the command\n-`tor --hash-password password` (read the tor manual for more details).\n+Bitcoin Core makes use of Tor's control socket API to create and destroy\n+ephemeral onion services programmatically. This means that if Tor is running and\n+proper authentication has been configured, Bitcoin Core automatically creates an\n+onion service to listen on. The goal is to increase the number of available\n+onion nodes.\n+\n+This feature is enabled by default if Bitcoin Core is listening (`-listen`) and\n+it requires a Tor connection to work. It can be explicitly disabled with\n+`-listenonion=0`. If it is not disabled, it can be configured using the\n+`-torcontrol` and `-torpassword` settings.\n+\n+To see verbose Tor information in the bitcoind debug log, pass `-debug=tor`.\n+\n+### Control Port\n+\n+You may need to set up the Tor Control Port. On most Linux distributions there\n+will be the following commented-out settings in `/etc/tor/torrc`:\n+\n+```\n+ControlPort 9051\n+CookieAuthentication 1\n+CookieAuthFileGroupReadable 1\n+```\n+\n+Uncomment those, save, and restart Tor (usually `systemctl restart tor` or `sudo\n+systemctl restart tor` on most systemd-based systems, including recent Debian\n+and Ubuntu, or just restart the computer).\n+\n+On some systems (such as Arch Linux), you may also need to add the following\n+line:\n+\n+```\n+DataDirectoryGroupReadable 1\n+```\n+\n+### Authentication\n+\n+Connecting to Tor's control socket API requires one of two authentication\n+methods to be configured: cookie authentication or bitcoind's `-torpassword`\n+configuration option.\n+\n+#### Cookie authentication\n+\n+For cookie authentication, the user running bitcoind must have read access to\n+the `CookieAuthFile` specified in the Tor configuration. In some cases this is\n+preconfigured and the creation of an onion service is automatic. Don't forget to\n+use the `-debug=tor` bitcoind configuration option to enable Tor debug logging.\n+\n+If a permissions problem is seen in the debug log, e.g. `tor: Authentication\n+cookie /run/tor/control.authcookie could not be opened (check permissions)`, it\n+can be resolved by adding both the user running Tor and the user running\n+bitcoind to the same Tor group and setting permissions appropriately.\n+\n+On Debian-derived systems, the Tor group will likely be `debian-tor` and one way\n+to verify could be to list the groups and grep for a \"tor\" group name:\n+\n+```\n+getent group | cut -d: -f1 | grep -i tor\n+```\n+\n+You can also check the group of the cookie file. On most Linux systems, the Tor\n+auth cookie will usually be `/run/tor/control.authcookie`:\n+\n+```\n+stat -c '%G' /run/tor/control.authcookie\n+```\n+\n+Once you have determined the `${TORGROUP}` and selected the `${USER}` that will\n+run bitcoind, run this as root:\n+\n+```\n+usermod -a -G ${TORGROUP} ${USER}\n+```\n+\n+Then restart the computer (logging out and back in again should also work), and\n+confirm that the user is in the Tor group by running the groups command above.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20757#discussion_r552371206",
      "id" : 552371206,
      "line" : 195,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM3MTIwNg==",
      "original_commit_id" : "8d6197d635ec70d8cafbcd9c36bedbe72d4bb6f1",
      "original_line" : 195,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "doc/tor.md",
      "position" : 140,
      "pull_request_review_id" : 562327602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20757",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T05:05:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552371206",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20757#discussion_r553175383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20757"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553175383"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yup,  suboptimal wording \r\n\r\nMy suggestion would be \r\n`will be the following by default commented-out settings, add or uncomment those  ... `",
      "commit_id" : "8d6197d635ec70d8cafbcd9c36bedbe72d4bb6f1",
      "created_at" : "2021-01-07T08:27:47Z",
      "diff_hunk" : "@@ -117,37 +117,104 @@ for normal IPv4/IPv6 communication, use:\n \n ## 3. Automatically create a Bitcoin Core onion service\n \n-Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n-API, to create and destroy 'ephemeral' onion services programmatically.\n-Bitcoin Core has been updated to make use of this.\n-\n-This means that if Tor is running (and proper authentication has been configured),\n-Bitcoin Core automatically creates an onion service to listen on. This will positively\n-affect the number of available .onion nodes.\n-\n-This new feature is enabled by default if Bitcoin Core is listening (`-listen`), and\n-requires a Tor connection to work. It can be explicitly disabled with `-listenonion=0`\n-and, if not disabled, configured using the `-torcontrol` and `-torpassword` settings.\n-To show verbose debugging information, pass `-debug=tor`.\n-\n-Connecting to Tor's control socket API requires one of two authentication methods to be\n-configured. It also requires the control socket to be enabled, e.g. put `ControlPort 9051`\n-in `torrc` config file. For cookie authentication the user running bitcoind must have read\n-access to the `CookieAuthFile` specified in Tor configuration. In some cases this is\n-preconfigured and the creation of an onion service is automatic. If permission problems\n-are seen with `-debug=tor` they can be resolved by adding both the user running Tor and\n-the user running bitcoind to the same group and setting permissions appropriately. On\n-Debian-based systems the user running bitcoind can be added to the debian-tor group,\n-which has the appropriate permissions. Before starting bitcoind you will need to re-login\n-to allow debian-tor group to be applied. Otherwise you will see the following notice: \"tor:\n-Authentication cookie /run/tor/control.authcookie could not be opened (check permissions)\"\n-on debug.log.\n-\n-An alternative authentication method is the use\n-of the `-torpassword=password` option. The `password` is the clear text form that\n-was used when generating the hashed password for the `HashedControlPassword` option\n-in the tor configuration file. The hashed password can be obtained with the command\n-`tor --hash-password password` (read the tor manual for more details).\n+Bitcoin Core makes use of Tor's control socket API to create and destroy\n+ephemeral onion services programmatically. This means that if Tor is running and\n+proper authentication has been configured, Bitcoin Core automatically creates an\n+onion service to listen on. The goal is to increase the number of available\n+onion nodes.\n+\n+This feature is enabled by default if Bitcoin Core is listening (`-listen`) and\n+it requires a Tor connection to work. It can be explicitly disabled with\n+`-listenonion=0`. If it is not disabled, it can be configured using the\n+`-torcontrol` and `-torpassword` settings.\n+\n+To see verbose Tor information in the bitcoind debug log, pass `-debug=tor`.\n+\n+### Control Port\n+\n+You may need to set up the Tor Control Port. On most Linux distributions there\n+will be the following commented-out settings in `/etc/tor/torrc`:\n+\n+```\n+ControlPort 9051\n+CookieAuthentication 1\n+CookieAuthFileGroupReadable 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20757#discussion_r553175383",
      "id" : 553175383,
      "in_reply_to_id" : 552370280,
      "line" : 141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE3NTM4Mw==",
      "original_commit_id" : "8d6197d635ec70d8cafbcd9c36bedbe72d4bb6f1",
      "original_line" : 141,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/tor.md",
      "position" : 86,
      "pull_request_review_id" : 563290541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20757",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-07T08:27:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553175383",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   }
]
