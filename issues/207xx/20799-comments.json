[
   {
      "author_association" : "MEMBER",
      "body" : "> Segwit was activated in August 2017, and providing non-witness blocks to peers is no longer useful\r\n\r\nI think there may be some edge-case scenarios where a peer skips the download of witnesses because they are never read (due to an assumevalid setting), but that has nothing to do with compact blocks. So:\r\n\r\nConcept ACK on removing code that doesn't serve any use case in practice.",
      "created_at" : "2020-12-29T15:16:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#issuecomment-752116855",
      "id" : 752116855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20799",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MjExNjg1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-29T15:16:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752116855",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on removing non-witness cmpctblock support. IIRC its only purpose is serving Bitcoin Core v0.13.0 nodes (0.12.x didn't have compact blocks; 0.13.1 added segwit activation parameters).\r\n\r\nThe first commit here seems to mix removal of functionality with some refactoring. Is it possible to separate those more cleanly into separate commits?",
      "created_at" : "2020-12-29T18:35:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#issuecomment-752197637",
      "id" : 752197637,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20799",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MjE5NzYzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-29T18:35:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752197637",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The first commit here seems to mix removal of functionality with some refactoring. Is it possible to separate those more cleanly into separate commits?\r\n\r\nYes, I'll see what I can do to split it up a bit more.",
      "created_at" : "2020-12-29T19:06:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#issuecomment-752208058",
      "id" : 752208058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20799",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MjIwODA1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-29T19:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752208058",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20942 ([refactor] Move some net_processing globals into PeerManagerImpl by ajtowns)\n* #20758 (net-processing refactoring -- lose globals, move implementation details from .h to .cpp by ajtowns)\n* #19438 (Introduce deploymentstatus by ajtowns)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-29T20:17:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#issuecomment-752227632",
      "id" : 752227632,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20799",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MjIyNzYzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-15T16:15:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752227632",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-12-29T20:39:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#issuecomment-752233903",
      "id" : 752233903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20799",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MjIzMzkwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-29T20:39:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752233903",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r549893599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549893599"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe a static const int CMPCTBLOCK_VERSION? It sounds non-ambiguous, after this PR we only support one version.",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2020-12-30T00:11:56Z",
      "diff_hunk" : "@@ -534,33 +519,31 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n {\n     AssertLockHeld(cs_main);\n     CNodeState* nodestate = State(nodeid);\n-    if (!nodestate || !nodestate->fSupportsDesiredCmpctVersion) {\n-        // Never ask from peers who can't provide witnesses.\n-        return;\n-    }\n-    if (nodestate->fProvidesHeaderAndIDs) {\n+    if (!nodestate) return;\n+    if (nodestate->m_sendcmpct) {\n         for (std::list<NodeId>::iterator it = lNodesAnnouncingHeaderAndIDs.begin(); it != lNodesAnnouncingHeaderAndIDs.end(); it++) {\n             if (*it == nodeid) {\n                 lNodesAnnouncingHeaderAndIDs.erase(it);\n                 lNodesAnnouncingHeaderAndIDs.push_back(nodeid);\n                 return;\n             }\n         }\n+\n+        if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n+            // As per BIP152, we only get 3 of our peers to announce\n+            // blocks using compact encodings.\n+            connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman](CNode* pnodeStop){\n+                connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetCommonVersion()).Make(NetMsgType::SENDCMPCT,  /* high_bandwidth= */ false, /* version= */ uint64_t{2}));\n+                // save BIP152 bandwidth state: we select peer to be low-bandwidth\n+                pnodeStop->m_bip152_highbandwidth_to = false;\n+                return true;\n+            });\n+            lNodesAnnouncingHeaderAndIDs.pop_front();\n+        }\n+\n         connman.ForNode(nodeid, [&connman](CNode* pfrom) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n             AssertLockHeld(::cs_main);\n-            uint64_t nCMPCTBLOCKVersion = (pfrom->GetLocalServices() & NODE_WITNESS) ? 2 : 1;\n-            if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n-                // As per BIP152, we only get 3 of our peers to announce\n-                // blocks using compact encodings.\n-                connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman, nCMPCTBLOCKVersion](CNode* pnodeStop){\n-                    connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/false, nCMPCTBLOCKVersion));\n-                    // save BIP152 bandwidth state: we select peer to be low-bandwidth\n-                    pnodeStop->m_bip152_highbandwidth_to = false;\n-                    return true;\n-                });\n-                lNodesAnnouncingHeaderAndIDs.pop_front();\n-            }\n-            connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\n+            connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT,  /* high_bandwidth= */ true, /* version= */ uint64_t{2}));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r549893599",
      "id" : 549893599,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg5MzU5OQ==",
      "original_commit_id" : "58083b6dd0263d92811f10c5d79e3384efccf34e",
      "original_line" : 546,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 559744334,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T18:45:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549893599",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r550212340"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550212340"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea! I'll add.",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2020-12-30T14:26:41Z",
      "diff_hunk" : "@@ -534,33 +519,31 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n {\n     AssertLockHeld(cs_main);\n     CNodeState* nodestate = State(nodeid);\n-    if (!nodestate || !nodestate->fSupportsDesiredCmpctVersion) {\n-        // Never ask from peers who can't provide witnesses.\n-        return;\n-    }\n-    if (nodestate->fProvidesHeaderAndIDs) {\n+    if (!nodestate) return;\n+    if (nodestate->m_sendcmpct) {\n         for (std::list<NodeId>::iterator it = lNodesAnnouncingHeaderAndIDs.begin(); it != lNodesAnnouncingHeaderAndIDs.end(); it++) {\n             if (*it == nodeid) {\n                 lNodesAnnouncingHeaderAndIDs.erase(it);\n                 lNodesAnnouncingHeaderAndIDs.push_back(nodeid);\n                 return;\n             }\n         }\n+\n+        if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n+            // As per BIP152, we only get 3 of our peers to announce\n+            // blocks using compact encodings.\n+            connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman](CNode* pnodeStop){\n+                connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetCommonVersion()).Make(NetMsgType::SENDCMPCT,  /* high_bandwidth= */ false, /* version= */ uint64_t{2}));\n+                // save BIP152 bandwidth state: we select peer to be low-bandwidth\n+                pnodeStop->m_bip152_highbandwidth_to = false;\n+                return true;\n+            });\n+            lNodesAnnouncingHeaderAndIDs.pop_front();\n+        }\n+\n         connman.ForNode(nodeid, [&connman](CNode* pfrom) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n             AssertLockHeld(::cs_main);\n-            uint64_t nCMPCTBLOCKVersion = (pfrom->GetLocalServices() & NODE_WITNESS) ? 2 : 1;\n-            if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n-                // As per BIP152, we only get 3 of our peers to announce\n-                // blocks using compact encodings.\n-                connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman, nCMPCTBLOCKVersion](CNode* pnodeStop){\n-                    connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/false, nCMPCTBLOCKVersion));\n-                    // save BIP152 bandwidth state: we select peer to be low-bandwidth\n-                    pnodeStop->m_bip152_highbandwidth_to = false;\n-                    return true;\n-                });\n-                lNodesAnnouncingHeaderAndIDs.pop_front();\n-            }\n-            connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\n+            connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT,  /* high_bandwidth= */ true, /* version= */ uint64_t{2}));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r550212340",
      "id" : 550212340,
      "in_reply_to_id" : 549893599,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIxMjM0MA==",
      "original_commit_id" : "58083b6dd0263d92811f10c5d79e3384efccf34e",
      "original_line" : 546,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 560068745,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T18:45:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550212340",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, looks like a good simplification. Worth reviewing the diffs with `-w` in some parts.",
      "created_at" : "2021-01-02T11:01:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#issuecomment-753459870",
      "id" : 753459870,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20799",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzQ1OTg3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-02T11:01:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753459870",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r550895939"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550895939"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-02T16:14:38Z",
      "diff_hunk" : "@@ -534,33 +519,31 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n {\n     AssertLockHeld(cs_main);\n     CNodeState* nodestate = State(nodeid);\n-    if (!nodestate || !nodestate->fSupportsDesiredCmpctVersion) {\n-        // Never ask from peers who can't provide witnesses.\n-        return;\n-    }\n-    if (nodestate->fProvidesHeaderAndIDs) {\n+    if (!nodestate) return;\n+    if (nodestate->m_sendcmpct) {\n         for (std::list<NodeId>::iterator it = lNodesAnnouncingHeaderAndIDs.begin(); it != lNodesAnnouncingHeaderAndIDs.end(); it++) {\n             if (*it == nodeid) {\n                 lNodesAnnouncingHeaderAndIDs.erase(it);\n                 lNodesAnnouncingHeaderAndIDs.push_back(nodeid);\n                 return;\n             }\n         }\n+\n+        if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n+            // As per BIP152, we only get 3 of our peers to announce\n+            // blocks using compact encodings.\n+            connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman](CNode* pnodeStop){\n+                connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetCommonVersion()).Make(NetMsgType::SENDCMPCT,  /* high_bandwidth= */ false, /* version= */ uint64_t{2}));\n+                // save BIP152 bandwidth state: we select peer to be low-bandwidth\n+                pnodeStop->m_bip152_highbandwidth_to = false;\n+                return true;\n+            });\n+            lNodesAnnouncingHeaderAndIDs.pop_front();\n+        }\n+\n         connman.ForNode(nodeid, [&connman](CNode* pfrom) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n             AssertLockHeld(::cs_main);\n-            uint64_t nCMPCTBLOCKVersion = (pfrom->GetLocalServices() & NODE_WITNESS) ? 2 : 1;\n-            if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n-                // As per BIP152, we only get 3 of our peers to announce\n-                // blocks using compact encodings.\n-                connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman, nCMPCTBLOCKVersion](CNode* pnodeStop){\n-                    connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/false, nCMPCTBLOCKVersion));\n-                    // save BIP152 bandwidth state: we select peer to be low-bandwidth\n-                    pnodeStop->m_bip152_highbandwidth_to = false;\n-                    return true;\n-                });\n-                lNodesAnnouncingHeaderAndIDs.pop_front();\n-            }\n-            connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\n+            connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT,  /* high_bandwidth= */ true, /* version= */ uint64_t{2}));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r550895939",
      "id" : 550895939,
      "in_reply_to_id" : 549893599,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg5NTkzOQ==",
      "original_commit_id" : "58083b6dd0263d92811f10c5d79e3384efccf34e",
      "original_line" : 546,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 560643137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T18:45:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550895939",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and broken up the first commit.\r\n\r\nI've also dropped the last two commits (_Clean up PeerManager::BlockChecked()_ and _Clean up MaybeSetPeerAsAnnouncingHeaderAndIDs()_). There's already enough happening in this PR.\r\n",
      "created_at" : "2021-01-02T16:15:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#issuecomment-753492261",
      "id" : 753492261,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20799",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzQ5MjI2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-02T16:15:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753492261",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r552274108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552274108"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: typo in 5ca83df9ac1f9f1454ebe7fd93c3b79012df104c (should be fProvidesHeade**rA**ndIDs) here and in two other spots. It is fixed in the next commit but this intermediate one won't compile.",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-06T00:08:38Z",
      "diff_hunk" : "@@ -535,7 +528,7 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n {\n     AssertLockHeld(cs_main);\n     CNodeState* nodestate = State(nodeid);\n-    if (!nodestate || !nodestate->fSupportsDesiredCmpctVersion) {\n+    if (!nodestate || !nodestate->fProvidesHeadersAndIDs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r552274108",
      "id" : 552274108,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI3NDEwOA==",
      "original_commit_id" : "5ca83df9ac1f9f1454ebe7fd93c3b79012df104c",
      "original_line" : 531,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 562228454,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T18:45:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552274108",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r552799786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552799786"
         }
      },
      "author_association" : "MEMBER",
      "body" : ":flushed: Thanks!",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-06T16:49:49Z",
      "diff_hunk" : "@@ -535,7 +528,7 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n {\n     AssertLockHeld(cs_main);\n     CNodeState* nodestate = State(nodeid);\n-    if (!nodestate || !nodestate->fSupportsDesiredCmpctVersion) {\n+    if (!nodestate || !nodestate->fProvidesHeadersAndIDs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r552799786",
      "id" : 552799786,
      "in_reply_to_id" : 552274108,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjc5OTc4Ng==",
      "original_commit_id" : "5ca83df9ac1f9f1454ebe7fd93c3b79012df104c",
      "original_line" : 531,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 562871514,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T18:45:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552799786",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r552897452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552897452"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-06T18:45:15Z",
      "diff_hunk" : "@@ -535,7 +528,7 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n {\n     AssertLockHeld(cs_main);\n     CNodeState* nodestate = State(nodeid);\n-    if (!nodestate || !nodestate->fSupportsDesiredCmpctVersion) {\n+    if (!nodestate || !nodestate->fProvidesHeadersAndIDs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r552897452",
      "id" : 552897452,
      "in_reply_to_id" : 552274108,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg5NzQ1Mg==",
      "original_commit_id" : "5ca83df9ac1f9f1454ebe7fd93c3b79012df104c",
      "original_line" : 531,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 562955246,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T18:45:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552897452",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-01-23T14:40:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#issuecomment-766089490",
      "id" : 766089490,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20799",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NjA4OTQ5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-23T14:40:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/766089490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r563790168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563790168"
         }
      },
      "author_association" : "MEMBER",
      "body" : "652c6f8 in line 136 just above, `preferred_version` no longer exists in this test after this commit; perhaps update that line",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-25T15:01:38Z",
      "diff_hunk" : "@@ -141,21 +138,16 @@ def make_utxos(self):\n     #   made with compact blocks.\n     # - If sendcmpct is then sent with boolean 1, then new block announcements\n     #   are made with compact blocks.\n-    # If old_node is passed in, request compact blocks with version=preferred-1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r563790168",
      "id" : 563790168,
      "line" : 144,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc5MDE2OA==",
      "original_commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "original_line" : 144,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p_compactblocks.py",
      "position" : 37,
      "pull_request_review_id" : 575483137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-25T17:33:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563790168",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r563801319"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563801319"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d0f352eb `uint8_t` (range 0-255) would suffice for now?\r\n\r\n```text\r\nBIP152\r\n====sendcmpct====\r\n# The sendcmpct message is defined as a message containing a 1-byte integer followed by a 8-byte integer where pchCommand == \"sendcmpct\".\r\n# The first integer SHALL be interpreted as a boolean (and MUST have a value of either 1 or 0)\r\n# The second integer SHALL be interpreted as a little-endian version number. Nodes sending a sendcmpct message MUST currently set this value to 1.\r\n```\r\n\r\n```diff\r\n@@ -147,7 +147,7 @@ static constexpr uint32_t MAX_GETCFHEADERS_SIZE = 2000;\r\n /** the maximum percentage of addresses from our addrman to return in response to a getaddr message. */\r\n static constexpr size_t MAX_PCT_ADDR_TO_SEND = 23;\r\n /** The compactblocks version we support. See BIP 152. */\r\n-static constexpr uint64_t CMPCTBLOCKS_VERSION = 2;\r\n+static constexpr uint8_t CMPCTBLOCKS_VERSION = 2;\r\n \r\n struct COrphanTx {\r\n     // When modifying, adapt the copy of this definition in tests/DoS_tests.\r\n@@ -2494,7 +2494,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n \r\n     if (msg_type == NetMsgType::SENDCMPCT) {\r\n         bool sendcmpct_hb{false};\r\n-        uint64_t sendcmpct_version{0};\r\n+        uint8_t sendcmpct_version{0};\r\n         vRecv >> sendcmpct_hb >> sendcmpct_version;\r\n```\r\n",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-25T15:15:32Z",
      "diff_hunk" : "@@ -146,6 +146,8 @@ static constexpr uint32_t MAX_GETCFILTERS_SIZE = 1000;\n static constexpr uint32_t MAX_GETCFHEADERS_SIZE = 2000;\n /** the maximum percentage of addresses from our addrman to return in response to a getaddr message. */\n static constexpr size_t MAX_PCT_ADDR_TO_SEND = 23;\n+/** The compactblocks version we support. See BIP 152. */\n+static constexpr uint64_t CMPCTBLOCKS_VERSION = 2;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r563801319",
      "id" : 563801319,
      "line" : 150,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzgwMTMxOQ==",
      "original_commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "original_line" : 150,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 575483137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-25T17:35:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563801319",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r563811150"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563811150"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d0f352eb can we avoid locking the mutex (and order dependance on `fHaveWitness` being set) with\r\n```diff\r\n- if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION &&\r\n-     WITH_LOCK(cs_main, {return State(pfrom.GetId())->fHaveWitness;})) {\r\n+ if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION && (pfrom.nServices & NODE_WITNESS)) {\r\n```\r\nor\r\n```diff\r\n- if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION &&\r\n-     WITH_LOCK(cs_main, {return State(pfrom.GetId())->fHaveWitness;})) {\r\n+ if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION && (pfrom.GetLocalServices() & NODE_WITNESS)) {\r\n```\r\n?",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-25T15:27:37Z",
      "diff_hunk" : "@@ -2496,18 +2473,14 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // nodes)\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::SENDHEADERS));\n         }\n-        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION) {\n-            // Tell our peer we are willing to provide version 1 or 2 cmpctblocks\n+        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION &&\n+            WITH_LOCK(cs_main, {return State(pfrom.GetId())->fHaveWitness;})) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r563811150",
      "id" : 563811150,
      "line" : 2477,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzgxMTE1MA==",
      "original_commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "original_line" : 2477,
      "original_position" : 223,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 223,
      "pull_request_review_id" : 575483137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-25T17:33:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563811150",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r563818143"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563818143"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d0f352e if you go with `/* high_bandwidth= */` here, maybe update the remaining 2 lines that use `fAnnounceUsingCMPCTBLOCK`\r\n\r\n```diff\r\n@@ -718,14 +718,14 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\r\n             // As per BIP152, we only get 3 of our peers to announce\r\n             // blocks using compact encodings.\r\n             connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman](CNode* pnodeStop){\r\n-                connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/false, CMPCTBLOCKS_VERSION));\r\n+                connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /* high_bandwidth= */false, CMPCTBLOCKS_VERSION));\r\n                 // save BIP152 bandwidth state: we select peer to be low-bandwidth\r\n                 pnodeStop->m_bip152_highbandwidth_to = false;\r\n                 return true;\r\n             });\r\n             lNodesAnnouncingHeaderAndIDs.pop_front();\r\n         }\r\n-        connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, CMPCTBLOCKS_VERSION));\r\n+        connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /* high_bandwidth= */true, CMPCTBLOCKS_VERSION));\r\n         // save BIP152 bandwidth state: we select peer to be high-bandwidth\r\n```\r\n\r\n",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-25T15:36:14Z",
      "diff_hunk" : "@@ -2496,18 +2473,14 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // nodes)\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::SENDHEADERS));\n         }\n-        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION) {\n-            // Tell our peer we are willing to provide version 1 or 2 cmpctblocks\n+        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION &&\n+            WITH_LOCK(cs_main, {return State(pfrom.GetId())->fHaveWitness;})) {\n+            // Tell our peer we are willing to provide version 2 cmpctblocks.\n             // However, we do not request new block announcements using\n             // cmpctblock messages.\n             // We send this to non-NODE NETWORK peers as well, because\n             // they may wish to request compact blocks from us\n-            bool fAnnounceUsingCMPCTBLOCK = false;\n-            uint64_t nCMPCTBLOCKVersion = 2;\n-            if (pfrom.GetLocalServices() & NODE_WITNESS)\n-                m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n-            nCMPCTBLOCKVersion = 1;\n-            m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n+            m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, /* high_bandwidth= */ false, /* version= */ CMPCTBLOCKS_VERSION));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r563818143",
      "id" : 563818143,
      "line" : 2483,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzgxODE0Mw==",
      "original_commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "original_line" : 2483,
      "original_position" : 235,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 235,
      "pull_request_review_id" : 575483137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-25T17:33:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563818143",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565513529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565513529"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Constify test value same as `net_processing`, CMPCTBLOCKS_VERSION ?",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-27T17:52:19Z",
      "diff_hunk" : "@@ -141,19 +138,16 @@ def make_utxos(self):\n     #   made with compact blocks.\n     # - If sendcmpct is then sent with boolean 1, then new block announcements\n     #   are made with compact blocks.\n-    # If old_node is passed in, request compact blocks with version=preferred-1\n-    # and verify that it receives block announcements via compact block.\n-    def test_sendcmpct(self, test_node, old_node=None):\n-        preferred_version = test_node.cmpct_version\n+    def test_sendcmpct(self, test_node):\n         node = self.nodes[0]\n \n         # Make sure we get a SENDCMPCT message from our peer\n         def received_sendcmpct():\n             return (len(test_node.last_sendcmpct) > 0)\n         test_node.wait_until(received_sendcmpct, timeout=30)\n         with p2p_lock:\n-            # Check that the first version received is the preferred one\n-            assert_equal(test_node.last_sendcmpct[0].version, preferred_version)\n+            # Check that the first version received is version 2\n+            assert_equal(test_node.last_sendcmpct[0].version, 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565513529",
      "id" : 565513529,
      "line" : 150,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTUxMzUyOQ==",
      "original_commit_id" : "652c6f838809a5b277665704f816b527c7874cb6",
      "original_line" : 150,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "test/functional/p2p_compactblocks.py",
      "position" : 54,
      "pull_request_review_id" : 577606090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-27T23:05:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565513529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565647594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565647594"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe we can rename SHORT_IDS_BLOCK_VERSION to SENDCMPCT_VERSION ? A block of short-txn-ids is better known as a compact block or do we have ambiguity here ?",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-27T21:30:23Z",
      "diff_hunk" : "@@ -2496,18 +2473,14 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // nodes)\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::SENDHEADERS));\n         }\n-        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION) {\n-            // Tell our peer we are willing to provide version 1 or 2 cmpctblocks\n+        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION &&\n+            WITH_LOCK(cs_main, {return State(pfrom.GetId())->fHaveWitness;})) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565647594",
      "id" : 565647594,
      "in_reply_to_id" : 563811150,
      "line" : 2477,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTY0NzU5NA==",
      "original_commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "original_line" : 2477,
      "original_position" : 223,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 223,
      "pull_request_review_id" : 577606090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-27T23:05:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565647594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565653239"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565653239"
         }
      },
      "author_association" : "MEMBER",
      "body" : "AFAIU this comment tries to hint the double opt-in for CB to be bidirectional, maybe it can be clearer. \"However, we request new block announcements using CMPCTBLOCK only after receiving a SENDCMPCT from peer.\"",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-27T21:40:17Z",
      "diff_hunk" : "@@ -2496,18 +2498,14 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // nodes)\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::SENDHEADERS));\n         }\n-        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION) {\n-            // Tell our peer we are willing to provide version 1 or 2 cmpctblocks\n+        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION &&\n+            WITH_LOCK(cs_main, {return State(pfrom.GetId())->fHaveWitness;})) {\n+            // Tell our peer we are willing to provide version 2 cmpctblocks.\n             // However, we do not request new block announcements using",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565653239",
      "id" : 565653239,
      "line" : 2479,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTY1MzIzOQ==",
      "original_commit_id" : "d0f352eb21acaec1f8e470133cec5dc393328ed7",
      "original_line" : 2504,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 225,
      "pull_request_review_id" : 577606090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-27T23:05:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565653239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565664781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565664781"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we should keep to verify NODE_WITNESS existence among peer services, that's a different network namespace than SENDCMPCT, they might diverge. \r\n\r\nI believe that's an oversight compared to \"Specification for version 2\" but at least should avoid to promote a buggy peer as a CB one ?\r\n\r\nEdit: reestablished at 06ab570, you should modify 55c9231 message to warn reviewers",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-27T21:56:45Z",
      "diff_hunk" : "@@ -2521,25 +2521,27 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         bool fAnnounceUsingCMPCTBLOCK = false;\n         uint64_t nCMPCTBLOCKVersion = 0;\n         vRecv >> fAnnounceUsingCMPCTBLOCK >> nCMPCTBLOCKVersion;\n-        if (nCMPCTBLOCKVersion == 1 || ((pfrom.GetLocalServices() & NODE_WITNESS) && nCMPCTBLOCKVersion == 2)) {\n-            LOCK(cs_main);\n-            // fProvidesHeaderAndIDs is used to \"lock in\" version of compact blocks we send (fWantsCmpctWitness)\n-            if (!State(pfrom.GetId())->fProvidesHeaderAndIDs) {\n-                State(pfrom.GetId())->fProvidesHeaderAndIDs = true;\n-                State(pfrom.GetId())->fWantsCmpctWitness = nCMPCTBLOCKVersion == 2;\n-            }\n-            if (State(pfrom.GetId())->fWantsCmpctWitness == (nCMPCTBLOCKVersion == 2)) { // ignore later version announces\n-                State(pfrom.GetId())->fPreferHeaderAndIDs = fAnnounceUsingCMPCTBLOCK;\n-                // save whether peer selects us as BIP152 high-bandwidth peer\n-                // (receiving sendcmpct(1) signals high-bandwidth, sendcmpct(0) low-bandwidth)\n-                pfrom.m_bip152_highbandwidth_from = fAnnounceUsingCMPCTBLOCK;\n-            }\n-            if (!State(pfrom.GetId())->fSupportsDesiredCmpctVersion) {\n-                if (pfrom.GetLocalServices() & NODE_WITNESS)\n-                    State(pfrom.GetId())->fSupportsDesiredCmpctVersion = (nCMPCTBLOCKVersion == 2);\n-                else\n-                    State(pfrom.GetId())->fSupportsDesiredCmpctVersion = (nCMPCTBLOCKVersion == 1);\n-            }\n+\n+        // Only support compact block relay with witnesses\n+        if (nCMPCTBLOCKVersion != CMPCTBLOCKS_VERSION) return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565664781",
      "id" : 565664781,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTY2NDc4MQ==",
      "original_commit_id" : "55c9231dc31f454d10d04994ec1ca7ea6b23f349",
      "original_line" : 2526,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 577606090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-27T23:05:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565664781",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565693959"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565693959"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Current usage of `fProvidersHeaderAndIDs` is confusing to me. \r\n\r\nWe latched it to `true` at SENCMPCT reception, following this comment, it does mean this peer has signaled its availability to serve CMPCTBLOCKS.\r\n\r\nBut per-BIP152 , \"Upon receipt of a \"sendcmpct\" message with the first and second integers set to 1, the node SHOULD announce new blocks by sending a cmpctblock message.\", so a SENDCMPCT reception should only modify our behavior and doesn't constitute a commitment of the peer to send us CMPCTBLOCKS ?\r\n\r\n",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-27T22:53:34Z",
      "diff_hunk" : "@@ -321,18 +321,12 @@ struct CNodeState {\n     bool fPreferHeaderAndIDs;\n     /**\n       * Whether this peer will send us cmpctblocks if we request them.\n-      * This is not used to gate request logic, as we really only care about fSupportsDesiredCmpctVersion,\n-      * but is used as a flag to \"lock in\" the version of compact blocks (fWantsCmpctWitness) we send.\n       */\n     bool fProvidesHeaderAndIDs;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565693959",
      "id" : 565693959,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTY5Mzk1OQ==",
      "original_commit_id" : "7b9c9eef61177a77c54341e5264580a3d6161fe4",
      "original_line" : 325,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 577606090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-27T23:05:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565693959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565696618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565696618"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this variable should be better named `m_bip152_bandwidth_mode`, right now when it sets to false it means low-bandwidth, which is counter-intuitive given variable name and comment (`src/net.h`, L533).",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-27T22:58:58Z",
      "diff_hunk" : "@@ -2507,25 +2507,22 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n     }\n \n     if (msg_type == NetMsgType::SENDCMPCT) {\n-        bool fAnnounceUsingCMPCTBLOCK = false;\n-        uint64_t nCMPCTBLOCKVersion = 0;\n-        vRecv >> fAnnounceUsingCMPCTBLOCK >> nCMPCTBLOCKVersion;\n+        bool sendcmpct_hb{false};\n+        uint64_t sendcmpct_version{0};\n+        vRecv >> sendcmpct_hb >> sendcmpct_version;\n \n         // Only support compact block relay with witness peers\n         if (WITH_LOCK(cs_main, {return !State(pfrom.GetId())->fHaveWitness;})) return;\n         // Only support compact block relay with witnesses\n-        if (nCMPCTBLOCKVersion != CMPCTBLOCKS_VERSION) return;\n+        if (sendcmpct_version != CMPCTBLOCKS_VERSION) return;\n \n         LOCK(cs_main);\n-        if (!State(pfrom.GetId())->fProvidesHeaderAndIDs) {\n-            State(pfrom.GetId())->fProvidesHeaderAndIDs = true;\n-        }\n-        if (State(pfrom.GetId())->fProvidesHeaderAndIDs == true) { // ignore later version announces\n-            State(pfrom.GetId())->fPreferHeaderAndIDs = fAnnounceUsingCMPCTBLOCK;\n-            // save whether peer selects us as BIP152 high-bandwidth peer\n-            // (receiving sendcmpct(1) signals high-bandwidth, sendcmpct(0) low-bandwidth)\n-            pfrom.m_bip152_highbandwidth_from = fAnnounceUsingCMPCTBLOCK;\n-        }\n+        CNodeState* nodestate = State(pfrom.GetId());\n+        nodestate->fProvidesHeaderAndIDs = true;\n+        nodestate->fPreferHeaderAndIDs = sendcmpct_hb;\n+        // save whether peer selects us as BIP152 high-bandwidth peer\n+        // (receiving sendcmpct(1) signals high-bandwidth, sendcmpct(0) low-bandwidth)\n+        pfrom.m_bip152_highbandwidth_from = sendcmpct_hb;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565696618",
      "id" : 565696618,
      "line" : 2511,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTY5NjYxOA==",
      "original_commit_id" : "019db79d7cd3679f44bd1c4dd375cb5e0690f5ff",
      "original_line" : 2525,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 281,
      "pull_request_review_id" : 577606090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-27T23:05:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565696618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565698050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565698050"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IMO `m_prefercmcpt`  better, otherwise name collusion is too close.",
      "commit_id" : "befb06801eca94986a196c49e84c291ab7a4d87b",
      "created_at" : "2021-01-27T23:02:11Z",
      "diff_hunk" : "@@ -317,12 +317,10 @@ struct CNodeState {\n     bool fPreferredDownload;\n     //! Whether this peer wants invs or headers (when possible) for block announcements.\n     bool fPreferHeaders;\n-    //! Whether this peer wants invs or cmpctblocks (when possible) for block announcements.\n-    bool fPreferHeaderAndIDs;\n-    /**\n-      * Whether this peer will send us cmpctblocks if we request them.\n-      */\n-    bool fProvidesHeaderAndIDs;\n+    /** Whether this peer wants cmpctblocks (when possible) for block announcements. */\n+    bool m_sendcmpct_hb{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20799#discussion_r565698050",
      "id" : 565698050,
      "line" : 321,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTY5ODA1MA==",
      "original_commit_id" : "c30fcbb959d7fced5e1b3e2487129df18fea0fe3",
      "original_line" : 321,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 577606090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20799",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-27T23:05:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565698050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
