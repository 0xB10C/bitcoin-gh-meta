[
   {
      "author_association" : "MEMBER",
      "body" : "This shouldn't be needed, I think, because `CScriptNum` values are restricted to 32-bit.",
      "created_at" : "2020-03-23T20:35:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#issuecomment-602841768",
      "id" : 602841768,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18413",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjg0MTc2OA==",
      "updated_at" : "2020-03-23T20:35:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602841768",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "OK, thanks.\r\n\r\nShould I close this PR even if it's a trivial fix to #18046 ? (cf discussion in https://github.com/bitcoin/bitcoin/pull/18383 )",
      "created_at" : "2020-03-23T21:00:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#issuecomment-602853710",
      "id" : 602853710,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18413",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjg1MzcxMA==",
      "updated_at" : "2020-03-23T21:01:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602853710",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/946757?v=4",
         "events_url" : "https://api.github.com/users/pierreN/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierreN/followers",
         "following_url" : "https://api.github.com/users/pierreN/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierreN/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierreN",
         "id" : 946757,
         "login" : "pierreN",
         "node_id" : "MDQ6VXNlcjk0Njc1Nw==",
         "organizations_url" : "https://api.github.com/users/pierreN/orgs",
         "received_events_url" : "https://api.github.com/users/pierreN/received_events",
         "repos_url" : "https://api.github.com/users/pierreN/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierreN/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierreN"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I must be wrong, because I don't really understand why it's possible that that fuzzer is able to trigger a negation of -2^63.",
      "created_at" : "2020-03-23T22:41:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#issuecomment-602895331",
      "id" : 602895331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18413",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjg5NTMzMQ==",
      "updated_at" : "2020-03-23T22:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602895331",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa FWIW:\r\n\r\n```\r\n$ xxd -p -r <<< \"2d360932445550092d36093609092d393939393939393939393939393939393939360955\" > crash-parse_script\r\n$ src/test/fuzz/parse_script crash-parse_script\r\nscript/script.h:332:35: runtime error: negation of -9223372036854775808 cannot be represented in type 'int64_t' (aka 'long'); cast to an unsigned type to negate this value to itself\r\n    #0 0x55e134173738 in CScriptNum::serialize(long const&) src/./script/script.h:332:35\r\n    #1 0x55e134172f40 in CScript::push_int64(long) src/./script/script.h:405:22\r\n    #2 0x55e13416984f in CScript::operator<<(long) src/./script/script.h:445:45\r\n    #3 0x55e13416984f in ParseScript(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) src/core_read.cpp:62:20\r\n    #4 0x55e134167b0b in test_one_input(std::vector<unsigned char, std::allocator<unsigned char> > const&) src/test/fuzz/parse_script.cpp:13:15\r\n```",
      "created_at" : "2020-03-23T23:07:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#issuecomment-602905660",
      "id" : 602905660,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18413",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjkwNTY2MA==",
      "updated_at" : "2020-03-23T23:07:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602905660",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18413#discussion_r396853403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18413"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396853403"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you want to use `std::abs`, which since C++11 is overloaded to work for all signed integer types as input (avoiding the assumption that long long is enough for 64 bits, and also avoiding promoting values to higher than 64 bits in case long long is even bigger).\r\n\r\nSee https://en.cppreference.com/w/cpp/numeric/math/abs",
      "commit_id" : "699f67787a50d81c44ee9241d8b20f62c9ff7baf",
      "created_at" : "2020-03-24T01:26:59Z",
      "diff_hunk" : "@@ -328,8 +329,7 @@ class CScriptNum\n             return std::vector<unsigned char>();\n \n         std::vector<unsigned char> result;\n-        const bool neg = value < 0;\n-        uint64_t absvalue = neg ? -value : value;\n+        uint64_t absvalue = static_cast<uint64_t>(std::llabs(value));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#discussion_r396853403",
      "id" : 396853403,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1MzQwMw==",
      "original_commit_id" : "bab50c56e1fa2477f7d625855485e8527c78747c",
      "original_position" : 14,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 379941179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18413",
      "updated_at" : "2020-03-24T01:41:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396853403",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18413#discussion_r396854722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18413"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396854722"
         }
      },
      "author_association" : "NONE",
      "body" : "OK thanks I'm testing this. I thought that `llabs` showed more clearly the intend but using `abs` might be better if you want to switch to a smaller type later indeed.",
      "commit_id" : "699f67787a50d81c44ee9241d8b20f62c9ff7baf",
      "created_at" : "2020-03-24T01:32:00Z",
      "diff_hunk" : "@@ -328,8 +329,7 @@ class CScriptNum\n             return std::vector<unsigned char>();\n \n         std::vector<unsigned char> result;\n-        const bool neg = value < 0;\n-        uint64_t absvalue = neg ? -value : value;\n+        uint64_t absvalue = static_cast<uint64_t>(std::llabs(value));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#discussion_r396854722",
      "id" : 396854722,
      "in_reply_to_id" : 396853403,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1NDcyMg==",
      "original_commit_id" : "bab50c56e1fa2477f7d625855485e8527c78747c",
      "original_position" : 14,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 379942604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18413",
      "updated_at" : "2020-03-24T01:41:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396854722",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/946757?v=4",
         "events_url" : "https://api.github.com/users/pierreN/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierreN/followers",
         "following_url" : "https://api.github.com/users/pierreN/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierreN/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierreN",
         "id" : 946757,
         "login" : "pierreN",
         "node_id" : "MDQ6VXNlcjk0Njc1Nw==",
         "organizations_url" : "https://api.github.com/users/pierreN/orgs",
         "received_events_url" : "https://api.github.com/users/pierreN/received_events",
         "repos_url" : "https://api.github.com/users/pierreN/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierreN/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierreN"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> I don't really understand why it's possible that that fuzzer is able to trigger a negation of -2^63.\r\n\r\nIn the input provided by @practicalswift  above, `2d39393939393939393939393939393939393936` is the ASCII string `-9999999999999999996` which is translated by the `atoi64` in `core_read.cpp:ParseScript` to `-2^63` while looping over the `words`.\r\nThis is then sent to `CScriptNum::serialize` via `CScript::push_int64`.\r\n\r\nI could not find the proposed input in https://github.com/bitcoin-core/qa-assets/ nor https://github.com/bitcoin-core/qa-assets/pull/7 so I guess the end goal here is to increase code coverage by adding more data to qa-assets in a future PR ?\r\n\r\nTL;DR I reckon there is 3 options:\r\n- not considereing the provided ASCII text input\r\n- since the `atoi64` already changes values beyond `2^63` when doing the `ASCII->int64_t` conversion, limit the `atoi64` output to `(-)2^32` as @sipa thought (by modifying it manually)\r\n- the current CI build fails seems to be due to some compiler versions not respecting the standard (namely MSVC, quite ironic), I updated my branch to use `abs` instead (which hopefully all compilers have fully tested..)\r\n\r\nFrom what I gather, `ParseScript` is only used in `bitcoin-tx.cpp` once (except for tests), which takes input directly from the CLI. \r\n\r\nSo if you find this PR too intrusive, limiting the output of `atoi64` in `ParseScript` might be a better option ? (I might be wrong though)",
      "created_at" : "2020-03-24T01:32:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#issuecomment-602954469",
      "id" : 602954469,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18413",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjk1NDQ2OQ==",
      "updated_at" : "2020-03-24T01:33:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602954469",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/946757?v=4",
         "events_url" : "https://api.github.com/users/pierreN/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierreN/followers",
         "following_url" : "https://api.github.com/users/pierreN/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierreN/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierreN",
         "id" : 946757,
         "login" : "pierreN",
         "node_id" : "MDQ6VXNlcjk0Njc1Nw==",
         "organizations_url" : "https://api.github.com/users/pierreN/orgs",
         "received_events_url" : "https://api.github.com/users/pierreN/received_events",
         "repos_url" : "https://api.github.com/users/pierreN/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierreN/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierreN"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18413#discussion_r396855292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18413"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396855292"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh no, this won't ever switch to a smaller type.\r\n\r\nI'm just commenting this because hardcoding the assumption that long long = 64 bits seems bad (if there were an abs64bit or so that would seem ideal, but there isn't). Thankfully, thanks to std::abs being overloaded for all integer types, there is no need for such an assumption.",
      "commit_id" : "699f67787a50d81c44ee9241d8b20f62c9ff7baf",
      "created_at" : "2020-03-24T01:34:10Z",
      "diff_hunk" : "@@ -328,8 +329,7 @@ class CScriptNum\n             return std::vector<unsigned char>();\n \n         std::vector<unsigned char> result;\n-        const bool neg = value < 0;\n-        uint64_t absvalue = neg ? -value : value;\n+        uint64_t absvalue = static_cast<uint64_t>(std::llabs(value));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#discussion_r396855292",
      "id" : 396855292,
      "in_reply_to_id" : 396853403,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1NTI5Mg==",
      "original_commit_id" : "bab50c56e1fa2477f7d625855485e8527c78747c",
      "original_position" : 14,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 379943272,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18413",
      "updated_at" : "2020-03-24T01:41:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396855292",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18413#discussion_r396857387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18413"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396857387"
         }
      },
      "author_association" : "NONE",
      "body" : "Hah indeed yes, this is better that way then.",
      "commit_id" : "699f67787a50d81c44ee9241d8b20f62c9ff7baf",
      "created_at" : "2020-03-24T01:42:58Z",
      "diff_hunk" : "@@ -328,8 +329,7 @@ class CScriptNum\n             return std::vector<unsigned char>();\n \n         std::vector<unsigned char> result;\n-        const bool neg = value < 0;\n-        uint64_t absvalue = neg ? -value : value;\n+        uint64_t absvalue = static_cast<uint64_t>(std::llabs(value));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#discussion_r396857387",
      "id" : 396857387,
      "in_reply_to_id" : 396853403,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1NzM4Nw==",
      "original_commit_id" : "bab50c56e1fa2477f7d625855485e8527c78747c",
      "original_position" : 14,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 379946439,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18413",
      "updated_at" : "2020-03-24T01:42:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396857387",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/946757?v=4",
         "events_url" : "https://api.github.com/users/pierreN/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierreN/followers",
         "following_url" : "https://api.github.com/users/pierreN/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierreN/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierreN",
         "id" : 946757,
         "login" : "pierreN",
         "node_id" : "MDQ6VXNlcjk0Njc1Nw==",
         "organizations_url" : "https://api.github.com/users/pierreN/orgs",
         "received_events_url" : "https://api.github.com/users/pierreN/received_events",
         "repos_url" : "https://api.github.com/users/pierreN/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierreN/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierreN"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK bab50c56e1fa2477f7d625855485e8527c78747c, with either `std::abs` or `std::llabs`.\r\n\r\nIt's more obviously correct and should avoid the fuzzer issues we're seeing. I have also verified that there are no consensus-critical code paths that can trigger this (they're all restricted to much smaller numbers).\r\n\r\nI think the use of `atoi64` and its clamping behavior in core_read.cpp is independently problematic (it should just fail when the number is too big), but I don't think that's on the critical path for fixing this issue. I'll open a PR to restrict it to -0xFFFFFFFF..0xFFFFFFFF.",
      "created_at" : "2020-03-24T01:43:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#issuecomment-602958582",
      "id" : 602958582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18413",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjk1ODU4Mg==",
      "updated_at" : "2020-03-24T01:43:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602958582",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "OK, thanks. (also note that `atoi64` seems platform dependant (which might explain why other people in the above issue didn't see the fuzzer error)). \r\n\r\nI would'nt mind trying to do the PR for the `atoi64` too, but I guess it will be faster/less work for other people if @sipa do it :)",
      "created_at" : "2020-03-24T01:50:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#issuecomment-602960535",
      "id" : 602960535,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18413",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjk2MDUzNQ==",
      "updated_at" : "2020-03-24T01:50:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602960535",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/946757?v=4",
         "events_url" : "https://api.github.com/users/pierreN/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierreN/followers",
         "following_url" : "https://api.github.com/users/pierreN/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierreN/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierreN",
         "id" : 946757,
         "login" : "pierreN",
         "node_id" : "MDQ6VXNlcjk0Njc1Nw==",
         "organizations_url" : "https://api.github.com/users/pierreN/orgs",
         "received_events_url" : "https://api.github.com/users/pierreN/received_events",
         "repos_url" : "https://api.github.com/users/pierreN/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierreN/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierreN"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@pierreN Feel free to restrict the number conversion in ParseScript yourself if you like.",
      "created_at" : "2020-03-24T02:12:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18413#issuecomment-602966490",
      "id" : 602966490,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18413",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjk2NjQ5MA==",
      "updated_at" : "2020-03-24T02:12:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602966490",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
