[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2022-09-01T14:44:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1234382577",
      "id" : 1234382577,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585Jky7x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234382577/reactions"
      },
      "updated_at" : "2022-09-01T14:44:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234382577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Looks like the CI failures (due to `-Werror`) are a mix of (older) compiler bugs, and and some things that can actually be improved in our code.",
      "created_at" : "2022-09-01T15:34:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1234448851",
      "id" : 1234448851,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585JlDHT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234448851/reactions"
      },
      "updated_at" : "2022-09-01T15:34:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234448851",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "GUIX hashes\r\n\r\nx86:\r\n```\r\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\r\n\r\n7d978fc422fa863c1a2148418adc52de4abe9762bd7f5ec311147836603ed7b8  guix-build-0aa641fcb794/output/aarch64-linux-gnu/SHA256SUMS.part\r\n1974dfc5f1bd7f83a63e9c5e7f348a7e88a0242d50e512f1dce30765c3e9eec9  guix-build-0aa641fcb794/output/aarch64-linux-gnu/bitcoin-0aa641fcb794-aarch64-linux-gnu-debug.tar.gz\r\na06aaf2a1b5bf5609997944d68c90d00ddebcde9e2f4e5bb128a401f75d77a8f  guix-build-0aa641fcb794/output/aarch64-linux-gnu/bitcoin-0aa641fcb794-aarch64-linux-gnu.tar.gz\r\n1c2653327ed9176ec2e97cf47c03fc451e194587d41a23939a0832bbafb5161f  guix-build-0aa641fcb794/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n4ca7b08834d720a3e8f93d2a58db607efe324ded6a00c72476bb17d11eb9c0d7  guix-build-0aa641fcb794/output/arm-linux-gnueabihf/bitcoin-0aa641fcb794-arm-linux-gnueabihf-debug.tar.gz\r\nf75675197da15214f156187267f17825203d63e28c07d292c1ce8207d0c81e9e  guix-build-0aa641fcb794/output/arm-linux-gnueabihf/bitcoin-0aa641fcb794-arm-linux-gnueabihf.tar.gz\r\ne02e0687f070bfe915eda162f1291699395f0c895a33f678e1ecee96b4925b1f  guix-build-0aa641fcb794/output/arm64-apple-darwin/SHA256SUMS.part\r\ne97bff446f0989b92d8f6ba28d489c2f178a277f53584e6f204641dd010e7541  guix-build-0aa641fcb794/output/arm64-apple-darwin/bitcoin-0aa641fcb794-arm64-apple-darwin-unsigned.dmg\r\n1b79d8461f4f2f3c5ecd4df20d47d9a4dee4f347ebf8a6f08288e051c1f83073  guix-build-0aa641fcb794/output/arm64-apple-darwin/bitcoin-0aa641fcb794-arm64-apple-darwin-unsigned.tar.gz\r\n603540a0b21f5b75ca3c50f3943d64a4fd16e8f236166574a06bd5011e7d964e  guix-build-0aa641fcb794/output/arm64-apple-darwin/bitcoin-0aa641fcb794-arm64-apple-darwin.tar.gz\r\n2e6667934e55a1198d66a6234eedd3b95b45a5e325e4b7a7944ea96817bfb7c5  guix-build-0aa641fcb794/output/dist-archive/bitcoin-0aa641fcb794.tar.gz\r\n1022c6fe0bc958c5b8e13b5535aebec37bfd138e1990053e34caa1771b7b8edf  guix-build-0aa641fcb794/output/powerpc64-linux-gnu/SHA256SUMS.part\r\ne11c325404aa7acf653ab2ef813bf73411f15eab01810410c53145c2b78c5801  guix-build-0aa641fcb794/output/powerpc64-linux-gnu/bitcoin-0aa641fcb794-powerpc64-linux-gnu-debug.tar.gz\r\n8c855d4701df6ad01493fe3b37e1de7bc3bd1ba4bc192327b465507c3a9c84e0  guix-build-0aa641fcb794/output/powerpc64-linux-gnu/bitcoin-0aa641fcb794-powerpc64-linux-gnu.tar.gz\r\nf23c42948f307b1de44f731302fe350f17f58eca4c9329d1e1ff5d3d8c0c0170  guix-build-0aa641fcb794/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\nbd05221770d175648e97bb05c6a63b0d54677356ea9cd7dd97ffa72a8d116ac7  guix-build-0aa641fcb794/output/powerpc64le-linux-gnu/bitcoin-0aa641fcb794-powerpc64le-linux-gnu-debug.tar.gz\r\n1901b0dec2bb4d714c841a4c95875d686ed9d44e17c82d28c0920a5991e7df5d  guix-build-0aa641fcb794/output/powerpc64le-linux-gnu/bitcoin-0aa641fcb794-powerpc64le-linux-gnu.tar.gz\r\nd0c21ce1ffb8f9fb4c00a625935bf48c14e57b8472c688b86fb1207e7c959386  guix-build-0aa641fcb794/output/riscv64-linux-gnu/SHA256SUMS.part\r\na4145e8cc52d5c4b20e7f58068e67d390e0c23b8cff171320fac352eec1a12dd  guix-build-0aa641fcb794/output/riscv64-linux-gnu/bitcoin-0aa641fcb794-riscv64-linux-gnu-debug.tar.gz\r\n26f2ad3cefcdad75eb21ac070f9e41a176c747c2e04181a7fc435ea44b5a7c36  guix-build-0aa641fcb794/output/riscv64-linux-gnu/bitcoin-0aa641fcb794-riscv64-linux-gnu.tar.gz\r\nae6650916abc8eec7ab44a3b1740645fbf8d52b3b87c7bbaa96ad933150231e0  guix-build-0aa641fcb794/output/x86_64-apple-darwin/SHA256SUMS.part\r\n71f19d80f7a5934179b693ab81b03721a29c3b790d3a2986f3a3d177fb26b73f  guix-build-0aa641fcb794/output/x86_64-apple-darwin/bitcoin-0aa641fcb794-x86_64-apple-darwin-unsigned.dmg\r\nccc160555498a447b0955a8fea817308d6fc4284a7bcb32da2e82a92545b1590  guix-build-0aa641fcb794/output/x86_64-apple-darwin/bitcoin-0aa641fcb794-x86_64-apple-darwin-unsigned.tar.gz\r\nb7ee33187ea5f28fd03e333d89685ce6440d0b86800200830a09c1752402d1d1  guix-build-0aa641fcb794/output/x86_64-apple-darwin/bitcoin-0aa641fcb794-x86_64-apple-darwin.tar.gz\r\ndb00e93274b10e78ebd29048db1e76994a21b3b021623022c3fa8033a8ac75a3  guix-build-0aa641fcb794/output/x86_64-linux-gnu/SHA256SUMS.part\r\n9bf6ed66d0442e9c9e1ab5204919c70775129b45f4fcb43518acdc32287c6916  guix-build-0aa641fcb794/output/x86_64-linux-gnu/bitcoin-0aa641fcb794-x86_64-linux-gnu-debug.tar.gz\r\n3dfd989628efb3ddab184ae5ffaba8175fcae1de5692cb3778903138d1fbb2ba  guix-build-0aa641fcb794/output/x86_64-linux-gnu/bitcoin-0aa641fcb794-x86_64-linux-gnu.tar.gz\r\n15a0a538d15433f3c14023af75d0fd51d1088ceb42e6edb0e40042cfe19dbbce  guix-build-0aa641fcb794/output/x86_64-w64-mingw32/SHA256SUMS.part\r\n3330531c31e74d3444b1f5c926deae0035d99ca4b43034e6f020504e82f40f65  guix-build-0aa641fcb794/output/x86_64-w64-mingw32/bitcoin-0aa641fcb794-win64-debug.zip\r\necaeb4b73e4eb827e23ca82aba838e66e1c355dff180cc9b3764a5d5c00a7992  guix-build-0aa641fcb794/output/x86_64-w64-mingw32/bitcoin-0aa641fcb794-win64-setup-unsigned.exe\r\nebd6246392820102de9d7f5de11deb437c9dadc833ce9bbdeff890508f212de9  guix-build-0aa641fcb794/output/x86_64-w64-mingw32/bitcoin-0aa641fcb794-win64-unsigned.tar.gz\r\n4fa88837afce13e9c72da62af986fc632813bac6f4535e7bea8797fe0133142e  guix-build-0aa641fcb794/output/x86_64-w64-mingw32/bitcoin-0aa641fcb794-win64.zip\r\n\r\n```\r\n\r\narm64:\r\n```\r\n1c2653327ed9176ec2e97cf47c03fc451e194587d41a23939a0832bbafb5161f  guix-build-0aa641fcb794/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n4ca7b08834d720a3e8f93d2a58db607efe324ded6a00c72476bb17d11eb9c0d7  guix-build-0aa641fcb794/output/arm-linux-gnueabihf/bitcoin-0aa641fcb794-arm-linux-gnueabihf-debug.tar.gz\r\nf75675197da15214f156187267f17825203d63e28c07d292c1ce8207d0c81e9e  guix-build-0aa641fcb794/output/arm-linux-gnueabihf/bitcoin-0aa641fcb794-arm-linux-gnueabihf.tar.gz\r\ne02e0687f070bfe915eda162f1291699395f0c895a33f678e1ecee96b4925b1f  guix-build-0aa641fcb794/output/arm64-apple-darwin/SHA256SUMS.part\r\ne97bff446f0989b92d8f6ba28d489c2f178a277f53584e6f204641dd010e7541  guix-build-0aa641fcb794/output/arm64-apple-darwin/bitcoin-0aa641fcb794-arm64-apple-darwin-unsigned.dmg\r\n1b79d8461f4f2f3c5ecd4df20d47d9a4dee4f347ebf8a6f08288e051c1f83073  guix-build-0aa641fcb794/output/arm64-apple-darwin/bitcoin-0aa641fcb794-arm64-apple-darwin-unsigned.tar.gz\r\n603540a0b21f5b75ca3c50f3943d64a4fd16e8f236166574a06bd5011e7d964e  guix-build-0aa641fcb794/output/arm64-apple-darwin/bitcoin-0aa641fcb794-arm64-apple-darwin.tar.gz\r\n2e6667934e55a1198d66a6234eedd3b95b45a5e325e4b7a7944ea96817bfb7c5  guix-build-0aa641fcb794/output/dist-archive/bitcoin-0aa641fcb794.tar.gz\r\n1022c6fe0bc958c5b8e13b5535aebec37bfd138e1990053e34caa1771b7b8edf  guix-build-0aa641fcb794/output/powerpc64-linux-gnu/SHA256SUMS.part\r\ne11c325404aa7acf653ab2ef813bf73411f15eab01810410c53145c2b78c5801  guix-build-0aa641fcb794/output/powerpc64-linux-gnu/bitcoin-0aa641fcb794-powerpc64-linux-gnu-debug.tar.gz\r\n8c855d4701df6ad01493fe3b37e1de7bc3bd1ba4bc192327b465507c3a9c84e0  guix-build-0aa641fcb794/output/powerpc64-linux-gnu/bitcoin-0aa641fcb794-powerpc64-linux-gnu.tar.gz\r\nf23c42948f307b1de44f731302fe350f17f58eca4c9329d1e1ff5d3d8c0c0170  guix-build-0aa641fcb794/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\nbd05221770d175648e97bb05c6a63b0d54677356ea9cd7dd97ffa72a8d116ac7  guix-build-0aa641fcb794/output/powerpc64le-linux-gnu/bitcoin-0aa641fcb794-powerpc64le-linux-gnu-debug.tar.gz\r\n1901b0dec2bb4d714c841a4c95875d686ed9d44e17c82d28c0920a5991e7df5d  guix-build-0aa641fcb794/output/powerpc64le-linux-gnu/bitcoin-0aa641fcb794-powerpc64le-linux-gnu.tar.gz\r\nd0c21ce1ffb8f9fb4c00a625935bf48c14e57b8472c688b86fb1207e7c959386  guix-build-0aa641fcb794/output/riscv64-linux-gnu/SHA256SUMS.part\r\na4145e8cc52d5c4b20e7f58068e67d390e0c23b8cff171320fac352eec1a12dd  guix-build-0aa641fcb794/output/riscv64-linux-gnu/bitcoin-0aa641fcb794-riscv64-linux-gnu-debug.tar.gz\r\n26f2ad3cefcdad75eb21ac070f9e41a176c747c2e04181a7fc435ea44b5a7c36  guix-build-0aa641fcb794/output/riscv64-linux-gnu/bitcoin-0aa641fcb794-riscv64-linux-gnu.tar.gz\r\nae6650916abc8eec7ab44a3b1740645fbf8d52b3b87c7bbaa96ad933150231e0  guix-build-0aa641fcb794/output/x86_64-apple-darwin/SHA256SUMS.part\r\n71f19d80f7a5934179b693ab81b03721a29c3b790d3a2986f3a3d177fb26b73f  guix-build-0aa641fcb794/output/x86_64-apple-darwin/bitcoin-0aa641fcb794-x86_64-apple-darwin-unsigned.dmg\r\nccc160555498a447b0955a8fea817308d6fc4284a7bcb32da2e82a92545b1590  guix-build-0aa641fcb794/output/x86_64-apple-darwin/bitcoin-0aa641fcb794-x86_64-apple-darwin-unsigned.tar.gz\r\nb7ee33187ea5f28fd03e333d89685ce6440d0b86800200830a09c1752402d1d1  guix-build-0aa641fcb794/output/x86_64-apple-darwin/bitcoin-0aa641fcb794-x86_64-apple-darwin.tar.gz\r\ndb00e93274b10e78ebd29048db1e76994a21b3b021623022c3fa8033a8ac75a3  guix-build-0aa641fcb794/output/x86_64-linux-gnu/SHA256SUMS.part\r\n9bf6ed66d0442e9c9e1ab5204919c70775129b45f4fcb43518acdc32287c6916  guix-build-0aa641fcb794/output/x86_64-linux-gnu/bitcoin-0aa641fcb794-x86_64-linux-gnu-debug.tar.gz\r\n3dfd989628efb3ddab184ae5ffaba8175fcae1de5692cb3778903138d1fbb2ba  guix-build-0aa641fcb794/output/x86_64-linux-gnu/bitcoin-0aa641fcb794-x86_64-linux-gnu.tar.gz\r\n15a0a538d15433f3c14023af75d0fd51d1088ceb42e6edb0e40042cfe19dbbce  guix-build-0aa641fcb794/output/x86_64-w64-mingw32/SHA256SUMS.part\r\n3330531c31e74d3444b1f5c926deae0035d99ca4b43034e6f020504e82f40f65  guix-build-0aa641fcb794/output/x86_64-w64-mingw32/bitcoin-0aa641fcb794-win64-debug.zip\r\necaeb4b73e4eb827e23ca82aba838e66e1c355dff180cc9b3764a5d5c00a7992  guix-build-0aa641fcb794/output/x86_64-w64-mingw32/bitcoin-0aa641fcb794-win64-setup-unsigned.exe\r\nebd6246392820102de9d7f5de11deb437c9dadc833ce9bbdeff890508f212de9  guix-build-0aa641fcb794/output/x86_64-w64-mingw32/bitcoin-0aa641fcb794-win64-unsigned.tar.gz\r\n4fa88837afce13e9c72da62af986fc632813bac6f4535e7bea8797fe0133142e  guix-build-0aa641fcb794/output/x86_64-w64-mingw32/bitcoin-0aa641fcb794-win64.zip\r\n```",
      "created_at" : "2022-09-02T12:31:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1235445688",
      "id" : 1235445688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585Jo2e4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1235445688/reactions"
      },
      "updated_at" : "2022-09-06T13:20:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1235445688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23396902?v=4",
         "events_url" : "https://api.github.com/users/jarolrod/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jarolrod/followers",
         "following_url" : "https://api.github.com/users/jarolrod/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jarolrod/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jarolrod",
         "id" : 23396902,
         "login" : "jarolrod",
         "node_id" : "MDQ6VXNlcjIzMzk2OTAy",
         "organizations_url" : "https://api.github.com/users/jarolrod/orgs",
         "received_events_url" : "https://api.github.com/users/jarolrod/received_events",
         "repos_url" : "https://api.github.com/users/jarolrod/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jarolrod/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jarolrod/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jarolrod"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit ea67232cdb80c4bc3f16fcd823f6f811fd8903e1<br>(master) | commit 2c0dcedd601e371410deb8d483344c9a0fcfd5ed<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`03b73fa5d3661c98...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/SHA256SUMS.part) | [`742969fe2ca456dc...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/SHA256SUMS.part) |\n| *-aarch64-linux-gnu-debug.tar.gz | [`8cf30d0420a032bd...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/bitcoin-ea67232cdb80-aarch64-linux-gnu-debug.tar.gz) | [`f0e72ed00a893ef0...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-aarch64-linux-gnu-debug.tar.gz) |\n| *-aarch64-linux-gnu.tar.gz | [`61611cb9134bbbf0...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/bitcoin-ea67232cdb80-aarch64-linux-gnu.tar.gz) | [`33a0e344e6e1c686...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-aarch64-linux-gnu.tar.gz) |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`95961b38f120e44a...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/bitcoin-ea67232cdb80-arm-linux-gnueabihf-debug.tar.gz) | [`7d013dab2990e9ad...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-arm-linux-gnueabihf-debug.tar.gz) |\n| *-arm-linux-gnueabihf.tar.gz | [`1d4895c964752077...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/bitcoin-ea67232cdb80-arm-linux-gnueabihf.tar.gz) | [`8f251a840d24665a...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-arm-linux-gnueabihf.tar.gz) |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`42ba6841c9728a10...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/bitcoin-ea67232cdb80-powerpc64-linux-gnu-debug.tar.gz) | [`bd4e0649ccd7fede...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-powerpc64-linux-gnu-debug.tar.gz) |\n| *-powerpc64-linux-gnu.tar.gz | [`508f44a080bfecc6...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/bitcoin-ea67232cdb80-powerpc64-linux-gnu.tar.gz) | [`64176f7cff8a7ee9...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-powerpc64-linux-gnu.tar.gz) |\n| *-riscv64-linux-gnu-debug.tar.gz | [`b94e84782be6caac...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/bitcoin-ea67232cdb80-riscv64-linux-gnu-debug.tar.gz) | [`1dbd454d7ad33688...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-riscv64-linux-gnu-debug.tar.gz) |\n| *-riscv64-linux-gnu.tar.gz | [`5bb9928bd92759ec...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/bitcoin-ea67232cdb80-riscv64-linux-gnu.tar.gz) | [`ae6d75080d8de81a...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-riscv64-linux-gnu.tar.gz) |\n| *-x86_64-linux-gnu-debug.tar.gz | [`e31b3ba0670c707a...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/bitcoin-ea67232cdb80-x86_64-linux-gnu-debug.tar.gz) | [`4a767c60d029fd8e...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-x86_64-linux-gnu-debug.tar.gz) |\n| *-x86_64-linux-gnu.tar.gz | [`c6d4544c596d84eb...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/bitcoin-ea67232cdb80-x86_64-linux-gnu.tar.gz) | [`ecb9fdf5b6a469e1...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-x86_64-linux-gnu.tar.gz) |\n| *.tar.gz | [`1bae8421b4d04f6a...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/bitcoin-ea67232cdb80.tar.gz) | [`1a76009192f5a598...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e.tar.gz) |\n| guix_build.log | [`0420dd2c0c9fb302...`](https://drahtbot.space/guix/bitcoin/bitcoin/ea67232cdb80c4bc3f16fcd823f6f811fd8903e1/guix_build.log) | [`32047088b9e6b0c3...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/guix_build.log) |\n| *-arm64-apple-darwin-unsigned.dmg |  | [`5deb177f3d90089a...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-arm64-apple-darwin-unsigned.dmg) |\n| *-arm64-apple-darwin-unsigned.tar.gz |  | [`6bf3471d961f433a...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-arm64-apple-darwin-unsigned.tar.gz) |\n| *-arm64-apple-darwin.tar.gz |  | [`1e0252700aed956a...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-arm64-apple-darwin.tar.gz) |\n| *-powerpc64le-linux-gnu-debug.tar.gz |  | [`4122998d0cd59751...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-powerpc64le-linux-gnu-debug.tar.gz) |\n| *-powerpc64le-linux-gnu.tar.gz |  | [`eb7dcf1208344657...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-powerpc64le-linux-gnu.tar.gz) |\n| *-win64-debug.zip |  | [`166f7d7157ecdec3...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-win64-debug.zip) |\n| *-win64-setup-unsigned.exe |  | [`ee9b28dfd5bce314...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-win64-setup-unsigned.exe) |\n| *-win64-unsigned.tar.gz |  | [`6fed55af9ce1cb9c...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-win64-unsigned.tar.gz) |\n| *-win64.zip |  | [`9306ff95cb7be671...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-win64.zip) |\n| *-x86_64-apple-darwin-unsigned.dmg |  | [`b3038f4f00970ad0...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-x86_64-apple-darwin-unsigned.dmg) |\n| *-x86_64-apple-darwin-unsigned.tar.gz |  | [`8b49116fb54b816d...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-x86_64-apple-darwin-unsigned.tar.gz) |\n| *-x86_64-apple-darwin.tar.gz |  | [`5e0066b07831f9bc...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/bitcoin-2c0dcedd601e-x86_64-apple-darwin.tar.gz) |\n| guix_build.log.diff |  | [`9b33e964fd8e309f...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c0dcedd601e371410deb8d483344c9a0fcfd5ed/guix_build.log.diff) |\n\n",
      "created_at" : "2022-09-05T05:51:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1236564481",
      "id" : 1236564481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585JtHoB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1236564481/reactions"
      },
      "updated_at" : "2022-09-05T05:51:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1236564481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @theuni. See: https://github.com/bitcoin/bitcoin/pull/25972/checks?check_run_id=8137548994, for an example of unsuppressed sdt.h warnings.",
      "created_at" : "2022-09-13T13:32:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1245419696",
      "id" : 1245419696,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KO5iw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245419696/reactions"
      },
      "updated_at" : "2022-09-13T13:32:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245419696",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As @fanquake mentioned, some of these are only warnings in older compilers. I'm going through them to  double-check that they are indeed non-issues, as opposed to missed warnings in newer compilers.\r\n\r\n(I'm ignoring the sdt.h warnings for now and focusing on what's in our code. I will look at that header next.)\r\n\r\nI've pushed commits that implement the following suggestions here: https://github.com/theuni/bitcoin/commits/use_cxxflags_with_depends\r\n\r\nFor this one:\r\n> script/descriptor.cpp:1555:21: error: loop variable 'keyspan' of type 'const Span<const unsigned char>' creates a copy from type 'const Span<const unsigned char>' [-Werror,-Wrange-loop-analysis]\r\n>    for (const auto keyspan : match->second) {\r\n\r\nThis was a warning in clang-9 but not clang-10. The warning was removed here: https://reviews.llvm.org/D72212\r\n\r\ntl;dr: copies are allowed for POD types less than 64bytes.\r\n\r\nWe can confirm this by adding a dummy `char foo[65]` to Span, which causes newer clang to warn as expected.\r\n\r\nThat seems reasonable enough, but I think we may as well just fix it up to take a const ref to remove any ambiguity.\r\n\r\n\r\nfor this one:\r\n> script/descriptor.cpp: In function âstd::unique_ptr<{anonymous}::DescriptorImpl> {anonymous}::InferScript(const CScript&, {anonymous}::ParseScriptContext, const SigningProvider&)â:\r\nscript/descriptor.cpp:1262:17: error: â<anonymous>â may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\n         return {};\r\n\r\nI can reproduce this with gcc9 but not gcc10. My best guess is that it's related to: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=80635\r\n\r\nThough I'm having trouble recreating a minimal test-case that fails with gcc9 and succeeds with gcc10.\r\n\r\nChanging these from `return {}` to `return std::nullopt` avoids the problem and makes the code more clear too, so again, I suggest simply appeasing the dumb compiler because there's not really a reason not to.\r\n\r\nFor this one:\r\n\r\n> fs.cpp: In member function âbool fsbridge::FileLock::TryLock()â:\r\nfs.cpp:129:32: error: missing initializer for member â_OVERLAPPED::InternalHighâ [-Werror=missing-field-initializers]\r\n  129 |     _OVERLAPPED overlapped = {0};\r\n\r\nThis one looks legitimate. Suggest fixing by initializing to `{}`.\r\n\r\nFor this one:\r\n\r\n> test/fuzz/float.cpp: In function âvoid float_fuzz_target(FuzzBufferType)â:\r\ntest/fuzz/float.cpp:50:40: error: âtmpâ may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\n         uint64_t encoded = EncodeDouble(d);\r\n\r\n(This applies to x86_64 as well)\r\n\r\nAgain, gcc10 is smart enough to figure this out, but gcc9 complains. Initializing to zero is harmless, so again I suggest just initializing to 0 to quiet the old compilers.",
      "created_at" : "2022-09-13T19:03:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1245840748",
      "id" : 1245840748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KQgVs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245840748/reactions"
      },
      "updated_at" : "2022-09-13T19:03:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245840748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I also pushed a patch for systemtap in depends that gets rid of those compiler warnings. From what I can tell, the variadic is completely unused there, but I'm not at all confident in that change yet.",
      "created_at" : "2022-09-13T20:38:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1245931121",
      "id" : 1245931121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KQ2Zx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245931121/reactions"
      },
      "updated_at" : "2022-09-13T20:38:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245931121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, btw :)",
      "created_at" : "2022-09-13T20:38:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1245931242",
      "id" : 1245931242,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KQ2bq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245931242/reactions"
      },
      "updated_at" : "2022-09-13T20:38:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245931242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This one looks legitimate. Suggest fixing by initializing to {}.\r\n\r\nI had opened #26006, to see if anyone would jump in with the change, but at this point will just PR your commit separate to this.\r\n\r\nFor the remaining of the changes, I've rebased on top of your branch I think the changes are fairly uncontreversial (aside from sdt.h), and are better than adding `-Wno-x` for older compilers / CI jobs, which is better again than going the `#pragma` in our source code route. Although given they are changes to code, they can also be split out of here if wanted.\r\n\r\n> I also pushed a patch for systemtap in depends that gets rid of those compiler warnings. From what I can tell, the variadic is completely unused there, but I'm not at all confident in that change yet.\r\n\r\nMaybe @0xB10C can weigh in?",
      "created_at" : "2022-09-14T11:00:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1246597836",
      "id" : 1246597836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KTZLM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246597836/reactions"
      },
      "updated_at" : "2022-09-14T11:00:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246597836",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "With the `_OVERLAPPED` fix applied, the Win64 job fails differently:\r\n```bash\r\n/usr/bin/ccache x86_64-w64-mingw32-g++-posix -std=c++17 -DHAVE_CONFIG_H -I. -I../src/config  -fmacro-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-w64-mingw32=. -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -DHAVE_BUILD_INFO -D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN -DNOMINMAX -D_FILE_OFFSET_BITS=64 -DPROVIDE_FUZZ_MAIN_FUNCTION -I. -I./minisketch/include -I./secp256k1/include -I./univalue/include -I./leveldb/include -I/tmp/cirrus-ci-build/depends/x86_64-w64-mingw32/include/  -fdebug-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-w64-mingw32=. -fstack-reuse=none -Wstack-protector -fstack-protector-all -fcf-protection=full -Wall -Wextra -Wformat -Wformat-security -Wvla -Wredundant-decls -Wdate-time -Wduplicated-branches -Wduplicated-cond -Wlogical-op -Woverloaded-virtual -Wsuggest-override -Wimplicit-fallthrough -Wno-unused-parameter -Werror -Wno-error=return-type    -fno-extended-identifiers -fvisibility=hidden -fPIE -pipe -std=c++17 -O2  -c -o script/libbitcoin_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo './'`script/interpreter.cpp\r\nscript/interpreter.cpp: In function âbool SignatureHashSchnorr(uint256&, ScriptExecutionData&, const T&, uint32_t, uint8_t, SigVersion, const PrecomputedTransactionData&, MissingDataBehavior) [with T = CTransaction]â:\r\nscript/interpreter.cpp:1530:42: error: âext_flagâ may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\n 1530 |     const uint8_t spend_type = (ext_flag << 1) + (have_annex ? 1 : 0); // The low bit indicates whether an annex is present.\r\n      |                                ~~~~~~~~~~^~~~~\r\nscript/interpreter.cpp: In function âbool SignatureHashSchnorr(uint256&, ScriptExecutionData&, const T&, uint32_t, uint8_t, SigVersion, const PrecomputedTransactionData&, MissingDataBehavior) [with T = CMutableTransaction]â:\r\nscript/interpreter.cpp:1530:42: error: âext_flagâ may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\n 1530 |     const uint8_t spend_type = (ext_flag << 1) + (have_annex ? 1 : 0); // The low bit indicates whether an annex is present.\r\n      |                                ~~~~~~~~~~^~~~~\r\n```\r\n\r\nThis looks like another false-positive, as `ext_flag` should always be either 0 or 1, or we would have asserted: https://github.com/bitcoin/bitcoin/blob/a8c3590890640aff039491b9b4e0c8eee0c7fdb6/src/script/interpreter.cpp#L1480.",
      "created_at" : "2022-09-14T11:33:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1246632859",
      "id" : 1246632859,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KThub",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246632859/reactions"
      },
      "updated_at" : "2022-09-14T11:33:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246632859",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > I also pushed a patch for systemtap in depends that gets rid of those compiler warnings. From what I can tell, the variadic is completely unused there, but I'm not at all confident in that change yet.\r\n> \r\n> Maybe @0xB10C can weigh in?\r\n\r\nI too think that we don't use the variadic and it's Ok to drop it in the patch:\r\n\r\n We use, for example, the `DTRACE_PROBE6(context, event, a, b, c, d, e, f)` macro which expands to `STAP_PROBE6(provider,probe,parm1,parm2,parm3,parm4,parm5,parm6)` expanding too `_SDT_PROBE(provider, name, 6, (arg1, arg2, arg3, arg4, arg5, arg6))` and again expanding too `(_SDT_ASM_BODY(provider, name, _SDT_ASM_ARGS, (n))` which is defined as `_SDT_ASM_BODY(provider, name, pack_args, args, ...)` containing the variadic. We only fill in the `provider`, `name`, `pack_args`, `args` and don't use the variadic.\r\n\r\n<details>\r\n<summary>\r\n\r\nSee e.g. this warning in https://cirrus-ci.com/task/4790719054348288?logs=ci#L2368.\r\n\r\n</summary>\r\n\r\n```\r\n...\r\nusr/bin/ccache clang++ -m32 -std=c++17 -DHAVE_CONFIG_H -I. -I../src/config  -DDEBUG -DDEBUG_LOCKORDER -DDEBUG_LOCKCONTENTION -DRPC_DOC_CHECK -DABORT_ON_FAILED_ASSUME -fmacro-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-i686-pc-linux-gnu=.  -DHAVE_BUILD_INFO -D_FILE_OFFSET_BITS=64 -DPROVIDE_FUZZ_MAIN_FUNCTION -I. -I./minisketch/include -I./secp256k1/include -I./univalue/include -isystem /tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include -DBOOST_MULTI_INDEX_DISABLE_SERIALIZATION -DBOOST_NO_CXX98_FUNCTION_BASE -DBOOST_MULTI_INDEX_ENABLE_SAFE_MODE -I./leveldb/include   -isystem /tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include -pthread -I/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include  -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_LIBCPP_DEBUG=1 -I/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/  -O0 -g3 -ftrapv -fdebug-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-i686-pc-linux-gnu=. -Wstack-protector -fstack-protector-all -fcf-protection=full -Wall -Wextra -Wgnu -Wformat -Wformat-security -Wvla -Wshadow-field -Wthread-safety -Wrange-loop-analysis -Wredundant-decls -Wunused-member-function -Wdate-time -Wconditional-uninitialized -Woverloaded-virtual -Wunreachable-code-loop-increment -Wimplicit-fallthrough -Wdocumentation -Wno-unused-parameter -Wno-self-assign -Werror     -fPIE -pipe -std=c++17 -O1  -c -o libbitcoin_node_a-net.o `test -f 'net.cpp' || echo './'`net.cpp\r\nnet.cpp:2767:5: error: must specify at least one argument for '...' parameter of variadic macro [-Werror,-Wgnu-zero-variadic-macro-arguments]\r\n    TRACE6(net, outbound_message,\r\n    ^\r\n./util/trace.h:18:50: note: expanded from macro 'TRACE6'\r\n#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\r\n                                                 ^\r\n/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/sys/sdt.h:496:3: note: expanded from macro 'DTRACE_PROBE6'\r\n  STAP_PROBE6(provider,probe,parm1,parm2,parm3,parm4,parm5,parm6)\r\n  ^\r\n/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/sys/sdt.h:382:3: note: expanded from macro 'STAP_PROBE6'\r\n  _SDT_PROBE(provider, name, 6, (arg1, arg2, arg3, arg4, arg5, arg6))\r\n  ^\r\n/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/sys/sdt.h:78:75: note: expanded from macro '_SDT_PROBE'\r\n    __asm__ __volatile__ (_SDT_ASM_BODY(provider, name, _SDT_ASM_ARGS, (n)) \\\r\n                                                                          ^\r\n/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/sys/sdt.h:285:9: note: macro '_SDT_ASM_BODY' defined here\r\n#define _SDT_ASM_BODY(provider, name, pack_args, args, ...)                   \\\r\n        ^\r\n1 error generated.\r\nmake[2]: *** [Makefile:9699: libbitcoin_node_a-net.o] Error 1\r\nmake[2]: Leaving directory '/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-i686-pc-linux-gnu/src'\r\nmake[1]: *** [Makefile:18924: install-recursive] Error 1\r\nmake[1]: Leaving directory '/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-i686-pc-linux-gnu/src'\r\nmake: *** [Makefile:821: install-recursive] Error 1\r\n```\r\n</details>\r\n\r\nThe the tracepoint tests in this [task](https://cirrus-ci.com/task/4850166225174528?logs=ci#L4247) succeed. Also, for reference, this also came up in https://github.com/bitcoin/bitcoin/pull/25528#issuecomment-1173795228 and the variadic was only recently [re-added](https://sourceware.org/git/?p=systemtap.git;a=blobdiff;f=includes/sys/sdt.h;h=24d5e01c37805e55c36f7202e5d4e821b85167a1;hp=28d236d91cd8e4d3a5db8b13cac90fb678c629cf;hb=ecab2afea46099b4e7dfd551462689224afdbe3a;hpb=34facf7ee6b43dae66cc109973a4eda42e439163) in [`sytemtap@ecab2afe`](https://sourceware.org/git/?p=systemtap.git;a=commit;f=includes/sys/sdt.h;h=ecab2afea46099b4e7dfd551462689224afdbe3a). If needed, we could also have our own sdt.h at some point with everything we don't use thrown out.",
      "created_at" : "2022-09-14T12:36:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1246700093",
      "id" : 1246700093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KTyI9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246700093/reactions"
      },
      "updated_at" : "2022-09-14T12:36:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246700093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've opened an upstream issue: https://github.com/chaincodelabs/libmultiprocess/issues/77, for the warnings in the multiprocess CI job:\r\n```bash\r\n/usr/bin/ccache clang++ -m32 -std=c++17 -DHAVE_CONFIG_H -I. -I../src/config  -DDEBUG -DDEBUG_LOCKORDER -DDEBUG_LOCKCONTENTION -DRPC_DOC_CHECK -DABORT_ON_FAILED_ASSUME -fmacro-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-i686-pc-linux-gnu=.  -DHAVE_BUILD_INFO -D_FILE_OFFSET_BITS=64 -DPROVIDE_FUZZ_MAIN_FUNCTION -I. -I./minisketch/include -I./secp256k1/include -I./univalue/include -I./leveldb/include -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_LIBCPP_DEBUG=1 -I/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/  -O0 -g3 -ftrapv -fdebug-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-i686-pc-linux-gnu=. -Wstack-protector -fstack-protector-all -fcf-protection=full -Wall -Wextra -Wgnu -Wformat -Wformat-security -Wvla -Wshadow-field -Wthread-safety -Wrange-loop-analysis -Wredundant-decls -Wunused-member-function -Wdate-time -Wconditional-uninitialized -Woverloaded-virtual -Wunreachable-code-loop-increment -Wimplicit-fallthrough -Wdocumentation -Wno-unused-parameter -Wno-self-assign -Werror     -fPIE -std=c++17 -pthread -I/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include -pipe -std=c++17 -O1  -c -o ipc/capnp/libbitcoin_ipc_a-protocol.o `test -f 'ipc/capnp/protocol.cpp' || echo './'`ipc/capnp/protocol.cpp\r\nIn file included from ipc/capnp/protocol.cpp:14:\r\n/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/mp/proxy-io.h:33:37: error: parameter 'connection' shadows member inherited from type 'InvokeContext' [-Werror,-Wshadow-field]\r\n    ClientInvokeContext(Connection& connection, ThreadContext& thread_context)\r\n                                    ^\r\n/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/mp/proxy-io.h:27:17: note: declared here\r\n    Connection& connection;\r\n                ^\r\n/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/mp/proxy-io.h:160:16: error: moving a local object in a return statement prevents copy elision [-Werror,-Wpessimizing-move]\r\n        return std::move(logger);\r\n               ^\r\n/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/mp/proxy-io.h:160:16: note: remove std::move call here\r\n        return std::move(logger);\r\n               ^~~~~~~~~~      ~\r\n2 errors generated.\r\n```\r\nas they are from the multiprocess code:",
      "created_at" : "2022-09-14T14:02:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1246812573",
      "id" : 1246812573,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KUNmd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246812573/reactions"
      },
      "updated_at" : "2022-09-14T14:02:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246812573",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> With the `_OVERLAPPED` fix applied, the Win64 job fails differently:\r\n> \r\n> ```shell\r\n> /usr/bin/ccache x86_64-w64-mingw32-g++-posix -std=c++17 -DHAVE_CONFIG_H -I. -I../src/config  -fmacro-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-w64-mingw32=. -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -DHAVE_BUILD_INFO -D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN -DNOMINMAX -D_FILE_OFFSET_BITS=64 -DPROVIDE_FUZZ_MAIN_FUNCTION -I. -I./minisketch/include -I./secp256k1/include -I./univalue/include -I./leveldb/include -I/tmp/cirrus-ci-build/depends/x86_64-w64-mingw32/include/  -fdebug-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-w64-mingw32=. -fstack-reuse=none -Wstack-protector -fstack-protector-all -fcf-protection=full -Wall -Wextra -Wformat -Wformat-security -Wvla -Wredundant-decls -Wdate-time -Wduplicated-branches -Wduplicated-cond -Wlogical-op -Woverloaded-virtual -Wsuggest-override -Wimplicit-fallthrough -Wno-unused-parameter -Werror -Wno-error=return-type    -fno-extended-identifiers -fvisibility=hidden -fPIE -pipe -std=c++17 -O2  -c -o script/libbitcoin_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo './'`script/interpreter.cpp\r\n> script/interpreter.cpp: In function âbool SignatureHashSchnorr(uint256&, ScriptExecutionData&, const T&, uint32_t, uint8_t, SigVersion, const PrecomputedTransactionData&, MissingDataBehavior) [with T = CTransaction]â:\r\n> script/interpreter.cpp:1530:42: error: âext_flagâ may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\n>  1530 |     const uint8_t spend_type = (ext_flag << 1) + (have_annex ? 1 : 0); // The low bit indicates whether an annex is present.\r\n>       |                                ~~~~~~~~~~^~~~~\r\n> script/interpreter.cpp: In function âbool SignatureHashSchnorr(uint256&, ScriptExecutionData&, const T&, uint32_t, uint8_t, SigVersion, const PrecomputedTransactionData&, MissingDataBehavior) [with T = CMutableTransaction]â:\r\n> script/interpreter.cpp:1530:42: error: âext_flagâ may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\n>  1530 |     const uint8_t spend_type = (ext_flag << 1) + (have_annex ? 1 : 0); // The low bit indicates whether an annex is present.\r\n>       |                                ~~~~~~~~~~^~~~~\r\n> ```\r\n> \r\n> This looks like another false-positive, as `ext_flag` should always be either 0 or 1, or we would have asserted:\r\n> \r\n> https://github.com/bitcoin/bitcoin/blob/a8c3590890640aff039491b9b4e0c8eee0c7fdb6/src/script/interpreter.cpp#L1480\r\n> .\r\n\r\nBumping https://github.com/bitcoin/bitcoin/pull/25065#discussion_r888412210 again.\r\n\r\n`assert(0)` doesn't prevent this code from being hit in `-DNDEBUG` builds, so I believe this warning is correct.\r\n\r\nLong-term, I think we could either drop the `-DDEBUG` requirement and:\r\n- return false instead of asserting and teach the callers to understand the meaning\r\n- templatize the sigversion\r\n\r\nShort-term, the simple/obvious solution is just to initialize to zero, which wouldn't affect the meaning of the code.",
      "created_at" : "2022-09-14T15:14:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1246920909",
      "id" : 1246920909,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KUoDN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246920909/reactions"
      },
      "updated_at" : "2022-09-14T15:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246920909",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> assert(0) doesn't prevent this code from being hit in -DNDEBUG builds, so I believe this warning is correct.\r\n\r\nThere is also `Assert(0)`, which shouldn't have this static analysis problem. \r\n\r\nEdit: Ok, maybe it does. Though annotating `assertion_fail` with `[[noreturn]]` might fix that. Otherwise a macro could help, see https://github.com/bitcoin/bitcoin/pull/24812#discussion_r851597471 ?",
      "created_at" : "2022-09-14T15:18:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1246926865",
      "id" : 1246926865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KUpgR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246926865/reactions"
      },
      "updated_at" : "2022-09-14T15:22:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246926865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Here's a slightly more invasive change that eliminates the possibility of undefined behavior by filtering out script versions that can't be consumed by these functions: https://github.com/theuni/bitcoin/commits/explicit-v1-scriptver\r\n\r\nThe key idea is here: https://github.com/theuni/bitcoin/commit/5f26e4a86763f17c4b6aafb090d21958928752f2#diff-da9625bc8e6928c0ec3239921e739c32b9d0abdfbca9773c550a3cdd818230b8R196\r\n\r\nThe second commit is just a small cleanup.\r\n\r\nI think it's a nice improvement. Will PR if there's any interest.",
      "created_at" : "2022-09-14T15:57:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1246978077",
      "id" : 1246978077,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KU2Ad",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246978077/reactions"
      },
      "updated_at" : "2022-09-14T15:57:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246978077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I too think that we don't use the variadic and it's Ok to drop it in the patch:\r\n> \r\n> We use, for example, the `DTRACE_PROBE6(context, event, a, b, c, d, e, f)` macro which expands to `STAP_PROBE6(provider,probe,parm1,parm2,parm3,parm4,parm5,parm6)` expanding too `_SDT_PROBE(provider, name, 6, (arg1, arg2, arg3, arg4, arg5, arg6))` and again expanding too `(_SDT_ASM_BODY(provider, name, _SDT_ASM_ARGS, (n))` which is defined as `_SDT_ASM_BODY(provider, name, pack_args, args, ...)` containing the variadic. We only fill in the `provider`, `name`, `pack_args`, `args` and don't use the variadic.\r\n> \r\n> See e.g. this warning in https://cirrus-ci.com/task/4790719054348288?logs=ci#L2368.\r\n> \r\n> The the tracepoint tests in this [task](https://cirrus-ci.com/task/4850166225174528?logs=ci#L4247) succeed. Also, for reference, this also came up in [#25528 (comment)](https://github.com/bitcoin/bitcoin/pull/25528#issuecomment-1173795228) and the variadic was only recently [re-added](https://sourceware.org/git/?p=systemtap.git;a=blobdiff;f=includes/sys/sdt.h;h=24d5e01c37805e55c36f7202e5d4e821b85167a1;hp=28d236d91cd8e4d3a5db8b13cac90fb678c629cf;hb=ecab2afea46099b4e7dfd551462689224afdbe3a;hpb=34facf7ee6b43dae66cc109973a4eda42e439163) in [`sytemtap@ecab2afe`](https://sourceware.org/git/?p=systemtap.git;a=commit;f=includes/sys/sdt.h;h=ecab2afea46099b4e7dfd551462689224afdbe3a). If needed, we could also have our own sdt.h at some point with everything we don't use thrown out.\r\n\r\nNote that not only do _we_ do not use the variadic, it's not even hooked up to anything. `_SDT_ASM_BODY` doesn't use `__VA_ARGS__` at all, so any extra args passed in would just be discarded anyway. I'm assuming this is a placeholder for some later upstream feature (or maybe something someone forgot to remove), but for now it's doing nothing but triggering a warning.",
      "created_at" : "2022-09-14T20:15:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1247255293",
      "id" : 1247255293,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KV5r9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1247255293/reactions"
      },
      "updated_at" : "2022-09-14T20:15:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1247255293",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-09-14T23:26:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1247398721",
      "id" : 1247398721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KWctB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1247398721/reactions"
      },
      "updated_at" : "2022-09-14T23:26:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1247398721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Here's a slightly more invasive change that eliminates the possibility of undefined behavior\r\n\r\nStrictly speaking, this will keep the UB. Recall that an `enum class` is allowed to hold any integral value as long as it fits in the underlying type (even if the value is not named in the enum). So you'd have to re-add the assert to avoid UB (an uninitialized value), in which case the warning would likely re-appear.",
      "created_at" : "2022-09-15T06:14:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1247628575",
      "id" : 1247628575,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KXU0f",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1247628575/reactions"
      },
      "updated_at" : "2022-09-15T06:14:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1247628575",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > Here's a slightly more invasive change that eliminates the possibility of undefined behavior\r\n> \r\n> Strictly speaking, this will keep the UB. Recall that an `enum class` is allowed to hold any integral value as long as it fits in the underlying type (even if the value is not named in the enum). So you'd have to re-add the assert to avoid UB (an uninitialized value), in which case the warning would likely re-appear.\r\n\r\nHeh, I suppose I invited the pedantry there.\r\n\r\nCorrect, it wouldn't eliminate UB potential entirely here, but it would put it on par with every other switch/case over an fully-handled enum class without a default in our codebase. I don't think you're suggesting adding `default: assert(0)` for the others? :)\r\n\r\nAs I see it it'd be strictly an improvement (though admittedly not bulletproof) as the intent is better communicated to callers, and would cleanly eliminate this warning. Would you NACK it as a PR?",
      "created_at" : "2022-09-15T13:12:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1248083961",
      "id" : 1248083961,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KZD_5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1248083961/reactions"
      },
      "updated_at" : "2022-09-15T13:12:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1248083961",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't think you're suggesting adding default: assert(0) for the others? :)\r\n\r\nNo, but generally we still put an assert in the fallthrough case. Putting the assert after the `switch` is equivalent, assuming the cases `return`. See for example https://github.com/bitcoin/bitcoin/blob/f332c4f64d52e82211c1199bbd5bab2c6bfc57f4/src/kernel/coinstats.cpp#L169-L173",
      "created_at" : "2022-09-15T14:36:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25972#issuecomment-1248193244",
      "id" : 1248193244,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25972",
      "node_id" : "IC_kwDOABII585KZerc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1248193244/reactions"
      },
      "updated_at" : "2022-09-15T14:36:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1248193244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
