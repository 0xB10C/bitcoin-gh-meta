[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25297](https://github.com/bitcoin/bitcoin/pull/25297) (wallet: group independent db writes on single batched db transaction by furszy)\n* [#19602](https://github.com/bitcoin/bitcoin/pull/19602) (wallet: Migrate legacy wallets to descriptor wallets by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-08-29T23:11:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25957#issuecomment-1230961273",
      "id" : 1230961273,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25957",
      "node_id" : "IC_kwDOABII585JXvp5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230961273/reactions"
      },
      "updated_at" : "2022-08-29T23:11:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230961273",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nLimiting the functionality to descriptor wallets is fine. We could add an argument to `loadwallet` that prevents a rescan, so a user can migrate (#19602) to a descriptor wallet and then rescan.\r\n\r\nIs there anything in @jamesob's #23549 you can reuse here?\r\n\r\nThe `rescanwallet` RPC help should mention that having `-blockfilterindex=1` dramatically speeds things up. It might also be good to have log message somewhere that it's using the block filter.\r\n\r\nI tried a rescan from genesis on a simple mainnet wallet. It was blazing fast (in comparison) and it found all transactions. It's  also slightly faster than the little helper script I wrote for [#23549](https://github.com/bitcoin/bitcoin/pull/23549#issuecomment-1149904391).\r\n\r\nBonus feature for a followup: fetch any matching pruned blocks.",
      "created_at" : "2022-08-31T12:12:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25957#issuecomment-1232855764",
      "id" : 1232855764,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25957",
      "node_id" : "IC_kwDOABII585Je-LU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1232855764/reactions"
      },
      "updated_at" : "2022-08-31T12:38:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1232855764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-09-01T21:15:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25957#issuecomment-1234790738",
      "id" : 1234790738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25957",
      "node_id" : "IC_kwDOABII585JmWlS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234790738/reactions"
      },
      "updated_at" : "2022-09-01T21:15:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234790738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased on master, with a few changes and an extra commit (see below).\r\n\r\n@Sjors:\r\n\r\nThanks for your initial feedback, much appreciated!\r\n\r\n> Limiting the functionality to descriptor wallets is fine. We could add an argument to `loadwallet` that prevents a rescan, so a user can migrate (#19602) to a descriptor wallet and then rescan.\r\n\r\nAgree, I think this sounds like a useful follow-up idea.\r\n\r\n> Is there anything in @jamesob's #23549 you can reuse here?\r\n\r\nNot that I could see; on contrast to scanblocks, the filter set is created from wallet-internal source rather than external user input and also has to be updated continuously.\r\n\r\n> The `rescanwallet` RPC help should mention that having `-blockfilterindex=1` dramatically speeds things up. It might also be good to have log message somewhere that it's using the block filter.\r\n\r\nDone, added [an extra commit](https://github.com/bitcoin/bitcoin/pull/25957/commits/d0114e02cddd9bf1cc8760ebe95941f80609259b) that documents the speedup possibilty for all RPCs that work on descriptor wallet and (possibly) involve a rescan (`rescanblockchain`, `importdescriptors`, `restorewallet` and `loadwallet`; did I miss any?). Also extended the \"Rescan started from block...\" debug message, showing if the fast or slow variant is used.\r\n\r\n> \r\n> I tried a rescan from genesis on a simple mainnet wallet. It was blazing fast (in comparison) and it found all transactions. It's also slightly faster than the little helper script I wrote for [#23549](https://github.com/bitcoin/bitcoin/pull/23549#issuecomment-1149904391).\r\n\r\nð ð ð \r\n\r\n> \r\n> Bonus feature for a followup: fetch any matching pruned blocks.\r\n\r\nSounds like a charming idea ð \r\n\r\nNote that this PR is covered in the [PR review club for next wednesday](https://bitcoincore.reviews/25957), hosted by LarryRuane.",
      "created_at" : "2022-09-02T16:23:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25957#issuecomment-1235691177",
      "id" : 1235691177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25957",
      "node_id" : "IC_kwDOABII585Jpyap",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1235691177/reactions"
      },
      "updated_at" : "2022-09-02T16:23:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1235691177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25957#discussion_r962912290"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962912290"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Some methods here are called `has...`, others `have...`. I'm not sure where the `have...` comes from, but it sounds weird. Could you change that to `hasBlockFilterIndex()` ?\r\n```suggestion\r\n    virtual bool hasBlockFilterIndex() = 0;\r\n```",
      "commit_id" : "d0114e02cddd9bf1cc8760ebe95941f80609259b",
      "created_at" : "2022-09-05T13:31:48Z",
      "diff_hunk" : "@@ -143,6 +144,13 @@ class Chain\n     //! or one of its ancestors.\n     virtual std::optional<int> findLocatorFork(const CBlockLocator& locator) = 0;\n \n+    //! Returns whether a block filter index is available.\n+    virtual bool haveBlockFilterIndex() = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25957#discussion_r962912290",
      "id" : 962912290,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5845ZOAi",
      "original_commit_id" : "d0114e02cddd9bf1cc8760ebe95941f80609259b",
      "original_line" : 148,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : 13,
      "pull_request_review_id" : 1096463603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962912290/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-05T15:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962912290",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25957#discussion_r962921746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962921746"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "There's a bit of an interface inconsistency here (and in `blockFilterMatchesAny `) in that so far most of the blockfilter functions don't assume the type to be basic but rather expect them to be passed. Have you considered this? One alternative could be add \"basic\" in the function name, which can then be refactored later if/when we have more filtertypes, but at least then it'll be more explicit? At first glance, I _think_ I'd prefer just passing the `FilterType::BASIC` to stay consistent but no strong view (yet).",
      "commit_id" : "d0114e02cddd9bf1cc8760ebe95941f80609259b",
      "created_at" : "2022-09-05T13:42:13Z",
      "diff_hunk" : "@@ -536,6 +537,20 @@ class ChainImpl : public Chain\n         }\n         return std::nullopt;\n     }\n+    bool haveBlockFilterIndex() override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25957#discussion_r962921746",
      "id" : 962921746,
      "line" : 540,
      "node_id" : "PRRC_kwDOABII5845ZQUS",
      "original_commit_id" : "d0114e02cddd9bf1cc8760ebe95941f80609259b",
      "original_line" : 540,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/node/interfaces.cpp",
      "position" : 12,
      "pull_request_review_id" : 1096463603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962921746/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-05T15:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962921746",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25957#discussion_r962928271"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962928271"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is a lot of code duplication from `GetScriptPubKeys`. At first sight, I don't really why this couldn't be an overloaded function or default parameter?",
      "commit_id" : "d0114e02cddd9bf1cc8760ebe95941f80609259b",
      "created_at" : "2022-09-05T13:49:36Z",
      "diff_hunk" : "@@ -2652,6 +2652,18 @@ const std::unordered_set<CScript, SaltedSipHasher> DescriptorScriptPubKeyMan::Ge\n     return script_pub_keys;\n }\n \n+const std::vector<CScript> DescriptorScriptPubKeyMan::GetScriptPubKeysWithMinIndex(int32_t minimum_index) const\n+{\n+    LOCK(cs_desc_man);\n+    std::vector<CScript> script_pub_keys;\n+    script_pub_keys.reserve(m_map_script_pub_keys.size());\n+\n+    for (auto const& [script_pub_key, index] : m_map_script_pub_keys) {\n+        if (index >= minimum_index) script_pub_keys.emplace_back(script_pub_key);\n+    }\n+    return script_pub_keys;\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25957#discussion_r962928271",
      "id" : 962928271,
      "line" : 2665,
      "node_id" : "PRRC_kwDOABII5845ZR6P",
      "original_commit_id" : "d0114e02cddd9bf1cc8760ebe95941f80609259b",
      "original_line" : 2665,
      "original_position" : 14,
      "original_start_line" : 2655,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 14,
      "pull_request_review_id" : 1096463603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962928271/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2655,
      "start_side" : "RIGHT",
      "updated_at" : "2022-09-05T15:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962928271",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25957#discussion_r962937400"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962937400"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Maybe a brief docstring would be helpful here? The name is not immediately obvious imo.",
      "commit_id" : "d0114e02cddd9bf1cc8760ebe95941f80609259b",
      "created_at" : "2022-09-05T13:59:24Z",
      "diff_hunk" : "@@ -260,6 +260,60 @@ std::shared_ptr<CWallet> LoadWalletInternal(WalletContext& context, const std::s\n         return nullptr;\n     }\n }\n+\n+class FastWalletRescanFilter\n+{\n+public:\n+    FastWalletRescanFilter(const CWallet& wallet) : m_wallet(wallet)\n+    {\n+        // fast rescanning via block filters is only supported by descriptor wallets right now\n+        assert(!m_wallet.IsLegacy());\n+\n+        // create initial filter with scripts from both active and non-active ScriptPubKeyMans\n+        auto active_spkms = m_wallet.GetActiveScriptPubKeyMans();\n+        for (auto spkm : m_wallet.GetAllScriptPubKeyMans()) {\n+            auto* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            for (const auto& script_pub_key : desc_spkm->GetScriptPubKeys()) {\n+                m_filter_set.emplace(script_pub_key.begin(), script_pub_key.end());\n+            }\n+            // save active ScriptPubKeyMans's end ranges for possible future filter updates\n+            if (active_spkms.find(spkm) != active_spkms.end()) {\n+                m_last_range_ends.emplace(desc_spkm, GetDescriptorSPKRangeEnd(*desc_spkm));\n+            }\n+        }\n+    }\n+\n+    void UpdateIfNeeded()\n+    {\n+        // repopulate filter with new scripts if top-up has happened since last iteration\n+        for (auto [desc_spkm, last_range_end] : m_last_range_ends) {\n+            int32_t current_range_end = GetDescriptorSPKRangeEnd(*desc_spkm);\n+            if (current_range_end > last_range_end) {\n+                for (const auto& script_pub_key : desc_spkm->GetScriptPubKeysWithMinIndex(last_range_end)) {\n+                    m_filter_set.emplace(script_pub_key.begin(), script_pub_key.end());\n+                }\n+                m_last_range_ends.at(desc_spkm) = current_range_end;\n+            }\n+        }\n+    }\n+\n+    std::optional<bool> MatchesBlock(const uint256& block_hash) const\n+    {\n+        return m_wallet.chain().blockFilterMatchesAny(block_hash, m_filter_set);\n+    }\n+\n+private:\n+    const CWallet& m_wallet;\n+    std::map<const DescriptorScriptPubKeyMan*, int32_t> m_last_range_ends;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25957#discussion_r962937400",
      "id" : 962937400,
      "line" : 307,
      "node_id" : "PRRC_kwDOABII5845ZUI4",
      "original_commit_id" : "d0114e02cddd9bf1cc8760ebe95941f80609259b",
      "original_line" : 307,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 48,
      "pull_request_review_id" : 1096463603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962937400/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-05T15:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962937400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25957#discussion_r962939320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962939320"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Do we need `SPK` in the name here? `GetDescriptorRangeEnd` seems to describe it accurately?",
      "commit_id" : "d0114e02cddd9bf1cc8760ebe95941f80609259b",
      "created_at" : "2022-09-05T14:01:25Z",
      "diff_hunk" : "@@ -260,6 +260,60 @@ std::shared_ptr<CWallet> LoadWalletInternal(WalletContext& context, const std::s\n         return nullptr;\n     }\n }\n+\n+class FastWalletRescanFilter\n+{\n+public:\n+    FastWalletRescanFilter(const CWallet& wallet) : m_wallet(wallet)\n+    {\n+        // fast rescanning via block filters is only supported by descriptor wallets right now\n+        assert(!m_wallet.IsLegacy());\n+\n+        // create initial filter with scripts from both active and non-active ScriptPubKeyMans\n+        auto active_spkms = m_wallet.GetActiveScriptPubKeyMans();\n+        for (auto spkm : m_wallet.GetAllScriptPubKeyMans()) {\n+            auto* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            for (const auto& script_pub_key : desc_spkm->GetScriptPubKeys()) {\n+                m_filter_set.emplace(script_pub_key.begin(), script_pub_key.end());\n+            }\n+            // save active ScriptPubKeyMans's end ranges for possible future filter updates\n+            if (active_spkms.find(spkm) != active_spkms.end()) {\n+                m_last_range_ends.emplace(desc_spkm, GetDescriptorSPKRangeEnd(*desc_spkm));\n+            }\n+        }\n+    }\n+\n+    void UpdateIfNeeded()\n+    {\n+        // repopulate filter with new scripts if top-up has happened since last iteration\n+        for (auto [desc_spkm, last_range_end] : m_last_range_ends) {\n+            int32_t current_range_end = GetDescriptorSPKRangeEnd(*desc_spkm);\n+            if (current_range_end > last_range_end) {\n+                for (const auto& script_pub_key : desc_spkm->GetScriptPubKeysWithMinIndex(last_range_end)) {\n+                    m_filter_set.emplace(script_pub_key.begin(), script_pub_key.end());\n+                }\n+                m_last_range_ends.at(desc_spkm) = current_range_end;\n+            }\n+        }\n+    }\n+\n+    std::optional<bool> MatchesBlock(const uint256& block_hash) const\n+    {\n+        return m_wallet.chain().blockFilterMatchesAny(block_hash, m_filter_set);\n+    }\n+\n+private:\n+    const CWallet& m_wallet;\n+    std::map<const DescriptorScriptPubKeyMan*, int32_t> m_last_range_ends;\n+    GCSFilter::ElementSet m_filter_set;\n+\n+    static int32_t GetDescriptorSPKRangeEnd(const DescriptorScriptPubKeyMan& desc_spkm)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25957#discussion_r962939320",
      "id" : 962939320,
      "line" : 310,
      "node_id" : "PRRC_kwDOABII5845ZUm4",
      "original_commit_id" : "d0114e02cddd9bf1cc8760ebe95941f80609259b",
      "original_line" : 310,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 51,
      "pull_request_review_id" : 1096463603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962939320/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-05T15:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962939320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   }
]
