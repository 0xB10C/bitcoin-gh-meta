[
   {
      "body" : "Concept ACK",
      "created_at" : "2016-12-06T12:24:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-265137401",
      "id" : 265137401,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-06T12:24:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265137401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Would it make sense to introduce a utility function like MilliSleep which takes a reference to a condition variable and an atomic flag? The pattern that replaces the MilliSleep calls is pretty complicated and repeats several times.",
      "created_at" : "2016-12-06T19:35:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-265249618",
      "id" : 265249618,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-06T19:35:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265249618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Concept ACK",
      "created_at" : "2016-12-07T10:57:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-265417999",
      "id" : 265417999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-07T10:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265417999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "body" : "@sipa Sure, will do.",
      "created_at" : "2016-12-08T14:05:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-265747217",
      "id" : 265747217,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-08T14:05:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265747217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@sipa done. I'm not sure if it's generic enough to add to utiltime, happy to move it back to net if that makes more sense.\r\n\r\nAlso fixed up the TODO that I was mistaken about.",
      "created_at" : "2016-12-09T01:07:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-265904134",
      "id" : 265904134,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-09T01:07:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265904134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Just noticed that this PR would've broken interruptible proxy recvs, so I pushed a commit to fix that. The proxy code will soon be dumped anyway, so I'm ok with the hackish global there for now.\r\n\r\nAlso squashed down the header fix while I was at it.",
      "created_at" : "2016-12-16T00:51:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-267488595",
      "id" : 267488595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-16T00:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267488595",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@TheBlueMatt I think you might be confused as to how the atomic flags are used in this code. They're used in \"clear triggered mode\", so there is no need to reset them after every check. The other usage (\"test_and_set triggered mode\") would introduce race conditions when the checking thread clears the flag as a concurrent interrupt could be cleared.",
      "created_at" : "2016-12-21T06:51:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-268450262",
      "id" : 268450262,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-21T06:51:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268450262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "@JeremyRubin I see how they're used, am only commenting on the likelihood of this pattern introducing future bugs. Eg someone uses break instead of return and then a loop gets moved around, making the thread no longer exit.\n\nOn December 20, 2016 10:51:14 PM PST, Jeremy Rubin <notifications@github.com> wrote:\n>@TheBlueMatt I think you might be confused as to how the atomic flags\n>are used in this code. They're used in \"clear triggered mode\", so there\n>is no need to reset them after every check. The other usage\n>(\"test_and_set triggered mode\") would introduce race conditions when\n>the checking thread clears the flag as a concurrent interrupt could be\n>cleared.\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-268450262\n",
      "created_at" : "2016-12-21T08:50:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-268469097",
      "id" : 268469097,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-21T08:50:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268469097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt ok I was responding to \"atomic_flags and resetting them to dont-wake every time you check them.\", not sure what you meant by that if not my earlier interpretation.\r\n\r\nI agree with you on the semantics being off if your worry is future code breaking it. We should either make it throw an Interruption, or call std::terminate. Changing it to an atomic_bool will not have any effect on reducing likelihood future code changes don't break intended behavior. Implemented here for comparison https://github.com/theuni/bitcoin/compare/connman-threads...JeremyRubin:connman-threads The only negative of this approach is that local cleanup can't be handled as neatly.",
      "created_at" : "2016-12-21T19:19:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-268614837",
      "id" : 268614837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-21T19:19:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268614837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "@JeremyRubin sadly I'm not sure about the execution propagation from within condition_variable...cppreference seems to indicate it was cleaned up in C++14, but its unclear if its guaranteed to propagation from the predicate or if it just \"may\".",
      "created_at" : "2016-12-21T20:06:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-268625684",
      "id" : 268625684,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-21T20:06:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268625684",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Thanks for clarifying the kind of bug you were imagining, I had a different type of bug in mind (there being no code flow which can cause a termination, rather than being catchable on the next iteration).\r\n\r\nYou're absolutely right on the \"may\" for exceptions thrown from wait_for.  Semantics should be fixed now (moved InterruptibleSleep into interruption_point and made the throwing external to wait_for).",
      "created_at" : "2016-12-21T20:59:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-268638123",
      "id" : 268638123,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-21T20:59:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268638123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "@JeremyRubin ehh, I mean yes regaring wrappers, no regarding exceptions - I think its generally accepted that using exceptions in C++ is bad, and I'm not sure we want to add any more uses than we already have.",
      "created_at" : "2016-12-21T21:28:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-268644797",
      "id" : 268644797,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-21T21:28:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268644797",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@JeremyRubin and @TheBlueMatt Thanks for having a look.\r\n\r\nAfter a debate (probably more than necessary), and running it by a third party, I think I'll concede and just use an atomic bool instead. The convincing argument was that a bool allows us to deviate from the current \"got an interrupt, bail from thread!\", and lets us do quick on-thread teardown post-interruption. It will need to stay in check though, our usages of Interrupt() assume that it won't block.",
      "created_at" : "2016-12-22T02:43:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-268704281",
      "id" : 268704281,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-22T02:43:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268704281",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@TheBlueMatt I pushed up a new attempt to  https://github.com/theuni/bitcoin/commits/connman-threads-redo. I think you'll like that much better.\r\n\r\nI need to split a few non-obvious things into different commits, but mind having a quick look at the concept?\r\n\r\nI borrowed @JeremyRubin's wrapper idea but implemented it a bit differently: https://github.com/theuni/bitcoin/commit/7b4d8f608cca17fba7311c310e74c4cbd7671b73#diff-09404f8fdd1f69609d329cb0b1f1252e\r\n\r\nThe usage is (imo) pretty straightforward: https://github.com/theuni/bitcoin/commit/7b4d8f608cca17fba7311c310e74c4cbd7671b73#diff-9a82240fe7dfe86564178691cc57f2f1L1660",
      "created_at" : "2016-12-22T07:19:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-268735467",
      "id" : 268735467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-22T07:34:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268735467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni Yup, really like that version.",
      "created_at" : "2016-12-22T18:17:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9289#issuecomment-268858517",
      "id" : 268858517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9289",
      "updated_at" : "2016-12-22T18:17:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268858517",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]
