[
   {
      "body" : "Concept ACK.",
      "created_at" : "2016-11-26T06:54:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263048115",
      "id" : 263048115,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-26T06:54:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263048115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Nice. Concept ACK.\r\nNeeds test.",
      "created_at" : "2016-11-26T08:29:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263051382",
      "id" : 263051382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-26T08:29:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263051382",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli I tried finding the fundrawtransaction tests but couldn't. Where are they?\r\n\r\nsrc/test/rpc_tests.cpp seems like the natural place for them, but I see no 'fund' in there at all.",
      "created_at" : "2016-11-26T08:45:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263051967",
      "id" : 263051967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-26T08:45:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263051967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "@dooglus \r\nThere is one at `./qa/rpc-tests/fundrawtransaction.py`.\r\nThe tests should make sure that the `subtractFeeFromAmount` option work in conjunction with the custom feerate option (haven't look at your code so far).",
      "created_at" : "2016-11-26T09:01:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263052532",
      "id" : 263052532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-26T09:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263052532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli Thanks for pointing me at the `qa/` directory. I hadn't noticed it before.\r\n\r\nI have added tests for `subtractFeeFromAmount`, including checking that it works in combination with custom feerate.",
      "created_at" : "2016-11-27T09:21:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263111374",
      "id" : 263111374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-27T09:21:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263111374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "Concept ACK",
      "created_at" : "2016-11-28T07:23:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263200387",
      "id" : 263200387,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-28T07:23:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263200387",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r89728445"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89728445"
         }
      },
      "body" : "This will thrown an exception if one of the elements in the array is numeric. But I think this is okay.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-28T07:32:02Z",
      "diff_hunk" : "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r89728445",
      "id" : 89728445,
      "original_commit_id" : "a979010c80d5875ab26c9cdd5401e2b2905dd572",
      "original_position" : 47,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 10264915,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89728445",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Code Review ACK a979010c80d5875ab26c9cdd5401e2b2905dd572.\r\nSquash required.",
      "created_at" : "2016-11-28T07:36:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263202152",
      "id" : 263202152,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-28T07:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263202152",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "To 'squash' the commits do I just rewrite the same branch with a `push --force`? Or make a new branch and a new pull request?",
      "created_at" : "2016-11-28T07:47:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263203903",
      "id" : 263203903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-28T07:47:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263203903",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "@dooglus: Yes. I normally do a `git rebase -I head~<amount-of-commits>`, find the commit you'd like to squash to and mark all later commits with a `s`. Then `git push --force`.",
      "created_at" : "2016-11-28T07:49:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263204233",
      "id" : 263204233,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-28T07:49:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263204233",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli Thanks. The 'i' is lowercase and the 'HEAD' is uppercase but it was close enough.\r\n\r\nI used `git rebase -i HEAD~3` and it appears to have worked.",
      "created_at" : "2016-11-28T08:20:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263209117",
      "id" : 263209117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-28T08:20:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263209117",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "utACK",
      "created_at" : "2016-11-28T20:41:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263387858",
      "id" : 263387858,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-28T20:41:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263387858",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90076856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90076856"
         }
      },
      "body" : "nit: you can condense this to: \r\nassert(result[0]['fee']==result[1]['fee']== result[2]['fee']==result[3]['fee'])",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-29T18:42:10Z",
      "diff_hunk" : "@@ -643,5 +643,127 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'])\n+        assert(result[0]['fee'] == result[2]['fee'])\n+        assert(result[0]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90076856",
      "id" : 90076856,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 49,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10601899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90076856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7504522?v=3",
         "events_url" : "https://api.github.com/users/mrbandrews/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mrbandrews/followers",
         "following_url" : "https://api.github.com/users/mrbandrews/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mrbandrews/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mrbandrews",
         "id" : 7504522,
         "login" : "mrbandrews",
         "organizations_url" : "https://api.github.com/users/mrbandrews/orgs",
         "received_events_url" : "https://api.github.com/users/mrbandrews/received_events",
         "repos_url" : "https://api.github.com/users/mrbandrews/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mrbandrews/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mrbandrews"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90077024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90077024"
         }
      },
      "body" : "same",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-29T18:42:47Z",
      "diff_hunk" : "@@ -643,5 +643,127 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'])\n+        assert(result[0]['fee'] == result[2]['fee'])\n+        assert(result[0]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1])\n+        assert(change[0] == change[2])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90077024",
      "id" : 90077024,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 53,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10602066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90077024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7504522?v=3",
         "events_url" : "https://api.github.com/users/mrbandrews/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mrbandrews/followers",
         "following_url" : "https://api.github.com/users/mrbandrews/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mrbandrews/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mrbandrews",
         "id" : 7504522,
         "login" : "mrbandrews",
         "organizations_url" : "https://api.github.com/users/mrbandrews/orgs",
         "received_events_url" : "https://api.github.com/users/mrbandrews/received_events",
         "repos_url" : "https://api.github.com/users/mrbandrews/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mrbandrews/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mrbandrews"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90100155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90100155"
         }
      },
      "body" : "Should it throw an error if the given address is valid but is not among the outputs? (would have to check for this below, after retrieving the transaction).  It seems like in this case, the user is trying to pay the fee with one of the outputs but has made an error. ",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-29T20:01:57Z",
      "diff_hunk" : "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90100155",
      "id" : 90100155,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 53,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 10624630,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90100155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7504522?v=3",
         "events_url" : "https://api.github.com/users/mrbandrews/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mrbandrews/followers",
         "following_url" : "https://api.github.com/users/mrbandrews/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mrbandrews/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mrbandrews",
         "id" : 7504522,
         "login" : "mrbandrews",
         "organizations_url" : "https://api.github.com/users/mrbandrews/orgs",
         "received_events_url" : "https://api.github.com/users/mrbandrews/received_events",
         "repos_url" : "https://api.github.com/users/mrbandrews/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mrbandrews/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mrbandrews"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90118751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90118751"
         }
      },
      "body" : "Interesting. I didn't know Python did that. I will do as you suggest.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-29T21:32:57Z",
      "diff_hunk" : "@@ -643,5 +643,127 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'])\n+        assert(result[0]['fee'] == result[2]['fee'])\n+        assert(result[0]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90118751",
      "id" : 90118751,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 49,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10643287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90118751",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90118788"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90118788"
         }
      },
      "body" : "Yes. Addressed in 6a41954.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-29T21:33:07Z",
      "diff_hunk" : "@@ -643,5 +643,127 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'])\n+        assert(result[0]['fee'] == result[2]['fee'])\n+        assert(result[0]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1])\n+        assert(change[0] == change[2])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90118788",
      "id" : 90118788,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 53,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10643325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90118788",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90120089"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90120089"
         }
      },
      "body" : "I wanted it to behave the same as it does [in `sendmany`](https://github.com/bitcoin/bitcoin/blob/v0.13.1/src/wallet/rpcwallet.cpp#L931), where it doesn't complain if you include an address that isn't a recipient at all.\r\n\r\nThe user could have a list of addresses which should pay fees when sent to, and use that same list as their `subtractFeeFromAmount` parameter whichever addresses they are sending to.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-29T21:39:23Z",
      "diff_hunk" : "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90120089",
      "id" : 90120089,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 53,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 10644592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90120089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90122153"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90122153"
         }
      },
      "body" : "Addressed in 6a41954.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-29T21:49:37Z",
      "diff_hunk" : "@@ -643,5 +643,127 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'])\n+        assert(result[0]['fee'] == result[2]['fee'])\n+        assert(result[0]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90122153",
      "id" : 90122153,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 49,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10646607,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90122153",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "Addressed @mrbandrews' nits. Should I re-squash now, or leave the 'nit' commit separate for a while?",
      "created_at" : "2016-11-29T21:51:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263710894",
      "id" : 263710894,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-29T21:51:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263710894",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "re-utACK 6a41954\r\n\r\n@dooglus good question, its not always clear.  I personally think that if the prior code is not broken , then its ok not to squash.",
      "created_at" : "2016-11-29T22:48:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263725673",
      "id" : 263725673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-29T22:48:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263725673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "utACK 6a41954895460a033afc352af5c137418591cc6b\r\n@dooglus IMO squashing is not required when the commits has a reason to be separated. If it's just a trivial change/overhaul of the previous commit(s) in the PR, it should probably be squashed.",
      "created_at" : "2016-11-30T08:03:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263808202",
      "id" : 263808202,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-11-30T08:03:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263808202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90312311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90312311"
         }
      },
      "body" : "One difference between this and `sendmany` is that `sendmany` requires transaction outputs to be base58 addresses, and takes `amounts` and `subtractfeefromamount` arguments in base58 form, while `fundrawtransaction` allows outputs to be arbitrary scripts. This means with the PR in its current form, there may be no way for the new `subtractFeeFromAmount` argument to refer to certain outputs.\r\n\r\nInstead of adding a `subtractFeeFromAmount` argument, I might suggest adding a `subtractFeeFromPositions` argument that takes a list of integer output indices. This would give callers the flexibility to refer to all outputs, be more consistent with the existing `changePosition` argument (which is also an integer output index), and also eliminate the need for `ExtractDestination` and `CBitcoinAddress::ToString` invocations in `CWallet::FundTransaction`.\r\n\r\n",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T19:46:17Z",
      "diff_hunk" : "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90312311",
      "id" : 90312311,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 53,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 10833541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90312311",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90314573"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90314573"
         }
      },
      "body" : "Would suggest changing the new `set<string>` argument to `set<int>` to be consistent with the existing `nChangePosInOut` argument which refers to an output by integer index instead of base58 address string. This would give callers more flexibility in referring to outputs and also simplify handling of the new argument below.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T19:57:01Z",
      "diff_hunk" : "@@ -2181,14 +2181,16 @@ bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount&\n     return res;\n }\n \n-bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n+bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, std::set<std::string>& setSubtractFeeFromAmount, const CTxDestination& destChange)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90314573",
      "id" : 90314573,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 5,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 10833541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90314573",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90316844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90316844"
         }
      },
      "body" : "Maybe `s/If no addresses are specified here/If no addresses specified here are outputs in the transaction`",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T20:08:34Z",
      "diff_hunk" : "@@ -2476,11 +2476,16 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"1. \\\"hexstring\\\"           (string, required) The hex string of the raw transaction\\n\"\n                             \"2. options               (object, optional)\\n\"\n                             \"   {\\n\"\n-                            \"     \\\"changeAddress\\\"     (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n-                            \"     \\\"changePosition\\\"    (numeric, optional, default random) The index of the change output\\n\"\n-                            \"     \\\"includeWatching\\\"   (boolean, optional, default false) Also select inputs which are watch only\\n\"\n-                            \"     \\\"lockUnspents\\\"      (boolean, optional, default false) Lock selected unspent outputs\\n\"\n-                            \"     \\\"feeRate\\\"           (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"changeAddress\\\"         (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n+                            \"     \\\"changePosition\\\"        (numeric, optional, default random) The index of the change output\\n\"\n+                            \"     \\\"includeWatching\\\"       (boolean, optional, default false) Also select inputs which are watch only\\n\"\n+                            \"     \\\"lockUnspents\\\"          (boolean, optional, default false) Lock selected unspent outputs\\n\"\n+                            \"     \\\"feeRate\\\"               (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"subtractFeeFromAmount\\\" (array, optional) A json array with addresses.\\n\"\n+                            \"                             The fee will be equally deducted from the amount of each selected address.\\n\"\n+                            \"                             Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n+                            \"                             If no addresses are specified here, the sender pays the fee.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90316844",
      "id" : 90316844,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 17,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 10833541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90316844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90317075"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90317075"
         }
      },
      "body" : "Maybe mention after `This will not modify existing inputs, and will add one change output to the outputs` above that no existing outputs will be modified either unless subtractFeeFromAmount is specified.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T20:09:51Z",
      "diff_hunk" : "@@ -2476,11 +2476,16 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"1. \\\"hexstring\\\"           (string, required) The hex string of the raw transaction\\n\"\n                             \"2. options               (object, optional)\\n\"\n                             \"   {\\n\"\n-                            \"     \\\"changeAddress\\\"     (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n-                            \"     \\\"changePosition\\\"    (numeric, optional, default random) The index of the change output\\n\"\n-                            \"     \\\"includeWatching\\\"   (boolean, optional, default false) Also select inputs which are watch only\\n\"\n-                            \"     \\\"lockUnspents\\\"      (boolean, optional, default false) Lock selected unspent outputs\\n\"\n-                            \"     \\\"feeRate\\\"           (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"changeAddress\\\"         (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n+                            \"     \\\"changePosition\\\"        (numeric, optional, default random) The index of the change output\\n\"\n+                            \"     \\\"includeWatching\\\"       (boolean, optional, default false) Also select inputs which are watch only\\n\"\n+                            \"     \\\"lockUnspents\\\"          (boolean, optional, default false) Lock selected unspent outputs\\n\"\n+                            \"     \\\"feeRate\\\"               (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"subtractFeeFromAmount\\\" (array, optional) A json array with addresses.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90317075",
      "id" : 90317075,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 10833541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90317075",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90317911"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90317911"
         }
      },
      "body" : "Debug output will be a little better if you use `assert_equal` instead of assert here and below.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T20:14:19Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90317911",
      "id" : 90317911,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 56,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10833541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90317911",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90320482"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90320482"
         }
      },
      "body" : "Could use list comprehension:\r\n\r\n```\r\ndec_tx = [self.nodes[3].decoderawtransaction(tx['hex'] for tx in result]\r\n```",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T20:28:10Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90320482",
      "id" : 90320482,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 24,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10833541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90320482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90321806"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90321806"
         }
      },
      "body" : "Could use dictionary comprehension:\r\n\r\n```\r\noutputs = {self.nodes[2].getnewaddress(): value for value in (1.0, 1.1, 1.2, 1.3)}\r\n```",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T20:34:56Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])\n+\n+        # 0's (change plus fee) should be equal to 3's change\n+        assert(change[0] + result[0]['fee'] == change[3])\n+\n+        # 4's output should be equal to 5's (output plus fee)\n+        assert(output[4] == output[5] + result[5]['fee'])\n+\n+        # 4's (change plus fee) should be equal to 5's change\n+        assert(change[4] + result[4]['fee'] == change[5])\n+\n+        inputs = []\n+        addr0 = self.nodes[2].getnewaddress()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90321806",
      "id" : 90321806,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 68,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10833541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90321806",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90323744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90323744"
         }
      },
      "body" : "Could use list comprehension:\r\n\r\n```\r\noutput = [[out[value] for i, out in enumerate(d['vout']) if i != r['changepos']]\r\n          for d, r in zip(dec_tx, result)]]\r\n```",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T20:44:35Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])\n+\n+        # 0's (change plus fee) should be equal to 3's change\n+        assert(change[0] + result[0]['fee'] == change[3])\n+\n+        # 4's output should be equal to 5's (output plus fee)\n+        assert(output[4] == output[5] + result[5]['fee'])\n+\n+        # 4's (change plus fee) should be equal to 5's change\n+        assert(change[4] + result[4]['fee'] == change[5])\n+\n+        inputs = []\n+        addr0 = self.nodes[2].getnewaddress()\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        addr3 = self.nodes[2].getnewaddress()\n+        outputs = {addr0: 1.0, addr1: 1.1, addr2: 1.2, addr3: 1.3}\n+        keys = list(outputs.keys())\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx),\n+                  # split the fee between outputs 0, 2, and 3, but not output 1\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [keys[0], keys[2], keys[3]]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex'])]\n+\n+        output = [[dec_tx[0]['vout'][0]['value'],\n+                   dec_tx[0]['vout'][1]['value'],\n+                   dec_tx[0]['vout'][2]['value'],\n+                   dec_tx[0]['vout'][3]['value'],\n+                   dec_tx[0]['vout'][4]['value']],\n+                  [dec_tx[1]['vout'][0]['value'],\n+                   dec_tx[1]['vout'][1]['value'],\n+                   dec_tx[1]['vout'][2]['value'],\n+                   dec_tx[1]['vout'][3]['value'],\n+                   dec_tx[1]['vout'][4]['value']]]\n+        del output[0][result[0]['changepos']]\n+        del output[1][result[1]['changepos']]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90323744",
      "id" : 90323744,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 94,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10833541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90323744",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90324465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90324465"
         }
      },
      "body" : "Could use list comprehension (and similarly below): \r\n\r\n```\r\noutput = [d['vout'][1 - r['changepos']]['value'] for d, r in zip(dec_tx, result)]\r\n```",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T20:48:35Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90324465",
      "id" : 90324465,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 31,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10833541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90324465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90329419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90329419"
         }
      },
      "body" : "It appears that `assert_equal` can only compare two things. For cases like `assert(A == B == C == D)` would you prefer 3 separate `assert_equal()` calls instead?",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T21:14:39Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90329419",
      "id" : 90329419,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 56,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10850450,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90329419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90329459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90329459"
         }
      },
      "body" : "Good idea, thanks.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T21:14:50Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])\n+\n+        # 0's (change plus fee) should be equal to 3's change\n+        assert(change[0] + result[0]['fee'] == change[3])\n+\n+        # 4's output should be equal to 5's (output plus fee)\n+        assert(output[4] == output[5] + result[5]['fee'])\n+\n+        # 4's (change plus fee) should be equal to 5's change\n+        assert(change[4] + result[4]['fee'] == change[5])\n+\n+        inputs = []\n+        addr0 = self.nodes[2].getnewaddress()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90329459",
      "id" : 90329459,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 68,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10850480,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90329459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90330791"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90330791"
         }
      },
      "body" : "Makes sense. In case something fails we have the verbose output.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T21:21:27Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90330791",
      "id" : 90330791,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 56,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10851766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90330791",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90344929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90344929"
         }
      },
      "body" : "I actually only meant to suggest using assert_equal for binary comparisons like the one on line 698. But if you wanted to use it more broadly, you could extend the function (in util.py) to accept more arguments:\r\n\r\n```\r\ndef assert_equal(thing1, thing2, *args):\r\n    if thing1 != thing2 or any(thing1 != arg for arg in args):\r\n        raise AssertionError(\"!(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\n```",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T22:36:44Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90344929",
      "id" : 90344929,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 56,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10865387,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90344929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90349350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90349350"
         }
      },
      "body" : "Would it be better to extend `assert_equal()` to take an arbitrary number of parameters and have it compare them pairwise? Something like this would work:\r\n\r\n    def assert_equal(thing1, thing2, *other_things, depth=0):\r\n        if thing1 != thing2:\r\n            if depth or other_things:\r\n                raise AssertionError(\"%s != %s (positions %d and %d)\"%(str(thing1),str(thing2), depth, depth+1))\r\n            else:\r\n                raise AssertionError(\"%s != %s\"%(str(thing1),str(thing2)))\r\n        if other_things:\r\n            assert_equal(thing2, *other_things, depth = depth + 1)\r\n\r\n    >>> assert_equal(4, 4, 5)\r\n    AssertionError: 4 != 5 (positions 1 and 2)\r\n",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T23:03:22Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90349350",
      "id" : 90349350,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 56,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10869787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90349350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90350152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90350152"
         }
      },
      "body" : "I missed your last comment. Your solution is obviously much more elegant.\r\n\r\nIs it acceptable to include a change like that in this pull request or should it be separate?",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T23:08:28Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90350152",
      "id" : 90350152,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 56,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10870569,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90350152",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90350993"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90350993"
         }
      },
      "body" : "Fine to include it here.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-11-30T23:14:43Z",
      "diff_hunk" : "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90350993",
      "id" : 90350993,
      "original_commit_id" : "6a41954895460a033afc352af5c137418591cc6b",
      "original_position" : 56,
      "path" : "qa/rpc-tests/fundrawtransaction.py",
      "position" : null,
      "pull_request_review_id" : 10871406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90350993",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90481671"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90481671"
         }
      },
      "body" : "@ryanofsky I like the idea but am a bit worried about the interaction of `subtractFeeFromPositions` and `changePosition`. It might not be clear to the user if the position marking is done before or after change output is added, or discount the wrong output by adding a `changePosition` argument.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-12-01T16:21:48Z",
      "diff_hunk" : "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90481671",
      "id" : 90481671,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 53,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 11000420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90481671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90495987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90495987"
         }
      },
      "body" : "At the time of running `fundrawtransaction` there is no change output, and the user wouldn't know where the change will be inserted, so the position marking must be done before the change output is added.\r\n\r\nI think since it is possible to add arbitrary hex output scripts which may not even have a corresponding address we need to be able to address the outputs by number rather than by address. It's also kind of ugly having to give the same address twice, once to createrawtransaction and then again to fundrawtransaction. I think using the output index (0 based) is cleaner.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-12-01T17:29:20Z",
      "diff_hunk" : "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90495987",
      "id" : 90495987,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 53,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 11015050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90495987",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90496821"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90496821"
         }
      },
      "body" : "@dooglus the user will \"know\" where change is going if they attempt to set the change index they're setting in the option, which is my point. It's not plainly clear how this should interact, unless you spell it out.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-12-01T17:33:43Z",
      "diff_hunk" : "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90496821",
      "id" : 90496821,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 53,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 11015883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90496821",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90516700"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90516700"
         }
      },
      "body" : "Oh, I see. So I should spell it out...\r\n\r\nI think it makes sense to use the position indices before the change output is added.",
      "commit_id" : "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
      "created_at" : "2016-12-01T19:18:35Z",
      "diff_hunk" : "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90516700",
      "id" : 90516700,
      "original_commit_id" : "64955cf43033ee93ea2462368270908bd2ab670a",
      "original_position" : 53,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 11036078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
      "updated_at" : "2016-12-06T08:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90516700",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "I've addressed all the review comments, rebased, squashed, and pushed the resulting commit.\r\n\r\nI'm wondering whether there's a potential issue with using integers to select which outputs to subtract the fee from, since the outputs are specified by a JSON dictionary, and dictionary keys are inherently unordered. Are we guaranteed when we `createrawtransaction '[]' '{\"a0\":1,\"a1\":1,\"a2\":1}'` that `a<n>` will be output `<n>`?",
      "created_at" : "2016-12-06T08:06:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265086138",
      "id" : 265086138,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-12-06T08:06:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265086138",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "@dooglus good point, I don't think so. Recently ran into this writing extended rpc tests for something.",
      "created_at" : "2016-12-06T13:16:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265147087",
      "id" : 265147087,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-12-06T13:16:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265147087",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "@instagibbs me too:\r\n\r\n    $ python3\r\n    Python 3.4.2\r\n\r\n    >>> [k for k in {'a':1,'b':2,'c':3,'d':1,'e':1,'f':1}]\r\n    ['c', 'd', 'f', 'b', 'e', 'a']\r\n\r\nSince the input to `fundrawtransaction` is a raw transaction with its outputs already serialized this is less of an issue. But I tend to string my RPC calls together and expect the outputs to be serialized in the order I type them to `createrawtransaction`. They always do seem to be in the correct order except when using Python.",
      "created_at" : "2016-12-06T18:07:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265225116",
      "id" : 265225116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-12-06T18:07:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265225116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "I don't think objects in JSON are assumed to have a meaningful ordering.\n",
      "created_at" : "2016-12-06T18:10:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265226157",
      "id" : 265226157,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-12-06T18:10:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265226157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@dooglus For python you'd have to `import OrderedDict` (see #7980) but I don't think there is an ordered dict for json, so we should not rely on the order.",
      "created_at" : "2016-12-06T18:30:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265231553",
      "id" : 265231553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
      "updated_at" : "2016-12-06T18:30:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265231553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
