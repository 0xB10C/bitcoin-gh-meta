[
   {
      "body" : "Concept ACK. Please remove the parameter interaction code from init; it seems you forgot to do this.",
      "created_at" : "2016-03-15T12:26:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7691#issuecomment-196797425",
      "id" : 196797425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7691",
      "updated_at" : "2016-03-15T12:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196797425",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "@MarcoFalke: thanks! Fixed.",
      "created_at" : "2016-03-15T12:37:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7691#issuecomment-196801028",
      "id" : 196801028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7691",
      "updated_at" : "2016-03-15T12:37:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196801028",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "New warning:\r\n```\r\nwallet/wallet.cpp:3222:1: warning: control may reach end of non-void function [-Wreturn-type]\r\n}\r\n^\r\n1 warning generated.\r\n```",
      "created_at" : "2016-03-15T19:42:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7691#issuecomment-196990354",
      "id" : 196990354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7691",
      "updated_at" : "2016-03-15T19:42:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196990354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "Could ```CWallet::ParameterInteraction()``` take a ```const std::map<std::string, std::string>& mapArgs``` as parameter instead of using the mapArgs global from util.h  like in https://github.com/jtimon/bitcoin/commit/3d03f15126b79bd9f22ccd27f1d8ca43d9e16bf5 ?\r\n\r\nIn fact, I believe I got the idea from one of your older versions of this (and then @luke-jr suggested some improvements to std::vector<std::pair<std::string, std::string> > CStandardPolicy::GetOptionsHelp() that would allow him to create generic forms in qt that automatically extend themselves when new options are added).\r\n\r\nConcept ACK",
      "created_at" : "2016-03-16T18:27:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7691#issuecomment-197473358",
      "id" : 197473358,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7691",
      "updated_at" : "2016-03-16T18:33:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197473358",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7691#discussion_r56389752"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7691"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56389752"
         }
      },
      "body" : "Why static instead of calling it from the pwalletMain global (which could be moved to wallet)?\r\nOr are we turning the global into a singleton?",
      "commit_id" : "b87c44b6eb3050181d3ac6d8258b98557be9037c",
      "created_at" : "2016-03-16T18:30:38Z",
      "diff_hunk" : "@@ -875,8 +877,11 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     /* Returns the wallets help message */\n     static std::string GetWalletHelpString(bool showDebug);\n \n-    /* initializes the wallet, returns a new CWallet instance or a null pointer in case of an error */\n-    static CWallet* InitLoadWallet(bool fDisableWallet, const std::string& strWalletFile, std::string& warningString, std::string& errorString);\n+    /* Initializes the wallet, returns a new CWallet instance or a null pointer in case of an error */\n+    static bool InitLoadWallet();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7691#discussion_r56389752",
      "id" : 56389752,
      "original_commit_id" : "0a624e02660404dfa2f289a7339d5c82b8745c15",
      "original_position" : 25,
      "path" : "src/wallet/wallet.h",
      "position" : 25,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7691",
      "updated_at" : "2016-03-17T12:10:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56389752",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7691#discussion_r56466945"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7691"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56466945"
         }
      },
      "body" : "> Why static instead of calling it from the pwalletMain global (which could be moved to wallet)?\r\n> Or are we turning the global into a singleton?\r\n\r\nRight. This is the direction where I'm heading to. But I work in very tiny steps (as you can see). For now it just moves \"static code\" to a static function in CWallet. Later it should be within the `pwalletMain` context.",
      "commit_id" : "b87c44b6eb3050181d3ac6d8258b98557be9037c",
      "created_at" : "2016-03-17T07:57:41Z",
      "diff_hunk" : "@@ -875,8 +877,11 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     /* Returns the wallets help message */\n     static std::string GetWalletHelpString(bool showDebug);\n \n-    /* initializes the wallet, returns a new CWallet instance or a null pointer in case of an error */\n-    static CWallet* InitLoadWallet(bool fDisableWallet, const std::string& strWalletFile, std::string& warningString, std::string& errorString);\n+    /* Initializes the wallet, returns a new CWallet instance or a null pointer in case of an error */\n+    static bool InitLoadWallet();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7691#discussion_r56466945",
      "id" : 56466945,
      "original_commit_id" : "0a624e02660404dfa2f289a7339d5c82b8745c15",
      "original_position" : 25,
      "path" : "src/wallet/wallet.h",
      "position" : 25,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7691",
      "updated_at" : "2016-03-17T12:10:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56466945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7691#discussion_r56483765"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7691"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56483765"
         }
      },
      "body" : "You can't drop the return value here.",
      "commit_id" : "b87c44b6eb3050181d3ac6d8258b98557be9037c",
      "created_at" : "2016-03-17T10:32:07Z",
      "diff_hunk" : "@@ -946,56 +943,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     nBytesPerSigOp = GetArg(\"-bytespersigop\", nBytesPerSigOp);\n \n #ifdef ENABLE_WALLET\n-    if (mapArgs.count(\"-mintxfee\"))\n-    {\n-        CAmount n = 0;\n-        if (ParseMoney(mapArgs[\"-mintxfee\"], n) && n > 0)\n-            CWallet::minTxFee = CFeeRate(n);\n-        else\n-            return InitError(AmountErrMsg(\"mintxfee\", mapArgs[\"-mintxfee\"]));\n-    }\n-    if (mapArgs.count(\"-fallbackfee\"))\n-    {\n-        CAmount nFeePerK = 0;\n-        if (!ParseMoney(mapArgs[\"-fallbackfee\"], nFeePerK))\n-            return InitError(strprintf(_(\"Invalid amount for -fallbackfee=<amount>: '%s'\"), mapArgs[\"-fallbackfee\"]));\n-        if (nFeePerK > HIGH_TX_FEE_PER_KB)\n-            InitWarning(_(\"-fallbackfee is set very high! This is the transaction fee you may pay when fee estimates are not available.\"));\n-        CWallet::fallbackFee = CFeeRate(nFeePerK);\n-    }\n-    if (mapArgs.count(\"-paytxfee\"))\n-    {\n-        CAmount nFeePerK = 0;\n-        if (!ParseMoney(mapArgs[\"-paytxfee\"], nFeePerK))\n-            return InitError(AmountErrMsg(\"paytxfee\", mapArgs[\"-paytxfee\"]));\n-        if (nFeePerK > HIGH_TX_FEE_PER_KB)\n-            InitWarning(_(\"-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n-        payTxFee = CFeeRate(nFeePerK, 1000);\n-        if (payTxFee < ::minRelayTxFee)\n-        {\n-            return InitError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s' (must be at least %s)\"),\n-                                       mapArgs[\"-paytxfee\"], ::minRelayTxFee.ToString()));\n-        }\n-    }\n-    if (mapArgs.count(\"-maxtxfee\"))\n-    {\n-        CAmount nMaxFee = 0;\n-        if (!ParseMoney(mapArgs[\"-maxtxfee\"], nMaxFee))\n-            return InitError(AmountErrMsg(\"maxtxfee\", mapArgs[\"-maxtxfee\"]));\n-        if (nMaxFee > HIGH_MAX_TX_FEE)\n-            InitWarning(_(\"-maxtxfee is set very high! Fees this large could be paid on a single transaction.\"));\n-        maxTxFee = nMaxFee;\n-        if (CFeeRate(maxTxFee, 1000) < ::minRelayTxFee)\n-        {\n-            return InitError(strprintf(_(\"Invalid amount for -maxtxfee=<amount>: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)\"),\n-                                       mapArgs[\"-maxtxfee\"], ::minRelayTxFee.ToString()));\n-        }\n-    }\n-    nTxConfirmTarget = GetArg(\"-txconfirmtarget\", DEFAULT_TX_CONFIRM_TARGET);\n-    bSpendZeroConfChange = GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n-    fSendFreeTransactions = GetBoolArg(\"-sendfreetransactions\", DEFAULT_SEND_FREE_TRANSACTIONS);\n-\n-    std::string strWalletFile = GetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n+    CWallet::ParameterInteraction();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7691#discussion_r56483765",
      "id" : 56483765,
      "original_commit_id" : "93df3082c2e238cf93978e7ebf276dd88bb059aa",
      "original_position" : 64,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7691",
      "updated_at" : "2016-03-17T12:10:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56483765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7691#discussion_r56493737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7691"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56493737"
         }
      },
      "body" : "Right. Fixed.",
      "commit_id" : "b87c44b6eb3050181d3ac6d8258b98557be9037c",
      "created_at" : "2016-03-17T12:10:49Z",
      "diff_hunk" : "@@ -946,56 +943,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     nBytesPerSigOp = GetArg(\"-bytespersigop\", nBytesPerSigOp);\n \n #ifdef ENABLE_WALLET\n-    if (mapArgs.count(\"-mintxfee\"))\n-    {\n-        CAmount n = 0;\n-        if (ParseMoney(mapArgs[\"-mintxfee\"], n) && n > 0)\n-            CWallet::minTxFee = CFeeRate(n);\n-        else\n-            return InitError(AmountErrMsg(\"mintxfee\", mapArgs[\"-mintxfee\"]));\n-    }\n-    if (mapArgs.count(\"-fallbackfee\"))\n-    {\n-        CAmount nFeePerK = 0;\n-        if (!ParseMoney(mapArgs[\"-fallbackfee\"], nFeePerK))\n-            return InitError(strprintf(_(\"Invalid amount for -fallbackfee=<amount>: '%s'\"), mapArgs[\"-fallbackfee\"]));\n-        if (nFeePerK > HIGH_TX_FEE_PER_KB)\n-            InitWarning(_(\"-fallbackfee is set very high! This is the transaction fee you may pay when fee estimates are not available.\"));\n-        CWallet::fallbackFee = CFeeRate(nFeePerK);\n-    }\n-    if (mapArgs.count(\"-paytxfee\"))\n-    {\n-        CAmount nFeePerK = 0;\n-        if (!ParseMoney(mapArgs[\"-paytxfee\"], nFeePerK))\n-            return InitError(AmountErrMsg(\"paytxfee\", mapArgs[\"-paytxfee\"]));\n-        if (nFeePerK > HIGH_TX_FEE_PER_KB)\n-            InitWarning(_(\"-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n-        payTxFee = CFeeRate(nFeePerK, 1000);\n-        if (payTxFee < ::minRelayTxFee)\n-        {\n-            return InitError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s' (must be at least %s)\"),\n-                                       mapArgs[\"-paytxfee\"], ::minRelayTxFee.ToString()));\n-        }\n-    }\n-    if (mapArgs.count(\"-maxtxfee\"))\n-    {\n-        CAmount nMaxFee = 0;\n-        if (!ParseMoney(mapArgs[\"-maxtxfee\"], nMaxFee))\n-            return InitError(AmountErrMsg(\"maxtxfee\", mapArgs[\"-maxtxfee\"]));\n-        if (nMaxFee > HIGH_MAX_TX_FEE)\n-            InitWarning(_(\"-maxtxfee is set very high! Fees this large could be paid on a single transaction.\"));\n-        maxTxFee = nMaxFee;\n-        if (CFeeRate(maxTxFee, 1000) < ::minRelayTxFee)\n-        {\n-            return InitError(strprintf(_(\"Invalid amount for -maxtxfee=<amount>: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)\"),\n-                                       mapArgs[\"-maxtxfee\"], ::minRelayTxFee.ToString()));\n-        }\n-    }\n-    nTxConfirmTarget = GetArg(\"-txconfirmtarget\", DEFAULT_TX_CONFIRM_TARGET);\n-    bSpendZeroConfChange = GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n-    fSendFreeTransactions = GetBoolArg(\"-sendfreetransactions\", DEFAULT_SEND_FREE_TRANSACTIONS);\n-\n-    std::string strWalletFile = GetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n+    CWallet::ParameterInteraction();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7691#discussion_r56493737",
      "id" : 56493737,
      "original_commit_id" : "93df3082c2e238cf93978e7ebf276dd88bb059aa",
      "original_position" : 64,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7691",
      "updated_at" : "2016-03-17T12:10:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56493737",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   }
]
