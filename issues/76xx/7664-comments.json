[
   {
      "body" : "Agree with @morcos.\r\nSomething we might want to work towards is a flexible/modular Coinselection. Coinselection somehow depends on the use cases and could be modular therefore.\r\n\r\nWe could allow different coin selection classes (some OO magic / interfacing) and allow to select them in `fundrawtransaction` or over a global state only adjustable on startup `-coinselection=*class*`.\r\n\r\nBitcoinj has a similar approach. ",
      "created_at" : "2016-03-10T08:09:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-194724049",
      "id" : 194724049,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-10T08:09:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/194724049",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "In my experience the biggest impediment to doing anything with coin selection is the current testing approach that simply fail if anything changes at all. So when you intend to change it you just get a pile of failures and nothing that tells you if the change is behaving sanely.\r\n\r\nI don't see any problem to having a selection, but I'm somewhat doubtful of the utility. Having a selection doesn't replace having a _good_ default-- and right now we don't even have a good default; and most of the time the user actually doesn't really much useful information here (nothing the user would call a \"use case\" probably directly translates into the right strategy)-- keep in mind that most users have no idea about the underlying \"coins\" behavior in the system.\r\n\r\nPerhaps the primary strategy distinguisher would be the importance of privacy-- e.g. should sweeping be kept to \"do no privacy harm\" levels, or more aggressive-- but the user is often poorly equipt to weigh the privacy considerations (e.g. don't what their future risks are, and may not know how powerful transaction analysis is), nor are they usually able to weigh the privacy impacts on their counterparties or the ecosystem as a whole.\r\n\r\nAnother thing to keep in mind is that implementation of GROUPCHECKSIGVERIFY would make strategies that try to spend many inputs at once much more attractive. (beyond the argument I've made before that you generally want to pay fees sooner rather than later, since fees tend to go up over time)",
      "created_at" : "2016-03-10T08:42:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-194737702",
      "id" : 194737702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-10T08:42:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/194737702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "One untested idea that I haven't seen suggested before (quite possibly because I'm overlooking something): try minimize the value of the change output. If it's less than the dust-threshold, it can be safely omitted and donated to miners. \r\n\r\nIt should help keep the unspent set in check, while generating outputs that are actually useful for the next transaction(s). It also has the actively trying to avoid sourcing pointlessly large inputs (which are best saved for another transaction, especially if the user is sending multiple transactions before the next block confirms), and will also help create outputs which are useful for sending exact-change.\r\n\r\nThe biggest disadvantage I can see, is it'll tend to make the change very distinguishable from the destination, but that's a problem that already exists.",
      "created_at" : "2016-03-10T19:40:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-195014247",
      "id" : 195014247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-10T19:40:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195014247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9326759?v=3",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "body" : "@RHavar technically thats what Bitcoin has always done. The subset sum tries to minimize the change (which generally minimizes the input set), and tiny amounts of change are just turned to fees.  This has a bad behavior though of often resulting in small change (though above the threshold), which is not very useful for spending in the future; so big coins get spent and ground down to near-dust. \r\n\r\nSee ApproximateBestSubset in wallet.cpp.\r\n\r\n",
      "created_at" : "2016-03-10T20:11:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-195027152",
      "id" : 195027152,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-10T20:11:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195027152",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "#1643 should also be mentioned here. Bad coin selection with lots of small outputs has been a long-running issue.",
      "created_at" : "2016-03-11T08:05:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-195245333",
      "id" : 195245333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-11T08:05:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195245333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
