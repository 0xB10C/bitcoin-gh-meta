[
   {
      "body" : "Concept ACK.\r\nNeeds rebase.",
      "created_at" : "2016-03-15T09:47:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-196744657",
      "id" : 196744657,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-15T09:47:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196744657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Concept ACK",
      "created_at" : "2016-03-15T09:54:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-196746530",
      "id" : 196746530,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-15T09:54:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196746530",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "@jonasschnelli rebased",
      "created_at" : "2016-03-15T10:42:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-196761477",
      "id" : 196761477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-15T10:42:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196761477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "Concept ACK. I had an earlier try at this with #6260, but tt's good that there is an alternative in the form of a mailing list now - that was pretty much the only concern.",
      "created_at" : "2016-03-15T14:06:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-196836021",
      "id" : 196836021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-15T14:24:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196836021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7692#discussion_r56223697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56223697"
         }
      },
      "body" : "New line deleted.",
      "commit_id" : "535be2ac32748d81dfd45ac9b8046196c8aed19a",
      "created_at" : "2016-03-15T19:15:01Z",
      "diff_hunk" : "@@ -4,253 +4,76 @@\n \n // Unit tests for alert system\n \n-#include \"alert.h\"\n-#include \"chain.h\"\n #include \"chainparams.h\"\n-#include \"clientversion.h\"\n-#include \"data/alertTests.raw.h\"\n #include \"main.h\" // For PartitionCheck\n-#include \"serialize.h\"\n-#include \"streams.h\"\n-#include \"utilstrencodings.h\"\n \n #include \"test/testutil.h\"\n #include \"test/test_bitcoin.h\"\n \n-#include <fstream>\n-\n-#include <boost/filesystem/operations.hpp>\n-#include <boost/foreach.hpp>\n #include <boost/test/unit_test.hpp>\n \n-#if 0\n-//\n-// alertTests contains 7 alerts, generated with this code:\n-// (SignAndSave code not shown, alert signing key is secret)\n-//\n-{\n-    CAlert alert;\n-    alert.nRelayUntil   = 60;\n-    alert.nExpiration   = 24 * 60 * 60;\n-    alert.nID           = 1;\n-    alert.nCancel       = 0;   // cancels previous messages up to this ID number\n-    alert.nMinVer       = 0;  // These versions are protocol versions\n-    alert.nMaxVer       = 999001;\n-    alert.nPriority     = 1;\n-    alert.strComment    = \"Alert comment\";\n-    alert.strStatusBar  = \"Alert 1\";\n-\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    alert.setSubVer.insert(std::string(\"/Satoshi:0.1.0/\"));\n-    alert.strStatusBar  = \"Alert 1 for Satoshi 0.1.0\";\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    alert.setSubVer.insert(std::string(\"/Satoshi:0.2.0/\"));\n-    alert.strStatusBar  = \"Alert 1 for Satoshi 0.1.0, 0.2.0\";\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    alert.setSubVer.clear();\n-    ++alert.nID;\n-    alert.nCancel = 1;\n-    alert.nPriority = 100;\n-    alert.strStatusBar  = \"Alert 2, cancels 1\";\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    alert.nExpiration += 60;\n-    ++alert.nID;\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    ++alert.nID;\n-    alert.nMinVer = 11;\n-    alert.nMaxVer = 22;\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    ++alert.nID;\n-    alert.strStatusBar  = \"Alert 2 for Satoshi 0.1.0\";\n-    alert.setSubVer.insert(std::string(\"/Satoshi:0.1.0/\"));\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    ++alert.nID;\n-    alert.nMinVer = 0;\n-    alert.nMaxVer = 999999;\n-    alert.strStatusBar  = \"Evil Alert'; /bin/ls; echo '\";\n-    alert.setSubVer.clear();\n-    SignAndSave(alert, \"test/alertTests\");\n-}\n-#endif\n-\n-struct ReadAlerts : public TestingSetup\n-{\n-    ReadAlerts()\n-    {\n-        std::vector<unsigned char> vch(alert_tests::alertTests, alert_tests::alertTests + sizeof(alert_tests::alertTests));\n-        CDataStream stream(vch, SER_DISK, CLIENT_VERSION);\n-        try {\n-            while (!stream.eof())\n-            {\n-                CAlert alert;\n-                stream >> alert;\n-                alerts.push_back(alert);\n-            }\n-        }\n-        catch (const std::exception&) { }\n-    }\n-    ~ReadAlerts() { }\n-\n-    static std::vector<std::string> read_lines(boost::filesystem::path filepath)\n-    {\n-        std::vector<std::string> result;\n-\n-        std::ifstream f(filepath.string().c_str());\n-        std::string line;\n-        while (std::getline(f,line))\n-            result.push_back(line);\n-\n-        return result;\n-    }\n-\n-    std::vector<CAlert> alerts;\n-};\n-\n-BOOST_FIXTURE_TEST_SUITE(Alert_tests, ReadAlerts)\n-\n-\n-BOOST_AUTO_TEST_CASE(AlertApplies)\n-{\n-    SetMockTime(11);\n-    const std::vector<unsigned char>& alertKey = Params(CBaseChainParams::MAIN).AlertKey();\n-\n-    BOOST_FOREACH(const CAlert& alert, alerts)\n-    {\n-        BOOST_CHECK(alert.CheckSignature(alertKey));\n-    }\n-\n-    BOOST_CHECK(alerts.size() >= 3);\n-\n-    // Matches:\n-    BOOST_CHECK(alerts[0].AppliesTo(1, \"\"));\n-    BOOST_CHECK(alerts[0].AppliesTo(999001, \"\"));\n-    BOOST_CHECK(alerts[0].AppliesTo(1, \"/Satoshi:11.11.11/\"));\n+BOOST_FIXTURE_TEST_SUITE(Alert_tests, TestingSetup)\n \n-    BOOST_CHECK(alerts[1].AppliesTo(1, \"/Satoshi:0.1.0/\"));\n-    BOOST_CHECK(alerts[1].AppliesTo(999001, \"/Satoshi:0.1.0/\"));\n-\n-    BOOST_CHECK(alerts[2].AppliesTo(1, \"/Satoshi:0.1.0/\"));\n-    BOOST_CHECK(alerts[2].AppliesTo(1, \"/Satoshi:0.2.0/\"));\n-\n-    // Don't match:\n-    BOOST_CHECK(!alerts[0].AppliesTo(-1, \"\"));\n-    BOOST_CHECK(!alerts[0].AppliesTo(999002, \"\"));\n-\n-    BOOST_CHECK(!alerts[1].AppliesTo(1, \"\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(1, \"Satoshi:0.1.0\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(1, \"/Satoshi:0.1.0\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(1, \"Satoshi:0.1.0/\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(-1, \"/Satoshi:0.1.0/\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(999002, \"/Satoshi:0.1.0/\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(1, \"/Satoshi:0.2.0/\"));\n-\n-    BOOST_CHECK(!alerts[2].AppliesTo(1, \"/Satoshi:0.3.0/\"));\n-\n-    SetMockTime(0);\n-}\n-\n-\n-BOOST_AUTO_TEST_CASE(AlertNotify)\n-{\n-    SetMockTime(11);\n-    const std::vector<unsigned char>& alertKey = Params(CBaseChainParams::MAIN).AlertKey();\n-\n-    boost::filesystem::path temp = GetTempPath() /\n-        boost::filesystem::unique_path(\"alertnotify-%%%%.txt\");\n-\n-    mapArgs[\"-alertnotify\"] = std::string(\"echo %s >> \") + temp.string();\n-\n-    BOOST_FOREACH(CAlert alert, alerts)\n-        alert.ProcessAlert(alertKey, false);\n-\n-    std::vector<std::string> r = read_lines(temp);\n-    BOOST_CHECK_EQUAL(r.size(), 4u);\n-\n-// Windows built-in echo semantics are different than posixy shells. Quotes and\n-// whitespace are printed literally.\n-\n-#ifndef WIN32\n-    BOOST_CHECK_EQUAL(r[0], \"Alert 1\");\n-    BOOST_CHECK_EQUAL(r[1], \"Alert 2, cancels 1\");\n-    BOOST_CHECK_EQUAL(r[2], \"Alert 2, cancels 1\");\n-    BOOST_CHECK_EQUAL(r[3], \"Evil Alert; /bin/ls; echo \"); // single-quotes should be removed\n-#else\n-    BOOST_CHECK_EQUAL(r[0], \"'Alert 1' \");\n-    BOOST_CHECK_EQUAL(r[1], \"'Alert 2, cancels 1' \");\n-    BOOST_CHECK_EQUAL(r[2], \"'Alert 2, cancels 1' \");\n-    BOOST_CHECK_EQUAL(r[3], \"'Evil Alert; /bin/ls; echo ' \");\n-#endif\n-    boost::filesystem::remove(temp);\n-\n-    SetMockTime(0);\n-}\n \n static bool falseFunc() { return false; }\n \n BOOST_AUTO_TEST_CASE(PartitionAlert)\n-{\n-    // Test PartitionCheck\n-    CCriticalSection csDummy;\n-    CBlockIndex indexDummy[100];\n-    CChainParams& params = Params(CBaseChainParams::MAIN);\n-    int64_t nPowTargetSpacing = params.GetConsensus().nPowTargetSpacing;\n-\n-    // Generate fake blockchain timestamps relative to\n-    // an arbitrary time:\n-    int64_t now = 1427379054;\n-    SetMockTime(now);\n-    for (int i = 0; i < 100; i++)\n-    {\n-        indexDummy[i].phashBlock = NULL;\n-        if (i == 0) indexDummy[i].pprev = NULL;\n-        else indexDummy[i].pprev = &indexDummy[i-1];\n-        indexDummy[i].nHeight = i;\n-        indexDummy[i].nTime = now - (100-i)*nPowTargetSpacing;\n-        // Other members don't matter, the partition check code doesn't\n-        // use them\n-    }\n-\n-    strMiscWarning = \"\";\n-\n-    // Test 1: chain with blocks every nPowTargetSpacing seconds,\n-    // as normal, no worries:\n-    PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n-    BOOST_CHECK_MESSAGE(strMiscWarning.empty(), strMiscWarning);\n-\n-    // Test 2: go 3.5 hours without a block, expect a warning:\n-    now += 3*60*60+30*60;\n-    SetMockTime(now);\n-    PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n-    BOOST_CHECK(!strMiscWarning.empty());\n-    BOOST_TEST_MESSAGE(std::string(\"Got alert text: \")+strMiscWarning);\n-    strMiscWarning = \"\";\n-\n-    // Test 3: test the \"partition alerts only go off once per day\"\n-    // code:\n-    now += 60*10;\n-    SetMockTime(now);\n-    PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n-    BOOST_CHECK(strMiscWarning.empty());\n+        {\n+                // Test PartitionCheck\n+                CCriticalSection csDummy;\n+        CBlockIndex indexDummy[100];\n+        CChainParams& params = Params(CBaseChainParams::MAIN);\n+        int64_t nPowTargetSpacing = params.GetConsensus().nPowTargetSpacing;\n+\n+        // Generate fake blockchain timestamps relative to\n+        // an arbitrary time:\n+        int64_t now = 1427379054;\n+        SetMockTime(now);\n+        for (int i = 0; i < 100; i++)\n+        {\n+            indexDummy[i].phashBlock = NULL;\n+            if (i == 0) indexDummy[i].pprev = NULL;\n+            else indexDummy[i].pprev = &indexDummy[i-1];\n+            indexDummy[i].nHeight = i;\n+            indexDummy[i].nTime = now - (100-i)*nPowTargetSpacing;\n+            // Other members don't matter, the partition check code doesn't\n+            // use them\n+        }\n \n-    // Test 4: get 2.5 times as many blocks as expected:\n-    now += 60*60*24; // Pretend it is a day later\n-    SetMockTime(now);\n-    int64_t quickSpacing = nPowTargetSpacing*2/5;\n-    for (int i = 0; i < 100; i++) // Tweak chain timestamps:\n+        strMiscWarning = \"\";\n+\n+        // Test 1: chain with blocks every nPowTargetSpacing seconds,\n+        // as normal, no worries:\n+        PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n+        BOOST_CHECK_MESSAGE(strMiscWarning.empty(), strMiscWarning);\n+\n+        // Test 2: go 3.5 hours without a block, expect a warning:\n+        now += 3*60*60+30*60;\n+        SetMockTime(now);\n+        PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n+        BOOST_CHECK(!strMiscWarning.empty());\n+        BOOST_TEST_MESSAGE(std::string(\"Got alert text: \")+strMiscWarning);\n+        strMiscWarning = \"\";\n+\n+        // Test 3: test the \"partition alerts only go off once per day\"\n+        // code:\n+        now += 60*10;\n+        SetMockTime(now);\n+        PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n+        BOOST_CHECK(strMiscWarning.empty());\n+\n+        // Test 4: get 2.5 times as many blocks as expected:\n+        now += 60*60*24; // Pretend it is a day later\n+        SetMockTime(now);\n+        int64_t quickSpacing = nPowTargetSpacing*2/5;\n+        for (int i = 0; i < 100; i++) // Tweak chain timestamps:\n         indexDummy[i].nTime = now - (100-i)*quickSpacing;\n-    PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n-    BOOST_CHECK(!strMiscWarning.empty());\n-    BOOST_TEST_MESSAGE(std::string(\"Got alert text: \")+strMiscWarning);\n-    strMiscWarning = \"\";\n+        PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n+        BOOST_CHECK(!strMiscWarning.empty());\n+        BOOST_TEST_MESSAGE(std::string(\"Got alert text: \")+strMiscWarning);\n+        strMiscWarning = \"\";\n \n-    SetMockTime(0);\n-}\n+        SetMockTime(0);\n+        }\n \n-BOOST_AUTO_TEST_SUITE_END()\n+BOOST_AUTO_TEST_SUITE_END()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#discussion_r56223697",
      "id" : 56223697,
      "original_commit_id" : "535be2ac32748d81dfd45ac9b8046196c8aed19a",
      "original_position" : 309,
      "path" : "src/test/alert_tests.cpp",
      "position" : 309,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7692",
      "updated_at" : "2016-03-15T19:15:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56223697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7692#discussion_r56223889"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56223889"
         }
      },
      "body" : "Some wild editing was done in this file? Please check `git diff -w`. It can help to clean it.\r\n",
      "commit_id" : "535be2ac32748d81dfd45ac9b8046196c8aed19a",
      "created_at" : "2016-03-15T19:16:12Z",
      "diff_hunk" : "@@ -4,253 +4,76 @@\n \n // Unit tests for alert system\n \n-#include \"alert.h\"\n-#include \"chain.h\"\n #include \"chainparams.h\"\n-#include \"clientversion.h\"\n-#include \"data/alertTests.raw.h\"\n #include \"main.h\" // For PartitionCheck\n-#include \"serialize.h\"\n-#include \"streams.h\"\n-#include \"utilstrencodings.h\"\n \n #include \"test/testutil.h\"\n #include \"test/test_bitcoin.h\"\n \n-#include <fstream>\n-\n-#include <boost/filesystem/operations.hpp>\n-#include <boost/foreach.hpp>\n #include <boost/test/unit_test.hpp>\n \n-#if 0\n-//\n-// alertTests contains 7 alerts, generated with this code:\n-// (SignAndSave code not shown, alert signing key is secret)\n-//\n-{\n-    CAlert alert;\n-    alert.nRelayUntil   = 60;\n-    alert.nExpiration   = 24 * 60 * 60;\n-    alert.nID           = 1;\n-    alert.nCancel       = 0;   // cancels previous messages up to this ID number\n-    alert.nMinVer       = 0;  // These versions are protocol versions\n-    alert.nMaxVer       = 999001;\n-    alert.nPriority     = 1;\n-    alert.strComment    = \"Alert comment\";\n-    alert.strStatusBar  = \"Alert 1\";\n-\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    alert.setSubVer.insert(std::string(\"/Satoshi:0.1.0/\"));\n-    alert.strStatusBar  = \"Alert 1 for Satoshi 0.1.0\";\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    alert.setSubVer.insert(std::string(\"/Satoshi:0.2.0/\"));\n-    alert.strStatusBar  = \"Alert 1 for Satoshi 0.1.0, 0.2.0\";\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    alert.setSubVer.clear();\n-    ++alert.nID;\n-    alert.nCancel = 1;\n-    alert.nPriority = 100;\n-    alert.strStatusBar  = \"Alert 2, cancels 1\";\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    alert.nExpiration += 60;\n-    ++alert.nID;\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    ++alert.nID;\n-    alert.nMinVer = 11;\n-    alert.nMaxVer = 22;\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    ++alert.nID;\n-    alert.strStatusBar  = \"Alert 2 for Satoshi 0.1.0\";\n-    alert.setSubVer.insert(std::string(\"/Satoshi:0.1.0/\"));\n-    SignAndSave(alert, \"test/alertTests\");\n-\n-    ++alert.nID;\n-    alert.nMinVer = 0;\n-    alert.nMaxVer = 999999;\n-    alert.strStatusBar  = \"Evil Alert'; /bin/ls; echo '\";\n-    alert.setSubVer.clear();\n-    SignAndSave(alert, \"test/alertTests\");\n-}\n-#endif\n-\n-struct ReadAlerts : public TestingSetup\n-{\n-    ReadAlerts()\n-    {\n-        std::vector<unsigned char> vch(alert_tests::alertTests, alert_tests::alertTests + sizeof(alert_tests::alertTests));\n-        CDataStream stream(vch, SER_DISK, CLIENT_VERSION);\n-        try {\n-            while (!stream.eof())\n-            {\n-                CAlert alert;\n-                stream >> alert;\n-                alerts.push_back(alert);\n-            }\n-        }\n-        catch (const std::exception&) { }\n-    }\n-    ~ReadAlerts() { }\n-\n-    static std::vector<std::string> read_lines(boost::filesystem::path filepath)\n-    {\n-        std::vector<std::string> result;\n-\n-        std::ifstream f(filepath.string().c_str());\n-        std::string line;\n-        while (std::getline(f,line))\n-            result.push_back(line);\n-\n-        return result;\n-    }\n-\n-    std::vector<CAlert> alerts;\n-};\n-\n-BOOST_FIXTURE_TEST_SUITE(Alert_tests, ReadAlerts)\n-\n-\n-BOOST_AUTO_TEST_CASE(AlertApplies)\n-{\n-    SetMockTime(11);\n-    const std::vector<unsigned char>& alertKey = Params(CBaseChainParams::MAIN).AlertKey();\n-\n-    BOOST_FOREACH(const CAlert& alert, alerts)\n-    {\n-        BOOST_CHECK(alert.CheckSignature(alertKey));\n-    }\n-\n-    BOOST_CHECK(alerts.size() >= 3);\n-\n-    // Matches:\n-    BOOST_CHECK(alerts[0].AppliesTo(1, \"\"));\n-    BOOST_CHECK(alerts[0].AppliesTo(999001, \"\"));\n-    BOOST_CHECK(alerts[0].AppliesTo(1, \"/Satoshi:11.11.11/\"));\n+BOOST_FIXTURE_TEST_SUITE(Alert_tests, TestingSetup)\n \n-    BOOST_CHECK(alerts[1].AppliesTo(1, \"/Satoshi:0.1.0/\"));\n-    BOOST_CHECK(alerts[1].AppliesTo(999001, \"/Satoshi:0.1.0/\"));\n-\n-    BOOST_CHECK(alerts[2].AppliesTo(1, \"/Satoshi:0.1.0/\"));\n-    BOOST_CHECK(alerts[2].AppliesTo(1, \"/Satoshi:0.2.0/\"));\n-\n-    // Don't match:\n-    BOOST_CHECK(!alerts[0].AppliesTo(-1, \"\"));\n-    BOOST_CHECK(!alerts[0].AppliesTo(999002, \"\"));\n-\n-    BOOST_CHECK(!alerts[1].AppliesTo(1, \"\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(1, \"Satoshi:0.1.0\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(1, \"/Satoshi:0.1.0\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(1, \"Satoshi:0.1.0/\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(-1, \"/Satoshi:0.1.0/\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(999002, \"/Satoshi:0.1.0/\"));\n-    BOOST_CHECK(!alerts[1].AppliesTo(1, \"/Satoshi:0.2.0/\"));\n-\n-    BOOST_CHECK(!alerts[2].AppliesTo(1, \"/Satoshi:0.3.0/\"));\n-\n-    SetMockTime(0);\n-}\n-\n-\n-BOOST_AUTO_TEST_CASE(AlertNotify)\n-{\n-    SetMockTime(11);\n-    const std::vector<unsigned char>& alertKey = Params(CBaseChainParams::MAIN).AlertKey();\n-\n-    boost::filesystem::path temp = GetTempPath() /\n-        boost::filesystem::unique_path(\"alertnotify-%%%%.txt\");\n-\n-    mapArgs[\"-alertnotify\"] = std::string(\"echo %s >> \") + temp.string();\n-\n-    BOOST_FOREACH(CAlert alert, alerts)\n-        alert.ProcessAlert(alertKey, false);\n-\n-    std::vector<std::string> r = read_lines(temp);\n-    BOOST_CHECK_EQUAL(r.size(), 4u);\n-\n-// Windows built-in echo semantics are different than posixy shells. Quotes and\n-// whitespace are printed literally.\n-\n-#ifndef WIN32\n-    BOOST_CHECK_EQUAL(r[0], \"Alert 1\");\n-    BOOST_CHECK_EQUAL(r[1], \"Alert 2, cancels 1\");\n-    BOOST_CHECK_EQUAL(r[2], \"Alert 2, cancels 1\");\n-    BOOST_CHECK_EQUAL(r[3], \"Evil Alert; /bin/ls; echo \"); // single-quotes should be removed\n-#else\n-    BOOST_CHECK_EQUAL(r[0], \"'Alert 1' \");\n-    BOOST_CHECK_EQUAL(r[1], \"'Alert 2, cancels 1' \");\n-    BOOST_CHECK_EQUAL(r[2], \"'Alert 2, cancels 1' \");\n-    BOOST_CHECK_EQUAL(r[3], \"'Evil Alert; /bin/ls; echo ' \");\n-#endif\n-    boost::filesystem::remove(temp);\n-\n-    SetMockTime(0);\n-}\n \n static bool falseFunc() { return false; }\n \n BOOST_AUTO_TEST_CASE(PartitionAlert)\n-{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#discussion_r56223889",
      "id" : 56223889,
      "original_commit_id" : "535be2ac32748d81dfd45ac9b8046196c8aed19a",
      "original_position" : 196,
      "path" : "src/test/alert_tests.cpp",
      "position" : 196,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7692",
      "updated_at" : "2016-03-15T19:17:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56223889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "Concept ACK.",
      "created_at" : "2016-03-15T19:18:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-196981745",
      "id" : 196981745,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-15T19:18:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196981745",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "This code is actually very useful for other projects that build off of bitcoin code base, and could be useful within the context of bitcoin if reconfigured. Perhaps just disable the code, not remove it entirely?",
      "created_at" : "2016-03-16T17:39:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197449839",
      "id" : 197449839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-16T17:39:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197449839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "> This code is actually very useful for other projects that build off of bitcoin code base\r\n\r\nSorry, but I don't think that's a valid reason to maintain code that we shouldn't have anymore. And I'm sure there's much better ways of doing this in derived projects as well, which don't rely on one network-wide secret key.\r\n",
      "created_at" : "2016-03-16T19:16:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197497279",
      "id" : 197497279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-16T19:16:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197497279",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "concept ACK",
      "created_at" : "2016-03-17T11:02:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197820794",
      "id" : 197820794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-17T11:02:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197820794",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "So what has changed between now and several months ago when this was last attempted? Aren't the same reasons for not removing the alerts then still applicable today?",
      "created_at" : "2016-03-17T14:34:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197905299",
      "id" : 197905299,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-17T14:34:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197905299",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "> Aren't the same reasons for not removing the alerts then still applicable today?\r\n\r\nJust read #6260 and the OP.\r\nA few months ago pretty much everyone was in favor of this, but there was no alternative notification system yet. There is now a mailing list for alerts instead.\r\n\r\nThe alert system suffers from many problems:\r\n \r\n- Philosophically, there should not be a key with special meaning on the P2P network, this has always been a sore point with other node implementations. Like the checkpoints, it is seen as a centralized point of control, thus should go. If there is to be a network-wide alert system, that would also need a network-wide bureaucracy for managing it.\r\n- The alert system is hardly tested and maintained. It opens an  attack surface to people possessing a certain private key, even though it is a fairly small one, there may be some bug in the alert system that would turn it into a full blown backdoor.\r\n- It is not clear what kind of emergencies qualify for using it (there was no agreement on using it to warn of the UPnP issue, even though it was a local network code execution exploit).\r\n- It's possible that this guy has or had access to it:\r\n```\r\n gpg: encrypted with 4096-bit RSA key, ID EACB3C76, created 2010-07-22\r\n       \"Mark KarpelÃÂ¨s <mark@hell.ne.jp>\"\r\n```\r\n(and Satoshi, and possibly others who shouldn't really be able to)\r\n\r\nA notification mailing list doesn't have any of these problems - it will be about announcements and alerts about this specific software, and we can directly control who has post access.\r\n\r\nNote that I'm in no way against a 'better' alert system later on, such as one that doesn't rely on a special P2P message. There are some suggestions in #6260. But this one should go, and soon.\r\n",
      "created_at" : "2016-03-17T15:06:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197924551",
      "id" : 197924551,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-17T16:33:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197924551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "A mailing list would work for this specific client, but what about network wide issues like a blockchain fork like the fourth of July fork?\r\n\r\nAlso, since the alert system is network wide, what will be done about other clients that still implement the alerts?",
      "created_at" : "2016-03-17T15:55:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197945363",
      "id" : 197945363,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-17T15:55:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197945363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "> A mailing list would work for this specific client, but what about network wide issues like a blockchain fork like the fourth of July fork?\r\n\r\nNetwork wide issues will also be posted to the mailing list. Also, other software can have their own mailing lists. Decentralization, you know. No one should be trusted with central responsibility to send alerts over the network.\r\n\r\n> what will be done about other clients that still implement the alerts?\r\n\r\nThey'll likely remove the code as well. Or not. In any case it will never be triggered again. It was never very useful for other clients, as they couldn't send messages of themselves (see #5160).\r\n",
      "created_at" : "2016-03-17T16:28:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197960977",
      "id" : 197960977,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-17T16:32:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197960977",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@achow101 Please note the alert system was not even used for the \"July fork\".\r\n\r\nIf Mark Karpeles has the key, how do we know he wasn't forced to hand it over to the Japanese police or that they have obtained it from accessing his computers? At this stage the key should be considered compromised at the very least, but in any case, a network wide, privileged messaging system is pretty outrageous for Bitcoin. It might have been a reasonable compromise in the early days, but we've definitely outgrown the need now.",
      "created_at" : "2016-03-17T16:42:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197967429",
      "id" : 197967429,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-17T16:42:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197967429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "Concept ACK",
      "created_at" : "2016-03-17T16:45:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197969160",
      "id" : 197969160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-17T16:45:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197969160",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "Concept ACK",
      "created_at" : "2016-03-17T16:49:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197970471",
      "id" : 197970471,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-17T16:49:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197970471",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "@btcdrak Wait, it wasn't used in that fork? I thought it was. \r\n\r\nAnyways, since it looks like there are better alternatives which allow for more decentralization, I agree with removing this.\r\nConcept ACK.\r\n\r\nAlthough, if/when this is merged, all of the other wallet developers should be informed so that they remove the code for processing alerts.\r\n\r\nAlso, maybe the community should be made aware of this decision since this is a protocol rule. I think that if this was merged without letting other people \"vote\" or debate this, it would probably result in a shitstorm about \"The core developers are taking too much power by forcing protocol rules\".",
      "created_at" : "2016-03-17T17:18:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197982515",
      "id" : 197982515,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-17T17:18:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197982515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "Concept ACK",
      "created_at" : "2016-03-17T17:18:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197982657",
      "id" : 197982657,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-17T17:18:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197982657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "> \"The core developers are taking too much power by forcing protocol rules\".\r\n\r\nWe're removing our own privileged position from the P2P protocol (note: not consensus) rules. Oh no! Taking so much power.",
      "created_at" : "2016-03-17T17:19:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7692#issuecomment-197983159",
      "id" : 197983159,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7692",
      "updated_at" : "2016-03-17T17:21:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197983159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
