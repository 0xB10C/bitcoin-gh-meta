[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56292361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292361"
         }
      },
      "body" : "New line missing",
      "commit_id" : "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
      "created_at" : "2016-03-16T07:42:30Z",
      "diff_hunk" : "@@ -0,0 +1,142 @@\n+// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include \"addrman.h\"\n+#include \"test/test_bitcoin.h\"\n+#include <string>\n+#include <boost/test/unit_test.hpp>\n+#include \"hash.h\"\n+#include \"serialize.h\"\n+#include \"streams.h\"\n+#include \"net.h\"\n+#include \"chainparams.h\"\n+\n+using namespace std;\n+\n+class CAddrManSerializationTest : public CAddrMan\n+{\n+public:\n+    virtual void Serialize(CDataStream &s, int nType, int nVersionDummy) const = 0;\n+};\n+\n+class CAddrManUncorrupted : public CAddrManSerializationTest\n+{\n+public:\n+    void Serialize(CDataStream &s, int nType, int nVersionDummy) const\n+    {\n+        CAddrMan::Serialize(s, nType, nVersionDummy);\n+    }\n+};\n+\n+class CAddrManCorrupted : public CAddrManSerializationTest\n+{\n+public:\n+    void Serialize(CDataStream &s, int nType, int nVersionDummy) const\n+    {\n+        // Produces corrupt output that claims addrman has 20 addrs when it only has one addr.\n+        unsigned char nVersion = 1;\n+        s << nVersion;\n+        s << ((unsigned char)32);\n+        s << nKey;\n+\n+        s << 10; // nNew\n+        s << 10; // nTried\n+\n+        int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30);\n+        s << nUBuckets;\n+\n+        CAddress addr = CAddress(CService(\"252.1.1.1\",7777));\n+        CAddrInfo info = CAddrInfo(addr, CNetAddr(\"252.2.2.2\"));\n+        s << info;\n+    }\n+};\n+\n+CDataStream AddrmanToStream(CAddrManSerializationTest& addrman)\n+{\n+    CDataStream ssPeersIn(SER_DISK, CLIENT_VERSION);\n+    ssPeersIn << FLATDATA(Params().MessageStart());\n+    ssPeersIn << addrman;\n+    string str = ssPeersIn.str();\n+    vector<unsigned char> vchData(str.begin(), str.end());\n+    return CDataStream(vchData, SER_DISK, CLIENT_VERSION);\n+}\n+\n+BOOST_FIXTURE_TEST_SUITE(addrman_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(caddrdb_deserialiation)\n+{\n+    CAddrManUncorrupted addrmanUncorrupted;\n+\n+    CService addr1 = CService(\"250.7.1.1\", 8333);\n+    CService addr2 = CService(\"250.7.2.2\", 9999);\n+    CService addr3 = CService(\"250.7.3.3\", 9999);\n+\n+    // Add three addresses to new table.\n+    addrmanUncorrupted.Add(CAddress(addr1), CService(\"252.5.1.1\", 8333));\n+    addrmanUncorrupted.Add(CAddress(addr2), CService(\"252.5.1.1\", 8333));\n+    addrmanUncorrupted.Add(CAddress(addr3), CService(\"252.5.1.1\", 8333));\n+\n+    // Test that the deserialization does not throw an exception.\n+    CDataStream ssPeers1 = AddrmanToStream(addrmanUncorrupted);\n+    bool exceptionThrown = false;\n+    CAddrMan addrman1;\n+\n+    BOOST_CHECK(addrman1.size() == 0);\n+    try {\n+        unsigned char pchMsgTmp[4];\n+        ssPeers1 >> FLATDATA(pchMsgTmp);\n+        ssPeers1 >> addrman1;\n+    }\n+    catch (const std::exception& e) {\n+        exceptionThrown = true;\n+    }\n+    BOOST_CHECK(addrman1.size() == 3);\n+\n+    BOOST_CHECK(exceptionThrown == false);\n+\n+    // Test that CAddrDB::Read creates an addrman with the correct number of addrs.\n+    CDataStream ssPeers2 = AddrmanToStream(addrmanUncorrupted);\n+    uint256 hashIn = Hash(ssPeers2.begin(), ssPeers2.end());\n+\n+    CAddrMan addrman2;\n+    CAddrDB adb;\n+    BOOST_CHECK(addrman2.size() == 0);\n+    adb.Read(addrman2, ssPeers2, hashIn);\n+    BOOST_CHECK(addrman2.size() == 3);\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(caddrdb_corrupted_deserialiation)\n+{\n+    CAddrManCorrupted addrmanCorrupted;\n+\n+    // Test that the deserialization of corrupted addrman throws an exception.\n+    CDataStream ssPeers1 = AddrmanToStream(addrmanCorrupted);\n+    bool exceptionThrown = false;\n+    CAddrMan addrman1;\n+    BOOST_CHECK(addrman1.size() == 0);\n+    try {\n+        unsigned char pchMsgTmp[4];\n+        ssPeers1 >> FLATDATA(pchMsgTmp);\n+        ssPeers1 >> addrman1;\n+    }\n+    catch (const std::exception& e) {\n+        exceptionThrown = true;\n+    }\n+    // Even through de-serialization failed adddrman is not left in a clean state.\n+    BOOST_CHECK(addrman1.size() == 1);\n+    BOOST_CHECK(exceptionThrown);\n+\n+    // Test that CAddrDB::Read leaves addrman in a clean state if de-serialization fails.\n+    CDataStream ssPeers2 = AddrmanToStream(addrmanCorrupted);\n+    uint256 hashIn = Hash(ssPeers2.begin(), ssPeers2.end());\n+\n+    CAddrMan addrman2;\n+    CAddrDB adb;\n+    BOOST_CHECK(addrman2.size() == 0);\n+    adb.Read(addrman2, ssPeers2, hashIn);\n+\n+    BOOST_CHECK(addrman2.size() == 0); \n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56292361",
      "id" : 56292361,
      "original_commit_id" : "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
      "original_position" : 142,
      "path" : "src/test/net_tests.cpp",
      "position" : 142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
      "updated_at" : "2016-03-16T07:42:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292361",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56292422"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292422"
         }
      },
      "body" : "strange test name ;-) `z` missing",
      "commit_id" : "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
      "created_at" : "2016-03-16T07:43:13Z",
      "diff_hunk" : "@@ -0,0 +1,142 @@\n+// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include \"addrman.h\"\n+#include \"test/test_bitcoin.h\"\n+#include <string>\n+#include <boost/test/unit_test.hpp>\n+#include \"hash.h\"\n+#include \"serialize.h\"\n+#include \"streams.h\"\n+#include \"net.h\"\n+#include \"chainparams.h\"\n+\n+using namespace std;\n+\n+class CAddrManSerializationTest : public CAddrMan\n+{\n+public:\n+    virtual void Serialize(CDataStream &s, int nType, int nVersionDummy) const = 0;\n+};\n+\n+class CAddrManUncorrupted : public CAddrManSerializationTest\n+{\n+public:\n+    void Serialize(CDataStream &s, int nType, int nVersionDummy) const\n+    {\n+        CAddrMan::Serialize(s, nType, nVersionDummy);\n+    }\n+};\n+\n+class CAddrManCorrupted : public CAddrManSerializationTest\n+{\n+public:\n+    void Serialize(CDataStream &s, int nType, int nVersionDummy) const\n+    {\n+        // Produces corrupt output that claims addrman has 20 addrs when it only has one addr.\n+        unsigned char nVersion = 1;\n+        s << nVersion;\n+        s << ((unsigned char)32);\n+        s << nKey;\n+\n+        s << 10; // nNew\n+        s << 10; // nTried\n+\n+        int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30);\n+        s << nUBuckets;\n+\n+        CAddress addr = CAddress(CService(\"252.1.1.1\",7777));\n+        CAddrInfo info = CAddrInfo(addr, CNetAddr(\"252.2.2.2\"));\n+        s << info;\n+    }\n+};\n+\n+CDataStream AddrmanToStream(CAddrManSerializationTest& addrman)\n+{\n+    CDataStream ssPeersIn(SER_DISK, CLIENT_VERSION);\n+    ssPeersIn << FLATDATA(Params().MessageStart());\n+    ssPeersIn << addrman;\n+    string str = ssPeersIn.str();\n+    vector<unsigned char> vchData(str.begin(), str.end());\n+    return CDataStream(vchData, SER_DISK, CLIENT_VERSION);\n+}\n+\n+BOOST_FIXTURE_TEST_SUITE(addrman_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(caddrdb_deserialiation)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56292422",
      "id" : 56292422,
      "original_commit_id" : "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
      "original_position" : 66,
      "path" : "src/test/net_tests.cpp",
      "position" : 66,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
      "updated_at" : "2016-03-16T07:49:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56292683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292683"
         }
      },
      "body" : "You test addrman, not net. Please name the file `addrman_tests.cpp`.",
      "commit_id" : "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
      "created_at" : "2016-03-16T07:47:08Z",
      "diff_hunk" : "@@ -60,6 +60,7 @@ BITCOIN_TESTS =\\\n   test/merkle_tests.cpp \\\n   test/miner_tests.cpp \\\n   test/multisig_tests.cpp \\\n+  test/net_tests.cpp \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56292683",
      "id" : 56292683,
      "original_commit_id" : "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
      "original_position" : 4,
      "path" : "src/Makefile.test.include",
      "position" : 4,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
      "updated_at" : "2016-03-16T07:47:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292683",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "Travis fails with:\r\n\r\n```\r\ntest/net_tests.cpp(93): error: in \"addrman_tests/caddrdb_deserialiation\": check addrman1.size() == 3 has failed\r\ntest/net_tests.cpp(105): error: in \"addrman_tests/caddrdb_deserialiation\": check addrman2.size() == 3 has failed\r\n```\r\n\r\nBut only in one configuration.",
      "created_at" : "2016-03-16T07:49:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-197200010",
      "id" : 197200010,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
      "updated_at" : "2016-03-16T08:01:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197200010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   }
]
