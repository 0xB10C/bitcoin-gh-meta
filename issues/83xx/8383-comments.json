[
   {
      "body" : "Thanks @dooglus for reporting.\r\nI just double-checked and right Ã¢ÂÂÃÂ as you have edited Ã¢ÂÂ the keypool gets discarded once you encrypt the wallet.\r\n\r\nBut you are right. The seed key will be kept which can be problematic.\r\nGenerating a new seed once the user encrypt could be a solution, though I think it could be unexpected from the user perspective (it would invalidate his old backup probably done before he encrypted the wallet).\r\n\r\nOther solutions? Add a boolean parameter to encryptwallet to force regeneration of the seed?\r\n\r\nMaybe another solution would be to allow a startup argument -encryptwallet=<password> which would directly encrypt wallets during the phase of creation. It could also encrypt already existing wallets.",
      "created_at" : "2016-07-20T18:38:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8383#issuecomment-234041298",
      "id" : 234041298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8383",
      "updated_at" : "2016-07-20T18:38:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/234041298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> I think it could be unexpected from the user perspective (it would invalidate his old backup probably done before he encrypted the wallet).\r\n\r\nI'm not familiar with the behavior of the new HD wallet code. Isn't each derived private key stored in the wallet as it is derived? If so, changing the seed as we encrypt won't invalidate old backups any more than encrypting already does in v0.12 and earlier. When we encrypt a wallet in v0.12 we invalidate the keypool that was written in the old backup, while maintaining the validity of the backup for private keys which had already been used at the time of the backup. Changing the HD seed should be the same as that, so long as the private keys that were already derived have been written to the wallet file.\r\n\r\nIt appears as if the intention of this BIP32 implementation is to make the change pretty much invisible to the user. But we have accidentally introduced a new security hole: it is now impossible (without disabling the HD feature) to create an encrypted wallet without the unencrypted HD seed being written to wallet.dat.",
      "created_at" : "2016-07-20T20:29:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8383#issuecomment-234072187",
      "id" : 234072187,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8383",
      "updated_at" : "2016-07-20T20:29:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/234072187",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   }
]
