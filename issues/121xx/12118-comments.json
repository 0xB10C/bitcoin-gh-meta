[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160286983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160286983"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove double cast?",
      "commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "created_at" : "2018-01-08T23:51:55Z",
      "diff_hunk" : "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();\n+        double aSize = fUseAAncestors ? a.GetSizeWithAncestors() : a.GetTxSize();\n \n-        double bFees = b.GetModFeesWithAncestors();\n-        double bSize = b.GetSizeWithAncestors();\n+        double bModFee = fUseBAncestors ? b.GetModFeesWithAncestors() : b.GetModifiedFee();\n+        double bSize = fUseBAncestors ? b.GetSizeWithAncestors() : b.GetTxSize();\n \n         // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n-        double f1 = aFees * bSize;\n-        double f2 = aSize * bFees;\n+        double f1 = aModFee * bSize;\n+        double f2 = aSize * bModFee;\n \n         if (f1 == f2) {\n             return a.GetTx().GetHash() < b.GetTx().GetHash();\n         }\n \n         return f1 > f2;\n     }\n+\n+    // Calculate which score to use for an entry (avoiding division).\n+    // Picks min(feerate, feerate_with_ancestors)\n+    bool UseAncestorScore(const CTxMemPoolEntry &a) const\n+    {\n+        double f1 = (double)a.GetModifiedFee() * a.GetSizeWithAncestors();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160286983",
      "id" : 160286983,
      "original_commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "original_position" : 43,
      "path" : "src/txmempool.h",
      "position" : 43,
      "pull_request_review_id" : 87376974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-09T00:02:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160286983",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160287321"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160287321"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why floating point? Aren't these all 64 integers?\r\n  ",
      "commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "created_at" : "2018-01-08T23:54:29Z",
      "diff_hunk" : "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160287321",
      "id" : 160287321,
      "original_commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "original_position" : 18,
      "path" : "src/txmempool.h",
      "position" : 18,
      "pull_request_review_id" : 87376974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-09T00:02:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160287321",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288272"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Instead of factoring out `UseAncestorScore`, do (missing comments):\r\n```cpp\r\nvoid GetModFeeAndSize(const CTxMemPoolEntry& a, int64_t& mod_fee, int64_t& size) {\r\n    int64_t f1 = a.GetModifiedFee() * a.GetSizeWithAncestors();\r\n    int64_t f2 = a.GetModFeesWithAncestors() * a.GetTxSize();\r\n    if (f1 > f2) {\r\n        mod_fee = a.GetModFeesWithAncestors();\r\n        size = a.GetSizeWithAncestors();\r\n    } else {\r\n        mod_fee = a.GetModifiedFee();\r\n        size = a.GetTxSize();\r\n    }\r\n}\r\n```",
      "commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "created_at" : "2018-01-09T00:01:41Z",
      "diff_hunk" : "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();\n+        double aSize = fUseAAncestors ? a.GetSizeWithAncestors() : a.GetTxSize();\n \n-        double bFees = b.GetModFeesWithAncestors();\n-        double bSize = b.GetSizeWithAncestors();\n+        double bModFee = fUseBAncestors ? b.GetModFeesWithAncestors() : b.GetModifiedFee();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288272",
      "id" : 160288272,
      "original_commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "original_position" : 23,
      "path" : "src/txmempool.h",
      "position" : 23,
      "pull_request_review_id" : 87376974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-09T00:02:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288272",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288319"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288319"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, missing `.`.",
      "commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "created_at" : "2018-01-09T00:01:59Z",
      "diff_hunk" : "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();\n+        double aSize = fUseAAncestors ? a.GetSizeWithAncestors() : a.GetTxSize();\n \n-        double bFees = b.GetModFeesWithAncestors();\n-        double bSize = b.GetSizeWithAncestors();\n+        double bModFee = fUseBAncestors ? b.GetModFeesWithAncestors() : b.GetModifiedFee();\n+        double bSize = fUseBAncestors ? b.GetSizeWithAncestors() : b.GetTxSize();\n \n         // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n-        double f1 = aFees * bSize;\n-        double f2 = aSize * bFees;\n+        double f1 = aModFee * bSize;\n+        double f2 = aSize * bModFee;\n \n         if (f1 == f2) {\n             return a.GetTx().GetHash() < b.GetTx().GetHash();\n         }\n \n         return f1 > f2;\n     }\n+\n+    // Calculate which score to use for an entry (avoiding division).\n+    // Picks min(feerate, feerate_with_ancestors)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288319",
      "id" : 160288319,
      "original_commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "original_position" : 40,
      "path" : "src/txmempool.h",
      "position" : 40,
      "pull_request_review_id" : 87376974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-09T00:02:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288319",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag Thanks for taking a look.  I mimicked `CompareTxMempoolEntryByDescendantScore` in this PR to make review easier, since the two concepts have a symmetry.\r\n\r\nThe use of `double` for the intermediate value is to prevent overflow of an int64_t, which is theoretically possible.  That's also why there's an explicit double cast before multiplication.\r\n\r\nI'll rewrite the helper function along the lines of your suggestion.",
      "created_at" : "2018-01-09T16:02:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356327874",
      "id" : 356327874,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-09T16:02:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356327874",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The use of double for the intermediate value is to prevent overflow of an int64_t, which is theoretically possible.\r\n\r\nHow about http://releases.llvm.org/4.0.0/tools/clang/docs/LanguageExtensions.html#checked-arithmetic-builtins?",
      "created_at" : "2018-01-09T23:57:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356453583",
      "id" : 356453583,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-09T23:57:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356453583",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
