{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "This adds a setBlockIndexHeaderCandidates which mimics setBlockIndexCandidates and is\r\nThe set of all leaf CBlockIndex entries with BLOCK_VALID_TREE (for itself and all ancestors) and\r\nas good as our current tip or better. Entries here are potential future candidates for insertion\r\ninto setBlockIndexCandidates, once we get all the required block data. Thus, entries here\r\nrepresent chains on which we should be actively downloading block data.\r\n\r\nNote that we define \"as good as our current tip or better\" slightly differently here than in\r\nsetBlockIndexCandidates - we include things which will have a higher nSequence (but have the\r\nsame chain work) here, but do not include such entries in setBlockIndexCandidates. This is\r\nbecause we prefer to also download towards chains which have the same total work as our current\r\nchain (as an optimization since a reorg is very possible in such cases).\r\n\r\nNote that, unlike setBlockIndexCandidates, we only store \"leaf\" entries here, as we are not as\r\naggressively prune-able (setBlockIndexCandidates are things which we can, and usually do, try to\r\nconnect immediately, and thus entries dont stick around for long). Thus, it may be the case that\r\nchainActive.Tip() is NOT in setBlockIndexHeaderCandidates.\r\n\r\nAdditionally, unlike setBlockIndexCandidates, we are happy to store entries which are not\r\nconnectable due to pruning here.\r\n\r\nThis is useful as it (finally) disconnects net_processing logic from the \"store on disk\" logic in validation.cpp. More importantly, it represents what you'd need from the consensus logic to implement a spv-first sync mode, as this provides a best-header which will follow invalidity - always pointing to the best-possible header even after block(s) are found to be invalid.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12138/comments",
   "created_at" : "2018-01-10T22:48:02Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12138/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/12138",
   "id" : 287604420,
   "labels" : [
      {
         "color" : "006b75",
         "default" : false,
         "id" : 98298007,
         "name" : "P2P",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12138/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 12138,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/12138.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12138",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/12138.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12138"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Track best-possible-headers",
   "updated_at" : "2018-01-17T21:11:10Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12138",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
      "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
      "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/TheBlueMatt",
      "id" : 649246,
      "login" : "TheBlueMatt",
      "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
      "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
      "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/TheBlueMatt"
   }
}
