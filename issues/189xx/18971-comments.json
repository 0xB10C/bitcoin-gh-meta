[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-05-14T00:08:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-628309919",
      "id" : 628309919,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyODMwOTkxOQ==",
      "updated_at" : "2020-05-14T00:08:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628309919",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19101 (refactor: remove ::vpwallets and related global variables by ryanofsky)\n* #19099 (refactor: Move wallet methods out of chain.h and node.h by ryanofsky)\n* #19098 (test: Remove duplicate NodeContext hacks by ryanofsky)\n* #19085 (Refactor: clean up PeriodicFlush() by jnewbery)\n* #19077 (wallet: Add sqlite as an alternative wallet database and use it for new descriptor wallets by achow101)\n* #18907 (walletdb: Don't remove database transaction logs and instead error by achow101)\n* #18904 (Don't call lsn_reset in periodic flush by bvbfan)\n* #18792 (wallet: Remove boost from PeriodicFlush by MarcoFalke)\n* #18731 (refactor: Make CCheckQueue RAII-styled by hebasto)\n* #18710 (Add local thread pool to CCheckQueue by hebasto)\n* #18618 (gui: Drop RecentRequestsTableModel dependency to WalletModel by promag)\n* #18608 (refactor: Remove CAddressBookData::destdata by ryanofsky)\n* #18354 (Use shared pointers only in validation interface by bvbfan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-14T03:06:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-628358883",
      "id" : 628358883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyODM1ODg4Mw==",
      "updated_at" : "2020-06-02T04:07:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628358883",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Strong concept ACK for the effort and end result, but I'm scared it looks like the intermediate commits here are moving and changing code at the same time instead of just leaving code where it is or moving it in trivial to review `--color-moved` MOVEONLY commits. This was previously a hurdle for me in https://github.com/bitcoin/bitcoin/pull/16341#issuecomment-541330425, but maybe the problem is less severe here because it looks like the moves are happening in single commits, not in harder to reconcile add and remove commits.\r\n\r\nI would definitely appreciate it (can't speak for other reviewers) if this PR could be updated to use MOVEONLY commits (multiple small ones throughout or a big one at the beginning or end), but I'll give this a try and maybe the review will be easier than I'm expecting ð ",
      "created_at" : "2020-05-14T22:33:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-628920481",
      "id" : 628920481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyODkyMDQ4MQ==",
      "updated_at" : "2020-05-14T22:33:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628920481",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> but I'm scared it looks like the intermediate commits here are moving and changing code at the same time instead of just leaving code where it is or moving it in trivial to review\r\n\r\nI only found one commit which was moving and changing behavior at the same time. This was `wallet: Move cursor functions to WalletDatabase and handle internally` which I have now split into `walletdb: Handle cursor internally` (changes behavior) and `walletdb: Move cursor functions to WalletDatabase` (move).",
      "created_at" : "2020-05-15T01:39:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-628975249",
      "id" : 628975249,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyODk3NTI0OQ==",
      "updated_at" : "2020-05-15T01:39:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628975249",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "The patch changes ref counting of db files. Now `Acquire` is called only in `Rewrite` since previous batch do it. Now ref count is always 0 (except you call Rewrite) which makes whole read/write racy.",
      "created_at" : "2020-05-15T13:01:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-629222719",
      "id" : 629222719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTIyMjcxOQ==",
      "updated_at" : "2020-05-15T13:01:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629222719",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The patch changes ref counting of db files. Now `Acquire` is called only in `Rewrite` since previous batch do it. Now ref count is always 0 (except you call Rewrite) which makes whole read/write racy.\r\n\r\n`Acquire` is called by `WalletBatch`'s constructor so the ref count is still incremented every time the database is being used. And `Release` is called by `WalletBatch`'s destructor.",
      "created_at" : "2020-05-15T16:15:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-629349300",
      "id" : 629349300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTM0OTMwMA==",
      "updated_at" : "2020-05-15T16:15:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629349300",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r426012118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426012118"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: `const fs::path&`\r\n\r\nin commit: d4a55140ea3e47ee6e4c93c484c7c72cfed741dd",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-15T19:44:02Z",
      "diff_hunk" : "@@ -103,6 +105,207 @@ static void WalletShowInfo(CWallet* wallet_instance)\n     tfm::format(std::cout, \"Address Book: %zu\\n\", wallet_instance->m_address_book.size());\n }\n \n+/* End of headers, beginning of key/value data */\n+static const char *HEADER_END = \"HEADER=END\";\n+/* End of key/value data */\n+static const char *DATA_END = \"DATA=END\";\n+\n+static bool SalvageWallet(fs::path path)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r426012118",
      "id" : 426012118,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMjExOA==",
      "original_commit_id" : "0f991e733516fa26e1ceaca10a5b582093950e53",
      "original_line" : 113,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/wallet/wallettool.cpp",
      "position" : null,
      "pull_request_review_id" : 412921503,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426012118",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r426013423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426013423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IMO \"Attempt to recover private keys from a corrupt wallet\" explains salvage more clearly than \"Perform salvage operations on a wallet file\". I understand that's specific to `RecoverKeysOnlyFilter`, but perhaps its possible to clarify the documentation?\r\n\r\n",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-15T19:46:53Z",
      "diff_hunk" : "@@ -54,7 +54,6 @@ void WalletInit::AddWalletOptions() const\n     gArgs.AddArg(\"-paytxfee=<amt>\", strprintf(\"Fee (in %s/kB) to add to transactions you send (default: %s)\",\n                                                             CURRENCY_UNIT, FormatMoney(CFeeRate{DEFAULT_PAY_TX_FEE}.GetFeePerK())), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-rescan\", \"Rescan the block chain for missing wallet transactions on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n-    gArgs.AddArg(\"-salvagewallet\", \"Attempt to recover private keys from a corrupt wallet on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r426013423",
      "id" : 426013423,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMzQyMw==",
      "original_commit_id" : "8ef1b45b4d3de71214da1a6bc6e09f6e9a14d7d4",
      "original_line" : 57,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 412923311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426013423",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r426067977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426067977"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This commit is part of #18918 so comments should be left there.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-15T22:08:15Z",
      "diff_hunk" : "@@ -103,6 +105,207 @@ static void WalletShowInfo(CWallet* wallet_instance)\n     tfm::format(std::cout, \"Address Book: %zu\\n\", wallet_instance->m_address_book.size());\n }\n \n+/* End of headers, beginning of key/value data */\n+static const char *HEADER_END = \"HEADER=END\";\n+/* End of key/value data */\n+static const char *DATA_END = \"DATA=END\";\n+\n+static bool SalvageWallet(fs::path path)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r426067977",
      "id" : 426067977,
      "in_reply_to_id" : 426012118,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA2Nzk3Nw==",
      "original_commit_id" : "0f991e733516fa26e1ceaca10a5b582093950e53",
      "original_line" : 113,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/wallet/wallettool.cpp",
      "position" : null,
      "pull_request_review_id" : 412994378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426067977",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r426067999"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426067999"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This commit is part of #18918 so comments should be left there.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-15T22:08:20Z",
      "diff_hunk" : "@@ -54,7 +54,6 @@ void WalletInit::AddWalletOptions() const\n     gArgs.AddArg(\"-paytxfee=<amt>\", strprintf(\"Fee (in %s/kB) to add to transactions you send (default: %s)\",\n                                                             CURRENCY_UNIT, FormatMoney(CFeeRate{DEFAULT_PAY_TX_FEE}.GetFeePerK())), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-rescan\", \"Rescan the block chain for missing wallet transactions on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n-    gArgs.AddArg(\"-salvagewallet\", \"Attempt to recover private keys from a corrupt wallet on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r426067999",
      "id" : 426067999,
      "in_reply_to_id" : 426013423,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA2Nzk5OQ==",
      "original_commit_id" : "8ef1b45b4d3de71214da1a6bc6e09f6e9a14d7d4",
      "original_line" : 57,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 412994405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426067999",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@achow101 re @ryanofsky's comment, I set out to expand and clarify https://github.com/bitcoin/bitcoin/pull/18971/commits/67e30b2b42b4d710739e6fe303cbca69be68032c into several simpler move-only commits. \r\n\r\nYou can use `git diff 67e30b2b42b4d710739e6fe303cbca69be68032c 125796d8e60b8e740857e427cbaad4aa23f74b52` to compare the results, as there are some changes I've left out, and slight difference, e.g. I took the approach of exposing `WalletBatch::ReadKeyValue`, but they don't affect the later commits.\r\n\r\nhttps://github.com/achow101/bitcoin/compare/refactor-storage...Empact:refactor-storage-moveonly",
      "created_at" : "2020-05-15T22:39:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-629535592",
      "id" : 629535592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTUzNTU5Mg==",
      "updated_at" : "2020-05-15T22:39:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629535592",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Empact Thanks for doing that! Unfortunately I worked out my own way of doing the separation before I saw your comment. My version was pushed to #18918.",
      "created_at" : "2020-05-15T23:55:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-629553130",
      "id" : 629553130,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTU1MzEzMA==",
      "updated_at" : "2020-05-15T23:55:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629553130",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> `Acquire` is called by `WalletBatch`'s constructor so the ref count is still incremented every time the database is being used. And `Release` is called by `WalletBatch`'s destructor.\r\n\r\nGot'cha, sorry about that, i've not notice it. I still have concern about touching db env in multi threading. `BerkeleyDatabase` should guard every env usage, for example in contructor with shared env, the easiest test is to call `CreateWalletFromFile` from distinct threads with same db location, it will crash at \r\n`auto inserted = this->env->m_databases.emplace(strFile, std::ref(*this));`\r\nbefore actual assert in next line.",
      "created_at" : "2020-05-17T16:58:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-629828484",
      "id" : 629828484,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTgyODQ4NA==",
      "updated_at" : "2020-05-17T16:58:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629828484",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-05-18T10:53:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-630104158",
      "id" : 630104158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDEwNDE1OA==",
      "updated_at" : "2020-05-18T10:53:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630104158",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r427420606"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427420606"
         }
      },
      "author_association" : "MEMBER",
      "body" : "When building with clang --enable-debug -Werror I'm seeing the following compiler error:\r\n\r\n```cpp\r\n./wallet/walletdb.h:322:112: error: member access into incomplete type 'CWallet'\r\n             CWalletScanState &wss, std::string& strType, std::string& strErr) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet);\r\n                                                                                                               ^\r\n./wallet/ismine.h:14:7: note: forward declaration of 'CWallet'\r\nclass CWallet;\r\n      ^\r\n1 error generated.\r\n```",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-19T16:05:32Z",
      "diff_hunk" : "@@ -287,11 +290,47 @@ class WalletBatch\n     //! Abort current transaction\n     bool TxnAbort();\n private:\n-    BerkeleyBatch m_batch;\n     WalletDatabase& m_database;\n };\n \n //! Compacts BDB state so that wallet.dat is self-contained (if there are changes)\n void MaybeCompactWalletDB();\n \n+//! State of scanning the wallet during ReadKeyValue\n+class CWalletScanState {\n+public:\n+    unsigned int nKeys{0};\n+    unsigned int nCKeys{0};\n+    unsigned int nWatchKeys{0};\n+    unsigned int nKeyMeta{0};\n+    unsigned int m_unknown_records{0};\n+    bool fIsEncrypted{false};\n+    bool fAnyUnordered{false};\n+    std::vector<uint256> vWalletUpgrade;\n+    std::map<OutputType, uint256> m_active_external_spks;\n+    std::map<OutputType, uint256> m_active_internal_spks;\n+    std::map<uint256, DescriptorCache> m_descriptor_caches;\n+    std::map<std::pair<uint256, CKeyID>, CKey> m_descriptor_keys;\n+    std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>> m_descriptor_crypt_keys;\n+\n+    CWalletScanState() {\n+    }\n+};\n+\n+//! Unserialize a give Key-Value pair and load it into the wallet and wallet scan state\n+bool ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n+             CWalletScanState &wss, std::string& strType, std::string& strErr) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r427420606",
      "id" : 427420606,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyMDYwNg==",
      "original_commit_id" : "6c47d41779ec5b335acf75652228d541b7a5b67a",
      "original_line" : 322,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : null,
      "pull_request_review_id" : 414600810,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427420606",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r427423048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427423048"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(It may not be directly related to this PR; saw a similar build error in another wallet PR today.)",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-19T16:09:00Z",
      "diff_hunk" : "@@ -287,11 +290,47 @@ class WalletBatch\n     //! Abort current transaction\n     bool TxnAbort();\n private:\n-    BerkeleyBatch m_batch;\n     WalletDatabase& m_database;\n };\n \n //! Compacts BDB state so that wallet.dat is self-contained (if there are changes)\n void MaybeCompactWalletDB();\n \n+//! State of scanning the wallet during ReadKeyValue\n+class CWalletScanState {\n+public:\n+    unsigned int nKeys{0};\n+    unsigned int nCKeys{0};\n+    unsigned int nWatchKeys{0};\n+    unsigned int nKeyMeta{0};\n+    unsigned int m_unknown_records{0};\n+    bool fIsEncrypted{false};\n+    bool fAnyUnordered{false};\n+    std::vector<uint256> vWalletUpgrade;\n+    std::map<OutputType, uint256> m_active_external_spks;\n+    std::map<OutputType, uint256> m_active_internal_spks;\n+    std::map<uint256, DescriptorCache> m_descriptor_caches;\n+    std::map<std::pair<uint256, CKeyID>, CKey> m_descriptor_keys;\n+    std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>> m_descriptor_crypt_keys;\n+\n+    CWalletScanState() {\n+    }\n+};\n+\n+//! Unserialize a give Key-Value pair and load it into the wallet and wallet scan state\n+bool ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n+             CWalletScanState &wss, std::string& strType, std::string& strErr) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r427423048",
      "id" : 427423048,
      "in_reply_to_id" : 427420606,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyMzA0OA==",
      "original_commit_id" : "6c47d41779ec5b335acf75652228d541b7a5b67a",
      "original_line" : 322,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : null,
      "pull_request_review_id" : 414603837,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427423048",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Not sure what's causing the travis failure. It seems to be caused for a non-existent fileid when `get_fileid` is called, but I can't figure out why that would be the case nor can I replicate it locally.",
      "created_at" : "2020-05-21T17:19:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-632235166",
      "id" : 632235166,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjIzNTE2Ng==",
      "updated_at" : "2020-05-21T17:19:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632235166",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Not sure what's causing the travis failure. It seems to be caused for a non-existent fileid when `get_fileid` is called, but I can't figure out why that would be the case nor can I replicate it locally.\r\n\r\n`get_fileid` should not be called in mock db (some older bdb version in Travis?)",
      "created_at" : "2020-05-26T13:22:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-634021594",
      "id" : 634021594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNDAyMTU5NA==",
      "updated_at" : "2020-05-26T13:23:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634021594",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> `get_fileid` should not be called in mock db\r\n\r\nAh, that's probably it. Thanks. Odd that I can't get the error locally though.\r\n\r\n> (some older bdb version in Travis?)\r\n\r\nIt's actually newer. Travis typically uses BDB provided by Ubuntu which is 5.3. I have 4.8 installed on my system.",
      "created_at" : "2020-05-26T18:52:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-634211030",
      "id" : 634211030,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNDIxMTAzMA==",
      "updated_at" : "2020-05-26T18:52:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634211030",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> It's actually newer. Travis typically uses BDB provided by Ubuntu which is 5.3. I have 4.8 installed on my system.\r\n\r\nI can't reproduce it either, bdb 5.3.28.",
      "created_at" : "2020-05-27T10:42:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-634578411",
      "id" : 634578411,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNDU3ODQxMQ==",
      "updated_at" : "2020-05-27T10:42:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634578411",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r431230059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431230059"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Combine VerifyDatabaseFile and VerifyEnvironment\" (289aa21c6a6c11ce172a92f878a3ede6652fc2e4)\r\n\r\nHere and below filesystem_error is no longer caught. Would suggest adding it back to preserve error handling behavior (I could be missing something but it looks like BerkeleyEnvironment::Open could still throw this error)",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-27T15:26:21Z",
      "diff_hunk" : "@@ -3680,17 +3680,7 @@ bool CWallet::Verify(interfaces::Chain& chain, const WalletLocation& location, b\n \n     // Keep same database environment instance across Verify/Recover calls below.\n     std::unique_ptr<WalletDatabase> database = WalletDatabase::Create(wallet_path);\n-\n-    try {\n-        if (!WalletBatch::VerifyEnvironment(wallet_path, error_string)) {\n-            return false;\n-        }\n-    } catch (const fs::filesystem_error& e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r431230059",
      "id" : 431230059,
      "line" : 3688,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIzMDA1OQ==",
      "original_commit_id" : "289aa21c6a6c11ce172a92f878a3ede6652fc2e4",
      "original_line" : 3688,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 35,
      "pull_request_review_id" : 419340191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431230059",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r431245932"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431245932"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Move Db->open to BerkeleyDatabase::Open\" (d0ccd47c355319ec9709c52cdcdf0be78a26ac25)\r\n\r\nNote: seems like there two small changes to behavior here when IsDummy is true: CLIENT_VERSION is written and strFile member is set, but both changes seem good.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-27T15:46:34Z",
      "diff_hunk" : "@@ -351,13 +351,26 @@ void BerkeleyEnvironment::CheckpointLSN(const std::string& strFile)\n \n BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bool fFlushOnCloseIn) : pdb(nullptr), activeTxn(nullptr)\n {\n+    database.Open(pszMode);\n     fReadOnly = (!strchr(pszMode, '+') && !strchr(pszMode, 'w'));\n     fFlushOnClose = fFlushOnCloseIn;\n     env = database.env.get();\n-    if (database.IsDummy()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r431245932",
      "id" : 431245932,
      "line" : 366,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI0NTkzMg==",
      "original_commit_id" : "d0ccd47c355319ec9709c52cdcdf0be78a26ac25",
      "original_line" : 366,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : 354,
      "pull_request_review_id" : 419340191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431245932",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432114397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432114397"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added it back.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-28T20:48:20Z",
      "diff_hunk" : "@@ -3680,17 +3680,7 @@ bool CWallet::Verify(interfaces::Chain& chain, const WalletLocation& location, b\n \n     // Keep same database environment instance across Verify/Recover calls below.\n     std::unique_ptr<WalletDatabase> database = WalletDatabase::Create(wallet_path);\n-\n-    try {\n-        if (!WalletBatch::VerifyEnvironment(wallet_path, error_string)) {\n-            return false;\n-        }\n-    } catch (const fs::filesystem_error& e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432114397",
      "id" : 432114397,
      "in_reply_to_id" : 431230059,
      "line" : 3688,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExNDM5Nw==",
      "original_commit_id" : "289aa21c6a6c11ce172a92f878a3ede6652fc2e4",
      "original_line" : 3688,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 35,
      "pull_request_review_id" : 420480068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432114397",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432660562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432660562"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Use a global g_fileids instead of m_fileids for each env\" (79fe2edc4457ee70754b08d5e8d2309b86038395)\r\n\r\nNote: Was looking into history of why the previous code was calling CheckUniqueFileid in a loop instead of doing a map lookup. Looks like it was done to keep changes minimal in https://github.com/bitcoin/bitcoin/pull/11687/commits/d8a99f65e53019becdd8d2631396012bafb29741 and avoid needing to change CheckUniqueFileid. Looping or mapping was never needed before that commit because only one environment at a time could be opened.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-29T18:22:45Z",
      "diff_hunk" : "@@ -405,24 +390,34 @@ void BerkeleyDatabase::Open(const char* pszMode)\n             if (ret != 0) {\n                 throw std::runtime_error(strprintf(\"BerkeleyDatabase: Error %d, can't open database %s\", ret, strFile));\n             }\n-\n-            // Call CheckUniqueFileid on the containing BDB environment to\n-            // avoid BDB data consistency bugs that happen when different data\n-            // files in the same environment have the same fileid.\n-            //\n-            // Also call CheckUniqueFileid on all the other g_dbenvs to prevent\n-            // bitcoin from opening the same data file through another\n-            // environment when the file is referenced through equivalent but\n-            // not obviously identical symlinked or hard linked or bind mounted\n-            // paths. In the future a more relaxed check for equal inode and\n-            // device ids could be done instead, which would allow opening\n-            // different backup copies of a wallet at the same time. Maybe even\n-            // more ideally, an exclusive lock for accessing the database could\n-            // be implemented, so no equality checks are needed at all. (Newer\n-            // versions of BDB have an set_lk_exclusive method for this\n-            // purpose, but the older version we use does not.)\n-            for (const auto& env : g_dbenvs) {\n-                CheckUniqueFileid(*env.second.lock().get(), strFile, *pdb_temp, this->env->m_fileids[strFile]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432660562",
      "id" : 432660562,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDU2Mg==",
      "original_commit_id" : "79fe2edc4457ee70754b08d5e8d2309b86038395",
      "original_line" : 425,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 421187137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432660562",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432665557"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432665557"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Use a global g_fileids instead of m_fileids for each env\" (79fe2edc4457ee70754b08d5e8d2309b86038395)\r\n\r\nWould be good to add GUARDED_BY(cs_db) if possible",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-29T18:33:08Z",
      "diff_hunk" : "@@ -27,22 +27,7 @@ namespace {\n //! (https://docs.oracle.com/cd/E17275_01/html/programmer_reference/program_copy.html),\n //! so bitcoin should never create different databases with the same fileid, but\n //! this error can be triggered if users manually copy database files.\n-void CheckUniqueFileid(const BerkeleyEnvironment& env, const std::string& filename, Db& db, WalletDatabaseFileId& fileid)\n-{\n-    if (env.IsMock()) return;\n-\n-    int ret = db.get_mpf()->get_fileid(fileid.value);\n-    if (ret != 0) {\n-        throw std::runtime_error(strprintf(\"BerkeleyBatch: Can't open database %s (get_fileid failed with %d)\", filename, ret));\n-    }\n-\n-    for (const auto& item : env.m_fileids) {\n-        if (fileid == item.second && &fileid != &item.second) {\n-            throw std::runtime_error(strprintf(\"BerkeleyBatch: Can't open database %s (duplicates fileid %s from %s)\", filename,\n-                HexStr(std::begin(item.second.value), std::end(item.second.value)), item.first));\n-        }\n-    }\n-}\n+std::unordered_map<std::string, WalletDatabaseFileId> g_fileids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432665557",
      "id" : 432665557,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2NTU1Nw==",
      "original_commit_id" : "79fe2edc4457ee70754b08d5e8d2309b86038395",
      "original_line" : 30,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 421187137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432665557",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432669086"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432669086"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Use a global g_fileids instead of m_fileids for each env\" (79fe2edc4457ee70754b08d5e8d2309b86038395)\r\n\r\nThis is just a style comment, but there's already a lot going on in this method, and it might be nice to move this long comment and block of code out to a `void AddUniqueFileId(Db& db, const std::string& path)` helper function that gets file id, checks it and adds it to the map",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-29T18:40:46Z",
      "diff_hunk" : "@@ -405,24 +390,34 @@ void BerkeleyDatabase::Open(const char* pszMode)\n             if (ret != 0) {\n                 throw std::runtime_error(strprintf(\"BerkeleyDatabase: Error %d, can't open database %s\", ret, strFile));\n             }\n-\n-            // Call CheckUniqueFileid on the containing BDB environment to\n-            // avoid BDB data consistency bugs that happen when different data\n-            // files in the same environment have the same fileid.\n-            //\n-            // Also call CheckUniqueFileid on all the other g_dbenvs to prevent\n-            // bitcoin from opening the same data file through another\n-            // environment when the file is referenced through equivalent but\n-            // not obviously identical symlinked or hard linked or bind mounted\n-            // paths. In the future a more relaxed check for equal inode and\n-            // device ids could be done instead, which would allow opening\n-            // different backup copies of a wallet at the same time. Maybe even\n-            // more ideally, an exclusive lock for accessing the database could\n-            // be implemented, so no equality checks are needed at all. (Newer\n-            // versions of BDB have an set_lk_exclusive method for this\n-            // purpose, but the older version we use does not.)\n-            for (const auto& env : g_dbenvs) {\n-                CheckUniqueFileid(*env.second.lock().get(), strFile, *pdb_temp, this->env->m_fileids[strFile]);\n+            m_file_path = (env->Directory() / strFile).string();\n+\n+            if (!env->IsMock()) {\n+                // Check that the BDB file id has not already been loaded in any BDB environment\n+                // to avoid BDB data consistency bugs that happen when different data\n+                // files in the same environment have the same fileid. All BDB environments are\n+                // checked to prevent bitcoin from opening the same data file through another\n+                // environment when the file is referenced through equivalent but\n+                // not obviously identical symlinked or hard linked or bind mounted\n+                // paths. In the future a more relaxed check for equal inode and\n+                // device ids could be done instead, which would allow opening\n+                // different backup copies of a wallet at the same time. Maybe even\n+                // more ideally, an exclusive lock for accessing the database could\n+                // be implemented, so no equality checks are needed at all. (Newer\n+                // versions of BDB have an set_lk_exclusive method for this\n+                // purpose, but the older version we use does not.)\n+                WalletDatabaseFileId fileid;\n+                int fileid_ret = pdb_temp->get_mpf()->get_fileid(fileid.value);\n+                if (fileid_ret != 0) {\n+                    throw std::runtime_error(strprintf(\"BerkeleyDatabase: Can't open database %s (get_fileid failed with %d)\", strFile, fileid_ret));\n+                }\n+                for (const auto& item : g_fileids) {\n+                    if (fileid == item.second && item.first != m_file_path) {\n+                        throw std::runtime_error(strprintf(\"BerkeleyDatabase: Can't open database %s (duplicates fileid %s from %s)\", strFile,\n+                            HexStr(std::begin(item.second.value), std::end(item.second.value)), item.first));\n+                    }\n+                }\n+                g_fileids[m_file_path] = fileid;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432669086",
      "id" : 432669086,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2OTA4Ng==",
      "original_commit_id" : "79fe2edc4457ee70754b08d5e8d2309b86038395",
      "original_line" : 420,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 421187137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432669086",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432677500"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432677500"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Add BerkeleyDatabase::Release\" (bd13bec012a56447e0dae9e46ba3693bcc2b561d)\r\n\r\nNote: Maybe this comment could be extended to say how Release should be used. The commit message has a longer comment, but I'm not sure I understand it. Particularly: \"Flush can be done before Release, and Close after.\" I don't see how calling close after release could be safe because it it would decrement the use count twice. Is the idea that caller should do something like Open Change Release, Open Change Release, Open Change Close? It'd be good to have some kind of RAII WalletBatch type class to force correct usage, if something like this isn't already added later",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-29T18:58:22Z",
      "diff_hunk" : "@@ -143,9 +143,12 @@ class BerkeleyDatabase\n         return MakeUnique<BerkeleyDatabase>(std::make_shared<BerkeleyEnvironment>(), \"\");\n     }\n \n-    /** Open the database if it is not already opened */\n+    /** Open the database if it is not already opened. Increments mapFileUseCount */\n     void Open(const char* mode);\n \n+    /** Indicate that database user has stopped using the database. Decrement mapFileUseCount */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432677500",
      "id" : 432677500,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY3NzUwMA==",
      "original_commit_id" : "bd13bec012a56447e0dae9e46ba3693bcc2b561d",
      "original_line" : 149,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 421187137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432677500",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432686357"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432686357"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Change BerkeleyDatabase::Flush to Close\" (1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71)\r\n\r\nWhy is this calling g_dbenvs.erase? It seems like it is redundant with env = nullptr assignment below which should trigger erasing in BerkeleyEnvironment::~BerkeleyEnvironment destructor. It also seems unsafe if there's another database open in the same environment.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-29T19:18:46Z",
      "diff_hunk" : "@@ -350,6 +355,18 @@ BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bo\n     }\n }\n \n+BerkeleyDatabase::~BerkeleyDatabase()\n+{\n+    Close();\n+    if (env) {\n+        LOCK(cs_db);\n+        size_t erased = env->m_databases.erase(strFile);\n+        assert(erased == 1);\n+        g_dbenvs.erase(env->Directory().string());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432686357",
      "id" : 432686357,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4NjM1Nw==",
      "original_commit_id" : "1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71",
      "original_line" : 365,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 421187137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432686357",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432690287"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432690287"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Change BerkeleyDatabase::Flush to Close\" (1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71)\r\n\r\nQ: If there are multiple databases open in the same environment, previously logs would be consolidated and removed if any database was closed and no other database was writing, but now it will not consolidate logs until the last database in the environment is closed? This seems fine, but it would be good if the commit message was clearer about what the exact change in behavior is since this doesn't seem purely like a refactoring.\r\n\r\nAlso, maybe the commit could be split up. It seems like log consolidation code moving from here to the environment destructor could be done independently of the flush/close api change. I could be missing the connection, though.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-29T19:28:01Z",
      "diff_hunk" : "@@ -619,17 +637,7 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n             } else\n                 mi++;\n         }\n-        LogPrint(BCLog::WALLETDB, \"BerkeleyEnvironment::Flush: Flush(%s)%s took %15dms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" database not started\", GetTimeMillis() - nStart);\n-        if (fShutdown) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432690287",
      "id" : 432690287,
      "line" : 637,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MDI4Nw==",
      "original_commit_id" : "1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71",
      "original_line" : 637,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : 626,
      "pull_request_review_id" : 421187137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432690287",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432694132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432694132"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Change BerkeleyDatabase::Flush to Close\" (1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71)\r\n\r\nTodo was actually already implemented and should be dropped. It was added in 2d796faf62095e83f74337c26e7e1a8c3957cf3c https://github.com/bitcoin/bitcoin/pull/14320#discussion_r227811095 and implemented in f1f4bb7345b90853ec5037478173601035593d26 #11911",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-29T19:36:58Z",
      "diff_hunk" : "@@ -720,22 +728,16 @@ bool BerkeleyDatabase::Backup(const std::string& strDest) const\n     }\n }\n \n-void BerkeleyDatabase::Flush(bool shutdown)\n+void BerkeleyDatabase::Close()\n {\n     if (!IsDummy()) {\n-        env->Flush(shutdown);\n-        if (shutdown) {\n-            LOCK(cs_db);\n-            g_dbenvs.erase(env->Directory().string());\n-            env = nullptr;\n-        } else {\n-            // TODO: To avoid g_dbenvs.erase erasing the environment prematurely after the\n-            // first database shutdown when multiple databases are open in the same\n-            // environment, should replace raw database `env` pointers with shared or weak\n-            // pointers, or else separate the database and environment shutdowns so\n-            // environments can be shut down after databases.\n-            g_fileids.erase(m_file_path);\n-        }\n+        env->Flush();\n+        // TODO: To avoid g_dbenvs.erase erasing the environment prematurely after the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432694132",
      "id" : 432694132,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5NDEzMg==",
      "original_commit_id" : "1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71",
      "original_line" : 735,
      "original_position" : 105,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 421187137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432694132",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432704579"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432704579"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: track database file use as m_refcount within BerkeleyDatabase\" (9cfb631f808aa6ccb10ab31d4b8325bd940a8916)\r\n\r\nWhat's this doing? It seems like either this should already be 0 or it would be unsafe to overwrite if not already 0",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-29T19:53:37Z",
      "diff_hunk" : "@@ -652,30 +646,23 @@ bool BerkeleyDatabase::PeriodicFlush()\n     {\n         // Don't do this if any databases are in use\n         int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n+        for (auto& db_it : env->m_databases) {\n+            nRefCount += db_it.second.get().m_refcount;\n         }\n \n         if (nRefCount == 0)\n         {\n             boost::this_thread::interruption_point();\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+            LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n+            int64_t nStart = GetTimeMillis();\n \n-                // Flush wallet file so it's self contained\n-                env->CloseDb(strFile);\n-                env->CheckpointLSN(strFile);\n+            // Flush wallet file so it's self contained\n+            env->CloseDb(strFile);\n+            env->CheckpointLSN(strFile);\n \n-                env->mapFileUseCount.erase(mi++);\n-                LogPrint(BCLog::WALLETDB, \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n-                ret = true;\n-            }\n+            m_refcount = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432704579",
      "id" : 432704579,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNDU3OQ==",
      "original_commit_id" : "9cfb631f808aa6ccb10ab31d4b8325bd940a8916",
      "original_line" : 663,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 421187137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432704579",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432708264"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432708264"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: track database file use as m_refcount within BerkeleyDatabase\" (9cfb631f808aa6ccb10ab31d4b8325bd940a8916)\r\n\r\nNote: seems this commit drops distinction between use count being 0 and use count not existing (no map entry). I think 0 use count meant the database wasn't in use but wasn't flushed yet, and no use count meant it was flushed. I think the last piece of code which used this distinction was the log_archive code removed in the previous commit 1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-29T20:01:52Z",
      "diff_hunk" : "@@ -531,11 +529,10 @@ bool BerkeleyBatch::Rewrite(BerkeleyDatabase& database, const char* pszSkip)\n     while (true) {\n         {\n             LOCK(cs_db);\n-            if (!env->mapFileUseCount.count(strFile) || env->mapFileUseCount[strFile] == 0) {\n+            if (database.m_refcount == 0) {\n                 // Flush log data to the dat file\n                 env->CloseDb(strFile);\n                 env->CheckpointLSN(strFile);\n-                env->mapFileUseCount.erase(strFile);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432708264",
      "id" : 432708264,
      "line" : 534,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwODI2NA==",
      "original_commit_id" : "9cfb631f808aa6ccb10ab31d4b8325bd940a8916",
      "original_line" : 534,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : 523,
      "pull_request_review_id" : 421187137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432708264",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432987494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432987494"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: assert as unreachable?",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-05-31T21:49:56Z",
      "diff_hunk" : "@@ -3682,15 +3682,11 @@ bool CWallet::Verify(interfaces::Chain& chain, const WalletLocation& location, b\n     std::unique_ptr<WalletDatabase> database = WalletDatabase::Create(wallet_path);\n \n     try {\n-        if (!WalletBatch::VerifyEnvironment(wallet_path, error_string)) {\n-            return false;\n-        }\n+        return database->Verify(error_string);\n     } catch (const fs::filesystem_error& e) {\n         error_string = Untranslated(strprintf(\"Error loading wallet %s. %s\", location.GetName(), fsbridge::get_filesystem_error_message(e)));\n         return false;\n     }\n-\n-    return WalletBatch::VerifyDatabaseFile(wallet_path, error_string);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432987494",
      "id" : 432987494,
      "line" : 3693,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4NzQ5NA==",
      "original_commit_id" : "4decfab19f26cf21be6da1a371220e918c0d2dc8",
      "original_line" : 3693,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 40,
      "pull_request_review_id" : 421530443,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432987494",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432999447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432999447"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: this is unused",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-01T00:16:40Z",
      "diff_hunk" : "@@ -141,10 +142,14 @@ bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n             return false;\n         }\n         bilingual_str error;\n-        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+        std::vector<bilingual_str> warnings;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432999447",
      "id" : 432999447,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk5OTQ0Nw==",
      "original_commit_id" : "f06619ecd41d08484e02e41fc06a840b9057fcb6",
      "original_line" : 145,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/wallettool.cpp",
      "position" : null,
      "pull_request_review_id" : 421542040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432999447",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433411606"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433411606"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you are confusing `BerkeleyBatch` and `BerkeleyDatabase`. `Release` is called by `BerkeleyBatch::Close`, not `BerkeleyDatabase::Close`.\r\n\r\nIn a later commit, a corresponding `Acquire` function is added. In this commit, the thing that `Acquire` does is part of `Open`. The idea with the refcount is thusly: when something tries to use the database, it increments the refcount. When it is done, it decrements the refcount. The goal is to prevent the database from closing while something is still using the database. When `WalletBatch` is initialized, it calls `BerkeleyDatabase::Open` via `BerkeleyBatch`'s constructor. When `WalletBatch` is done and no longer being used, it calls `BerkeleyBatch::Close` which calls `BerkeleyDatabase::Release`. Then both the `BerkeleyBatch` and `WalletBatch` are destructed. The `BerkeleyDatabase` remains open so that future uses of the database don't need to reopen it and for other concurrent `WalletBatch`s to do their work.\r\n\r\nSo the flow with `BerkeleyDatabase` is `Open`, changes, `Release`, `Close`.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-01T18:28:29Z",
      "diff_hunk" : "@@ -143,9 +143,12 @@ class BerkeleyDatabase\n         return MakeUnique<BerkeleyDatabase>(std::make_shared<BerkeleyEnvironment>(), \"\");\n     }\n \n-    /** Open the database if it is not already opened */\n+    /** Open the database if it is not already opened. Increments mapFileUseCount */\n     void Open(const char* mode);\n \n+    /** Indicate that database user has stopped using the database. Decrement mapFileUseCount */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433411606",
      "id" : 433411606,
      "in_reply_to_id" : 432677500,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQxMTYwNg==",
      "original_commit_id" : "bd13bec012a56447e0dae9e46ba3693bcc2b561d",
      "original_line" : 149,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 422080385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433411606",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433417571"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433417571"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not entirely sure, but this is moved code.\r\n\r\nThis was originally called during `BerkeleyDatabase::Flush(true)`, i.e. when the database and environment are being closed. So I moved it into the destructor to go along with the other environment closing changes.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-01T18:39:57Z",
      "diff_hunk" : "@@ -350,6 +355,18 @@ BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bo\n     }\n }\n \n+BerkeleyDatabase::~BerkeleyDatabase()\n+{\n+    Close();\n+    if (env) {\n+        LOCK(cs_db);\n+        size_t erased = env->m_databases.erase(strFile);\n+        assert(erased == 1);\n+        g_dbenvs.erase(env->Directory().string());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433417571",
      "id" : 433417571,
      "in_reply_to_id" : 432686357,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQxNzU3MQ==",
      "original_commit_id" : "1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71",
      "original_line" : 365,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 422087985,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433417571",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433425570"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433425570"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Q: If there are multiple databases open in the same environment, previously logs would be consolidated and removed if any database was closed and no other database was writing, but now it will not consolidate logs until the last database in the environment is closed?\r\n\r\nI don't think that's what happened previously either. `Flush(true)` seems to have been only called during a bitcoind shutdown, not during typical wallet unloading. So previously, even after a wallet was unloaded, it's log files were never consolidated and removed. So this behavior ends up being retained. I don't think there is a behavior change here, although the it is difficult to work out exactly when the database and environment are actually being flushed and closed.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-01T18:55:04Z",
      "diff_hunk" : "@@ -619,17 +637,7 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n             } else\n                 mi++;\n         }\n-        LogPrint(BCLog::WALLETDB, \"BerkeleyEnvironment::Flush: Flush(%s)%s took %15dms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" database not started\", GetTimeMillis() - nStart);\n-        if (fShutdown) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433425570",
      "id" : 433425570,
      "in_reply_to_id" : 432690287,
      "line" : 637,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyNTU3MA==",
      "original_commit_id" : "1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71",
      "original_line" : 637,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : 626,
      "pull_request_review_id" : 422098277,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433425570",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433435981"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433435981"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-01T19:16:31Z",
      "diff_hunk" : "@@ -27,22 +27,7 @@ namespace {\n //! (https://docs.oracle.com/cd/E17275_01/html/programmer_reference/program_copy.html),\n //! so bitcoin should never create different databases with the same fileid, but\n //! this error can be triggered if users manually copy database files.\n-void CheckUniqueFileid(const BerkeleyEnvironment& env, const std::string& filename, Db& db, WalletDatabaseFileId& fileid)\n-{\n-    if (env.IsMock()) return;\n-\n-    int ret = db.get_mpf()->get_fileid(fileid.value);\n-    if (ret != 0) {\n-        throw std::runtime_error(strprintf(\"BerkeleyBatch: Can't open database %s (get_fileid failed with %d)\", filename, ret));\n-    }\n-\n-    for (const auto& item : env.m_fileids) {\n-        if (fileid == item.second && &fileid != &item.second) {\n-            throw std::runtime_error(strprintf(\"BerkeleyBatch: Can't open database %s (duplicates fileid %s from %s)\", filename,\n-                HexStr(std::begin(item.second.value), std::end(item.second.value)), item.first));\n-        }\n-    }\n-}\n+std::unordered_map<std::string, WalletDatabaseFileId> g_fileids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433435981",
      "id" : 433435981,
      "in_reply_to_id" : 432665557,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNTk4MQ==",
      "original_commit_id" : "79fe2edc4457ee70754b08d5e8d2309b86038395",
      "original_line" : 30,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 422111876,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433435981",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436045"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-01T19:16:37Z",
      "diff_hunk" : "@@ -405,24 +390,34 @@ void BerkeleyDatabase::Open(const char* pszMode)\n             if (ret != 0) {\n                 throw std::runtime_error(strprintf(\"BerkeleyDatabase: Error %d, can't open database %s\", ret, strFile));\n             }\n-\n-            // Call CheckUniqueFileid on the containing BDB environment to\n-            // avoid BDB data consistency bugs that happen when different data\n-            // files in the same environment have the same fileid.\n-            //\n-            // Also call CheckUniqueFileid on all the other g_dbenvs to prevent\n-            // bitcoin from opening the same data file through another\n-            // environment when the file is referenced through equivalent but\n-            // not obviously identical symlinked or hard linked or bind mounted\n-            // paths. In the future a more relaxed check for equal inode and\n-            // device ids could be done instead, which would allow opening\n-            // different backup copies of a wallet at the same time. Maybe even\n-            // more ideally, an exclusive lock for accessing the database could\n-            // be implemented, so no equality checks are needed at all. (Newer\n-            // versions of BDB have an set_lk_exclusive method for this\n-            // purpose, but the older version we use does not.)\n-            for (const auto& env : g_dbenvs) {\n-                CheckUniqueFileid(*env.second.lock().get(), strFile, *pdb_temp, this->env->m_fileids[strFile]);\n+            m_file_path = (env->Directory() / strFile).string();\n+\n+            if (!env->IsMock()) {\n+                // Check that the BDB file id has not already been loaded in any BDB environment\n+                // to avoid BDB data consistency bugs that happen when different data\n+                // files in the same environment have the same fileid. All BDB environments are\n+                // checked to prevent bitcoin from opening the same data file through another\n+                // environment when the file is referenced through equivalent but\n+                // not obviously identical symlinked or hard linked or bind mounted\n+                // paths. In the future a more relaxed check for equal inode and\n+                // device ids could be done instead, which would allow opening\n+                // different backup copies of a wallet at the same time. Maybe even\n+                // more ideally, an exclusive lock for accessing the database could\n+                // be implemented, so no equality checks are needed at all. (Newer\n+                // versions of BDB have an set_lk_exclusive method for this\n+                // purpose, but the older version we use does not.)\n+                WalletDatabaseFileId fileid;\n+                int fileid_ret = pdb_temp->get_mpf()->get_fileid(fileid.value);\n+                if (fileid_ret != 0) {\n+                    throw std::runtime_error(strprintf(\"BerkeleyDatabase: Can't open database %s (get_fileid failed with %d)\", strFile, fileid_ret));\n+                }\n+                for (const auto& item : g_fileids) {\n+                    if (fileid == item.second && item.first != m_file_path) {\n+                        throw std::runtime_error(strprintf(\"BerkeleyDatabase: Can't open database %s (duplicates fileid %s from %s)\", strFile,\n+                            HexStr(std::begin(item.second.value), std::end(item.second.value)), item.first));\n+                    }\n+                }\n+                g_fileids[m_file_path] = fileid;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436045",
      "id" : 433436045,
      "in_reply_to_id" : 432669086,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNjA0NQ==",
      "original_commit_id" : "79fe2edc4457ee70754b08d5e8d2309b86038395",
      "original_line" : 420,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 422111945,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436045",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436141"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed it",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-01T19:16:50Z",
      "diff_hunk" : "@@ -720,22 +728,16 @@ bool BerkeleyDatabase::Backup(const std::string& strDest) const\n     }\n }\n \n-void BerkeleyDatabase::Flush(bool shutdown)\n+void BerkeleyDatabase::Close()\n {\n     if (!IsDummy()) {\n-        env->Flush(shutdown);\n-        if (shutdown) {\n-            LOCK(cs_db);\n-            g_dbenvs.erase(env->Directory().string());\n-            env = nullptr;\n-        } else {\n-            // TODO: To avoid g_dbenvs.erase erasing the environment prematurely after the\n-            // first database shutdown when multiple databases are open in the same\n-            // environment, should replace raw database `env` pointers with shared or weak\n-            // pointers, or else separate the database and environment shutdowns so\n-            // environments can be shut down after databases.\n-            g_fileids.erase(m_file_path);\n-        }\n+        env->Flush();\n+        // TODO: To avoid g_dbenvs.erase erasing the environment prematurely after the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436141",
      "id" : 433436141,
      "in_reply_to_id" : 432694132,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNjE0MQ==",
      "original_commit_id" : "1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71",
      "original_line" : 735,
      "original_position" : 105,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 422112081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436141",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436200"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-01T19:16:57Z",
      "diff_hunk" : "@@ -652,30 +646,23 @@ bool BerkeleyDatabase::PeriodicFlush()\n     {\n         // Don't do this if any databases are in use\n         int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n+        for (auto& db_it : env->m_databases) {\n+            nRefCount += db_it.second.get().m_refcount;\n         }\n \n         if (nRefCount == 0)\n         {\n             boost::this_thread::interruption_point();\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+            LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n+            int64_t nStart = GetTimeMillis();\n \n-                // Flush wallet file so it's self contained\n-                env->CloseDb(strFile);\n-                env->CheckpointLSN(strFile);\n+            // Flush wallet file so it's self contained\n+            env->CloseDb(strFile);\n+            env->CheckpointLSN(strFile);\n \n-                env->mapFileUseCount.erase(mi++);\n-                LogPrint(BCLog::WALLETDB, \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n-                ret = true;\n-            }\n+            m_refcount = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436200",
      "id" : 433436200,
      "in_reply_to_id" : 432704579,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNjIwMA==",
      "original_commit_id" : "9cfb631f808aa6ccb10ab31d4b8325bd940a8916",
      "original_line" : 663,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 422112156,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436200",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436314"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also split this commit as you suggested.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-01T19:17:10Z",
      "diff_hunk" : "@@ -619,17 +637,7 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n             } else\n                 mi++;\n         }\n-        LogPrint(BCLog::WALLETDB, \"BerkeleyEnvironment::Flush: Flush(%s)%s took %15dms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" database not started\", GetTimeMillis() - nStart);\n-        if (fShutdown) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436314",
      "id" : 433436314,
      "in_reply_to_id" : 432690287,
      "line" : 637,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNjMxNA==",
      "original_commit_id" : "1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71",
      "original_line" : 637,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : 626,
      "pull_request_review_id" : 422112303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436314",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436356"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-01T19:17:17Z",
      "diff_hunk" : "@@ -3682,15 +3682,11 @@ bool CWallet::Verify(interfaces::Chain& chain, const WalletLocation& location, b\n     std::unique_ptr<WalletDatabase> database = WalletDatabase::Create(wallet_path);\n \n     try {\n-        if (!WalletBatch::VerifyEnvironment(wallet_path, error_string)) {\n-            return false;\n-        }\n+        return database->Verify(error_string);\n     } catch (const fs::filesystem_error& e) {\n         error_string = Untranslated(strprintf(\"Error loading wallet %s. %s\", location.GetName(), fsbridge::get_filesystem_error_message(e)));\n         return false;\n     }\n-\n-    return WalletBatch::VerifyDatabaseFile(wallet_path, error_string);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436356",
      "id" : 433436356,
      "in_reply_to_id" : 432987494,
      "line" : 3693,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNjM1Ng==",
      "original_commit_id" : "4decfab19f26cf21be6da1a371220e918c0d2dc8",
      "original_line" : 3693,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 40,
      "pull_request_review_id" : 422112361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436356",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436421"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-01T19:17:24Z",
      "diff_hunk" : "@@ -141,10 +142,14 @@ bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n             return false;\n         }\n         bilingual_str error;\n-        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+        std::vector<bilingual_str> warnings;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r433436421",
      "id" : 433436421,
      "in_reply_to_id" : 432999447,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNjQyMQ==",
      "original_commit_id" : "f06619ecd41d08484e02e41fc06a840b9057fcb6",
      "original_line" : 145,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/wallettool.cpp",
      "position" : null,
      "pull_request_review_id" : 422112433,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T16:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433436421",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-06-02T16:10:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#issuecomment-637655118",
      "id" : 637655118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNzY1NTExOA==",
      "updated_at" : "2020-06-02T16:10:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/637655118",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r434111610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434111610"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 3cdb7fd9d1e92f07c04c325c9b585ff736162198: it's a bit odd that you're introducing `m_read_only` here because it's not read anywhere yet. 64a5a29d692378df443ae599b81c1f4547ec3d03 seems a better place to introduce it.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-02T19:03:33Z",
      "diff_hunk" : "@@ -349,13 +349,26 @@ void BerkeleyEnvironment::CheckpointLSN(const std::string& strFile)\n \n BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bool fFlushOnCloseIn) : pdb(nullptr), activeTxn(nullptr)\n {\n+    database.Open(pszMode);\n     fReadOnly = (!strchr(pszMode, '+') && !strchr(pszMode, 'w'));\n     fFlushOnClose = fFlushOnCloseIn;\n     env = database.env.get();\n-    if (database.IsDummy()) {\n+    pdb = database.m_db.get();\n+    strFile = database.strFile;\n+    if (strchr(pszMode, 'c') != nullptr && !Exists(std::string(\"version\"))) {\n+        bool fTmp = fReadOnly;\n+        fReadOnly = false;\n+        Write(std::string(\"version\"), CLIENT_VERSION);\n+        fReadOnly = fTmp;\n+    }\n+}\n+\n+void BerkeleyDatabase::Open(const char* pszMode)\n+{\n+    m_read_only = (!strchr(pszMode, '+') && !strchr(pszMode, 'w'));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r434111610",
      "id" : 434111610,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExMTYxMA==",
      "original_commit_id" : "3cdb7fd9d1e92f07c04c325c9b585ff736162198",
      "original_line" : 368,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 422974932,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T19:48:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434111610",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r434130529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434130529"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3cdb7fd9d1e92f07c04c325c9b585ff736162198 nit: rename breaks comment indent (it's still broken in `bdb.cpp` after the move)",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-02T19:37:04Z",
      "diff_hunk" : "@@ -377,19 +389,19 @@ BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bo\n                 DbMpoolFile* mpf = pdb_temp->get_mpf();\n                 ret = mpf->set_flags(DB_MPOOL_NOFILE, 1);\n                 if (ret != 0) {\n-                    throw std::runtime_error(strprintf(\"BerkeleyBatch: Failed to configure for no temp file backing for database %s\", strFilename));\n+                    throw std::runtime_error(strprintf(\"BerkeleyDatabase: Failed to configure for no temp file backing for database %s\", strFile));\n                 }\n             }\n \n             ret = pdb_temp->open(nullptr,                             // Txn pointer\n-                            fMockDb ? nullptr : strFilename.c_str(),  // Filename\n-                            fMockDb ? strFilename.c_str() : \"main\",   // Logical db name\n+                            fMockDb ? nullptr : strFile.c_str(),  // Filename\n+                            fMockDb ? strFile.c_str() : \"main\",   // Logical db name",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r434130529",
      "id" : 434130529,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMDUyOQ==",
      "original_commit_id" : "3cdb7fd9d1e92f07c04c325c9b585ff736162198",
      "original_line" : 398,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 422974932,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T19:48:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434130529",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r434132604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434132604"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3cdb7fd9d1e92f07c04c325c9b585ff736162198  nit: the `fCreate` helper variable makes this more readable. It's introduced in a later commit, but might as well do it here.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-02T19:41:18Z",
      "diff_hunk" : "@@ -349,13 +349,26 @@ void BerkeleyEnvironment::CheckpointLSN(const std::string& strFile)\n \n BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bool fFlushOnCloseIn) : pdb(nullptr), activeTxn(nullptr)\n {\n+    database.Open(pszMode);\n     fReadOnly = (!strchr(pszMode, '+') && !strchr(pszMode, 'w'));\n     fFlushOnClose = fFlushOnCloseIn;\n     env = database.env.get();\n-    if (database.IsDummy()) {\n+    pdb = database.m_db.get();\n+    strFile = database.strFile;\n+    if (strchr(pszMode, 'c') != nullptr && !Exists(std::string(\"version\"))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r434132604",
      "id" : 434132604,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMjYwNA==",
      "original_commit_id" : "3cdb7fd9d1e92f07c04c325c9b585ff736162198",
      "original_line" : 358,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 422974932,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-02T19:48:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434132604",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436743379"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436743379"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Use a global g_fileids instead of m_fileids for each env\" (b6a6e0292c226f67b9ee177f9732a936aa7a0d7e)\r\n\r\nMinor: it would be better to drop `filename` argument and just print `path` value instead in all the error messages below currently using `filename`. When this code was originally written, there was only one environment so it made sense to print just the `filename` without the environment path. But now that `-wallet` values are usually environment paths, not filenames in a shared environment, `filename` isn't descriptive or unique anymore.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T14:15:49Z",
      "diff_hunk" : "@@ -25,24 +26,39 @@ namespace {\n //! (https://docs.oracle.com/cd/E17275_01/html/programmer_reference/program_copy.html),\n //! so bitcoin should never create different databases with the same fileid, but\n //! this error can be triggered if users manually copy database files.\n-void CheckUniqueFileid(const BerkeleyEnvironment& env, const std::string& filename, Db& db, WalletDatabaseFileId& fileid)\n-{\n-    if (env.IsMock()) return;\n+std::unordered_map<std::string, WalletDatabaseFileId> g_fileids GUARDED_BY(cs_db);\n \n-    int ret = db.get_mpf()->get_fileid(fileid.value);\n-    if (ret != 0) {\n-        throw std::runtime_error(strprintf(\"BerkeleyBatch: Can't open database %s (get_fileid failed with %d)\", filename, ret));\n+static void AddUniqueFileId(Db& db, const std::string& path, const std::string& filename)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436743379",
      "id" : 436743379,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0MzM3OQ==",
      "original_commit_id" : "b6a6e0292c226f67b9ee177f9732a936aa7a0d7e",
      "original_line" : 31,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436743379",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436769899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436769899"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Use a global g_fileids instead of m_fileids for each env\" (b6a6e0292c226f67b9ee177f9732a936aa7a0d7e)\r\n\r\nMinor: It would be good to restore the new paragraph break before \"All BDB environments\" and replace \"All BDB environments are checked to prevent...\" with \"In addition to disallowing opening databases with the same fileid in the same environment, also disallow opening databases with the same fileid in other environments to prevent...\"\r\n\r\nThe first sentence here is talking about a necessary fix (from #11476) for a BDB corruption issue. The second sentence and rest of the paragraph is talking about a different, clumsy workaround (from https://github.com/bitcoin/bitcoin/pull/11687#event-1366258575) to try to prevent bitcoin from reopening an already opened wallet, which it would be better to remove and replace with some type of exclusive lock",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T14:52:58Z",
      "diff_hunk" : "@@ -25,24 +26,39 @@ namespace {\n //! (https://docs.oracle.com/cd/E17275_01/html/programmer_reference/program_copy.html),\n //! so bitcoin should never create different databases with the same fileid, but\n //! this error can be triggered if users manually copy database files.\n-void CheckUniqueFileid(const BerkeleyEnvironment& env, const std::string& filename, Db& db, WalletDatabaseFileId& fileid)\n-{\n-    if (env.IsMock()) return;\n+std::unordered_map<std::string, WalletDatabaseFileId> g_fileids GUARDED_BY(cs_db);\n \n-    int ret = db.get_mpf()->get_fileid(fileid.value);\n-    if (ret != 0) {\n-        throw std::runtime_error(strprintf(\"BerkeleyBatch: Can't open database %s (get_fileid failed with %d)\", filename, ret));\n+static void AddUniqueFileId(Db& db, const std::string& path, const std::string& filename)\n+{\n+    LOCK(cs_db);\n+    // Check that the BDB file id has not already been loaded in any BDB environment\n+    // to avoid BDB data consistency bugs that happen when different data\n+    // files in the same environment have the same fileid. All BDB environments are",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436769899",
      "id" : 436769899,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2OTg5OQ==",
      "original_commit_id" : "b6a6e0292c226f67b9ee177f9732a936aa7a0d7e",
      "original_line" : 36,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436769899",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436849879"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436849879"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: track database file use as m_refcount within BerkeleyDatabase\" (9603e233c9c4049a267282615b5e4f31600656e6)\r\n\r\nNote: Line is moved outside this function to the only caller, BerkeleyBatch::BerkeleyBatch",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T16:49:40Z",
      "diff_hunk" : "@@ -445,7 +444,6 @@ void BerkeleyDatabase::Open(const char* pszMode)\n             m_db.reset(pdb_temp.release());\n \n         }\n-        ++env->mapFileUseCount[strFile];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436849879",
      "id" : 436849879,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0OTg3OQ==",
      "original_commit_id" : "9603e233c9c4049a267282615b5e4f31600656e6",
      "original_line" : 448,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436849879",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436855238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436855238"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Add BerkeleyDatabase::Release\" (8726d373e165087789933eb03383dd7feee31d3f)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432677500\r\n\r\n> So the flow with `BerkeleyDatabase` is `Open`, changes, `Release`, `Close`.\r\n\r\nThank you! I was missing the idea that Release wouldn't actively close anything, just lazily indicate that it could be closed.\r\n\r\nMaybe just add \"and that it could be flushed or closed\" to the first sentence in the comment. I might also rename Acquire/Release to AddRef/RemoveRef to suggest that these are accounting functions and not functions that actually acquire or release resources.  ",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T16:58:47Z",
      "diff_hunk" : "@@ -143,9 +143,12 @@ class BerkeleyDatabase\n         return MakeUnique<BerkeleyDatabase>(std::make_shared<BerkeleyEnvironment>(), \"\");\n     }\n \n-    /** Open the database if it is not already opened */\n+    /** Open the database if it is not already opened. Increments mapFileUseCount */\n     void Open(const char* mode);\n \n+    /** Indicate that database user has stopped using the database. Decrement mapFileUseCount */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436855238",
      "id" : 436855238,
      "in_reply_to_id" : 432677500,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1NTIzOA==",
      "original_commit_id" : "bd13bec012a56447e0dae9e46ba3693bcc2b561d",
      "original_line" : 149,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436855238",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436856577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436856577"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Change BerkeleyDatabase::Flush to Close\" (f3b553f36e83c44a4edb51710ae673d6b9b3e573)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432686357\r\n\r\n> Not entirely sure, but this is moved code.\r\n> \r\n> This was originally called during `BerkeleyDatabase::Flush(true)`, i.e. when the database and environment are being closed. So I moved it into the destructor to go along with the other environment closing changes.\r\n\r\nThanks for explaining. It looks like the previous code has the same bug and could also inappropriately erase a g_dbenvs entry for an environment with multiple open databases. However, the previous code was less likely to cause problems, because it only ran when the whole node was shutting down (fShutdown=true). Now that this code runs not just when completely shutting down (e.g. it also runs during unloadwallet calls), it could cause new corruption issues if a g_dbenvs entry is missing and there's a later loadwallet call.\r\n\r\nSo I think you want to drop g_dbenvs.erase() here and just let the BerkeleyEnvironment destructor do the erasing. I think you could drop the `env = nullptr` here too.\r\n\r\n",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T17:01:05Z",
      "diff_hunk" : "@@ -350,6 +355,18 @@ BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bo\n     }\n }\n \n+BerkeleyDatabase::~BerkeleyDatabase()\n+{\n+    Close();\n+    if (env) {\n+        LOCK(cs_db);\n+        size_t erased = env->m_databases.erase(strFile);\n+        assert(erased == 1);\n+        g_dbenvs.erase(env->Directory().string());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436856577",
      "id" : 436856577,
      "in_reply_to_id" : 432686357,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1NjU3Nw==",
      "original_commit_id" : "1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71",
      "original_line" : 365,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436856577",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436856857"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436856857"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Move log consolidation into BerkeleyEnvironment::Close\" (2c663e453104b2f49849d8bc80727e98abda8055)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/18971#discussion_r432690287\r\n\r\n> I don't think there is a behavior change here, although the it is difficult to work out exactly when the database and environment are actually being flushed and closed.\r\n\r\nThanks I missed that Flush(true) was wasn't called on unload.\r\n\r\nI think it's good if the commit message at least says what the change intends without getting into details, so reviewers have something to check and so we know if changes are going in a consistent direction.\r\n\r\nIn this case would suggest adding something like: \"With this change, logs are now consolidated whenever the last database in an environment is closed (e.g. a in unloadwallet RPC call), instead of only during node shutdown and wallet encryption.\" to commit message for \"walletdb: Move log consolidation into BerkeleyEnvironment::Close\" (2c663e453104b2f49849d8bc80727e98abda8055).",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T17:01:34Z",
      "diff_hunk" : "@@ -619,17 +637,7 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n             } else\n                 mi++;\n         }\n-        LogPrint(BCLog::WALLETDB, \"BerkeleyEnvironment::Flush: Flush(%s)%s took %15dms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" database not started\", GetTimeMillis() - nStart);\n-        if (fShutdown) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436856857",
      "id" : 436856857,
      "in_reply_to_id" : 432690287,
      "line" : 637,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1Njg1Nw==",
      "original_commit_id" : "1dbc24d27d4b54b45c6b49ba41b4f64d0093dd71",
      "original_line" : 637,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : 626,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436856857",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436940102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436940102"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Change BerkeleyDatabase::Flush to Close\" (f3b553f36e83c44a4edb51710ae673d6b9b3e573)\r\n\r\nI don't think it makes sense to add this new database.reset() here. The only two places calling this function with shutdown=true are immediately deleting the whole CWallet[1][2], so having this condition and branch just seems like adding complexity for no reason. If there is a reason why we want a CWallet instance with a null database pointer, saying what that reason is in a comment on the database.reset() call here would be helpful.\r\n\r\n[1] https://github.com/bitcoin/bitcoin/blob/f3b553f36e83c44a4edb51710ae673d6b9b3e573/src/wallet/wallet.cpp#L116-L117\r\n[2] https://github.com/bitcoin/bitcoin/blob/f3b553f36e83c44a4edb51710ae673d6b9b3e573/src/init.cpp#L284-L296",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T19:14:44Z",
      "diff_hunk" : "@@ -430,7 +430,12 @@ bool CWallet::HasWalletSpend(const uint256& txid) const\n \n void CWallet::Flush(bool shutdown)\n {\n-    database->Flush(shutdown);\n+    if (database) {\n+        database->Close();\n+        if (shutdown) {\n+            database.reset();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436940102",
      "id" : 436940102,
      "line" : 436,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk0MDEwMg==",
      "original_commit_id" : "f3b553f36e83c44a4edb51710ae673d6b9b3e573",
      "original_line" : 436,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 17,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436940102",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436976128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436976128"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Use a global g_fileids instead of m_fileids for each env\" (b6a6e0292c226f67b9ee177f9732a936aa7a0d7e)\r\n\r\nThis isn't actually the right place to be erasing the fileid entry. A Fileid entry is created when a database is opened (when BerkeleyDatabase::m_db is set in BerkeleyDatabase::Open) and it should be erased when the database is closed (when BerkeleyDatabase::m_db is deleted in BerkeleyEnvironment::CloseDb and BerkeleyEnvironment::CloseDb).\r\n\r\nSo I think this whole else block should be dropped and g_fileids.erase calls just added the two places where m_db.reset() is called.\r\n\r\nIt looks like this code *mostly* worked before because the fileids.erase here was usually paired with a CloseDb call inside the env->Flush(shutdown) line above calling m_db.reset(). But with bad timing, a g_fileids entry could be erased without a database close, resulting in missing \"duplicates fileid\" errors, and a database could be closed without deleting a g_fileids entry resulting in spurious \"duplicates fileid\" errors. Better not to carry this strangeness forward, and simply pair all m_db and g_fileids updates together.\r\n\r\n",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T20:20:05Z",
      "diff_hunk" : "@@ -740,7 +742,8 @@ void BerkeleyDatabase::Flush(bool shutdown)\n             // environment, should replace raw database `env` pointers with shared or weak\n             // pointers, or else separate the database and environment shutdowns so\n             // environments can be shut down after databases.\n-            env->m_fileids.erase(strFile);\n+            LOCK(cs_db);\n+            g_fileids.erase(m_file_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r436976128",
      "id" : 436976128,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NjEyOA==",
      "original_commit_id" : "b6a6e0292c226f67b9ee177f9732a936aa7a0d7e",
      "original_line" : 746,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436976128",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437012889"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437012889"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Change BerkeleyDatabase::Flush to Close\" (f3b553f36e83c44a4edb51710ae673d6b9b3e573)\r\n\r\nCould you add an `assert(!m_db);` here as well? The Close() call above *should* be properly closing the database but this depends on a big strand of spaghetti that an assert might prevent getting chewed up in the future.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T21:31:00Z",
      "diff_hunk" : "@@ -384,6 +384,18 @@ BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bo\n     }\n }\n \n+BerkeleyDatabase::~BerkeleyDatabase()\n+{\n+    Close();\n+    if (env) {\n+        LOCK(cs_db);\n+        size_t erased = env->m_databases.erase(strFile);\n+        assert(erased == 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437012889",
      "id" : 437012889,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAxMjg4OQ==",
      "original_commit_id" : "f3b553f36e83c44a4edb51710ae673d6b9b3e573",
      "original_line" : 393,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437012889",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437020063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437020063"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: track database file use as m_refcount within BerkeleyDatabase\" (9603e233c9c4049a267282615b5e4f31600656e6)\r\n\r\nI think you need to call Acquire() here before Open() not after. Now that the reference count is no longer protected by the cs_db mutex there is a race condition where rewrite/flush/backup functions could start running between the Open and Acquire calls here and and start rewriting/flushing/backing up while this batch is active.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T21:47:27Z",
      "diff_hunk" : "@@ -371,6 +369,7 @@ void BerkeleyEnvironment::CheckpointLSN(const std::string& strFile)\n BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bool fFlushOnCloseIn) : pdb(nullptr), activeTxn(nullptr), m_database(database)\n {\n     database.Open(pszMode);\n+    database.Acquire();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437020063",
      "id" : 437020063,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMDA2Mw==",
      "original_commit_id" : "9603e233c9c4049a267282615b5e4f31600656e6",
      "original_line" : 372,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437020063",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437028132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437028132"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: track database file use as m_refcount within BerkeleyDatabase\" (9603e233c9c4049a267282615b5e4f31600656e6)\r\n\r\nEven though `m_refcount` is atomic you still have to lock cs_db while updating it, otherwise the `m_db_in_use.notify_all()` call may result in a lost wakeup and infinite hang if the `m_db_in_use.wait()` lambda happens to run at the same time `m_refcount` is decremented and return `false` (see https://stackoverflow.com/a/41875321 or https://github.com/isocpp/CppCoreGuidelines/issues/554).",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T22:07:20Z",
      "diff_hunk" : "@@ -755,9 +740,11 @@ std::string BerkeleyDatabaseVersion()\n \n void BerkeleyDatabase::Release()\n {\n-    {\n-        LOCK(cs_db);\n-        --env->mapFileUseCount[strFile];\n-    }\n+    m_refcount--;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437028132",
      "id" : 437028132,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyODEzMg==",
      "original_commit_id" : "9603e233c9c4049a267282615b5e4f31600656e6",
      "original_line" : 743,
      "original_position" : 156,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437028132",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437039174"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437039174"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Handle cursor internally\" (2711caa2a2d4f04b848c25b614b353a1a08351b0)\r\n\r\nBehavior isn't changing in this commit, but error handling here is broken, right? This should be returning failure if creating a cursor doesn't succeed, not just pretending it succeeded and not reading anything.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T22:37:01Z",
      "diff_hunk" : "@@ -550,17 +550,17 @@ bool BerkeleyBatch::Rewrite(BerkeleyDatabase& database, const char* pszSkip)\n                         fSuccess = false;\n                     }\n \n-                    Dbc* pcursor = db.GetCursor();\n-                    if (pcursor)\n+                    if (db.CreateCursor())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437039174",
      "id" : 437039174,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAzOTE3NA==",
      "original_commit_id" : "2711caa2a2d4f04b848c25b614b353a1a08351b0",
      "original_line" : 553,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437039174",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437039991"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437039991"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Handle cursor internally\" (2711caa2a2d4f04b848c25b614b353a1a08351b0)\r\n\r\nI think this needs to either return false if m_cursor is not null or assert that it is null, otherwise calling this at the wrong time will silently leak memory",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-08T22:39:23Z",
      "diff_hunk" : "@@ -332,27 +333,32 @@ class BerkeleyBatch\n         return (ret == 0);\n     }\n \n-    Dbc* GetCursor()\n+    bool CreateCursor()\n     {\n         if (!pdb)\n-            return nullptr;\n-        Dbc* pcursor = nullptr;\n-        int ret = pdb->cursor(nullptr, &pcursor, 0);\n+            return false;\n+        m_cursor = nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437039991",
      "id" : 437039991,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAzOTk5MQ==",
      "original_commit_id" : "2711caa2a2d4f04b848c25b614b353a1a08351b0",
      "original_line" : 340,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 426287040,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-08T22:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437039991",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437308991"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437308991"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Move Rewrite into BerkeleyDatabase\" (75f3532a70abf4331aba212f979a2e8be02d191c)\r\n\r\nI think Acquire and Release calls here should be dropped because they are misleading and don't do anything and add extra potential for leaks and bugs. Acquire/Release are used for shared access to a database, but this is doing exclusive access, with cs_db locked the whole time. It might be good to have a comment though. \r\n\r\n```c++\r\n// Not calling Acquire/Release here because this is an exclusive database\r\n// operation done with cs_db locked the entire time.\r\nOpen(\"r\"); \r\n```",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-09T10:33:02Z",
      "diff_hunk" : "@@ -536,7 +534,8 @@ bool BerkeleyBatch::Rewrite(BerkeleyDatabase& database, const char* pszSkip)\n                 LogPrintf(\"BerkeleyBatch::Rewrite: Rewriting %s...\\n\", strFile);\n                 std::string strFileRes = strFile + \".rewrite\";\n                 { // surround usage of db with extra {}\n-                    BerkeleyBatch db(database, \"r\");\n+                    Open(\"r\");\n+                    Acquire();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437308991",
      "id" : 437308991,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwODk5MQ==",
      "original_commit_id" : "75f3532a70abf4331aba212f979a2e8be02d191c",
      "original_line" : 538,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 427008108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-09T13:44:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437308991",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437309866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437309866"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Move Rewrite into BerkeleyDatabase\" (75f3532a70abf4331aba212f979a2e8be02d191c)\r\n\r\nShould remove comment previous line referring to `db` now outdated",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-09T10:34:45Z",
      "diff_hunk" : "@@ -536,7 +534,8 @@ bool BerkeleyBatch::Rewrite(BerkeleyDatabase& database, const char* pszSkip)\n                 LogPrintf(\"BerkeleyBatch::Rewrite: Rewriting %s...\\n\", strFile);\n                 std::string strFileRes = strFile + \".rewrite\";\n                 { // surround usage of db with extra {}\n-                    BerkeleyBatch db(database, \"r\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437309866",
      "id" : 437309866,
      "line" : 540,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwOTg2Ng==",
      "original_commit_id" : "75f3532a70abf4331aba212f979a2e8be02d191c",
      "original_line" : 539,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : 529,
      "pull_request_review_id" : 427008108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-09T13:44:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437309866",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437320102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437320102"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Move Txn* functions into WalletDatabase\" (e1ebc69a5e6628cadf480dfd6d787a6c9f631b86)\r\n\r\nThis seems bad. If there's an ongoing transaction and the database is closed, this should raise or return some error, not silently throw away data",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-09T10:54:59Z",
      "diff_hunk" : "@@ -706,6 +706,10 @@ bool BerkeleyDatabase::Backup(const std::string& strDest) const\n \n void BerkeleyDatabase::Close()\n {\n+    if (m_active_txn) {\n+        m_active_txn->abort();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437320102",
      "id" : 437320102,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMyMDEwMg==",
      "original_commit_id" : "e1ebc69a5e6628cadf480dfd6d787a6c9f631b86",
      "original_line" : 710,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 427008108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-09T13:44:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437320102",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437330343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437330343"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Move Txn* functions into WalletDatabase\" (e1ebc69a5e6628cadf480dfd6d787a6c9f631b86)\r\n\r\nThis might do more damage than the abort call in Close(). I don't think there's any point to having a shared reference count if one user of the database can silently abort a transaction created by a different user of the database.\r\n\r\nI'm skeptical of the database having these new `Dbc* m_cursor` and `DbTxn* m_active_txn` members. I suspect you're putting these in the Database class because you don't want to have more than one class with virtual methods, but it seems to me these really belong in the batch object, not the database object. It's not coherent to have a shared reference count but only allow a single cursor and a single transaction at a time, and have different batches abort each others transactions and step on each others cursors.\r\n\r\nI'm kind of surprised this code works at all. I suspect it does because wallet only makes limited use of transactions and cursors (since it loads most of the database into memory on startup) and our python tests don't call RPC methods in parallel, so the database is usually accessed from a single thread.\r\n\r\n\r\n\r\n",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-09T11:15:30Z",
      "diff_hunk" : "@@ -739,6 +747,10 @@ std::string BerkeleyDatabaseVersion()\n \n void BerkeleyDatabase::Release()\n {\n+    if (m_active_txn) {\n+       m_active_txn->abort();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437330343",
      "id" : 437330343,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzMDM0Mw==",
      "original_commit_id" : "e1ebc69a5e6628cadf480dfd6d787a6c9f631b86",
      "original_line" : 751,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 427008108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-09T13:44:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437330343",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437342744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437342744"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: refactor Read, Write, Erase, and Exists into non-template func\" (aac3483e9e0423b3414cfaf84f37041a200d773c)\r\n\r\nMinor: DBRead does need something like a `CDataStream& value` argument to write into but all the other `CDataStream&` arguments are just byte strings and could be `Span<char>` typed instead. Actually even DBRead could use `Span` if written as\r\n\r\n```c++\r\nbool DBRead(Span<char> key, std::function<void(Span<char>)> value);\r\n```\r\n\r\nBut feel free to ignore this since I think it mostly just comes from me liking Span more than CDataStream.\r\n\r\nOther minor suggestions:\r\n\r\n- Would name these `ReadKey` `WriteKey` `EraseKey` `HasKey` because \tDB` prefix is redundant (every method here is a db method) and these are specifically accessing keys in the database, not really the database itself.\r\n\r\n- Would drop `const` method keyword if/when these become virtual methods. I think virtual const methods should usually be avoided, because `const` exposes an implementation detail of subclasses to the parent class, and can infectiously force other subclasses to do dumb things like have mutable members or add pointless indirection to work around the inherited const.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-09T11:40:30Z",
      "diff_hunk" : "@@ -124,6 +124,11 @@ class BerkeleyDatabase\n     Dbc* m_cursor = nullptr;\n     DbTxn* m_active_txn = nullptr;\n \n+    bool DBRead(CDataStream& key, CDataStream& value) const;\n+    bool DBWrite(CDataStream& key, CDataStream& value, bool overwrite=true) const;\n+    bool DBErase(CDataStream& key) const;\n+    bool DBExists(CDataStream& key) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437342744",
      "id" : 437342744,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0Mjc0NA==",
      "original_commit_id" : "aac3483e9e0423b3414cfaf84f37041a200d773c",
      "original_line" : 130,
      "original_position" : 7,
      "original_start_line" : 127,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 427008108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-09T13:44:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437342744",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437350249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437350249"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: refactor Read, Write, Erase, and Exists into non-template func\" (aac3483e9e0423b3414cfaf84f37041a200d773c)\r\n\r\nI like this commit! Nice to keep the template messiness and bdb messiness separate.",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-09T11:55:14Z",
      "diff_hunk" : "@@ -215,91 +220,65 @@ class BerkeleyDatabase\n     template <typename K, typename T>\n     bool Read(const K& key, T& value)\n     {\n-        if (!m_db)\n-            return false;\n-\n         // Key\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(1000);\n         ssKey << key;\n-        SafeDbt datKey(ssKey.data(), ssKey.size());\n \n-        // Read\n-        SafeDbt datValue;\n-        int ret = m_db->get(m_active_txn, datKey, datValue, 0);\n+        CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n         bool success = false;\n-        if (datValue.get_data() != nullptr) {\n+        bool ret = DBRead(ssKey, ssValue);\n+        if (ret) {\n             // Unserialize value\n             try {\n-                CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n                 ssValue >> value;\n                 success = true;\n             } catch (const std::exception&) {\n                 // In this case success remains 'false'\n             }\n         }\n-        return ret == 0 && success;\n+        return ret && success;\n     }\n \n     template <typename K, typename T>\n     bool Write(const K& key, const T& value, bool fOverwrite = true)\n     {\n-        if (!m_db)\n-            return true;\n-        if (m_read_only)\n-            assert(!\"Write called on database in read-only mode\");\n-\n         // Key\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(1000);\n         ssKey << key;\n-        SafeDbt datKey(ssKey.data(), ssKey.size());\n \n         // Value\n         CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n         ssValue.reserve(10000);\n         ssValue << value;\n-        SafeDbt datValue(ssValue.data(), ssValue.size());\n \n         // Write\n-        int ret = m_db->put(m_active_txn, datKey, datValue, (fOverwrite ? 0 : DB_NOOVERWRITE));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437350249",
      "id" : 437350249,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1MDI0OQ==",
      "original_commit_id" : "aac3483e9e0423b3414cfaf84f37041a200d773c",
      "original_line" : 265,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 427008108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-09T13:44:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437350249",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437356565"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437356565"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Remove BerkeleyBatch and have WalletBatch use WalletDatabase\" (64a5a29d692378df443ae599b81c1f4547ec3d03)\r\n\r\nBelieve this should also call acquire before open not after per https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437020063",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-09T12:07:05Z",
      "diff_hunk" : "@@ -182,35 +182,47 @@ class WalletBatch\n     template <typename K, typename T>\n     bool WriteIC(const K& key, const T& value, bool fOverwrite = true)\n     {\n-        if (!m_batch.Write(key, value, fOverwrite)) {\n+        if (!m_database.Write(key, value, fOverwrite)) {\n             return false;\n         }\n         m_database.IncrementUpdateCounter();\n         if (m_database.nUpdateCounter % 1000 == 0) {\n-            m_batch.Flush();\n+            m_database.Flush();\n         }\n         return true;\n     }\n \n     template <typename K>\n     bool EraseIC(const K& key)\n     {\n-        if (!m_batch.Erase(key)) {\n+        if (!m_database.Erase(key)) {\n             return false;\n         }\n         m_database.IncrementUpdateCounter();\n         if (m_database.nUpdateCounter % 1000 == 0) {\n-            m_batch.Flush();\n+            m_database.Flush();\n         }\n         return true;\n     }\n \n+    bool m_flush_on_close;\n public:\n     explicit WalletBatch(WalletDatabase& database, const char* pszMode = \"r+\", bool _fFlushOnClose = true) :\n-        m_batch(database, pszMode, _fFlushOnClose),\n+        m_flush_on_close(_fFlushOnClose),\n         m_database(database)\n     {\n+        database.Open(pszMode);\n+        database.Acquire();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437356565",
      "id" : 437356565,
      "line" : 212,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1NjU2NQ==",
      "original_commit_id" : "64a5a29d692378df443ae599b81c1f4547ec3d03",
      "original_line" : 215,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : 49,
      "pull_request_review_id" : 427008108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-09T13:44:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437356565",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437370926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437370926"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Make WalletDatabase abstract class\" (4c6c9080d48ec5810e7d36348f7c730a586e9fb5)\r\n\r\nMinor: Any particular reason this is a public member? (Only asking because I think it would be good for comprehension to declare std::shared_ptr\\<BerkeleyEnvironment> and std::unique_ptr\\<Db> members next to each other)",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-09T12:27:36Z",
      "diff_hunk" : "@@ -262,7 +211,121 @@ class BerkeleyDatabase\n         return DBExists(ssKey);\n     }\n \n-    bool CreateCursor()\n+    virtual bool CreateCursor() = 0;\n+    virtual bool ReadAtCursor(CDataStream& ssKey, CDataStream& ssValue, bool& complete) = 0;\n+    virtual void CloseCursor() = 0;\n+    virtual bool TxnBegin() = 0;\n+    virtual bool TxnCommit() = 0;\n+    virtual bool TxnAbort() = 0;\n+};\n+/** An instance of this class represents one database.\n+ * For BerkeleyDB this is just a (env, strFile) tuple.\n+ **/\n+class BerkeleyDatabase : public WalletDatabase\n+{\n+private:\n+    /** RAII class that automatically cleanses its data on destruction */\n+    class SafeDbt final\n+    {\n+        Dbt m_dbt;\n+\n+    public:\n+        // construct Dbt with internally-managed data\n+        SafeDbt();\n+        // construct Dbt with provided data\n+        SafeDbt(void* data, size_t size);\n+        ~SafeDbt();\n+\n+        // delegate to Dbt\n+        const void* get_data() const;\n+        u_int32_t get_size() const;\n+\n+        // conversion operator to access the underlying Dbt\n+        operator Dbt*();\n+    };\n+\n+    bool m_read_only = false;\n+\n+    Dbc* m_cursor = nullptr;\n+    DbTxn* m_active_txn = nullptr;\n+\n+    /**\n+     * Pointer to shared database environment.\n+     *\n+     * Normally there is only one BerkeleyDatabase object per\n+     * BerkeleyEnvivonment, but in the special, backwards compatible case where\n+     * multiple wallet BDB data files are loaded from the same directory, this\n+     * will point to a shared instance that gets freed when the last data file\n+     * is closed.\n+     */\n+    std::shared_ptr<BerkeleyEnvironment> env;\n+\n+    std::string strFile;\n+    std::string m_file_path;\n+\n+    /** Return whether this database handle is a dummy for testing.\n+     * Only to be used at a low level, application should ideally not care\n+     * about this.\n+     */\n+    bool IsDummy() const { return env == nullptr; }\n+\n+    bool DBRead(CDataStream& key, CDataStream& value) const override;\n+    bool DBWrite(CDataStream& key, CDataStream& value, bool overwrite=true) const override;\n+    bool DBErase(CDataStream& key) const override;\n+    bool DBExists(CDataStream& key) const override;\n+\n+public:\n+    /** Create dummy DB handle */\n+    BerkeleyDatabase() : WalletDatabase(), env(nullptr)\n+    {\n+    }\n+\n+    /** Create DB handle to real database */\n+    BerkeleyDatabase(std::shared_ptr<BerkeleyEnvironment> env, std::string filename) :\n+        WalletDatabase(), env(std::move(env)), strFile(std::move(filename))\n+    {\n+        auto inserted = this->env->m_databases.emplace(strFile, std::ref(*this));\n+        assert(inserted.second);\n+    }\n+\n+    ~BerkeleyDatabase();\n+\n+    /** Database pointer. This is initialized lazily and reset during flushes, so it can be null. */\n+    std::unique_ptr<Db> m_db;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437370926",
      "id" : 437370926,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM3MDkyNg==",
      "original_commit_id" : "4c6c9080d48ec5810e7d36348f7c730a586e9fb5",
      "original_line" : 294,
      "original_position" : 216,
      "original_start_line" : null,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 427008108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-09T13:44:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437370926",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437376848"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437376848"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Move BDB specific things into bdb.{cpp/h}\" (b4c2765fd19e5dd8c823febd65ad5e62a58c8260)\r\n\r\nI think you can drop all this pragma stuff if you're dropping the db_cxx include",
      "commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "created_at" : "2020-06-09T12:34:19Z",
      "diff_hunk" : "@@ -13,87 +13,24 @@\n #include <util/system.h>\n \n #include <atomic>\n-#include <map>\n #include <memory>\n #include <string>\n-#include <unordered_map>\n #include <vector>\n \n #if defined(__GNUC__) && !defined(__clang__)\n #pragma GCC diagnostic push\n #pragma GCC diagnostic ignored \"-Wsuggest-override\"\n #endif\n-#include <db_cxx.h>\n #if defined(__GNUC__) && !defined(__clang__)\n #pragma GCC diagnostic pop\n #endif",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971#discussion_r437376848",
      "id" : 437376848,
      "line" : 26,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM3Njg0OA==",
      "original_commit_id" : "b4c2765fd19e5dd8c823febd65ad5e62a58c8260",
      "original_line" : 26,
      "original_position" : 17,
      "original_start_line" : 20,
      "path" : "src/wallet/db.h",
      "position" : 17,
      "pull_request_review_id" : 427008108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971",
      "side" : "RIGHT",
      "start_line" : 20,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-09T13:44:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/437376848",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
