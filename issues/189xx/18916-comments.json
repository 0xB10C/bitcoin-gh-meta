[
   {
      "author_association" : "MEMBER",
      "body" : "This is something I'm actively working on.\r\n\r\nBefore we can move to a new datbase, we need to cleanup and refactor our database handling code. It's really convoluted right now and not well encapsulated.",
      "created_at" : "2020-05-08T16:37:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-625902438",
      "id" : 625902438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTkwMjQzOA==",
      "updated_at" : "2020-05-08T16:37:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625902438",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> This is something I'm actively working on.\r\n> \r\n> Before we can move to a new datbase, we need to cleanup and refactor our database handling code. It's really convoluted right now and not well encapsulated.\r\n\r\nThis is great! On the code cleanup, I'd be curious to know what some ideas are there, and in particular if you think a change like #18608, specifically the `walletdb.h` / `walletdb.cpp` changes there goes in the right direction or wrong direction. (You can ignore the discussion in that PR where I lose my sanity arguing with luke ð ).\r\n\r\nI think the originally intended structure where `db.h` / `db.cpp` provides an API for reading and writing key value blobs, and `walletdb.h` / `walletdb.cpp` handles turning higher types like\r\nCKeyMetadata, CPubKey, CKeyMetadata, CMasterKey, CWalletTx, CTxDestination into blobs on behalf of wallet application code is a sane basic structure, that we're not just following very well right now. The startup / verify / recovery code is probably the worst of it.\r\n\r\nThis is just one model though. Another type of model I could think of (not pushing for it) is one where instead of the data layer only handling persistent storage, and application code indexing its own state in memory, the data layer handles persistent storage and memory, and the wallet code queries and writes information to that.",
      "created_at" : "2020-05-08T18:10:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-625946139",
      "id" : 625946139,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTk0NjEzOQ==",
      "updated_at" : "2020-05-08T18:10:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625946139",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This is great! On the code cleanup, I'd be curious to know what some ideas are there, and in particular if you think a change like #18608, specifically the `walletdb.h` / `walletdb.cpp` changes there goes in the right direction or wrong direction. (You can ignore the discussion in that PR where I lose my sanity arguing with luke grin ).\r\n\r\nI think its in the right direction, but that's also an application level change that is orthogonal to what I'd like to do.\r\n\r\n> I think the originally intended structure where `db.h` / `db.cpp` provides an API for reading and writing key value blobs, and `walletdb.h` / `walletdb.cpp` handles turning higher types like\r\n> CKeyMetadata, CPubKey, CKeyMetadata, CMasterKey, CWalletTx, CTxDestination into blobs on behalf of wallet application code is a sane basic structure, that we're not just following very well right now. The startup / verify / recovery code is probably the worst of it.\r\n\r\nIndeed. I'd like to move towards that. I have some notes on the startup/verify/recovery stuff: https://gist.github.com/achow101/cda3ea1bb07f585e56caaf969e842188 and how I would like to change it (most of that is just me trying to follow how it all works).\r\n",
      "created_at" : "2020-05-08T18:43:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-625959905",
      "id" : 625959905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTk1OTkwNQ==",
      "updated_at" : "2020-05-08T18:43:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625959905",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Indeed. I'd like to move towards that. I have some notes on the startup/verify/recovery stuff: https://gist.github.com/achow101/cda3ea1bb07f585e56caaf969e842188 and how I would like to change it (most of that is just me trying to follow how it all works).\r\n\r\nWow, I love this! Description of current code was surprisingly fun to read, and in your plans I see you're focusing on the blob storage layer so #18608 is orthogonal. Only feedback on the gist is I'm not sure what you get out of combining the Database & Batch classes (obviously the Environment class is a Berkeley specific detail and should go away or be hidden in the bdb implementation). But I guess having just Database objects without Batch objects is not a problem, as nothing in the wallet really relies on atomic writes.",
      "created_at" : "2020-05-08T18:57:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-625966327",
      "id" : 625966327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTk2NjMyNw==",
      "updated_at" : "2020-05-08T18:57:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625966327",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Only feedback on the gist is I'm not sure what you get out of combining the Database & Batch classes\r\n\r\nThe goal is to kind of emulate the typical database api where reads and writes are functions of the database. Essentially just to have it be a wrapper around `Db` for now. But what we have now with Database kind of doesn't make sense. Batch uses the `Db` from Database. It's the one that opens and closes it for some reason. It also calls private functions in Database. So what we have now kind of feels like the same class anyways.",
      "created_at" : "2020-05-08T20:15:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-625999265",
      "id" : 625999265,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTk5OTI2NQ==",
      "updated_at" : "2020-05-08T20:15:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625999265",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes current code is a little unusual because Batch doesn't just do a transaction, but actually opens and closes the db object.\r\n\r\n> The goal is to kind of emulate the typical database api where reads and writes are functions of the database.\r\n\r\nIt is pretty normal part of database APIs to have one object connecting to the database, and a different object doing reads and writes and fancier things like creating transactions and batching operations. E.g. in the sqlite python API you have [connection and cursor](https://docs.python.org/3/library/sqlite3.html) objects, and in the sqlite C API you have [connection and statement](https://www.sqlite.org/cintro.html) objects.\r\n\r\nBut that's just explaining my reaction, no need to overthink this",
      "created_at" : "2020-05-08T20:35:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-626008768",
      "id" : 626008768,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjAwODc2OA==",
      "updated_at" : "2020-05-08T20:35:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626008768",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There was discussion in yesterdays IRC wallet meeting about Sqlite vs. Berkeley DB, forward and backwards compatibility, whether dead projects are good, etc: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2020/bitcoin-core-dev.2020-05-08-19.00.log.html",
      "created_at" : "2020-05-09T09:42:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-626138328",
      "id" : 626138328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjEzODMyOA==",
      "updated_at" : "2020-05-09T09:42:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626138328",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> There was discussion in yesterdays IRC wallet meeting about Sqlite vs. Berkeley DB, forward and backwards compatibility, whether dead projects are good, etc: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2020/bitcoin-core-dev.2020-05-08-19.00.log.html\r\n\r\n@Sjors, perhaps add that link to the PR description, as well as http://www.erisian.com.au/bitcoin-core-dev/log-2020-05-05.html#l-100",
      "created_at" : "2020-05-09T12:37:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-626169721",
      "id" : 626169721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjE2OTcyMQ==",
      "updated_at" : "2020-05-09T12:37:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626169721",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "None of the \"arguments in favor\" listed in the opener (or, seemingly, in the discussion on IRC) there seem to be \"arguments in favor\". They're more like \"if bdb is causing issues, this is a good alternative because its designed more for our use-case\". Of course, that is predicated on BDB causing issues. I'm not sure that the existing issues that we've seemingly pretty much fully worked around are worth the legwork to switch? What am I missing?",
      "created_at" : "2020-05-10T00:47:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-626255384",
      "id" : 626255384,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjI1NTM4NA==",
      "updated_at" : "2020-05-10T00:47:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626255384",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The current model is to load the entire contents of the wallet database into memory on load. Supporting sqlite only really makes sense if this model is changed. However it doesn't seem likely to me that performance can be held anywhere near close to current if we're actively querying a sqlite database.\r\n\r\nI can't find it now but there was an issue opened about using an append only journal file for the wallet database.  That seems to match our usage much better than sqlite does.",
      "created_at" : "2020-05-10T15:39:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-626346669",
      "id" : 626346669,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjM0NjY2OQ==",
      "updated_at" : "2020-05-10T15:39:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626346669",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/620611?v=4",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "node_id" : "MDQ6VXNlcjYyMDYxMQ==",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> None of the \"arguments in favor\" listed in the opener (or, seemingly, in the discussion on IRC) there seem to be \"arguments in favor\". They're more like \"if bdb is causing issues, this is a good alternative because its designed more for our use-case\". Of course, that is predicated on BDB causing issues. I'm not sure that the existing issues that we've seemingly pretty much fully worked around are worth the legwork to switch? What am I missing?\r\n\r\nI would agree if this was just brought up without other wallet changes occurring simultaneously.\r\n\r\nThe reason I had originally suggested this on IRC recently was because we had recently merged descriptor wallets. My idea was to introduce a new storage database along with descriptor wallets for descriptor wallets only. The reason is that changing BDB for something else is something that we had been wanting to do for a while. It seemed reasonable to me to do this at the same time we introduced a wholly new, backwards incompatible wallet feature like descriptor wallets. So what I had wanted was this to be for descriptor wallets only to go along with the fact that descriptor wallets were completely new.\r\n\r\n> The current model is to load the entire contents of the wallet database into memory on load. Supporting sqlite only really makes sense if this model is changed. However it doesn't seem likely to me that performance can be held anywhere near close to current if we're actively querying a sqlite database.\r\n\r\nI would like for us to use some features provided by sqlite and relational databases in general. Not initially, but in the future.\r\n\r\n> I can't find it now but there was an issue opened about using an append only journal file for the wallet database. That seems to match our usage much better than sqlite does.\r\n\r\n#5686 is the previous PR. But I'm not convinced that append only really fits what we do as we don't use the database strictly append only. There are times when things are being rewritten and updated. Additionally I'm not convinced that a homegrown append only format provides enough guarantees of consistency and non-corruption. And I couldn't find any such database in existence already.",
      "created_at" : "2020-05-11T16:58:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-626825638",
      "id" : 626825638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjgyNTYzOA==",
      "updated_at" : "2020-05-11T16:58:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626825638",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The reason is that changing BDB for something else is something that we had been wanting to do for a while\r\n\r\nIt is? Why? Its come up, but never with any real justification that I've seen. Only \"wouldnt it be nice\". There doesn't appear to be a feature that we want from a non-BDB database, nor any issues we've having with BDB. Its not like we can drop the BDB dependency, either, given we'd need to be able to load old wallets, so its just yet another thing.",
      "created_at" : "2020-05-21T19:20:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-632295186",
      "id" : 632295186,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjI5NTE4Ng==",
      "updated_at" : "2020-05-21T19:21:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632295186",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Some old historical info,\r\nMailing list thread: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-October/011604.html\r\nCode reference: https://github.com/jgarzik/bitcoin/tree/2015_sqlite\r\n\r\nIt's not addressing the same goals as this issue, but worth including for background.\r\n\r\nWith regards to BDB dependency, technically it can be dropped from the main binary via a conversion tool, possibly even the repo, if the tool is in a separate repo.   Regardless, @TheBlueMatt 's point is valid.",
      "created_at" : "2020-05-21T19:28:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-632299532",
      "id" : 632299532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjI5OTUzMg==",
      "updated_at" : "2020-05-21T19:28:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632299532",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think it's concerning that the BDB we're using now is 10 years old, and even the latest version we can reasonably support (5.3) is 7 years old. I think that on its own makes it worth considering alternatives.",
      "created_at" : "2020-05-21T19:29:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-632299646",
      "id" : 632299646,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjI5OTY0Ng==",
      "updated_at" : "2020-05-21T19:29:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632299646",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think it's concerning that the BDB we're using now is 10 years old\r\n\r\nI don't entirely disagree, but I also haven't heard of any issues with it? If we were using a bunch of its features like cross-process db use etc or seeing real performance drag from it I might agree, but, to my knowledge, we haven't seen a single issue that appears likely to have been cause by BDB (the possible interaction of log files not being copied with the wallet.dat aside, and we've largely fixed that with constant flushing and wallet folders instead of files).",
      "created_at" : "2020-05-21T19:46:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-632307412",
      "id" : 632307412,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjMwNzQxMg==",
      "updated_at" : "2020-05-21T19:46:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632307412",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]
