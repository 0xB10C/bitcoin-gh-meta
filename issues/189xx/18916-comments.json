[
   {
      "author_association" : "MEMBER",
      "body" : "This is something I'm actively working on.\r\n\r\nBefore we can move to a new datbase, we need to cleanup and refactor our database handling code. It's really convoluted right now and not well encapsulated.",
      "created_at" : "2020-05-08T16:37:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-625902438",
      "id" : 625902438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTkwMjQzOA==",
      "updated_at" : "2020-05-08T16:37:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625902438",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> This is something I'm actively working on.\r\n> \r\n> Before we can move to a new datbase, we need to cleanup and refactor our database handling code. It's really convoluted right now and not well encapsulated.\r\n\r\nThis is great! On the code cleanup, I'd be curious to know what some ideas are there, and in particular if you think a change like #18608, specifically the `walletdb.h` / `walletdb.cpp` changes there goes in the right direction or wrong direction. (You can ignore the discussion in that PR where I lose my sanity arguing with luke ð ).\r\n\r\nI think the originally intended structure where `db.h` / `db.cpp` provides an API for reading and writing key value blobs, and `walletdb.h` / `walletdb.cpp` handles turning higher types like\r\nCKeyMetadata, CPubKey, CKeyMetadata, CMasterKey, CWalletTx, CTxDestination into blobs on behalf of wallet application code is a sane basic structure, that we're not just following very well right now. The startup / verify / recovery code is probably the worst of it.\r\n\r\nThis is just one model though. Another type of model I could think of (not pushing for it) is one where instead of the data layer only handling persistent storage, and application code indexing its own state in memory, the data layer handles persistent storage and memory, and the wallet code queries and writes information to that.",
      "created_at" : "2020-05-08T18:10:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-625946139",
      "id" : 625946139,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTk0NjEzOQ==",
      "updated_at" : "2020-05-08T18:10:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625946139",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This is great! On the code cleanup, I'd be curious to know what some ideas are there, and in particular if you think a change like #18608, specifically the `walletdb.h` / `walletdb.cpp` changes there goes in the right direction or wrong direction. (You can ignore the discussion in that PR where I lose my sanity arguing with luke grin ).\r\n\r\nI think its in the right direction, but that's also an application level change that is orthogonal to what I'd like to do.\r\n\r\n> I think the originally intended structure where `db.h` / `db.cpp` provides an API for reading and writing key value blobs, and `walletdb.h` / `walletdb.cpp` handles turning higher types like\r\n> CKeyMetadata, CPubKey, CKeyMetadata, CMasterKey, CWalletTx, CTxDestination into blobs on behalf of wallet application code is a sane basic structure, that we're not just following very well right now. The startup / verify / recovery code is probably the worst of it.\r\n\r\nIndeed. I'd like to move towards that. I have some notes on the startup/verify/recovery stuff: https://gist.github.com/achow101/cda3ea1bb07f585e56caaf969e842188 and how I would like to change it (most of that is just me trying to follow how it all works).\r\n",
      "created_at" : "2020-05-08T18:43:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-625959905",
      "id" : 625959905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTk1OTkwNQ==",
      "updated_at" : "2020-05-08T18:43:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625959905",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Indeed. I'd like to move towards that. I have some notes on the startup/verify/recovery stuff: https://gist.github.com/achow101/cda3ea1bb07f585e56caaf969e842188 and how I would like to change it (most of that is just me trying to follow how it all works).\r\n\r\nWow, I love this! Description of current code was surprisingly fun to read, and in your plans I see you're focusing on the blob storage layer so #18608 is orthogonal. Only feedback on the gist is I'm not sure what you get out of combining the Database & Batch classes (obviously the Environment class is a Berkeley specific detail and should go away or be hidden in the bdb implementation). But I guess having just Database objects without Batch objects is not a problem, as nothing in the wallet really relies on atomic writes.",
      "created_at" : "2020-05-08T18:57:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-625966327",
      "id" : 625966327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTk2NjMyNw==",
      "updated_at" : "2020-05-08T18:57:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625966327",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Only feedback on the gist is I'm not sure what you get out of combining the Database & Batch classes\r\n\r\nThe goal is to kind of emulate the typical database api where reads and writes are functions of the database. Essentially just to have it be a wrapper around `Db` for now. But what we have now with Database kind of doesn't make sense. Batch uses the `Db` from Database. It's the one that opens and closes it for some reason. It also calls private functions in Database. So what we have now kind of feels like the same class anyways.",
      "created_at" : "2020-05-08T20:15:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-625999265",
      "id" : 625999265,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTk5OTI2NQ==",
      "updated_at" : "2020-05-08T20:15:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625999265",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes current code is a little unusual because Batch doesn't just do a transaction, but actually opens and closes the db object.\r\n\r\n> The goal is to kind of emulate the typical database api where reads and writes are functions of the database.\r\n\r\nIt is pretty normal part of database APIs to have one object connecting to the database, and a different object doing reads and writes and fancier things like creating transactions and batching operations. E.g. in the sqlite python API you have [connection and cursor](https://docs.python.org/3/library/sqlite3.html) objects, and in the sqlite C API you have [connection and statement](https://www.sqlite.org/cintro.html) objects.\r\n\r\nBut that's just explaining my reaction, no need to overthink this",
      "created_at" : "2020-05-08T20:35:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-626008768",
      "id" : 626008768,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjAwODc2OA==",
      "updated_at" : "2020-05-08T20:35:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626008768",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There was discussion in yesterdays IRC wallet meeting about Sqlite vs. Berkeley DB, forward and backwards compatibility, whether dead projects are good, etc: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2020/bitcoin-core-dev.2020-05-08-19.00.log.html",
      "created_at" : "2020-05-09T09:42:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-626138328",
      "id" : 626138328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjEzODMyOA==",
      "updated_at" : "2020-05-09T09:42:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626138328",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> There was discussion in yesterdays IRC wallet meeting about Sqlite vs. Berkeley DB, forward and backwards compatibility, whether dead projects are good, etc: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2020/bitcoin-core-dev.2020-05-08-19.00.log.html\r\n\r\n@Sjors, perhaps add that link to the PR description, as well as http://www.erisian.com.au/bitcoin-core-dev/log-2020-05-05.html#l-100",
      "created_at" : "2020-05-09T12:37:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18916#issuecomment-626169721",
      "id" : 626169721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18916",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjE2OTcyMQ==",
      "updated_at" : "2020-05-09T12:37:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626169721",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
