[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "cc @EthanHeilman ",
      "created_at" : "2020-05-17T01:24:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629728699",
      "id" : 629728699,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTcyODY5OQ==",
      "updated_at" : "2020-05-17T01:24:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629728699",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nSuggestion: Instead of modifying `CConnman` and net.h, add all these changes into `CAddrMan` and add a new function `CAddrMan::GetAddrCache`, so the functionality is local to that class, since there's a lot of similar stuff going on in there.\r\n\r\nOther thoughts: I wonder what implications this might have in advertising new peers, i.e. suppose the 24 hour window rolls over right before your daemon sees a new peer. Nobody would be able to get that peer from you for at least 24 hours. But I'm not sure if that's anything to be worried about, because everyone's 24 hour window will expire at different times, so *some* peers would always have the chance to advertise it soon.",
      "created_at" : "2020-05-17T02:24:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629732890",
      "id" : 629732890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTczMjg5MA==",
      "updated_at" : "2020-05-17T02:25:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629732890",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8435003?v=4",
         "events_url" : "https://api.github.com/users/tryphe/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tryphe/followers",
         "following_url" : "https://api.github.com/users/tryphe/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tryphe/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tryphe",
         "id" : 8435003,
         "login" : "tryphe",
         "node_id" : "MDQ6VXNlcjg0MzUwMDM=",
         "organizations_url" : "https://api.github.com/users/tryphe/orgs",
         "received_events_url" : "https://api.github.com/users/tryphe/received_events",
         "repos_url" : "https://api.github.com/users/tryphe/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tryphe/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tryphe/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tryphe"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">Suggestion: Instead of modifying CConnman and net.h, add all these changes into CAddrMan and add a new function CAddrMan::GetAddrCache, so the functionality is local to that class, since there's a lot of similar stuff going on in there.\r\n\r\nTo me it feels like CConman is the perfect place for this cache. It's really something making sense only in the p2p context. We would never use this cache for any local stuff. But let's see what other reviewers think about it?\r\n\r\n> I wonder what implications this might have in advertising new peers, i.e. suppose the 24 hour window rolls over right before your daemon sees a new peer. Nobody would be able to get that peer from you for at least 24 hours. But I'm not sure if that's anything to be worried about, because everyone's 24 hour window will expire at different times, so some peers would always have the chance to advertise it soon.\r\n\r\nTrue, but I think the role of this aspect in advertising new node is minor. Nodes don't send many GETADDRs, and one should be lucky to get that new node randomly.\r\nI think the primary method of advertising new peers is them calling `AdvertiseLocal` and forwarding unsolicited ADDR messages. And that one remains unaffected by this change.\r\n\r\nIn addition, in future I'm planning to suggest doing `AdvertiseLocal` for feeler connections or other random connections, it should help both privacy and better addresss relay.",
      "created_at" : "2020-05-17T02:44:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629734215",
      "id" : 629734215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTczNDIxNQ==",
      "updated_at" : "2020-05-17T03:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629734215",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18925 (Add extra thread for scheduler, move TorControl and OpenAddedConnections to scheduler by naumenkogs)\n* #18740 (Remove g_rpc_node global by ryanofsky)\n* #17428 (p2p: Try to preserve outbound block-relay-only connections during restart by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-17T03:32:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629737483",
      "id" : 629737483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTczNzQ4Mw==",
      "updated_at" : "2020-05-17T03:32:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629737483",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: nice simple idea - that's the best kind of idea! :)",
      "created_at" : "2020-05-17T05:25:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629745569",
      "id" : 629745569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTc0NTU2OQ==",
      "updated_at" : "2020-05-17T05:25:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629745569",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would it make sense to have one cache per network type so that the answer cannot be used to fingerprint a node across network types?\r\n\r\n(I know there are other ways to do such fingerprinting, but no reason to add yet another one :))",
      "created_at" : "2020-05-17T05:30:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629745947",
      "id" : 629745947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTc0NTk0Nw==",
      "updated_at" : "2020-05-18T04:33:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629745947",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift good observation re: across net fingerprinting!\r\nTo be clear, my PR as it is now doesn't introduce another fingerprinting, but just makes it a little easier for a spy. Previously they would have to make 100 requests and compare across nodes, now they'd have to make just one.\r\n\r\nBut it would be indeed nice to not make it easier, and ideally even mitigate the fingerprinting you mention too.\r\nFor starters, we may have 2 caches: for regular (ipv4/v6) and non-regular (onion) networks, based on where the requester is located. I will put together a commit for that.\r\nIt could be further improved when we integrate [addrv2](https://github.com/bitcoin/bips/blob/master/bip-0155.mediawiki).\r\n\r\nThis would be another big improvement, now cross-node fingerprinting via GETADDR would take days or months, instead of just couple hours at most (a spy currently still have to ask a lot of nodes to map Tor nodes to regular nodes).",
      "created_at" : "2020-05-17T15:09:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629813210",
      "id" : 629813210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTgxMzIxMA==",
      "updated_at" : "2020-05-17T15:11:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629813210",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-05-21T12:10:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-632051832",
      "id" : 632051832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjA1MTgzMg==",
      "updated_at" : "2020-05-21T12:10:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632051832",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "What effect does this have on nodes that explicitly want to fan out onion addresses on the ipv4 net? Do they not exist?",
      "created_at" : "2020-05-21T12:14:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-632053037",
      "id" : 632053037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjA1MzAzNw==",
      "updated_at" : "2020-05-21T12:14:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632053037",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">What effect does this have on nodes that explicitly want to fan out onion addresses on the ipv4 net? Do they not exist?\r\n\r\nI don't touch that behaviour at all! I introduce two separate caches, but both of them are filled the same way as before. The separation is based on *who requests* (onion or regular), not the type of AddrMan records.\r\n\r\nSo, if this relay was possible before, it still is.\r\nIf we previously *already had unsatisfactory* onion to ipv4 relay, then it remains, or maybe a little worse. But this should be addressed in a separate PR.",
      "created_at" : "2020-05-22T06:50:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-632522048",
      "id" : 632522048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjUyMjA0OA==",
      "updated_at" : "2020-05-22T06:50:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632522048",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429080574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429080574"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A way to simplify code IMO:\r\n\r\n```\r\nif (use_cache == ADDR_CACHE_NONE) {\r\n    return addrman.GetAddr();\r\n}\r\nCachedAddrResponse* cache;\r\nif (use_cache == ADDR_CACHE_REGULAR) {\r\n     cache = &m_cached_addr_response_regular;\r\n} else {\r\n     cache = &m_cached_addr_response_other;\r\n}\r\nconst std::chrono::microseconds current_time = GetTime<std::chrono::microseconds>();\r\nif (cache->m_update_addr_response < current_time) {\r\n    cache->m_addrs_response_cache = addrman.GetAddr();\r\n    cache->m_update_addr_response = PoissonNextSend(current_time, AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL);\r\n}\r\nreturn cache->m_addrs_response_cache;\r\n```        \r\n ",
      "commit_id" : "6dfa7ec9553de534558dfff93f8ed6c84a38ca9a",
      "created_at" : "2020-05-22T07:12:54Z",
      "diff_hunk" : "@@ -2468,15 +2468,21 @@ void CConnman::AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddres\n     addrman.Add(vAddr, addrFrom, nTimePenalty);\n }\n \n-std::vector<CAddress> CConnman::GetAddresses(bool from_cache)\n+std::vector<CAddress> CConnman::GetAddresses(AddrCacheNetwork use_cache)\n {\n-    if (from_cache) {\n+    if (use_cache != ADDR_CACHE_NONE) {\n+        CachedAddrResponse* cache;\n+        if (use_cache == ADDR_CACHE_REGULAR) {\n+            cache = &m_cached_addr_response_regular;\n+        } else {\n+            cache = &m_cached_addr_response_other;\n+        }\n         const std::chrono::microseconds current_time = GetTime<std::chrono::microseconds>();\n-        if (m_update_addr_response < current_time) {\n-            m_addrs_response_cache = addrman.GetAddr();\n-            m_update_addr_response = PoissonNextSend(current_time, AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL);\n+        if (cache->m_update_addr_response < current_time) {\n+            cache->m_addrs_response_cache = addrman.GetAddr();\n+            cache->m_update_addr_response = PoissonNextSend(current_time, AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL);\n         }\n-        return m_addrs_response_cache;\n+        return cache->m_addrs_response_cache;\n     } else {\n         return addrman.GetAddr();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429080574",
      "id" : 429080574,
      "line" : 2487,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA4MDU3NA==",
      "original_commit_id" : "7c72f28e3d9d07916b30bbb64022bb6bb51e9c3e",
      "original_line" : 2487,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 22,
      "pull_request_review_id" : 416695243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-22T08:20:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429080574",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429091118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429091118"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Unless you think it's too serious for now, I would comment the full privacy leak.",
      "commit_id" : "6dfa7ec9553de534558dfff93f8ed6c84a38ca9a",
      "created_at" : "2020-05-22T07:39:17Z",
      "diff_hunk" : "@@ -416,6 +420,10 @@ class CConnman\n     std::atomic<NodeId> nLastNodeId{0};\n     unsigned int nPrevNodeCount{0};\n \n+    // Cache responses to addr requests to minimize privacy leak.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429091118",
      "id" : 429091118,
      "line" : 431,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5MTExOA==",
      "original_commit_id" : "0bbcf38b5b096a3fd395a53c51a2aca1c9ef9355",
      "original_line" : 423,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 32,
      "pull_request_review_id" : 416695243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-22T08:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429091118",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429095360"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429095360"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What's your rational for coming with 24h in average ? You announce this fix prevent tracking real-time changes in local node topology. I think to be effective you need to define real-time further with regards to expected topology changes, which for outbound peers is only stale tip or them falling offline ?\r\n\r\nOr say differently does natural outbound full-relay peer rotation is faster that 24 hours to rotate a _reasonable_ subset before next spy query ?",
      "commit_id" : "6dfa7ec9553de534558dfff93f8ed6c84a38ca9a",
      "created_at" : "2020-05-22T07:48:46Z",
      "diff_hunk" : "@@ -64,6 +64,8 @@ static const int MAX_ADDNODE_CONNECTIONS = 8;\n static const int MAX_BLOCKS_ONLY_CONNECTIONS = 2;\n /** Maximum number of feeler connections */\n static const int MAX_FEELER_CONNECTIONS = 1;\n+/** Average delay between updating address responses */\n+static constexpr std::chrono::hours AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL{24};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429095360",
      "id" : 429095360,
      "line" : 68,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5NTM2MA==",
      "original_commit_id" : "0bbcf38b5b096a3fd395a53c51a2aca1c9ef9355",
      "original_line" : 68,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 5,
      "pull_request_review_id" : 416695243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-22T08:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429095360",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429100181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429100181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please explain how cross-network node identity would operate, i.e a spy connecting first on regular, querying cache, reconnecting on other, querying again cache and testing for equality.\r\n\r\nGoing further, shouldn't you cache based on address announced ? Isn't this a fingerprint for multi-homed nodes ?",
      "commit_id" : "6dfa7ec9553de534558dfff93f8ed6c84a38ca9a",
      "created_at" : "2020-05-22T07:59:39Z",
      "diff_hunk" : "@@ -253,9 +253,17 @@ class CConnman\n     void SetServices(const CService &addr, ServiceFlags nServices);\n     void MarkAddressGood(const CAddress& addr);\n     void AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n+\n+    // Addr responses stored in different caches per network prevent\n+    // cross-network node identity.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429100181",
      "id" : 429100181,
      "line" : 258,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwMDE4MQ==",
      "original_commit_id" : "7c72f28e3d9d07916b30bbb64022bb6bb51e9c3e",
      "original_line" : 258,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 16,
      "pull_request_review_id" : 416695243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-22T08:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429100181",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "With regards to fingerprint, I think we have a more signaling _descriptor_, i.e address, and changing this one would force cleaning the cache, thus it doesn't introduce a more severe one ?",
      "created_at" : "2020-05-22T08:25:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-632567081",
      "id" : 632567081,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjU2NzA4MQ==",
      "updated_at" : "2020-05-22T08:25:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632567081",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
