[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "cc @EthanHeilman ",
      "created_at" : "2020-05-17T01:24:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629728699",
      "id" : 629728699,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTcyODY5OQ==",
      "updated_at" : "2020-05-17T01:24:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629728699",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nSuggestion: Instead of modifying `CConnman` and net.h, add all these changes into `CAddrMan` and add a new function `CAddrMan::GetAddrCache`, so the functionality is local to that class, since there's a lot of similar stuff going on in there.\r\n\r\nOther thoughts: I wonder what implications this might have in advertising new peers, i.e. suppose the 24 hour window rolls over right before your daemon sees a new peer. Nobody would be able to get that peer from you for at least 24 hours. But I'm not sure if that's anything to be worried about, because everyone's 24 hour window will expire at different times, so *some* peers would always have the chance to advertise it soon.",
      "created_at" : "2020-05-17T02:24:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629732890",
      "id" : 629732890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTczMjg5MA==",
      "updated_at" : "2020-05-17T02:25:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629732890",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8435003?v=4",
         "events_url" : "https://api.github.com/users/tryphe/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tryphe/followers",
         "following_url" : "https://api.github.com/users/tryphe/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tryphe/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tryphe",
         "id" : 8435003,
         "login" : "tryphe",
         "node_id" : "MDQ6VXNlcjg0MzUwMDM=",
         "organizations_url" : "https://api.github.com/users/tryphe/orgs",
         "received_events_url" : "https://api.github.com/users/tryphe/received_events",
         "repos_url" : "https://api.github.com/users/tryphe/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tryphe/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tryphe/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tryphe"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">Suggestion: Instead of modifying CConnman and net.h, add all these changes into CAddrMan and add a new function CAddrMan::GetAddrCache, so the functionality is local to that class, since there's a lot of similar stuff going on in there.\r\n\r\nTo me it feels like CConman is the perfect place for this cache. It's really something making sense only in the p2p context. We would never use this cache for any local stuff. But let's see what other reviewers think about it?\r\n\r\n> I wonder what implications this might have in advertising new peers, i.e. suppose the 24 hour window rolls over right before your daemon sees a new peer. Nobody would be able to get that peer from you for at least 24 hours. But I'm not sure if that's anything to be worried about, because everyone's 24 hour window will expire at different times, so some peers would always have the chance to advertise it soon.\r\n\r\nTrue, but I think the role of this aspect in advertising new node is minor. Nodes don't send many GETADDRs, and one should be lucky to get that new node randomly.\r\nI think the primary method of advertising new peers is them calling `AdvertiseLocal` and forwarding unsolicited ADDR messages. And that one remains unaffected by this change.\r\n\r\nIn addition, in future I'm planning to suggest doing `AdvertiseLocal` for feeler connections or other random connections, it should help both privacy and better addresss relay.",
      "created_at" : "2020-05-17T02:44:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629734215",
      "id" : 629734215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTczNDIxNQ==",
      "updated_at" : "2020-05-17T03:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629734215",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19315 ([tests] Allow outbound & block-relay-only connections in functional tests. by amitiuttarwar)\n* #19314 (refactor: Use uint16_t instead of unsigned short by renepickhardt)\n* #19191 (net: Extract download permission from noban by MarcoFalke)\n* #18925 (Add extra thread for scheduler, move TorControl and OpenAddedConnections to scheduler by naumenkogs)\n* #17428 (p2p: Try to preserve outbound block-relay-only connections during restart by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-17T03:32:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629737483",
      "id" : 629737483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTczNzQ4Mw==",
      "updated_at" : "2020-06-19T14:23:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629737483",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: nice simple idea - that's the best kind of idea! :)",
      "created_at" : "2020-05-17T05:25:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629745569",
      "id" : 629745569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTc0NTU2OQ==",
      "updated_at" : "2020-05-17T05:25:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629745569",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would it make sense to have one cache per network type so that the answer cannot be used to fingerprint a node across network types?\r\n\r\n(I know there are other ways to do such fingerprinting, but no reason to add yet another one :))",
      "created_at" : "2020-05-17T05:30:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629745947",
      "id" : 629745947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTc0NTk0Nw==",
      "updated_at" : "2020-05-18T04:33:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629745947",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift good observation re: across net fingerprinting!\r\nTo be clear, my PR as it is now doesn't introduce another fingerprinting, but just makes it a little easier for a spy. Previously they would have to make 100 requests and compare across nodes, now they'd have to make just one.\r\n\r\nBut it would be indeed nice to not make it easier, and ideally even mitigate the fingerprinting you mention too.\r\nFor starters, we may have 2 caches: for regular (ipv4/v6) and non-regular (onion) networks, based on where the requester is located. I will put together a commit for that.\r\nIt could be further improved when we integrate [addrv2](https://github.com/bitcoin/bips/blob/master/bip-0155.mediawiki).\r\n\r\nThis would be another big improvement, now cross-node fingerprinting via GETADDR would take days or months, instead of just couple hours at most (a spy currently still have to ask a lot of nodes to map Tor nodes to regular nodes).",
      "created_at" : "2020-05-17T15:09:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-629813210",
      "id" : 629813210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyOTgxMzIxMA==",
      "updated_at" : "2020-05-17T15:11:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629813210",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-05-21T12:10:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-632051832",
      "id" : 632051832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjA1MTgzMg==",
      "updated_at" : "2020-05-21T12:10:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632051832",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "What effect does this have on nodes that explicitly want to fan out onion addresses on the ipv4 net? Do they not exist?",
      "created_at" : "2020-05-21T12:14:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-632053037",
      "id" : 632053037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjA1MzAzNw==",
      "updated_at" : "2020-05-21T12:14:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632053037",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">What effect does this have on nodes that explicitly want to fan out onion addresses on the ipv4 net? Do they not exist?\r\n\r\nI don't touch that behaviour at all! I introduce two separate caches, but both of them are filled the same way as before. The separation is based on *who requests* (onion or regular), not the type of AddrMan records.\r\n\r\nSo, if this relay was possible before, it still is.\r\nIf we previously *already had unsatisfactory* onion to ipv4 relay, then it remains, or maybe a little worse. But this should be addressed in a separate PR.",
      "created_at" : "2020-05-22T06:50:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-632522048",
      "id" : 632522048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjUyMjA0OA==",
      "updated_at" : "2020-05-22T06:50:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632522048",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429080574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429080574"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A way to simplify code IMO:\r\n\r\n```\r\nif (use_cache == ADDR_CACHE_NONE) {\r\n    return addrman.GetAddr();\r\n}\r\nCachedAddrResponse* cache;\r\nif (use_cache == ADDR_CACHE_REGULAR) {\r\n     cache = &m_cached_addr_response_regular;\r\n} else {\r\n     cache = &m_cached_addr_response_other;\r\n}\r\nconst std::chrono::microseconds current_time = GetTime<std::chrono::microseconds>();\r\nif (cache->m_update_addr_response < current_time) {\r\n    cache->m_addrs_response_cache = addrman.GetAddr();\r\n    cache->m_update_addr_response = PoissonNextSend(current_time, AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL);\r\n}\r\nreturn cache->m_addrs_response_cache;\r\n```        \r\n ",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-22T07:12:54Z",
      "diff_hunk" : "@@ -2468,15 +2468,21 @@ void CConnman::AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddres\n     addrman.Add(vAddr, addrFrom, nTimePenalty);\n }\n \n-std::vector<CAddress> CConnman::GetAddresses(bool from_cache)\n+std::vector<CAddress> CConnman::GetAddresses(AddrCacheNetwork use_cache)\n {\n-    if (from_cache) {\n+    if (use_cache != ADDR_CACHE_NONE) {\n+        CachedAddrResponse* cache;\n+        if (use_cache == ADDR_CACHE_REGULAR) {\n+            cache = &m_cached_addr_response_regular;\n+        } else {\n+            cache = &m_cached_addr_response_other;\n+        }\n         const std::chrono::microseconds current_time = GetTime<std::chrono::microseconds>();\n-        if (m_update_addr_response < current_time) {\n-            m_addrs_response_cache = addrman.GetAddr();\n-            m_update_addr_response = PoissonNextSend(current_time, AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL);\n+        if (cache->m_update_addr_response < current_time) {\n+            cache->m_addrs_response_cache = addrman.GetAddr();\n+            cache->m_update_addr_response = PoissonNextSend(current_time, AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL);\n         }\n-        return m_addrs_response_cache;\n+        return cache->m_addrs_response_cache;\n     } else {\n         return addrman.GetAddr();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429080574",
      "id" : 429080574,
      "line" : 2541,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA4MDU3NA==",
      "original_commit_id" : "7c72f28e3d9d07916b30bbb64022bb6bb51e9c3e",
      "original_line" : 2541,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 26,
      "pull_request_review_id" : 416695243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429080574",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429091118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429091118"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Unless you think it's too serious for now, I would comment the full privacy leak.",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-22T07:39:17Z",
      "diff_hunk" : "@@ -416,6 +420,10 @@ class CConnman\n     std::atomic<NodeId> nLastNodeId{0};\n     unsigned int nPrevNodeCount{0};\n \n+    // Cache responses to addr requests to minimize privacy leak.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429091118",
      "id" : 429091118,
      "line" : 425,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5MTExOA==",
      "original_commit_id" : "0bbcf38b5b096a3fd395a53c51a2aca1c9ef9355",
      "original_line" : 425,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 26,
      "pull_request_review_id" : 416695243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429091118",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429095360"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429095360"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What's your rational for coming with 24h in average ? You announce this fix prevent tracking real-time changes in local node topology. I think to be effective you need to define real-time further with regards to expected topology changes, which for outbound peers is only stale tip or them falling offline ?\r\n\r\nOr say differently does natural outbound full-relay peer rotation is faster that 24 hours to rotate a _reasonable_ subset before next spy query ?",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-22T07:48:46Z",
      "diff_hunk" : "@@ -64,6 +64,8 @@ static const int MAX_ADDNODE_CONNECTIONS = 8;\n static const int MAX_BLOCKS_ONLY_CONNECTIONS = 2;\n /** Maximum number of feeler connections */\n static const int MAX_FEELER_CONNECTIONS = 1;\n+/** Average delay between updating address responses */\n+static constexpr std::chrono::hours AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL{24};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429095360",
      "id" : 429095360,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5NTM2MA==",
      "original_commit_id" : "0bbcf38b5b096a3fd395a53c51a2aca1c9ef9355",
      "original_line" : 69,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 416695243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429095360",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429100181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429100181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please explain how cross-network node identity would operate, i.e a spy connecting first on regular, querying cache, reconnecting on other, querying again cache and testing for equality.\r\n\r\nGoing further, shouldn't you cache based on address announced ? Isn't this a fingerprint for multi-homed nodes ?",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-22T07:59:39Z",
      "diff_hunk" : "@@ -253,9 +253,17 @@ class CConnman\n     void SetServices(const CService &addr, ServiceFlags nServices);\n     void MarkAddressGood(const CAddress& addr);\n     void AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n+\n+    // Addr responses stored in different caches per network prevent\n+    // cross-network node identity.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429100181",
      "id" : 429100181,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwMDE4MQ==",
      "original_commit_id" : "7c72f28e3d9d07916b30bbb64022bb6bb51e9c3e",
      "original_line" : 258,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 416695243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429100181",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "With regards to fingerprint, I think we have a more signaling _descriptor_, i.e address, and changing this one would force cleaning the cache, thus it doesn't introduce a more severe one ?",
      "created_at" : "2020-05-22T08:25:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-632567081",
      "id" : 632567081,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjU2NzA4MQ==",
      "updated_at" : "2020-05-22T08:25:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632567081",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429760098"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429760098"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree.",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-25T06:52:30Z",
      "diff_hunk" : "@@ -2468,15 +2468,21 @@ void CConnman::AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddres\n     addrman.Add(vAddr, addrFrom, nTimePenalty);\n }\n \n-std::vector<CAddress> CConnman::GetAddresses(bool from_cache)\n+std::vector<CAddress> CConnman::GetAddresses(AddrCacheNetwork use_cache)\n {\n-    if (from_cache) {\n+    if (use_cache != ADDR_CACHE_NONE) {\n+        CachedAddrResponse* cache;\n+        if (use_cache == ADDR_CACHE_REGULAR) {\n+            cache = &m_cached_addr_response_regular;\n+        } else {\n+            cache = &m_cached_addr_response_other;\n+        }\n         const std::chrono::microseconds current_time = GetTime<std::chrono::microseconds>();\n-        if (m_update_addr_response < current_time) {\n-            m_addrs_response_cache = addrman.GetAddr();\n-            m_update_addr_response = PoissonNextSend(current_time, AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL);\n+        if (cache->m_update_addr_response < current_time) {\n+            cache->m_addrs_response_cache = addrman.GetAddr();\n+            cache->m_update_addr_response = PoissonNextSend(current_time, AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL);\n         }\n-        return m_addrs_response_cache;\n+        return cache->m_addrs_response_cache;\n     } else {\n         return addrman.GetAddr();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429760098",
      "id" : 429760098,
      "in_reply_to_id" : 429080574,
      "line" : 2541,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc2MDA5OA==",
      "original_commit_id" : "7c72f28e3d9d07916b30bbb64022bb6bb51e9c3e",
      "original_line" : 2541,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 26,
      "pull_request_review_id" : 417491900,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429760098",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429776733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429776733"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I would say 24h is pretty arbitrary, but reasonable. Let me explain.\r\n\r\nUpper bound:\r\nShouldn't be too long so that the returned records are still relevant for GETADDR requestor. Although currently `IsTerrible` is fine with everything in last 30 days, we also should make sure that nodes in the response are not dead. I can't find the data, but I remember reading that the churn among reachable nodes (the ones we care) is low, so 1 day should be fine.\r\n\r\nLower bound:\r\nToo frequent cache updates can leak privacy again. For example, think about the attack where you map onion to ipv4 of the same node by correlating addrmans. Ideally, the response in two caches does not intersect.\r\n\r\nThe main event for both bounds is probably a feeler (because it updated nTime of the feeler's addr record). Feeler every 2 minutes update 720 records a day, so that's the same order as GETADDR response (1000 records).\r\n\r\nSame order means that not many of the new records will be missed in the cached response , as well as updates (upper bound concern).  It also means that the caches are updated at the same pace as the AddrMan updates happen (lower bound concern).\r\n\r\nI think any reasoning beyond that requires substantial research into attacks.",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-25T07:33:37Z",
      "diff_hunk" : "@@ -64,6 +64,8 @@ static const int MAX_ADDNODE_CONNECTIONS = 8;\n static const int MAX_BLOCKS_ONLY_CONNECTIONS = 2;\n /** Maximum number of feeler connections */\n static const int MAX_FEELER_CONNECTIONS = 1;\n+/** Average delay between updating address responses */\n+static constexpr std::chrono::hours AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL{24};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429776733",
      "id" : 429776733,
      "in_reply_to_id" : 429095360,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3NjczMw==",
      "original_commit_id" : "0bbcf38b5b096a3fd395a53c51a2aca1c9ef9355",
      "original_line" : 69,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 417513094,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429776733",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429801896"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429801896"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Adding more info without talking too much specifics.",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-25T08:25:13Z",
      "diff_hunk" : "@@ -416,6 +420,10 @@ class CConnman\n     std::atomic<NodeId> nLastNodeId{0};\n     unsigned int nPrevNodeCount{0};\n \n+    // Cache responses to addr requests to minimize privacy leak.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429801896",
      "id" : 429801896,
      "in_reply_to_id" : 429091118,
      "line" : 425,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwMTg5Ng==",
      "original_commit_id" : "0bbcf38b5b096a3fd395a53c51a2aca1c9ef9355",
      "original_line" : 425,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 26,
      "pull_request_review_id" : 417544426,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429801896",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429808188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429808188"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Adding more documentation.\r\n\r\n>Going further, shouldn't you cache based on address announced ? Isn't this a fingerprint for multi-homed nodes ?\r\n\r\nWhat makes you think so?",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-25T08:38:14Z",
      "diff_hunk" : "@@ -253,9 +253,17 @@ class CConnman\n     void SetServices(const CService &addr, ServiceFlags nServices);\n     void MarkAddressGood(const CAddress& addr);\n     void AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n+\n+    // Addr responses stored in different caches per network prevent\n+    // cross-network node identity.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429808188",
      "id" : 429808188,
      "in_reply_to_id" : 429100181,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwODE4OA==",
      "original_commit_id" : "7c72f28e3d9d07916b30bbb64022bb6bb51e9c3e",
      "original_line" : 258,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 417552313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429808188",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">On network topology, the change I can foresee is a decrease in freshness of received address and therefore for bootstrapping nodes nudge towards connecting to older nodes ?\r\n\r\nI talk about this [here](https://github.com/bitcoin/bitcoin/pull/18991#discussion_r429776733).\r\n\r\n>With regards to fingerprint, I think we have a more signaling descriptor, i.e address, and changing this one would force cleaning the cache, thus it doesn't introduce a more severe one ?\r\n\r\nCan you elaborate? Not sure I'm following.",
      "created_at" : "2020-05-25T08:41:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-633455146",
      "id" : 633455146,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMzQ1NTE0Ng==",
      "updated_at" : "2020-05-25T08:41:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/633455146",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r431895174"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431895174"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "My understand is you want to use `ADDR_CACHE_OTHER` for privacy-preserving networks, so that the caches returned from these networks  are not mapped 1-1 with caches returned from identifying networks like ipv4, is that right?  \r\n\r\nIf this is the case, I believe NET_TEREDO peers and any peers with NET_UNKNOWN will also hit the `else` case and use the same cache as Tor's? Do NET_TEREDO and NET_UNKNOWN networks have the same privacy level as Tor's?",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-28T14:46:35Z",
      "diff_hunk" : "@@ -3208,7 +3208,14 @@ bool ProcessMessage(CNode* pfrom, const std::string& msg_type, CDataStream& vRec\n         pfrom->fSentAddr = true;\n \n         pfrom->vAddrToSend.clear();\n-        std::vector<CAddress> vAddr = connman->GetAddresses();\n+        CConnman::AddrCacheNetwork use_cache;\n+        Network peer_network = pfrom->addr.GetNetwork();\n+        if (peer_network == NET_IPV4 || peer_network == NET_IPV6) {\n+            use_cache = CConnman::ADDR_CACHE_REGULAR;\n+        } else {\n+            use_cache = CConnman::ADDR_CACHE_OTHER;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r431895174",
      "id" : 431895174,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg5NTE3NA==",
      "original_commit_id" : "328788ceae58584f3c8f3cedd93e411111ad0eb8",
      "original_line" : 3216,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 420188215,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431895174",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/38899812?v=4",
         "events_url" : "https://api.github.com/users/glowang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glowang/followers",
         "following_url" : "https://api.github.com/users/glowang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glowang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glowang",
         "id" : 38899812,
         "login" : "glowang",
         "node_id" : "MDQ6VXNlcjM4ODk5ODEy",
         "organizations_url" : "https://api.github.com/users/glowang/orgs",
         "received_events_url" : "https://api.github.com/users/glowang/received_events",
         "repos_url" : "https://api.github.com/users/glowang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glowang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glowang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glowang"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r431923293"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431923293"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "if you initialized `m_update_addr_response` to be 0 with `std::chrono::microseconds m_update_addr_response{0};`, wouldn't this clause always be true?",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-28T15:24:37Z",
      "diff_hunk" : "@@ -2468,9 +2468,24 @@ void CConnman::AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddres\n     addrman.Add(vAddr, addrFrom, nTimePenalty);\n }\n \n-std::vector<CAddress> CConnman::GetAddresses()\n+std::vector<CAddress> CConnman::GetAddresses(AddrCacheNetwork use_cache)\n {\n-    return addrman.GetAddr();\n+    if (use_cache == ADDR_CACHE_NONE) {\n+        return addrman.GetAddr();\n+    } else {\n+        CachedAddrResponse* cache;\n+        if (use_cache == ADDR_CACHE_REGULAR) {\n+            cache = &m_cached_addr_response_regular;\n+        } else {\n+            cache = &m_cached_addr_response_other;\n+        }\n+        const std::chrono::microseconds current_time = GetTime<std::chrono::microseconds>();\n+        if (cache->m_update_addr_response < current_time) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r431923293",
      "id" : 431923293,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkyMzI5Mw==",
      "original_commit_id" : "328788ceae58584f3c8f3cedd93e411111ad0eb8",
      "original_line" : 2484,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 420226363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431923293",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/38899812?v=4",
         "events_url" : "https://api.github.com/users/glowang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glowang/followers",
         "following_url" : "https://api.github.com/users/glowang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glowang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glowang",
         "id" : 38899812,
         "login" : "glowang",
         "node_id" : "MDQ6VXNlcjM4ODk5ODEy",
         "organizations_url" : "https://api.github.com/users/glowang/orgs",
         "received_events_url" : "https://api.github.com/users/glowang/received_events",
         "repos_url" : "https://api.github.com/users/glowang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glowang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glowang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glowang"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r432549585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432549585"
         }
      },
      "author_association" : "MEMBER",
      "body" : ">My understand is you want to use ADDR_CACHE_OTHER for privacy-preserving networks, so that the caches returned from these networks are not mapped 1-1 with caches returned from identifying networks like ipv4, is that right?\r\n\r\nYes. I mean, ideally not just private/identifying networks. Ideally, if a node is hosted on Tor AND i2p AND ipv4, neither of them should be mapped together. But allocating a new cache for every network is probably too big of an overkill for such a niche use-case.\r\n\r\nThat's why I leave 2 caches, keeping in mind that ipv4 + ipv6 is one big group, and everything else can be grouped together. So, I guess that answers your question?\r\n\r\nIf other reviewers point out some other usecase, I'll be happy to discuss more.\r\n\r\n",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-29T15:06:33Z",
      "diff_hunk" : "@@ -3208,7 +3208,14 @@ bool ProcessMessage(CNode* pfrom, const std::string& msg_type, CDataStream& vRec\n         pfrom->fSentAddr = true;\n \n         pfrom->vAddrToSend.clear();\n-        std::vector<CAddress> vAddr = connman->GetAddresses();\n+        CConnman::AddrCacheNetwork use_cache;\n+        Network peer_network = pfrom->addr.GetNetwork();\n+        if (peer_network == NET_IPV4 || peer_network == NET_IPV6) {\n+            use_cache = CConnman::ADDR_CACHE_REGULAR;\n+        } else {\n+            use_cache = CConnman::ADDR_CACHE_OTHER;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r432549585",
      "id" : 432549585,
      "in_reply_to_id" : 431895174,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0OTU4NQ==",
      "original_commit_id" : "328788ceae58584f3c8f3cedd93e411111ad0eb8",
      "original_line" : 3216,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 421041054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432549585",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r432559588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432559588"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It is true on the first ever iteration, but then `cache->m_update_addr_response = PoissonNextSend(current_time, AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL);` in the conditional branch executes and makes it non-zero right away. So that it will be true again only after AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-29T15:22:27Z",
      "diff_hunk" : "@@ -2468,9 +2468,24 @@ void CConnman::AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddres\n     addrman.Add(vAddr, addrFrom, nTimePenalty);\n }\n \n-std::vector<CAddress> CConnman::GetAddresses()\n+std::vector<CAddress> CConnman::GetAddresses(AddrCacheNetwork use_cache)\n {\n-    return addrman.GetAddr();\n+    if (use_cache == ADDR_CACHE_NONE) {\n+        return addrman.GetAddr();\n+    } else {\n+        CachedAddrResponse* cache;\n+        if (use_cache == ADDR_CACHE_REGULAR) {\n+            cache = &m_cached_addr_response_regular;\n+        } else {\n+            cache = &m_cached_addr_response_other;\n+        }\n+        const std::chrono::microseconds current_time = GetTime<std::chrono::microseconds>();\n+        if (cache->m_update_addr_response < current_time) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r432559588",
      "id" : 432559588,
      "in_reply_to_id" : 431923293,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1OTU4OA==",
      "original_commit_id" : "328788ceae58584f3c8f3cedd93e411111ad0eb8",
      "original_line" : 2484,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 421054245,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432559588",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r432616969"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432616969"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not one for every network? 1000 addresses per network is still only a tiny amount of memory.",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-05-29T16:59:03Z",
      "diff_hunk" : "@@ -424,8 +435,15 @@ class CConnman\n     // Attack example: scraping addrs in real-time may allow an attacker\n     // to infer new connections of the victim by detecting new records\n     // with fresh timestamps (per self-announcement).\n-    std::vector<CAddress> m_addrs_response_cache;\n-    std::chrono::microseconds m_update_addr_response{0};\n+    struct CachedAddrResponse {\n+        std::vector<CAddress> m_addrs_response_cache;\n+        std::chrono::microseconds m_update_addr_response{0};\n+    };\n+\n+    // Keep a separate cache for other net (onion etc.) peers so that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r432616969",
      "id" : 432616969,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYxNjk2OQ==",
      "original_commit_id" : "bff16049e43c3cee47adf43596d8c14b2c886e13",
      "original_line" : 443,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 421127780,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432616969",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "After the numerous requests I introduced cache per `Network`. I think we should make it more fine-grained when addrv2 proposal goes through.",
      "created_at" : "2020-05-30T16:26:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-636353826",
      "id" : 636353826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjM1MzgyNg==",
      "updated_at" : "2020-05-30T16:27:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636353826",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r433548779"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433548779"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you announce 2 different IPv4 addresses, `requestor_network` is going to be the same (`NET_IPV4`) for both and hit the same cache ?",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-01T23:55:59Z",
      "diff_hunk" : "@@ -253,9 +253,17 @@ class CConnman\n     void SetServices(const CService &addr, ServiceFlags nServices);\n     void MarkAddressGood(const CAddress& addr);\n     void AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n+\n+    // Addr responses stored in different caches per network prevent\n+    // cross-network node identity.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r433548779",
      "id" : 433548779,
      "in_reply_to_id" : 429100181,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0ODc3OQ==",
      "original_commit_id" : "7c72f28e3d9d07916b30bbb64022bb6bb51e9c3e",
      "original_line" : 258,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 422255386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433548779",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r433555155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433555155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We should dissociate network _churn_, i.e how many peers fall offline after X and peers _rotation_, i.e changes among our connections demography after same X. I think for counter-measure to be efficient you need rotation to be high enough to blur adversary guess of your peers topology. \r\n\r\nObviously, a higher rotation target is likely to come with a higher churn, and therefore decrease validity of returned addresses. But I think it's okay to try more connections compare to leaking your topology, goals don't have same value. \r\n\r\nI agree, sounds hard to guess the sweet spot with further research, you should comment the trade-off and invite to further investigation.\r\n\r\nWith regards to bounds, I think it make sense to evaluate that after a feeler cycle of a day, you may dispose from a more accurate view of the network and therefore you should update your cache. An average delay of 36h would sounds correct to me too, even making counter-measure a bit more efficient.",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-02T00:19:20Z",
      "diff_hunk" : "@@ -64,6 +64,8 @@ static const int MAX_ADDNODE_CONNECTIONS = 8;\n static const int MAX_BLOCKS_ONLY_CONNECTIONS = 2;\n /** Maximum number of feeler connections */\n static const int MAX_FEELER_CONNECTIONS = 1;\n+/** Average delay between updating address responses */\n+static constexpr std::chrono::hours AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL{24};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r433555155",
      "id" : 433555155,
      "in_reply_to_id" : 429095360,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1NTE1NQ==",
      "original_commit_id" : "0bbcf38b5b096a3fd395a53c51a2aca1c9ef9355",
      "original_line" : 69,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 422263037,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433555155",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Can you elaborate? Not sure I'm following.\r\n\r\nI was thinking we should have a clear idea of node descriptors leveraged for fingerprinting, like your announced address, your mempool, your chain tip or cached blocks... Thus when you introduce a new one like your cache, if we have an already more severe one like the address, and updating address would also clear the cache it's okay to introduce it.",
      "created_at" : "2020-06-02T00:26:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-637196285",
      "id" : 637196285,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNzE5NjI4NQ==",
      "updated_at" : "2020-06-02T00:26:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/637196285",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r433606996"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433606996"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, I see, you mean *own* address announced. That's pretty crazy, I'm not even sure our software currently can do this.",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-02T03:59:51Z",
      "diff_hunk" : "@@ -253,9 +253,17 @@ class CConnman\n     void SetServices(const CService &addr, ServiceFlags nServices);\n     void MarkAddressGood(const CAddress& addr);\n     void AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n+\n+    // Addr responses stored in different caches per network prevent\n+    // cross-network node identity.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r433606996",
      "id" : 433606996,
      "in_reply_to_id" : 429100181,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwNjk5Ng==",
      "original_commit_id" : "7c72f28e3d9d07916b30bbb64022bb6bb51e9c3e",
      "original_line" : 258,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 422326071,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433606996",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">I was thinking we should have a clear idea of node descriptors leveraged for fingerprinting, like your announced address, your mempool, your chain tip or cached blocks... \r\n\r\nOh, I see. Well, I would say currently it's the worst: AddrMan is very identifiable and easy to scrape. With caches, it becomes at least very hard to scrape.\r\nAnything beyond would be interesting as a follow-up research, but probably out of scope for this PR. All we need to know that this PR improves privacy for free, and nobody seem to argue with that.",
      "created_at" : "2020-06-02T04:03:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-637257861",
      "id" : 637257861,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNzI1Nzg2MQ==",
      "updated_at" : "2020-06-02T04:03:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/637257861",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r433949352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433949352"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "As for rotation of outbound peers, I don't know if we actually have any mechanism to do that programmatically. This idea was discussed [here](https://github.com/bitcoin/bitcoin/pull/4723/files) but the PR was closed as further research is needed. As rotation of inbound peers, does anyone know whether that even exists & how it is done?  ",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-02T15:07:18Z",
      "diff_hunk" : "@@ -64,6 +64,8 @@ static const int MAX_ADDNODE_CONNECTIONS = 8;\n static const int MAX_BLOCKS_ONLY_CONNECTIONS = 2;\n /** Maximum number of feeler connections */\n static const int MAX_FEELER_CONNECTIONS = 1;\n+/** Average delay between updating address responses */\n+static constexpr std::chrono::hours AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL{24};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r433949352",
      "id" : 433949352,
      "in_reply_to_id" : 429095360,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0OTM1Mg==",
      "original_commit_id" : "0bbcf38b5b096a3fd395a53c51a2aca1c9ef9355",
      "original_line" : 69,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 422774720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433949352",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/38899812?v=4",
         "events_url" : "https://api.github.com/users/glowang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glowang/followers",
         "following_url" : "https://api.github.com/users/glowang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glowang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glowang",
         "id" : 38899812,
         "login" : "glowang",
         "node_id" : "MDQ6VXNlcjM4ODk5ODEy",
         "organizations_url" : "https://api.github.com/users/glowang/orgs",
         "received_events_url" : "https://api.github.com/users/glowang/received_events",
         "repos_url" : "https://api.github.com/users/glowang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glowang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glowang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glowang"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r434127596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434127596"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What is all this for?",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-02T19:31:32Z",
      "diff_hunk" : "@@ -2468,9 +2468,34 @@ void CConnman::AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddres\n     addrman.Add(vAddr, addrFrom, nTimePenalty);\n }\n \n-std::vector<CAddress> CConnman::GetAddresses()\n+std::vector<CAddress> CConnman::GetAddresses(Network requestor_network)\n {\n-    return addrman.GetAddr();\n+    if (requestor_network == NET_INTERNAL) {\n+        return addrman.GetAddr();\n+    } else {\n+        // if (m_addr_response_caches[requestor_network] == nullptr) {\n+        //     // First time requesting from a given network,\n+        //     // initialize with defaults here and then fill later in the same call.\n+        //     CachedAddrResponse default_cached_response;\n+        //     m_addr_response_caches[requestor_network] = &default_cached_response;\n+        // }\n+        // CachedAddrResponse* cache = m_addr_response_caches[requestor_network];\n+\n+        // const std::chrono::microseconds current_time = GetTime<std::chrono::microseconds>();\n+        // if (cache->m_update_addr_response < current_time) {\n+        //     cache->m_addrs_response_cache = addrman.GetAddr();\n+        //     cache->m_update_addr_response = PoissonNextSend(current_time, AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL);\n+        // }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r434127596",
      "id" : 434127596,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNzU5Ng==",
      "original_commit_id" : "a6a5b9752024f1d95e8cfb7d1cc0e1360ef2efaf",
      "original_line" : 2488,
      "original_position" : 23,
      "original_start_line" : 2476,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 422995125,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434127596",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r434128219"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434128219"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this should probably be a whitelist flag, not an assumption internal nodes are non-malicious",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-02T19:32:40Z",
      "diff_hunk" : "@@ -251,7 +254,12 @@ class CConnman\n     void SetServices(const CService &addr, ServiceFlags nServices);\n     void MarkAddressGood(const CAddress& addr);\n     void AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n-    std::vector<CAddress> GetAddresses();\n+\n+    // Cache is used to minimize topology leaks, so it should\n+    // be used for all non-trusted calls, for example, p2p.\n+    // NET_INTERNAL represents a non-malicious call (either from RPC) or",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r434128219",
      "id" : 434128219,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyODIxOQ==",
      "original_commit_id" : "a6a5b9752024f1d95e8cfb7d1cc0e1360ef2efaf",
      "original_line" : 260,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 422995905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434128219",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> To be clear, my PR as it is now doesn't introduce another fingerprinting, but just makes it a little easier for a spy. Previously they would have to make 100 requests and compare across nodes, now they'd have to make just one.\r\n\r\nFor the record, I think you're wrong: it did introduce a new fingerprinting. Previously, you couldn't realistically fingerprint non-listening peers.",
      "created_at" : "2020-06-02T19:34:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-637762128",
      "id" : 637762128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNzc2MjEyOA==",
      "updated_at" : "2020-06-02T19:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/637762128",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r434266333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434266333"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, oops, me being sloppy.",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-03T01:55:05Z",
      "diff_hunk" : "@@ -2468,9 +2468,34 @@ void CConnman::AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddres\n     addrman.Add(vAddr, addrFrom, nTimePenalty);\n }\n \n-std::vector<CAddress> CConnman::GetAddresses()\n+std::vector<CAddress> CConnman::GetAddresses(Network requestor_network)\n {\n-    return addrman.GetAddr();\n+    if (requestor_network == NET_INTERNAL) {\n+        return addrman.GetAddr();\n+    } else {\n+        // if (m_addr_response_caches[requestor_network] == nullptr) {\n+        //     // First time requesting from a given network,\n+        //     // initialize with defaults here and then fill later in the same call.\n+        //     CachedAddrResponse default_cached_response;\n+        //     m_addr_response_caches[requestor_network] = &default_cached_response;\n+        // }\n+        // CachedAddrResponse* cache = m_addr_response_caches[requestor_network];\n+\n+        // const std::chrono::microseconds current_time = GetTime<std::chrono::microseconds>();\n+        // if (cache->m_update_addr_response < current_time) {\n+        //     cache->m_addrs_response_cache = addrman.GetAddr();\n+        //     cache->m_update_addr_response = PoissonNextSend(current_time, AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL);\n+        // }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r434266333",
      "id" : 434266333,
      "in_reply_to_id" : 434127596,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI2NjMzMw==",
      "original_commit_id" : "a6a5b9752024f1d95e8cfb7d1cc0e1360ef2efaf",
      "original_line" : 2488,
      "original_position" : 23,
      "original_start_line" : 2476,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 423167787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434266333",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">For the record, I think you're wrong: it did introduce a new fingerprinting. Previously, you couldn't realistically fingerprint non-listening peers.\r\n\r\nHow would you fingerprint it after my PR? Nodes [do not](https://github.com/bitcoin/bitcoin/blob/3657aee2d25ce1ffefc6817af3eead7120b1d755/src/net_processing.cpp#L3315) respond to GETADDR from outbound.",
      "created_at" : "2020-06-03T01:59:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-637907831",
      "id" : 637907831,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNzkwNzgzMQ==",
      "updated_at" : "2020-06-03T01:59:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/637907831",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r434526926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434526926"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Inbound rotation is something I've never heard of :)\r\n\r\nIt practice it just means dropping an existing connection someone made to us... It doesn't feel useful from the first glance, unless that peer was malicious or broken. \r\nAn inbound connection can't be immediately replaced, so this seems like a loose-loose w.r.t security. We can drop a spy, true, but right now that is solved by slower relays to inbounds etc.\r\n\r\nWe \"rotate\" inbound peers if we're at capacity (117 inbounds or whatnot), but that's a completely different story. That's called eviction.",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-03T12:25:21Z",
      "diff_hunk" : "@@ -64,6 +64,8 @@ static const int MAX_ADDNODE_CONNECTIONS = 8;\n static const int MAX_BLOCKS_ONLY_CONNECTIONS = 2;\n /** Maximum number of feeler connections */\n static const int MAX_FEELER_CONNECTIONS = 1;\n+/** Average delay between updating address responses */\n+static constexpr std::chrono::hours AVG_ADDRESS_RESPONSE_UPDATE_INTERVAL{24};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r434526926",
      "id" : 434526926,
      "in_reply_to_id" : 429095360,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUyNjkyNg==",
      "original_commit_id" : "0bbcf38b5b096a3fd395a53c51a2aca1c9ef9355",
      "original_line" : 69,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 423498666,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434526926",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-06-04T20:35:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-639102241",
      "id" : 639102241,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTEwMjI0MQ==",
      "updated_at" : "2020-06-04T20:35:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639102241",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r436386929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436386929"
         }
      },
      "author_association" : "MEMBER",
      "body" : "File needs +x permisison",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-07T17:56:37Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+#!/usr/bin/env python3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r436386929",
      "id" : 436386929,
      "line" : 1,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjkyOQ==",
      "original_commit_id" : "cd83106ce2a3e70d35e88aa4a35f51f9f91208a5",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "test/functional/p2p_getaddr_caching.py",
      "position" : 1,
      "pull_request_review_id" : 425840517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436386929",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Seems to have an intermittent test error :(\r\n\r\n```\r\n2020-06-14T07:39:48.638000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_rr8f1aik\r\n2020-06-14T07:39:49.959000Z TestFramework (INFO): Create connection that sends and requests addr messages\r\n2020-06-14T07:39:50.061000Z TestFramework (INFO): Fill peer AddrMan with a lot of records\r\n2020-06-14T07:39:50.127000Z TestFramework (INFO): Send many addr requests within short time to receive same response\r\n2020-06-14T07:39:51.105000Z TestFramework (INFO): After time passed, see a new response to addr request\r\n2020-06-14T07:39:51.308000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"test/functional/test_framework/test_framework.py\", line 112, in main\r\n    self.run_test()\r\n  File \"test/functional/p2p_getaddr_caching.py\", line 103, in run_test\r\n    assert(set(responses[0]) != set(last_addr_receiver.received_addrs))\r\nAssertionError\r\n```",
      "created_at" : "2020-06-14T07:42:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-643731428",
      "id" : 643731428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzczMTQyOA==",
      "updated_at" : "2020-06-14T07:42:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643731428",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr good catch, thank you! I think Poisson timer varied too much, I made it more straightforward.",
      "created_at" : "2020-06-14T13:51:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-643769482",
      "id" : 643769482,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Mzc2OTQ4Mg==",
      "updated_at" : "2020-06-14T13:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643769482",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Looking at the [older] code, I see two possible causes (and no clear good solutions):\r\n\r\n1. Not enough addresses to ensure the new set is distinct\r\n2. `PoissonNextSend` may be choosing a >3 day delay.",
      "created_at" : "2020-06-14T20:11:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-643816102",
      "id" : 643816102,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzgxNjEwMg==",
      "updated_at" : "2020-06-14T20:11:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643816102",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Regarding the new version, you've switched from a 60+% chance of <24h, to only times between 24h-27h. I guess that's fine, but might be more fingerprintable?",
      "created_at" : "2020-06-14T20:38:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-643819135",
      "id" : 643819135,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzgxOTEzNQ==",
      "updated_at" : "2020-06-14T20:38:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643819135",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr I'm pretty sure the problem was (2), because I did a bunch of experiments (like ran tests 1,000 times before and after my recent force push).\r\n\r\nRegarding the interval, I think we should just focus average ~24h (my last commit has sloppy 25.5h, making it 24h now) as we discussed before.\r\n\r\nA. Not sure why Poisson(24h) would have a 60% chance of <24h? (less important)\r\nB. Not sure why a high chance of shorter intervals make it less fingerprintable (I think shorter actually makes it more fingerprintable cuz attacker can collect their data faster)? (more important)",
      "created_at" : "2020-06-15T05:17:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-643907638",
      "id" : 643907638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzkwNzYzOA==",
      "updated_at" : "2020-06-15T05:34:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643907638",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r440475693"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440475693"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: move the `)`  until after `whitelisted node`",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-15T22:12:11Z",
      "diff_hunk" : "@@ -251,7 +252,12 @@ class CConnman\n     void SetServices(const CService &addr, ServiceFlags nServices);\n     void MarkAddressGood(const CAddress& addr);\n     void AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n-    std::vector<CAddress> GetAddresses();\n+\n+    // Cache is used to minimize topology leaks, so it should\n+    // be used for all non-trusted calls, for example, p2p.\n+    // A non-malicious call (either from RPC) or a whitelisted node",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r440475693",
      "id" : 440475693,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ3NTY5Mw==",
      "original_commit_id" : "d1312914a0d4d9d88c5b74ebca8fd25bc3e20bf2",
      "original_line" : 258,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 431029127,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440475693",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r441145065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441145065"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since all addresses go into the same bucket, I think that only 64 of them will be kept in addrman, 14 of which will be returned in response to each `GETADDR` - so creating 1000 addresses instead of less does not add randomness to the `GETADDR` responses - though it's fine of course if you want to test the 1000 address limit for `ADDR`.",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-16T21:12:20Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test addr response caching\n+\"\"\"\n+\n+from test_framework.messages import (\n+    CAddress,\n+    NODE_NETWORK,\n+    NODE_WITNESS,\n+    msg_addr,\n+    msg_getaddr,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+    mininode_lock\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    wait_until\n+)\n+import time\n+\n+ADDRS = []\n+for i in range(1000):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r441145065",
      "id" : 441145065,
      "line" : 28,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NTA2NQ==",
      "original_commit_id" : "d1312914a0d4d9d88c5b74ebca8fd25bc3e20bf2",
      "original_line" : 28,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "test/functional/p2p_getaddr_caching.py",
      "position" : 28,
      "pull_request_review_id" : 431029127,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441145065",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r441333812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441333812"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nice catch! Let's keep it this way just in case e.g. bucketing logic is changed in the future.",
      "commit_id" : "52d22a3c235bfed8a772b7cccbe470efdfa10291",
      "created_at" : "2020-06-17T07:22:18Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test addr response caching\n+\"\"\"\n+\n+from test_framework.messages import (\n+    CAddress,\n+    NODE_NETWORK,\n+    NODE_WITNESS,\n+    msg_addr,\n+    msg_getaddr,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+    mininode_lock\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    wait_until\n+)\n+import time\n+\n+ADDRS = []\n+for i in range(1000):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#discussion_r441333812",
      "id" : 441333812,
      "in_reply_to_id" : 441145065,
      "line" : 28,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMzMzgxMg==",
      "original_commit_id" : "d1312914a0d4d9d88c5b74ebca8fd25bc3e20bf2",
      "original_line" : 28,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "test/functional/p2p_getaddr_caching.py",
      "position" : 28,
      "pull_request_review_id" : 432124552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18991",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441333812",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed feedback from @mzumsande: added PF_ADDR to the fuzzer and fixed the comment.",
      "created_at" : "2020-06-17T07:38:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-645207913",
      "id" : 645207913,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTIwNzkxMw==",
      "updated_at" : "2020-06-17T07:38:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645207913",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't touch that behaviour at all! I introduce two separate caches, but both of them are filled the same way as before. The separation is based on who requests (onion or regular), not the type of AddrMan records.\r\n\r\nJust a question: How do you recognize an incoming ONION connection? They look like incoming IPv4 connections, that tend to come from `127.0.0.1`. I think until #8973 is implemented, which would use a dedicated incoming P2P port for connections coming from Tor, it's not possible to reliably distinguish them. Though maybe \"comes from localhost\" is good enough in practical cases, I don't know.\r\n\r\nBut as I see you currently use ` pfrom.addr.GetNetwork();` which will return IPv4 in this case?\r\n",
      "created_at" : "2020-06-18T11:22:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-645953952",
      "id" : 645953952,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTk1Mzk1Mg==",
      "updated_at" : "2020-06-18T11:22:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645953952",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj good point! I actually don't have much hands-on experience with Tor inbounds.\r\nI can't verify what you say atm, but yeah, *if* they look like 127.0.0.1, they will be grouped with \"comes from localhost\" until #8973.\r\n\r\nI think it's fine to merge it as-is, and then when #8973 comes the grouping can be improved.",
      "created_at" : "2020-06-18T12:11:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-645976349",
      "id" : 645976349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTk3NjM0OQ==",
      "updated_at" : "2020-06-18T12:11:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645976349",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I am not sure I understand how big the privacy gain is from this. Couldn't the spy just take the ~1000 records we send them and then send all of them a GETADDR and still get a very good view of the topology of the network within a few minutes? Granted, they may still be missing a few of our connections after that. But then maybe a simpler approach would be to keep a few connections 'secret' and never announce them?\r\n\r\nAlso, is it generally considered bad if a node wants to know about as many peers as possible? If I was a merchant or a miner/pool I might want to optimize my network view for non-malicious reasons if there is any (even very small) indication that I might make more money or be a little more secure.",
      "created_at" : "2020-06-25T10:34:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-649457045",
      "id" : 649457045,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0OTQ1NzA0NQ==",
      "updated_at" : "2020-06-25T10:34:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649457045",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">Couldn't the spy just take the ~1000 records we send them and then send all of them a GETADDR and still get a very good view of the topology of the network within a few minutes?\r\n\r\nI don't know how to exploit what you're describing :) Like, yeah, you send them all a GETADDR, but then what?\r\n\r\nI'm talking about a different set of attacks here. One example is mapping two virtual identities (Tor and ipv4) of the same node together. If you can scrape all their AddrMan records and compare timings, it's very easy to tell if they're the same physical node. After my change, it's much harder, because two sets of records may not overlap at all.\r\nI have other attacks in mind, per which one can tell direct peers of a node by looking at *all* AddrMan records of a victim.\r\n\r\n>Also, is it generally considered bad if a node wants to know about as many peers as possible?\r\n\r\nWell, if you want more security, you can query 100 random nodes x 1000 addrs and get the same full AddrMan list :)\r\nThis is by all means better than relying on scraping full AddrMans from first 8 peers you have.\r\nMaybe someone can implement this, but I'm not convinced it's very useful :) Getting 8 x 1000 addrs at the beginning and catching up via other means later seems good enough.\r\nFurthermore, if one of your 8 peers fills your AddrMan with trash, you're in trouble...",
      "created_at" : "2020-06-25T11:03:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18991#issuecomment-649470276",
      "id" : 649470276,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18991",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0OTQ3MDI3Ng==",
      "updated_at" : "2020-06-25T11:03:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649470276",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   }
]
