{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "The data storage layer of the wallet is fairly complicated and not well encapsulated or modularized. This makes it difficult for us to introduce new data storage methods. So this PR refactors it such that there is a clear way to introduce other storage options. This is also intended to clean up the logic of the database layer so that it is easier to follow and reason about.\r\n\r\nIn the database, there are 3 classes: `BerkeleyBatch`, `BerkeleyDatabase`, and `BerkeleyEnvironment`. `BerkeleyDatabase` is typenamed to `WalletDatabase`. The goal is to introduce a `WalletDatabase` abstract class which `BerkeleyDatabase` implements. This `WalletDatabase` class can be inherited by other storage methods. All of the database specific things should be hidden in those classes.\r\n\r\nTo achieve this, we first remove `BerkeleyBatch` and squash most of its functionality into `BerkeleyDatabase`. `BerkeleyBatch`'s constructor used to create the actual `Db` handle to the database. This is now done in a new `Open()` function in `BerkeleyDatabase`. `Read`, `Write`, `Erase`, `Exists`, `TxnBegin`, `TxnCommit`, and `TxnAbort` are moved into `BerkeleyDatabase`. `BerkeleyDatabase` will also handle it's own closing with a new `Close` function and some static functions that took `BerkeleyDatabase` as arguments are now member functions (e.g. `Rewrite`). Lastly the functions `GetCursor` and `ReadAtCursor` are modified to instead allocate and use a cursor within the `BerkeleyDatabase` itself instead of returning a cursor object to the caller.\r\n\r\nIn addition to removing `BerkeleyBatch`, the existence of `BerkeleyEnvironment` is hidden inside of `BerkeleyDatabase`. To achieve this, the closing functionality is moved to `BerkeleyDatabase`'s destructor instead of having an option in `Flush` (now `Close`) to close the environment. `mapFileUseCount` is removed and instead of `WalletDatabase` will track it's use count with `m_refcount`. This are incremented by newly introduced `Acquire` and `Release` functions. `m_refcount` is used to ensure that the database and environment are not closed while the database may still be in use.\r\n\r\nInstead of each `BerkeleyEnvironment` tracking the fileids of the databases in that environment, a global map `g_fileids` is used. Since we were already going through every open fileid for the uniqeness check, it doesn't matter what `BerkeleyEnvironment` has a database with a particular fileid. All we care about is that there is a database in any of the environments that has the same fileid of the database that is currently being opened.\r\n\r\nLastly, `BerkeleyDatabase` and `BerkeleyEnvironment` are moved into new files `wallet/bdb.{cpp/h}`. `WalletDatabase` remains in `wallet/db.{cpp/h}`. This just gives better organization of the code so they aren't all mixed together.\r\n\r\n***\r\n\r\nThis PR slightly diverges from my [previous notes and thinking](https://gist.github.com/achow101/cda3ea1bb07f585e56caaf969e842188). Notably the old method of multiwallet (wallet files with different names in the same environment) is still supported. Additionally `BerkeleyEnvironment` still exists and was not squashed into `BerkeleyDatabase`.\r\n\r\n***\r\n\r\nRequires #18918 which moves all of the recovery and salvage stuff out of the way.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971/comments",
   "created_at" : "2020-05-14T00:04:15Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971",
   "id" : 617830654,
   "labels" : [
      {
         "color" : "08a781",
         "default" : false,
         "description" : null,
         "id" : 149424,
         "name" : "Wallet",
         "node_id" : "MDU6TGFiZWwxNDk0MjQ=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDE3Njc1NzY2",
   "number" : 18971,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/18971.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18971",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/18971.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18971"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "wallet: Refactor the classes in wallet/db.{cpp/h}",
   "updated_at" : "2020-05-14T00:08:17Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18971",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
      "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
      "followers_url" : "https://api.github.com/users/achow101/followers",
      "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/achow101",
      "id" : 3782274,
      "login" : "achow101",
      "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
      "organizations_url" : "https://api.github.com/users/achow101/orgs",
      "received_events_url" : "https://api.github.com/users/achow101/received_events",
      "repos_url" : "https://api.github.com/users/achow101/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/achow101"
   }
}
