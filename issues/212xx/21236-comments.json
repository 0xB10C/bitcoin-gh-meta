[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r579181272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579181272"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's currently impossible for `vAddrToSend` to grow larger than `MAX_ADDR_TO_SEND` (observe that the only place where elements are added to `vAddrToSend` check the size first). However, it might be safer to do something like:\r\n\r\n```suggestion\r\n    if(pto.vAddrToSend.size() > MAX_ADDR_TO_SEND) vAddrToSend.resize(MAX_ADDR_TO_SEND);\r\n```\r\n\r\nI'm happy to go with whatever reviewers prefer.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-19T13:23:26Z",
      "diff_hunk" : "@@ -4365,6 +4368,68 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!pto.RelayAddrsWithConn()) return;\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(pto.m_addr_known);\n+    assert(pto.vAddrToSend.size() <= MAX_ADDR_TO_SEND);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r579181272",
      "id" : 579181272,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTE4MTI3Mg==",
      "original_commit_id" : "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "original_line" : 4403,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 594182306,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579181272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21270 ([Bundle 4/n] Prune g_chainman usage in validation-adjacent modules by dongcarl)\n* #21186 (Net/Net Processing: Move addr data into net_processing by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-02-19T14:17:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-782102826",
      "id" : 782102826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21236",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MjEwMjgyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-23T01:20:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/782102826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on master to pick up fix for interface_zmq.py in #21008.",
      "created_at" : "2021-02-22T08:46:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-783203779",
      "id" : 783203779,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21236",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MzIwMzc3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-22T08:46:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783203779",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583805388"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583805388"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Err, nack. Please add `EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing)` to `MaybeSendAddr` instead. I could see an argument for having a single mutex representing \"this is the message handler thread\" (rather than one per-peer), but removing guards entirely is wrong...",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-26T17:37:25Z",
      "diff_hunk" : "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583805388",
      "id" : 583805388,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzgwNTM4OA==",
      "original_commit_id" : "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "original_line" : 550,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 599796777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583805388",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583839782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583839782"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe change this to `node` or `node_to` as per `MaybeSendPing`. It's no longer a `p` either way.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-26T18:36:31Z",
      "diff_hunk" : "@@ -337,7 +337,7 @@ class PeerManagerImpl final : public PeerManager\n     void MaybeSendPing(CNode& node_to, Peer& peer);\n \n     /** Send `addr` messages on a regular schedule*/\n-    void MaybeSendAddr(CNode* pto);\n+    void MaybeSendAddr(CNode& pto);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583839782",
      "id" : 583839782,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzgzOTc4Mg==",
      "original_commit_id" : "cb68827f7d25d2c2eafa8f64a9f0a7c4cacee84b",
      "original_line" : 340,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 599796777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583839782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583849836"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583849836"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could have an Assume instead of an assert, but better to error out than silently cover it up if mistakes are introduced elsewhere I think.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-26T18:54:25Z",
      "diff_hunk" : "@@ -4365,6 +4368,68 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!pto.RelayAddrsWithConn()) return;\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(pto.m_addr_known);\n+    assert(pto.vAddrToSend.size() <= MAX_ADDR_TO_SEND);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583849836",
      "id" : 583849836,
      "in_reply_to_id" : 579181272,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mzg0OTgzNg==",
      "original_commit_id" : "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "original_line" : 4403,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 599796777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583849836",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583851018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583851018"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should move this to directly after the `RelayAddrsWithConn` check -- that's what makes it true, and you rely on `m_addr_known` being not null in the `!IBD` branch above as well.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-26T18:56:23Z",
      "diff_hunk" : "@@ -4395,45 +4395,39 @@ void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n         pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n     }\n \n-    //\n-    // Message: addr\n-    //\n-    if (pto.RelayAddrsWithConn() && pto.m_next_addr_send < current_time) {\n-        pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n-        std::vector<CAddress> vAddr;\n-        vAddr.reserve(pto.vAddrToSend.size());\n-        assert(pto.m_addr_known);\n-\n-        const char* msg_type;\n-        int make_flags;\n-        if (pto.m_wants_addrv2) {\n-            msg_type = NetMsgType::ADDRV2;\n-            make_flags = ADDRV2_FORMAT;\n-        } else {\n-            msg_type = NetMsgType::ADDR;\n-            make_flags = 0;\n-        }\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n \n-        for (const CAddress& addr : pto.vAddrToSend)\n-        {\n-            if (!pto.m_addr_known->contains(addr.GetKey()))\n-            {\n-                pto.m_addr_known->insert(addr.GetKey());\n-                vAddr.push_back(addr);\n-                // receiver rejects addr messages larger than MAX_ADDR_TO_SEND\n-                if (vAddr.size() >= MAX_ADDR_TO_SEND)\n-                {\n-                    m_connman.PushMessage(&pto, msgMaker.Make(make_flags, msg_type, vAddr));\n-                    vAddr.clear();\n-                }\n-            }\n-        }\n-        pto.vAddrToSend.clear();\n-        if (!vAddr.empty())\n-            m_connman.PushMessage(&pto, msgMaker.Make(make_flags, msg_type, vAddr));\n-        // we only send the big addr message once\n-        if (pto.vAddrToSend.capacity() > 40)\n-            pto.vAddrToSend.shrink_to_fit();\n+    assert(pto.m_addr_known);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583851018",
      "id" : 583851018,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mzg1MTAxOA==",
      "original_commit_id" : "53353c75369bb87a9947c49a4a9f0c0ef053f248",
      "original_line" : 4402,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 599796777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583851018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584276609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584276609"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These members should never have been guarded by `cs_sendProcessing`, which really only exists at this point to make sure that multiple threads don't enter `SendMessages()` concurrently.\r\n\r\nThe annotation was over-zealously added in #13123. The author of that PR agrees that these annotations are unnecessary: https://github.com/bitcoin/bitcoin/pull/13123#issuecomment-647505130.\r\n\r\nThese variables are only ever read/written by the message handler thread inside `SendMessages()`, so it's safe for them to be unguarded. I can make them atomic if you think that would make this more obviously safe.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-28T10:53:53Z",
      "diff_hunk" : "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584276609",
      "id" : 584276609,
      "in_reply_to_id" : 583805388,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDI3NjYwOQ==",
      "original_commit_id" : "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "original_line" : 550,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 600245301,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584276609",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584277318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584277318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do you think it'd be useful to add a new macro `AssertAndRecover()`:\r\n\r\n- in debug builds, this asserts (terminates) if the condition fails\r\n- in release builds, this executes some recovery code and continues.\r\n\r\neg here the recovery code would be to clear the `vAddrToSend` vector and return from `MaybeSendAddr()`. Better to not relay addr records to a peer and continue operation than crash the node.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-28T10:59:14Z",
      "diff_hunk" : "@@ -4365,6 +4368,68 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!pto.RelayAddrsWithConn()) return;\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(pto.m_addr_known);\n+    assert(pto.vAddrToSend.size() <= MAX_ADDR_TO_SEND);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584277318",
      "id" : 584277318,
      "in_reply_to_id" : 579181272,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDI3NzMxOA==",
      "original_commit_id" : "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "original_line" : 4403,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 600245745,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584277318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584282539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584282539"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-28T11:40:47Z",
      "diff_hunk" : "@@ -337,7 +337,7 @@ class PeerManagerImpl final : public PeerManager\n     void MaybeSendPing(CNode& node_to, Peer& peer);\n \n     /** Send `addr` messages on a regular schedule*/\n-    void MaybeSendAddr(CNode* pto);\n+    void MaybeSendAddr(CNode& pto);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584282539",
      "id" : 584282539,
      "in_reply_to_id" : 583839782,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDI4MjUzOQ==",
      "original_commit_id" : "cb68827f7d25d2c2eafa8f64a9f0a7c4cacee84b",
      "original_line" : 340,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 600249140,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584282539",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584282888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584282888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-28T11:44:01Z",
      "diff_hunk" : "@@ -4395,45 +4395,39 @@ void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n         pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n     }\n \n-    //\n-    // Message: addr\n-    //\n-    if (pto.RelayAddrsWithConn() && pto.m_next_addr_send < current_time) {\n-        pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n-        std::vector<CAddress> vAddr;\n-        vAddr.reserve(pto.vAddrToSend.size());\n-        assert(pto.m_addr_known);\n-\n-        const char* msg_type;\n-        int make_flags;\n-        if (pto.m_wants_addrv2) {\n-            msg_type = NetMsgType::ADDRV2;\n-            make_flags = ADDRV2_FORMAT;\n-        } else {\n-            msg_type = NetMsgType::ADDR;\n-            make_flags = 0;\n-        }\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n \n-        for (const CAddress& addr : pto.vAddrToSend)\n-        {\n-            if (!pto.m_addr_known->contains(addr.GetKey()))\n-            {\n-                pto.m_addr_known->insert(addr.GetKey());\n-                vAddr.push_back(addr);\n-                // receiver rejects addr messages larger than MAX_ADDR_TO_SEND\n-                if (vAddr.size() >= MAX_ADDR_TO_SEND)\n-                {\n-                    m_connman.PushMessage(&pto, msgMaker.Make(make_flags, msg_type, vAddr));\n-                    vAddr.clear();\n-                }\n-            }\n-        }\n-        pto.vAddrToSend.clear();\n-        if (!vAddr.empty())\n-            m_connman.PushMessage(&pto, msgMaker.Make(make_flags, msg_type, vAddr));\n-        // we only send the big addr message once\n-        if (pto.vAddrToSend.capacity() > 40)\n-            pto.vAddrToSend.shrink_to_fit();\n+    assert(pto.m_addr_known);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584282888",
      "id" : 584282888,
      "in_reply_to_id" : 583851018,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDI4Mjg4OA==",
      "original_commit_id" : "53353c75369bb87a9947c49a4a9f0c0ef053f248",
      "original_line" : 4402,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 600249395,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584282888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @ajtowns. I've addressed your comments.",
      "created_at" : "2021-02-28T11:52:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-787440104",
      "id" : 787440104,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21236",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4NzQ0MDEwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-28T11:52:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787440104",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584304375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584304375"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Isn't `AssertAndRecover(condition, recovery)` the same as `if (!Assume(condition)) { recovery; }` ? (Err, at least if `Assume` was the identity function its comments claim it to be, rather than being cast to `(void)` in release builds)\r\n\r\nNot sure the recovery code is needed here -- more than MAX_ADDR_TO_SEND would be a protocol violation, but shouldn't cause a crash or anything, I think?",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-28T14:17:24Z",
      "diff_hunk" : "@@ -4365,6 +4368,68 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!pto.RelayAddrsWithConn()) return;\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(pto.m_addr_known);\n+    assert(pto.vAddrToSend.size() <= MAX_ADDR_TO_SEND);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584304375",
      "id" : 584304375,
      "in_reply_to_id" : 579181272,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDMwNDM3NQ==",
      "original_commit_id" : "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "original_line" : 4403,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 600264565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584304375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584308103"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584308103"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"These variables are only ever read/written ... inside SendMessages\" -- is **exactly** what GUARDED_BY(cs_sendProcessing) documents. The point of having the guard is to catch errors when we change the code in future and violate the assumptions we were relying on -- if the code compiles with the GUARDED_BY statements, it will always also compile correctly without them -- the trouble comes when people make changes later.\r\n\r\nI don't know what @practicalswift thinks the annotation was a mistake; it's not. (It's a mistake the other addr-related member variables aren't guarded though)\r\n\r\nHaving things be atomic instead of guarded is only a good idea if they're actually accessed by multiple threads, and either they don't need to be synchronized with any other data, or the timing is too important for proper locks.\r\n\r\nEDIT: There's a commit on https://github.com/ajtowns/bitcoin/commits/202103-cs_sendProcessing which turns the mutex into a single global, which can then be used to also guard things in `struct Peer` that aren't accessed outside of ProcessMesasges/SendMessages. Not needed for this PR, but might be useful for the followup.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-28T14:41:40Z",
      "diff_hunk" : "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584308103",
      "id" : 584308103,
      "in_reply_to_id" : 583805388,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDMwODEwMw==",
      "original_commit_id" : "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "original_line" : 550,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 600267153,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584308103",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584353143"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584353143"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Isn't AssertAndRecover(condition, recovery) the same as if (!Assume(condition)) { recovery; }\r\n\r\nAh interesting. I didn't realise that.\r\n\r\n> Not sure the recovery code is needed here -- more than MAX_ADDR_TO_SEND would be a protocol violation, but shouldn't cause a crash or anything, I think?\r\n\r\nI think it's probably better to skip sending the `addr` message than violate the p2p protocol.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-28T20:08:02Z",
      "diff_hunk" : "@@ -4365,6 +4368,68 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!pto.RelayAddrsWithConn()) return;\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(pto.m_addr_known);\n+    assert(pto.vAddrToSend.size() <= MAX_ADDR_TO_SEND);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584353143",
      "id" : 584353143,
      "in_reply_to_id" : 579181272,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDM1MzE0Mw==",
      "original_commit_id" : "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "original_line" : 4403,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 600300442,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584353143",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584353407"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584353407"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> It's a mistake the other addr-related member variables aren't guarded though\r\n\r\nOk. I've moved all of the addr fields to be guarded by their own `m_addr_mutex` mutex. This seems much better than having data/logic that should be in net_processing being locked by a mutex in net.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-02-28T20:10:00Z",
      "diff_hunk" : "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584353407",
      "id" : 584353407,
      "in_reply_to_id" : 583805388,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDM1MzQwNw==",
      "original_commit_id" : "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "original_line" : 550,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 600300603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584353407",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Oops. I missed taking the new lock in one of the call sites. Will fix up tomorrow.",
      "created_at" : "2021-02-28T22:05:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-787531613",
      "id" : 787531613,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21236",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4NzUzMTYxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-28T22:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787531613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Once all of the addr data has been moved into net_processing, I intend to guard it with a single lock (see the `m_addr_relay` struct in https://github.com/jnewbery/bitcoin/tree/2021-02-lazy-init-peer). However, it's proving difficult to get lock orders right while the data is still in net. I've decided to punt on doing that until after this PR.\r\n\r\nTo avoid simply removing the guard from `m_next_addr_send` and `m_next_local_addr_send`, I've introduced the new `m_addr_mutex` lock in this PR. Once the data is moved into `Peer`, I'll extend that mutex to guard the remaining addr data.",
      "created_at" : "2021-03-01T18:00:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-788149974",
      "id" : 788149974,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21236",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4ODE0OTk3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-01T18:00:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788149974",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584933092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584933092"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That proved more difficult than expected. I've reverted that change and have moved just  `m_next_addr_send` and `m_next_local_addr_send` to be guarded by the new `m_addr_mutex`. I'll move the rest of the addr fields under that mutex when they move into the `Peer` struct.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-01T18:01:45Z",
      "diff_hunk" : "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584933092",
      "id" : 584933092,
      "in_reply_to_id" : 583805388,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDkzMzA5Mg==",
      "original_commit_id" : "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "original_line" : 550,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 601017423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584933092",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r585462620"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585462620"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't follow why you're changing those guards at all in this PR; you don't need to. See https://github.com/ajtowns/bitcoin/tree/202003-pr21236\r\n\r\nI don't think it will make sense to lock `m_addr_known` and `vAddrToSend` with per-peer locks: when receiving an addr message we'll obtain the lock for the peer that sends the message, then attempt to obtain the lock for a peer we want to forward the address on to -- but there's no particular reason to expect those peers to always be in a particular order, so holding the sending peer's lock would create ordering violations, and releasing and reacquiring would be a bit ridiculous given that this is always happening in a single thread.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-02T10:52:41Z",
      "diff_hunk" : "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r585462620",
      "id" : 585462620,
      "in_reply_to_id" : 583805388,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTQ2MjYyMA==",
      "original_commit_id" : "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "original_line" : 550,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 601683530,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585462620",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r585490441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585490441"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! Totally agree that taking and releasing multiple locks would be ridiculous. I've taken your branch.",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-02T11:36:12Z",
      "diff_hunk" : "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r585490441",
      "id" : 585490441,
      "in_reply_to_id" : 583805388,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTQ5MDQ0MQ==",
      "original_commit_id" : "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "original_line" : 550,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 601719232,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585490441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586153384"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586153384"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    if (node.vAddrToSend.capacity() > 40) {\r\n        node.vAddrToSend.shrink_to_fit();\r\n    }\r\n```",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-03T06:36:58Z",
      "diff_hunk" : "@@ -4366,6 +4369,71 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& node)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!node.RelayAddrsWithConn()) return;\n+\n+    assert(node.m_addr_known);\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        node.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (node.m_next_local_addr_send != 0us) {\n+            node.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&node)) {\n+            FastRandomContext insecure_rand;\n+            node.PushAddress(*local_addr, insecure_rand);\n+        }\n+        node.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= node.m_next_addr_send) return;\n+\n+    node.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(node.vAddrToSend.size() <= MAX_ADDR_TO_SEND);\n+\n+    // Remove addr records that the peer already knows about\n+    auto addr_already_known = [&node](const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(node.m_addr_mutex)\n+                              {return node.m_addr_known->contains(addr.GetKey());};\n+    node.vAddrToSend.erase(std::remove_if(node.vAddrToSend.begin(), node.vAddrToSend.end(), addr_already_known),\n+                           node.vAddrToSend.end());\n+\n+    // No addr messages to send\n+    if (node.vAddrToSend.empty()) return;\n+\n+    for (const CAddress& addr : node.vAddrToSend) {\n+        node.m_addr_known->insert(addr.GetKey());\n+    }\n+\n+    const char* msg_type;\n+    int make_flags;\n+    if (node.m_wants_addrv2) {\n+        msg_type = NetMsgType::ADDRV2;\n+        make_flags = ADDRV2_FORMAT;\n+    } else {\n+        msg_type = NetMsgType::ADDR;\n+        make_flags = 0;\n+    }\n+    m_connman.PushMessage(&node, CNetMsgMaker(node.GetCommonVersion()).Make(make_flags, msg_type, node.vAddrToSend));\n+    node.vAddrToSend.clear();\n+\n+    // we only send the big addr message once\n+    if (node.vAddrToSend.capacity() > 40)\n+        node.vAddrToSend.shrink_to_fit();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586153384",
      "id" : 586153384,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjE1MzM4NA==",
      "original_commit_id" : "d587fae7542ebfa7e6292333f0976dd32d643e20",
      "original_line" : 4430,
      "original_position" : 76,
      "original_start_line" : 4433,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 602558406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586153384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586155459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586155459"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    const auto current_time = GetTime<std::chrono::microseconds>();\r\n```",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-03T06:42:20Z",
      "diff_hunk" : "@@ -4366,6 +4369,71 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& node)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!node.RelayAddrsWithConn()) return;\n+\n+    assert(node.m_addr_known);\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586155459",
      "id" : 586155459,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjE1NTQ1OQ==",
      "original_commit_id" : "d587fae7542ebfa7e6292333f0976dd32d643e20",
      "original_line" : 4379,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 602558406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586155459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586234407"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586234407"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-03T09:02:52Z",
      "diff_hunk" : "@@ -4366,6 +4369,71 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& node)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!node.RelayAddrsWithConn()) return;\n+\n+    assert(node.m_addr_known);\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586234407",
      "id" : 586234407,
      "in_reply_to_id" : 586155459,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjIzNDQwNw==",
      "original_commit_id" : "d587fae7542ebfa7e6292333f0976dd32d643e20",
      "original_line" : 4379,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 602659552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586234407",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586234438"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586234438"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-03T09:02:57Z",
      "diff_hunk" : "@@ -4366,6 +4369,71 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& node)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!node.RelayAddrsWithConn()) return;\n+\n+    assert(node.m_addr_known);\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        node.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (node.m_next_local_addr_send != 0us) {\n+            node.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&node)) {\n+            FastRandomContext insecure_rand;\n+            node.PushAddress(*local_addr, insecure_rand);\n+        }\n+        node.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= node.m_next_addr_send) return;\n+\n+    node.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(node.vAddrToSend.size() <= MAX_ADDR_TO_SEND);\n+\n+    // Remove addr records that the peer already knows about\n+    auto addr_already_known = [&node](const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(node.m_addr_mutex)\n+                              {return node.m_addr_known->contains(addr.GetKey());};\n+    node.vAddrToSend.erase(std::remove_if(node.vAddrToSend.begin(), node.vAddrToSend.end(), addr_already_known),\n+                           node.vAddrToSend.end());\n+\n+    // No addr messages to send\n+    if (node.vAddrToSend.empty()) return;\n+\n+    for (const CAddress& addr : node.vAddrToSend) {\n+        node.m_addr_known->insert(addr.GetKey());\n+    }\n+\n+    const char* msg_type;\n+    int make_flags;\n+    if (node.m_wants_addrv2) {\n+        msg_type = NetMsgType::ADDRV2;\n+        make_flags = ADDRV2_FORMAT;\n+    } else {\n+        msg_type = NetMsgType::ADDR;\n+        make_flags = 0;\n+    }\n+    m_connman.PushMessage(&node, CNetMsgMaker(node.GetCommonVersion()).Make(make_flags, msg_type, node.vAddrToSend));\n+    node.vAddrToSend.clear();\n+\n+    // we only send the big addr message once\n+    if (node.vAddrToSend.capacity() > 40)\n+        node.vAddrToSend.shrink_to_fit();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586234438",
      "id" : 586234438,
      "in_reply_to_id" : 586153384,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjIzNDQzOA==",
      "original_commit_id" : "d587fae7542ebfa7e6292333f0976dd32d643e20",
      "original_line" : 4430,
      "original_position" : 76,
      "original_start_line" : 4433,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 602659615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-03T23:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586234438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review, @fanquake! The compile error was due to an annotation that I'd left from a previous branch. It's now fixed.\r\n\r\n> If this SendMessages() logic is going to be split up even more, you could consider a call to GetTime<>() at the start, and just pass that into MaybeSendPing, MaybeSendAddr, MaybeSomeOtherFunc etc.\r\n\r\nGood idea. Done!",
      "created_at" : "2021-03-03T09:04:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-789555842",
      "id" : 789555842,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21236",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4OTU1NTg0Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-03T09:04:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789555842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586886948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586886948"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Î¼nit: `schedule. */` ",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-03T23:39:11Z",
      "diff_hunk" : "@@ -336,6 +336,9 @@ class PeerManagerImpl final : public PeerManager\n      *  mark the peer to be disconnected if a ping has timed out. */\n     void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);\n \n+    /** Send `addr` messages on a regular schedule*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586886948",
      "id" : 586886948,
      "line" : 339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Njg4Njk0OA==",
      "original_commit_id" : "86087474a21c730edeaa6fc2bf102d1a3d11acfc",
      "original_line" : 339,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 7,
      "pull_request_review_id" : 603469123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-04T01:08:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586886948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586903995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586903995"
         }
      },
      "author_association" : "MEMBER",
      "body" : "what do you think about adding an `AssertLockHeld` to accompany the clang safety annotations with a dynamic runtime check? ([developer notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#threads-and-synchronization))",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-03T23:57:20Z",
      "diff_hunk" : "@@ -4365,6 +4368,71 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::mic\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode* pto, std::chrono::microseconds current_time)\n+{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586903995",
      "id" : 586903995,
      "line" : 4372,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjkwMzk5NQ==",
      "original_commit_id" : "86087474a21c730edeaa6fc2bf102d1a3d11acfc",
      "original_line" : 4372,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 31,
      "pull_request_review_id" : 603469123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-04T01:08:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586903995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586925342"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586925342"
         }
      },
      "author_association" : "MEMBER",
      "body" : "looks like d506485865 removed the IBD check, but 4adba42f41 brings it back",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-04T00:48:52Z",
      "diff_hunk" : "@@ -4368,68 +4368,67 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::mic\n     }\n }\n \n-void PeerManagerImpl::MaybeSendAddr(CNode* pto, std::chrono::microseconds current_time)\n+void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds current_time)\n {\n-    const CNetMsgMaker msgMaker(pto->GetCommonVersion());\n+    const CNetMsgMaker msgMaker(node.GetCommonVersion());\n \n-    if (fListen && pto->RelayAddrsWithConn() &&\n-        !::ChainstateActive().IsInitialBlockDownload() &&\n-        pto->m_next_local_addr_send < current_time) {\n+    if (fListen && node.RelayAddrsWithConn() &&\n+        node.m_next_local_addr_send < current_time) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586925342",
      "id" : 586925342,
      "line" : 4380,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjkyNTM0Mg==",
      "original_commit_id" : "d5064858656016005396f670c2c7a5fd1e744b10",
      "original_line" : 4376,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 39,
      "pull_request_review_id" : 603469123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-04T01:08:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586925342",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586930516"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586930516"
         }
      },
      "author_association" : "MEMBER",
      "body" : "might be worth updating to `m_chainman.ActivateChainstate()`? \r\n\r\nh/t https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585433607",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-04T01:02:29Z",
      "diff_hunk" : "@@ -4375,8 +4375,6 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds curre\n \n     assert(node.m_addr_known);\n \n-    const CNetMsgMaker msgMaker(node.GetCommonVersion());\n-\n     // Periodically advertise our local address to the peer.\n     if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586930516",
      "id" : 586930516,
      "line" : 4379,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjkzMDUxNg==",
      "original_commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "original_line" : 4379,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 38,
      "pull_request_review_id" : 603469123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-04T01:08:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586930516",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587104852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587104852"
         }
      },
      "author_association" : "MEMBER",
      "body" : "looks like both `MaybeSendPing` and `MaybeSendAddr` can be made into const member functions",
      "commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "created_at" : "2021-03-04T04:46:35Z",
      "diff_hunk" : "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587104852",
      "id" : 587104852,
      "line" : 337,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzEwNDg1Mg==",
      "original_commit_id" : "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "original_line" : 337,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 603700421,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-04T04:46:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587104852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   }
]
