[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21207 (MOVEONLY: CWallet transaction code out of wallet.cpp/.h by ryanofsky)\n* #21206 (refactor: Make CWalletTx sync state type-safe by ryanofsky)\n* #20286 (rpc: deprecate `addresses` and `reqSigs` from rpc outputs by mjdietzx)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-02-24T00:38:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21283#issuecomment-784639363",
      "id" : 784639363,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21283",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4NDYzOTM2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-24T00:12:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/784639363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21283#discussion_r588408910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21283"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588408910"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Getting a compile error consistent with the CI for these two lines:\r\n\r\n```\r\nrpc/rawtransaction.cpp:1192:16: error: call to member function 'pushKV' is ambiguous\r\n        result.pushKV(\"input_count\", psbtx.inputs.size());\r\n        ~~~~~~~^~~~~~\r\n./univalue/include/univalue.h:127:10: note: candidate function\r\n    bool pushKV(const std::string& key, int64_t val_) {\r\n         ^\r\n./univalue/include/univalue.h:131:10: note: candidate function\r\n    bool pushKV(const std::string& key, uint64_t val_) {\r\n         ^\r\n./univalue/include/univalue.h:135:10: note: candidate function\r\n    bool pushKV(const std::string& key, bool val_) {\r\n         ^\r\n./univalue/include/univalue.h:139:10: note: candidate function\r\n    bool pushKV(const std::string& key, int val_) {\r\n         ^\r\n./univalue/include/univalue.h:143:10: note: candidate function\r\n    bool pushKV(const std::string& key, double val_) {\r\n         ^\r\n./univalue/include/univalue.h:118:10: note: candidate function\r\n    bool pushKV(const std::string& key, const UniValue& val);\r\n         ^\r\n./univalue/include/univalue.h:119:10: note: candidate function not viable: no known conversion from 'std::__1::vector<PSBTInput, std::__1::allocator<PSBTInput> >::size_type' (aka 'unsigned long') to 'const std::string' (aka 'const basic_string<char, char_traits<char>, allocator<char> >') for 2nd argument\r\n    bool pushKV(const std::string& key, const std::string& val_) {\r\n         ^\r\n./univalue/include/univalue.h:123:10: note: candidate function not viable: no known conversion from 'std::__1::vector<PSBTInput, std::__1::allocator<PSBTInput> >::size_type' (aka 'unsigned long') to 'const char *' for 2nd argument\r\n    bool pushKV(const std::string& key, const char *val_) {\r\n         ^\r\nrpc/rawtransaction.cpp:1193:16: error: call to member function 'pushKV' is ambiguous\r\n        result.pushKV(\"output_count\", psbtx.inputs.size());\r\n        ~~~~~~~^~~~~~\r\n./univalue/include/univalue.h:127:10: note: candidate function\r\n    bool pushKV(const std::string& key, int64_t val_) {\r\n         ^\r\n./univalue/include/univalue.h:131:10: note: candidate function\r\n    bool pushKV(const std::string& key, uint64_t val_) {\r\n         ^\r\n./univalue/include/univalue.h:135:10: note: candidate function\r\n    bool pushKV(const std::string& key, bool val_) {\r\n         ^\r\n./univalue/include/univalue.h:139:10: note: candidate function\r\n    bool pushKV(const std::string& key, int val_) {\r\n         ^\r\n./univalue/include/univalue.h:143:10: note: candidate function\r\n    bool pushKV(const std::string& key, double val_) {\r\n         ^\r\n./univalue/include/univalue.h:118:10: note: candidate function\r\n    bool pushKV(const std::string& key, const UniValue& val);\r\n         ^\r\n./univalue/include/univalue.h:119:10: note: candidate function not viable: no known conversion from 'std::__1::vector<PSBTInput, std::__1::allocator<PSBTInput> >::size_type' (aka 'unsigned long') to 'const std::string' (aka 'const basic_string<char, char_traits<char>, allocator<char> >') for 2nd argument\r\n    bool pushKV(const std::string& key, const std::string& val_) {\r\n         ^\r\n./univalue/include/univalue.h:123:10: note: candidate function not viable: no known conversion from 'std::__1::vector<PSBTInput, std::__1::allocator<PSBTInput> >::size_type' (aka 'unsigned long') to 'const char *' for 2nd argument\r\n    bool pushKV(const std::string& key, const char *val_) {\r\n         ^\r\n2 errors generated.\r\n```",
      "commit_id" : "0d330b5761cbb36d8d2916f0d0266710a5d22deb",
      "created_at" : "2021-03-05T15:50:58Z",
      "diff_hunk" : "@@ -1107,10 +1157,61 @@ static RPCHelpMan decodepsbt()\n \n     UniValue result(UniValue::VOBJ);\n \n-    // Add the decoded tx\n-    UniValue tx_univ(UniValue::VOBJ);\n-    TxToUniv(CTransaction(*psbtx.tx), uint256(), tx_univ, false);\n-    result.pushKV(\"tx\", tx_univ);\n+    if (psbtx.tx != std::nullopt) {\n+        // Add the decoded tx\n+        UniValue tx_univ(UniValue::VOBJ);\n+        TxToUniv(CTransaction(*psbtx.tx), uint256(), tx_univ, false);\n+        result.pushKV(\"tx\", tx_univ);\n+    }\n+\n+    // Add the global xpubs\n+    UniValue global_xpubs(UniValue::VARR);\n+    for (std::pair<KeyOriginInfo, std::set<CExtPubKey>> xpub_pair : psbtx.m_xpubs) {\n+        for (auto& xpub : xpub_pair.second) {\n+            std::vector<unsigned char> ser_xpub;\n+            ser_xpub.assign(BIP32_EXTKEY_WITH_VERSION_SIZE, 0);\n+            xpub.EncodeWithVersion(ser_xpub.data());\n+\n+            UniValue keypath(UniValue::VOBJ);\n+            keypath.pushKV(\"xpub\", EncodeBase58Check(ser_xpub));\n+            keypath.pushKV(\"master_fingerprint\", HexStr(Span<unsigned char>(xpub_pair.first.fingerprint, xpub_pair.first.fingerprint + 4)));\n+            keypath.pushKV(\"path\", WriteHDKeypath(xpub_pair.first.path));\n+            global_xpubs.push_back(keypath);\n+        }\n+    }\n+    result.pushKV(\"global_xpubs\", global_xpubs);\n+\n+    // Add PSBTv2 stuff\n+    if (psbtx.GetVersion() == 2) {\n+        if (psbtx.tx_version != std::nullopt) {\n+            result.pushKV(\"tx_version\", *psbtx.tx_version);\n+        }\n+        if (psbtx.fallback_locktime != std::nullopt) {\n+            result.pushKV(\"fallback_locktime\", static_cast<uint64_t>(*psbtx.fallback_locktime));\n+        }\n+        result.pushKV(\"input_count\", psbtx.inputs.size());\n+        result.pushKV(\"output_count\", psbtx.inputs.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21283#discussion_r588408910",
      "id" : 588408910,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODQwODkxMA==",
      "original_commit_id" : "6e4c04e3a2f376b3f0f2c0a3ccbada2b7a6d845f",
      "original_line" : 1193,
      "original_position" : 127,
      "original_start_line" : 1192,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 605359794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21283",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-05T17:51:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588408910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21283#discussion_r588524887"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21283"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588524887"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I can't replicate this error at all, but I think I have fixed it.",
      "commit_id" : "0d330b5761cbb36d8d2916f0d0266710a5d22deb",
      "created_at" : "2021-03-05T17:51:42Z",
      "diff_hunk" : "@@ -1107,10 +1157,61 @@ static RPCHelpMan decodepsbt()\n \n     UniValue result(UniValue::VOBJ);\n \n-    // Add the decoded tx\n-    UniValue tx_univ(UniValue::VOBJ);\n-    TxToUniv(CTransaction(*psbtx.tx), uint256(), tx_univ, false);\n-    result.pushKV(\"tx\", tx_univ);\n+    if (psbtx.tx != std::nullopt) {\n+        // Add the decoded tx\n+        UniValue tx_univ(UniValue::VOBJ);\n+        TxToUniv(CTransaction(*psbtx.tx), uint256(), tx_univ, false);\n+        result.pushKV(\"tx\", tx_univ);\n+    }\n+\n+    // Add the global xpubs\n+    UniValue global_xpubs(UniValue::VARR);\n+    for (std::pair<KeyOriginInfo, std::set<CExtPubKey>> xpub_pair : psbtx.m_xpubs) {\n+        for (auto& xpub : xpub_pair.second) {\n+            std::vector<unsigned char> ser_xpub;\n+            ser_xpub.assign(BIP32_EXTKEY_WITH_VERSION_SIZE, 0);\n+            xpub.EncodeWithVersion(ser_xpub.data());\n+\n+            UniValue keypath(UniValue::VOBJ);\n+            keypath.pushKV(\"xpub\", EncodeBase58Check(ser_xpub));\n+            keypath.pushKV(\"master_fingerprint\", HexStr(Span<unsigned char>(xpub_pair.first.fingerprint, xpub_pair.first.fingerprint + 4)));\n+            keypath.pushKV(\"path\", WriteHDKeypath(xpub_pair.first.path));\n+            global_xpubs.push_back(keypath);\n+        }\n+    }\n+    result.pushKV(\"global_xpubs\", global_xpubs);\n+\n+    // Add PSBTv2 stuff\n+    if (psbtx.GetVersion() == 2) {\n+        if (psbtx.tx_version != std::nullopt) {\n+            result.pushKV(\"tx_version\", *psbtx.tx_version);\n+        }\n+        if (psbtx.fallback_locktime != std::nullopt) {\n+            result.pushKV(\"fallback_locktime\", static_cast<uint64_t>(*psbtx.fallback_locktime));\n+        }\n+        result.pushKV(\"input_count\", psbtx.inputs.size());\n+        result.pushKV(\"output_count\", psbtx.inputs.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21283#discussion_r588524887",
      "id" : 588524887,
      "in_reply_to_id" : 588408910,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODUyNDg4Nw==",
      "original_commit_id" : "6e4c04e3a2f376b3f0f2c0a3ccbada2b7a6d845f",
      "original_line" : 1193,
      "original_position" : 127,
      "original_start_line" : 1192,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 605464591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21283",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-05T17:51:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588524887",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-17T12:44:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21283#issuecomment-801052263",
      "id" : 801052263,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21283",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMTA1MjI2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-17T12:44:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/801052263",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-29T14:21:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21283#issuecomment-809419845",
      "id" : 809419845,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21283",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwOTQxOTg0NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-29T14:21:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809419845",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
