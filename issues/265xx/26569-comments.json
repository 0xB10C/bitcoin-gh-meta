[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jnewbery](https://github.com/bitcoin/bitcoin/pull/26569#issuecomment-1326830686) |\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24125](https://github.com/bitcoin/bitcoin/pull/24125) (p2p: Replace RecursiveMutex `m_tx_inventory_mutex` with Mutex and rename it by w0xlt)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-11-24T19:42:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26569#issuecomment-1326798103",
      "id" : 1326798103,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26569",
      "node_id" : "IC_kwDOABII585PFVUX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1326798103/reactions"
      },
      "updated_at" : "2022-11-25T03:07:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1326798103",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26569#discussion_r1031808079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26569"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031808079"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        if (!peer) return;\r\n```\r\n\r\nnit: The function return type is `void`",
      "commit_id" : "4dc67b2a82cc71fc8b11247bd0f3028a6cae5494",
      "created_at" : "2022-11-24T20:29:47Z",
      "diff_hunk" : "@@ -2005,18 +2005,29 @@ void PeerManagerImpl::SendPings()\n \n void PeerManagerImpl::RelayTransaction(const uint256& txid, const uint256& wtxid)\n {\n-    LOCK(m_peer_mutex);\n-    for(auto& it : m_peer_map) {\n-        Peer& peer = *it.second;\n-        auto tx_relay = peer.GetTxRelay();\n-        if (!tx_relay) continue;\n+    m_connman.ForEachNode([this, &wtxid, &txid](CNode* node) {\n+        PeerRef peer{this->GetPeerRef(node->GetId())};\n+        if (!peer) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26569#discussion_r1031808079",
      "id" : 1031808079,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849gCRP",
      "original_commit_id" : "8ea1f7dac3a0f40e1c6e5956e99b1fcad469c884",
      "original_line" : 2010,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1193587318,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26569",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031808079/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-24T20:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031808079",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26569#discussion_r1031813976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26569"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031813976"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Most of this code in the test can be removed:\r\n\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_tx_privacy.py b/test/functional/p2p_tx_privacy.py\r\nindex 7944095abc..d7139f5ab7 100755\r\n--- a/test/functional/p2p_tx_privacy.py\r\n+++ b/test/functional/p2p_tx_privacy.py\r\n@@ -17,54 +17,29 @@ from test_framework.p2p import (\r\n     p2p_lock,\r\n )\r\n from test_framework.test_framework import BitcoinTestFramework\r\n+from test_framework.wallet import MiniWallet\r\n \r\n class P2PTxSpy(P2PInterface):\r\n-    def __init__(self, wtxidrelay=True):\r\n-        super().__init__(wtxidrelay=wtxidrelay)\r\n-\r\n     def on_version(self, message):\r\n         # Avoid sending verack in response to version.\r\n         # When calling add_p2p_connection, wait_for_verack=False must be set (see\r\n         # comment in add_p2p_connection).\r\n-        if message.nVersion >= 70016 and self.wtxidrelay:\r\n-            self.send_message(msg_wtxidrelay())\r\n+        self.send_message(msg_wtxidrelay())\r\n \r\n class TxPrivacyTest(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n-        self.setup_clean_chain = True\r\n         self.num_nodes = 1\r\n \r\n     def run_test(self):\r\n-        self.generate(self.nodes[0], 200)\r\n+        self.wallet = MiniWallet(self.nodes[0])\r\n+        self.wallet.rescan_utxos()\r\n \r\n         tx_originator = self.nodes[0].add_p2p_connection(P2PInterface())\r\n-        spy = self.nodes[0].add_p2p_connection(P2PTxSpy(), send_version=False, wait_for_verack=False)\r\n-\r\n-        # Spy sends version message to enable tx relay but doesn't send a verack\r\n-        txrelay_version_msg = msg_version()\r\n-        txrelay_version_msg.nVersion = P2P_VERSION\r\n-        txrelay_version_msg.strSubVer = \"ððð\"\r\n-        txrelay_version_msg.nServices = P2P_SERVICES\r\n-        txrelay_version_msg.relay = 1\r\n-        spy.send_message(txrelay_version_msg)\r\n+        spy = self.nodes[0].add_p2p_connection(P2PTxSpy(), wait_for_verack=False)\r\n         spy.wait_for_verack()\r\n \r\n         # Create a tx to send\r\n-        prevtx = self.nodes[0].getblock(self.nodes[0].getblockhash(5), 2)['tx'][0]\r\n-        rawtx = self.nodes[0].createrawtransaction(\r\n-            inputs=[{'txid': prevtx['txid'], 'vout': 0}],\r\n-            outputs=[{self.nodes[0].get_deterministic_priv_key().address: 50 - 0.00125}],\r\n-        )\r\n-        sigtx = self.nodes[0].signrawtransactionwithkey(\r\n-            hexstring=rawtx,\r\n-            privkeys=[self.nodes[0].get_deterministic_priv_key().key],\r\n-            prevtxs=[{\r\n-                'txid': prevtx['txid'],\r\n-                'vout': 0,\r\n-                'scriptPubKey': prevtx['vout'][0]['scriptPubKey']['hex'],\r\n-            }],\r\n-        )['hex']\r\n-        tx = tx_from_hex(sigtx)\r\n+        tx = self.wallet.create_self_transfer()[\"tx\"]\r\n \r\n         # tx_originator sends a tx\r\n         tx_originator.send_and_ping(msg_tx(tx))\r\n",
      "commit_id" : "4dc67b2a82cc71fc8b11247bd0f3028a6cae5494",
      "created_at" : "2022-11-24T20:40:47Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.messages import (\n+    msg_version,\n+    msg_wtxidrelay,\n+    msg_verack,\n+    msg_tx,\n+    tx_from_hex,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+    P2P_VERSION,\n+    P2P_SERVICES,\n+    p2p_lock,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class P2PTxSpy(P2PInterface):\n+    def __init__(self, wtxidrelay=True):\n+        super().__init__(wtxidrelay=wtxidrelay)\n+\n+    def on_version(self, message):\n+        # Avoid sending verack in response to version.\n+        # When calling add_p2p_connection, wait_for_verack=False must be set (see\n+        # comment in add_p2p_connection).\n+        if message.nVersion >= 70016 and self.wtxidrelay:\n+            self.send_message(msg_wtxidrelay())\n+\n+class TxPrivacyTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.generate(self.nodes[0], 200)\n+\n+        tx_originator = self.nodes[0].add_p2p_connection(P2PInterface())\n+        spy = self.nodes[0].add_p2p_connection(P2PTxSpy(), send_version=False, wait_for_verack=False)\n+\n+        # Spy sends version message to enable tx relay but doesn't send a verack\n+        txrelay_version_msg = msg_version()\n+        txrelay_version_msg.nVersion = P2P_VERSION\n+        txrelay_version_msg.strSubVer = \"ððð\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26569#discussion_r1031813976",
      "id" : 1031813976,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849gDtY",
      "original_commit_id" : "c51d8b9dfcc77f0e18f60641d6ca49e59c959052",
      "original_line" : 46,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "test/functional/p2p_tx_privacy.py",
      "position" : null,
      "pull_request_review_id" : 1193587318,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26569",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031813976/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-24T20:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031813976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26569#discussion_r1031818013"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26569"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031818013"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Amazing! Done.",
      "commit_id" : "4dc67b2a82cc71fc8b11247bd0f3028a6cae5494",
      "created_at" : "2022-11-24T20:52:58Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.messages import (\n+    msg_version,\n+    msg_wtxidrelay,\n+    msg_verack,\n+    msg_tx,\n+    tx_from_hex,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+    P2P_VERSION,\n+    P2P_SERVICES,\n+    p2p_lock,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class P2PTxSpy(P2PInterface):\n+    def __init__(self, wtxidrelay=True):\n+        super().__init__(wtxidrelay=wtxidrelay)\n+\n+    def on_version(self, message):\n+        # Avoid sending verack in response to version.\n+        # When calling add_p2p_connection, wait_for_verack=False must be set (see\n+        # comment in add_p2p_connection).\n+        if message.nVersion >= 70016 and self.wtxidrelay:\n+            self.send_message(msg_wtxidrelay())\n+\n+class TxPrivacyTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.generate(self.nodes[0], 200)\n+\n+        tx_originator = self.nodes[0].add_p2p_connection(P2PInterface())\n+        spy = self.nodes[0].add_p2p_connection(P2PTxSpy(), send_version=False, wait_for_verack=False)\n+\n+        # Spy sends version message to enable tx relay but doesn't send a verack\n+        txrelay_version_msg = msg_version()\n+        txrelay_version_msg.nVersion = P2P_VERSION\n+        txrelay_version_msg.strSubVer = \"ððð\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26569#discussion_r1031818013",
      "id" : 1031818013,
      "in_reply_to_id" : 1031813976,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849gEsd",
      "original_commit_id" : "c51d8b9dfcc77f0e18f60641d6ca49e59c959052",
      "original_line" : 46,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "test/functional/p2p_tx_privacy.py",
      "position" : null,
      "pull_request_review_id" : 1193599345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26569",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031818013/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-24T20:52:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031818013",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nDid you consider setting `m_next_inv_send_time` to a time point in the future inside `SetTxRelay()`? That seems like a simpler change, and avoids adding a new instance of `ForEachNode()` which we'd like to get rid off eventually.",
      "created_at" : "2022-11-24T20:58:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26569#issuecomment-1326830686",
      "id" : 1326830686,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26569",
      "node_id" : "IC_kwDOABII585PFdRe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1326830686/reactions"
      },
      "updated_at" : "2022-11-24T20:58:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1326830686",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Really good question! I should have put my reasoning for this in the PR description. \r\n\r\n> Did you consider setting m_next_inv_send_time to a time point in the future inside SetTxRelay()? That seems like a simpler change, and avoids adding a new instance of ForEachNode() which we'd like to get rid off eventually.\r\n\r\nThis actually was my initial approach, however I ended up going with `ForEachNode` for a couple reasons:\r\n\r\n* If we initialize `m_next_inv_send_time` to a time point in the future then we will still announce transactions that were received during the handshake which seems fine from a privacy perspective given the random delay. However,\r\n  *  I could see how that leads to a followup bug in which the spy is able to tell which of the announced transactions were received during the handshake (e.g. see point below). We can eliminate the possibility entirely by going with the `ForEachNode` approach.\r\n  * A node can't know if a peer enables wtxid relay until the handshake completes and it might add txids to `m_tx_inventory_to_send` but announce them as `MSG_WTX` after the handshake. (Didn't test but i think) This again leaks which transactions were received between the spy sending `version` and `wtxidrelay`.\r\n* Storing the txids pre-handshake completion feels a bit weird from a resource consumption perspective. We rely on the 60 second p2p timeout (`-peertimeout`) to clear `m_tx_inventory_to_send` for peers that do not complete the handshake. Again not really an issue now but this doesn't feel robust w.r.t. to future changes to me.",
      "created_at" : "2022-11-25T12:55:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26569#issuecomment-1327440366",
      "id" : 1327440366,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26569",
      "node_id" : "IC_kwDOABII585PHyHu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1327440366/reactions"
      },
      "updated_at" : "2022-11-25T12:55:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1327440366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   }
]
