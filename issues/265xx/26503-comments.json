[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@stickies-v RPC diff summary between 24.0 and 23.0 in https://github.com/bitcoin-core/bitcoincore.org/pull/919 shows the following new RPCs.\r\n- gettxspendingprevout (:white_check_mark: in release notes)\r\n- sendall (:white_check_mark: in release notes)\r\n- simulaterawtransaction (not in release notes, #22751)\r\n- migratewallet (mentioned under https://github.com/bitcoin-core/bitcoin-devwiki/wiki/24.0-Release-Notes-draft#migrating-legacy-wallets-to-descriptor-wallets but not under \"New RPCs\")\r\n\r\nI've [moved](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/24.0-Release-Notes-draft/_compare/67816d3a8d9ff73188b18ccdff137dd9888c7d65...66a50d9328483d782e294248df871efa1a6207a6) the https://github.com/bitcoin-core/bitcoin-devwiki/wiki/24.0-Release-Notes-draft#migrating-legacy-wallets-to-descriptor-wallets section to \"New RPCs\" and [added](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/24.0-Release-Notes-draft/_compare/ac0b22d59c0d495c996e9c84b86b4d029a327631...67816d3a8d9ff73188b18ccdff137dd9888c7d65) `simulaterawtransaction`.\r\n",
      "created_at" : "2022-11-15T11:32:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#issuecomment-1315181671",
      "id" : 1315181671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26503",
      "node_id" : "IC_kwDOABII585OZBRn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315181671/reactions"
      },
      "updated_at" : "2022-11-15T11:32:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315181671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> and [added](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/24.0-Release-Notes-draft/_compare/ac0b22d59c0d495c996e9c84b86b4d029a327631...67816d3a8d9ff73188b18ccdff137dd9888c7d65) simulaterawtransaction.\r\n\r\nIncluded that change here.\r\n\r\n> I've [moved](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/24.0-Release-Notes-draft/_compare/67816d3a8d9ff73188b18ccdff137dd9888c7d65...66a50d9328483d782e294248df871efa1a6207a6) the https://github.com/bitcoin-core/bitcoin-devwiki/wiki/24.0-Release-Notes-draft#migrating-legacy-wallets-to-descriptor-wallets section to \"New RPCs\"\r\n\r\nNot sure, as it might be worthwhile having the callout for this in the Wallet section. Thoughts @achow101?",
      "created_at" : "2022-11-15T11:41:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#issuecomment-1315191317",
      "id" : 1315191317,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26503",
      "node_id" : "IC_kwDOABII585OZDoV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315191317/reactions"
      },
      "updated_at" : "2022-11-15T11:41:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315191317",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022737363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022737363"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should `doc/bips.md` be amended with [this](https://github.com/bitcoin/bitcoin/commit/4c9666bd73645b94ae81be1faf7a0b8237dd6e99#diff-a3703f891ab65798c9b8feaea58707981ac97c80a82c44ec06da4968c3e74ec2R80-R81)?\r\n\r\n```\r\n* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling partially implemented. Full replace-by-fee enabled as a configurable mempool policy as of **v24.0** ([PR\r\n  #25353](https://github.com/bitcoin/bitcoin/pull/25353)). See doc/policy/mempool-replacements.md.\r\n```",
      "commit_id" : "57170b4d6f30079b11fb825b063450ef17749149",
      "created_at" : "2022-11-15T12:37:49Z",
      "diff_hunk" : "@@ -0,0 +1,387 @@\n+24.0 Release Notes\n+==================\n+\n+Bitcoin Core version *24.0* is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-24.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notice of new option for transaction replacement policies\n+=========================================================\n+\n+This version of Bitcoin Core adds a new `mempoolfullrbf` configuration\n+option which allows users to change the policy their individual node\n+will use for relaying and mining unconfirmed transactions.  The option\n+defaults to the same policy that was used in previous releases and no\n+changes to node policy will occur if everyone uses the default.\n+\n+Some Bitcoin services today expect that the first version of an\n+unconfirmed transaction that they see will be the version of the\n+transaction that ultimately gets confirmed---a transaction acceptance\n+policy sometimes called \"first seen\".\n+\n+The Bitcoin Protocol does not, and cannot, provide any assurance that\n+the first version of an unconfirmed transaction seen by a particular\n+node will be the version that gets confirmed.  If there are multiple\n+versions of the same unconfirmed transaction available, only the miner\n+who includes one of those transactions in a block gets to decide which\n+version of the transaction gets confirmed.\n+\n+Despite this lack of assurance, multiple merchants and services today\n+still make this assumption.\n+\n+There are several benefits to users from removing this *first-seen*\n+simplification.  One key benefit, the ability for the sender of a\n+transaction to replace it with an alternative version paying higher\n+fees, was realized in [Bitcoin Core 0.12.0][] (February 2016) with the\n+introduction of [BIP125][] opt-in Replace By Fee (RBF).\n+\n+Since then, there has been discussion about completely removing the\n+first-seen simplification and allowing users to replace any of their\n+older unconfirmed transactions with newer transactions, a feature called\n+*full-RBF*.  This release includes a `mempoolfullrbf` configuration\n+option that allows enabling full-RBF, although it defaults to off\n+(allowing only opt-in RBF).\n+\n+Several alternative node implementations have already enabled full-RBF by\n+default for years, and several contributors to Bitcoin Core are\n+advocating for enabling full-RBF by default in a future version of\n+Bitcoin Core.\n+\n+As more nodes that participate in relay and mining begin enabling\n+full-RBF, replacement of unconfirmed transactions by ones offering higher\n+fees may rapidly become more reliable.\n+\n+Members of this project strongly recommend that merchants and services\n+not accept unconfirmed transactions as final, and if they insist on doing so,\n+to take the appropriate steps to ensure they have some recourse or plan for\n+when their assumptions do not hold.\n+\n+[Bitcoin Core 0.12.0]: https://bitcoincore.org/en/releases/0.12.0/#opt-in-replace-by-fee-transactions\n+[bip125]: https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- To address a potential denial-of-service, the logic to download headers from peers\n+  has been reworked.  This is particularly relevant for nodes starting up for the\n+  first time (or for nodes which are starting up after being offline for a long time).\n+\n+  Whenever headers are received from a peer that have a total chainwork that is either\n+  less than the node's `-minimumchainwork` value or is sufficiently below the work at\n+  the node's tip, a \"presync\" phase will begin, in which the node will download the\n+  peer's headers and verify the cumulative work on the peer's chain, prior to storing\n+  those headers permanently. Once that cumulative work is verified to be sufficiently high,\n+  the headers will be redownloaded from that peer and fully validated and stored.\n+\n+  This may result in initial headers sync taking longer for new nodes starting up for\n+  the first time, both because the headers will be downloaded twice, and because the effect\n+  of a peer disconnecting during the presync phase (or while the node's best headers chain has less\n+  than `-minimumchainwork`), will result in the node needing to use the headers presync mechanism\n+  with the next peer as well (downloading the headers twice, again). (#25717)\n+\n+- With I2P connections, a new, transient address is used for each outbound\n+  connection if `-i2pacceptincoming=0`. (#25355)\n+\n+Updated RPCs\n+------------\n+\n+- The `-deprecatedrpc=softforks` configuration option has been removed.  The\n+  RPC `getblockchaininfo` no longer returns the `softforks` field, which was\n+  previously deprecated in 23.0. (#23508) Information on soft fork status is\n+  now only available via the `getdeploymentinfo` RPC.\n+\n+- The `deprecatedrpc=exclude_coinbase` configuration option has been removed.\n+  The `receivedby` RPCs (`listreceivedbyaddress`, `listreceivedbylabel`,\n+  `getreceivedbyaddress` and `getreceivedbylabel`) now always return results\n+  accounting for received coins from coinbase outputs, without an option to\n+  change that behaviour. Excluding coinbases was previously deprecated in 23.0.\n+  (#25171)\n+\n+- The `deprecatedrpc=fees` configuration option has been removed. The top-level\n+  fee fields `fee`, `modifiedfee`, `ancestorfees` and `descendantfees` are no\n+  longer returned by RPCs `getmempoolentry`, `getrawmempool(verbose=true)`,\n+  `getmempoolancestors(verbose=true)` and `getmempooldescendants(verbose=true)`.\n+  The same fee fields can be accessed through the `fees` object in the result.\n+  The top-level fee fields were previously deprecated in 23.0. (#25204)\n+\n+- The `getpeerinfo` RPC has been updated with a new `presynced_headers` field,\n+  indicating the progress on the presync phase mentioned in the\n+  \"P2P and network changes\" section above.\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- The `sendall` RPC spends specific UTXOs to one or more recipients\n+  without creating change. By default, the `sendall` RPC will spend\n+  every UTXO in the wallet. `sendall` is useful to empty wallets or to\n+  create a changeless payment from select UTXOs. When creating a payment\n+  from a specific amount for which the recipient incurs the transaction\n+  fee, continue to use the `subtractfeefromamount` option via the\n+  `send`, `sendtoaddress`, or `sendmany` RPCs. (#24118)\n+\n+- A new `gettxspendingprevout` RPC has been added, which scans the mempool to find\n+  transactions spending any of the given outpoints. (#24408)\n+\n+- The `simulaterawtransaction` RPC iterates over the inputs and outputs of the given\n+  transactions, and tallies up the balance change for the given wallet. This can be\n+  useful e.g. when verifying that a coin join like transaction doesn't contain unexpected\n+  inputs that the wallet will then sign for unintentionally. (#22751)\n+\n+Updated REST APIs\n+-----------------\n+\n+- The `/headers/` and `/blockfilterheaders/` endpoints have been updated to use\n+  a query parameter instead of path parameter to specify the result count. The\n+  count parameter is now optional, and defaults to 5 for both endpoints. The old\n+  endpoints are still functional, and have no documented behaviour change.\n+\n+  For `/headers`, use\n+  `GET /rest/headers/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  For `/blockfilterheaders/`, use\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  (#24098)\n+\n+Build System\n+------------\n+\n+- Guix builds are now reproducible across architectures (x86_64 & aarch64). (#21194)\n+\n+New settings\n+------------\n+\n+- A new `mempoolfullrbf` option has been added, which enables the mempool to\n+  accept transaction replacement without enforcing BIP125 replaceability\n+  signaling. (#25353)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022737363",
      "id" : 1022737363,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII58489bvT",
      "original_commit_id" : "4f2d31d041662d69727598f8dcfa9598f9b2421d",
      "original_line" : 197,
      "original_position" : 197,
      "original_start_line" : 195,
      "path" : "doc/release-notes.md",
      "position" : 197,
      "pull_request_review_id" : 1180796188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022737363/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 195,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-15T13:02:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022737363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022747348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022747348"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It looks like these were meant to be hyperlinks?\r\n\r\n```suggestion\r\nfees, was realized in [Bitcoin Core 0.12.0](https://bitcoincore.org/en/2016/02/23/release-0.12.0/) (February 2016) with the\r\nintroduction of [BIP125](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki) opt-in Replace By Fee (RBF).\r\n```",
      "commit_id" : "57170b4d6f30079b11fb825b063450ef17749149",
      "created_at" : "2022-11-15T12:48:30Z",
      "diff_hunk" : "@@ -0,0 +1,387 @@\n+24.0 Release Notes\n+==================\n+\n+Bitcoin Core version *24.0* is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-24.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notice of new option for transaction replacement policies\n+=========================================================\n+\n+This version of Bitcoin Core adds a new `mempoolfullrbf` configuration\n+option which allows users to change the policy their individual node\n+will use for relaying and mining unconfirmed transactions.  The option\n+defaults to the same policy that was used in previous releases and no\n+changes to node policy will occur if everyone uses the default.\n+\n+Some Bitcoin services today expect that the first version of an\n+unconfirmed transaction that they see will be the version of the\n+transaction that ultimately gets confirmed---a transaction acceptance\n+policy sometimes called \"first seen\".\n+\n+The Bitcoin Protocol does not, and cannot, provide any assurance that\n+the first version of an unconfirmed transaction seen by a particular\n+node will be the version that gets confirmed.  If there are multiple\n+versions of the same unconfirmed transaction available, only the miner\n+who includes one of those transactions in a block gets to decide which\n+version of the transaction gets confirmed.\n+\n+Despite this lack of assurance, multiple merchants and services today\n+still make this assumption.\n+\n+There are several benefits to users from removing this *first-seen*\n+simplification.  One key benefit, the ability for the sender of a\n+transaction to replace it with an alternative version paying higher\n+fees, was realized in [Bitcoin Core 0.12.0][] (February 2016) with the\n+introduction of [BIP125][] opt-in Replace By Fee (RBF).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022747348",
      "id" : 1022747348,
      "line" : 68,
      "node_id" : "PRRC_kwDOABII58489eLU",
      "original_commit_id" : "4f2d31d041662d69727598f8dcfa9598f9b2421d",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : 67,
      "path" : "doc/release-notes.md",
      "position" : 68,
      "pull_request_review_id" : 1180796188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022747348/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 67,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-15T13:02:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022747348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022747910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022747910"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "consistent spelling\r\n```suggestion\r\npolicy sometimes called \"first-seen\".\r\n```",
      "commit_id" : "57170b4d6f30079b11fb825b063450ef17749149",
      "created_at" : "2022-11-15T12:49:08Z",
      "diff_hunk" : "@@ -0,0 +1,387 @@\n+24.0 Release Notes\n+==================\n+\n+Bitcoin Core version *24.0* is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-24.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notice of new option for transaction replacement policies\n+=========================================================\n+\n+This version of Bitcoin Core adds a new `mempoolfullrbf` configuration\n+option which allows users to change the policy their individual node\n+will use for relaying and mining unconfirmed transactions.  The option\n+defaults to the same policy that was used in previous releases and no\n+changes to node policy will occur if everyone uses the default.\n+\n+Some Bitcoin services today expect that the first version of an\n+unconfirmed transaction that they see will be the version of the\n+transaction that ultimately gets confirmed---a transaction acceptance\n+policy sometimes called \"first seen\".",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022747910",
      "id" : 1022747910,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58489eUG",
      "original_commit_id" : "4f2d31d041662d69727598f8dcfa9598f9b2421d",
      "original_line" : 52,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 1180796188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022747910/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-15T13:02:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022747910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022758586"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022758586"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n- StÃ©phan Vuylsteke\r\n```",
      "commit_id" : "57170b4d6f30079b11fb825b063450ef17749149",
      "created_at" : "2022-11-15T13:00:03Z",
      "diff_hunk" : "@@ -0,0 +1,387 @@\n+24.0 Release Notes\n+==================\n+\n+Bitcoin Core version *24.0* is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-24.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notice of new option for transaction replacement policies\n+=========================================================\n+\n+This version of Bitcoin Core adds a new `mempoolfullrbf` configuration\n+option which allows users to change the policy their individual node\n+will use for relaying and mining unconfirmed transactions.  The option\n+defaults to the same policy that was used in previous releases and no\n+changes to node policy will occur if everyone uses the default.\n+\n+Some Bitcoin services today expect that the first version of an\n+unconfirmed transaction that they see will be the version of the\n+transaction that ultimately gets confirmed---a transaction acceptance\n+policy sometimes called \"first seen\".\n+\n+The Bitcoin Protocol does not, and cannot, provide any assurance that\n+the first version of an unconfirmed transaction seen by a particular\n+node will be the version that gets confirmed.  If there are multiple\n+versions of the same unconfirmed transaction available, only the miner\n+who includes one of those transactions in a block gets to decide which\n+version of the transaction gets confirmed.\n+\n+Despite this lack of assurance, multiple merchants and services today\n+still make this assumption.\n+\n+There are several benefits to users from removing this *first-seen*\n+simplification.  One key benefit, the ability for the sender of a\n+transaction to replace it with an alternative version paying higher\n+fees, was realized in [Bitcoin Core 0.12.0][] (February 2016) with the\n+introduction of [BIP125][] opt-in Replace By Fee (RBF).\n+\n+Since then, there has been discussion about completely removing the\n+first-seen simplification and allowing users to replace any of their\n+older unconfirmed transactions with newer transactions, a feature called\n+*full-RBF*.  This release includes a `mempoolfullrbf` configuration\n+option that allows enabling full-RBF, although it defaults to off\n+(allowing only opt-in RBF).\n+\n+Several alternative node implementations have already enabled full-RBF by\n+default for years, and several contributors to Bitcoin Core are\n+advocating for enabling full-RBF by default in a future version of\n+Bitcoin Core.\n+\n+As more nodes that participate in relay and mining begin enabling\n+full-RBF, replacement of unconfirmed transactions by ones offering higher\n+fees may rapidly become more reliable.\n+\n+Members of this project strongly recommend that merchants and services\n+not accept unconfirmed transactions as final, and if they insist on doing so,\n+to take the appropriate steps to ensure they have some recourse or plan for\n+when their assumptions do not hold.\n+\n+[Bitcoin Core 0.12.0]: https://bitcoincore.org/en/releases/0.12.0/#opt-in-replace-by-fee-transactions\n+[bip125]: https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- To address a potential denial-of-service, the logic to download headers from peers\n+  has been reworked.  This is particularly relevant for nodes starting up for the\n+  first time (or for nodes which are starting up after being offline for a long time).\n+\n+  Whenever headers are received from a peer that have a total chainwork that is either\n+  less than the node's `-minimumchainwork` value or is sufficiently below the work at\n+  the node's tip, a \"presync\" phase will begin, in which the node will download the\n+  peer's headers and verify the cumulative work on the peer's chain, prior to storing\n+  those headers permanently. Once that cumulative work is verified to be sufficiently high,\n+  the headers will be redownloaded from that peer and fully validated and stored.\n+\n+  This may result in initial headers sync taking longer for new nodes starting up for\n+  the first time, both because the headers will be downloaded twice, and because the effect\n+  of a peer disconnecting during the presync phase (or while the node's best headers chain has less\n+  than `-minimumchainwork`), will result in the node needing to use the headers presync mechanism\n+  with the next peer as well (downloading the headers twice, again). (#25717)\n+\n+- With I2P connections, a new, transient address is used for each outbound\n+  connection if `-i2pacceptincoming=0`. (#25355)\n+\n+Updated RPCs\n+------------\n+\n+- The `-deprecatedrpc=softforks` configuration option has been removed.  The\n+  RPC `getblockchaininfo` no longer returns the `softforks` field, which was\n+  previously deprecated in 23.0. (#23508) Information on soft fork status is\n+  now only available via the `getdeploymentinfo` RPC.\n+\n+- The `deprecatedrpc=exclude_coinbase` configuration option has been removed.\n+  The `receivedby` RPCs (`listreceivedbyaddress`, `listreceivedbylabel`,\n+  `getreceivedbyaddress` and `getreceivedbylabel`) now always return results\n+  accounting for received coins from coinbase outputs, without an option to\n+  change that behaviour. Excluding coinbases was previously deprecated in 23.0.\n+  (#25171)\n+\n+- The `deprecatedrpc=fees` configuration option has been removed. The top-level\n+  fee fields `fee`, `modifiedfee`, `ancestorfees` and `descendantfees` are no\n+  longer returned by RPCs `getmempoolentry`, `getrawmempool(verbose=true)`,\n+  `getmempoolancestors(verbose=true)` and `getmempooldescendants(verbose=true)`.\n+  The same fee fields can be accessed through the `fees` object in the result.\n+  The top-level fee fields were previously deprecated in 23.0. (#25204)\n+\n+- The `getpeerinfo` RPC has been updated with a new `presynced_headers` field,\n+  indicating the progress on the presync phase mentioned in the\n+  \"P2P and network changes\" section above.\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- The `sendall` RPC spends specific UTXOs to one or more recipients\n+  without creating change. By default, the `sendall` RPC will spend\n+  every UTXO in the wallet. `sendall` is useful to empty wallets or to\n+  create a changeless payment from select UTXOs. When creating a payment\n+  from a specific amount for which the recipient incurs the transaction\n+  fee, continue to use the `subtractfeefromamount` option via the\n+  `send`, `sendtoaddress`, or `sendmany` RPCs. (#24118)\n+\n+- A new `gettxspendingprevout` RPC has been added, which scans the mempool to find\n+  transactions spending any of the given outpoints. (#24408)\n+\n+- The `simulaterawtransaction` RPC iterates over the inputs and outputs of the given\n+  transactions, and tallies up the balance change for the given wallet. This can be\n+  useful e.g. when verifying that a coin join like transaction doesn't contain unexpected\n+  inputs that the wallet will then sign for unintentionally. (#22751)\n+\n+Updated REST APIs\n+-----------------\n+\n+- The `/headers/` and `/blockfilterheaders/` endpoints have been updated to use\n+  a query parameter instead of path parameter to specify the result count. The\n+  count parameter is now optional, and defaults to 5 for both endpoints. The old\n+  endpoints are still functional, and have no documented behaviour change.\n+\n+  For `/headers`, use\n+  `GET /rest/headers/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  For `/blockfilterheaders/`, use\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  (#24098)\n+\n+Build System\n+------------\n+\n+- Guix builds are now reproducible across architectures (x86_64 & aarch64). (#21194)\n+\n+New settings\n+------------\n+\n+- A new `mempoolfullrbf` option has been added, which enables the mempool to\n+  accept transaction replacement without enforcing BIP125 replaceability\n+  signaling. (#25353)\n+\n+Wallet\n+------\n+\n+- The `-walletrbf` startup option will now default to `true`. The\n+  wallet will now default to opt-in RBF on transactions that it creates. (#25610)\n+\n+- The `replaceable` option for the `createrawtransaction` and\n+  `createpsbt` RPCs will now default to `true`. Transactions created\n+  with these RPCs will default to having opt-in RBF enabled. (#25610)\n+\n+- The `wsh()` output descriptor was extended with Miniscript support. You can import Miniscript\n+  descriptors for P2WSH in a watchonly wallet to track coins, but you can't spend from them using\n+  the Bitcoin Core wallet yet.\n+  You can find more about Miniscript on the [reference website](https://bitcoin.sipa.be/miniscript/). (#24148)\n+\n+- To help prevent fingerprinting transactions created by the Bitcoin Core wallet, change output\n+  amounts are now randomized. (#24494)\n+\n+- The `listtransactions`, `gettransaction`, and `listsinceblock`\n+  RPC methods now include a wtxid field (hash of serialized transaction,\n+  including witness data) for each transaction. (#24198)\n+\n+- The `listsinceblock`, `listtransactions` and `gettransaction` output now contain a new\n+  `parent_descs` field for every \"receive\" entry. (#25504)\n+\n+- A new optional `include_change` parameter was added to the `listsinceblock` command.\n+\n+Migrating Legacy Wallets to Descriptor Wallets\n+---------------------------------------------\n+\n+An experimental RPC `migratewallet` has been added to migrate Legacy (non-descriptor) wallets to\n+Descriptor wallets. More information about the migration process is available in the\n+[documentation](https://github.com/bitcoin/bitcoin/blob/master/doc/managing-wallets.md#migrating-legacy-wallets-to-descriptor-wallets).\n+\n+- RPC `getreceivedbylabel` now returns an error, \"Label not found\n+  in wallet\" (-4), if the label is not in the address book. (#25122)\n+\n+GUI changes\n+-----------\n+\n+- A new menu item to restore a wallet from a backup file has been added (#471).\n+\n+- Configuration changes made in the bitcoin GUI (such as the pruning setting,\n+proxy settings, UPNP preferences) are now saved to `<datadir>/settings.json`\n+file rather than to the Qt settings backend (windows registry or unix desktop\n+config files), so these settings will now apply to bitcoind, instead of being\n+ignored. (#15936)\n+\n+- Also, the interaction between GUI settings and `bitcoin.conf` settings is\n+simplified. Settings from `bitcoin.conf` are now displayed normally in the GUI\n+settings dialog, instead of in a separate warning message (\"Options set in this\n+dialog are overridden by the configuration file: -setting=value\"). And these\n+settings can now be edited because `settings.json` values take precedence over\n+`bitcoin.conf` values. (#15936)\n+\n+Low-level changes\n+=================\n+\n+RPC\n+---\n+\n+- The `deriveaddresses`, `getdescriptorinfo`, `importdescriptors` and `scantxoutset` commands now\n+  accept Miniscript expression within a `wsh()` descriptor. (#24148)\n+\n+- The `getaddressinfo`, `decodescript`, `listdescriptors` and `listunspent` commands may now output\n+  a Miniscript descriptor inside a `wsh()` where a `wsh(raw())` descriptor was previously returned. (#24148)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- /dev/fd0\n+- 0xb10c\n+- Adam Jonas\n+- akankshakashyap\n+- Ali Sherief\n+- amadeuszpawlik\n+- Andreas Kouloumos\n+- Andrew Chow\n+- Anthony Towns\n+- Antoine Poinsot\n+- Antoine Riard\n+- AurÃ¨le OulÃ¨s\n+- avirgovi\n+- Ayush Sharma\n+- Baas\n+- Ben Woosley\n+- BrokenProgrammer\n+- brunoerg\n+- brydinh\n+- Bushstar\n+- Calvin Kim\n+- CAnon\n+- Carl Dong\n+- chinggg\n+- Cory Fields\n+- Daniel Kraft\n+- Daniela Brozzoni\n+- darosior\n+- Dave Scotese\n+- David Bakin\n+- dergoegge\n+- dhruv\n+- Dimitri\n+- dontbyte\n+- Duncan Dean\n+- eugene\n+- Eunoia\n+- Fabian Jahr\n+- furszy\n+- Gleb Naumenko\n+- glozow\n+- Greg Weber\n+- Gregory Sanders\n+- gruve-p\n+- Hennadii Stepanov\n+- hiago\n+- Igor Bubelov\n+- ishaanam\n+- Jacob P.\n+- Jadi\n+- James O'Beirne\n+- Janna\n+- Jarol Rodriguez\n+- Jeremy Rand\n+- Jeremy Rubin\n+- jessebarton\n+- JoÃ£o Barbosa\n+- John Newbery\n+- Jon Atack\n+- Josiah Baker\n+- josibake\n+- Karl-Johan Alm\n+- KevinMusgrave\n+- Kiminuo\n+- klementtan\n+- Kolby Moroz\n+- kouloumos\n+- Kristaps Kaupe\n+- Larry Ruane\n+- Luke Dashjr\n+- MarcoFalke\n+- Marnix\n+- Martin Leitner-Ankerl\n+- Martin Zumsande\n+- Michael Dietz\n+- Michael Folkson\n+- Michael Ford\n+- Murch\n+- mutatrum\n+- muxator\n+- Oskar Mendel\n+- Pablo Greco\n+- pasta\n+- Patrick Strateman\n+- Pavol Rusnak\n+- Peter Bushnell\n+- phyBrackets\n+- Pieter Wuille\n+- practicalswift\n+- randymcmillan\n+- Robert Spigler\n+- Russell Yanofsky\n+- Ryan Ofsky\n+- S3RK\n+- Samer Afach\n+- Sebastian Falbesoner\n+- Seibart Nedor\n+- Shashwat\n+- Sjors Provoost\n+- Smlep\n+- sogoagain\n+- Stacie\n+- stickies-v",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022758586",
      "id" : 1022758586,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58489g66",
      "original_commit_id" : "4f2d31d041662d69727598f8dcfa9598f9b2421d",
      "original_line" : 373,
      "original_position" : 373,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 1180796188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022758586/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-15T13:02:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022758586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022866003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022866003"
         }
      },
      "author_association" : "MEMBER",
      "body" : "link is below and seems to render properly, markdown magic perhaps",
      "commit_id" : "57170b4d6f30079b11fb825b063450ef17749149",
      "created_at" : "2022-11-15T14:35:26Z",
      "diff_hunk" : "@@ -0,0 +1,387 @@\n+24.0 Release Notes\n+==================\n+\n+Bitcoin Core version *24.0* is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-24.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notice of new option for transaction replacement policies\n+=========================================================\n+\n+This version of Bitcoin Core adds a new `mempoolfullrbf` configuration\n+option which allows users to change the policy their individual node\n+will use for relaying and mining unconfirmed transactions.  The option\n+defaults to the same policy that was used in previous releases and no\n+changes to node policy will occur if everyone uses the default.\n+\n+Some Bitcoin services today expect that the first version of an\n+unconfirmed transaction that they see will be the version of the\n+transaction that ultimately gets confirmed---a transaction acceptance\n+policy sometimes called \"first seen\".\n+\n+The Bitcoin Protocol does not, and cannot, provide any assurance that\n+the first version of an unconfirmed transaction seen by a particular\n+node will be the version that gets confirmed.  If there are multiple\n+versions of the same unconfirmed transaction available, only the miner\n+who includes one of those transactions in a block gets to decide which\n+version of the transaction gets confirmed.\n+\n+Despite this lack of assurance, multiple merchants and services today\n+still make this assumption.\n+\n+There are several benefits to users from removing this *first-seen*\n+simplification.  One key benefit, the ability for the sender of a\n+transaction to replace it with an alternative version paying higher\n+fees, was realized in [Bitcoin Core 0.12.0][] (February 2016) with the\n+introduction of [BIP125][] opt-in Replace By Fee (RBF).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022866003",
      "id" : 1022866003,
      "in_reply_to_id" : 1022747348,
      "line" : 68,
      "node_id" : "PRRC_kwDOABII584897JT",
      "original_commit_id" : "4f2d31d041662d69727598f8dcfa9598f9b2421d",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : 67,
      "path" : "doc/release-notes.md",
      "position" : 68,
      "pull_request_review_id" : 1180982116,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022866003/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 67,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-15T14:35:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022866003",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "LGTM https://github.com/bitcoin/bitcoin/pull/26503/commits/57170b4d6f30079b11fb825b063450ef17749149",
      "created_at" : "2022-11-15T14:40:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#issuecomment-1315405809",
      "id" : 1315405809,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26503",
      "node_id" : "IC_kwDOABII585OZ3_x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315405809/reactions"
      },
      "updated_at" : "2022-11-15T14:40:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315405809",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022952800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022952800"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Some duplicates:\r\nJosiah Baker / josibake\r\nRussell Yanofsky / Ryan Ofsky",
      "commit_id" : "190709e456ba1a34c0f7270d07890db2a1b96af2",
      "created_at" : "2022-11-15T15:40:53Z",
      "diff_hunk" : "@@ -0,0 +1,387 @@\n+24.0 Release Notes\n+==================\n+\n+Bitcoin Core version *24.0* is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-24.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notice of new option for transaction replacement policies\n+=========================================================\n+\n+This version of Bitcoin Core adds a new `mempoolfullrbf` configuration\n+option which allows users to change the policy their individual node\n+will use for relaying and mining unconfirmed transactions.  The option\n+defaults to the same policy that was used in previous releases and no\n+changes to node policy will occur if everyone uses the default.\n+\n+Some Bitcoin services today expect that the first version of an\n+unconfirmed transaction that they see will be the version of the\n+transaction that ultimately gets confirmed---a transaction acceptance\n+policy sometimes called \"first-seen\".\n+\n+The Bitcoin Protocol does not, and cannot, provide any assurance that\n+the first version of an unconfirmed transaction seen by a particular\n+node will be the version that gets confirmed.  If there are multiple\n+versions of the same unconfirmed transaction available, only the miner\n+who includes one of those transactions in a block gets to decide which\n+version of the transaction gets confirmed.\n+\n+Despite this lack of assurance, multiple merchants and services today\n+still make this assumption.\n+\n+There are several benefits to users from removing this *first-seen*\n+simplification.  One key benefit, the ability for the sender of a\n+transaction to replace it with an alternative version paying higher\n+fees, was realized in [Bitcoin Core 0.12.0][] (February 2016) with the\n+introduction of [BIP125][] opt-in Replace By Fee (RBF).\n+\n+Since then, there has been discussion about completely removing the\n+first-seen simplification and allowing users to replace any of their\n+older unconfirmed transactions with newer transactions, a feature called\n+*full-RBF*.  This release includes a `mempoolfullrbf` configuration\n+option that allows enabling full-RBF, although it defaults to off\n+(allowing only opt-in RBF).\n+\n+Several alternative node implementations have already enabled full-RBF by\n+default for years, and several contributors to Bitcoin Core are\n+advocating for enabling full-RBF by default in a future version of\n+Bitcoin Core.\n+\n+As more nodes that participate in relay and mining begin enabling\n+full-RBF, replacement of unconfirmed transactions by ones offering higher\n+fees may rapidly become more reliable.\n+\n+Members of this project strongly recommend that merchants and services\n+not accept unconfirmed transactions as final, and if they insist on doing so,\n+to take the appropriate steps to ensure they have some recourse or plan for\n+when their assumptions do not hold.\n+\n+[Bitcoin Core 0.12.0]: https://bitcoincore.org/en/releases/0.12.0/#opt-in-replace-by-fee-transactions\n+[bip125]: https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- To address a potential denial-of-service, the logic to download headers from peers\n+  has been reworked.  This is particularly relevant for nodes starting up for the\n+  first time (or for nodes which are starting up after being offline for a long time).\n+\n+  Whenever headers are received from a peer that have a total chainwork that is either\n+  less than the node's `-minimumchainwork` value or is sufficiently below the work at\n+  the node's tip, a \"presync\" phase will begin, in which the node will download the\n+  peer's headers and verify the cumulative work on the peer's chain, prior to storing\n+  those headers permanently. Once that cumulative work is verified to be sufficiently high,\n+  the headers will be redownloaded from that peer and fully validated and stored.\n+\n+  This may result in initial headers sync taking longer for new nodes starting up for\n+  the first time, both because the headers will be downloaded twice, and because the effect\n+  of a peer disconnecting during the presync phase (or while the node's best headers chain has less\n+  than `-minimumchainwork`), will result in the node needing to use the headers presync mechanism\n+  with the next peer as well (downloading the headers twice, again). (#25717)\n+\n+- With I2P connections, a new, transient address is used for each outbound\n+  connection if `-i2pacceptincoming=0`. (#25355)\n+\n+Updated RPCs\n+------------\n+\n+- The `-deprecatedrpc=softforks` configuration option has been removed.  The\n+  RPC `getblockchaininfo` no longer returns the `softforks` field, which was\n+  previously deprecated in 23.0. (#23508) Information on soft fork status is\n+  now only available via the `getdeploymentinfo` RPC.\n+\n+- The `deprecatedrpc=exclude_coinbase` configuration option has been removed.\n+  The `receivedby` RPCs (`listreceivedbyaddress`, `listreceivedbylabel`,\n+  `getreceivedbyaddress` and `getreceivedbylabel`) now always return results\n+  accounting for received coins from coinbase outputs, without an option to\n+  change that behaviour. Excluding coinbases was previously deprecated in 23.0.\n+  (#25171)\n+\n+- The `deprecatedrpc=fees` configuration option has been removed. The top-level\n+  fee fields `fee`, `modifiedfee`, `ancestorfees` and `descendantfees` are no\n+  longer returned by RPCs `getmempoolentry`, `getrawmempool(verbose=true)`,\n+  `getmempoolancestors(verbose=true)` and `getmempooldescendants(verbose=true)`.\n+  The same fee fields can be accessed through the `fees` object in the result.\n+  The top-level fee fields were previously deprecated in 23.0. (#25204)\n+\n+- The `getpeerinfo` RPC has been updated with a new `presynced_headers` field,\n+  indicating the progress on the presync phase mentioned in the\n+  \"P2P and network changes\" section above.\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- The `sendall` RPC spends specific UTXOs to one or more recipients\n+  without creating change. By default, the `sendall` RPC will spend\n+  every UTXO in the wallet. `sendall` is useful to empty wallets or to\n+  create a changeless payment from select UTXOs. When creating a payment\n+  from a specific amount for which the recipient incurs the transaction\n+  fee, continue to use the `subtractfeefromamount` option via the\n+  `send`, `sendtoaddress`, or `sendmany` RPCs. (#24118)\n+\n+- A new `gettxspendingprevout` RPC has been added, which scans the mempool to find\n+  transactions spending any of the given outpoints. (#24408)\n+\n+- The `simulaterawtransaction` RPC iterates over the inputs and outputs of the given\n+  transactions, and tallies up the balance change for the given wallet. This can be\n+  useful e.g. when verifying that a coin join like transaction doesn't contain unexpected\n+  inputs that the wallet will then sign for unintentionally. (#22751)\n+\n+Updated REST APIs\n+-----------------\n+\n+- The `/headers/` and `/blockfilterheaders/` endpoints have been updated to use\n+  a query parameter instead of path parameter to specify the result count. The\n+  count parameter is now optional, and defaults to 5 for both endpoints. The old\n+  endpoints are still functional, and have no documented behaviour change.\n+\n+  For `/headers`, use\n+  `GET /rest/headers/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  For `/blockfilterheaders/`, use\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  (#24098)\n+\n+Build System\n+------------\n+\n+- Guix builds are now reproducible across architectures (x86_64 & aarch64). (#21194)\n+\n+New settings\n+------------\n+\n+- A new `mempoolfullrbf` option has been added, which enables the mempool to\n+  accept transaction replacement without enforcing BIP125 replaceability\n+  signaling. (#25353)\n+\n+Wallet\n+------\n+\n+- The `-walletrbf` startup option will now default to `true`. The\n+  wallet will now default to opt-in RBF on transactions that it creates. (#25610)\n+\n+- The `replaceable` option for the `createrawtransaction` and\n+  `createpsbt` RPCs will now default to `true`. Transactions created\n+  with these RPCs will default to having opt-in RBF enabled. (#25610)\n+\n+- The `wsh()` output descriptor was extended with Miniscript support. You can import Miniscript\n+  descriptors for P2WSH in a watchonly wallet to track coins, but you can't spend from them using\n+  the Bitcoin Core wallet yet.\n+  You can find more about Miniscript on the [reference website](https://bitcoin.sipa.be/miniscript/). (#24148)\n+\n+- To help prevent fingerprinting transactions created by the Bitcoin Core wallet, change output\n+  amounts are now randomized. (#24494)\n+\n+- The `listtransactions`, `gettransaction`, and `listsinceblock`\n+  RPC methods now include a wtxid field (hash of serialized transaction,\n+  including witness data) for each transaction. (#24198)\n+\n+- The `listsinceblock`, `listtransactions` and `gettransaction` output now contain a new\n+  `parent_descs` field for every \"receive\" entry. (#25504)\n+\n+- A new optional `include_change` parameter was added to the `listsinceblock` command.\n+\n+Migrating Legacy Wallets to Descriptor Wallets\n+---------------------------------------------\n+\n+An experimental RPC `migratewallet` has been added to migrate Legacy (non-descriptor) wallets to\n+Descriptor wallets. More information about the migration process is available in the\n+[documentation](https://github.com/bitcoin/bitcoin/blob/master/doc/managing-wallets.md#migrating-legacy-wallets-to-descriptor-wallets).\n+\n+- RPC `getreceivedbylabel` now returns an error, \"Label not found\n+  in wallet\" (-4), if the label is not in the address book. (#25122)\n+\n+GUI changes\n+-----------\n+\n+- A new menu item to restore a wallet from a backup file has been added (#471).\n+\n+- Configuration changes made in the bitcoin GUI (such as the pruning setting,\n+proxy settings, UPNP preferences) are now saved to `<datadir>/settings.json`\n+file rather than to the Qt settings backend (windows registry or unix desktop\n+config files), so these settings will now apply to bitcoind, instead of being\n+ignored. (#15936)\n+\n+- Also, the interaction between GUI settings and `bitcoin.conf` settings is\n+simplified. Settings from `bitcoin.conf` are now displayed normally in the GUI\n+settings dialog, instead of in a separate warning message (\"Options set in this\n+dialog are overridden by the configuration file: -setting=value\"). And these\n+settings can now be edited because `settings.json` values take precedence over\n+`bitcoin.conf` values. (#15936)\n+\n+Low-level changes\n+=================\n+\n+RPC\n+---\n+\n+- The `deriveaddresses`, `getdescriptorinfo`, `importdescriptors` and `scantxoutset` commands now\n+  accept Miniscript expression within a `wsh()` descriptor. (#24148)\n+\n+- The `getaddressinfo`, `decodescript`, `listdescriptors` and `listunspent` commands may now output\n+  a Miniscript descriptor inside a `wsh()` where a `wsh(raw())` descriptor was previously returned. (#24148)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- /dev/fd0\n+- 0xb10c\n+- Adam Jonas\n+- akankshakashyap\n+- Ali Sherief\n+- amadeuszpawlik\n+- Andreas Kouloumos\n+- Andrew Chow\n+- Anthony Towns\n+- Antoine Poinsot\n+- Antoine Riard\n+- AurÃ¨le OulÃ¨s\n+- avirgovi\n+- Ayush Sharma\n+- Baas\n+- Ben Woosley\n+- BrokenProgrammer\n+- brunoerg\n+- brydinh\n+- Bushstar\n+- Calvin Kim\n+- CAnon\n+- Carl Dong\n+- chinggg\n+- Cory Fields\n+- Daniel Kraft\n+- Daniela Brozzoni\n+- darosior\n+- Dave Scotese\n+- David Bakin\n+- dergoegge\n+- dhruv\n+- Dimitri\n+- dontbyte\n+- Duncan Dean\n+- eugene\n+- Eunoia\n+- Fabian Jahr\n+- furszy\n+- Gleb Naumenko\n+- glozow\n+- Greg Weber\n+- Gregory Sanders\n+- gruve-p\n+- Hennadii Stepanov\n+- hiago\n+- Igor Bubelov\n+- ishaanam\n+- Jacob P.\n+- Jadi\n+- James O'Beirne\n+- Janna\n+- Jarol Rodriguez\n+- Jeremy Rand\n+- Jeremy Rubin\n+- jessebarton\n+- JoÃ£o Barbosa\n+- John Newbery\n+- Jon Atack\n+- Josiah Baker\n+- josibake",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022952800",
      "id" : 1022952800,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5848-QVg",
      "original_commit_id" : "57170b4d6f30079b11fb825b063450ef17749149",
      "original_line" : 331,
      "original_position" : 331,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 1181107502,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022952800/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-15T15:59:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022952800",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022978372"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022978372"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks. Addressed both.",
      "commit_id" : "190709e456ba1a34c0f7270d07890db2a1b96af2",
      "created_at" : "2022-11-15T16:01:11Z",
      "diff_hunk" : "@@ -0,0 +1,387 @@\n+24.0 Release Notes\n+==================\n+\n+Bitcoin Core version *24.0* is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-24.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notice of new option for transaction replacement policies\n+=========================================================\n+\n+This version of Bitcoin Core adds a new `mempoolfullrbf` configuration\n+option which allows users to change the policy their individual node\n+will use for relaying and mining unconfirmed transactions.  The option\n+defaults to the same policy that was used in previous releases and no\n+changes to node policy will occur if everyone uses the default.\n+\n+Some Bitcoin services today expect that the first version of an\n+unconfirmed transaction that they see will be the version of the\n+transaction that ultimately gets confirmed---a transaction acceptance\n+policy sometimes called \"first-seen\".\n+\n+The Bitcoin Protocol does not, and cannot, provide any assurance that\n+the first version of an unconfirmed transaction seen by a particular\n+node will be the version that gets confirmed.  If there are multiple\n+versions of the same unconfirmed transaction available, only the miner\n+who includes one of those transactions in a block gets to decide which\n+version of the transaction gets confirmed.\n+\n+Despite this lack of assurance, multiple merchants and services today\n+still make this assumption.\n+\n+There are several benefits to users from removing this *first-seen*\n+simplification.  One key benefit, the ability for the sender of a\n+transaction to replace it with an alternative version paying higher\n+fees, was realized in [Bitcoin Core 0.12.0][] (February 2016) with the\n+introduction of [BIP125][] opt-in Replace By Fee (RBF).\n+\n+Since then, there has been discussion about completely removing the\n+first-seen simplification and allowing users to replace any of their\n+older unconfirmed transactions with newer transactions, a feature called\n+*full-RBF*.  This release includes a `mempoolfullrbf` configuration\n+option that allows enabling full-RBF, although it defaults to off\n+(allowing only opt-in RBF).\n+\n+Several alternative node implementations have already enabled full-RBF by\n+default for years, and several contributors to Bitcoin Core are\n+advocating for enabling full-RBF by default in a future version of\n+Bitcoin Core.\n+\n+As more nodes that participate in relay and mining begin enabling\n+full-RBF, replacement of unconfirmed transactions by ones offering higher\n+fees may rapidly become more reliable.\n+\n+Members of this project strongly recommend that merchants and services\n+not accept unconfirmed transactions as final, and if they insist on doing so,\n+to take the appropriate steps to ensure they have some recourse or plan for\n+when their assumptions do not hold.\n+\n+[Bitcoin Core 0.12.0]: https://bitcoincore.org/en/releases/0.12.0/#opt-in-replace-by-fee-transactions\n+[bip125]: https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- To address a potential denial-of-service, the logic to download headers from peers\n+  has been reworked.  This is particularly relevant for nodes starting up for the\n+  first time (or for nodes which are starting up after being offline for a long time).\n+\n+  Whenever headers are received from a peer that have a total chainwork that is either\n+  less than the node's `-minimumchainwork` value or is sufficiently below the work at\n+  the node's tip, a \"presync\" phase will begin, in which the node will download the\n+  peer's headers and verify the cumulative work on the peer's chain, prior to storing\n+  those headers permanently. Once that cumulative work is verified to be sufficiently high,\n+  the headers will be redownloaded from that peer and fully validated and stored.\n+\n+  This may result in initial headers sync taking longer for new nodes starting up for\n+  the first time, both because the headers will be downloaded twice, and because the effect\n+  of a peer disconnecting during the presync phase (or while the node's best headers chain has less\n+  than `-minimumchainwork`), will result in the node needing to use the headers presync mechanism\n+  with the next peer as well (downloading the headers twice, again). (#25717)\n+\n+- With I2P connections, a new, transient address is used for each outbound\n+  connection if `-i2pacceptincoming=0`. (#25355)\n+\n+Updated RPCs\n+------------\n+\n+- The `-deprecatedrpc=softforks` configuration option has been removed.  The\n+  RPC `getblockchaininfo` no longer returns the `softforks` field, which was\n+  previously deprecated in 23.0. (#23508) Information on soft fork status is\n+  now only available via the `getdeploymentinfo` RPC.\n+\n+- The `deprecatedrpc=exclude_coinbase` configuration option has been removed.\n+  The `receivedby` RPCs (`listreceivedbyaddress`, `listreceivedbylabel`,\n+  `getreceivedbyaddress` and `getreceivedbylabel`) now always return results\n+  accounting for received coins from coinbase outputs, without an option to\n+  change that behaviour. Excluding coinbases was previously deprecated in 23.0.\n+  (#25171)\n+\n+- The `deprecatedrpc=fees` configuration option has been removed. The top-level\n+  fee fields `fee`, `modifiedfee`, `ancestorfees` and `descendantfees` are no\n+  longer returned by RPCs `getmempoolentry`, `getrawmempool(verbose=true)`,\n+  `getmempoolancestors(verbose=true)` and `getmempooldescendants(verbose=true)`.\n+  The same fee fields can be accessed through the `fees` object in the result.\n+  The top-level fee fields were previously deprecated in 23.0. (#25204)\n+\n+- The `getpeerinfo` RPC has been updated with a new `presynced_headers` field,\n+  indicating the progress on the presync phase mentioned in the\n+  \"P2P and network changes\" section above.\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- The `sendall` RPC spends specific UTXOs to one or more recipients\n+  without creating change. By default, the `sendall` RPC will spend\n+  every UTXO in the wallet. `sendall` is useful to empty wallets or to\n+  create a changeless payment from select UTXOs. When creating a payment\n+  from a specific amount for which the recipient incurs the transaction\n+  fee, continue to use the `subtractfeefromamount` option via the\n+  `send`, `sendtoaddress`, or `sendmany` RPCs. (#24118)\n+\n+- A new `gettxspendingprevout` RPC has been added, which scans the mempool to find\n+  transactions spending any of the given outpoints. (#24408)\n+\n+- The `simulaterawtransaction` RPC iterates over the inputs and outputs of the given\n+  transactions, and tallies up the balance change for the given wallet. This can be\n+  useful e.g. when verifying that a coin join like transaction doesn't contain unexpected\n+  inputs that the wallet will then sign for unintentionally. (#22751)\n+\n+Updated REST APIs\n+-----------------\n+\n+- The `/headers/` and `/blockfilterheaders/` endpoints have been updated to use\n+  a query parameter instead of path parameter to specify the result count. The\n+  count parameter is now optional, and defaults to 5 for both endpoints. The old\n+  endpoints are still functional, and have no documented behaviour change.\n+\n+  For `/headers`, use\n+  `GET /rest/headers/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  For `/blockfilterheaders/`, use\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  (#24098)\n+\n+Build System\n+------------\n+\n+- Guix builds are now reproducible across architectures (x86_64 & aarch64). (#21194)\n+\n+New settings\n+------------\n+\n+- A new `mempoolfullrbf` option has been added, which enables the mempool to\n+  accept transaction replacement without enforcing BIP125 replaceability\n+  signaling. (#25353)\n+\n+Wallet\n+------\n+\n+- The `-walletrbf` startup option will now default to `true`. The\n+  wallet will now default to opt-in RBF on transactions that it creates. (#25610)\n+\n+- The `replaceable` option for the `createrawtransaction` and\n+  `createpsbt` RPCs will now default to `true`. Transactions created\n+  with these RPCs will default to having opt-in RBF enabled. (#25610)\n+\n+- The `wsh()` output descriptor was extended with Miniscript support. You can import Miniscript\n+  descriptors for P2WSH in a watchonly wallet to track coins, but you can't spend from them using\n+  the Bitcoin Core wallet yet.\n+  You can find more about Miniscript on the [reference website](https://bitcoin.sipa.be/miniscript/). (#24148)\n+\n+- To help prevent fingerprinting transactions created by the Bitcoin Core wallet, change output\n+  amounts are now randomized. (#24494)\n+\n+- The `listtransactions`, `gettransaction`, and `listsinceblock`\n+  RPC methods now include a wtxid field (hash of serialized transaction,\n+  including witness data) for each transaction. (#24198)\n+\n+- The `listsinceblock`, `listtransactions` and `gettransaction` output now contain a new\n+  `parent_descs` field for every \"receive\" entry. (#25504)\n+\n+- A new optional `include_change` parameter was added to the `listsinceblock` command.\n+\n+Migrating Legacy Wallets to Descriptor Wallets\n+---------------------------------------------\n+\n+An experimental RPC `migratewallet` has been added to migrate Legacy (non-descriptor) wallets to\n+Descriptor wallets. More information about the migration process is available in the\n+[documentation](https://github.com/bitcoin/bitcoin/blob/master/doc/managing-wallets.md#migrating-legacy-wallets-to-descriptor-wallets).\n+\n+- RPC `getreceivedbylabel` now returns an error, \"Label not found\n+  in wallet\" (-4), if the label is not in the address book. (#25122)\n+\n+GUI changes\n+-----------\n+\n+- A new menu item to restore a wallet from a backup file has been added (#471).\n+\n+- Configuration changes made in the bitcoin GUI (such as the pruning setting,\n+proxy settings, UPNP preferences) are now saved to `<datadir>/settings.json`\n+file rather than to the Qt settings backend (windows registry or unix desktop\n+config files), so these settings will now apply to bitcoind, instead of being\n+ignored. (#15936)\n+\n+- Also, the interaction between GUI settings and `bitcoin.conf` settings is\n+simplified. Settings from `bitcoin.conf` are now displayed normally in the GUI\n+settings dialog, instead of in a separate warning message (\"Options set in this\n+dialog are overridden by the configuration file: -setting=value\"). And these\n+settings can now be edited because `settings.json` values take precedence over\n+`bitcoin.conf` values. (#15936)\n+\n+Low-level changes\n+=================\n+\n+RPC\n+---\n+\n+- The `deriveaddresses`, `getdescriptorinfo`, `importdescriptors` and `scantxoutset` commands now\n+  accept Miniscript expression within a `wsh()` descriptor. (#24148)\n+\n+- The `getaddressinfo`, `decodescript`, `listdescriptors` and `listunspent` commands may now output\n+  a Miniscript descriptor inside a `wsh()` where a `wsh(raw())` descriptor was previously returned. (#24148)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- /dev/fd0\n+- 0xb10c\n+- Adam Jonas\n+- akankshakashyap\n+- Ali Sherief\n+- amadeuszpawlik\n+- Andreas Kouloumos\n+- Andrew Chow\n+- Anthony Towns\n+- Antoine Poinsot\n+- Antoine Riard\n+- AurÃ¨le OulÃ¨s\n+- avirgovi\n+- Ayush Sharma\n+- Baas\n+- Ben Woosley\n+- BrokenProgrammer\n+- brunoerg\n+- brydinh\n+- Bushstar\n+- Calvin Kim\n+- CAnon\n+- Carl Dong\n+- chinggg\n+- Cory Fields\n+- Daniel Kraft\n+- Daniela Brozzoni\n+- darosior\n+- Dave Scotese\n+- David Bakin\n+- dergoegge\n+- dhruv\n+- Dimitri\n+- dontbyte\n+- Duncan Dean\n+- eugene\n+- Eunoia\n+- Fabian Jahr\n+- furszy\n+- Gleb Naumenko\n+- glozow\n+- Greg Weber\n+- Gregory Sanders\n+- gruve-p\n+- Hennadii Stepanov\n+- hiago\n+- Igor Bubelov\n+- ishaanam\n+- Jacob P.\n+- Jadi\n+- James O'Beirne\n+- Janna\n+- Jarol Rodriguez\n+- Jeremy Rand\n+- Jeremy Rubin\n+- jessebarton\n+- JoÃ£o Barbosa\n+- John Newbery\n+- Jon Atack\n+- Josiah Baker\n+- josibake",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1022978372",
      "id" : 1022978372,
      "in_reply_to_id" : 1022952800,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5848-WlE",
      "original_commit_id" : "57170b4d6f30079b11fb825b063450ef17749149",
      "original_line" : 331,
      "original_position" : 331,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 1181144190,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022978372/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-15T16:01:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022978372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > I've [moved](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/24.0-Release-Notes-draft/_compare/67816d3a8d9ff73188b18ccdff137dd9888c7d65...66a50d9328483d782e294248df871efa1a6207a6) the https://github.com/bitcoin-core/bitcoin-devwiki/wiki/24.0-Release-Notes-draft#migrating-legacy-wallets-to-descriptor-wallets section to \"New RPCs\"\r\n> \r\n> Not sure, as it might be worthwhile having the callout for this in the Wallet section. Thoughts @achow101?\r\n\r\nWallet section (or it's own section) would be better than in \"New RPCs\"",
      "created_at" : "2022-11-15T16:46:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#issuecomment-1315587865",
      "id" : 1315587865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26503",
      "node_id" : "IC_kwDOABII585OakcZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315587865/reactions"
      },
      "updated_at" : "2022-11-15T16:46:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315587865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1023031582"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023031582"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This appears to be in the wrong section.",
      "commit_id" : "190709e456ba1a34c0f7270d07890db2a1b96af2",
      "created_at" : "2022-11-15T16:46:50Z",
      "diff_hunk" : "@@ -0,0 +1,385 @@\n+24.0 Release Notes\n+==================\n+\n+Bitcoin Core version *24.0* is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-24.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notice of new option for transaction replacement policies\n+=========================================================\n+\n+This version of Bitcoin Core adds a new `mempoolfullrbf` configuration\n+option which allows users to change the policy their individual node\n+will use for relaying and mining unconfirmed transactions.  The option\n+defaults to the same policy that was used in previous releases and no\n+changes to node policy will occur if everyone uses the default.\n+\n+Some Bitcoin services today expect that the first version of an\n+unconfirmed transaction that they see will be the version of the\n+transaction that ultimately gets confirmed---a transaction acceptance\n+policy sometimes called \"first-seen\".\n+\n+The Bitcoin Protocol does not, and cannot, provide any assurance that\n+the first version of an unconfirmed transaction seen by a particular\n+node will be the version that gets confirmed.  If there are multiple\n+versions of the same unconfirmed transaction available, only the miner\n+who includes one of those transactions in a block gets to decide which\n+version of the transaction gets confirmed.\n+\n+Despite this lack of assurance, multiple merchants and services today\n+still make this assumption.\n+\n+There are several benefits to users from removing this *first-seen*\n+simplification.  One key benefit, the ability for the sender of a\n+transaction to replace it with an alternative version paying higher\n+fees, was realized in [Bitcoin Core 0.12.0][] (February 2016) with the\n+introduction of [BIP125][] opt-in Replace By Fee (RBF).\n+\n+Since then, there has been discussion about completely removing the\n+first-seen simplification and allowing users to replace any of their\n+older unconfirmed transactions with newer transactions, a feature called\n+*full-RBF*.  This release includes a `mempoolfullrbf` configuration\n+option that allows enabling full-RBF, although it defaults to off\n+(allowing only opt-in RBF).\n+\n+Several alternative node implementations have already enabled full-RBF by\n+default for years, and several contributors to Bitcoin Core are\n+advocating for enabling full-RBF by default in a future version of\n+Bitcoin Core.\n+\n+As more nodes that participate in relay and mining begin enabling\n+full-RBF, replacement of unconfirmed transactions by ones offering higher\n+fees may rapidly become more reliable.\n+\n+Members of this project strongly recommend that merchants and services\n+not accept unconfirmed transactions as final, and if they insist on doing so,\n+to take the appropriate steps to ensure they have some recourse or plan for\n+when their assumptions do not hold.\n+\n+[Bitcoin Core 0.12.0]: https://bitcoincore.org/en/releases/0.12.0/#opt-in-replace-by-fee-transactions\n+[bip125]: https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- To address a potential denial-of-service, the logic to download headers from peers\n+  has been reworked.  This is particularly relevant for nodes starting up for the\n+  first time (or for nodes which are starting up after being offline for a long time).\n+\n+  Whenever headers are received from a peer that have a total chainwork that is either\n+  less than the node's `-minimumchainwork` value or is sufficiently below the work at\n+  the node's tip, a \"presync\" phase will begin, in which the node will download the\n+  peer's headers and verify the cumulative work on the peer's chain, prior to storing\n+  those headers permanently. Once that cumulative work is verified to be sufficiently high,\n+  the headers will be redownloaded from that peer and fully validated and stored.\n+\n+  This may result in initial headers sync taking longer for new nodes starting up for\n+  the first time, both because the headers will be downloaded twice, and because the effect\n+  of a peer disconnecting during the presync phase (or while the node's best headers chain has less\n+  than `-minimumchainwork`), will result in the node needing to use the headers presync mechanism\n+  with the next peer as well (downloading the headers twice, again). (#25717)\n+\n+- With I2P connections, a new, transient address is used for each outbound\n+  connection if `-i2pacceptincoming=0`. (#25355)\n+\n+Updated RPCs\n+------------\n+\n+- The `-deprecatedrpc=softforks` configuration option has been removed.  The\n+  RPC `getblockchaininfo` no longer returns the `softforks` field, which was\n+  previously deprecated in 23.0. (#23508) Information on soft fork status is\n+  now only available via the `getdeploymentinfo` RPC.\n+\n+- The `deprecatedrpc=exclude_coinbase` configuration option has been removed.\n+  The `receivedby` RPCs (`listreceivedbyaddress`, `listreceivedbylabel`,\n+  `getreceivedbyaddress` and `getreceivedbylabel`) now always return results\n+  accounting for received coins from coinbase outputs, without an option to\n+  change that behaviour. Excluding coinbases was previously deprecated in 23.0.\n+  (#25171)\n+\n+- The `deprecatedrpc=fees` configuration option has been removed. The top-level\n+  fee fields `fee`, `modifiedfee`, `ancestorfees` and `descendantfees` are no\n+  longer returned by RPCs `getmempoolentry`, `getrawmempool(verbose=true)`,\n+  `getmempoolancestors(verbose=true)` and `getmempooldescendants(verbose=true)`.\n+  The same fee fields can be accessed through the `fees` object in the result.\n+  The top-level fee fields were previously deprecated in 23.0. (#25204)\n+\n+- The `getpeerinfo` RPC has been updated with a new `presynced_headers` field,\n+  indicating the progress on the presync phase mentioned in the\n+  \"P2P and network changes\" section above.\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- The `sendall` RPC spends specific UTXOs to one or more recipients\n+  without creating change. By default, the `sendall` RPC will spend\n+  every UTXO in the wallet. `sendall` is useful to empty wallets or to\n+  create a changeless payment from select UTXOs. When creating a payment\n+  from a specific amount for which the recipient incurs the transaction\n+  fee, continue to use the `subtractfeefromamount` option via the\n+  `send`, `sendtoaddress`, or `sendmany` RPCs. (#24118)\n+\n+- A new `gettxspendingprevout` RPC has been added, which scans the mempool to find\n+  transactions spending any of the given outpoints. (#24408)\n+\n+- The `simulaterawtransaction` RPC iterates over the inputs and outputs of the given\n+  transactions, and tallies up the balance change for the given wallet. This can be\n+  useful e.g. when verifying that a coin join like transaction doesn't contain unexpected\n+  inputs that the wallet will then sign for unintentionally. (#22751)\n+\n+Updated REST APIs\n+-----------------\n+\n+- The `/headers/` and `/blockfilterheaders/` endpoints have been updated to use\n+  a query parameter instead of path parameter to specify the result count. The\n+  count parameter is now optional, and defaults to 5 for both endpoints. The old\n+  endpoints are still functional, and have no documented behaviour change.\n+\n+  For `/headers`, use\n+  `GET /rest/headers/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  For `/blockfilterheaders/`, use\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  (#24098)\n+\n+Build System\n+------------\n+\n+- Guix builds are now reproducible across architectures (x86_64 & aarch64). (#21194)\n+\n+New settings\n+------------\n+\n+- A new `mempoolfullrbf` option has been added, which enables the mempool to\n+  accept transaction replacement without enforcing BIP125 replaceability\n+  signaling. (#25353)\n+\n+Wallet\n+------\n+\n+- The `-walletrbf` startup option will now default to `true`. The\n+  wallet will now default to opt-in RBF on transactions that it creates. (#25610)\n+\n+- The `replaceable` option for the `createrawtransaction` and\n+  `createpsbt` RPCs will now default to `true`. Transactions created\n+  with these RPCs will default to having opt-in RBF enabled. (#25610)\n+\n+- The `wsh()` output descriptor was extended with Miniscript support. You can import Miniscript\n+  descriptors for P2WSH in a watchonly wallet to track coins, but you can't spend from them using\n+  the Bitcoin Core wallet yet.\n+  You can find more about Miniscript on the [reference website](https://bitcoin.sipa.be/miniscript/). (#24148)\n+\n+- To help prevent fingerprinting transactions created by the Bitcoin Core wallet, change output\n+  amounts are now randomized. (#24494)\n+\n+- The `listtransactions`, `gettransaction`, and `listsinceblock`\n+  RPC methods now include a wtxid field (hash of serialized transaction,\n+  including witness data) for each transaction. (#24198)\n+\n+- The `listsinceblock`, `listtransactions` and `gettransaction` output now contain a new\n+  `parent_descs` field for every \"receive\" entry. (#25504)\n+\n+- A new optional `include_change` parameter was added to the `listsinceblock` command.\n+\n+Migrating Legacy Wallets to Descriptor Wallets\n+---------------------------------------------\n+\n+An experimental RPC `migratewallet` has been added to migrate Legacy (non-descriptor) wallets to\n+Descriptor wallets. More information about the migration process is available in the\n+[documentation](https://github.com/bitcoin/bitcoin/blob/master/doc/managing-wallets.md#migrating-legacy-wallets-to-descriptor-wallets).\n+\n+- RPC `getreceivedbylabel` now returns an error, \"Label not found\n+  in wallet\" (-4), if the label is not in the address book. (#25122)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1023031582",
      "id" : 1023031582,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5848-jke",
      "original_commit_id" : "95af39666a2aa36084e5e8f51722170cc92ecc0a",
      "original_line" : 234,
      "original_position" : 234,
      "original_start_line" : 233,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 1181221552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023031582/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-15T16:46:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023031582",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1023039674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023039674"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved up into the wallet section.",
      "commit_id" : "190709e456ba1a34c0f7270d07890db2a1b96af2",
      "created_at" : "2022-11-15T16:53:53Z",
      "diff_hunk" : "@@ -0,0 +1,385 @@\n+24.0 Release Notes\n+==================\n+\n+Bitcoin Core version *24.0* is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-24.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notice of new option for transaction replacement policies\n+=========================================================\n+\n+This version of Bitcoin Core adds a new `mempoolfullrbf` configuration\n+option which allows users to change the policy their individual node\n+will use for relaying and mining unconfirmed transactions.  The option\n+defaults to the same policy that was used in previous releases and no\n+changes to node policy will occur if everyone uses the default.\n+\n+Some Bitcoin services today expect that the first version of an\n+unconfirmed transaction that they see will be the version of the\n+transaction that ultimately gets confirmed---a transaction acceptance\n+policy sometimes called \"first-seen\".\n+\n+The Bitcoin Protocol does not, and cannot, provide any assurance that\n+the first version of an unconfirmed transaction seen by a particular\n+node will be the version that gets confirmed.  If there are multiple\n+versions of the same unconfirmed transaction available, only the miner\n+who includes one of those transactions in a block gets to decide which\n+version of the transaction gets confirmed.\n+\n+Despite this lack of assurance, multiple merchants and services today\n+still make this assumption.\n+\n+There are several benefits to users from removing this *first-seen*\n+simplification.  One key benefit, the ability for the sender of a\n+transaction to replace it with an alternative version paying higher\n+fees, was realized in [Bitcoin Core 0.12.0][] (February 2016) with the\n+introduction of [BIP125][] opt-in Replace By Fee (RBF).\n+\n+Since then, there has been discussion about completely removing the\n+first-seen simplification and allowing users to replace any of their\n+older unconfirmed transactions with newer transactions, a feature called\n+*full-RBF*.  This release includes a `mempoolfullrbf` configuration\n+option that allows enabling full-RBF, although it defaults to off\n+(allowing only opt-in RBF).\n+\n+Several alternative node implementations have already enabled full-RBF by\n+default for years, and several contributors to Bitcoin Core are\n+advocating for enabling full-RBF by default in a future version of\n+Bitcoin Core.\n+\n+As more nodes that participate in relay and mining begin enabling\n+full-RBF, replacement of unconfirmed transactions by ones offering higher\n+fees may rapidly become more reliable.\n+\n+Members of this project strongly recommend that merchants and services\n+not accept unconfirmed transactions as final, and if they insist on doing so,\n+to take the appropriate steps to ensure they have some recourse or plan for\n+when their assumptions do not hold.\n+\n+[Bitcoin Core 0.12.0]: https://bitcoincore.org/en/releases/0.12.0/#opt-in-replace-by-fee-transactions\n+[bip125]: https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- To address a potential denial-of-service, the logic to download headers from peers\n+  has been reworked.  This is particularly relevant for nodes starting up for the\n+  first time (or for nodes which are starting up after being offline for a long time).\n+\n+  Whenever headers are received from a peer that have a total chainwork that is either\n+  less than the node's `-minimumchainwork` value or is sufficiently below the work at\n+  the node's tip, a \"presync\" phase will begin, in which the node will download the\n+  peer's headers and verify the cumulative work on the peer's chain, prior to storing\n+  those headers permanently. Once that cumulative work is verified to be sufficiently high,\n+  the headers will be redownloaded from that peer and fully validated and stored.\n+\n+  This may result in initial headers sync taking longer for new nodes starting up for\n+  the first time, both because the headers will be downloaded twice, and because the effect\n+  of a peer disconnecting during the presync phase (or while the node's best headers chain has less\n+  than `-minimumchainwork`), will result in the node needing to use the headers presync mechanism\n+  with the next peer as well (downloading the headers twice, again). (#25717)\n+\n+- With I2P connections, a new, transient address is used for each outbound\n+  connection if `-i2pacceptincoming=0`. (#25355)\n+\n+Updated RPCs\n+------------\n+\n+- The `-deprecatedrpc=softforks` configuration option has been removed.  The\n+  RPC `getblockchaininfo` no longer returns the `softforks` field, which was\n+  previously deprecated in 23.0. (#23508) Information on soft fork status is\n+  now only available via the `getdeploymentinfo` RPC.\n+\n+- The `deprecatedrpc=exclude_coinbase` configuration option has been removed.\n+  The `receivedby` RPCs (`listreceivedbyaddress`, `listreceivedbylabel`,\n+  `getreceivedbyaddress` and `getreceivedbylabel`) now always return results\n+  accounting for received coins from coinbase outputs, without an option to\n+  change that behaviour. Excluding coinbases was previously deprecated in 23.0.\n+  (#25171)\n+\n+- The `deprecatedrpc=fees` configuration option has been removed. The top-level\n+  fee fields `fee`, `modifiedfee`, `ancestorfees` and `descendantfees` are no\n+  longer returned by RPCs `getmempoolentry`, `getrawmempool(verbose=true)`,\n+  `getmempoolancestors(verbose=true)` and `getmempooldescendants(verbose=true)`.\n+  The same fee fields can be accessed through the `fees` object in the result.\n+  The top-level fee fields were previously deprecated in 23.0. (#25204)\n+\n+- The `getpeerinfo` RPC has been updated with a new `presynced_headers` field,\n+  indicating the progress on the presync phase mentioned in the\n+  \"P2P and network changes\" section above.\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- The `sendall` RPC spends specific UTXOs to one or more recipients\n+  without creating change. By default, the `sendall` RPC will spend\n+  every UTXO in the wallet. `sendall` is useful to empty wallets or to\n+  create a changeless payment from select UTXOs. When creating a payment\n+  from a specific amount for which the recipient incurs the transaction\n+  fee, continue to use the `subtractfeefromamount` option via the\n+  `send`, `sendtoaddress`, or `sendmany` RPCs. (#24118)\n+\n+- A new `gettxspendingprevout` RPC has been added, which scans the mempool to find\n+  transactions spending any of the given outpoints. (#24408)\n+\n+- The `simulaterawtransaction` RPC iterates over the inputs and outputs of the given\n+  transactions, and tallies up the balance change for the given wallet. This can be\n+  useful e.g. when verifying that a coin join like transaction doesn't contain unexpected\n+  inputs that the wallet will then sign for unintentionally. (#22751)\n+\n+Updated REST APIs\n+-----------------\n+\n+- The `/headers/` and `/blockfilterheaders/` endpoints have been updated to use\n+  a query parameter instead of path parameter to specify the result count. The\n+  count parameter is now optional, and defaults to 5 for both endpoints. The old\n+  endpoints are still functional, and have no documented behaviour change.\n+\n+  For `/headers`, use\n+  `GET /rest/headers/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  For `/blockfilterheaders/`, use\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\n+  instead of\n+  `GET /rest/blockfilterheaders/<FILTERTYPE>/<COUNT>/<BLOCK-HASH>.<bin|hex|json>` (deprecated)\n+\n+  (#24098)\n+\n+Build System\n+------------\n+\n+- Guix builds are now reproducible across architectures (x86_64 & aarch64). (#21194)\n+\n+New settings\n+------------\n+\n+- A new `mempoolfullrbf` option has been added, which enables the mempool to\n+  accept transaction replacement without enforcing BIP125 replaceability\n+  signaling. (#25353)\n+\n+Wallet\n+------\n+\n+- The `-walletrbf` startup option will now default to `true`. The\n+  wallet will now default to opt-in RBF on transactions that it creates. (#25610)\n+\n+- The `replaceable` option for the `createrawtransaction` and\n+  `createpsbt` RPCs will now default to `true`. Transactions created\n+  with these RPCs will default to having opt-in RBF enabled. (#25610)\n+\n+- The `wsh()` output descriptor was extended with Miniscript support. You can import Miniscript\n+  descriptors for P2WSH in a watchonly wallet to track coins, but you can't spend from them using\n+  the Bitcoin Core wallet yet.\n+  You can find more about Miniscript on the [reference website](https://bitcoin.sipa.be/miniscript/). (#24148)\n+\n+- To help prevent fingerprinting transactions created by the Bitcoin Core wallet, change output\n+  amounts are now randomized. (#24494)\n+\n+- The `listtransactions`, `gettransaction`, and `listsinceblock`\n+  RPC methods now include a wtxid field (hash of serialized transaction,\n+  including witness data) for each transaction. (#24198)\n+\n+- The `listsinceblock`, `listtransactions` and `gettransaction` output now contain a new\n+  `parent_descs` field for every \"receive\" entry. (#25504)\n+\n+- A new optional `include_change` parameter was added to the `listsinceblock` command.\n+\n+Migrating Legacy Wallets to Descriptor Wallets\n+---------------------------------------------\n+\n+An experimental RPC `migratewallet` has been added to migrate Legacy (non-descriptor) wallets to\n+Descriptor wallets. More information about the migration process is available in the\n+[documentation](https://github.com/bitcoin/bitcoin/blob/master/doc/managing-wallets.md#migrating-legacy-wallets-to-descriptor-wallets).\n+\n+- RPC `getreceivedbylabel` now returns an error, \"Label not found\n+  in wallet\" (-4), if the label is not in the address book. (#25122)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#discussion_r1023039674",
      "id" : 1023039674,
      "in_reply_to_id" : 1023031582,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5848-li6",
      "original_commit_id" : "95af39666a2aa36084e5e8f51722170cc92ecc0a",
      "original_line" : 234,
      "original_position" : 234,
      "original_start_line" : 233,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 1181232961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26503",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023039674/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-15T16:53:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023039674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "FYI, there was an alternative version of the mempoolfullrbf text that was reviewed by multiple people here: https://gist.github.com/harding/f3cd8affb10cea96d352347fed7f4a3a",
      "created_at" : "2022-11-15T17:18:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#issuecomment-1315632084",
      "id" : 1315632084,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26503",
      "node_id" : "IC_kwDOABII585OavPU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315632084/reactions"
      },
      "updated_at" : "2022-11-15T17:18:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315632084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 190709e456ba1a34c0f7270d07890db2a1b96af2",
      "created_at" : "2022-11-15T20:32:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#issuecomment-1315830504",
      "id" : 1315830504,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26503",
      "node_id" : "IC_kwDOABII585Obfro",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315830504/reactions"
      },
      "updated_at" : "2022-11-15T20:32:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315830504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK release notes",
      "created_at" : "2022-11-15T21:14:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#issuecomment-1315872312",
      "id" : 1315872312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26503",
      "node_id" : "IC_kwDOABII585Obp44",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315872312/reactions"
      },
      "updated_at" : "2022-11-15T21:14:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315872312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack relates on IRC: \"[The backports in #26457] may appear minor, but without them v24 will break user space. For example, the CashApp crypto team informed me that v24 will break their production systems if they upgrade without those patches. I've been proposing to fix these since August before v24 branch-off. If we go forward as-is, it seems to me the v24 release notes ought to warn about the changes (last I looked a few days ago, there was no mention of it).\"",
      "created_at" : "2022-11-15T21:25:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26503#issuecomment-1315882326",
      "id" : 1315882326,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26503",
      "node_id" : "IC_kwDOABII585ObsVW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315882326/reactions"
      },
      "updated_at" : "2022-11-15T21:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315882326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   }
]
