[
   {
      "body" : "Testing with boost 1.56.0 and ./configure CXXFLAGS=\"-DDEBUG_LOCKORDER -g -std=c++11\"\r\n\r\nThe changes fix the issue described in #5166, but introduce a new compile error.\r\n\r\n```\r\nIn file included from ./allocators.h:9:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:423:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__tree:16:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/memory:598:\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/utility:253:9: error: field has incomplete type 'const CScriptID'\r\n    _T1 first;\r\n        ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:2023:27: note: in instantiation of template class 'std::__1::pair<const CScriptID, CScript>' requested here\r\n                 decltype(__is_constructible_test(declval<_Tp>(), declval<_Args>()...))\r\n                          ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:2072:14: note: in instantiation of template class 'std::__1::__is_constructible<false, std::__1::allocator<std::__1::pair<const CScriptID,\r\n      CScript> >>' requested here\r\n    : public __is_constructible<is_scalar<_Tp>::value || is_reference<_Tp>::value,\r\n             ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:2098:14: note: in instantiation of template class 'std::__1::__is_constructible_void_check<false, std::__1::allocator<std::__1::pair<const\r\n      CScriptID, CScript> >>' requested here\r\n    : public __is_constructible_void_check<__contains_void<_Tp, _Args...>::value\r\n             ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:2578:34: note: in instantiation of template class 'std::__1::is_constructible<std::__1::allocator<std::__1::pair<const CScriptID, CScript>\r\n      >>' requested here\r\n    : __is_nothrow_constructible<is_constructible<_Tp, _Args...>::value, _Tp, _Args...>\r\n                                 ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:2700:14: note: in instantiation of template class 'std::__1::is_nothrow_constructible<std::__1::allocator<std::__1::pair<const CScriptID,\r\n      CScript> >>' requested here\r\n    : public is_nothrow_constructible<_Tp>\r\n             ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:840:13: note: in instantiation of template class 'std::__1::is_nothrow_default_constructible<std::__1::allocator<std::__1::pair<const CScriptID,\r\n      CScript> > >' requested here\r\n            is_nothrow_default_constructible<allocator_type>::value &&\r\n            ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config:332:34: note: expanded from macro '_NOEXCEPT_'\r\n#  define _NOEXCEPT_(x) noexcept(x)\r\n                                 ^\r\n./keystore.h:55:7: note: in instantiation of exception specification for 'map' requested here\r\nclass CBasicKeyStore : public CKeyStore\r\n      ^\r\n./keystore.h:17:7: note: forward declaration of 'CScriptID'\r\nclass CScriptID;\r\n      ^\r\nIn file included from keystore.cpp:6:\r\nIn file included from ./keystore.h:9:\r\nIn file included from ./key.h:9:\r\nIn file included from ./allocators.h:9:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:423:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__tree:16:\r\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/memory:598:\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/utility:254:9: error: field has incomplete type 'CScript'\r\n    _T2 second;\r\n        ^\r\n./serialize.h:21:7: note: forward declaration of 'CScript'\r\nclass CScript;\r\n      ^\r\n./crypter.h:139:5: note: implicit default constructor for 'CBasicKeyStore' first required here\r\n    CCryptoKeyStore() : fUseCrypto(false), fDecryptionThoroughlyChecked(false)\r\n    ^\r\nIn file included from keystore.cpp:6:\r\nIn file included from ./keystore.h:9:\r\nIn file included from ./key.h:9:\r\nIn file included from ./allocators.h:9:\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:1384:53: error: static_cast from 'pointer' (aka 'std::__1::__tree_node<std::__1::__value_type<CScriptID, CScript>, void *> *') to\r\n      '__node_base_pointer' (aka 'std::__1::__tree_node_base<void *> *') is not allowed\r\n        __tree_.__insert_node_at(__parent, __child, static_cast<__node_base_pointer>(__h.get()));\r\n                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nkeystore.cpp:42:15: note: in instantiation of member function 'std::__1::map<CScriptID, CScript, std::__1::less<CScriptID>, std::__1::allocator<std::__1::pair<const CScriptID, CScript> > >::operator[]' requested here\r\n    mapScripts[CScriptID(redeemScript)] = redeemScript;\r\n              ^\r\nIn file included from keystore.cpp:6:\r\nIn file included from ./keystore.h:9:\r\nIn file included from ./key.h:9:\r\nIn file included from ./allocators.h:9:\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:1219:16: error: static_cast from '__node_pointer' (aka 'std::__1::__tree_node<std::__1::__value_type<CScriptID, CScript>, void *> *') to\r\n      '__node_base_pointer' (aka 'std::__1::__tree_node_base<void *> *') is not allowed\r\n    __parent = static_cast<__node_base_pointer>(__tree_.__end_node());\r\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:1379:36: note: in instantiation of member function 'std::__1::map<CScriptID, CScript, std::__1::less<CScriptID>,\r\n      std::__1::allocator<std::__1::pair<const CScriptID, CScript> > >::__find_equal_key' requested here\r\n    __node_base_pointer& __child = __find_equal_key(__parent, __k);\r\n                                   ^\r\nkeystore.cpp:42:15: note: in instantiation of member function 'std::__1::map<CScriptID, CScript, std::__1::less<CScriptID>, std::__1::allocator<std::__1::pair<const CScriptID, CScript> > >::operator[]' requested here\r\n    mapScripts[CScriptID(redeemScript)] = redeemScript;\r\n              ^\r\nIn file included from keystore.cpp:6:\r\nIn file included from ./keystore.h:9:\r\nIn file included from ./key.h:9:\r\nIn file included from ./allocators.h:9:\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:967:50: error: no viable conversion from 'const_iterator' (aka '__tree_const_iterator<value_type, __node_pointer, difference_type>') to\r\n      'const_iterator' (aka '__map_const_iterator<typename __base::const_iterator>')\r\n    const_iterator end() const _NOEXCEPT {return __tree_.end();}\r\n                                                 ^~~~~~~~~~~~~\r\nkeystore.cpp:56:26: note: in instantiation of member function 'std::__1::map<CScriptID, CScript, std::__1::less<CScriptID>, std::__1::allocator<std::__1::pair<const CScriptID, CScript> > >::end' requested here\r\n    if (mi != mapScripts.end())\r\n                         ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:713:29: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'const_iterator'\r\n      (aka '__tree_const_iterator<value_type, __node_pointer, difference_type>') to 'const std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<CScriptID, CScript>, std::__1::__tree_node<std::__1::__value_type<CScriptID,\r\n      CScript>, void *> *, long> > &' for 1st argument\r\nclass _LIBCPP_TYPE_VIS_ONLY __map_const_iterator\r\n                            ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:713:29: note: candidate constructor (the implicit move constructor) not viable: no known conversion from 'const_iterator'\r\n      (aka '__tree_const_iterator<value_type, __node_pointer, difference_type>') to 'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<CScriptID, CScript>, std::__1::__tree_node<std::__1::__value_type<CScriptID, CScript>,\r\n      void *> *, long> > &&' for 1st argument\r\nclass _LIBCPP_TYPE_VIS_ONLY __map_const_iterator\r\n                            ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/map:739:5: note: candidate constructor not viable: no known conversion from 'const_iterator'\r\n      (aka '__tree_const_iterator<value_type, __node_pointer, difference_type>') to '__map_iterator<typename __tree_const_iterator<__value_type<CScriptID, CScript>, __tree_node<__value_type<CScriptID, CScript>, void *> *, long>::__non_const_iterator>' for\r\n      1st argument\r\n    __map_const_iterator(\r\n    ^\r\n5 errors generated.\r\nmake[2]: *** [libbitcoin_common_a-keystore.o] Error 1\r\nmake[1]: *** [check-recursive] Error 1\r\nmake: *** [check-recursive] Error 1\r\n```",
      "created_at" : "2014-12-03T13:50:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-65408890",
      "id" : 65408890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "updated_at" : "2014-12-03T13:50:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65408890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "body" : "Ok, closing then, it's not a fix if it causes a new problem.",
      "created_at" : "2014-12-03T13:58:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-65409997",
      "id" : 65409997,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "updated_at" : "2014-12-03T13:58:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65409997",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Fwiw, that doesn't look like a \"new\" problem. It appears to just get past the first issue and further into the build before it runs into a different c++11 incompatibility.",
      "created_at" : "2014-12-08T20:06:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-66177830",
      "id" : 66177830,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "updated_at" : "2014-12-08T20:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66177830",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "I submitted this under the pretense that this was the only c++11 incompatibility. Seemingly it's one of many so it's not worth doing this now.",
      "created_at" : "2014-12-09T08:06:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-66247227",
      "id" : 66247227,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "updated_at" : "2014-12-09T08:06:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66247227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Just posting for posterity: This was indeed the only incompatibility I ran into in Linux.\r\n\r\nThe error above is libstdc++-specific, but it's a legitimate bug in c++11 mode. See: http://llvm.org/bugs/show_bug.cgi?id=13471\r\n\r\nI have it hack-fixed locally, but it involves a good bit of code movement.",
      "created_at" : "2014-12-18T04:28:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-67440015",
      "id" : 67440015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "updated_at" : "2014-12-18T04:28:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67440015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "err.. s/libstdc++/libc++/",
      "created_at" : "2014-12-18T05:16:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5415#issuecomment-67442395",
      "id" : 67442395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5415",
      "updated_at" : "2014-12-18T05:16:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67442395",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]
