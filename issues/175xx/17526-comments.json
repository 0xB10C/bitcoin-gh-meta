[
   {
      "author_association" : "MEMBER",
      "body" : "Some simulations results: https://gist.github.com/achow101/edf6b5e308035a489fbb1f28d12e2109\r\n\r\nI think the important thing to see here is that this is the same or better in every metric except for \"mean UTXOs\". But I think the thing to note here is that it's about the same mean UTXOs as the positive only effective value simulation. So I think the different there is primarily due to dust outputs that aren't being consumed.",
      "created_at" : "2019-11-19T22:49:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-555752605",
      "id" : 555752605,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NTc1MjYwNQ==",
      "updated_at" : "2019-11-19T22:49:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555752605",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20640 (wallet, refactor: return out-params of CreateTransaction() as optional struct by theStack)\n* #17355 (gui: grey out used address in address book by za-kk)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-11-20T02:17:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-555804156",
      "id" : 555804156,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NTgwNDE1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-18T09:53:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555804156",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-11-22T20:02:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-557673982",
      "id" : 557673982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzY3Mzk4Mg==",
      "updated_at" : "2019-11-22T20:02:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557673982",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-12-01T19:12:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-560146695",
      "id" : 560146695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MDE0NjY5NQ==",
      "updated_at" : "2019-12-01T19:12:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/560146695",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-04-17T11:08:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-615186819",
      "id" : 615186819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNTE4NjgxOQ==",
      "updated_at" : "2020-04-17T11:08:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/615186819",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-05-04T15:50:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-623545739",
      "id" : 623545739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzU0NTczOQ==",
      "updated_at" : "2020-05-04T15:50:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623545739",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. The results look promising!\r\n\r\n> \"Better\" is defined as having lower fees. If the fees are the same, then the one that chooses more inputs (so consolidates more). If that is also the same, Knapsack is then used (i.e. Knapsack is preferred).\r\n\r\nSince you already have a waste metric in BnB, have you considered using the waste metric to pick between the Knapsack and SRD?",
      "created_at" : "2020-06-15T02:37:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-643871088",
      "id" : 643871088,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Mzg3MTA4OA==",
      "updated_at" : "2020-06-15T02:37:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643871088",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439905689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439905689"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`not_input_fees` is a bit hard to grok. How about `fixed_fees`, `payload_fees`, or `fees_excluding_inputs`?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T02:49:52Z",
      "diff_hunk" : "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439905689",
      "id" : 439905689,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkwNTY4OQ==",
      "original_commit_id" : "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "original_line" : 2265,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439905689",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439908914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439908914"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Note to self: I assume this gets the minimum of the current fee rate and the 1008 block target.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T03:05:28Z",
      "diff_hunk" : "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439908914",
      "id" : 439908914,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkwODkxNA==",
      "original_commit_id" : "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "original_line" : 2397,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439908914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439909357"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439909357"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Note to self: What was DiscardRate exactly? \r\n\r\nWhy do you use `DiscardRate` here and not `long_term_feerate`?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T03:07:40Z",
      "diff_hunk" : "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439909357",
      "id" : 439909357,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkwOTM1Nw==",
      "original_commit_id" : "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "original_line" : 2408,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439909357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439919960"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439919960"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I assume `positive_groups` pertains to the `spendable_utxo`?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T04:03:34Z",
      "diff_hunk" : "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439919960",
      "id" : 439919960,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkxOTk2MA==",
      "original_commit_id" : "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "original_line" : 2319,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439919960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439920381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439920381"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I do not understand why they are called `OutputGroup`. I figure you are filtering each UTXO for whether it is economically spendable. How are these UTXO a group, and not just single UTXO?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T04:05:57Z",
      "diff_hunk" : "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;\n+    std::vector<OutputGroup> all_groups;\n+    for (OutputGroup& group : groups) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439920381",
      "id" : 439920381,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyMDM4MQ==",
      "original_commit_id" : "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "original_line" : 2321,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439920381",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439920893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439920893"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`all_groups` here are all UTXO not just the economically spendable?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T04:08:52Z",
      "diff_hunk" : "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;\n+    std::vector<OutputGroup> all_groups;\n+    for (OutputGroup& group : groups) {\n+        if (!group.EligibleForSpending(eligibility_filter)) continue;\n+\n+        if (coin_selection_params.m_subtract_fee_outputs) {\n+            group.SetFees(CFeeRate(0), long_term_feerate);\n+        } else {\n+            group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n         }\n-        // Calculate the fees for things that aren't inputs\n-        CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+        OutputGroup pos_group = group.GetPositiveOnlyGroup();\n+        if (pos_group.effective_value > 0) positive_groups.push_back(pos_group);\n+        all_groups.push_back(group);\n+    }\n+\n+    if (coin_selection_params.use_bnb) {\n         bnb_used = true;\n-        return SelectCoinsBnB(utxo_pool, nTargetValue, cost_of_change, setCoinsRet, nValueRet, not_input_fees);\n+        return SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet, not_input_fees);\n     } else {\n-        // Filter by the min conf specs and add to utxo_pool\n-        for (const OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-            utxo_pool.push_back(group);\n-        }\n         bnb_used = false;\n-        return KnapsackSolver(nTargetValue, utxo_pool, setCoinsRet, nValueRet);\n+        return KnapsackSolver(nTargetValue + not_input_fees, all_groups, setCoinsRet, nValueRet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439920893",
      "id" : 439920893,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyMDg5Mw==",
      "original_commit_id" : "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "original_line" : 2298,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439920893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439921357"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439921357"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Shouldn't the 0 be the second outcome of the tertiary statement here?\r\nIf `coin_selection_params.m_subtract_fee_outputs` is truthy, shouldn't then the fee be deducted?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T04:11:09Z",
      "diff_hunk" : "@@ -2343,12 +2342,8 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n             if (coin.m_input_bytes <= 0) {\n                 return false; // Not solvable, can't estimate size for fee\n             }\n-            coin.effective_value = coin.txout.nValue - coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n-            if (coin_selection_params.use_bnb) {\n-                value_to_select -= coin.effective_value;\n-            } else {\n-                value_to_select -= coin.txout.nValue;\n-            }\n+            coin.effective_value = coin.txout.nValue - (coin_selection_params.m_subtract_fee_outputs ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439921357",
      "id" : 439921357,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyMTM1Nw==",
      "original_commit_id" : "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "original_line" : 2493,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439921357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439921987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439921987"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Aaah, are we talking about ancestry sets of outputs?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T04:14:38Z",
      "diff_hunk" : "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;\n+    std::vector<OutputGroup> all_groups;\n+    for (OutputGroup& group : groups) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439921987",
      "id" : 439921987,
      "in_reply_to_id" : 439920381,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyMTk4Nw==",
      "original_commit_id" : "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "original_line" : 2321,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439921987",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439932004"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932004"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm curious, how come `coin.m_input_bytes` can be smaller than 0 here?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:05:35Z",
      "diff_hunk" : "@@ -329,3 +332,35 @@ bool OutputGroup::EligibleForSpending(const CoinEligibilityFilter& eligibility_f\n         && m_ancestors <= eligibility_filter.max_ancestors\n         && m_descendants <= eligibility_filter.max_descendants;\n }\n+\n+void OutputGroup::SetFees(const CFeeRate effective_feerate, const CFeeRate long_term_feerate)\n+{\n+    fee = 0;\n+    long_term_fee = 0;\n+    effective_value = 0;\n+    for (CInputCoin& coin : m_outputs) {\n+        coin.m_fee = coin.m_input_bytes < 0 ? 0 : effective_feerate.GetFee(coin.m_input_bytes);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439932004",
      "id" : 439932004,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMjAwNA==",
      "original_commit_id" : "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "original_line" : 359,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932004",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439932590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932590"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wouldn't the above case where `coin.m_input_bytes` is smaller than 0 overstate the `effective_value` of the coin here? Would it not be better to set the `effective_value` of a coin whose size is haywire to 0 or negative here?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:08:22Z",
      "diff_hunk" : "@@ -329,3 +332,35 @@ bool OutputGroup::EligibleForSpending(const CoinEligibilityFilter& eligibility_f\n         && m_ancestors <= eligibility_filter.max_ancestors\n         && m_descendants <= eligibility_filter.max_descendants;\n }\n+\n+void OutputGroup::SetFees(const CFeeRate effective_feerate, const CFeeRate long_term_feerate)\n+{\n+    fee = 0;\n+    long_term_fee = 0;\n+    effective_value = 0;\n+    for (CInputCoin& coin : m_outputs) {\n+        coin.m_fee = coin.m_input_bytes < 0 ? 0 : effective_feerate.GetFee(coin.m_input_bytes);\n+        fee += coin.m_fee;\n+\n+        coin.m_long_term_fee = coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n+        long_term_fee += coin.m_long_term_fee;\n+\n+        coin.effective_value = coin.txout.nValue - coin.m_fee;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439932590",
      "id" : 439932590,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMjU5MA==",
      "original_commit_id" : "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "original_line" : 365,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439932954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932954"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"Positive\" is rather unspecific. How about calling this `GetSpendableGroup()`?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:10:16Z",
      "diff_hunk" : "@@ -329,3 +332,35 @@ bool OutputGroup::EligibleForSpending(const CoinEligibilityFilter& eligibility_f\n         && m_ancestors <= eligibility_filter.max_ancestors\n         && m_descendants <= eligibility_filter.max_descendants;\n }\n+\n+void OutputGroup::SetFees(const CFeeRate effective_feerate, const CFeeRate long_term_feerate)\n+{\n+    fee = 0;\n+    long_term_fee = 0;\n+    effective_value = 0;\n+    for (CInputCoin& coin : m_outputs) {\n+        coin.m_fee = coin.m_input_bytes < 0 ? 0 : effective_feerate.GetFee(coin.m_input_bytes);\n+        fee += coin.m_fee;\n+\n+        coin.m_long_term_fee = coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n+        long_term_fee += coin.m_long_term_fee;\n+\n+        coin.effective_value = coin.txout.nValue - coin.m_fee;\n+        effective_value += coin.effective_value;\n+    }\n+}\n+\n+OutputGroup OutputGroup::GetPositiveOnlyGroup()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439932954",
      "id" : 439932954,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMjk1NA==",
      "original_commit_id" : "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "original_line" : 370,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439933778"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439933778"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Isn't `coin_selection_params.effective_fee` a fee rate?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:14:00Z",
      "diff_hunk" : "@@ -2276,27 +2276,14 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n         for (OutputGroup& group : groups) {\n             if (!group.EligibleForSpending(eligibility_filter)) continue;\n \n-            group.fee = 0;\n-            group.long_term_fee = 0;\n-            group.effective_value = 0;\n-            for (auto it = group.m_outputs.begin(); it != group.m_outputs.end(); ) {\n-                const CInputCoin& coin = *it;\n-                CAmount effective_value = coin.txout.nValue - (coin.m_input_bytes < 0 ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes));\n-                // Only include outputs that are positive effective value (i.e. not dust)\n-                if (effective_value > 0) {\n-                    group.fee += coin.m_input_bytes < 0 ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n-                    group.long_term_fee += coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n-                    if (coin_selection_params.m_subtract_fee_outputs) {\n-                        group.effective_value += coin.txout.nValue;\n-                    } else {\n-                        group.effective_value += effective_value;\n-                    }\n-                    ++it;\n-                } else {\n-                    it = group.Discard(coin);\n-                }\n+            if (coin_selection_params.m_subtract_fee_outputs) {\n+                group.SetFees(CFeeRate(0), long_term_feerate);\n+            } else {\n+                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439933778",
      "id" : 439933778,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMzc3OA==",
      "original_commit_id" : "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "original_line" : 2282,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439933778",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439934827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439934827"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice clean-up. From what I understand, `actual_target` is the sum of the recipient outputs plus the precalculable overhead and output costs. If that's the case, maybe amend the comment to clarify that. What do you think of `selection_target` instead of `actual_target`?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:18:22Z",
      "diff_hunk" : "@@ -48,28 +48,25 @@ struct {\n  * @param const std::vector<CInputCoin>& utxo_pool The set of UTXOs that we are choosing from.\n  *        These UTXOs will be sorted in descending order by effective value and the CInputCoins'\n  *        values are their effective values.\n- * @param const CAmount& target_value This is the value that we want to select. It is the lower\n+ * @param const CAmount& actual_target This is the value that we want to select. It is the lower",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439934827",
      "id" : 439934827,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNDgyNw==",
      "original_commit_id" : "9cb997a8a27f62ec66833e957a16a9e3725e1b91",
      "original_line" : 52,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439934827",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439935546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439935546"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that's a fee rate. Would not `effective_fee_rate` be then a better name?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:21:20Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439935546",
      "id" : 439935546,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNTU0Ng==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2858,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439935546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439936501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439936501"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Now that I think about itâ¦ assuming this is pertaining to a mode where the fees are deducted from the recipient output, and the output groups are considered with their actual values instead of their fee rates: have you considered the impact on the outcome for BnB selection? Would be kinda harsh if it suddenly considered all dust inputs spendable, burned a bunch of economically unspendable inputs and then deducted it from the recipient.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:25:38Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439936501",
      "id" : 439936501,
      "line" : 2925,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNjUwMQ==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2925,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 198,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439936501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439937105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439937105"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've seen the witness element count been counted towards the witness block usually before. Are people now counting it to the transaction header? How come we are not counting in WU? :thinking: ",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:28:13Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439937105",
      "id" : 439937105,
      "line" : 2926,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNzEwNQ==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2926,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 199,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439937105",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439938015"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439938015"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm confused. Previously I thought that `m_subtract_fee_outputs` deducts the cost of the transaction from the recipient outputs. This comment seems to indicate that it's just the cost of the outputs.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:32:14Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439938015",
      "id" : 439938015,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzODAxNQ==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2818,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439938015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439938861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439938861"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Given that this would be 32 B, but a non-segwit change output could be 34 B, wouldn't it be more conservative to use 34 B? Can we rely that it will always use segwit addresses?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:35:39Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439938861",
      "id" : 439938861,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzODg2MQ==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2844,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439938861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439939307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439939307"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"change output\"",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:37:31Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing\n+            if (change_spend_size == -1) {\n+                coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n+            } else {\n+                coin_selection_params.change_spend_size = (size_t)change_spend_size;\n+            }\n \n-                    // Calculate the fees for things that aren't inputs\n-                    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+            // Calculate the fees for things that aren't inputs\n+            CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-                    if (!SelectCoins(vAvailableCoins, nValueToSelect + not_input_fees, setCoins, nValueIn, coin_control, coin_selection_params))\n-                    {\n-                        error = _(\"Insufficient funds\");\n-                        return false;\n-                    }\n-                }\n+            if (!SelectCoins(vAvailableCoins, nValue + not_input_fees, setCoins, selected_value, coin_control, coin_selection_params))\n+            {\n+                error = _(\"Insufficient funds\");\n+                return false;\n+            }\n \n-                const CAmount nChange = nValueIn - nValueToSelect;\n-                if (nChange > 0)\n-                {\n-                    // Fill a vout to ourself\n-                    CTxOut newTxOut(nChange, scriptChange);\n+            const CAmount nChange = selected_value - nValue;\n+            if (nChange > 0)\n+            {\n+                // Fill a vout to ourself\n+                CTxOut newTxOut(nChange, scriptChange);\n \n-                    CAmount cost_of_change = 0;\n-                    if (pick_new_inputs) {\n-                        cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n-                    }\n+                CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n \n-                    // Never create dust outputs; if we would, just\n-                    // add the dust to the fee.\n-                    // When nChange is less than the cost of the change output,\n-                    // send it to fees (this means BnB was used)\n-                    if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                // Never create dust outputs; if we would, just\n+                // add the dust to the fee.\n+                // When nChange is less than the cost of the change output,\n+                // send it to fees (this means BnB was used)\n+                if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                {\n+                    nChangePosInOut = -1;\n+                    nFeeRet = nChange;\n+                }\n+                else\n+                {\n+                    if (nChangePosInOut == -1)\n                     {\n-                        nChangePosInOut = -1;\n-                        nFeeRet += nChange;\n+                        // Insert change txn at random position:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439939307",
      "id" : 439939307,
      "line" : 2996,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzOTMwNw==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2996,
      "original_position" : 182,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 340,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439939307",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439939410"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439939410"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does Bitcoin Core not use BIP-69? Or will the outputs be sorted afterwards when the amounts are all fixed?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:37:59Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing\n+            if (change_spend_size == -1) {\n+                coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n+            } else {\n+                coin_selection_params.change_spend_size = (size_t)change_spend_size;\n+            }\n \n-                    // Calculate the fees for things that aren't inputs\n-                    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+            // Calculate the fees for things that aren't inputs\n+            CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-                    if (!SelectCoins(vAvailableCoins, nValueToSelect + not_input_fees, setCoins, nValueIn, coin_control, coin_selection_params))\n-                    {\n-                        error = _(\"Insufficient funds\");\n-                        return false;\n-                    }\n-                }\n+            if (!SelectCoins(vAvailableCoins, nValue + not_input_fees, setCoins, selected_value, coin_control, coin_selection_params))\n+            {\n+                error = _(\"Insufficient funds\");\n+                return false;\n+            }\n \n-                const CAmount nChange = nValueIn - nValueToSelect;\n-                if (nChange > 0)\n-                {\n-                    // Fill a vout to ourself\n-                    CTxOut newTxOut(nChange, scriptChange);\n+            const CAmount nChange = selected_value - nValue;\n+            if (nChange > 0)\n+            {\n+                // Fill a vout to ourself\n+                CTxOut newTxOut(nChange, scriptChange);\n \n-                    CAmount cost_of_change = 0;\n-                    if (pick_new_inputs) {\n-                        cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n-                    }\n+                CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n \n-                    // Never create dust outputs; if we would, just\n-                    // add the dust to the fee.\n-                    // When nChange is less than the cost of the change output,\n-                    // send it to fees (this means BnB was used)\n-                    if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                // Never create dust outputs; if we would, just\n+                // add the dust to the fee.\n+                // When nChange is less than the cost of the change output,\n+                // send it to fees (this means BnB was used)\n+                if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                {\n+                    nChangePosInOut = -1;\n+                    nFeeRet = nChange;\n+                }\n+                else\n+                {\n+                    if (nChangePosInOut == -1)\n                     {\n-                        nChangePosInOut = -1;\n-                        nFeeRet += nChange;\n+                        // Insert change txn at random position:\n+                        nChangePosInOut = GetRandInt(txNew.vout.size()+1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439939410",
      "id" : 439939410,
      "line" : 2997,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzOTQxMA==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2997,
      "original_position" : 183,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 341,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439939410",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439940697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439940697"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's surprising to me that the `nFeeRet` could be lower than a minimum fee here. Wouldn't the fee rate on the input side of transaction building need to be bigger than `GetMinimumFee`?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:42:54Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing\n+            if (change_spend_size == -1) {\n+                coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n+            } else {\n+                coin_selection_params.change_spend_size = (size_t)change_spend_size;\n+            }\n \n-                    // Calculate the fees for things that aren't inputs\n-                    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+            // Calculate the fees for things that aren't inputs\n+            CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-                    if (!SelectCoins(vAvailableCoins, nValueToSelect + not_input_fees, setCoins, nValueIn, coin_control, coin_selection_params))\n-                    {\n-                        error = _(\"Insufficient funds\");\n-                        return false;\n-                    }\n-                }\n+            if (!SelectCoins(vAvailableCoins, nValue + not_input_fees, setCoins, selected_value, coin_control, coin_selection_params))\n+            {\n+                error = _(\"Insufficient funds\");\n+                return false;\n+            }\n \n-                const CAmount nChange = nValueIn - nValueToSelect;\n-                if (nChange > 0)\n-                {\n-                    // Fill a vout to ourself\n-                    CTxOut newTxOut(nChange, scriptChange);\n+            const CAmount nChange = selected_value - nValue;\n+            if (nChange > 0)\n+            {\n+                // Fill a vout to ourself\n+                CTxOut newTxOut(nChange, scriptChange);\n \n-                    CAmount cost_of_change = 0;\n-                    if (pick_new_inputs) {\n-                        cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n-                    }\n+                CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n \n-                    // Never create dust outputs; if we would, just\n-                    // add the dust to the fee.\n-                    // When nChange is less than the cost of the change output,\n-                    // send it to fees (this means BnB was used)\n-                    if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                // Never create dust outputs; if we would, just\n+                // add the dust to the fee.\n+                // When nChange is less than the cost of the change output,\n+                // send it to fees (this means BnB was used)\n+                if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                {\n+                    nChangePosInOut = -1;\n+                    nFeeRet = nChange;\n+                }\n+                else\n+                {\n+                    if (nChangePosInOut == -1)\n                     {\n-                        nChangePosInOut = -1;\n-                        nFeeRet += nChange;\n+                        // Insert change txn at random position:\n+                        nChangePosInOut = GetRandInt(txNew.vout.size()+1);\n                     }\n-                    else\n+                    else if ((unsigned int)nChangePosInOut > txNew.vout.size())\n                     {\n-                        if (nChangePosInOut == -1)\n-                        {\n-                            // Insert change txn at random position:\n-                            nChangePosInOut = GetRandInt(txNew.vout.size()+1);\n-                        }\n-                        else if ((unsigned int)nChangePosInOut > txNew.vout.size())\n-                        {\n-                            error = _(\"Change index out of range\");\n-                            return false;\n-                        }\n-\n-                        std::vector<CTxOut>::iterator position = txNew.vout.begin()+nChangePosInOut;\n-                        txNew.vout.insert(position, newTxOut);\n+                        error = _(\"Change index out of range\");\n+                        return false;\n                     }\n-                } else {\n-                    nChangePosInOut = -1;\n-                }\n \n-                // Dummy fill vin for maximum size estimation\n-                //\n-                for (const auto& coin : setCoins) {\n-                    txNew.vin.push_back(CTxIn(coin.outpoint,CScript()));\n-                }\n-\n-                nBytes = CalculateMaximumSignedTxSize(CTransaction(txNew), this, coin_control.fAllowWatchOnly);\n-                if (nBytes < 0) {\n-                    error = _(\"Signing transaction failed\");\n-                    return false;\n-                }\n-\n-                nFeeNeeded = GetMinimumFee(*this, nBytes, coin_control, &feeCalc);\n-                if (feeCalc.reason == FeeReason::FALLBACK && !m_allow_fallback_fee) {\n-                    // eventually allow a fallback fee\n-                    error = _(\"Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.\");\n-                    return false;\n+                    std::vector<CTxOut>::iterator position = txNew.vout.begin()+nChangePosInOut;\n+                    txNew.vout.insert(position, newTxOut);\n                 }\n+            } else {\n+                nChangePosInOut = -1;\n+            }\n \n-                if (nFeeRet >= nFeeNeeded) {\n-                    // Reduce fee to only the needed amount if possible. This\n-                    // prevents potential overpayment in fees if the coins\n-                    // selected to meet nFeeNeeded result in a transaction that\n-                    // requires less fee than the prior iteration.\n-\n-                    // If we have no change and a big enough excess fee, then\n-                    // try to construct transaction again only without picking\n-                    // new inputs. We now know we only need the smaller fee\n-                    // (because of reduced tx size) and so we should add a\n-                    // change output. Only try this once.\n-                    if (nChangePosInOut == -1 && nSubtractFeeFromAmount == 0 && pick_new_inputs) {\n-                        unsigned int tx_size_with_change = nBytes + coin_selection_params.change_output_size + 2; // Add 2 as a buffer in case increasing # of outputs changes compact size\n-                        CAmount fee_needed_with_change = GetMinimumFee(*this, tx_size_with_change, coin_control, nullptr);\n-                        CAmount minimum_value_for_change = GetDustThreshold(change_prototype_txout, discard_rate);\n-                        if (nFeeRet >= fee_needed_with_change + minimum_value_for_change) {\n-                            pick_new_inputs = false;\n-                            nFeeRet = fee_needed_with_change;\n-                            continue;\n-                        }\n-                    }\n+            // Dummy fill vin for maximum size estimation\n+            //\n+            for (const auto& coin : setCoins) {\n+                txNew.vin.push_back(CTxIn(coin.outpoint,CScript()));\n+            }\n \n-                    // If we have change output already, just increase it\n-                    if (nFeeRet > nFeeNeeded && nChangePosInOut != -1 && nSubtractFeeFromAmount == 0) {\n-                        CAmount extraFeePaid = nFeeRet - nFeeNeeded;\n-                        std::vector<CTxOut>::iterator change_position = txNew.vout.begin()+nChangePosInOut;\n-                        change_position->nValue += extraFeePaid;\n-                        nFeeRet -= extraFeePaid;\n-                    }\n-                    break; // Done, enough fee included.\n-                }\n-                else if (!pick_new_inputs) {\n-                    // This shouldn't happen, we should have had enough excess\n-                    // fee to pay for the new output and still meet nFeeNeeded\n-                    // Or we should have just subtracted fee from recipients and\n-                    // nFeeNeeded should not have changed\n-                    error = _(\"Transaction fee and change calculation failed\");\n-                    return false;\n-                }\n+            nBytes = CalculateMaximumSignedTxSize(CTransaction(txNew), this, coin_control.fAllowWatchOnly);\n+            if (nBytes < 0) {\n+                error = _(\"Signing transaction failed\");\n+                return false;\n+            }\n \n+            CAmount fee_needed = GetMinimumFee(*this, nBytes, coin_control, &feeCalc);\n+            if (feeCalc.reason == FeeReason::FALLBACK && !m_allow_fallback_fee) {\n+                // eventually allow a fallback fee\n+                error = _(\"Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.\");\n+                return false;\n+            }\n+            if (nFeeRet < fee_needed) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439940697",
      "id" : 439940697,
      "line" : 3026,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0MDY5Nw==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 3026,
      "original_position" : 288,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 437,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439940697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439941313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439941313"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why did you overwrite `nFeeNeeded` with `nFeeRet` here?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T05:45:18Z",
      "diff_hunk" : "@@ -2964,7 +2912,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n     reservedest.KeepDestination();\n \n     WalletLogPrintf(\"Fee Calculation: Fee:%d Bytes:%u Needed:%d Tgt:%d (requested %d) Reason:\\\"%s\\\" Decay %.5f: Estimation: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n-              nFeeRet, nBytes, nFeeNeeded, feeCalc.returnedTarget, feeCalc.desiredTarget, StringForFeeReason(feeCalc.reason), feeCalc.est.decay,\n+              nFeeRet, nBytes, nFeeRet, feeCalc.returnedTarget, feeCalc.desiredTarget, StringForFeeReason(feeCalc.reason), feeCalc.est.decay,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439941313",
      "id" : 439941313,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0MTMxMw==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2915,
      "original_position" : 349,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430292643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439941313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440260594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440260594"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The have the same scriptPubKey. IIRC it's for the avoid reuse stuff. Most of the time, they will be single UTXOs.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T15:29:11Z",
      "diff_hunk" : "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;\n+    std::vector<OutputGroup> all_groups;\n+    for (OutputGroup& group : groups) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440260594",
      "id" : 440260594,
      "in_reply_to_id" : 439920381,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI2MDU5NA==",
      "original_commit_id" : "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "original_line" : 2321,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430756132,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440260594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440260721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440260721"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T15:29:21Z",
      "diff_hunk" : "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;\n+    std::vector<OutputGroup> all_groups;\n+    for (OutputGroup& group : groups) {\n+        if (!group.EligibleForSpending(eligibility_filter)) continue;\n+\n+        if (coin_selection_params.m_subtract_fee_outputs) {\n+            group.SetFees(CFeeRate(0), long_term_feerate);\n+        } else {\n+            group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n         }\n-        // Calculate the fees for things that aren't inputs\n-        CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+        OutputGroup pos_group = group.GetPositiveOnlyGroup();\n+        if (pos_group.effective_value > 0) positive_groups.push_back(pos_group);\n+        all_groups.push_back(group);\n+    }\n+\n+    if (coin_selection_params.use_bnb) {\n         bnb_used = true;\n-        return SelectCoinsBnB(utxo_pool, nTargetValue, cost_of_change, setCoinsRet, nValueRet, not_input_fees);\n+        return SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet, not_input_fees);\n     } else {\n-        // Filter by the min conf specs and add to utxo_pool\n-        for (const OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-            utxo_pool.push_back(group);\n-        }\n         bnb_used = false;\n-        return KnapsackSolver(nTargetValue, utxo_pool, setCoinsRet, nValueRet);\n+        return KnapsackSolver(nTargetValue + not_input_fees, all_groups, setCoinsRet, nValueRet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440260721",
      "id" : 440260721,
      "in_reply_to_id" : 439920893,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI2MDcyMQ==",
      "original_commit_id" : "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "original_line" : 2298,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430756276,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440260721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440263470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440263470"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. It is a `CFeeRate`",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T15:33:21Z",
      "diff_hunk" : "@@ -2276,27 +2276,14 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n         for (OutputGroup& group : groups) {\n             if (!group.EligibleForSpending(eligibility_filter)) continue;\n \n-            group.fee = 0;\n-            group.long_term_fee = 0;\n-            group.effective_value = 0;\n-            for (auto it = group.m_outputs.begin(); it != group.m_outputs.end(); ) {\n-                const CInputCoin& coin = *it;\n-                CAmount effective_value = coin.txout.nValue - (coin.m_input_bytes < 0 ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes));\n-                // Only include outputs that are positive effective value (i.e. not dust)\n-                if (effective_value > 0) {\n-                    group.fee += coin.m_input_bytes < 0 ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n-                    group.long_term_fee += coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n-                    if (coin_selection_params.m_subtract_fee_outputs) {\n-                        group.effective_value += coin.txout.nValue;\n-                    } else {\n-                        group.effective_value += effective_value;\n-                    }\n-                    ++it;\n-                } else {\n-                    it = group.Discard(coin);\n-                }\n+            if (coin_selection_params.m_subtract_fee_outputs) {\n+                group.SetFees(CFeeRate(0), long_term_feerate);\n+            } else {\n+                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440263470",
      "id" : 440263470,
      "in_reply_to_id" : 439933778,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI2MzQ3MA==",
      "original_commit_id" : "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "original_line" : 2282,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430759746,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440263470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440269018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440269018"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This parameter is just generally all of the overhead, regardless of it's location in a transaction. It's in vbytes, which is `weight / 4`",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T15:41:32Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440269018",
      "id" : 440269018,
      "in_reply_to_id" : 439937105,
      "line" : 2926,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI2OTAxOA==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2926,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 199,
      "pull_request_review_id" : 430766940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440269018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440271375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440271375"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`tx_noinputs_size` becomes `not_input_fees` later which ultimately increases the selection target so that the selection target covers the fees for the transaction. When subtracting the fee from the outputs, the selection target should not be increasing to cover the fees.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T15:45:01Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440271375",
      "id" : 440271375,
      "in_reply_to_id" : 439938015,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3MTM3NQ==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2818,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430769914,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440271375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440273856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440273856"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is moved code, so I think it should remain as is.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T15:48:47Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440273856",
      "id" : 440273856,
      "in_reply_to_id" : 439938861,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3Mzg1Ng==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2844,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430773233,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440273856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440274200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440274200"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T15:49:18Z",
      "diff_hunk" : "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing\n+            if (change_spend_size == -1) {\n+                coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n+            } else {\n+                coin_selection_params.change_spend_size = (size_t)change_spend_size;\n+            }\n \n-                    // Calculate the fees for things that aren't inputs\n-                    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+            // Calculate the fees for things that aren't inputs\n+            CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-                    if (!SelectCoins(vAvailableCoins, nValueToSelect + not_input_fees, setCoins, nValueIn, coin_control, coin_selection_params))\n-                    {\n-                        error = _(\"Insufficient funds\");\n-                        return false;\n-                    }\n-                }\n+            if (!SelectCoins(vAvailableCoins, nValue + not_input_fees, setCoins, selected_value, coin_control, coin_selection_params))\n+            {\n+                error = _(\"Insufficient funds\");\n+                return false;\n+            }\n \n-                const CAmount nChange = nValueIn - nValueToSelect;\n-                if (nChange > 0)\n-                {\n-                    // Fill a vout to ourself\n-                    CTxOut newTxOut(nChange, scriptChange);\n+            const CAmount nChange = selected_value - nValue;\n+            if (nChange > 0)\n+            {\n+                // Fill a vout to ourself\n+                CTxOut newTxOut(nChange, scriptChange);\n \n-                    CAmount cost_of_change = 0;\n-                    if (pick_new_inputs) {\n-                        cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n-                    }\n+                CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n \n-                    // Never create dust outputs; if we would, just\n-                    // add the dust to the fee.\n-                    // When nChange is less than the cost of the change output,\n-                    // send it to fees (this means BnB was used)\n-                    if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                // Never create dust outputs; if we would, just\n+                // add the dust to the fee.\n+                // When nChange is less than the cost of the change output,\n+                // send it to fees (this means BnB was used)\n+                if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                {\n+                    nChangePosInOut = -1;\n+                    nFeeRet = nChange;\n+                }\n+                else\n+                {\n+                    if (nChangePosInOut == -1)\n                     {\n-                        nChangePosInOut = -1;\n-                        nFeeRet += nChange;\n+                        // Insert change txn at random position:\n+                        nChangePosInOut = GetRandInt(txNew.vout.size()+1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440274200",
      "id" : 440274200,
      "in_reply_to_id" : 439939410,
      "line" : 2997,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3NDIwMA==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2997,
      "original_position" : 183,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 341,
      "pull_request_review_id" : 430773669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440274200",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440275298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440275298"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`nFeeNeeded` no longer exists. This should have been removed already. I probably forgot to rebase this branch.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T15:50:51Z",
      "diff_hunk" : "@@ -2964,7 +2912,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n     reservedest.KeepDestination();\n \n     WalletLogPrintf(\"Fee Calculation: Fee:%d Bytes:%u Needed:%d Tgt:%d (requested %d) Reason:\\\"%s\\\" Decay %.5f: Estimation: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n-              nFeeRet, nBytes, nFeeNeeded, feeCalc.returnedTarget, feeCalc.desiredTarget, StringForFeeReason(feeCalc.reason), feeCalc.est.decay,\n+              nFeeRet, nBytes, nFeeRet, feeCalc.returnedTarget, feeCalc.desiredTarget, StringForFeeReason(feeCalc.reason), feeCalc.est.decay,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440275298",
      "id" : 440275298,
      "in_reply_to_id" : 439941313,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3NTI5OA==",
      "original_commit_id" : "919abc311d5922313e962999f1cfb9358e73aed6",
      "original_line" : 2915,
      "original_position" : 349,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 430775044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440275298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Xekyo This PR is built on top of 2 other PRs. It would be better to review those first as many of your comments are for the changes in those PRs. You should start with #17458, then #17331, then this one.",
      "created_at" : "2020-06-15T15:52:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-644218689",
      "id" : 644218689,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NDIxODY4OQ==",
      "updated_at" : "2020-06-15T15:52:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/644218689",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440294189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440294189"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The default value is -1 to indicate that it isn't set.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T16:19:55Z",
      "diff_hunk" : "@@ -329,3 +332,35 @@ bool OutputGroup::EligibleForSpending(const CoinEligibilityFilter& eligibility_f\n         && m_ancestors <= eligibility_filter.max_ancestors\n         && m_descendants <= eligibility_filter.max_descendants;\n }\n+\n+void OutputGroup::SetFees(const CFeeRate effective_feerate, const CFeeRate long_term_feerate)\n+{\n+    fee = 0;\n+    long_term_fee = 0;\n+    effective_value = 0;\n+    for (CInputCoin& coin : m_outputs) {\n+        coin.m_fee = coin.m_input_bytes < 0 ? 0 : effective_feerate.GetFee(coin.m_input_bytes);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440294189",
      "id" : 440294189,
      "in_reply_to_id" : 439932004,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NDE4OQ==",
      "original_commit_id" : "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "original_line" : 359,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 430798980,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440294189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440295172"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440295172"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How is Positive unspecific? The OutputGroup has only Positive effective values.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-06-15T16:21:27Z",
      "diff_hunk" : "@@ -329,3 +332,35 @@ bool OutputGroup::EligibleForSpending(const CoinEligibilityFilter& eligibility_f\n         && m_ancestors <= eligibility_filter.max_ancestors\n         && m_descendants <= eligibility_filter.max_descendants;\n }\n+\n+void OutputGroup::SetFees(const CFeeRate effective_feerate, const CFeeRate long_term_feerate)\n+{\n+    fee = 0;\n+    long_term_fee = 0;\n+    effective_value = 0;\n+    for (CInputCoin& coin : m_outputs) {\n+        coin.m_fee = coin.m_input_bytes < 0 ? 0 : effective_feerate.GetFee(coin.m_input_bytes);\n+        fee += coin.m_fee;\n+\n+        coin.m_long_term_fee = coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n+        long_term_fee += coin.m_long_term_fee;\n+\n+        coin.effective_value = coin.txout.nValue - coin.m_fee;\n+        effective_value += coin.effective_value;\n+    }\n+}\n+\n+OutputGroup OutputGroup::GetPositiveOnlyGroup()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440295172",
      "id" : 440295172,
      "in_reply_to_id" : 439932954,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NTE3Mg==",
      "original_commit_id" : "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "original_line" : 370,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 430800189,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440295172",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@achow101: Okay, I'll take a look at them.",
      "created_at" : "2020-06-15T16:45:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-644246738",
      "id" : 644246738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NDI0NjczOA==",
      "updated_at" : "2020-06-15T16:45:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/644246738",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-06-16T19:21:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-644964774",
      "id" : 644964774,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NDk2NDc3NA==",
      "updated_at" : "2020-06-16T19:21:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/644964774",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-07-30T14:30:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-666401056",
      "id" : 666401056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjQwMTA1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T14:30:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666401056",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-10-21T13:33:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-713578748",
      "id" : 713578748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzU3ODc0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-21T13:33:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713578748",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-11-17T14:04:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-728949332",
      "id" : 728949332,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyODk0OTMzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-17T14:04:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728949332",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538887490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538887490"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Consider naming this `selected_eff_value`",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-12-08T23:27:47Z",
      "diff_hunk" : "@@ -167,6 +167,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& actual_t\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_value = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538887490",
      "id" : 538887490,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg4NzQ5MA==",
      "original_commit_id" : "82525ebeaea0ef12662519f0af2236791def62f0",
      "original_line" : 175,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 547719570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538887490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538890510"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538890510"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would be nice if the order of the parameters on `KnapsackSolver` and `SelectCoinsSRD` matched.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-12-08T23:35:09Z",
      "diff_hunk" : "@@ -2381,9 +2381,62 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n         return true;\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, long_term_feerate, eligibility_filter, false /* positive_only */);\n-    return KnapsackSolver(nTargetValue + change_fee, all_groups, setCoinsRet, nValueRet);\n+\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\n+    CAmount knapsack_fees = 0;\n+    for (const auto& coin : knapsack_coins) {\n+        knapsack_fees += coin.m_fee;\n+    }\n+\n+    std::set<CInputCoin> srd_coins;\n+    CAmount srd_value;\n+    bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538890510",
      "id" : 538890510,
      "line" : 2427,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg5MDUxMA==",
      "original_commit_id" : "c1d39948b2180d718b9a0911660f3f64ecbe7782",
      "original_line" : 2427,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 59,
      "pull_request_review_id" : 547719570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538890510",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538894963"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538894963"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "How about:\r\n\r\n```\r\nif (knapsack_ret) {\r\n        setCoinsRet = knapsack_coins;\r\n        nValueRet = knapsack_value;\r\n}\r\nif (srd_ret) {\r\n    // Use SRD if knapsack had no solution, SRD has lower fees, or SRD has more inputs for same fees\r\n    if (!knapsack_ret || srd_fees < knapsack_fees || srd_fees == knapsack_fees && srd_coins.size() > knapsack_coins.size()) {\r\n        setCoinsRet = srd_coins;\r\n        nValueRet = srd_value;\r\n    }\r\n}\r\nif (knapsack_ret || srd_ret) return true;\r\n\r\n// No solution\r\nsetCoinsRet.clear();\r\nnValueRet = 0;\r\nreturn false;\r\n```",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-12-08T23:45:46Z",
      "diff_hunk" : "@@ -2381,9 +2381,62 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n         return true;\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, long_term_feerate, eligibility_filter, false /* positive_only */);\n-    return KnapsackSolver(nTargetValue + change_fee, all_groups, setCoinsRet, nValueRet);\n+\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\n+    CAmount knapsack_fees = 0;\n+    for (const auto& coin : knapsack_coins) {\n+        knapsack_fees += coin.m_fee;\n+    }\n+\n+    std::set<CInputCoin> srd_coins;\n+    CAmount srd_value;\n+    bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);\n+    CAmount srd_fees = 0;\n+    for (const auto& coin : srd_coins) {\n+        srd_fees += coin.m_fee;\n+    }\n+\n+    if (knapsack_ret && !srd_ret) {\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    } else if (!knapsack_ret && srd_ret) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    } else if (!knapsack_ret && !srd_ret) {\n+        setCoinsRet.clear();\n+        nValueRet = 0;\n+        return false;\n+    }\n+\n+    // Both succeeded, choose the one with the smaller fees\n+    if (knapsack_fees < srd_fees) {\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    } else if (srd_fees < knapsack_fees) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    }\n+\n+    // Same fees, choose one that consolidates more (more inputs) or Knapsack in the event they are the same\n+    if (srd_coins.size() > knapsack_coins.size()) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    } else {\n+        // srd_coins.size() <= knapsack_coins.size()\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538894963",
      "id" : 538894963,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg5NDk2Mw==",
      "original_commit_id" : "c1d39948b2180d718b9a0911660f3f64ecbe7782",
      "original_line" : 2439,
      "original_position" : 60,
      "original_start_line" : 2404,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 547719570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538894963",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2020-12-08T23:53:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-741261841",
      "id" : 741261841,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MTI2MTg0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-08T23:53:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741261841",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538934539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538934539"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It would, but changes to `KnapsackSolver` are out of scope for this PR. I prefer to use the current order for `SelectCoinsSRD`.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-12-09T01:27:26Z",
      "diff_hunk" : "@@ -2381,9 +2381,62 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n         return true;\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, long_term_feerate, eligibility_filter, false /* positive_only */);\n-    return KnapsackSolver(nTargetValue + change_fee, all_groups, setCoinsRet, nValueRet);\n+\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\n+    CAmount knapsack_fees = 0;\n+    for (const auto& coin : knapsack_coins) {\n+        knapsack_fees += coin.m_fee;\n+    }\n+\n+    std::set<CInputCoin> srd_coins;\n+    CAmount srd_value;\n+    bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538934539",
      "id" : 538934539,
      "in_reply_to_id" : 538890510,
      "line" : 2427,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkzNDUzOQ==",
      "original_commit_id" : "c1d39948b2180d718b9a0911660f3f64ecbe7782",
      "original_line" : 2427,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 59,
      "pull_request_review_id" : 547767326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538934539",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538937914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538937914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-12-09T01:36:20Z",
      "diff_hunk" : "@@ -167,6 +167,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& actual_t\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_value = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538937914",
      "id" : 538937914,
      "in_reply_to_id" : 538887490,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkzNzkxNA==",
      "original_commit_id" : "82525ebeaea0ef12662519f0af2236791def62f0",
      "original_line" : 175,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 547770526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538937914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538937958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538937958"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2020-12-09T01:36:26Z",
      "diff_hunk" : "@@ -2381,9 +2381,62 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n         return true;\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, long_term_feerate, eligibility_filter, false /* positive_only */);\n-    return KnapsackSolver(nTargetValue + change_fee, all_groups, setCoinsRet, nValueRet);\n+\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\n+    CAmount knapsack_fees = 0;\n+    for (const auto& coin : knapsack_coins) {\n+        knapsack_fees += coin.m_fee;\n+    }\n+\n+    std::set<CInputCoin> srd_coins;\n+    CAmount srd_value;\n+    bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);\n+    CAmount srd_fees = 0;\n+    for (const auto& coin : srd_coins) {\n+        srd_fees += coin.m_fee;\n+    }\n+\n+    if (knapsack_ret && !srd_ret) {\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    } else if (!knapsack_ret && srd_ret) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    } else if (!knapsack_ret && !srd_ret) {\n+        setCoinsRet.clear();\n+        nValueRet = 0;\n+        return false;\n+    }\n+\n+    // Both succeeded, choose the one with the smaller fees\n+    if (knapsack_fees < srd_fees) {\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    } else if (srd_fees < knapsack_fees) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    }\n+\n+    // Same fees, choose one that consolidates more (more inputs) or Knapsack in the event they are the same\n+    if (srd_coins.size() > knapsack_coins.size()) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    } else {\n+        // srd_coins.size() <= knapsack_coins.size()\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538937958",
      "id" : 538937958,
      "in_reply_to_id" : 538894963,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkzNzk1OA==",
      "original_commit_id" : "c1d39948b2180d718b9a0911660f3f64ecbe7782",
      "original_line" : 2439,
      "original_position" : 60,
      "original_start_line" : 2404,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 547770569,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-04-29T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538937958",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-02-01T11:01:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-770770843",
      "id" : 770770843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MDc3MDg0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-01T11:01:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/770770843",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, will review if #17331 is merged. ",
      "created_at" : "2021-02-04T18:20:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-773510351",
      "id" : 773510351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MzUxMDM1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-04T18:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/773510351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-08T22:14:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-793120234",
      "id" : 793120234,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzEyMDIzNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T22:14:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793120234",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-17T02:22:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-800742357",
      "id" : 800742357,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMDc0MjM1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-17T02:22:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800742357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-04-29T15:37:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-829343661",
      "id" : 829343661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyOTM0MzY2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-29T15:37:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/829343661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623422858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623422858"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Need dat doxygen (also to confirm my understanding)\r\n```suggestion\r\n/** Select coins by Single Random Draw, picking random OutputGroups from utxo_pool until the target\r\n * value is satisfied.\r\n * @param[in]   utxo_pool   All eligible OutputGroups no additional filter will be applied.\r\n * @param[out]  out_set     Populated with the coins selected. Any coins in the set will be cleared\r\n *                          at the start, so don't put pre-selected coins here.\r\n * @param[out]  value_ret   Total aggregated nValue of all selected coins.\r\n * @returns true if successful, false otherwise.\r\n */\r\nbool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret);\r\n```",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2021-04-29T21:43:54Z",
      "diff_hunk" : "@@ -102,26 +138,27 @@ struct OutputGroup\n     CAmount effective_value{0};\n     /** The fee to spend these UTXOs at the effective feerate. */\n     CAmount fee{0};\n-    /** The target feerate of the transaction we're trying to build. */\n-    CFeeRate m_effective_feerate{0};\n     /** The fee to spend these UTXOs at the long term feerate. */\n     CAmount long_term_fee{0};\n-    /** The feerate for spending a created change output eventually (i.e. not urgently, and thus at\n-     * a lower feerate). Calculated using long term fee estimate. This is used to decide whether\n-     * it could be economical to create a change output. */\n-    CFeeRate m_long_term_feerate{0};\n+    /** Coin selection parameters relevant to this OutputGroup.\n+     * The particular parameters used are the effective feerate (to calculate the effective value and fee),\n+     * the long term feerate (to calculate the long term fee), and whether the fee is to be subtracted from the outputs.\n+     */\n+    CoinSelectionParams m_cs_params;\n \n     OutputGroup() {}\n-    OutputGroup(const CFeeRate& effective_feerate, const CFeeRate& long_term_feerate) :\n-        m_effective_feerate(effective_feerate),\n-        m_long_term_feerate(long_term_feerate)\n+    OutputGroup(const CoinSelectionParams& params) :\n+        m_cs_params(params)\n     {}\n \n     void Insert(const CInputCoin& output, int depth, bool from_me, size_t ancestors, size_t descendants, bool positive_only);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n+    CAmount GetSelectionAmount() const;\n };\n \n-bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret, CAmount not_input_fees);\n+bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n+\n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623422858",
      "id" : 623422858,
      "line" : 161,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQyMjg1OA==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 161,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 77,
      "pull_request_review_id" : 648681017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T22:37:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623422858",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623439578"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623439578"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    const bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\r\n```",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2021-04-29T22:20:05Z",
      "diff_hunk" : "@@ -2393,44 +2394,66 @@ const CTxOut& CWallet::FindNonChangeParentOutput(const CTransaction& tx, int out\n }\n \n bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                                 std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params, bool& bnb_used) const\n+                                 std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params) const\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    if (coin_selection_params.use_bnb) {\n-        // Get the feerate for effective value.\n-        // When subtracting the fee from the outputs, we want the effective feerate to be 0\n-        CFeeRate effective_feerate{0};\n-        if (!coin_selection_params.m_subtract_fee_outputs) {\n-            effective_feerate = coin_selection_params.m_effective_feerate;\n-        }\n+    // Cost of change is the cost of creating the change output + cost of spending the change output in the future.\n+    // For creating the change output now, we use the effective feerate.\n+    // For spending the change output in the future, we use the discard feerate for now.\n+    // So cost of change = (change output size * effective feerate) + (size of spending change output * discard feerate)\n+    const CAmount change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n+    const CAmount cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    std::vector<OutputGroup> positive_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, coin_selection_params, eligibility_filter, true /* positive_only */);\n+    if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n+        return true;\n+    }\n \n-        std::vector<OutputGroup> groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, coin_selection_params.m_long_term_feerate, eligibility_filter, true /* positive_only */);\n+    // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n+    std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, coin_selection_params, eligibility_filter, false /* positive_only */);\n \n-        // Calculate cost of change\n-        CAmount cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623439578",
      "id" : 623439578,
      "line" : 2419,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQzOTU3OA==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 2419,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 45,
      "pull_request_review_id" : 648681017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T22:37:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623439578",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623439659"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623439659"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    const bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);\r\n```",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2021-04-29T22:20:18Z",
      "diff_hunk" : "@@ -2393,44 +2394,66 @@ const CTxOut& CWallet::FindNonChangeParentOutput(const CTransaction& tx, int out\n }\n \n bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                                 std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params, bool& bnb_used) const\n+                                 std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params) const\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    if (coin_selection_params.use_bnb) {\n-        // Get the feerate for effective value.\n-        // When subtracting the fee from the outputs, we want the effective feerate to be 0\n-        CFeeRate effective_feerate{0};\n-        if (!coin_selection_params.m_subtract_fee_outputs) {\n-            effective_feerate = coin_selection_params.m_effective_feerate;\n-        }\n+    // Cost of change is the cost of creating the change output + cost of spending the change output in the future.\n+    // For creating the change output now, we use the effective feerate.\n+    // For spending the change output in the future, we use the discard feerate for now.\n+    // So cost of change = (change output size * effective feerate) + (size of spending change output * discard feerate)\n+    const CAmount change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n+    const CAmount cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    std::vector<OutputGroup> positive_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, coin_selection_params, eligibility_filter, true /* positive_only */);\n+    if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n+        return true;\n+    }\n \n-        std::vector<OutputGroup> groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, coin_selection_params.m_long_term_feerate, eligibility_filter, true /* positive_only */);\n+    // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n+    std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, coin_selection_params, eligibility_filter, false /* positive_only */);\n \n-        // Calculate cost of change\n-        CAmount cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\n+    CAmount knapsack_fees = 0;\n+    for (const auto& coin : knapsack_coins) {\n+        knapsack_fees += coin.m_fee;\n+    }\n \n-        // Calculate the fees for things that aren't inputs\n-        CAmount not_input_fees = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.tx_noinputs_size);\n-        bnb_used = true;\n-        return SelectCoinsBnB(groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet, not_input_fees);\n-    } else {\n-        std::vector<OutputGroup> groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, CFeeRate(0), CFeeRate(0), eligibility_filter, false /* positive_only */);\n+    std::set<CInputCoin> srd_coins;\n+    CAmount srd_value;\n+    bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623439659",
      "id" : 623439659,
      "line" : 2427,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQzOTY1OQ==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 2427,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 59,
      "pull_request_review_id" : 648681017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T22:37:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623439659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623440967"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623440967"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Pretty basic conceptual question, but why only SRD once? Why not run it, say, 100 times, and pick the best one before comparing with knapsack?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2021-04-29T22:23:19Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623440967",
      "id" : 623440967,
      "line" : 171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQ0MDk2Nw==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 171,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 121,
      "pull_request_review_id" : 648681017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T22:37:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623440967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623445784"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623445784"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I know you only pass in positive groups, but I wonder if it could be a good sanity check to add an `Assume(group.effective_value > 0)` here?",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2021-04-29T22:35:00Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_eff_value = 0;\n+    Shuffle(utxo_pool.begin(), utxo_pool.end(), FastRandomContext());\n+    for (const auto& group : utxo_pool) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623445784",
      "id" : 623445784,
      "line" : 178,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQ0NTc4NA==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 178,
      "original_position" : 128,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 128,
      "pull_request_review_id" : 648681017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T22:37:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623445784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625209418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625209418"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please add doxygen comments for new functions.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2021-05-03T16:32:13Z",
      "diff_hunk" : "@@ -102,26 +138,27 @@ struct OutputGroup\n     CAmount effective_value{0};\n     /** The fee to spend these UTXOs at the effective feerate. */\n     CAmount fee{0};\n-    /** The target feerate of the transaction we're trying to build. */\n-    CFeeRate m_effective_feerate{0};\n     /** The fee to spend these UTXOs at the long term feerate. */\n     CAmount long_term_fee{0};\n-    /** The feerate for spending a created change output eventually (i.e. not urgently, and thus at\n-     * a lower feerate). Calculated using long term fee estimate. This is used to decide whether\n-     * it could be economical to create a change output. */\n-    CFeeRate m_long_term_feerate{0};\n+    /** Coin selection parameters relevant to this OutputGroup.\n+     * The particular parameters used are the effective feerate (to calculate the effective value and fee),\n+     * the long term feerate (to calculate the long term fee), and whether the fee is to be subtracted from the outputs.\n+     */\n+    CoinSelectionParams m_cs_params;\n \n     OutputGroup() {}\n-    OutputGroup(const CFeeRate& effective_feerate, const CFeeRate& long_term_feerate) :\n-        m_effective_feerate(effective_feerate),\n-        m_long_term_feerate(long_term_feerate)\n+    OutputGroup(const CoinSelectionParams& params) :\n+        m_cs_params(params)\n     {}\n \n     void Insert(const CInputCoin& output, int depth, bool from_me, size_t ancestors, size_t descendants, bool positive_only);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n+    CAmount GetSelectionAmount() const;\n };\n \n-bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret, CAmount not_input_fees);\n+bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n+\n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625209418",
      "id" : 625209418,
      "line" : 161,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTIwOTQxOA==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 161,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 77,
      "pull_request_review_id" : 650514955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-03T16:58:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625209418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625212261"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625212261"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This calls `std::swap()` up to n-1 times on utxo pool, which seems unnecessary. How about creating a vector of ints from 0 to n-1, shuffling those, and then using that to index into `utxo_pool`. That'd also allow `utxo_pool` to be passed in as a const reference.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2021-05-03T16:37:01Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_eff_value = 0;\n+    Shuffle(utxo_pool.begin(), utxo_pool.end(), FastRandomContext());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625212261",
      "id" : 625212261,
      "line" : 177,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTIxMjI2MQ==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 177,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 127,
      "pull_request_review_id" : 650514955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-03T16:58:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625212261",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625224809"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625224809"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Consider returning a `std::optional<std::pair<std::set<CInputCoin>, CAmount>>` rather than using out references and returning a bool to indicate success.",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2021-05-03T16:57:26Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625224809",
      "id" : 625224809,
      "line" : 171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTIyNDgwOQ==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 171,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 121,
      "pull_request_review_id" : 650514955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-03T16:58:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625224809",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625225206"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625225206"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is there a reason this param is named `utxo_pool` rather than `groups`?\r\n\r\n```suggestion\r\nbool SelectCoinsSRD(std::vector<OutputGroup>& groups, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\r\n```",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2021-05-03T16:58:06Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625225206",
      "id" : 625225206,
      "line" : 171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTIyNTIwNg==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 171,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 121,
      "pull_request_review_id" : 650514955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-03T16:58:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625225206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625225512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625225512"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Pass simple types like `CAmount` by value:\r\n\r\n```suggestion\r\nbool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, CAmount target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\r\n```",
      "commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "created_at" : "2021-05-03T16:58:35Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625225512",
      "id" : 625225512,
      "line" : 171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTIyNTUxMg==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 171,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 121,
      "pull_request_review_id" : 650514955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-03T16:58:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625225512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Converting this to a draft as I will be introducing some refactors and other changes that this will be based on.",
      "created_at" : "2021-05-20T20:37:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-845460118",
      "id" : 845460118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NTQ2MDExOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-20T20:37:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845460118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've rebased this onto #22009 because it uses the waste metric to decide which solution to use which I think is a much better and more consistent way than what was implemented here previously.",
      "created_at" : "2021-05-21T00:31:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-845569438",
      "id" : 845569438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NTU2OTQzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-21T00:31:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845569438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r650163605"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650163605"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That would minimize the input set at high fees and maximize the input set at low fees. If you wanted that, you could directly do largest first selection at high fees and smallest first at low fees. My gut feeling would be that it would grind down the larger UTXOs and very aggressively consolidate your smallest UTXOs at low fees, potentially leading to a large count of similarly sized UTXOs in the mid range. Just picking once with SRD would be expected to give a more even selection of the UTXO pool: if you have a lot of small UTXOs, you'll get more of those, if you only have few and large UTXOs, you'll get a solution with one or few. I.e. one could do that, but it would make the behavior change more extremely respective to the feerate, and I'm not sure whether more extreme is better.",
      "commit_id" : "34fd4f68a4ffe5f8d39df1254b20b019703cdf32",
      "created_at" : "2021-06-11T17:42:07Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r650163605",
      "id" : 650163605,
      "in_reply_to_id" : 623440967,
      "line" : 171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDE2MzYwNQ==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 171,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 4,
      "pull_request_review_id" : 682082283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-11T17:42:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650163605",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701334082"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701334082"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`utxo_pool` is a more descriptive name.",
      "commit_id" : "e97a76fdb568cedc0049d38d63eeb3504adc132d",
      "created_at" : "2021-09-02T18:40:13Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701334082",
      "id" : 701334082,
      "in_reply_to_id" : 625225206,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTMzNDA4Mg==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 171,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 745401510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T18:40:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701334082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701362845"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701362845"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added docs.",
      "commit_id" : "e97a76fdb568cedc0049d38d63eeb3504adc132d",
      "created_at" : "2021-09-02T19:26:58Z",
      "diff_hunk" : "@@ -102,26 +138,27 @@ struct OutputGroup\n     CAmount effective_value{0};\n     /** The fee to spend these UTXOs at the effective feerate. */\n     CAmount fee{0};\n-    /** The target feerate of the transaction we're trying to build. */\n-    CFeeRate m_effective_feerate{0};\n     /** The fee to spend these UTXOs at the long term feerate. */\n     CAmount long_term_fee{0};\n-    /** The feerate for spending a created change output eventually (i.e. not urgently, and thus at\n-     * a lower feerate). Calculated using long term fee estimate. This is used to decide whether\n-     * it could be economical to create a change output. */\n-    CFeeRate m_long_term_feerate{0};\n+    /** Coin selection parameters relevant to this OutputGroup.\n+     * The particular parameters used are the effective feerate (to calculate the effective value and fee),\n+     * the long term feerate (to calculate the long term fee), and whether the fee is to be subtracted from the outputs.\n+     */\n+    CoinSelectionParams m_cs_params;\n \n     OutputGroup() {}\n-    OutputGroup(const CFeeRate& effective_feerate, const CFeeRate& long_term_feerate) :\n-        m_effective_feerate(effective_feerate),\n-        m_long_term_feerate(long_term_feerate)\n+    OutputGroup(const CoinSelectionParams& params) :\n+        m_cs_params(params)\n     {}\n \n     void Insert(const CInputCoin& output, int depth, bool from_me, size_t ancestors, size_t descendants, bool positive_only);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n+    CAmount GetSelectionAmount() const;\n };\n \n-bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret, CAmount not_input_fees);\n+bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n+\n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701362845",
      "id" : 701362845,
      "in_reply_to_id" : 623422858,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2Mjg0NQ==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 186,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : null,
      "pull_request_review_id" : 745439730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T19:26:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701362845",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701362995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701362995"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e97a76fdb568cedc0049d38d63eeb3504adc132d",
      "created_at" : "2021-09-02T19:27:09Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_eff_value = 0;\n+    Shuffle(utxo_pool.begin(), utxo_pool.end(), FastRandomContext());\n+    for (const auto& group : utxo_pool) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701362995",
      "id" : 701362995,
      "in_reply_to_id" : 623445784,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2Mjk5NQ==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 178,
      "original_position" : 128,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 745439890,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T19:27:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701362995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363035"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e97a76fdb568cedc0049d38d63eeb3504adc132d",
      "created_at" : "2021-09-02T19:27:15Z",
      "diff_hunk" : "@@ -102,26 +138,27 @@ struct OutputGroup\n     CAmount effective_value{0};\n     /** The fee to spend these UTXOs at the effective feerate. */\n     CAmount fee{0};\n-    /** The target feerate of the transaction we're trying to build. */\n-    CFeeRate m_effective_feerate{0};\n     /** The fee to spend these UTXOs at the long term feerate. */\n     CAmount long_term_fee{0};\n-    /** The feerate for spending a created change output eventually (i.e. not urgently, and thus at\n-     * a lower feerate). Calculated using long term fee estimate. This is used to decide whether\n-     * it could be economical to create a change output. */\n-    CFeeRate m_long_term_feerate{0};\n+    /** Coin selection parameters relevant to this OutputGroup.\n+     * The particular parameters used are the effective feerate (to calculate the effective value and fee),\n+     * the long term feerate (to calculate the long term fee), and whether the fee is to be subtracted from the outputs.\n+     */\n+    CoinSelectionParams m_cs_params;\n \n     OutputGroup() {}\n-    OutputGroup(const CFeeRate& effective_feerate, const CFeeRate& long_term_feerate) :\n-        m_effective_feerate(effective_feerate),\n-        m_long_term_feerate(long_term_feerate)\n+    OutputGroup(const CoinSelectionParams& params) :\n+        m_cs_params(params)\n     {}\n \n     void Insert(const CInputCoin& output, int depth, bool from_me, size_t ancestors, size_t descendants, bool positive_only);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n+    CAmount GetSelectionAmount() const;\n };\n \n-bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret, CAmount not_input_fees);\n+bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n+\n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363035",
      "id" : 701363035,
      "in_reply_to_id" : 625209418,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2MzAzNQ==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 186,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : null,
      "pull_request_review_id" : 745439944,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T19:27:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363091"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e97a76fdb568cedc0049d38d63eeb3504adc132d",
      "created_at" : "2021-09-02T19:27:20Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_eff_value = 0;\n+    Shuffle(utxo_pool.begin(), utxo_pool.end(), FastRandomContext());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363091",
      "id" : 701363091,
      "in_reply_to_id" : 625212261,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2MzA5MQ==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 177,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 745440014,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T19:27:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363091",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e97a76fdb568cedc0049d38d63eeb3504adc132d",
      "created_at" : "2021-09-02T19:27:46Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363362",
      "id" : 701363362,
      "in_reply_to_id" : 625224809,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2MzM2Mg==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 171,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 745440357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T19:27:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363413"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363413"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e97a76fdb568cedc0049d38d63eeb3504adc132d",
      "created_at" : "2021-09-02T19:27:52Z",
      "diff_hunk" : "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363413",
      "id" : 701363413,
      "in_reply_to_id" : 625225512,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2MzQxMw==",
      "original_commit_id" : "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "original_line" : 171,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 745440427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T19:27:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363413",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]
