[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17261](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17261.html) (Make ScriptPubKeyMan an actual interface and the wallet to have multiple by achow101)\n* [#17037](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17037.html) (Testschains: Many regtests with different genesis and default datadir by jtimon)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-11-24T23:54:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-557942690",
      "id" : 557942690,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17578",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1Nzk0MjY5MA==",
      "updated_at" : "2019-11-25T04:19:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557942690",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17578#discussion_r350790994"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/350790994"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since you've named v0.21 explicitly in the release notes, you could also do so here, and also advise users how to re-enabled the deprecated behaviour (by using `-deprecatedrpc=labelspurpose`)",
      "commit_id" : "b2e5ca17594a097472948d1943fe5424d81f94c1",
      "created_at" : "2019-11-26T14:58:09Z",
      "diff_hunk" : "@@ -3709,60 +3709,67 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     }\n \n             RPCHelpMan{\"getaddressinfo\",\n-                \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n-                \"to be in the wallet.\\n\",\n+                \"\\nReturn information about the given bitcoin address.\\n\"\n+                \"Some of the information will only be present if the address is in the active wallet.\\n\",\n                 {\n-                    {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address to get the information of.\"},\n+                    {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address for which to get information.\"},\n                 },\n                 RPCResult{\n             \"{\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n-            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex-encoded scriptPubKey generated by the address\\n\"\n-            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n-            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"solvable\\\" : true|false,      (boolean) Whether we know how to spend coins sent to this address, ignoring the possible lack of private keys\\n\"\n-            \"  \\\"desc\\\" : \\\"desc\\\",            (string, optional) A descriptor for spending coins sent to this address (only when solvable)\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"ischange\\\" : true|false,      (boolean) If the address was used for change output\\n\"\n-            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is a witness address\\n\"\n-            \"  \\\"witness_version\\\" : version   (numeric, optional) The version number of the witness program\\n\"\n-            \"  \\\"witness_program\\\" : \\\"hex\\\"     (string, optional) The hex value of the witness program\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Only if \\\"isscript\\\" is true and the redeemscript is known. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash, witness_unknown\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"pubkeys\\\"                     (string, optional) Array of pubkeys associated with the known redeemscript (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",              (string) The bitcoin address validated.\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",             (string) The hex-encoded scriptPubKey generated by the address.\\n\"\n+            \"  \\\"ismine\\\" : true|false,              (boolean) If the address is yours.\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,         (boolean) If the address is watchonly.\\n\"\n+            \"  \\\"solvable\\\" : true|false,            (boolean) If we know how to spend coins sent to this address, ignoring the possible lack of private keys.\\n\"\n+            \"  \\\"desc\\\" : \\\"desc\\\",                    (string, optional) A descriptor for spending coins sent to this address (only when solvable).\\n\"\n+            \"  \\\"isscript\\\" : true|false,            (boolean) If the key is a script.\\n\"\n+            \"  \\\"ischange\\\" : true|false,            (boolean) If the address was used for change output.\\n\"\n+            \"  \\\"iswitness\\\" : true|false,           (boolean) If the address is a witness address.\\n\"\n+            \"  \\\"witness_version\\\" : version         (numeric, optional) The version number of the witness program.\\n\"\n+            \"  \\\"witness_program\\\" : \\\"hex\\\"           (string, optional) The hex value of the witness program.\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"                   (string, optional) The output script type. Only if isscript is true and the redeemscript is known. Possible\\n\"\n+            \"                                                         types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash,\\n\"\n+            \"                                                         witness_v0_scripthash, witness_unknown.\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                      (string, optional) The redeemscript for the p2sh address.\\n\"\n+            \"  \\\"pubkeys\\\"                           (array, optional) Array of pubkeys associated with the known redeemscript (only if script is multisig).\\n\"\n             \"    [\\n\"\n-            \"      \\\"pubkey\\\"\\n\"\n+            \"      \\\"pubkey\\\" (string)\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string, optional) The hex value of the raw public key, for single-key addresses (possibly embedded in P2SH or P2WSH)\\n\"\n-            \"  \\\"embedded\\\" : {...},           (object, optional) Information about the address embedded in P2SH or P2WSH, if relevant and known. It includes all getaddressinfo output fields for the embedded address, excluding metadata (\\\"timestamp\\\", \\\"hdkeypath\\\", \\\"hdseedid\\\") and relation to the wallet (\\\"ismine\\\", \\\"iswatchonly\\\").\\n\"\n-            \"  \\\"iscompressed\\\" : true|false,  (boolean, optional) If the pubkey is compressed\\n\"\n-            \"  \\\"label\\\" :  \\\"label\\\"         (string) The label associated with the address, \\\"\\\" is the default label\\n\"\n-            \"  \\\"timestamp\\\" : timestamp,      (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n-            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n-            \"  \\\"hdseedid\\\" : \\\"<hash160>\\\"      (string, optional) The Hash160 of the HD seed\\n\"\n-            \"  \\\"hdmasterfingerprint\\\" : \\\"<hash160>\\\" (string, optional) The fingperint of the master key.\\n\"\n-            \"  \\\"labels\\\"                      (object) Array of labels associated with the address.\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx              (numeric, optional) The number of signatures required to spend multisig output (only if script is multisig).\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",          (string, optional) The hex value of the raw public key for single-key addresses (possibly embedded in P2SH or P2WSH).\\n\"\n+            \"  \\\"embedded\\\" : {...},                 (object, optional) Information about the address embedded in P2SH or P2WSH, if relevant and known. Includes all\\n\"\n+            \"                                                         getaddressinfo output fields for the embedded address, excluding metadata (timestamp, hdkeypath,\\n\"\n+            \"                                                         hdseedid) and relation to the wallet (ismine, iswatchonly).\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,        (boolean, optional) If the pubkey is compressed.\\n\"\n+            \"  \\\"label\\\" :  \\\"label\\\"                  (string) The label associated with the address. Defaults to \\\"\\\". Equivalent to the label name in the labels array below.\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,            (number, optional) The creation time of the key if available, expressed in seconds since Epoch Time (Jan 1 1970 GMT).\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"             (string, optional) The HD keypath, if the key is HD and available.\\n\"\n+            \"  \\\"hdseedid\\\" : \\\"<hash160>\\\"            (string, optional) The Hash160 of the HD seed.\\n\"\n+            \"  \\\"hdmasterfingerprint\\\" : \\\"<hash160>\\\" (string, optional) The fingerprint of the master key.\\n\"\n+            \"  \\\"labels\\\"                            (object) An array of labels associated with the address. Currently limited to one label but returned\\n\"\n+            \"                                               as an array to keep the API stable if multiple labels are enabled in the future.\\n\"\n             \"    [\\n\"\n+            \"      \\\"label name\\\" (string) The label name. Defaults to \\\"\\\". Equivalent to the label field above.\\n\"\n+            \"      ,...\\n\"\n+            \"    DEPRECATED:\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17578#discussion_r350790994",
      "id" : 350790994,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDc5MDk5NA==",
      "original_commit_id" : "b2e5ca17594a097472948d1943fe5424d81f94c1",
      "original_position" : 84,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 84,
      "pull_request_review_id" : 323043968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17578",
      "updated_at" : "2019-11-26T15:00:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/350790994",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17578#discussion_r350791540"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/350791540"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moving this inside the if block is a behaviour change (previously an empty array would be added to the return object if the address had no labels)",
      "commit_id" : "b2e5ca17594a097472948d1943fe5424d81f94c1",
      "created_at" : "2019-11-26T14:58:55Z",
      "diff_hunk" : "@@ -3802,15 +3825,24 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n         }\n     }\n \n-    // Currently only one label can be associated with an address, return an array\n-    // so the API remains stable if we allow multiple labels to be associated with\n-    // an address.\n+    // Return a `labels` array containing the label associated with the address,\n+    // equivalent to the `label` field above. Currently only one label can be\n+    // associated with an address, but we return an array so the API remains\n+    // stable if we allow multiple labels to be associated with an address in\n+    // the future.\n+    //\n+    // DEPRECATED: The previous behavior of returning an array containing a JSON\n+    // object of `name` and `purpose` key/value pairs has been deprecated.\n     UniValue labels(UniValue::VARR);\n     std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(dest);\n     if (mi != pwallet->mapAddressBook.end()) {\n-        labels.push_back(AddressBookDataToJSON(mi->second, true));\n+        if (pwallet->chain().rpcEnableDeprecated(\"labelspurpose\")) {\n+            labels.push_back(AddressBookDataToJSON(mi->second, true));\n+        } else {\n+            labels.push_back(mi->second.name);\n+        }\n+        ret.pushKV(\"labels\", std::move(labels));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17578#discussion_r350791540",
      "id" : 350791540,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDc5MTU0MA==",
      "original_commit_id" : "b2e5ca17594a097472948d1943fe5424d81f94c1",
      "original_position" : 174,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 174,
      "pull_request_review_id" : 323043968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17578",
      "updated_at" : "2019-11-26T15:00:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/350791540",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17578#discussion_r350792332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/350792332"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's better to just add the test to the `rpc_deprecated.py` test file.",
      "commit_id" : "b2e5ca17594a097472948d1943fe5424d81f94c1",
      "created_at" : "2019-11-26T15:00:07Z",
      "diff_hunk" : "@@ -211,6 +211,7 @@\n     'p2p_permissions.py',\n     'feature_blocksdir.py',\n     'feature_config_args.py',\n+    'rpc_getaddressinfo_labels_purpose_deprecation.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17578#discussion_r350792332",
      "id" : 350792332,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDc5MjMzMg==",
      "original_commit_id" : "b2e5ca17594a097472948d1943fe5424d81f94c1",
      "original_position" : 4,
      "path" : "test/functional/test_runner.py",
      "position" : 4,
      "pull_request_review_id" : 323043968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17578",
      "updated_at" : "2019-11-26T15:00:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/350792332",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I also think you need to squash _pc: simplify getaddressinfo labels, deprecate previous behavior_ and _test: update getaddressinfo labels tests_ commits. I think the intermediate commit with the RPC changes but not the test changes breaks git bisect.",
      "created_at" : "2019-11-26T15:04:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-558670521",
      "id" : 558670521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17578",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1ODY3MDUyMQ==",
      "updated_at" : "2019-11-26T15:04:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558670521",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebase please!",
      "created_at" : "2019-11-26T16:34:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-558711809",
      "id" : 558711809,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17578",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1ODcxMTgwOQ==",
      "updated_at" : "2019-11-26T16:34:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558711809",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
