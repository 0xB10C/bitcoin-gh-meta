[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2019-09-04T22:10:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#issuecomment-528110361",
      "id" : 528110361,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16805",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyODExMDM2MQ==",
      "updated_at" : "2019-09-11T20:39:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/528110361",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r321632730"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321632730"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would prefer adding this to the current `BENCH` category, it includes more timings like this. Adding a new category seems overkill to me.",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-06T08:38:02Z",
      "diff_hunk" : "@@ -54,6 +54,7 @@ namespace BCLog {\n         COINDB      = (1 << 18),\n         QT          = (1 << 19),\n         LEVELDB     = (1 << 20),\n+        DISKFLUSH   = (1 << 21),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r321632730",
      "id" : 321632730,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTYzMjczMA==",
      "original_commit_id" : "6fa89eda14a9bf05116eacf1a3afff4b1f897f81",
      "original_position" : 4,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 284728493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321632730",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-09-09T11:00:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#issuecomment-529417725",
      "id" : 529417725,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16805",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyOTQxNzcyNQ==",
      "updated_at" : "2019-09-09T11:00:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529417725",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r322398563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322398563"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, I think that makes sense. Fixed.",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-09T18:49:15Z",
      "diff_hunk" : "@@ -54,6 +54,7 @@ namespace BCLog {\n         COINDB      = (1 << 18),\n         QT          = (1 << 19),\n         LEVELDB     = (1 << 20),\n+        DISKFLUSH   = (1 << 21),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r322398563",
      "id" : 322398563,
      "in_reply_to_id" : 321632730,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjM5ODU2Mw==",
      "original_commit_id" : "6fa89eda14a9bf05116eacf1a3afff4b1f897f81",
      "original_position" : 4,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 285710781,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322398563",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the looks so far. I've taken @promag's advice and have added a more generally useful RAII utility for logging times, `BCLog::Timer`.",
      "created_at" : "2019-09-19T18:15:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#issuecomment-533248258",
      "id" : 533248258,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16805",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMzI0ODI1OA==",
      "updated_at" : "2019-09-19T18:15:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/533248258",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r326326097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/326326097"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could say `BENCH_MICROS` to be more specific?",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-19T18:39:44Z",
      "diff_hunk" : "@@ -163,4 +166,84 @@ static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args\n     }\n }\n \n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! Log prefix; usually the name of the function this was created in.\n+    std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    BCLog::LogFlags m_log_category{};\n+\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(prefix),\n+            m_title(end_msg),\n+            m_start_t(GetTime<std::chrono::microseconds>()),\n+            m_log_category(log_category) { }\n+\n+    ~Timer()\n+    {\n+        this->Log(strprintf(\"%s completed\", m_title));\n+    }\n+\n+    void Log(const std::string& msg)\n+    {\n+        const std::string full_msg = this->LogMsg(msg);\n+\n+        if (m_log_category == BCLog::LogFlags::ALL) {\n+            LogPrintf(full_msg.c_str()); /* No newline */\n+        } else {\n+            LogPrint(m_log_category, full_msg.c_str()); /* No newline */\n+        }\n+    }\n+\n+    std::string LogMsg(const std::string& msg)\n+    {\n+        std::string units = \"\";\n+        float divisor = 1;\n+\n+        if (std::is_same<TimeType, std::chrono::microseconds>::value) {\n+            units = \"Î¼s\";\n+        } else if (std::is_same<TimeType, std::chrono::milliseconds>::value) {\n+            units = \"ms\";\n+            divisor = 1000.;\n+        } else if (std::is_same<TimeType, std::chrono::seconds>::value) {\n+            units = \"s\";\n+            divisor = 1000. * 1000.;\n+        }\n+\n+        const auto end_time = GetTime<std::chrono::microseconds>() - m_start_t;\n+        const float time_ms = end_time.count() / divisor;\n+        return strprintf(\"%s: %s (%.2f%s)\\n\", m_prefix, msg, time_ms, units);\n+    }\n+\n+private:\n+    std::chrono::microseconds m_start_t{};\n+};\n+\n+} // namespace BCLog\n+\n+#define PASTE(x, y) x ## y\n+#define PASTE2(x, y) PASTE(x, y)\n+#define TIME_MICROS(end_msg, ...) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r326326097",
      "id" : 326326097,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNjMyNjA5Nw==",
      "original_commit_id" : "cad68f59ff9a95e6e4f7fe9cce61705563bb1409",
      "original_position" : 90,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 290766710,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/326326097",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK cad68f59ff9a95e6e4f7fe9cce61705563bb1409",
      "created_at" : "2019-09-19T18:40:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#issuecomment-533257776",
      "id" : 533257776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16805",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMzI1Nzc3Ng==",
      "updated_at" : "2019-09-19T18:40:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/533257776",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r326386091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/326386091"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've changed to `LOG_TIME_*`, hope you like that.",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-19T21:12:44Z",
      "diff_hunk" : "@@ -163,4 +166,84 @@ static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args\n     }\n }\n \n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! Log prefix; usually the name of the function this was created in.\n+    std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    BCLog::LogFlags m_log_category{};\n+\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(prefix),\n+            m_title(end_msg),\n+            m_start_t(GetTime<std::chrono::microseconds>()),\n+            m_log_category(log_category) { }\n+\n+    ~Timer()\n+    {\n+        this->Log(strprintf(\"%s completed\", m_title));\n+    }\n+\n+    void Log(const std::string& msg)\n+    {\n+        const std::string full_msg = this->LogMsg(msg);\n+\n+        if (m_log_category == BCLog::LogFlags::ALL) {\n+            LogPrintf(full_msg.c_str()); /* No newline */\n+        } else {\n+            LogPrint(m_log_category, full_msg.c_str()); /* No newline */\n+        }\n+    }\n+\n+    std::string LogMsg(const std::string& msg)\n+    {\n+        std::string units = \"\";\n+        float divisor = 1;\n+\n+        if (std::is_same<TimeType, std::chrono::microseconds>::value) {\n+            units = \"Î¼s\";\n+        } else if (std::is_same<TimeType, std::chrono::milliseconds>::value) {\n+            units = \"ms\";\n+            divisor = 1000.;\n+        } else if (std::is_same<TimeType, std::chrono::seconds>::value) {\n+            units = \"s\";\n+            divisor = 1000. * 1000.;\n+        }\n+\n+        const auto end_time = GetTime<std::chrono::microseconds>() - m_start_t;\n+        const float time_ms = end_time.count() / divisor;\n+        return strprintf(\"%s: %s (%.2f%s)\\n\", m_prefix, msg, time_ms, units);\n+    }\n+\n+private:\n+    std::chrono::microseconds m_start_t{};\n+};\n+\n+} // namespace BCLog\n+\n+#define PASTE(x, y) x ## y\n+#define PASTE2(x, y) PASTE(x, y)\n+#define TIME_MICROS(end_msg, ...) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r326386091",
      "id" : 326386091,
      "in_reply_to_id" : 326326097,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNjM4NjA5MQ==",
      "original_commit_id" : "cad68f59ff9a95e6e4f7fe9cce61705563bb1409",
      "original_position" : 90,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 290846582,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/326386091",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r327685274"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327685274"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could std::move `prefix` and `end_msg` to avoid allocations.",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-24T15:32:19Z",
      "diff_hunk" : "@@ -163,4 +165,84 @@ static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args\n     }\n }\n \n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! Log prefix; usually the name of the function this was created in.\n+    std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    BCLog::LogFlags m_log_category{};\n+\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(prefix),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r327685274",
      "id" : 327685274,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzY4NTI3NA==",
      "original_commit_id" : "8dbd959ca409c632e2ffd3a2ab585be60a71d7be",
      "original_position" : 39,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 292514344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327685274",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r327687672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327687672"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here and below should this use `LogPrintf(\"%s\", full_msg)` to avoid errors if `msg` contains `%` characters? Using `%s\\n` here would also allow dropping the newline in LogMsg and removing the \"No newline\" lint workarounds.\r\n\r\nAlso can `.c_str()` be dropped?",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-24T15:36:42Z",
      "diff_hunk" : "@@ -163,4 +165,84 @@ static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args\n     }\n }\n \n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! Log prefix; usually the name of the function this was created in.\n+    std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    BCLog::LogFlags m_log_category{};\n+\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(prefix),\n+            m_title(end_msg),\n+            m_start_t(GetTime<std::chrono::microseconds>()),\n+            m_log_category(log_category) { }\n+\n+    ~Timer()\n+    {\n+        this->Log(strprintf(\"%s completed\", m_title));\n+    }\n+\n+    void Log(const std::string& msg)\n+    {\n+        const std::string full_msg = this->LogMsg(msg);\n+\n+        if (m_log_category == BCLog::LogFlags::ALL) {\n+            LogPrintf(full_msg.c_str()); /* No newline */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r327687672",
      "id" : 327687672,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzY4NzY3Mg==",
      "original_commit_id" : "8dbd959ca409c632e2ffd3a2ab585be60a71d7be",
      "original_position" : 54,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 292514344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327687672",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r327690551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327690551"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm surprised there aren't warnings about macro redefinitions since sync.h defines same macros. If this does turn out to be a problem could move PASTE/PASTE2 to a common location like util/preprocessor.h or util/macros.h",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-24T15:41:47Z",
      "diff_hunk" : "@@ -163,4 +165,84 @@ static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args\n     }\n }\n \n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! Log prefix; usually the name of the function this was created in.\n+    std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    BCLog::LogFlags m_log_category{};\n+\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(prefix),\n+            m_title(end_msg),\n+            m_start_t(GetTime<std::chrono::microseconds>()),\n+            m_log_category(log_category) { }\n+\n+    ~Timer()\n+    {\n+        this->Log(strprintf(\"%s completed\", m_title));\n+    }\n+\n+    void Log(const std::string& msg)\n+    {\n+        const std::string full_msg = this->LogMsg(msg);\n+\n+        if (m_log_category == BCLog::LogFlags::ALL) {\n+            LogPrintf(full_msg.c_str()); /* No newline */\n+        } else {\n+            LogPrint(m_log_category, full_msg.c_str()); /* No newline */\n+        }\n+    }\n+\n+    std::string LogMsg(const std::string& msg)\n+    {\n+        std::string units = \"\";\n+        float divisor = 1;\n+\n+        if (std::is_same<TimeType, std::chrono::microseconds>::value) {\n+            units = \"Î¼s\";\n+        } else if (std::is_same<TimeType, std::chrono::milliseconds>::value) {\n+            units = \"ms\";\n+            divisor = 1000.;\n+        } else if (std::is_same<TimeType, std::chrono::seconds>::value) {\n+            units = \"s\";\n+            divisor = 1000. * 1000.;\n+        }\n+\n+        const auto end_time = GetTime<std::chrono::microseconds>() - m_start_t;\n+        const float time_ms = end_time.count() / divisor;\n+        return strprintf(\"%s: %s (%.2f%s)\\n\", m_prefix, msg, time_ms, units);\n+    }\n+\n+private:\n+    std::chrono::microseconds m_start_t{};\n+};\n+\n+} // namespace BCLog\n+\n+#define PASTE(x, y) x ## y",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r327690551",
      "id" : 327690551,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzY5MDU1MQ==",
      "original_commit_id" : "8dbd959ca409c632e2ffd3a2ab585be60a71d7be",
      "original_position" : 86,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 292514344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327690551",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r327701305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327701305"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: Could move this up to not include the (trivial) switch-case statement above in the measurement? (edit: Looks like the switch-case should be evaluated at compile time, so should be fine either way)",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-24T16:01:41Z",
      "diff_hunk" : "@@ -163,4 +165,84 @@ static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args\n     }\n }\n \n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! Log prefix; usually the name of the function this was created in.\n+    std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    BCLog::LogFlags m_log_category{};\n+\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(prefix),\n+            m_title(end_msg),\n+            m_start_t(GetTime<std::chrono::microseconds>()),\n+            m_log_category(log_category) { }\n+\n+    ~Timer()\n+    {\n+        this->Log(strprintf(\"%s completed\", m_title));\n+    }\n+\n+    void Log(const std::string& msg)\n+    {\n+        const std::string full_msg = this->LogMsg(msg);\n+\n+        if (m_log_category == BCLog::LogFlags::ALL) {\n+            LogPrintf(full_msg.c_str()); /* No newline */\n+        } else {\n+            LogPrint(m_log_category, full_msg.c_str()); /* No newline */\n+        }\n+    }\n+\n+    std::string LogMsg(const std::string& msg)\n+    {\n+        std::string units = \"\";\n+        float divisor = 1;\n+\n+        if (std::is_same<TimeType, std::chrono::microseconds>::value) {\n+            units = \"Î¼s\";\n+        } else if (std::is_same<TimeType, std::chrono::milliseconds>::value) {\n+            units = \"ms\";\n+            divisor = 1000.;\n+        } else if (std::is_same<TimeType, std::chrono::seconds>::value) {\n+            units = \"s\";\n+            divisor = 1000. * 1000.;\n+        }\n+\n+        const auto end_time = GetTime<std::chrono::microseconds>() - m_start_t;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r327701305",
      "id" : 327701305,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzcwMTMwNQ==",
      "original_commit_id" : "8dbd959ca409c632e2ffd3a2ab585be60a71d7be",
      "original_position" : 75,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 292535240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327701305",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r328026017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328026017"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems a good idea to factor these out in any case",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-25T09:40:02Z",
      "diff_hunk" : "@@ -163,4 +165,84 @@ static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args\n     }\n }\n \n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! Log prefix; usually the name of the function this was created in.\n+    std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    BCLog::LogFlags m_log_category{};\n+\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(prefix),\n+            m_title(end_msg),\n+            m_start_t(GetTime<std::chrono::microseconds>()),\n+            m_log_category(log_category) { }\n+\n+    ~Timer()\n+    {\n+        this->Log(strprintf(\"%s completed\", m_title));\n+    }\n+\n+    void Log(const std::string& msg)\n+    {\n+        const std::string full_msg = this->LogMsg(msg);\n+\n+        if (m_log_category == BCLog::LogFlags::ALL) {\n+            LogPrintf(full_msg.c_str()); /* No newline */\n+        } else {\n+            LogPrint(m_log_category, full_msg.c_str()); /* No newline */\n+        }\n+    }\n+\n+    std::string LogMsg(const std::string& msg)\n+    {\n+        std::string units = \"\";\n+        float divisor = 1;\n+\n+        if (std::is_same<TimeType, std::chrono::microseconds>::value) {\n+            units = \"Î¼s\";\n+        } else if (std::is_same<TimeType, std::chrono::milliseconds>::value) {\n+            units = \"ms\";\n+            divisor = 1000.;\n+        } else if (std::is_same<TimeType, std::chrono::seconds>::value) {\n+            units = \"s\";\n+            divisor = 1000. * 1000.;\n+        }\n+\n+        const auto end_time = GetTime<std::chrono::microseconds>() - m_start_t;\n+        const float time_ms = end_time.count() / divisor;\n+        return strprintf(\"%s: %s (%.2f%s)\\n\", m_prefix, msg, time_ms, units);\n+    }\n+\n+private:\n+    std::chrono::microseconds m_start_t{};\n+};\n+\n+} // namespace BCLog\n+\n+#define PASTE(x, y) x ## y",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r328026017",
      "id" : 328026017,
      "in_reply_to_id" : 327690551,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODAyNjAxNw==",
      "original_commit_id" : "8dbd959ca409c632e2ffd3a2ab585be60a71d7be",
      "original_position" : 86,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 292950108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328026017",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r328176887"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328176887"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-25T15:03:18Z",
      "diff_hunk" : "@@ -163,4 +165,84 @@ static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args\n     }\n }\n \n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! Log prefix; usually the name of the function this was created in.\n+    std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    BCLog::LogFlags m_log_category{};\n+\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(prefix),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r328176887",
      "id" : 328176887,
      "in_reply_to_id" : 327685274,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODE3Njg4Nw==",
      "original_commit_id" : "8dbd959ca409c632e2ffd3a2ab585be60a71d7be",
      "original_position" : 39,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 293149363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:32:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328176887",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r328176951"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328176951"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah good suggestions! done",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-25T15:03:26Z",
      "diff_hunk" : "@@ -163,4 +165,84 @@ static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args\n     }\n }\n \n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! Log prefix; usually the name of the function this was created in.\n+    std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    BCLog::LogFlags m_log_category{};\n+\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(prefix),\n+            m_title(end_msg),\n+            m_start_t(GetTime<std::chrono::microseconds>()),\n+            m_log_category(log_category) { }\n+\n+    ~Timer()\n+    {\n+        this->Log(strprintf(\"%s completed\", m_title));\n+    }\n+\n+    void Log(const std::string& msg)\n+    {\n+        const std::string full_msg = this->LogMsg(msg);\n+\n+        if (m_log_category == BCLog::LogFlags::ALL) {\n+            LogPrintf(full_msg.c_str()); /* No newline */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r328176951",
      "id" : 328176951,
      "in_reply_to_id" : 327687672,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODE3Njk1MQ==",
      "original_commit_id" : "8dbd959ca409c632e2ffd3a2ab585be60a71d7be",
      "original_position" : 54,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 293149363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:32:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328176951",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r328177003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328177003"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-25T15:03:33Z",
      "diff_hunk" : "@@ -163,4 +165,84 @@ static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args\n     }\n }\n \n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! Log prefix; usually the name of the function this was created in.\n+    std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    BCLog::LogFlags m_log_category{};\n+\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(prefix),\n+            m_title(end_msg),\n+            m_start_t(GetTime<std::chrono::microseconds>()),\n+            m_log_category(log_category) { }\n+\n+    ~Timer()\n+    {\n+        this->Log(strprintf(\"%s completed\", m_title));\n+    }\n+\n+    void Log(const std::string& msg)\n+    {\n+        const std::string full_msg = this->LogMsg(msg);\n+\n+        if (m_log_category == BCLog::LogFlags::ALL) {\n+            LogPrintf(full_msg.c_str()); /* No newline */\n+        } else {\n+            LogPrint(m_log_category, full_msg.c_str()); /* No newline */\n+        }\n+    }\n+\n+    std::string LogMsg(const std::string& msg)\n+    {\n+        std::string units = \"\";\n+        float divisor = 1;\n+\n+        if (std::is_same<TimeType, std::chrono::microseconds>::value) {\n+            units = \"Î¼s\";\n+        } else if (std::is_same<TimeType, std::chrono::milliseconds>::value) {\n+            units = \"ms\";\n+            divisor = 1000.;\n+        } else if (std::is_same<TimeType, std::chrono::seconds>::value) {\n+            units = \"s\";\n+            divisor = 1000. * 1000.;\n+        }\n+\n+        const auto end_time = GetTime<std::chrono::microseconds>() - m_start_t;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r328177003",
      "id" : 328177003,
      "in_reply_to_id" : 327701305,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODE3NzAwMw==",
      "original_commit_id" : "8dbd959ca409c632e2ffd3a2ab585be60a71d7be",
      "original_position" : 75,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 293149363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:32:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328177003",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r328177039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328177039"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "1cff8d23a0042ff865cfd380f8da06233b61fb2e",
      "created_at" : "2019-09-25T15:03:37Z",
      "diff_hunk" : "@@ -163,4 +165,84 @@ static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args\n     }\n }\n \n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! Log prefix; usually the name of the function this was created in.\n+    std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    BCLog::LogFlags m_log_category{};\n+\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(prefix),\n+            m_title(end_msg),\n+            m_start_t(GetTime<std::chrono::microseconds>()),\n+            m_log_category(log_category) { }\n+\n+    ~Timer()\n+    {\n+        this->Log(strprintf(\"%s completed\", m_title));\n+    }\n+\n+    void Log(const std::string& msg)\n+    {\n+        const std::string full_msg = this->LogMsg(msg);\n+\n+        if (m_log_category == BCLog::LogFlags::ALL) {\n+            LogPrintf(full_msg.c_str()); /* No newline */\n+        } else {\n+            LogPrint(m_log_category, full_msg.c_str()); /* No newline */\n+        }\n+    }\n+\n+    std::string LogMsg(const std::string& msg)\n+    {\n+        std::string units = \"\";\n+        float divisor = 1;\n+\n+        if (std::is_same<TimeType, std::chrono::microseconds>::value) {\n+            units = \"Î¼s\";\n+        } else if (std::is_same<TimeType, std::chrono::milliseconds>::value) {\n+            units = \"ms\";\n+            divisor = 1000.;\n+        } else if (std::is_same<TimeType, std::chrono::seconds>::value) {\n+            units = \"s\";\n+            divisor = 1000. * 1000.;\n+        }\n+\n+        const auto end_time = GetTime<std::chrono::microseconds>() - m_start_t;\n+        const float time_ms = end_time.count() / divisor;\n+        return strprintf(\"%s: %s (%.2f%s)\\n\", m_prefix, msg, time_ms, units);\n+    }\n+\n+private:\n+    std::chrono::microseconds m_start_t{};\n+};\n+\n+} // namespace BCLog\n+\n+#define PASTE(x, y) x ## y",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16805#discussion_r328177039",
      "id" : 328177039,
      "in_reply_to_id" : 327690551,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODE3NzAzOQ==",
      "original_commit_id" : "8dbd959ca409c632e2ffd3a2ab585be60a71d7be",
      "original_position" : 86,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 293149363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16805",
      "updated_at" : "2019-09-25T15:32:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328177039",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   }
]
