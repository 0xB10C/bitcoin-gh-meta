[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "See #16779\r\nConcept ACK",
      "created_at" : "2019-09-05T14:48:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16807#issuecomment-528407251",
      "id" : 528407251,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16807",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyODQwNzI1MQ==",
      "updated_at" : "2019-09-05T14:48:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/528407251",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/12272949?v=4",
         "events_url" : "https://api.github.com/users/emilengler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emilengler/followers",
         "following_url" : "https://api.github.com/users/emilengler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emilengler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emilengler",
         "id" : 12272949,
         "login" : "emilengler",
         "node_id" : "MDQ6VXNlcjEyMjcyOTQ5",
         "organizations_url" : "https://api.github.com/users/emilengler/orgs",
         "received_events_url" : "https://api.github.com/users/emilengler/received_events",
         "repos_url" : "https://api.github.com/users/emilengler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emilengler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emilengler"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16800](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16800.html) (Basic Miniscript support in output descriptors by sipa)\n* [#16659](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16659.html) (refactoring: Remove unused includes by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-09-05T16:17:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16807#issuecomment-528445415",
      "id" : 528445415,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16807",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyODQ0NTQxNQ==",
      "updated_at" : "2019-09-05T16:17:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/528445415",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321506966"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321506966"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9d91c4a046d990d7f648328dfed982ad38c87ff1\r\n\r\nShould be first test?",
      "commit_id" : "d343fc91ee660d867c0117263d6884857d957f10",
      "created_at" : "2019-09-05T22:18:31Z",
      "diff_hunk" : "@@ -189,4 +376,96 @@ std::pair<std::string, data> Decode(const std::string& str) {\n     return {hrp, data(values.begin(), values.end() - 6)};\n }\n \n+/** Find index of an incorrect character in a Bech32 string. */\n+int LocateError(const std::string& str, std::string& error) {\n+    int ind = CheckCharacters(str);\n+    if (ind != -1) {\n+        error = \"Invalid character\";\n+        return ind;\n+    }\n+    if (str.size() > 90) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321506966",
      "id" : 321506966,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTUwNjk2Ng==",
      "original_commit_id" : "9d91c4a046d990d7f648328dfed982ad38c87ff1",
      "original_position" : 241,
      "path" : "src/bech32.cpp",
      "position" : 241,
      "pull_request_review_id" : 284572157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807",
      "updated_at" : "2019-09-05T22:44:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321506966",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321508485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321508485"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9d91c4a046d990d7f648328dfed982ad38c87ff1\r\n\r\nCould add at the top:\r\n```cpp\r\nstatic_assert(sizeof(GF1024_LOG) / sizeof(GF1024_LOG[0]) == 2014, \"GF1024_LOG length should be 1024\");\r\n```\r\nSame for `GF1024_EXP`.",
      "commit_id" : "d343fc91ee660d867c0117263d6884857d957f10",
      "created_at" : "2019-09-05T22:23:52Z",
      "diff_hunk" : "@@ -189,4 +376,96 @@ std::pair<std::string, data> Decode(const std::string& str) {\n     return {hrp, data(values.begin(), values.end() - 6)};\n }\n \n+/** Find index of an incorrect character in a Bech32 string. */\n+int LocateError(const std::string& str, std::string& error) {\n+    int ind = CheckCharacters(str);\n+    if (ind != -1) {\n+        error = \"Invalid character\";\n+        return ind;\n+    }\n+    if (str.size() > 90) {\n+        error = \"String too long\";\n+        return 90;\n+    }\n+    size_t pos = str.rfind('1');\n+    if (pos == str.npos) {\n+        error = \"Missing separator\";\n+        return 0;\n+    }\n+    if (pos == 0 || pos + 7 > str.size()) {\n+        error = \"Invalid separator position\";\n+        return pos;\n+    }\n+    std::string hrp;\n+    for (size_t i = 0; i < pos; ++i) {\n+        hrp += LowerCase(str[i]);\n+    }\n+    data values(str.size() - 1 - pos);\n+    for (size_t i = 0; i < str.size() - 1 - pos; ++i) {\n+        unsigned char c = str[i + pos + 1];\n+        int8_t rev = CHARSET_REV[c];\n+        if (rev == -1) {\n+            error = \"Invalid Base 32 character\";\n+            return i + pos + 1;\n+        }\n+        values[i] = rev;\n+    }\n+\n+    uint32_t residue = PolyMod(Cat(ExpandHRP(hrp), values)) ^ 1;\n+    if (residue != 0) {\n+        int length = str.size() - 1;\n+        uint32_t syn = Syndrome(residue);\n+        int s0 = syn & 0x3FF;\n+        int s1 = (syn >> 10) & 0x3FF;\n+        int s2 = syn >> 20;\n+        int l_s0 = GF1024_LOG[s0];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321508485",
      "id" : 321508485,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTUwODQ4NQ==",
      "original_commit_id" : "9d91c4a046d990d7f648328dfed982ad38c87ff1",
      "original_position" : 276,
      "path" : "src/bech32.cpp",
      "position" : 276,
      "pull_request_review_id" : 284572157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807",
      "updated_at" : "2019-09-05T22:44:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321508485",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321508956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321508956"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9d91c4a046d990d7f648328dfed982ad38c87ff1\r\n\r\nCould add some tests to `src/test/bech32_tests.cpp`?",
      "commit_id" : "d343fc91ee660d867c0117263d6884857d957f10",
      "created_at" : "2019-09-05T22:25:37Z",
      "diff_hunk" : "@@ -25,6 +25,9 @@ std::string Encode(const std::string& hrp, const std::vector<uint8_t>& values);\n /** Decode a Bech32 string. Returns (hrp, data). Empty hrp means failure. */\n std::pair<std::string, std::vector<uint8_t>> Decode(const std::string& str);\n \n+/** Return the position of an error in a Bech32 string. If no errors are present, return -1. */\n+int LocateError(const std::string& str, std::string& error);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321508956",
      "id" : 321508956,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTUwODk1Ng==",
      "original_commit_id" : "9d91c4a046d990d7f648328dfed982ad38c87ff1",
      "original_position" : 5,
      "path" : "src/bech32.h",
      "position" : 5,
      "pull_request_review_id" : 284572157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807",
      "updated_at" : "2019-09-05T22:44:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321508956",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321509052"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321509052"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9d91c4a046d990d7f648328dfed982ad38c87ff1\r\n\r\nnit, `++p1`.",
      "commit_id" : "d343fc91ee660d867c0117263d6884857d957f10",
      "created_at" : "2019-09-05T22:26:04Z",
      "diff_hunk" : "@@ -189,4 +376,96 @@ std::pair<std::string, data> Decode(const std::string& str) {\n     return {hrp, data(values.begin(), values.end() - 6)};\n }\n \n+/** Find index of an incorrect character in a Bech32 string. */\n+int LocateError(const std::string& str, std::string& error) {\n+    int ind = CheckCharacters(str);\n+    if (ind != -1) {\n+        error = \"Invalid character\";\n+        return ind;\n+    }\n+    if (str.size() > 90) {\n+        error = \"String too long\";\n+        return 90;\n+    }\n+    size_t pos = str.rfind('1');\n+    if (pos == str.npos) {\n+        error = \"Missing separator\";\n+        return 0;\n+    }\n+    if (pos == 0 || pos + 7 > str.size()) {\n+        error = \"Invalid separator position\";\n+        return pos;\n+    }\n+    std::string hrp;\n+    for (size_t i = 0; i < pos; ++i) {\n+        hrp += LowerCase(str[i]);\n+    }\n+    data values(str.size() - 1 - pos);\n+    for (size_t i = 0; i < str.size() - 1 - pos; ++i) {\n+        unsigned char c = str[i + pos + 1];\n+        int8_t rev = CHARSET_REV[c];\n+        if (rev == -1) {\n+            error = \"Invalid Base 32 character\";\n+            return i + pos + 1;\n+        }\n+        values[i] = rev;\n+    }\n+\n+    uint32_t residue = PolyMod(Cat(ExpandHRP(hrp), values)) ^ 1;\n+    if (residue != 0) {\n+        int length = str.size() - 1;\n+        uint32_t syn = Syndrome(residue);\n+        int s0 = syn & 0x3FF;\n+        int s1 = (syn >> 10) & 0x3FF;\n+        int s2 = syn >> 20;\n+        int l_s0 = GF1024_LOG[s0];\n+        int l_s1 = GF1024_LOG[s1];\n+        int l_s2 = GF1024_LOG[s2];\n+\n+        if (l_s0 != -1 && l_s1 != -1 && l_s2 != -1 && (2 * l_s1 - l_s2 - l_s0 + 2046) % 1023 == 0) {\n+            int p1 = (l_s1 - l_s0 + 1023) % 1023;\n+            if (p1 < length) {\n+                int l_e1 = l_s0 + (1023 - 997) * p1;\n+                error = \"Invalid\";\n+                if (l_e1 % 33) {\n+                    return 0;\n+                }\n+                return str.size() - p1 - (p1 >= values.size() ? 2 : 1);\n+            }\n+        }\n+        for (int p1 = 0; p1 < length; p1++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321509052",
      "id" : 321509052,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTUwOTA1Mg==",
      "original_commit_id" : "9d91c4a046d990d7f648328dfed982ad38c87ff1",
      "original_position" : 291,
      "path" : "src/bech32.cpp",
      "position" : 291,
      "pull_request_review_id" : 284572157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807",
      "updated_at" : "2019-09-05T22:44:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321509052",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321513126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321513126"
         }
      },
      "author_association" : "MEMBER",
      "body" : "f877a9b4af7da6632430eff898b957107514e6de\r\n\r\nCould include only when prefix matches `CChainParams::Bech32HRP`?",
      "commit_id" : "d343fc91ee660d867c0117263d6884857d957f10",
      "created_at" : "2019-09-05T22:43:14Z",
      "diff_hunk" : "@@ -39,6 +40,8 @@ static UniValue validateaddress(const JSONRPCRequest& request)\n             \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is a witness address\\n\"\n             \"  \\\"witness_version\\\" : version   (numeric, optional) The version number of the witness program\\n\"\n             \"  \\\"witness_program\\\" : \\\"hex\\\"     (string, optional) The hex value of the witness program\\n\"\n+            \"  \\\"error\\\" : \\\"message\\\"           (string, optional) The error message if the address is an invalid bech32 address\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321513126",
      "id" : 321513126,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTUxMzEyNg==",
      "original_commit_id" : "f877a9b4af7da6632430eff898b957107514e6de",
      "original_position" : 12,
      "path" : "src/rpc/misc.cpp",
      "position" : 12,
      "pull_request_review_id" : 284572157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807",
      "updated_at" : "2019-09-05T22:44:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321513126",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would it be possible to add functions to key_io that provide this functionality for all addresses (with just basic error messages for anything but bech32)? That way the RPC code doesn't need to directly invoke the bech32 module.",
      "created_at" : "2019-09-05T22:46:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16807#issuecomment-528620663",
      "id" : 528620663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16807",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyODYyMDY2Mw==",
      "updated_at" : "2019-09-05T22:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/528620663",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "+1 @sipa suggestion, something like\r\n```cpp\r\nCTxDestination DecodeDestination(const std::string& str, std::string& error);\r\nCTxDestination DecodeDestination(const std::string& str)\r\n{\r\n    const std::string& error;\r\n    return DecodeDestination(str, error);\r\n}\r\n```\r\nAnd maybe also embed the error index in the message for now.",
      "created_at" : "2019-09-05T22:55:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16807#issuecomment-528623272",
      "id" : 528623272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16807",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyODYyMzI3Mg==",
      "updated_at" : "2019-09-05T22:55:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/528623272",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321524216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321524216"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I thought about this but I wasn't sure, because one of the checks is that the HRP is present and valid too. You're probably right, that would be better for the user.",
      "commit_id" : "d343fc91ee660d867c0117263d6884857d957f10",
      "created_at" : "2019-09-05T23:23:56Z",
      "diff_hunk" : "@@ -39,6 +40,8 @@ static UniValue validateaddress(const JSONRPCRequest& request)\n             \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is a witness address\\n\"\n             \"  \\\"witness_version\\\" : version   (numeric, optional) The version number of the witness program\\n\"\n             \"  \\\"witness_program\\\" : \\\"hex\\\"     (string, optional) The hex value of the witness program\\n\"\n+            \"  \\\"error\\\" : \\\"message\\\"           (string, optional) The error message if the address is an invalid bech32 address\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16807#discussion_r321524216",
      "id" : 321524216,
      "in_reply_to_id" : 321513126,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTUyNDIxNg==",
      "original_commit_id" : "f877a9b4af7da6632430eff898b957107514e6de",
      "original_position" : 12,
      "path" : "src/rpc/misc.cpp",
      "position" : 12,
      "pull_request_review_id" : 284591468,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16807",
      "updated_at" : "2019-09-05T23:23:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321524216",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've added boost tests, fixed the above nits, and added a final commit with one implementation of the above idea. I can drop the final commit if it's not a good approach, but this is the cleanest way I could come up with",
      "created_at" : "2019-09-06T05:14:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16807#issuecomment-528711286",
      "id" : 528711286,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16807",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyODcxMTI4Ng==",
      "updated_at" : "2019-09-06T05:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/528711286",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   }
]
