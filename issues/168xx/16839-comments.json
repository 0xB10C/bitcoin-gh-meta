[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm looking for concept ACKS before detailed review at the moment. Since this a naming and refactoring change, it'd be great if people could take few minutes and skim the diff, and say whether the new code looks ugly or ok, and offer any suggestions. I'm happy to take suggestions and also split this up more.",
      "created_at" : "2019-09-09T21:36:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#issuecomment-529676872",
      "id" : 529676872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16839",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyOTY3Njg3Mg==",
      "updated_at" : "2019-09-09T21:36:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529676872",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r322503490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322503490"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is it better to capture member `chain_clients` than `this`?\r\n\r\nAlso, it would be nice to explain that a `std::list` is used otherwise this `.erase` would fail.",
      "commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "created_at" : "2019-09-10T00:03:16Z",
      "diff_hunk" : "@@ -375,9 +377,16 @@ class ChainImpl : public Chain\n             notifications.TransactionAddedToMempool(entry.GetSharedTx());\n         }\n     }\n+    std::unique_ptr<Handler> addClient(ChainClient& client) override\n+    {\n+        ChainClients& clients = m_node.chain_clients;\n+        ChainClients::iterator it = clients.emplace(clients.end(), client);\n+        return MakeHandler([&clients, it] { clients.erase(it); });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r322503490",
      "id" : 322503490,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjUwMzQ5MA==",
      "original_commit_id" : "124bbcabe314c2e4a48ad61a69c03ee55e633e37",
      "original_position" : 33,
      "path" : "src/interfaces/chain.cpp",
      "position" : 36,
      "pull_request_review_id" : 285845672,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839",
      "updated_at" : "2019-09-10T21:28:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322503490",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16771](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16771.html) (Chainparams: Wallet: Decouple DefaultFallbackfee() from IsTestChain() by jtimon)\n* [#16512](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16512.html) (Shuffle inputs and outputs after joining psbts by achow101)\n* [#16442](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16442.html) (Serve BIP 157 compact filters by jimpo)\n* [#16439](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16439.html) (RPC: support \"@height\" in place of blockhash for getblock etc by ajtowns)\n* [#16341](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16341.html) (Introduce ScriptPubKeyMan interface and use it for key and script management (aka wallet boxes) by achow101)\n* [#16324](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16324.html) (Get cs_main out of the critical path in ProcessMessages by TheBlueMatt)\n* [#16323](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16323.html) (Call ProcessNewBlock() asynchronously by TheBlueMatt)\n* [#16224](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16224.html) (gui: Bilingual GUI error messages by hebasto)\n* [#16202](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16202.html) (Refactor network message deserialization by jonasschnelli)\n* [#15606](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15606.html) ([experimental] UTXO snapshots by jamesob)\n* [#15294](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15294.html) ([moveonly] wallet: Extract RipeMd160 by Empact)\n* [#15218](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15218.html) (validation: Flush state after initial sync by andrewtoth)\n* [#15206](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15206.html) (Immediately disconnect on invalid net message checksum by jonasschnelli)\n* [#12674](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12674.html) (RPC: Support addnode onetry without making the connection priviliged by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-09-10T02:30:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#issuecomment-529742058",
      "id" : 529742058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16839",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyOTc0MjA1OA==",
      "updated_at" : "2019-09-10T16:52:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529742058",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-09-10T07:25:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#issuecomment-529808769",
      "id" : 529808769,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16839",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyOTgwODc2OQ==",
      "updated_at" : "2019-09-10T07:25:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529808769",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-09-10T11:00:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#issuecomment-529884054",
      "id" : 529884054,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16839",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyOTg4NDA1NA==",
      "updated_at" : "2019-09-10T11:00:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529884054",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Getting rid of these globals has been talked about in past as a way\r\nto implement testing and simulations.\r\n\r\nFine with me, but this seems only like a first step, since other globals such as `::mempool` are still global. and not members of the Node class.",
      "created_at" : "2019-09-10T13:43:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#issuecomment-529941376",
      "id" : 529941376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16839",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyOTk0MTM3Ng==",
      "updated_at" : "2019-09-10T13:43:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529941376",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r322812671"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322812671"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Is it better to capture member `chain_clients` than `this`?\r\n\r\nI think a good starting point is to just capture what's needed without unused data or object references. But in this case, capturing `this` instead of `&clients` is worse because in addition to capturing unneeded data, it requires the `Handler` object to be destroyed before the `Chain` object, and there's no reason to create that kind of error-prone dependency.\r\n\r\n> Also, it would be nice to explain that a `std::list` is used otherwise this `.erase` would fail.\r\n\r\nSure, added comment.",
      "commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "created_at" : "2019-09-10T15:28:41Z",
      "diff_hunk" : "@@ -375,9 +377,16 @@ class ChainImpl : public Chain\n             notifications.TransactionAddedToMempool(entry.GetSharedTx());\n         }\n     }\n+    std::unique_ptr<Handler> addClient(ChainClient& client) override\n+    {\n+        ChainClients& clients = m_node.chain_clients;\n+        ChainClients::iterator it = clients.emplace(clients.end(), client);\n+        return MakeHandler([&clients, it] { clients.erase(it); });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r322812671",
      "id" : 322812671,
      "in_reply_to_id" : 322503490,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjgxMjY3MQ==",
      "original_commit_id" : "124bbcabe314c2e4a48ad61a69c03ee55e633e37",
      "original_position" : 33,
      "path" : "src/interfaces/chain.cpp",
      "position" : 36,
      "pull_request_review_id" : 286233538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839",
      "updated_at" : "2019-09-10T21:28:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322812671",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. This looks like a step in the right direction in terms of cutting down on globals and moving towards being able to test multi-node behavior without having to rely on the functional tests.\r\n\r\nIs your intent to split this into separate commits at some point for detailed review?",
      "created_at" : "2019-09-11T17:12:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#issuecomment-530475920",
      "id" : 530475920,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16839",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMDQ3NTkyMA==",
      "updated_at" : "2019-09-11T17:12:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/530475920",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Is your intent to split this into separate commits at some point for detailed review?\r\n\r\nCould go either way. These are basically boring text replacements that should be about as much effort to review split up or joined, but I'm happy to split it up. I think I could split it up into 4 or 5 commits roughly matching the bullet points in the description. Overall diff would be a little bigger because some lines (`chain_clients` lines) would change more than once.",
      "created_at" : "2019-09-11T17:34:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#issuecomment-530484930",
      "id" : 530484930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16839",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMDQ4NDkzMA==",
      "updated_at" : "2019-09-11T17:34:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/530484930",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Could go either way.\r\n\r\nI'm fine reviewing either, though I guess if it were easy to do some scripted-diffs that would be nice.",
      "created_at" : "2019-09-11T17:38:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#issuecomment-530486636",
      "id" : 530486636,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16839",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMDQ4NjYzNg==",
      "updated_at" : "2019-09-11T17:38:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/530486636",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r324425666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/324425666"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I find comment fuzzy, do you mean only works if node interface is set by the process of the implementation ?",
      "commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "created_at" : "2019-09-14T14:10:34Z",
      "diff_hunk" : "@@ -254,6 +255,10 @@ class Node\n     using NotifyHeaderTipFn =\n         std::function<void(bool initial_download, int height, int64_t block_time, double verification_progress)>;\n     virtual std::unique_ptr<Handler> handleNotifyHeaderTip(NotifyHeaderTipFn fn) = 0;\n+\n+    //! Return pointer to internal chain interface, useful for testing.\n+    //! Only works if node interface is being called in same process as implementation.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r324425666",
      "id" : 324425666,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDQyNTY2Ng==",
      "original_commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "original_position" : 14,
      "path" : "src/interfaces/node.h",
      "position" : 14,
      "pull_request_review_id" : 288322544,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839",
      "updated_at" : "2019-09-14T14:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/324425666",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r324425872"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/324425872"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "So you would create multiple Node in one test process, connect them and let them talk maybe with random introduction of interferences in-between ?",
      "commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "created_at" : "2019-09-14T14:18:40Z",
      "diff_hunk" : "@@ -0,0 +1,41 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_NODE_H\n+#define BITCOIN_NODE_NODE_H\n+\n+#include <list>\n+#include <memory>\n+\n+class BanMan;\n+class CConnman;\n+class PeerLogicValidation;\n+namespace interfaces {\n+class Chain;\n+class ChainClient;\n+} // namespace interfaces\n+using ChainClients = std::list<std::reference_wrapper<interfaces::ChainClient>>;\n+\n+//! Node struct containing chain state and connection state.\n+//!\n+//! More state could be moved into this struct to eliminate global variables,\n+//! and allow creating multiple instances of validation and networking objects",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r324425872",
      "id" : 324425872,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDQyNTg3Mg==",
      "original_commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "original_position" : 23,
      "path" : "src/node/node.h",
      "position" : 23,
      "pull_request_review_id" : 288322544,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839",
      "updated_at" : "2019-09-14T14:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/324425872",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r324425941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/324425941"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Couldn't BroadcastTransaction be directly a method of Node instead of passing CConnman ? Maybe sendrawtransaction should be given g_rpc_chain instead of g_rpc_node, overall it's seems to use the chain as a server too",
      "commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "created_at" : "2019-09-14T14:21:35Z",
      "diff_hunk" : "@@ -14,12 +14,12 @@\n \n #include <future>\n \n-TransactionError BroadcastTransaction(const CTransactionRef tx, std::string& err_string, const CAmount& max_tx_fee, bool relay, bool wait_callback)\n+TransactionError BroadcastTransaction(const CTransactionRef tx, std::string& err_string, const CAmount& max_tx_fee, bool relay, bool wait_callback, CConnman* connman)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r324425941",
      "id" : 324425941,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDQyNTk0MQ==",
      "original_commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "original_position" : 5,
      "path" : "src/node/transaction.cpp",
      "position" : 5,
      "pull_request_review_id" : 288322544,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839",
      "updated_at" : "2019-09-14T14:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/324425941",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r324426030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/324426030"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "How to override RPC framework limitations ? Encapsulating RPC functions in its own structure like it has been done for the P2P stack with CConnman ?",
      "commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "created_at" : "2019-09-14T14:25:06Z",
      "diff_hunk" : "@@ -46,4 +47,9 @@ UniValue blockheaderToJSON(const CBlockIndex* tip, const CBlockIndex* blockindex\n /** Used by getblockstats to get feerates at different percentiles by weight  */\n void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES], std::vector<std::pair<CAmount, int64_t>>& scores, int64_t total_weight);\n \n+//! Pointer to node state that needs to be declared as a global to be accessible\n+//! RPC methods. Due to limitations of the RPC framework, there's currently no",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r324426030",
      "id" : 324426030,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDQyNjAzMA==",
      "original_commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "original_position" : 13,
      "path" : "src/rpc/blockchain.h",
      "position" : 13,
      "pull_request_review_id" : 288322544,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839",
      "updated_at" : "2019-09-14T14:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/324426030",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r324426272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/324426272"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "IMO not sure why getblocktemplate need to access state of P2P stack ? I would guess the functionality would be useless without a mempool to populate the template and being connected increase the likeliness of a fresh mempool but I could also provide mempool.dat to my node...\r\nIf you remove it, you can also move g_rpc_node declaration in src/rpc/net.h.",
      "commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "created_at" : "2019-09-14T14:32:27Z",
      "diff_hunk" : "@@ -424,10 +425,10 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n     if (strMode != \"template\")\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid mode\");\n \n-    if(!g_connman)\n+    if(!g_rpc_node->connman)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16839#discussion_r324426272",
      "id" : 324426272,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDQyNjI3Mg==",
      "original_commit_id" : "a3dc53304a4ccd0996e51322bee40572b5af7d25",
      "original_position" : 13,
      "path" : "src/rpc/mining.cpp",
      "position" : 13,
      "pull_request_review_id" : 288322544,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16839",
      "updated_at" : "2019-09-14T14:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/324426272",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
