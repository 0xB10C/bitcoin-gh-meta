[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/27253#pullrequestreview-1339040045), [brunoerg](https://github.com/bitcoin/bitcoin/pull/27253#pullrequestreview-1339187663) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-03-14T04:22:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#issuecomment-1467334860",
      "id" : 1467334860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27253",
      "node_id" : "IC_kwDOABII585XdcDM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1467334860/reactions"
      },
      "updated_at" : "2023-03-14T12:42:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1467334860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> What do you think?\r\n\r\nAs @stickies-v explained to me outside this PR: \"... by moving the uri parsing to http_request_cb we're failing super early, and even when the query parameter would never be called by the endpoint... \", this makes more sense.\r\n\r\nI'm working on this approach which I think it's better as well.",
      "created_at" : "2023-03-14T21:14:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#issuecomment-1468854086",
      "id" : 1468854086,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27253",
      "node_id" : "IC_kwDOABII585XjO9G",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468854086/reactions"
      },
      "updated_at" : "2023-03-14T21:14:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468854086",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/110166421?v=4",
         "events_url" : "https://api.github.com/users/pablomartin4btc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pablomartin4btc/followers",
         "following_url" : "https://api.github.com/users/pablomartin4btc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pablomartin4btc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pablomartin4btc",
         "id" : 110166421,
         "login" : "pablomartin4btc",
         "node_id" : "U_kgDOBpEBlQ",
         "organizations_url" : "https://api.github.com/users/pablomartin4btc/orgs",
         "received_events_url" : "https://api.github.com/users/pablomartin4btc/received_events",
         "repos_url" : "https://api.github.com/users/pablomartin4btc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pablomartin4btc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pablomartin4btc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pablomartin4btc"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139143140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139143140"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n```suggestion\r\n    if (!m_uri_parsed) return std::nullopt;\r\n```",
      "commit_id" : "d16effe8cb2c18b72eeda596c4d3cf0c38b93263",
      "created_at" : "2023-03-16T17:46:13Z",
      "diff_hunk" : "@@ -663,17 +674,10 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod() const\n     }\n }\n \n-std::optional<std::string> HTTPRequest::GetQueryParameter(const std::string& key) const\n+std::optional<std::string> HTTPRequest::GetQueryParameter(const std::string& key)\n {\n-    const char* uri{evhttp_request_get_uri(req)};\n-\n-    return GetQueryParameterFromUri(uri, key);\n-}\n-\n-std::optional<std::string> GetQueryParameterFromUri(const char* uri, const std::string& key)\n-{\n-    evhttp_uri* uri_parsed{evhttp_uri_parse(uri)};\n-    const char* query{evhttp_uri_get_query(uri_parsed)};\n+    if (!m_uri_parsed) { return std::nullopt; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139143140",
      "id" : 1139143140,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585D5fHk",
      "original_commit_id" : "02cbb583271cabe1b4062525dea785ea21796462",
      "original_line" : 679,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 1344413373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139143140/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-16T18:12:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139143140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated changes:\r\n- move the validation/parsing logic up in the stack as soon as the request is initiated even before the work item thread is created\r\n- updated unit and functional tests",
      "created_at" : "2023-03-16T17:59:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#issuecomment-1472457091",
      "id" : 1472457091,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27253",
      "node_id" : "IC_kwDOABII585Xw-mD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1472457091/reactions"
      },
      "updated_at" : "2023-03-16T17:59:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1472457091",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/110166421?v=4",
         "events_url" : "https://api.github.com/users/pablomartin4btc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pablomartin4btc/followers",
         "following_url" : "https://api.github.com/users/pablomartin4btc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pablomartin4btc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pablomartin4btc",
         "id" : 110166421,
         "login" : "pablomartin4btc",
         "node_id" : "U_kgDOBpEBlQ",
         "organizations_url" : "https://api.github.com/users/pablomartin4btc/orgs",
         "received_events_url" : "https://api.github.com/users/pablomartin4btc/received_events",
         "repos_url" : "https://api.github.com/users/pablomartin4btc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pablomartin4btc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pablomartin4btc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pablomartin4btc"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139180604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139180604"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See https://github.com/bitcoin/bitcoin/pull/24012 - I couldn't get mocking an `evhttp_request*` past the ASan test, and it looks like they're failing again here too. That's why in #24098 I introduced the `GetQueryParameterFromUri()` helper function: it could easily be unit tested, and then `HTTPRequest::GetQueryParameter()` was just a simple wrapper left untested.",
      "commit_id" : "d16effe8cb2c18b72eeda596c4d3cf0c38b93263",
      "created_at" : "2023-03-16T18:10:30Z",
      "diff_hunk" : "@@ -13,26 +15,34 @@ BOOST_AUTO_TEST_CASE(test_query_parameters)\n {\n     std::string uri {};\n \n+    evhttp_request* evreq = evhttp_request_new(nullptr, nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139180604",
      "id" : 1139180604,
      "line" : 18,
      "node_id" : "PRRC_kwDOABII585D5oQ8",
      "original_commit_id" : "213554cb97c9c89bca56b56e8d0af473102e3061",
      "original_line" : 18,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/test/httpserver_tests.cpp",
      "position" : 13,
      "pull_request_review_id" : 1344413373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139180604/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-16T18:12:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139180604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139181920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139181920"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems like unrelated/unnecessary churn imo, and redefining HTTP status codes in a single functional test doesn't seem like a productive approach. Would leave this out?",
      "commit_id" : "d16effe8cb2c18b72eeda596c4d3cf0c38b93263",
      "created_at" : "2023-03-16T18:11:36Z",
      "diff_hunk" : "@@ -44,6 +44,11 @@ class RetType(Enum):\n     BYTES = 2\n     JSON = 3\n \n+class HTTPStatusCode(Enum):\n+    HTTP_OK = 200\n+    HTTP_BAD_REQUEST = 400\n+    HTTP_NOT_FOUND = 404\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139181920",
      "id" : 1139181920,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585D5olg",
      "original_commit_id" : "213554cb97c9c89bca56b56e8d0af473102e3061",
      "original_line" : 51,
      "original_position" : 8,
      "original_start_line" : 47,
      "path" : "test/functional/interface_rest.py",
      "position" : null,
      "pull_request_review_id" : 1344413373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139181920/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-16T18:13:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139181920",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139308077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139308077"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks, corrected other similar 2.",
      "commit_id" : "d16effe8cb2c18b72eeda596c4d3cf0c38b93263",
      "created_at" : "2023-03-16T20:14:52Z",
      "diff_hunk" : "@@ -663,17 +674,10 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod() const\n     }\n }\n \n-std::optional<std::string> HTTPRequest::GetQueryParameter(const std::string& key) const\n+std::optional<std::string> HTTPRequest::GetQueryParameter(const std::string& key)\n {\n-    const char* uri{evhttp_request_get_uri(req)};\n-\n-    return GetQueryParameterFromUri(uri, key);\n-}\n-\n-std::optional<std::string> GetQueryParameterFromUri(const char* uri, const std::string& key)\n-{\n-    evhttp_uri* uri_parsed{evhttp_uri_parse(uri)};\n-    const char* query{evhttp_uri_get_query(uri_parsed)};\n+    if (!m_uri_parsed) { return std::nullopt; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139308077",
      "id" : 1139308077,
      "in_reply_to_id" : 1139143140,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585D6HYt",
      "original_commit_id" : "02cbb583271cabe1b4062525dea785ea21796462",
      "original_line" : 679,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 1344642054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139308077/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-16T20:14:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139308077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/110166421?v=4",
         "events_url" : "https://api.github.com/users/pablomartin4btc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pablomartin4btc/followers",
         "following_url" : "https://api.github.com/users/pablomartin4btc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pablomartin4btc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pablomartin4btc",
         "id" : 110166421,
         "login" : "pablomartin4btc",
         "node_id" : "U_kgDOBpEBlQ",
         "organizations_url" : "https://api.github.com/users/pablomartin4btc/orgs",
         "received_events_url" : "https://api.github.com/users/pablomartin4btc/received_events",
         "repos_url" : "https://api.github.com/users/pablomartin4btc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pablomartin4btc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pablomartin4btc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pablomartin4btc"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139309346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139309346"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm now reusing the HTTPStatus enum from the python http module in python; there were like 20 places where these codes were introduced as int. I think it makes it clearer but pls let me know if that's not the case.",
      "commit_id" : "d16effe8cb2c18b72eeda596c4d3cf0c38b93263",
      "created_at" : "2023-03-16T20:16:21Z",
      "diff_hunk" : "@@ -44,6 +44,11 @@ class RetType(Enum):\n     BYTES = 2\n     JSON = 3\n \n+class HTTPStatusCode(Enum):\n+    HTTP_OK = 200\n+    HTTP_BAD_REQUEST = 400\n+    HTTP_NOT_FOUND = 404\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139309346",
      "id" : 1139309346,
      "in_reply_to_id" : 1139181920,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585D6Hsi",
      "original_commit_id" : "213554cb97c9c89bca56b56e8d0af473102e3061",
      "original_line" : 51,
      "original_position" : 8,
      "original_start_line" : 47,
      "path" : "test/functional/interface_rest.py",
      "position" : null,
      "pull_request_review_id" : 1344646552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139309346/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-16T20:16:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139309346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/110166421?v=4",
         "events_url" : "https://api.github.com/users/pablomartin4btc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pablomartin4btc/followers",
         "following_url" : "https://api.github.com/users/pablomartin4btc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pablomartin4btc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pablomartin4btc",
         "id" : 110166421,
         "login" : "pablomartin4btc",
         "node_id" : "U_kgDOBpEBlQ",
         "organizations_url" : "https://api.github.com/users/pablomartin4btc/orgs",
         "received_events_url" : "https://api.github.com/users/pablomartin4btc/received_events",
         "repos_url" : "https://api.github.com/users/pablomartin4btc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pablomartin4btc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pablomartin4btc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pablomartin4btc"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139311306"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139311306"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If I bring it back I won't be able to access to m_uri_parsed from the helper function, unless there's another alternative, I'll have to roll-back to the original approach of the PR.",
      "commit_id" : "d16effe8cb2c18b72eeda596c4d3cf0c38b93263",
      "created_at" : "2023-03-16T20:18:09Z",
      "diff_hunk" : "@@ -13,26 +15,34 @@ BOOST_AUTO_TEST_CASE(test_query_parameters)\n {\n     std::string uri {};\n \n+    evhttp_request* evreq = evhttp_request_new(nullptr, nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139311306",
      "id" : 1139311306,
      "in_reply_to_id" : 1139180604,
      "line" : 18,
      "node_id" : "PRRC_kwDOABII585D6ILK",
      "original_commit_id" : "213554cb97c9c89bca56b56e8d0af473102e3061",
      "original_line" : 18,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/test/httpserver_tests.cpp",
      "position" : 13,
      "pull_request_review_id" : 1344651093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139311306/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-16T20:18:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139311306",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/110166421?v=4",
         "events_url" : "https://api.github.com/users/pablomartin4btc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pablomartin4btc/followers",
         "following_url" : "https://api.github.com/users/pablomartin4btc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pablomartin4btc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pablomartin4btc",
         "id" : 110166421,
         "login" : "pablomartin4btc",
         "node_id" : "U_kgDOBpEBlQ",
         "organizations_url" : "https://api.github.com/users/pablomartin4btc/orgs",
         "received_events_url" : "https://api.github.com/users/pablomartin4btc/received_events",
         "repos_url" : "https://api.github.com/users/pablomartin4btc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pablomartin4btc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pablomartin4btc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pablomartin4btc"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139348308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139348308"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Every line of code that you change needs review. If those changed lines of code are unrelated to what you're trying to achieve, you risk unnecessarily slowing doing the PR or even getting NACKs for reasons unrelated to what you're really trying to do. I'd strongly suggest keeping the scope as small as possible.\r\n\r\nI'm not saying it's necessarily a bad idea to use enumerated HTTP status codes, but it would be better off in a separate PR/issue (and have you checked if it's been suggested before?)",
      "commit_id" : "d16effe8cb2c18b72eeda596c4d3cf0c38b93263",
      "created_at" : "2023-03-16T20:53:48Z",
      "diff_hunk" : "@@ -44,6 +44,11 @@ class RetType(Enum):\n     BYTES = 2\n     JSON = 3\n \n+class HTTPStatusCode(Enum):\n+    HTTP_OK = 200\n+    HTTP_BAD_REQUEST = 400\n+    HTTP_NOT_FOUND = 404\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1139348308",
      "id" : 1139348308,
      "in_reply_to_id" : 1139181920,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585D6RNU",
      "original_commit_id" : "213554cb97c9c89bca56b56e8d0af473102e3061",
      "original_line" : 51,
      "original_position" : 8,
      "original_start_line" : 47,
      "path" : "test/functional/interface_rest.py",
      "position" : null,
      "pull_request_review_id" : 1344697393,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139348308/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-16T20:53:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1139348308",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "https://cirrus-ci.com/task/4643666984173568:\r\n```bash\r\n test  2023-03-16T20:06:03.567000Z TestFramework (ERROR): Unexpected exception caught during testing \r\n                                   Traceback (most recent call last):\r\n                                     File \"/private/var/folders/v7/fs2b0v3s0lz1n57gj9y4xb5m0000gn/T/cirrus-ci-build/ci/scratch/build/bitcoin-arm64-apple-darwin/test/functional/test_framework/test_framework.py\", line 132, in main\r\n                                       self.run_test()\r\n                                     File \"/private/var/folders/v7/fs2b0v3s0lz1n57gj9y4xb5m0000gn/T/cirrus-ci-build/ci/scratch/build/bitcoin-arm64-apple-darwin/test/functional/interface_rest.py\", line 372, in run_test\r\n                                       resp = self.test_rest_request(\"/mempool/contents\", ret_type=RetType.OBJ, status=400, query_params={\"verbose\": \"true\", \"mempool_sequence\": \"true\"})\r\n                                     File \"/private/var/folders/v7/fs2b0v3s0lz1n57gj9y4xb5m0000gn/T/cirrus-ci-build/ci/scratch/build/bitcoin-arm64-apple-darwin/test/functional/interface_rest.py\", line 86, in test_rest_request\r\n                                       assert_equal(resp.status, status.value)\r\n                                   AttributeError: 'int' object has no attribute 'value'\r\n```",
      "created_at" : "2023-03-16T21:01:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#issuecomment-1472733580",
      "id" : 1472733580,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27253",
      "node_id" : "IC_kwDOABII585XyCGM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1472733580/reactions"
      },
      "updated_at" : "2023-03-16T21:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1472733580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@fanquake that's something perhaps I've introduced with my last push, I'm on it, thanks. Weird, it's not failing locally for me:\r\n```\r\n$ ./test/functional/interface_rest.py \r\n2023-03-16T21:14:11.025000Z TestFramework (INFO): PRNG seed is: 326626678636704986\r\n2023-03-16T21:14:11.026000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_vwqauy2g\r\n2023-03-16T21:14:11.812000Z TestFramework (INFO): Broadcast test transaction and sync nodes\r\n2023-03-16T21:14:12.865000Z TestFramework (INFO): Test the /tx URI\r\n2023-03-16T21:14:12.876000Z TestFramework (INFO): Query an unspent TXO using the /getutxos URI\r\n2023-03-16T21:14:12.934000Z TestFramework (INFO): Query a spent TXO using the /getutxos URI\r\n2023-03-16T21:14:12.935000Z TestFramework (INFO): Query two TXOs using the /getutxos URI\r\n2023-03-16T21:14:12.938000Z TestFramework (INFO): Query the TXOs using the /getutxos URI with a binary response\r\n2023-03-16T21:14:12.939000Z TestFramework (INFO): Test the /getutxos URI with and without /checkmempool\r\n2023-03-16T21:14:14.065000Z TestFramework (INFO): Test the /block, /blockhashbyheight, /headers, and /blockfilterheaders URIs\r\n2023-03-16T21:14:15.221000Z TestFramework (INFO): Test tx inclusion in the /mempool and /block URIs\r\n2023-03-16T21:14:16.326000Z TestFramework (INFO): Test the /chaininfo URI\r\n2023-03-16T21:14:16.334000Z TestFramework (INFO): Test compatibility of deprecated and newer endpoints\r\n2023-03-16T21:14:16.341000Z TestFramework (INFO): Test the /deploymentinfo URI\r\n2023-03-16T21:14:16.404000Z TestFramework (INFO): Stopping nodes\r\n2023-03-16T21:14:16.611000Z TestFramework (INFO): Cleaning up /tmp/bitcoin_func_test_vwqauy2g on exit\r\n2023-03-16T21:14:16.612000Z TestFramework (INFO): Tests successful\r\n\r\n```\r\n\r\nI think this was the issue: Python Enums were introduced in version 3.4, and the value attribute was added in version 3.6. I'm fixing it.",
      "created_at" : "2023-03-16T21:13:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#issuecomment-1472748621",
      "id" : 1472748621,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27253",
      "node_id" : "IC_kwDOABII585XyFxN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1472748621/reactions"
      },
      "updated_at" : "2023-03-16T21:26:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1472748621",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/110166421?v=4",
         "events_url" : "https://api.github.com/users/pablomartin4btc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pablomartin4btc/followers",
         "following_url" : "https://api.github.com/users/pablomartin4btc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pablomartin4btc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pablomartin4btc",
         "id" : 110166421,
         "login" : "pablomartin4btc",
         "node_id" : "U_kgDOBpEBlQ",
         "organizations_url" : "https://api.github.com/users/pablomartin4btc/orgs",
         "received_events_url" : "https://api.github.com/users/pablomartin4btc/received_events",
         "repos_url" : "https://api.github.com/users/pablomartin4btc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pablomartin4btc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pablomartin4btc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pablomartin4btc"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1140271032"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140271032"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What do you think about this approach? I think it's quite minimal:\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/httpserver.cpp b/src/httpserver.cpp\r\nindex 942caa042..6a6176a78 100644\r\n--- a/src/httpserver.cpp\r\n+++ b/src/httpserver.cpp\r\n@@ -15,6 +15,7 @@\r\n #include <rpc/protocol.h> // For HTTP status codes\r\n #include <shutdown.h>\r\n #include <sync.h>\r\n+#include <util/check.h>\r\n #include <util/strencodings.h>\r\n #include <util/syscall_sandbox.h>\r\n #include <util/system.h>\r\n@@ -253,6 +254,14 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\r\n         return;\r\n     }\r\n \r\n+    // Early reject invalid URI\r\n+    if (!hreq->GetURIParsed()) {\r\n+        LogPrint(BCLog::HTTP, \"HTTP request from %s rejected: Invalid URI\\n\",\r\n+                 hreq->GetPeer().ToStringAddrPort());\r\n+        hreq->WriteReply(HTTP_BAD_REQUEST, \"Invalid URI\");\r\n+        return;\r\n+    }\r\n+\r\n     LogPrint(BCLog::HTTP, \"Received a %s request for %s from %s\\n\",\r\n              RequestMethodString(hreq->GetRequestMethod()), SanitizeString(hreq->GetURI(), SAFE_CHARS_URI).substr(0, 100), hreq->GetPeer().ToStringAddrPort());\r\n \r\n@@ -535,18 +544,22 @@ void HTTPEvent::trigger(struct timeval* tv)\r\n     else\r\n         evtimer_add(ev, tv); // trigger after timeval passed\r\n }\r\n-HTTPRequest::HTTPRequest(struct evhttp_request* _req, bool _replySent) : req(_req), replySent(_replySent)\r\n+HTTPRequest::HTTPRequest(struct evhttp_request* _req, bool _replySent) :\r\n+        req{_req},\r\n+        m_uri_parsed{evhttp_uri_parse(evhttp_request_get_uri(req))},\r\n+        replySent{_replySent}\r\n {\r\n }\r\n \r\n HTTPRequest::~HTTPRequest()\r\n {\r\n+    // evhttpd cleans up the request, as long as a reply was sent.\r\n     if (!replySent) {\r\n         // Keep track of whether reply was sent to avoid request leaks\r\n         LogPrintf(\"%s: Unhandled request\\n\", __func__);\r\n         WriteReply(HTTP_INTERNAL_SERVER_ERROR, \"Unhandled request\");\r\n     }\r\n-    // evhttpd cleans up the request, as long as a reply was sent.\r\n+    if(m_uri_parsed) evhttp_uri_free(m_uri_parsed);\r\n }\r\n \r\n std::pair<bool, std::string> HTTPRequest::GetHeader(const std::string& hdr) const\r\n@@ -665,14 +678,13 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod() const\r\n \r\n std::optional<std::string> HTTPRequest::GetQueryParameter(const std::string& key) const\r\n {\r\n-    const char* uri{evhttp_request_get_uri(req)};\r\n-\r\n-    return GetQueryParameterFromUri(uri, key);\r\n+    if (!Assume(m_uri_parsed)) return std::nullopt;  // http_request_cb should have checked that m_uri_parsed is not nullptr\r\n+    return GetQueryParameterFromUri(m_uri_parsed, key);\r\n }\r\n \r\n-std::optional<std::string> GetQueryParameterFromUri(const char* uri, const std::string& key)\r\n+std::optional<std::string> GetQueryParameterFromUri(const evhttp_uri* uri_parsed, const std::string& key)\r\n {\r\n-    evhttp_uri* uri_parsed{evhttp_uri_parse(uri)};\r\n+    assert(uri_parsed);\r\n     const char* query{evhttp_uri_get_query(uri_parsed)};\r\n     std::optional<std::string> result;\r\n \r\n@@ -689,7 +701,6 @@ std::optional<std::string> GetQueryParameterFromUri(const char* uri, const std::\r\n         }\r\n         evhttp_clear_headers(&params_q);\r\n     }\r\n-    evhttp_uri_free(uri_parsed);\r\n \r\n     return result;\r\n }\r\ndiff --git a/src/httpserver.h b/src/httpserver.h\r\nindex 036a39a02..84906e121 100644\r\n--- a/src/httpserver.h\r\n+++ b/src/httpserver.h\r\n@@ -14,6 +14,7 @@ static const int DEFAULT_HTTP_WORKQUEUE=16;\r\n static const int DEFAULT_HTTP_SERVER_TIMEOUT=30;\r\n \r\n struct evhttp_request;\r\n+struct evhttp_uri;\r\n struct event_base;\r\n class CService;\r\n class HTTPRequest;\r\n@@ -57,6 +58,7 @@ class HTTPRequest\r\n {\r\n private:\r\n     struct evhttp_request* req;\r\n+    evhttp_uri* m_uri_parsed;\r\n     bool replySent;\r\n \r\n public:\r\n@@ -75,6 +77,9 @@ public:\r\n      */\r\n     std::string GetURI() const;\r\n \r\n+    /** Get libevent parsed URI, which is nullptr if uri parsing failed */\r\n+    const evhttp_uri* GetURIParsed() const { return m_uri_parsed; }\r\n+\r\n     /** Get CService (address:ip) for the origin of the http request.\r\n      */\r\n     CService GetPeer() const;\r\n@@ -135,10 +140,10 @@ public:\r\n  *\r\n  * Helper function for HTTPRequest::GetQueryParameter.\r\n  *\r\n- * @param[in] uri is the entire request uri\r\n+ * @param[in] uri_parsed is the request uri after parsing it with evhttp_uri_parse\r\n  * @param[in] key represents the query parameter of which the value is returned\r\n  */\r\n-std::optional<std::string> GetQueryParameterFromUri(const char* uri, const std::string& key);\r\n+std::optional<std::string> GetQueryParameterFromUri(const evhttp_uri* uri_parsed, const std::string& key);\r\n \r\n /** Event handler closure.\r\n  */\r\n\r\n```\r\n</details>",
      "commit_id" : "d16effe8cb2c18b72eeda596c4d3cf0c38b93263",
      "created_at" : "2023-03-17T13:56:15Z",
      "diff_hunk" : "@@ -13,26 +15,34 @@ BOOST_AUTO_TEST_CASE(test_query_parameters)\n {\n     std::string uri {};\n \n+    evhttp_request* evreq = evhttp_request_new(nullptr, nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27253#discussion_r1140271032",
      "id" : 1140271032,
      "in_reply_to_id" : 1139180604,
      "line" : 18,
      "node_id" : "PRRC_kwDOABII585D9ye4",
      "original_commit_id" : "213554cb97c9c89bca56b56e8d0af473102e3061",
      "original_line" : 18,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/test/httpserver_tests.cpp",
      "position" : 13,
      "pull_request_review_id" : 1346000963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27253",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140271032/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-17T13:56:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140271032",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   }
]
