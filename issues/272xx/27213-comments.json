[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [vasild](https://github.com/bitcoin/bitcoin/pull/27213#issuecomment-1458015010), [1440000bytes](https://github.com/bitcoin/bitcoin/pull/27213#issuecomment-1461538006) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27214](https://github.com/bitcoin/bitcoin/pull/27214) (addrman: Enable selecting addresses by network by amitiuttarwar)\n* [#27052](https://github.com/bitcoin/bitcoin/pull/27052) (test: rpc: add last block announcement time to getpeerinfo result by LarryRuane)\n* [#25572](https://github.com/bitcoin/bitcoin/pull/25572) (refactor: Introduce EvictionManager and use it for the inbound eviction logic by dergoegge)\n* [#25268](https://github.com/bitcoin/bitcoin/pull/25268) (refactor: Introduce EvictionManager by dergoegge)\n* [#23352](https://github.com/bitcoin/bitcoin/pull/23352) (test: Extend stale_tip_peer_management test by MarcoFalke)\n* [#18470](https://github.com/bitcoin/bitcoin/pull/18470) (test: Extend stale tip test by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-03-06T19:46:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27213#issuecomment-1456856496",
      "id" : 1456856496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27213",
      "node_id" : "IC_kwDOABII585W1d2w",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456856496/reactions"
      },
      "updated_at" : "2023-03-09T08:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456856496",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "We have 3 open questions that we are interested in hearing feedback from reviewers. We have considered many potential interactions and have laid out a couple specific ones along with tradeoffs of different approaches.\r\n\r\n### IBD \r\nThe first is regarding the interactions between this patch & IBD. Peers on privacy network might be slower than clearnet peers (eg. Tor or I2P). Our current proposal does not have any special case logic for disabling the network prioritization during IBD. \r\n\r\nThis could mean that our overall IBD speed is reduced by not having the fastest peers possible. The network peers could also be intermittently disconnected for stalling & get the node into a loop where it, for example, disconnects a Tor peer, connects to an IPV4 peer, re-adds a Tor peer and then keeps repeating. Finally, there could be interactions with the slow peers causing delays in the response time of the faster peers based on the specifics of our IBD logic. One solution is to just disable the network-specific outbound logic during IBD.\r\n\r\nOn the other hand, a node can get slow peers by random chance anyways. Whether randomly connecting to altnet peers or because a clearnet peer just happens to be slow. If they are slow, but not slow enough to be evicted due to the stalling limit, that will already have a significant impact on the IBD rate. The issues and potential solutions with improving IBD can be seen as tangential to this proposal, and we could favor not adding custom workarounds that serve as a bandaid to mask the root cause. Enabling alternative networks during IBD is already known to slow down the sync dramatically, and we can just add a warning in the documentation to help users become more aware. \r\n\r\n### Peers protected from eviction \r\nThis patch adds eviction protection for special network peers, but it only gets triggered when we have an extra outbound-full-relay peer (aka 9). This occurs when we detect a stale tip or because we added another special network peer. In these situations weâd want to ensure that we have at least one non-protected peer that can be disconnected so the node can return to the steady state of 8 full-relay outbound peers. \r\n\r\nCurrently, we protect 4 peers via `m_chain_sync.m_protect`, which are the first peers that send us headers corresponding to our best chain. This means 4 peers could be protected with this logic, and 3 more peers being protected by their network, leaving us just one peer to disconnect in the worst case. If we added support for one more alternative network (eg. yggdrasil ââin https://github.com/bitcoin/bitcoin/pull/23531), a user activating all networks could run into a problem where they have 8 protected peers in these circumstances. \r\n\r\nAlthough these circumstances are unlikely for a couple different reasons, weâd like to have a clear mitigation strategy. One option is to reduce the number of peers we protect with the headers logic (via `m_protect`). Another is to limit the network-specific logic to 2 random networks or such. Another is to cross this bridge when we are implementing support for another network. \r\n\r\n### Network peer protection \r\nA potential concern of this patch is that the logic that protects network peers from eviction could be âover-protectiveâ. For example, keeping a Tor connection only because it is the only Tor connection, not because itâs providing us meaningful data.\r\n\r\nAny concerns around this are completely bounded by the fact that the protection logic is limited to when we have an _extra_ peer, either through stale tip detection or through the new temporary connections for network specific peers. \r\n\r\nHowever, if there is still concern, @ajtowns had an interesting idea to increase our likelihood of adding a 2nd peer from alternate networks. We could update the stale tip logic to choose the network of the extra outbound differently. Right now, the network odds reflect the proportions represented in `AddrMan`. Instead, we could amend the logic to select based on the proportion of networks we are connected to. This would increase our likelihood of connecting to the network, because, for example, youâre more likely to have â I2P peers than â of your addrman be I2P addresses. \r\n\r\nIncreasing the chances of connecting to a privacy network in that context has two benefits: \r\nIt serves the original intention of the stale top logic to be a last-ditch effort against a perceived eclipse attack. Overtaking multiple networks increases the cost of attack, so this is theoretically a more useful attempt than clearnet.\r\nFor this proposed patch, it would mean the node is more likely to add another peer from the alternate network, so the node is more able to replace a âbadâ network peer with hopefully a better one. This would be effective since the stale tip logic tends to run a couple times a day. \r\n\r\nThis could be treated as a separate chunk of work to be evaluated in a follow-up, or it could be incorporated into this PR if reviewers believe it could help mitigate concerns about edge case possibilities.  ",
      "created_at" : "2023-03-06T19:53:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27213#issuecomment-1456867760",
      "id" : 1456867760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27213",
      "node_id" : "IC_kwDOABII585W1gmw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456867760/reactions"
      },
      "updated_at" : "2023-03-06T19:53:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456867760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\n\r\nThis was somewhere on my TODO, thanks for picking it up!\r\n\r\n> The automatic connections to alternate networks is done defensively, by first filling all outbound slots with random addresses (as in the status quo) and then adding additional peers from reachable networks the node is currently not connected to. This approach ensures that outbound slots are not left unfilled while attempting to connect to a network that may be unavailable due to a technical issue or misconfiguration that bitcoind cannot detect.\r\n\r\nHmm, this is maybe ok. Another approach would be to try to open to e.g. Tor while still having < 8 outbound connections. To counter the issue of staying with < 8 connections and not being able to open to Tor because e.g. the Tor proxy is broken, then we could give up after a few attempts and then fall back to the old way of filling with random (aka IPv4 ;-)) addresses. If we overshoot the 8 connections (like described above), then for some time we will have more, until eviction kicks in. How much time is that exactly? If that is short then it would be sub-optimal to open a IPv4 connection and drop it shortly after in cases where Tor connectivity is working smoothly. If it is long then we have practically increased the limit of 8 which will cause more traffic.\r\n\r\n> In the above, the clearnet networks IPv4 and IPv6 are counted as one network because diversification between these doesn't make sense and is impossible in some network environments.\r\n\r\nWhy it doesn't make sense? I think it is an extra effort to obtain IPv4 addresses if one has IPv6 addresses and the other way around. Why impossible in some network environments? After all you know if you are going to attempt to connect to `5.6.7.8` or `2030:c0fe:...`.\r\n\r\n> Manual connections are also taken into account: If a user already establishes manual connections to a trusted peer from a network, there is no longer a need to make extra efforts\r\n\r\n+1\r\n\r\n> IBD\r\n\r\nI think there is no need to add special logic during IBD (e.g. disable this PR during IBD). Clearnet peers can also be slow and non-clearnet peers may be fast-enough. IBD should be able to handle slow/fast peers already without special hand-holding.\r\n\r\n> Peers protected from eviction\r\n\r\nI think we don't need to worry about this now because even if we treat IPv4 and IPv6 as separate networks and all 4 from `m_protected` are from one network (e.g. IPv4), then we have 4 more slots for IPv6, Tor, I2P, CJDNS. If we implement more networks, maybe by that time we will have increased the default 8 or I would suggest to then start disconnecting from `m_protected`.\r\n\r\n> Network peer protection\r\n> A potential concern of this patch is that the logic that protects network peers from eviction could be âover-protectiveâ. For example, keeping a Tor connection only because it is the only Tor connection, not because itâs providing us meaningful data.\r\n\r\nI don't see it as \"over-protective\". Can we not have some metric of whether a peer is \"providing us a meaningful data\"? I am ok to deal with this in a followup.\r\n\r\n----\r\n\r\nTaking a step back, the root problem here is that addrman has many IPv4 addresses and few I2P ones (for example). If it would have equal number of addresses from each network, then this problem would not exist because then picking up a random one would have a 1/5 chance of selecting any network (thus there would not be any bias towards IPv4). Would it be simpler and solve the problem equally well if we only change addrman internally to return an address from any given network with a 1/5 chance? Then no need to change the eviction logic or the `ThreadOpenConnections` logic. And no need to _guarantee_ explicitly in the code that at least one connection exists to each network. It will happen by itself most of the time.",
      "created_at" : "2023-03-07T11:36:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27213#issuecomment-1458015010",
      "id" : 1458015010,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27213",
      "node_id" : "IC_kwDOABII585W54si",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1458015010/reactions"
      },
      "updated_at" : "2023-03-07T11:36:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1458015010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think that scenario would already be problematic ... and then we wouldn't have a peer to evict.\r\n\r\n\"... then start disconnecting from `m_protected`\"\r\n\r\n> the math\r\n\r\nI think it goes like this: (with 5 networks) the chance of not selecting IPv4 for the first peer is `4/5`, for the first and second peer is `(4/5)^2`. The chance of not selecting IPv4 in all `8` choices is `p=(4/5)^8`. So, the chance of not selecting IPv4 or not selecting IPv6 is `2*p`. The chance of not selecting IPv4, or IPv6 or Tor or I2P or CJDNS is `5*p`. In other words, the chance of not being connected to at least one network is `5*p`, and thus the chance of being connected to all networks is `1-5*p`, or `16%` (`60%` for 4 nets, `88%` for 3 nets, `99%` for 2 nets and `100%` for 1 net).\r\n\r\nI think this is enough to ditch the idea of random-chance `Select()`. Also, maybe it would not be so much more simpler than this PR.\r\n\r\n_offtopic:_\r\n\r\n> One interesting idea for possible follow-ups would be optional logic that ties certain behavior to networks (e.g. broadcasting wallet transactions only to peers from anonymity networks).\r\n\r\nYes, please! :) To take this one step further, it would be even better to create a temporary connection(s) to Tor/I2P, broadcast our transaction(s) and close the connection(s) (with I2P transient address). This way, if we broadcast another tx after e.g. 1 hour the recipient will not be able to conclude that both transactions come from the same origin.\r\n\r\n> In order for that to work, it would be good to have stronger guarantee that we are actually connected to these networks.\r\n\r\nWould not be needed with temporary tx-broadcast connections.",
      "created_at" : "2023-03-08T09:29:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27213#issuecomment-1459853005",
      "id" : 1459853005,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27213",
      "node_id" : "IC_kwDOABII585XA5bN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1459853005/reactions"
      },
      "updated_at" : "2023-03-08T09:29:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1459853005",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think it goes like this: (...)\r\n> \r\n> I think this is enough to ditch the idea of random-chance `Select()`. Also, maybe it would not be so much more simpler than this PR.\r\n\r\nI agree with that conclusion, but I think you can't just add the probabilities like that. I think the correct formula is \r\n$$p={k! S(n,k) \\over k^n}$$\r\nwhere k is the number of networks, $n=8$ the number of outbounds and $S(n,k)$ the Stirling number of the second kind, see  [here](https://stats.stackexchange.com/questions/30483/probability-of-selecting-each-item-at-least-once-when-sampling-with-replacement) for an explanation - the resulting `32.256%` for all 5 networks agrees very well with my simulation results.\r\n(sorry, this is getting offtopic, and I'll stop now - will address your other open comments soon, unless amiti is first) ",
      "created_at" : "2023-03-08T23:43:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27213#issuecomment-1461041818",
      "id" : 1461041818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27213",
      "node_id" : "IC_kwDOABII585XFbqa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461041818/reactions"
      },
      "updated_at" : "2023-03-09T01:48:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461041818",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK ",
      "created_at" : "2023-03-09T08:17:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27213#issuecomment-1461538006",
      "id" : 1461538006,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27213",
      "node_id" : "IC_kwDOABII585XHUzW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461538006/reactions"
      },
      "updated_at" : "2023-03-09T08:17:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461538006",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   }
]
