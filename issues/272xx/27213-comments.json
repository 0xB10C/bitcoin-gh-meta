[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2023-03-06T19:46:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27213#issuecomment-1456856496",
      "id" : 1456856496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27213",
      "node_id" : "IC_kwDOABII585W1d2w",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456856496/reactions"
      },
      "updated_at" : "2023-03-06T19:46:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456856496",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "We have 3 open questions that we are interested in hearing feedback from reviewers. We have considered many potential interactions and have laid out a couple specific ones along with tradeoffs of different approaches.\r\n\r\n### IBD \r\nThe first is regarding the interactions between this patch & IBD. Peers on privacy network might be slower than clearnet peers (eg. Tor or I2P). Our current proposal does not have any special case logic for disabling the network prioritization during IBD. \r\n\r\nThis could mean that our overall IBD speed is reduced by not having the fastest peers possible. The network peers could also be intermittently disconnected for stalling & get the node into a loop where it, for example, disconnects a Tor peer, connects to an IPV4 peer, re-adds a Tor peer and then keeps repeating. Finally, there could be interactions with the slow peers causing delays in the response time of the faster peers based on the specifics of our IBD logic. One solution is to just disable the network-specific outbound logic during IBD.\r\n\r\nOn the other hand, a node can get slow peers by random chance anyways. Whether randomly connecting to altnet peers or because a clearnet peer just happens to be slow. If they are slow, but not slow enough to be evicted due to the stalling limit, that will already have a significant impact on the IBD rate. The issues and potential solutions with improving IBD can be seen as tangential to this proposal, and we could favor not adding custom workarounds that serve as a bandaid to mask the root cause. Enabling alternative networks during IBD is already known to slow down the sync dramatically, and we can just add a warning in the documentation to help users become more aware. \r\n\r\n### Peers protected from eviction \r\nThis patch adds eviction protection for special network peers, but it only gets triggered when we have an extra outbound-full-relay peer (aka 9). This occurs when we detect a stale tip or because we added another special network peer. In these situations weâd want to ensure that we have at least one non-protected peer that can be disconnected so the node can return to the steady state of 8 full-relay outbound peers. \r\n\r\nCurrently, we protect 4 peers via `m_chain_sync.m_protect`, which are the first peers that send us headers corresponding to our best chain. This means 4 peers could be protected with this logic, and 3 more peers being protected by their network, leaving us just one peer to disconnect in the worst case. If we added support for one more alternative network (eg. yggdrasil ââin https://github.com/bitcoin/bitcoin/pull/23531), a user activating all networks could run into a problem where they have 8 protected peers in these circumstances. \r\n\r\nAlthough these circumstances are unlikely for a couple different reasons, weâd like to have a clear mitigation strategy. One option is to reduce the number of peers we protect with the headers logic (via `m_protect`). Another is to limit the network-specific logic to 2 random networks or such. Another is to cross this bridge when we are implementing support for another network. \r\n\r\n### Network peer protection \r\nA potential concern of this patch is that the logic that protects network peers from eviction could be âover-protectiveâ. For example, keeping a Tor connection only because it is the only Tor connection, not because itâs providing us meaningful data.\r\n\r\nAny concerns around this are completely bounded by the fact that the protection logic is limited to when we have an _extra_ peer, either through stale tip detection or through the new temporary connections for network specific peers. \r\n\r\nHowever, if there is still concern, @ajtowns had an interesting idea to increase our likelihood of adding a 2nd peer from alternate networks. We could update the stale tip logic to choose the network of the extra outbound differently. Right now, the network odds reflect the proportions represented in `AddrMan`. Instead, we could amend the logic to select based on the proportion of networks we are connected to. This would increase our likelihood of connecting to the network, because, for example, youâre more likely to have â I2P peers than â of your addrman be I2P addresses. \r\n\r\nIncreasing the chances of connecting to a privacy network in that context has two benefits: \r\nIt serves the original intention of the stale top logic to be a last-ditch effort against a perceived eclipse attack. Overtaking multiple networks increases the cost of attack, so this is theoretically a more useful attempt than clearnet.\r\nFor this proposed patch, it would mean the node is more likely to add another peer from the alternate network, so the node is more able to replace a âbadâ network peer with hopefully a better one. This would be effective since the stale tip logic tends to run a couple times a day. \r\n\r\nThis could be treated as a separate chunk of work to be evaluated in a follow-up, or it could be incorporated into this PR if reviewers believe it could help mitigate concerns about edge case possibilities.  ",
      "created_at" : "2023-03-06T19:53:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27213#issuecomment-1456867760",
      "id" : 1456867760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27213",
      "node_id" : "IC_kwDOABII585W1gmw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456867760/reactions"
      },
      "updated_at" : "2023-03-06T19:53:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456867760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   }
]
