[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#18081](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/18081.html) (test: set a name for CI Docker containers by fanquake)\n* [#17428](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17428.html) (p2p: Try to preserve outbound block-relay-only connections during restart by hebasto)\n* [#17398](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17398.html) (build: Update leveldb to 1.22+ by laanwj)\n* [#16883](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16883.html) (WIP: Qt: add QML based mobile GUI by icota)\n* [#16367](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16367.html) (Multiprocess build support by ryanofsky)\n* [#15112](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15112.html) (build: Optionally enable -Wzero-as-null-pointer-constant by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-02-05T23:18:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-582659603",
      "id" : 582659603,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18077",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MjY1OTYwMw==",
      "updated_at" : "2020-02-06T07:56:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582659603",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for picking this up again. I hope we manage to do this this time.",
      "created_at" : "2020-02-06T11:22:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-582859339",
      "id" : 582859339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18077",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4Mjg1OTMzOQ==",
      "updated_at" : "2020-02-06T11:22:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582859339",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r375996088"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375996088"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This will break building with both NAT-PMP and UPnP support...",
      "commit_id" : "60e2524c8aa0edf5ce09d842cec09065cb854bcd",
      "created_at" : "2020-02-06T18:06:53Z",
      "diff_hunk" : "@@ -0,0 +1,221 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#endif\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_upnp_interrupt;\n+static std::thread g_upnp_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadMapPort()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_UPNP);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_upnp_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+\n+#else // USE_UPNP",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r375996088",
      "id" : 375996088,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5NjA4OA==",
      "original_commit_id" : "60e2524c8aa0edf5ce09d842cec09065cb854bcd",
      "original_position" : 119,
      "path" : "src/mapport.cpp",
      "position" : 119,
      "pull_request_review_id" : 354660903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077",
      "updated_at" : "2020-02-06T18:06:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375996088",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r375999662"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375999662"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> This will break building with both NAT-PMP and UPnP support...\r\n\r\nYes, I'm aware of that. This PR in its current state is intended for NAT-PMP functionality tests and concept (N)ACKs.",
      "commit_id" : "60e2524c8aa0edf5ce09d842cec09065cb854bcd",
      "created_at" : "2020-02-06T18:14:29Z",
      "diff_hunk" : "@@ -0,0 +1,221 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#endif\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_upnp_interrupt;\n+static std::thread g_upnp_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadMapPort()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_UPNP);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_upnp_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+\n+#else // USE_UPNP",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r375999662",
      "id" : 375999662,
      "in_reply_to_id" : 375996088,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5OTY2Mg==",
      "original_commit_id" : "60e2524c8aa0edf5ce09d842cec09065cb854bcd",
      "original_position" : 119,
      "path" : "src/mapport.cpp",
      "position" : 119,
      "pull_request_review_id" : 354665487,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077",
      "updated_at" : "2020-02-06T18:14:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375999662",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-02-06T18:16:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-583039181",
      "id" : 583039181,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18077",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MzAzOTE4MQ==",
      "updated_at" : "2020-02-06T18:16:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583039181",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   }
]
