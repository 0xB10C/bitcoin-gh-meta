[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Strong concept ACK! Seems like a big improvement.\r\n\r\nCan you comment more on the 6 seconds claim? AFAIK each bench was supposed to target running for 1 second? Is this no longer required to reduce variance?\r\n\r\n\r\nSecondly -- and separately -- can you comment on how this might impact the need for something like #17375? Can we add better support for benchmarks where we want to run with different scaling params and output each trial to get a sense of the complexity? ",
      "created_at" : "2020-01-27T22:09:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-578978817",
      "id" : 578978817,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODk3ODgxNw==",
      "updated_at" : "2020-01-27T22:09:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578978817",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I calculate a good number of iterations based on the clock accuracy, then perform these iterations a few times and use the median to get rid of outliers. I found it actually to be more reliable with shorter runs, because there is less chance for random fluctuations to interfer. It is necessary though to disable frequency scaling etc (but this should be done with the old framework too anyways). This can be easily done with e.g pyperf\r\n\r\nConcerning https://github.com/bitcoin/bitcoin/pull/17375, nanobench can estimate complexity, but it requires a bit of code change: https://github.com/martinus/nanobench/blob/master/docs/reference.md#asymptotic-complexity",
      "created_at" : "2020-01-27T22:21:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-578983430",
      "id" : 578983430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODk4MzQzMA==",
      "updated_at" : "2020-01-27T22:21:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578983430",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#18013](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/18013.html) (bench: Fix benchmarks filters by elichai)\n* [#18000](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/18000.html) ([WIP] Coin Statistics Index by fjahr)\n* [#17977](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17977.html) ([WIP] Implement BIP 340-342 validation (Schnorr/taproot/tapscript) by sipa)\n* [#17526](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17526.html) (Use Single Random Draw In addition to knapsack as coin selection fallback by achow101)\n* [#17398](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17398.html) (build: Update leveldb to 1.22+ by laanwj)\n* [#17331](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17331.html) (Use effective values throughout coin selection by achow101)\n* [#16902](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16902.html) (O(1) OP_IF/NOTIF/ELSE/ENDIF script implementation by sipa)\n* [#13525](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13525.html) (policy: Report reason inputs are nonstandard from AreInputsStandard by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-01-28T01:49:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-579041181",
      "id" : 579041181,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTA0MTE4MQ==",
      "updated_at" : "2020-01-28T16:59:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579041181",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The lint check currently fails with this error:\r\n\r\n> fatal: bad revision '8b138526b5dc...488d538cbf6f'\r\n\r\nI believe the reason is some key verification check at the end of ci/lint/06_script.sh, but I can't really say why this is failing",
      "created_at" : "2020-01-28T07:00:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-579108323",
      "id" : 579108323,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTEwODMyMw==",
      "updated_at" : "2020-01-28T07:00:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579108323",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\n\r\n\r\nThe travis failure is\r\n\r\n```\r\nThe locale dependent function std::to_string(...) appears to be used:\r\n\r\nsrc/bench/nanobench.h:            auto sysCpu = \"/sys/devices/system/cpu/cpu\" + std::to_string(id);\r\n\r\nsrc/bench/nanobench.h:                warnings.emplace_back(\"CPU frequency scaling enabled: CPU \" + std::to_string(id) + \" between \" +\r\n\r\nUnnecessary locale dependence can cause bugs that are very\r\n\r\ntricky to isolate and fix. Please avoid using locale dependent\r\n\r\nfunctions if possible.\r\n\r\nAdvice not applicable in this specific case? Add an exception\r\n\r\nby updating the ignore list in test/lint/lint-locale-dependence.sh\r\n\r\n^---- failure generated from test/lint/lint-locale-dependence.sh",
      "created_at" : "2020-01-28T15:05:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-579288765",
      "id" : 579288765,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTI4ODc2NQ==",
      "updated_at" : "2020-01-28T15:05:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579288765",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would it be easy to hack in csv output that is somewhat similar to the existing output? The markdown table looks a little tricky to parse programmatically (though it could be done). For example, bitcoinperf (https://github.com/chaincodelabs/bitcoinperf) currently relies on this format. ",
      "created_at" : "2020-01-28T15:24:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-579298846",
      "id" : 579298846,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTI5ODg0Ng==",
      "updated_at" : "2020-01-28T15:24:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579298846",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The locale dependent function std::to_string(...) appears to be used:\r\n\r\nAh, ok I'll fix this\r\n\r\n> Would it be easy to hack in csv output that is somewhat similar to the existing output?\r\n\r\nI think it should be easy, in nanobench I already have CSV & JSON output format using [mustache-like templates](https://github.com/martinus/nanobench/blob/master/docs/reference.md#processing-results), so it's possible to create a custom format. I have not exposed this feature yet though in this PR.",
      "created_at" : "2020-01-28T15:53:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-579315933",
      "id" : 579315933,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTMxNTkzMw==",
      "updated_at" : "2020-01-28T15:53:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579315933",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Strong concept ACK\r\n\r\n@martinus, thanks for your great contributions! Please keep them coming :)",
      "created_at" : "2020-01-28T16:49:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-579345876",
      "id" : 579345876,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTM0NTg3Ng==",
      "updated_at" : "2020-01-28T16:49:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579345876",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Does this library also does memory clobbers and barriers? (like google's `DoNotOptimize`[0], `ClobberMemory`[1], or Rust's `black_box`[2])\r\n\r\n[0] https://github.com/google/benchmark/blob/master/include/benchmark/benchmark.h#L307\r\n[1] https://github.com/google/benchmark/blob/master/include/benchmark/benchmark.h#L326\r\n[2] https://doc.rust-lang.org/std/hint/fn.black_box.html",
      "created_at" : "2020-01-28T17:02:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-579352138",
      "id" : 579352138,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTM1MjEzOA==",
      "updated_at" : "2020-01-28T17:02:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579352138",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Does this library also does memory clobbers and barriers? (like google's `DoNotOptimize`[0], `ClobberMemory`[1], or Rust's `black_box`[2])\r\n\r\nI currently have `doNotOptimizeAway`, which is based on [folly](https://github.com/facebook/folly/blob/master/folly/Benchmark.h)'s benchmark. I think folly's version is based on google benchmark. I have not added `doNotOptimizeAway` calls in the PR because I did not want to modify each benchmark too much\r\n\r\nI don't have clobberMemory yet, because I've never used it... What I'm also doing is I force the `run(...)` to be noinline to prevent some optimizations.",
      "created_at" : "2020-01-28T17:11:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-579356379",
      "id" : 579356379,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTM1NjM3OQ==",
      "updated_at" : "2020-01-28T17:11:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579356379",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it possible to make the nanobench include a submodule (like secp256k1 or univalue) so that it's easier for us to pull in updates from upstream? If you plan on adding new features to nanobench, that should help streamline review potentially. If you think that there will be Bitcoin specific changes made to the header that you wouldn't want to upstream, then I would leave it as you've done.",
      "created_at" : "2020-01-28T20:11:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-579433076",
      "id" : 579433076,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTQzMzA3Ng==",
      "updated_at" : "2020-01-28T20:11:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579433076",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Closed https://github.com/bitcoin/bitcoin/pull/17375 in favor of nanobench. When you have time would love assistance in making the asymptotic test introduced there nanobench compatible.\r\n\r\n\r\nBeing able to run asymptotic tests on the code is going to be a huge help with advocating for mempool policy changes in the future (e.g., loosening descendants limit) once the epoch mempool work is completed. This also impacts other parts of the code (e.g., wallet) where right now we don't have good insight into if we introduce a regression. I think the curve fitting is a bit less useful because we do care about the constant factors too (e.g., if we're a O(n log n) v.s. O(n) but c > log n for max n), but it's quite nifty nonetheless. ",
      "created_at" : "2020-01-28T20:21:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18011#issuecomment-579437431",
      "id" : 579437431,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTQzNzQzMQ==",
      "updated_at" : "2020-01-28T20:21:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579437431",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   }
]
