[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18470 (net: Make stale tip check time type-safe, extend test by MarcoFalke)\n* #18446 (test: Add test for wtxid transaction relay by fjahr)\n* #18261 (Erlay: bandwidth-efficient transaction relay protocol by naumenkogs)\n* #18044 (Use wtxid for transaction relay by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-01-31T08:39:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-580639076",
      "id" : 580639076,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDYzOTA3Ng==",
      "updated_at" : "2020-03-30T14:23:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580639076",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-02-18T02:53:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-587249206",
      "id" : 587249206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NzI0OTIwNg==",
      "updated_at" : "2020-02-18T02:53:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587249206",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "travis failure seems unrelated- `feature_fee_estimation.py` ",
      "created_at" : "2020-02-27T20:14:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-592155950",
      "id" : 592155950,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MjE1NTk1MA==",
      "updated_at" : "2020-02-27T20:14:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592155950",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It could be a crash, because node1 stops to log anything at all",
      "created_at" : "2020-02-27T20:43:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-592167518",
      "id" : 592167518,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MjE2NzUxOA==",
      "updated_at" : "2020-02-27T20:43:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592167518",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385368573"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385368573"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is this not saved to disk? It seems that on restart this set is cleared regardless of whether the tx was sent out.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-02-27T21:00:46Z",
      "diff_hunk" : "@@ -534,6 +534,10 @@ class CTxMemPool\n     const setEntries & GetMemPoolParents(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     const setEntries & GetMemPoolChildren(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     uint64_t CalculateDescendantMaximum(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    // track locally submitted transactions & periodically retry initial broadcast\n+    std::set<uint256> m_unbroadcast_txids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385368573",
      "id" : 385368573,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM2ODU3Mw==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 6,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 365993014,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385368573",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385795095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385795095"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The comment is incorrect, since a tx is *not* removed when it is not sent, e.g. because it was not found.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-02-28T16:31:36Z",
      "diff_hunk" : "@@ -1590,6 +1590,11 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             if (mi != mapRelay.end()) {\n                 connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n                 push = true;\n+                // Once a peer requests GETDATA for a txn, we deem initial broadcast a success",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385795095",
      "id" : 385795095,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5NTA5NQ==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 4,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 365993014,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385795095",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385795542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385795542"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is the tx not removed when it was initially sent out after 15 minutes, e.g. when it was removed from mapRelay and then relayed from the mempool.\r\n\r\nI think this code should go down into the `if(push)` branch",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-02-28T16:32:32Z",
      "diff_hunk" : "@@ -1590,6 +1590,11 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             if (mi != mapRelay.end()) {\n                 connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n                 push = true;\n+                // Once a peer requests GETDATA for a txn, we deem initial broadcast a success\n+                int num = mempool.m_unbroadcast_txids.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385795542",
      "id" : 385795542,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5NTU0Mg==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 365993014,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385795542",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385795926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385795926"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        LogPrint(BCLog::NET, \"Removed %i from m_unbroadcast_txids before tx was sent out. \\n\", hash.GetHex());\r\n```",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-02-28T16:33:19Z",
      "diff_hunk" : "@@ -416,6 +416,10 @@ void CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n     for (const CTxIn& txin : it->GetTx().vin)\n         mapNextTx.erase(txin.prevout);\n \n+    if (mempool.m_unbroadcast_txids.erase(hash)) {\n+        LogPrint(BCLog::NET, \"Removed %i from m_unbroadcast_txids before GETDATA was received. \\n\", hash.GetHex());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385795926",
      "id" : 385795926,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5NTkyNg==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 5,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 365993014,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385795926",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385798846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385798846"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    scheduler.scheduleEvery([]{this->AttemptInitialBroadcast();}, REATTEMPT_BROADCAST_INTERVAL.count() );\r\n```\r\n\r\n",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-02-28T16:38:26Z",
      "diff_hunk" : "@@ -2332,6 +2332,9 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     // Dump network addresses\n     scheduler.scheduleEvery(std::bind(&CConnman::DumpAddresses, this), DUMP_PEERS_INTERVAL * 1000);\n \n+    // Attempt to broadcast transactions that have not yet been acknowledged by the network\n+    scheduler.scheduleEvery(std::bind(&CConnman::AttemptInitialBroadcast, this), REATTEMPT_BROADCAST_INTERVAL.count() );",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385798846",
      "id" : 385798846,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5ODg0Ng==",
      "original_commit_id" : "1a1a30cc4adbbcccfbb073fbf8ae9df1090a2996",
      "original_position" : 39,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 366530279,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385798846",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385818114"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385818114"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "great point. originally I was thinking of doing as a follow up PR (see [here](https://gist.github.com/amitiuttarwar/b592ee410e1f02ac0d44fcbed4621dba#follow-up-prs)), but now that this unbroadcast logic is broken out into its own PR I agree it makes sense here. I'll implement.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-02-28T17:15:38Z",
      "diff_hunk" : "@@ -534,6 +534,10 @@ class CTxMemPool\n     const setEntries & GetMemPoolParents(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     const setEntries & GetMemPoolChildren(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     uint64_t CalculateDescendantMaximum(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    // track locally submitted transactions & periodically retry initial broadcast\n+    std::set<uint256> m_unbroadcast_txids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385818114",
      "id" : 385818114,
      "in_reply_to_id" : 385368573,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgxODExNA==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 6,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 366556224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385818114",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385860440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385860440"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is not frequency 1/day (as the PR post says). It's a value between 0 and 24 hours, with an average of 12 hours. You probably want to do 12*60*60 + GetRand(12*60*60) or something like that?",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-02-28T18:44:44Z",
      "diff_hunk" : "@@ -1982,7 +1982,7 @@ void CWallet::ResendWalletTransactions()\n     // that these are our transactions.\n     if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n     bool fFirst = (nNextResend == 0);\n-    nNextResend = GetTime() + GetRand(30 * 60);\n+    nNextResend = GetTime() + GetRand(24 * 60 * 60);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385860440",
      "id" : 385860440,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MDQ0MA==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 5,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 366607338,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385860440",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385865086"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385865086"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "How do you know that it won't be rejected due to \"filterInventoryKnown\"?\r\nWhat is the rationale here?",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-02-28T18:54:54Z",
      "diff_hunk" : "@@ -780,6 +780,14 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+void PeerLogicValidation::QueueUnbroadcastTxs(CNode* pnode)\n+{\n+    for(const uint256& txid : mempool.m_unbroadcast_txids){\n+        CInv inv(MSG_TX, txid);\n+        pnode->PushInventory(inv);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385865086",
      "id" : 385865086,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2NTA4Ng==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 8,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 366607338,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385865086",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r386613286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386613286"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It might. Which upholds the same guarantees as the previous logic it's replacing.\r\n\r\nOn current master, wallet transactions get rebroadcast through a scheduler flow that makes its way to `ResendWalletTransactions`, which selects transactions to rebroadcast then invokes `SubmitMemoryPoolAndRelay`. This goes to `BroadcastTransaction`, which checks ATMP then relays via `RelayTransaction`, which uses the `CNode#PushInventory` function that only adds the hash if its not contained in `filterInventoryKnown`. \r\n\r\nThis PR changes the initial parts of the flow... so `BroadcastTransaction` adds the transaction to `mempool.m_unbroadcast_txids`, then there is a scheduled job to periodically `AttemptInitialBroadcast`, but the behavior is matched where the locally-submitted transactions would be reattempted to send to the network, filtered for the connections that were already tried, and sent out to new connections.\r\n\r\nChanging that behavior could be desirable for robustness but of course reduces privacy. So out of scope for this PR. If you think it may be desirable, I'd be happy to think it through / talk about it more, we can open a new issue. (I'm working on the assumption that current delivery guarantees are sufficient). ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-02T19:50:48Z",
      "diff_hunk" : "@@ -780,6 +780,14 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+void PeerLogicValidation::QueueUnbroadcastTxs(CNode* pnode)\n+{\n+    for(const uint256& txid : mempool.m_unbroadcast_txids){\n+        CInv inv(MSG_TX, txid);\n+        pnode->PushInventory(inv);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r386613286",
      "id" : 386613286,
      "in_reply_to_id" : 385865086,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYxMzI4Ng==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 8,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 367480404,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386613286",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r386732669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386732669"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`12*60*60 + GetRand(12*60*60)` would get an average of 24 hours with a range of 12-36",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-03T00:27:53Z",
      "diff_hunk" : "@@ -1982,7 +1982,7 @@ void CWallet::ResendWalletTransactions()\n     // that these are our transactions.\n     if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n     bool fFirst = (nNextResend == 0);\n-    nNextResend = GetTime() + GetRand(30 * 60);\n+    nNextResend = GetTime() + GetRand(24 * 60 * 60);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r386732669",
      "id" : 386732669,
      "in_reply_to_id" : 385860440,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjczMjY2OQ==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 5,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 367627078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386732669",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r386781925"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386781925"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "you are right, this is a mistake. thanks ðð½",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-03T03:33:35Z",
      "diff_hunk" : "@@ -1590,6 +1590,11 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             if (mi != mapRelay.end()) {\n                 connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n                 push = true;\n+                // Once a peer requests GETDATA for a txn, we deem initial broadcast a success\n+                int num = mempool.m_unbroadcast_txids.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r386781925",
      "id" : 386781925,
      "in_reply_to_id" : 385795542,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc4MTkyNQ==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 367683008,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386781925",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387124518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387124518"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@ajtowns yeah, that's what would be closer to 1/day, right? Not sure what you meant to say.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-03T16:07:11Z",
      "diff_hunk" : "@@ -1982,7 +1982,7 @@ void CWallet::ResendWalletTransactions()\n     // that these are our transactions.\n     if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n     bool fFirst = (nNextResend == 0);\n-    nNextResend = GetTime() + GetRand(30 * 60);\n+    nNextResend = GetTime() + GetRand(24 * 60 * 60);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387124518",
      "id" : 387124518,
      "in_reply_to_id" : 385860440,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyNDUxOA==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 5,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 368110911,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387124518",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387131829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387131829"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah I see. Just want to be clear that if the network is not really used, the bloom filter doesn't roll and transaction may be not rebroadcast in days.\r\nIf that's what you have in mind when designing the whole thing, let's just leave a comment that this can happen.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-03T16:17:25Z",
      "diff_hunk" : "@@ -780,6 +780,14 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+void PeerLogicValidation::QueueUnbroadcastTxs(CNode* pnode)\n+{\n+    for(const uint256& txid : mempool.m_unbroadcast_txids){\n+        CInv inv(MSG_TX, txid);\n+        pnode->PushInventory(inv);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387131829",
      "id" : 387131829,
      "in_reply_to_id" : 385865086,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMTgyOQ==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 8,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 368120220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387131829",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387426782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387426782"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh my god. `12*60*60 + GetRand(24*60*60)` was what I was trying to type; min of 12h, max of 36h, average of 24h.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-04T03:08:30Z",
      "diff_hunk" : "@@ -1982,7 +1982,7 @@ void CWallet::ResendWalletTransactions()\n     // that these are our transactions.\n     if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n     bool fFirst = (nNextResend == 0);\n-    nNextResend = GetTime() + GetRand(30 * 60);\n+    nNextResend = GetTime() + GetRand(24 * 60 * 60);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387426782",
      "id" : 387426782,
      "in_reply_to_id" : 385860440,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyNjc4Mg==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 5,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 368478382,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387426782",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387431128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387431128"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The `filterInventoryKnown` is per-peer though, so it just won't be rebroadcast to a peer that already knew about it somehow; but it'll stay in the unbroadcast set and be retried for other peers until a getdata actually makes its way through (or until it gets dropped from the mempool)? If all of your peers ignore your INV and don't request a GETDATA, you'll not send more INVs until you find a new peer, but... even if you did, those peers would probably still not send a GETDATA anyway, so what else would you do?",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-04T03:28:20Z",
      "diff_hunk" : "@@ -780,6 +780,14 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+void PeerLogicValidation::QueueUnbroadcastTxs(CNode* pnode)\n+{\n+    for(const uint256& txid : mempool.m_unbroadcast_txids){\n+        CInv inv(MSG_TX, txid);\n+        pnode->PushInventory(inv);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387431128",
      "id" : 387431128,
      "in_reply_to_id" : 385865086,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQzMTEyOA==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 8,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 368483385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387431128",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387431682"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387431682"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`m_unbroadcast_txids` declaration is missing the `GUARDED_BY(cs)` thread safety annotation, and I think the errors adding that turns up indicates there's more locking needed which probably explains the node segfaulting in travis.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-04T03:30:54Z",
      "diff_hunk" : "@@ -534,6 +534,10 @@ class CTxMemPool\n     const setEntries & GetMemPoolParents(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     const setEntries & GetMemPoolChildren(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     uint64_t CalculateDescendantMaximum(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    // track locally submitted transactions & periodically retry initial broadcast\n+    std::set<uint256> m_unbroadcast_txids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387431682",
      "id" : 387431682,
      "in_reply_to_id" : 385368573,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQzMTY4Mg==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 6,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 368484015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387431682",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387662775"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387662775"
         }
      },
      "author_association" : "MEMBER",
      "body" : "While I couldn't come up with a privacy-leaking attack based on this being a constant, I'd still suggest to make the delay random to avoid network-wide synchronized events that don't need to be synchronized",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-04T13:24:02Z",
      "diff_hunk" : "@@ -48,6 +48,9 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n // Dump addresses to peers.dat every 15 minutes (900s)\n static constexpr int DUMP_PEERS_INTERVAL = 15 * 60;\n \n+// Attempt initial broadcast of locally submitted txns every 10 minutes.\n+static constexpr std::chrono::milliseconds REATTEMPT_BROADCAST_INTERVAL = std::chrono::milliseconds(10 * 60 * 1000);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387662775",
      "id" : 387662775,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY2Mjc3NQ==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 5,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 366530279,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387662775",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387705673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387705673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Agree, I think we should do what you just suggested.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-04T14:35:45Z",
      "diff_hunk" : "@@ -1982,7 +1982,7 @@ void CWallet::ResendWalletTransactions()\n     // that these are our transactions.\n     if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n     bool fFirst = (nNextResend == 0);\n-    nNextResend = GetTime() + GetRand(30 * 60);\n+    nNextResend = GetTime() + GetRand(24 * 60 * 60);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387705673",
      "id" : 387705673,
      "in_reply_to_id" : 385860440,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcwNTY3Mw==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 5,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 368828617,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387705673",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387750082"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387750082"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe it's the naming that confuses me. It's called \"rebroadcast\", not \"consider to rebroadcast\".\r\n>even if you did, those peers would probably still not send a GETDATA anyway\r\n\r\nNot sure about that. If transaction expires from a mempool, and there's not much activity on-chain, filter would still prevent us from re-announcing it. The correspondence between the two is questionable.\r\n\r\nBut yeah, if that's only my own confusion, I don't care about just keeping it this way without any comments.\r\n\r\n",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-04T15:40:29Z",
      "diff_hunk" : "@@ -780,6 +780,14 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+void PeerLogicValidation::QueueUnbroadcastTxs(CNode* pnode)\n+{\n+    for(const uint256& txid : mempool.m_unbroadcast_txids){\n+        CInv inv(MSG_TX, txid);\n+        pnode->PushInventory(inv);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r387750082",
      "id" : 387750082,
      "in_reply_to_id" : 385865086,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc1MDA4Mg==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 8,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 368886517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387750082",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-03-05T13:33:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-595231541",
      "id" : 595231541,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NTIzMTU0MQ==",
      "updated_at" : "2020-03-05T13:33:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595231541",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393293074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393293074"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Have you weighted implications of wtxid-relay (#18044) ? I think you will need to track both txid/wtxid for backward-compability with non-upgraded nodes.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-16T20:31:56Z",
      "diff_hunk" : "@@ -534,6 +534,10 @@ class CTxMemPool\n     const setEntries & GetMemPoolParents(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     const setEntries & GetMemPoolChildren(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     uint64_t CalculateDescendantMaximum(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    // track locally submitted transactions & periodically retry initial broadcast\n+    std::set<uint256> m_unbroadcast_txids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393293074",
      "id" : 393293074,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI5MzA3NA==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 6,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 375561005,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393293074",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393297027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393297027"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"periodically (REATTEMPT_BROADCAST_INTERVAL)\"",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-16T20:40:29Z",
      "diff_hunk" : "@@ -534,6 +534,10 @@ class CTxMemPool\n     const setEntries & GetMemPoolParents(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     const setEntries & GetMemPoolChildren(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     uint64_t CalculateDescendantMaximum(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    // track locally submitted transactions & periodically retry initial broadcast",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393297027",
      "id" : 393297027,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI5NzAyNw==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 5,
      "path" : "src/txmempool.h",
      "position" : 5,
      "pull_request_review_id" : 375561005,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393297027",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393946770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393946770"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "this is the best option I've been able to identify for how to check if we are at the end of the file. would love to hear about any cleaner solutions.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T20:22:46Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393946770",
      "id" : 393946770,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0Njc3MA==",
      "original_commit_id" : "3d185eda3c6d449e080b749acfb4986e6f88e203",
      "original_position" : 16,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 376376840,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393946770",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393955311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393955311"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "- added logic to save unbroadcast set to disk\r\n- added thread safety annotation & missing locks from lots of call sites ð\r\n\r\nthank you both for this feedback ðð½\r\nwould love further review on the added logic ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T20:39:14Z",
      "diff_hunk" : "@@ -534,6 +534,10 @@ class CTxMemPool\n     const setEntries & GetMemPoolParents(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     const setEntries & GetMemPoolChildren(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     uint64_t CalculateDescendantMaximum(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    // track locally submitted transactions & periodically retry initial broadcast\n+    std::set<uint256> m_unbroadcast_txids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393955311",
      "id" : 393955311,
      "in_reply_to_id" : 385368573,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1NTMxMQ==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 6,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 376387657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393955311",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393957572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957572"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't fully understand what you mean here. Are you pointing out that there are other ways the transaction gets removed from the set?\r\n\r\nI updated to: \"We intepret processing a GETDATA for a transaction as a successful initial broadcast and remove it from our unbroadcast set.\" \r\n\r\nDoes that seem reasonable? Or am I still missing the point? \r\n",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T20:43:04Z",
      "diff_hunk" : "@@ -1590,6 +1590,11 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             if (mi != mapRelay.end()) {\n                 connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n                 push = true;\n+                // Once a peer requests GETDATA for a txn, we deem initial broadcast a success",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393957572",
      "id" : 393957572,
      "in_reply_to_id" : 385795095,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1NzU3Mg==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 4,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 376390280,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957572",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393957842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957842"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed. Thanks again.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T20:43:33Z",
      "diff_hunk" : "@@ -1590,6 +1590,11 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             if (mi != mapRelay.end()) {\n                 connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n                 push = true;\n+                // Once a peer requests GETDATA for a txn, we deem initial broadcast a success\n+                int num = mempool.m_unbroadcast_txids.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393957842",
      "id" : 393957842,
      "in_reply_to_id" : 385795542,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1Nzg0Mg==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 376390633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957842",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393959353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393959353"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I updated it to \"from m_unbroadcast_txids before confirmation that txn was sent out\", but I feel uncertain... saying \"before GETDATA was received\" seems more clear & specific than \"confirmation that txn was sent out\". Could you explain further why you didn't like it? \r\n\r\nis this related to [this](https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385795095)?",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T20:46:24Z",
      "diff_hunk" : "@@ -416,6 +416,10 @@ void CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n     for (const CTxIn& txin : it->GetTx().vin)\n         mapNextTx.erase(txin.prevout);\n \n+    if (mempool.m_unbroadcast_txids.erase(hash)) {\n+        LogPrint(BCLog::NET, \"Removed %i from m_unbroadcast_txids before GETDATA was received. \\n\", hash.GetHex());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393959353",
      "id" : 393959353,
      "in_reply_to_id" : 385795926,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1OTM1Mw==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 5,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 376392446,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393959353",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393961149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393961149"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "updated.\r\n\r\nfunny to update the code to match the comment language rather than vice versa ð but I don't have a strong preference around 12-36hrs vs 0-24hrs, both have small tradeoffs. ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T20:49:44Z",
      "diff_hunk" : "@@ -1982,7 +1982,7 @@ void CWallet::ResendWalletTransactions()\n     // that these are our transactions.\n     if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n     bool fFirst = (nNextResend == 0);\n-    nNextResend = GetTime() + GetRand(30 * 60);\n+    nNextResend = GetTime() + GetRand(24 * 60 * 60);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393961149",
      "id" : 393961149,
      "in_reply_to_id" : 385860440,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2MTE0OQ==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 5,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 376394643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393961149",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393968358"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393968358"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Maybe it's the naming that confuses me. It's called \"rebroadcast\", not \"consider to rebroadcast\".\r\n\r\nthe language I'm introducing is \"unbroadcast\", which means consider it as initial broadcast. but there are these interactions with `filterInventoryKnown` to consider in different cases. \r\n\r\nI added some comments [here](https://github.com/bitcoin/bitcoin/pull/18038/files#diff-eff7adeaec73a769788bb78858815c91R782) in an attempt to make this more apparent. \r\n\r\ngoing to resolve this conversation, but @naumenkogs let me know if you think this is something we need to more carefully consider in regards to this PR. ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T21:01:56Z",
      "diff_hunk" : "@@ -780,6 +780,14 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+void PeerLogicValidation::QueueUnbroadcastTxs(CNode* pnode)\n+{\n+    for(const uint256& txid : mempool.m_unbroadcast_txids){\n+        CInv inv(MSG_TX, txid);\n+        pnode->PushInventory(inv);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393968358",
      "id" : 393968358,
      "in_reply_to_id" : 385865086,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2ODM1OA==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 8,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 376402597,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393968358",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "looks like I have severely aggravated Travis. whoops ð. looking into it. ",
      "created_at" : "2020-03-17T21:14:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-600304555",
      "id" : 600304555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMDMwNDU1NQ==",
      "updated_at" : "2020-03-17T21:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600304555",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393982029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393982029"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Needs rebase to make the `const CTxMemPool&` non-const",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T21:30:03Z",
      "diff_hunk" : "@@ -1605,7 +1622,21 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n                     push = true;\n                 }\n             }\n-            if (!push) {\n+\n+            if (push) {\n+                int num = 0;\n+\n+                // We intepret processing a GETDATA for a transaction as a successful initial broadcast\n+                // and remove it from our unbroadcast set.\n+                {\n+                    LOCK(mempool.cs);\n+                    num = mempool.m_unbroadcast_txids.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393982029",
      "id" : 393982029,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4MjAyOQ==",
      "original_commit_id" : "3d185eda3c6d449e080b749acfb4986e6f88e203",
      "original_position" : 37,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 376419558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393982029",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393995780"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393995780"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "updated. although I was surprised to find out I had to pass \"this\" through in the capture list. ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T22:00:51Z",
      "diff_hunk" : "@@ -2332,6 +2332,9 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     // Dump network addresses\n     scheduler.scheduleEvery(std::bind(&CConnman::DumpAddresses, this), DUMP_PEERS_INTERVAL * 1000);\n \n+    // Attempt to broadcast transactions that have not yet been acknowledged by the network\n+    scheduler.scheduleEvery(std::bind(&CConnman::AttemptInitialBroadcast, this), REATTEMPT_BROADCAST_INTERVAL.count() );",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393995780",
      "id" : 393995780,
      "in_reply_to_id" : 385798846,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk5NTc4MA==",
      "original_commit_id" : "1a1a30cc4adbbcccfbb073fbf8ae9df1090a2996",
      "original_position" : 39,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 376435905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393995780",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394003478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394003478"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ah, I thought through the possible privacy leaks but didn't think about weird circumstances that could lead to synchronized network-wide events. \r\n\r\nupdated reattempts to be between 10-15 minutes, chosen every time a node starts up.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T22:20:12Z",
      "diff_hunk" : "@@ -48,6 +48,9 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n // Dump addresses to peers.dat every 15 minutes (900s)\n static constexpr int DUMP_PEERS_INTERVAL = 15 * 60;\n \n+// Attempt initial broadcast of locally submitted txns every 10 minutes.\n+static constexpr std::chrono::milliseconds REATTEMPT_BROADCAST_INTERVAL = std::chrono::milliseconds(10 * 60 * 1000);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394003478",
      "id" : 394003478,
      "in_reply_to_id" : 387662775,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMzQ3OA==",
      "original_commit_id" : "66ddec88f59b32928495767daa548dc41558d56c",
      "original_position" : 5,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 376445015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394003478",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394005374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394005374"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks!",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T22:24:54Z",
      "diff_hunk" : "@@ -1605,7 +1622,21 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n                     push = true;\n                 }\n             }\n-            if (!push) {\n+\n+            if (push) {\n+                int num = 0;\n+\n+                // We intepret processing a GETDATA for a transaction as a successful initial broadcast\n+                // and remove it from our unbroadcast set.\n+                {\n+                    LOCK(mempool.cs);\n+                    num = mempool.m_unbroadcast_txids.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394005374",
      "id" : 394005374,
      "in_reply_to_id" : 393982029,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwNTM3NA==",
      "original_commit_id" : "3d185eda3c6d449e080b749acfb4986e6f88e203",
      "original_position" : 37,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 376447137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394005374",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394006471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394006471"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ah, good point. will think this through. thanks! ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T22:27:44Z",
      "diff_hunk" : "@@ -534,6 +534,10 @@ class CTxMemPool\n     const setEntries & GetMemPoolParents(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     const setEntries & GetMemPoolChildren(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     uint64_t CalculateDescendantMaximum(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    // track locally submitted transactions & periodically retry initial broadcast\n+    std::set<uint256> m_unbroadcast_txids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394006471",
      "id" : 394006471,
      "in_reply_to_id" : 393293074,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwNjQ3MQ==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 6,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 376448339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394006471",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394006704"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394006704"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "going to pass on this one, especially since I removed the constant for some variability in intervals.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-17T22:28:21Z",
      "diff_hunk" : "@@ -534,6 +534,10 @@ class CTxMemPool\n     const setEntries & GetMemPoolParents(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     const setEntries & GetMemPoolChildren(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     uint64_t CalculateDescendantMaximum(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    // track locally submitted transactions & periodically retry initial broadcast",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394006704",
      "id" : 394006704,
      "in_reply_to_id" : 393297027,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwNjcwNA==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 5,
      "path" : "src/txmempool.h",
      "position" : 5,
      "pull_request_review_id" : 376449063,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394006704",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ariard \r\n\r\n> If I understand well this PR, it introduces a initial-broadcast reattempt mechanism through mempool tracking and GETDATA monitoring. Compare to wallet rebroadcast, the safety catch of new one isn't confirmation-based but network-based so once you have reasonable propagation (reasonable=1) you stop initial-broadcast. \r\n\r\nYup. \r\n\r\n> But I don't grasp where the privacy win is in itself, I would say that's a reliability improvement against network unknowns\r\n\r\n**The privacy improvement is due to wallet rebroadcasts being less frequent.** Updated to ~1/day (between 12-36 hrs) instead of ~1/15 mins (between 0-30mins). The current wallet rebroadcast logic deanonymizes the sender, but is important to ensure the initial delivery in some cases. So, we extract the two functions.\r\n\r\nAlso updated OP to try to make this clearer. \r\n\r\n@gmaxwell summarizes the motivation pretty well [here](https://github.com/bitcoin/bitcoin/pull/16698#issuecomment-571399346): \r\n> Has anyone considered significantly increasing the time between rebroadcasts as an additional change (and one that could go in separately much faster)? Particularly once you've performed one successful broadcast per execution additional rebroadcasts usually do nothing except leak data to attackers that frequently reconnect to you-- you won't resend to a host you've sent to before, and its not usually useful to do so. This wouldn't obviate the need to be more intelligent, but it would reduce the bleeding and also make it more acceptable for the rest of the change to be more approximate.\r\n\r\nand in regards to the attack vector,\r\n>  (maybe even a slight worsening because now a spying node only have to be connected to you for REATTEMPT_BROADCAST_INTERVAL instead of ~1/30min, which decrease attacker deployment cost ?)\r\n\r\nBecause of `filterInventoryKnown` logic, its not quite that the attacker needs to be connected to you for that long, but rather that they would need to open a new connection to you during that window of time. Also, my understanding is that the conditions would need to be such that you didn't receive any `GETDATAs` back from any peers in regards to this txn, because otherwise it would be removed from the set. So we'd need: 1. victim sends txn to attacker, 2. attacker doesn't acknowledge with `GETDATA` but notes down txn hash, 3. somehow (either intentional or unintentional) ensure no other peers send back `GETDATA` for the txn 4. open a new connection before next broadcast attempt. Then the attacker can confirm that the victim is the source for that transaction. \r\n\r\nDoes that logic make sense to you? Please poke holes at it :) Or let me know if you have any questions.\r\n\r\nAlso, relevant conversation in this comment thread [here](https://github.com/bitcoin/bitcoin/pull/16698#discussion_r348840194), which I know you've seen but might be worth re-visiting. \r\n\r\n",
      "created_at" : "2020-03-18T00:08:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-600359498",
      "id" : 600359498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMDM1OTQ5OA==",
      "updated_at" : "2020-03-18T00:08:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600359498",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Changed title to indicate that this only improves *wallet* privacy",
      "created_at" : "2020-03-18T15:18:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-600683350",
      "id" : 600683350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMDY4MzM1MA==",
      "updated_at" : "2020-03-18T15:18:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600683350",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394440617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394440617"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 77748da2269bd7f2304ebc3b8616d3a584e7c65f:\r\n\r\nCan be written shorter as\r\n```suggestion\r\n                if (WITH_LOCK(mempool.cs, return mempool.m_unbroadcast_txids.erase(inv.hash);)) {\r\n```",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T15:36:32Z",
      "diff_hunk" : "@@ -1605,7 +1605,21 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n                     push = true;\n                 }\n             }\n-            if (!push) {\n+\n+            if (push) {\n+                int num = 0;\n+\n+                // We intepret processing a GETDATA for a transaction as a successful initial broadcast\n+                // and remove it from our unbroadcast set.\n+                {\n+                    LOCK(mempool.cs);\n+                    num = mempool.m_unbroadcast_txids.erase(inv.hash);\n+                }\n+\n+                if (num) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394440617",
      "id" : 394440617,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0MDYxNw==",
      "original_commit_id" : "77748da2269bd7f2304ebc3b8616d3a584e7c65f",
      "original_position" : 25,
      "path" : "src/net_processing.cpp",
      "position" : 51,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394440617",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394443323"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394443323"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 77748da:\r\n\r\nPlease use `node.mempool` and not the global",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T15:40:03Z",
      "diff_hunk" : "@@ -78,6 +78,10 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n     }\n \n     if (relay) {\n+        // the mempool tracks locally submitted transactions to make a\n+        // best-effort of initial broadcast\n+        WITH_LOCK(mempool.cs, mempool.m_unbroadcast_txids.insert(hashTx));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394443323",
      "id" : 394443323,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0MzMyMw==",
      "original_commit_id" : "77748da2269bd7f2304ebc3b8616d3a584e7c65f",
      "original_position" : 6,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394443323",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394455686"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394455686"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 2f3f449dc9c89420a444cc8263c5a5fe537a475b:\r\n\r\nI still haven't figured out  a way to exploit this for privacy leaks, but making each node pick a unique fingerprint (heartbeat between 10-15 minutes) doesn't seem too great. Sometimes nodes offer a tor p2p interface and a clearnet p2p interface and ideally those should be uncorrelated. Obviously horribly broken in the current p2p implementation, but we shouldn't make it worse, I think.\r\n\r\nSo what do you think about just scheduling this once here and then reschedule this at the end of the `AttemptInitialBroadcast` function?\r\n\r\nSomething like\r\n\r\n```cpp\r\nvoid CConnman::ScheduleNextInitialBroadcast(CScheduler& s) const\r\n{\r\n const auto delta = std::chrono::minutes{10} + GetRandMicros(std::chrono::minutes{5});\r\n s.schedule([&]{this->AttemptInitialBroadcast(s);}, delta);\r\n}",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T15:55:31Z",
      "diff_hunk" : "@@ -2345,6 +2342,11 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     // Dump network addresses\n     scheduler.scheduleEvery([this] { DumpAddresses(); }, DUMP_PEERS_INTERVAL);\n \n+    // Periodically attempt to broadcast transactions that have not yet been acknowledged by the network\n+    // To ensure impossibility of network-wide synchronization event, stagger retry intervals between 10-15 minutes.\n+    std::chrono::seconds reattempt_broadcast_interval = std::chrono::seconds(10*60 + GetRand(5*60));\n+    scheduler.scheduleEvery([this]{this->AttemptInitialBroadcast();}, std::chrono::milliseconds(reattempt_broadcast_interval));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394455686",
      "id" : 394455686,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ1NTY4Ng==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 31,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394455686",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394459225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394459225"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 2f3f449dc9c89420a444cc8263c5a5fe537a475b:\r\n\r\nstyle nit. Can be a reference because it is never null\r\n```suggestion\r\nvoid PeerLogicValidation::QueueUnbroadcastTxs(CNode& pnode)\r\n```",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T15:59:39Z",
      "diff_hunk" : "@@ -779,6 +779,23 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+// We don't force an attempt to relay unbroadcast txns by directly adding them\n+// to setInventoryTxToSend, but instead pass to PushInventory which checks\n+// filterInventoryKnown.\n+//\n+// Passing txns through the bloom filter has a stronger privacy model, but weaker\n+// delivery guarantees. Under certain network & node conditions, it may still\n+// take an extended period of time for the transaction to be initially broadcast\n+// to the network.\n+void PeerLogicValidation::QueueUnbroadcastTxs(CNode* pnode)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394459225",
      "id" : 394459225,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ1OTIyNQ==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 12,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394459225",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394459527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394459527"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 2f3f449dc9c89420a444cc8263c5a5fe537a475b:\r\n\r\nPlease use m_mempool and not the global.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T16:00:01Z",
      "diff_hunk" : "@@ -779,6 +779,23 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+// We don't force an attempt to relay unbroadcast txns by directly adding them\n+// to setInventoryTxToSend, but instead pass to PushInventory which checks\n+// filterInventoryKnown.\n+//\n+// Passing txns through the bloom filter has a stronger privacy model, but weaker\n+// delivery guarantees. Under certain network & node conditions, it may still\n+// take an extended period of time for the transaction to be initially broadcast\n+// to the network.\n+void PeerLogicValidation::QueueUnbroadcastTxs(CNode* pnode)\n+{\n+    LOCK(mempool.cs);\n+    for(const uint256& txid : mempool.m_unbroadcast_txids){",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394459527",
      "id" : 394459527,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ1OTUyNw==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 15,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394459527",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394470334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394470334"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 2f3f449:\r\n\r\nI don't understand this comment, why would it have weaker delivery guarantees? Is it the bloom filter false positive rate?",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T16:14:58Z",
      "diff_hunk" : "@@ -779,6 +779,23 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+// We don't force an attempt to relay unbroadcast txns by directly adding them\n+// to setInventoryTxToSend, but instead pass to PushInventory which checks\n+// filterInventoryKnown.\n+//\n+// Passing txns through the bloom filter has a stronger privacy model, but weaker\n+// delivery guarantees. Under certain network & node conditions, it may still\n+// take an extended period of time for the transaction to be initially broadcast\n+// to the network.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394470334",
      "id" : 394470334,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ3MDMzNA==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 11,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394470334",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394470902"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394470902"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 2f3f449:\r\n\r\nCan be const?\r\n\r\n```suggestion\r\n    void QueueUnbroadcastTxs(CNode& node) const override;\r\n```",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T16:15:44Z",
      "diff_hunk" : "@@ -75,7 +75,8 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     void CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams);\n     /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n     void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n-\n+    /** Retrieve unbroadcast transactions from the mempool and possibly send to pnode */\n+    void QueueUnbroadcastTxs(CNode* pnode) override;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394470902",
      "id" : 394470902,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ3MDkwMg==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 6,
      "path" : "src/net_processing.h",
      "position" : null,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394470902",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394474255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394474255"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit f40f6875f5570cb25882d8a04a6cbeb61ee7366d:\r\n\r\nStyle nit. Could add trailing comma for symmetry, git blame, and code formatters?\r\n\r\n```suggestion\r\n        hex_str_to_bytes,\r\n```",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T16:20:35Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394474255",
      "id" : 394474255,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ3NDI1NQ==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 21,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394474255",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394475575"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394475575"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit f40f6875f5570cb25882d8a04a6cbeb61ee7366d:\r\n\r\nI think assert is a statement, not a function, so should be without `()`\r\n```suggestion\r\n        assert wallet_tx_hsh not in mempool\r\n```",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T16:22:27Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes\n+)\n+\n+class MempoolUnbroadcastTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_broadcast()\n+        self.test_txn_removal()\n+\n+    def test_broadcast(self):\n+        self.log.info(\"Test that mempool reattempts delivery of locally submitted transaction\")\n+        node = self.nodes[0]\n+\n+        min_relay_fee = node.getnetworkinfo()[\"relayfee\"]\n+        utxos = create_confirmed_utxos(min_relay_fee, node, 10)\n+\n+        disconnect_nodes(node, 1)\n+\n+        self.log.info(\"Generate transactions that only node 0 knows about\")\n+        # generate a wallet txn\n+        addr = node.getnewaddress()\n+        wallet_tx_hsh = node.sendtoaddress(addr, 0.0001)\n+\n+        # generate a txn using sendrawtransaction\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {addr: 0.0001}\n+        tx = node.createrawtransaction(inputs, outputs)\n+        node.settxfee(min_relay_fee)\n+        txF = node.fundrawtransaction(tx)\n+        txFS = node.signrawtransactionwithwallet(txF['hex'])\n+        rpc_tx_hsh = node.sendrawtransaction(txFS['hex'])  # txhsh in hex\n+\n+        # check that second node doesn't have these two txns\n+        mempool = self.nodes[1].getrawmempool()\n+        assert(rpc_tx_hsh not in mempool)\n+        assert(wallet_tx_hsh not in mempool)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394475575",
      "id" : 394475575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ3NTU3NQ==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 62,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394475575",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394476596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394476596"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit f40f6875f5570cb25882d8a04a6cbeb61ee7366d:\r\n\r\nCould do the same test again with a `self.nodes[0].restart_node()` added here?\r\n\r\nThis way it will test to persist txs on disk.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T16:23:54Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes\n+)\n+\n+class MempoolUnbroadcastTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_broadcast()\n+        self.test_txn_removal()\n+\n+    def test_broadcast(self):\n+        self.log.info(\"Test that mempool reattempts delivery of locally submitted transaction\")\n+        node = self.nodes[0]\n+\n+        min_relay_fee = node.getnetworkinfo()[\"relayfee\"]\n+        utxos = create_confirmed_utxos(min_relay_fee, node, 10)\n+\n+        disconnect_nodes(node, 1)\n+\n+        self.log.info(\"Generate transactions that only node 0 knows about\")\n+        # generate a wallet txn\n+        addr = node.getnewaddress()\n+        wallet_tx_hsh = node.sendtoaddress(addr, 0.0001)\n+\n+        # generate a txn using sendrawtransaction\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {addr: 0.0001}\n+        tx = node.createrawtransaction(inputs, outputs)\n+        node.settxfee(min_relay_fee)\n+        txF = node.fundrawtransaction(tx)\n+        txFS = node.signrawtransactionwithwallet(txF['hex'])\n+        rpc_tx_hsh = node.sendrawtransaction(txFS['hex'])  # txhsh in hex\n+\n+        # check that second node doesn't have these two txns\n+        mempool = self.nodes[1].getrawmempool()\n+        assert(rpc_tx_hsh not in mempool)\n+        assert(wallet_tx_hsh not in mempool)\n+\n+        self.log.info(\"Reconnect nodes & check if they are sent to node 1\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394476596",
      "id" : 394476596,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ3NjU5Ng==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 64,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : 64,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394476596",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394478852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394478852"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit f40f6875f5570cb25882d8a04a6cbeb61ee7366d:\r\n\r\nCan be shorter, because self.sync_mempools() does the same, I think\r\n```suggestion\r\n        self.sync_mempools()\r\n```",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T16:27:01Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes\n+)\n+\n+class MempoolUnbroadcastTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_broadcast()\n+        self.test_txn_removal()\n+\n+    def test_broadcast(self):\n+        self.log.info(\"Test that mempool reattempts delivery of locally submitted transaction\")\n+        node = self.nodes[0]\n+\n+        min_relay_fee = node.getnetworkinfo()[\"relayfee\"]\n+        utxos = create_confirmed_utxos(min_relay_fee, node, 10)\n+\n+        disconnect_nodes(node, 1)\n+\n+        self.log.info(\"Generate transactions that only node 0 knows about\")\n+        # generate a wallet txn\n+        addr = node.getnewaddress()\n+        wallet_tx_hsh = node.sendtoaddress(addr, 0.0001)\n+\n+        # generate a txn using sendrawtransaction\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {addr: 0.0001}\n+        tx = node.createrawtransaction(inputs, outputs)\n+        node.settxfee(min_relay_fee)\n+        txF = node.fundrawtransaction(tx)\n+        txFS = node.signrawtransactionwithwallet(txF['hex'])\n+        rpc_tx_hsh = node.sendrawtransaction(txFS['hex'])  # txhsh in hex\n+\n+        # check that second node doesn't have these two txns\n+        mempool = self.nodes[1].getrawmempool()\n+        assert(rpc_tx_hsh not in mempool)\n+        assert(wallet_tx_hsh not in mempool)\n+\n+        self.log.info(\"Reconnect nodes & check if they are sent to node 1\")\n+        connect_nodes(node, 1)\n+\n+        # fast forward into the future & ensure that the second node has the txns\n+        node.mockscheduler(15*60) # 15 min in seconds\n+        wait_until(lambda: len(self.nodes[1].getrawmempool()) == 2, timeout=30)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394478852",
      "id" : 394478852,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ3ODg1Mg==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 69,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394478852",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394480786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394480786"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit f40f687:\r\n\r\nDoes the block need to be created manually? What about a simple two-liner?\r\n\r\n```\r\nself.nodes[0].sendtoaddress()\r\nself.nodes[0].generate(1)\r\n```\r\n\r\nAlternatively, if you want to test both wallet txs and rpc txs, you could factor out the tx-creation code from the previous test case into a new helper function and call it here.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T16:29:47Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes\n+)\n+\n+class MempoolUnbroadcastTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_broadcast()\n+        self.test_txn_removal()\n+\n+    def test_broadcast(self):\n+        self.log.info(\"Test that mempool reattempts delivery of locally submitted transaction\")\n+        node = self.nodes[0]\n+\n+        min_relay_fee = node.getnetworkinfo()[\"relayfee\"]\n+        utxos = create_confirmed_utxos(min_relay_fee, node, 10)\n+\n+        disconnect_nodes(node, 1)\n+\n+        self.log.info(\"Generate transactions that only node 0 knows about\")\n+        # generate a wallet txn\n+        addr = node.getnewaddress()\n+        wallet_tx_hsh = node.sendtoaddress(addr, 0.0001)\n+\n+        # generate a txn using sendrawtransaction\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {addr: 0.0001}\n+        tx = node.createrawtransaction(inputs, outputs)\n+        node.settxfee(min_relay_fee)\n+        txF = node.fundrawtransaction(tx)\n+        txFS = node.signrawtransactionwithwallet(txF['hex'])\n+        rpc_tx_hsh = node.sendrawtransaction(txFS['hex'])  # txhsh in hex\n+\n+        # check that second node doesn't have these two txns\n+        mempool = self.nodes[1].getrawmempool()\n+        assert(rpc_tx_hsh not in mempool)\n+        assert(wallet_tx_hsh not in mempool)\n+\n+        self.log.info(\"Reconnect nodes & check if they are sent to node 1\")\n+        connect_nodes(node, 1)\n+\n+        # fast forward into the future & ensure that the second node has the txns\n+        node.mockscheduler(15*60) # 15 min in seconds\n+        wait_until(lambda: len(self.nodes[1].getrawmempool()) == 2, timeout=30)\n+        mempool = self.nodes[1].getrawmempool()\n+        assert(rpc_tx_hsh in mempool)\n+        assert(wallet_tx_hsh in mempool)\n+\n+        self.log.info(\"Add another connection & ensure transactions aren't broadcast again\")\n+\n+        conn = node.add_p2p_connection(P2PTxInvStore())\n+        node.mockscheduler(15*60)\n+        time.sleep(5)\n+        assert_equal(len(conn.get_invs()), 0)\n+\n+    def test_txn_removal(self):\n+        self.log.info(\"Test that transactions removed from mempool are removed from unbroadcast set\")\n+        node = self.nodes[0]\n+        disconnect_nodes(node, 1)\n+\n+        min_relay_fee = node.getnetworkinfo()[\"relayfee\"]\n+        utxos = create_confirmed_utxos(min_relay_fee, node, 10)\n+\n+        # create a transaction & submit to node\n+        # since the node doesn't have any connections, it will not receive\n+        # any GETDATAs & thus the transaction will remain in the unbroadcast set.\n+        utxo = utxos.pop()\n+        outputs = { node.getnewaddress() : 0.0001 }\n+        inputs = [{'txid': utxo['txid'], 'vout': utxo['vout']}]\n+        raw_tx_hex = node.createrawtransaction(inputs, outputs)\n+        signed_tx = node.signrawtransactionwithwallet(raw_tx_hex)\n+        txhsh = node.sendrawtransaction(hexstring=signed_tx['hex'], maxfeerate=0)\n+\n+        # mine a block with that transaction\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1))\n+        tx = CTransaction()\n+        tx.deserialize(BytesIO(hex_str_to_bytes(signed_tx['hex'])))\n+        block.vtx.append(tx)\n+        block.rehash()\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+        block.solve()\n+        node.submitblock(ToHex(block))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394480786",
      "id" : 394480786,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4MDc4Ng==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 107,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394480786",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394483205"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394483205"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71:\r\n\r\nWhy is this needed?\r\n\r\nI think you can just go ahead and assume that the set was serialized. If it wasn't it will result in a one-time `LogPrintf` that the mempool data couldn't be deserialized. I think this is fine if it is mentioned in the release notes or as a code comment or not at all.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T16:33:27Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394483205",
      "id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4MzIwNQ==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 376984420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394483205",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394502466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394502466"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Although this is supposed to happen extremely rare, I think Marco's comment is very valid. I agree with his suggestion.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T17:01:38Z",
      "diff_hunk" : "@@ -2345,6 +2342,11 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     // Dump network addresses\n     scheduler.scheduleEvery([this] { DumpAddresses(); }, DUMP_PEERS_INTERVAL);\n \n+    // Periodically attempt to broadcast transactions that have not yet been acknowledged by the network\n+    // To ensure impossibility of network-wide synchronization event, stagger retry intervals between 10-15 minutes.\n+    std::chrono::seconds reattempt_broadcast_interval = std::chrono::seconds(10*60 + GetRand(5*60));\n+    scheduler.scheduleEvery([this]{this->AttemptInitialBroadcast();}, std::chrono::milliseconds(reattempt_broadcast_interval));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394502466",
      "id" : 394502466,
      "in_reply_to_id" : 394455686,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMjQ2Ng==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 31,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 377062629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394502466",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394518591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394518591"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@amitiuttarwar Since this is a new file, you might want to run [`black`](https://black.readthedocs.io/en/stable/) on the entire file to get proper formatting which addresses MarcoFalke's nit and all other formatting nits :)",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T17:26:33Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394518591",
      "id" : 394518591,
      "in_reply_to_id" : 394474255,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxODU5MQ==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 21,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 377083258,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394518591",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394518928"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394518928"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@amitiuttarwar Same goes for this one: `black` on the entire file to get proper formatting for free :)",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T17:27:02Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes\n+)\n+\n+class MempoolUnbroadcastTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_broadcast()\n+        self.test_txn_removal()\n+\n+    def test_broadcast(self):\n+        self.log.info(\"Test that mempool reattempts delivery of locally submitted transaction\")\n+        node = self.nodes[0]\n+\n+        min_relay_fee = node.getnetworkinfo()[\"relayfee\"]\n+        utxos = create_confirmed_utxos(min_relay_fee, node, 10)\n+\n+        disconnect_nodes(node, 1)\n+\n+        self.log.info(\"Generate transactions that only node 0 knows about\")\n+        # generate a wallet txn\n+        addr = node.getnewaddress()\n+        wallet_tx_hsh = node.sendtoaddress(addr, 0.0001)\n+\n+        # generate a txn using sendrawtransaction\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {addr: 0.0001}\n+        tx = node.createrawtransaction(inputs, outputs)\n+        node.settxfee(min_relay_fee)\n+        txF = node.fundrawtransaction(tx)\n+        txFS = node.signrawtransactionwithwallet(txF['hex'])\n+        rpc_tx_hsh = node.sendrawtransaction(txFS['hex'])  # txhsh in hex\n+\n+        # check that second node doesn't have these two txns\n+        mempool = self.nodes[1].getrawmempool()\n+        assert(rpc_tx_hsh not in mempool)\n+        assert(wallet_tx_hsh not in mempool)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394518928",
      "id" : 394518928,
      "in_reply_to_id" : 394475575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxODkyOA==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 62,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 377083258,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394518928",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394540166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394540166"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@practicalswift \r\nStyle is subjective and we allow the pull request author to pick the style, as long as it is reasonable. We don't require a specific python formatter. While black or yapf (https://github.com/bitcoin/bitcoin/blob/master/.style.yapf) or the built-in formatter of your editor can be used, they are not mandatory.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T18:01:03Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394540166",
      "id" : 394540166,
      "in_reply_to_id" : 394474255,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0MDE2Ng==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 21,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 377110505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394540166",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394608061"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394608061"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Have I claimed anything else? :)  This is _your_ style nit - I'm just suggesting a way to address it automatically :)",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-18T20:05:30Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r394608061",
      "id" : 394608061,
      "in_reply_to_id" : 394474255,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYwODA2MQ==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 21,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 377195882,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394608061",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r395248783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395248783"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See https://github.com/ariard/bitcoin/commit/2d8ae9a838f5c6ec43db15a7bd36554c351b7442, I find a bit weird to schedule a mempool task from connection manager instead of message processing layer. It should achieve the same goal while removing one new method (or have you already considered this and turn away for a good reason) ?",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-19T18:52:25Z",
      "diff_hunk" : "@@ -2345,6 +2342,11 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     // Dump network addresses\n     scheduler.scheduleEvery([this] { DumpAddresses(); }, DUMP_PEERS_INTERVAL);\n \n+    // Periodically attempt to broadcast transactions that have not yet been acknowledged by the network\n+    // To ensure impossibility of network-wide synchronization event, stagger retry intervals between 10-15 minutes.\n+    std::chrono::seconds reattempt_broadcast_interval = std::chrono::seconds(10*60 + GetRand(5*60));\n+    scheduler.scheduleEvery([this]{this->AttemptInitialBroadcast();}, std::chrono::milliseconds(reattempt_broadcast_interval));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r395248783",
      "id" : 395248783,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI0ODc4Mw==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 31,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 378004299,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395248783",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Does that logic make sense to you? Please poke holes at it :) Or let me know if you have any questions.\r\n\r\nI think we agree, missed inventory filter implications at first, maybe should get some message in your first commit to track goal aimed:\r\n\r\n\"Previously, in case of rebroadcast, a spying node may learn transaction\r\norigin if it was connected to the node during a ~1/15min period.\r\n\r\nNow, mempool is tracking locally submitted transactions. At servicing\r\nGETDATA for an announced local transaction for at least one peer, tracking\r\nis erased. If no GETDATA is processed before mempool initial-broadcast\r\nreattempt period expires, a new announcement is made to every peer. Due\r\nto inventory filter, this is only effective for new peers since last period\r\nexpiration. Transaction origin privacy would only be worsened if a) among\r\nnew nodes there is a spying one b) no honest/reliable peers reported back\r\na GETDATA. Given the mempool rebroadcast period length, if b) occurs, that\r\nwould be a clue of bigger concern.\r\n\r\nThis doesn't improve initial-broadcast privacy where a spying node\r\nis already connected to the node before transaction first announcement.\"\r\n\r\n(but if b) occurs that's a reliability improvement IMO)",
      "created_at" : "2020-03-19T19:15:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-601366971",
      "id" : 601366971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTM2Njk3MQ==",
      "updated_at" : "2020-03-19T19:20:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601366971",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r396720480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396720480"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "no, simpler.. just mean some transactions will get filtered & not relayed because of `filterInventoryKnown`. this was a result of the confusion & conversation in https://github.com/bitcoin/bitcoin/pull/18038#discussion_r385865086. \r\n\r\nbut maybe without that context this comment is misleading? appreciate any feedback on how to clarify. right now I'm thinking of just deleting the second paragraph. ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-23T19:57:29Z",
      "diff_hunk" : "@@ -779,6 +779,23 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+// We don't force an attempt to relay unbroadcast txns by directly adding them\n+// to setInventoryTxToSend, but instead pass to PushInventory which checks\n+// filterInventoryKnown.\n+//\n+// Passing txns through the bloom filter has a stronger privacy model, but weaker\n+// delivery guarantees. Under certain network & node conditions, it may still\n+// take an extended period of time for the transaction to be initially broadcast\n+// to the network.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r396720480",
      "id" : 396720480,
      "in_reply_to_id" : 394470334,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcyMDQ4MA==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 11,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 379776210,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396720480",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r396721669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396721669"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why would `filterInventoryKnown` return a match when the transaction was initially never sent out to that peer?",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-23T19:59:40Z",
      "diff_hunk" : "@@ -779,6 +779,23 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+// We don't force an attempt to relay unbroadcast txns by directly adding them\n+// to setInventoryTxToSend, but instead pass to PushInventory which checks\n+// filterInventoryKnown.\n+//\n+// Passing txns through the bloom filter has a stronger privacy model, but weaker\n+// delivery guarantees. Under certain network & node conditions, it may still\n+// take an extended period of time for the transaction to be initially broadcast\n+// to the network.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r396721669",
      "id" : 396721669,
      "in_reply_to_id" : 394470334,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcyMTY2OQ==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 11,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 379777685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396721669",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r396788390"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396788390"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "eg. if you disconnect wifi & submit a txn to your mempool. code will add to the bloom filters but the transaction never actually went anywhere ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-23T22:13:42Z",
      "diff_hunk" : "@@ -779,6 +779,23 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+// We don't force an attempt to relay unbroadcast txns by directly adding them\n+// to setInventoryTxToSend, but instead pass to PushInventory which checks\n+// filterInventoryKnown.\n+//\n+// Passing txns through the bloom filter has a stronger privacy model, but weaker\n+// delivery guarantees. Under certain network & node conditions, it may still\n+// take an extended period of time for the transaction to be initially broadcast\n+// to the network.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r396788390",
      "id" : 396788390,
      "in_reply_to_id" : 394470334,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4ODM5MA==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 11,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 379861725,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396788390",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397477029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397477029"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "so, are you proposing \r\n- remove writing the boolean `has_unbroadcast_txns` to the file [here](https://github.com/bitcoin/bitcoin/pull/18038/files#diff-24efdb00bfbe56b140fb006b562cc70bR5121)\r\n- remove try block above, just leave the `file>>pool.m_unbroadcast_txids;` code below \r\n- if there are no `m_unbroadcast_txids`, there will be a `LogPrintf` that \"Failed to deserialize mempool data on disk. Continuing anyway\", and code moves on? \r\n\r\nif I am interpreting correctly.... I find that to be very misleading user output. And I'd expect it to happen frequently since the unbroadcast set is more of a safety mechanism and hopefully nodes aren't often shutting down without their local transactions being broadcast to the network. So I'm not really seeing the reasoning / benefits. But maybe I'm misunderstanding your suggestion.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-24T21:38:06Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397477029",
      "id" : 397477029,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ3NzAyOQ==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 380715909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397477029",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397535101"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397535101"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yeah great point. p2p fingerprints are never good. thanks for pointing out. \r\n\r\nhaving `AttemptInitialBroadcast` call `ScheduleNextInitialBroadcast` to schedule the next `AttemptInitialBroadcast` seems a bit much to me (and I'd have to pass the scheduler through anyways), so I'll just schedule the next invocation at the end of the function itself. ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T00:05:58Z",
      "diff_hunk" : "@@ -2345,6 +2342,11 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     // Dump network addresses\n     scheduler.scheduleEvery([this] { DumpAddresses(); }, DUMP_PEERS_INTERVAL);\n \n+    // Periodically attempt to broadcast transactions that have not yet been acknowledged by the network\n+    // To ensure impossibility of network-wide synchronization event, stagger retry intervals between 10-15 minutes.\n+    std::chrono::seconds reattempt_broadcast_interval = std::chrono::seconds(10*60 + GetRand(5*60));\n+    scheduler.scheduleEvery([this]{this->AttemptInitialBroadcast();}, std::chrono::milliseconds(reattempt_broadcast_interval));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397535101",
      "id" : 397535101,
      "in_reply_to_id" : 394455686,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNTEwMQ==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 31,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 380779869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397535101",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397536773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397536773"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The logprint should only happen on node update. A serialized empty set is hopefully different from no serialized set.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T00:11:11Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397536773",
      "id" : 397536773,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNjc3Mw==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 380781575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397536773",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397537337"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397537337"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See here:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/5236b2e267a58870239673c7ec85e5df0cb8fc8e/src/serialize.h#L972",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T00:12:58Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397537337",
      "id" : 397537337,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNzMzNw==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 380782148,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397537337",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397549618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397549618"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, so in normal case we'll get this error once: when the node is updated to use this code, and attempts to use the file from previous runs. Which is, yeah, not ideal, but probably fine.\r\nIf you'd really want to avoid that, I'd rather add versioning of the file, rather than having bools like that you suggest.\r\n(See how we do versioning in peers.dat AddrMan serialization if interested)",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T00:55:31Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397549618",
      "id" : 397549618,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0OTYxOA==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 380795029,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397549618",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397914899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397914899"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This file is already versioned, but the version shouldn't be bumped because that will silently drop *all* transactions of the mempool",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T14:49:41Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397914899",
      "id" : 397914899,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNDg5OQ==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 381222756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397914899",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397970619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397970619"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why does it have to drop all transactions? The new code can just be aware of the previous version, and not attempt to read unbroadcast_txs in that case, but just carefully read all old transactions (the advantage over this current PR is that no error is thrown/logged).",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T15:58:40Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397970619",
      "id" : 397970619,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3MDYxOQ==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 381293207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397970619",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397982629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397982629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Why does it have to drop all transactions?\r\n\r\nWhen bumping the version here and assuming the code is merged into 0.21.0, then reading a mempool.dat created by Bitcoin Core 0.21.0 will fail completely on a Bitcoin Core 0.20.0, because the code is already released and the logic of that code is to drop all transactions when the version is not equal to 1.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T16:14:03Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397982629",
      "id" : 397982629,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4MjYyOQ==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 381307997,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397982629",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397986621"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397986621"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "True. But who would use a mempool.dat from 0.21 on 0.20 node? I would say the most common scenario is opposite, upgrading from 0.20 to 0.21.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T16:19:19Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397986621",
      "id" : 397986621,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4NjYyMQ==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 381312926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397986621",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397989382"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397989382"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Miners might want to upgrade, test the new version for a bit and then downgrade temporarily because they noticed an RPC breaking change. They should be able to continue mining on the txs they had before. For many users, a version upgrade/downgrade is the only time they restart the node. So this is the only time when this code is run and can provide them with value. If the code fails to be useful in the only use-case we might as well remove it altogether. ;)",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T16:22:58Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397989382",
      "id" : 397989382,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4OTM4Mg==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 381316387,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397989382",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397990626"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397990626"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you guys think that a try-catch is useful to avoid the debug LogPrint, fine. I am ok with that too. But I don't see a reason for this boolean.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T16:24:34Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397990626",
      "id" : 397990626,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk5MDYyNg==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 381317881,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397990626",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397996259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397996259"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I also don't see a good reason for this boolean.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T16:31:58Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r397996259",
      "id" : 397996259,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk5NjI1OQ==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 381324723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397996259",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398190554"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398190554"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ok! I'm following now. I wasn't aware of the serialization logic. I'll remove the bool & try-catch as well. thanks!",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T21:47:21Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398190554",
      "id" : 398190554,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5MDU1NA==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 381561194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398190554",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398192894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398192894"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "this is awesome! thanks for the patch. I was also realizing there's a simpler flow via `RelayTransaction`, but I agree that kicking off the process in `PeerLogicValidation` constructor makes more sense conceptually than `CConnman::Start`. Also I like your rename to `ReattemptInitialBroadcast`, small change but makes intentions more obvious. Thank you! ðð½",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-25T21:52:07Z",
      "diff_hunk" : "@@ -2345,6 +2342,11 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     // Dump network addresses\n     scheduler.scheduleEvery([this] { DumpAddresses(); }, DUMP_PEERS_INTERVAL);\n \n+    // Periodically attempt to broadcast transactions that have not yet been acknowledged by the network\n+    // To ensure impossibility of network-wide synchronization event, stagger retry intervals between 10-15 minutes.\n+    std::chrono::seconds reattempt_broadcast_interval = std::chrono::seconds(10*60 + GetRand(5*60));\n+    scheduler.scheduleEvery([this]{this->AttemptInitialBroadcast();}, std::chrono::milliseconds(reattempt_broadcast_interval));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398192894",
      "id" : 398192894,
      "in_reply_to_id" : 395248783,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5Mjg5NA==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 31,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 381563859,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398192894",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398637924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398637924"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Indeed nice patch @ariard ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T14:56:13Z",
      "diff_hunk" : "@@ -2345,6 +2342,11 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     // Dump network addresses\n     scheduler.scheduleEvery([this] { DumpAddresses(); }, DUMP_PEERS_INTERVAL);\n \n+    // Periodically attempt to broadcast transactions that have not yet been acknowledged by the network\n+    // To ensure impossibility of network-wide synchronization event, stagger retry intervals between 10-15 minutes.\n+    std::chrono::seconds reattempt_broadcast_interval = std::chrono::seconds(10*60 + GetRand(5*60));\n+    scheduler.scheduleEvery([this]{this->AttemptInitialBroadcast();}, std::chrono::milliseconds(reattempt_broadcast_interval));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398637924",
      "id" : 398637924,
      "in_reply_to_id" : 395248783,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzNzkyNA==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 31,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 382092222,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398637924",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398721924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398721924"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "pass on this one. the `num` var gets compiled out regardless, and I personally think its much clearer to have it broken out, and helps indicate that erasing returns a number thats evaluated for the if statement",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:41:11Z",
      "diff_hunk" : "@@ -1605,7 +1605,21 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n                     push = true;\n                 }\n             }\n-            if (!push) {\n+\n+            if (push) {\n+                int num = 0;\n+\n+                // We intepret processing a GETDATA for a transaction as a successful initial broadcast\n+                // and remove it from our unbroadcast set.\n+                {\n+                    LOCK(mempool.cs);\n+                    num = mempool.m_unbroadcast_txids.erase(inv.hash);\n+                }\n+\n+                if (num) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398721924",
      "id" : 398721924,
      "in_reply_to_id" : 394440617,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyMTkyNA==",
      "original_commit_id" : "77748da2269bd7f2304ebc3b8616d3a584e7c65f",
      "original_position" : 25,
      "path" : "src/net_processing.cpp",
      "position" : 51,
      "pull_request_review_id" : 382197900,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398721924",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398722015"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398722015"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:41:20Z",
      "diff_hunk" : "@@ -78,6 +78,10 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n     }\n \n     if (relay) {\n+        // the mempool tracks locally submitted transactions to make a\n+        // best-effort of initial broadcast\n+        WITH_LOCK(mempool.cs, mempool.m_unbroadcast_txids.insert(hashTx));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398722015",
      "id" : 398722015,
      "in_reply_to_id" : 394443323,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyMjAxNQ==",
      "original_commit_id" : "77748da2269bd7f2304ebc3b8616d3a584e7c65f",
      "original_position" : 6,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 382198019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398722015",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398722892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398722892"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed. thanks!",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:42:29Z",
      "diff_hunk" : "@@ -2345,6 +2342,11 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     // Dump network addresses\n     scheduler.scheduleEvery([this] { DumpAddresses(); }, DUMP_PEERS_INTERVAL);\n \n+    // Periodically attempt to broadcast transactions that have not yet been acknowledged by the network\n+    // To ensure impossibility of network-wide synchronization event, stagger retry intervals between 10-15 minutes.\n+    std::chrono::seconds reattempt_broadcast_interval = std::chrono::seconds(10*60 + GetRand(5*60));\n+    scheduler.scheduleEvery([this]{this->AttemptInitialBroadcast();}, std::chrono::milliseconds(reattempt_broadcast_interval));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398722892",
      "id" : 398722892,
      "in_reply_to_id" : 394455686,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyMjg5Mg==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 31,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 382199085,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398722892",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398724101"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398724101"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "method no longer exists, but pass by reference for `ReattemptInitialBroadcast`",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:44:06Z",
      "diff_hunk" : "@@ -779,6 +779,23 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+// We don't force an attempt to relay unbroadcast txns by directly adding them\n+// to setInventoryTxToSend, but instead pass to PushInventory which checks\n+// filterInventoryKnown.\n+//\n+// Passing txns through the bloom filter has a stronger privacy model, but weaker\n+// delivery guarantees. Under certain network & node conditions, it may still\n+// take an extended period of time for the transaction to be initially broadcast\n+// to the network.\n+void PeerLogicValidation::QueueUnbroadcastTxs(CNode* pnode)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398724101",
      "id" : 398724101,
      "in_reply_to_id" : 394459225,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNDEwMQ==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 12,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 382200605,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398724101",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398724543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398724543"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "method no longer exists, but fixed in `ReattemptInitialBroadcast`",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:44:38Z",
      "diff_hunk" : "@@ -779,6 +779,23 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+// We don't force an attempt to relay unbroadcast txns by directly adding them\n+// to setInventoryTxToSend, but instead pass to PushInventory which checks\n+// filterInventoryKnown.\n+//\n+// Passing txns through the bloom filter has a stronger privacy model, but weaker\n+// delivery guarantees. Under certain network & node conditions, it may still\n+// take an extended period of time for the transaction to be initially broadcast\n+// to the network.\n+void PeerLogicValidation::QueueUnbroadcastTxs(CNode* pnode)\n+{\n+    LOCK(mempool.cs);\n+    for(const uint256& txid : mempool.m_unbroadcast_txids){",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398724543",
      "id" : 398724543,
      "in_reply_to_id" : 394459527,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNDU0Mw==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 15,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 382201094,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398724543",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398726113"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398726113"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "updated this so comment above `ReattemptInitialBroadcast` just notes that unbroadcast txs will be passed through `filterInventoryKnown`. Leaving the tradeoff analysis for reviewers / future people writing code. ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:46:43Z",
      "diff_hunk" : "@@ -779,6 +779,23 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n+// We don't force an attempt to relay unbroadcast txns by directly adding them\n+// to setInventoryTxToSend, but instead pass to PushInventory which checks\n+// filterInventoryKnown.\n+//\n+// Passing txns through the bloom filter has a stronger privacy model, but weaker\n+// delivery guarantees. Under certain network & node conditions, it may still\n+// take an extended period of time for the transaction to be initially broadcast\n+// to the network.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398726113",
      "id" : 398726113,
      "in_reply_to_id" : 394470334,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNjExMw==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 11,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 382203055,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398726113",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398726490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398726490"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Method no longer exists but made `ReattemptInitialBroadcast` const. ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:47:10Z",
      "diff_hunk" : "@@ -75,7 +75,8 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     void CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams);\n     /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n     void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n-\n+    /** Retrieve unbroadcast transactions from the mempool and possibly send to pnode */\n+    void QueueUnbroadcastTxs(CNode* pnode) override;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398726490",
      "id" : 398726490,
      "in_reply_to_id" : 394470902,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNjQ5MA==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 6,
      "path" : "src/net_processing.h",
      "position" : null,
      "pull_request_review_id" : 382203505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398726490",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398727249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398727249"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed! thanks for the style tips ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:48:12Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398727249",
      "id" : 398727249,
      "in_reply_to_id" : 394474255,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNzI0OQ==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 21,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 382204460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398727249",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398727457"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398727457"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:48:30Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes\n+)\n+\n+class MempoolUnbroadcastTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_broadcast()\n+        self.test_txn_removal()\n+\n+    def test_broadcast(self):\n+        self.log.info(\"Test that mempool reattempts delivery of locally submitted transaction\")\n+        node = self.nodes[0]\n+\n+        min_relay_fee = node.getnetworkinfo()[\"relayfee\"]\n+        utxos = create_confirmed_utxos(min_relay_fee, node, 10)\n+\n+        disconnect_nodes(node, 1)\n+\n+        self.log.info(\"Generate transactions that only node 0 knows about\")\n+        # generate a wallet txn\n+        addr = node.getnewaddress()\n+        wallet_tx_hsh = node.sendtoaddress(addr, 0.0001)\n+\n+        # generate a txn using sendrawtransaction\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {addr: 0.0001}\n+        tx = node.createrawtransaction(inputs, outputs)\n+        node.settxfee(min_relay_fee)\n+        txF = node.fundrawtransaction(tx)\n+        txFS = node.signrawtransactionwithwallet(txF['hex'])\n+        rpc_tx_hsh = node.sendrawtransaction(txFS['hex'])  # txhsh in hex\n+\n+        # check that second node doesn't have these two txns\n+        mempool = self.nodes[1].getrawmempool()\n+        assert(rpc_tx_hsh not in mempool)\n+        assert(wallet_tx_hsh not in mempool)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398727457",
      "id" : 398727457,
      "in_reply_to_id" : 394475575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNzQ1Nw==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 62,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 382204741,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398727457",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398727723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398727723"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good idea! updated.",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:48:46Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes\n+)\n+\n+class MempoolUnbroadcastTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_broadcast()\n+        self.test_txn_removal()\n+\n+    def test_broadcast(self):\n+        self.log.info(\"Test that mempool reattempts delivery of locally submitted transaction\")\n+        node = self.nodes[0]\n+\n+        min_relay_fee = node.getnetworkinfo()[\"relayfee\"]\n+        utxos = create_confirmed_utxos(min_relay_fee, node, 10)\n+\n+        disconnect_nodes(node, 1)\n+\n+        self.log.info(\"Generate transactions that only node 0 knows about\")\n+        # generate a wallet txn\n+        addr = node.getnewaddress()\n+        wallet_tx_hsh = node.sendtoaddress(addr, 0.0001)\n+\n+        # generate a txn using sendrawtransaction\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {addr: 0.0001}\n+        tx = node.createrawtransaction(inputs, outputs)\n+        node.settxfee(min_relay_fee)\n+        txF = node.fundrawtransaction(tx)\n+        txFS = node.signrawtransactionwithwallet(txF['hex'])\n+        rpc_tx_hsh = node.sendrawtransaction(txFS['hex'])  # txhsh in hex\n+\n+        # check that second node doesn't have these two txns\n+        mempool = self.nodes[1].getrawmempool()\n+        assert(rpc_tx_hsh not in mempool)\n+        assert(wallet_tx_hsh not in mempool)\n+\n+        self.log.info(\"Reconnect nodes & check if they are sent to node 1\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398727723",
      "id" : 398727723,
      "in_reply_to_id" : 394476596,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNzcyMw==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 64,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : 64,
      "pull_request_review_id" : 382204980,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398727723",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398727977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398727977"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "updated ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:49:04Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes\n+)\n+\n+class MempoolUnbroadcastTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_broadcast()\n+        self.test_txn_removal()\n+\n+    def test_broadcast(self):\n+        self.log.info(\"Test that mempool reattempts delivery of locally submitted transaction\")\n+        node = self.nodes[0]\n+\n+        min_relay_fee = node.getnetworkinfo()[\"relayfee\"]\n+        utxos = create_confirmed_utxos(min_relay_fee, node, 10)\n+\n+        disconnect_nodes(node, 1)\n+\n+        self.log.info(\"Generate transactions that only node 0 knows about\")\n+        # generate a wallet txn\n+        addr = node.getnewaddress()\n+        wallet_tx_hsh = node.sendtoaddress(addr, 0.0001)\n+\n+        # generate a txn using sendrawtransaction\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {addr: 0.0001}\n+        tx = node.createrawtransaction(inputs, outputs)\n+        node.settxfee(min_relay_fee)\n+        txF = node.fundrawtransaction(tx)\n+        txFS = node.signrawtransactionwithwallet(txF['hex'])\n+        rpc_tx_hsh = node.sendrawtransaction(txFS['hex'])  # txhsh in hex\n+\n+        # check that second node doesn't have these two txns\n+        mempool = self.nodes[1].getrawmempool()\n+        assert(rpc_tx_hsh not in mempool)\n+        assert(wallet_tx_hsh not in mempool)\n+\n+        self.log.info(\"Reconnect nodes & check if they are sent to node 1\")\n+        connect_nodes(node, 1)\n+\n+        # fast forward into the future & ensure that the second node has the txns\n+        node.mockscheduler(15*60) # 15 min in seconds\n+        wait_until(lambda: len(self.nodes[1].getrawmempool()) == 2, timeout=30)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398727977",
      "id" : 398727977,
      "in_reply_to_id" : 394478852,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNzk3Nw==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 69,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 382205284,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398727977",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398729959"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398729959"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ahahhahaha omg I'm glad its been a while since I wrote this test & I don't remember how long I spent figuring out how to manually make the txn and block ð\r\n\r\ntwo-liner is much cleaner. I feel comfortable with the coverage of wallet & rpc from previous test.\r\n\r\nthanks! ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:51:39Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the mempool ensures transaction delivery by periodically sending\n+to peers until a GETDATA is received.\"\"\"\n+\n+from io import BytesIO\n+import time\n+\n+from test_framework.blocktools import create_block, create_coinbase\n+from test_framework.messages import ToHex, CTransaction\n+from test_framework.mininode import P2PTxInvStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        disconnect_nodes,\n+        connect_nodes,\n+        create_confirmed_utxos,\n+        wait_until,\n+        hex_str_to_bytes\n+)\n+\n+class MempoolUnbroadcastTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_broadcast()\n+        self.test_txn_removal()\n+\n+    def test_broadcast(self):\n+        self.log.info(\"Test that mempool reattempts delivery of locally submitted transaction\")\n+        node = self.nodes[0]\n+\n+        min_relay_fee = node.getnetworkinfo()[\"relayfee\"]\n+        utxos = create_confirmed_utxos(min_relay_fee, node, 10)\n+\n+        disconnect_nodes(node, 1)\n+\n+        self.log.info(\"Generate transactions that only node 0 knows about\")\n+        # generate a wallet txn\n+        addr = node.getnewaddress()\n+        wallet_tx_hsh = node.sendtoaddress(addr, 0.0001)\n+\n+        # generate a txn using sendrawtransaction\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {addr: 0.0001}\n+        tx = node.createrawtransaction(inputs, outputs)\n+        node.settxfee(min_relay_fee)\n+        txF = node.fundrawtransaction(tx)\n+        txFS = node.signrawtransactionwithwallet(txF['hex'])\n+        rpc_tx_hsh = node.sendrawtransaction(txFS['hex'])  # txhsh in hex\n+\n+        # check that second node doesn't have these two txns\n+        mempool = self.nodes[1].getrawmempool()\n+        assert(rpc_tx_hsh not in mempool)\n+        assert(wallet_tx_hsh not in mempool)\n+\n+        self.log.info(\"Reconnect nodes & check if they are sent to node 1\")\n+        connect_nodes(node, 1)\n+\n+        # fast forward into the future & ensure that the second node has the txns\n+        node.mockscheduler(15*60) # 15 min in seconds\n+        wait_until(lambda: len(self.nodes[1].getrawmempool()) == 2, timeout=30)\n+        mempool = self.nodes[1].getrawmempool()\n+        assert(rpc_tx_hsh in mempool)\n+        assert(wallet_tx_hsh in mempool)\n+\n+        self.log.info(\"Add another connection & ensure transactions aren't broadcast again\")\n+\n+        conn = node.add_p2p_connection(P2PTxInvStore())\n+        node.mockscheduler(15*60)\n+        time.sleep(5)\n+        assert_equal(len(conn.get_invs()), 0)\n+\n+    def test_txn_removal(self):\n+        self.log.info(\"Test that transactions removed from mempool are removed from unbroadcast set\")\n+        node = self.nodes[0]\n+        disconnect_nodes(node, 1)\n+\n+        min_relay_fee = node.getnetworkinfo()[\"relayfee\"]\n+        utxos = create_confirmed_utxos(min_relay_fee, node, 10)\n+\n+        # create a transaction & submit to node\n+        # since the node doesn't have any connections, it will not receive\n+        # any GETDATAs & thus the transaction will remain in the unbroadcast set.\n+        utxo = utxos.pop()\n+        outputs = { node.getnewaddress() : 0.0001 }\n+        inputs = [{'txid': utxo['txid'], 'vout': utxo['vout']}]\n+        raw_tx_hex = node.createrawtransaction(inputs, outputs)\n+        signed_tx = node.signrawtransactionwithwallet(raw_tx_hex)\n+        txhsh = node.sendrawtransaction(hexstring=signed_tx['hex'], maxfeerate=0)\n+\n+        # mine a block with that transaction\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1))\n+        tx = CTransaction()\n+        tx.deserialize(BytesIO(hex_str_to_bytes(signed_tx['hex'])))\n+        block.vtx.append(tx)\n+        block.rehash()\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+        block.solve()\n+        node.submitblock(ToHex(block))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398729959",
      "id" : 398729959,
      "in_reply_to_id" : 394480786,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyOTk1OQ==",
      "original_commit_id" : "f40f6875f5570cb25882d8a04a6cbeb61ee7366d",
      "original_position" : 107,
      "path" : "test/functional/mempool_unbroadcast.py",
      "position" : null,
      "pull_request_review_id" : 382207805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398729959",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398730247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398730247"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed! thanks again",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:52:01Z",
      "diff_hunk" : "@@ -5045,12 +5046,30 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             pool.PrioritiseTransaction(i.first, i.second);\n         }\n+\n+        // check if there are unbroadcast transactions\n+        bool has_unbroadcast_txns = false;\n+\n+        try {\n+            file >> has_unbroadcast_txns;\n+        } catch (const std::exception &e) {\n+            // eof gets set when we try to read the end of the file\n+            // so specifically catch expected error and move on.\n+            if (!file.eof()) throw e;\n+        }\n+\n+        if (has_unbroadcast_txns) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398730247",
      "id" : 398730247,
      "in_reply_to_id" : 394483205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODczMDI0Nw==",
      "original_commit_id" : "b0f6a238335d96c9f5f7c2b83aabd56ab4f47a71",
      "original_position" : 24,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 382208138,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398730247",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398730775"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398730775"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "incorporated. thanks again! ",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-26T16:52:43Z",
      "diff_hunk" : "@@ -2345,6 +2342,11 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     // Dump network addresses\n     scheduler.scheduleEvery([this] { DumpAddresses(); }, DUMP_PEERS_INTERVAL);\n \n+    // Periodically attempt to broadcast transactions that have not yet been acknowledged by the network\n+    // To ensure impossibility of network-wide synchronization event, stagger retry intervals between 10-15 minutes.\n+    std::chrono::seconds reattempt_broadcast_interval = std::chrono::seconds(10*60 + GetRand(5*60));\n+    scheduler.scheduleEvery([this]{this->AttemptInitialBroadcast();}, std::chrono::milliseconds(reattempt_broadcast_interval));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r398730775",
      "id" : 398730775,
      "in_reply_to_id" : 395248783,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODczMDc3NQ==",
      "original_commit_id" : "2f3f449dc9c89420a444cc8263c5a5fe537a475b",
      "original_position" : 31,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 382208774,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-26T18:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398730775",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "thank you for the thoughtful reviews! pushed changes incorporating the feedback. \r\n\r\ncurrently looking into CI failures. appveyor is failing on `feature_versionbits_warning.py`, but travis is failing on `mempool_persist`, so I'm investigating. ",
      "created_at" : "2020-03-26T22:35:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-604722444",
      "id" : 604722444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNDcyMjQ0NA==",
      "updated_at" : "2020-03-26T22:35:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/604722444",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Previous runs: \r\n* https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/31747734\r\n* https://travis-ci.org/github/bitcoin/bitcoin/builds/667378104\r\n\r\nI think they are intermittent failures, so I am going to re-run this pull\r\n\r\nOpen-Close to re-run ci. See https://github.com/bitcoin/bitcoin/issues/15847#issuecomment-487591130",
      "created_at" : "2020-03-27T00:32:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-604755044",
      "id" : 604755044,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNDc1NTA0NA==",
      "updated_at" : "2020-03-27T00:32:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/604755044",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "the travis valgrind build is failing on `p2p_permissions` test. \r\n\r\ntrying to make sense of the logs... looks like node1 has an unclean shutdown, possibly because the RPC is attempted to be stopped more than once? \r\nI'm a bit confused because it looks like  `test_framework/authproxy.py` is throwing a `ConnectionResetError` from `_request`, but that method should be catching the error? but I think its thrown for a second time in the `except` block.\r\n\r\ntrying to figure out if this is related to my changes. [earlier in this PR](https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-592167518) what first looked like an unrelated failure to me was actually related because of issues with my lock logic. this time doesn't look like either node is crashing. from what I can discern, looks like node1 having an unclean shutdown because of a failure in an http request. which leads me to thinking its test flakiness.\r\n\r\n@MarcoFalke - thoughts? ",
      "created_at" : "2020-03-30T18:28:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-606165779",
      "id" : 606165779,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjE2NTc3OQ==",
      "updated_at" : "2020-03-30T18:38:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606165779",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ariard - addressing your 2 outstanding review comments\r\n\r\nRE: wtxid - there is some additional code needed to support unbroadcast set & wtxid relay. I'll work on the patch & depending on timing around which PR is ready for merge first, include the patch here or offer it on the other PR. Thanks again for pointing that out :) \r\n\r\nRE: `filterInventoryKnown` - to make this easier to realize, I mention in a comment above `ReattemptInitialBroadcast`. However, I'm hesitant to impose too much interpretation in the code comments or commit messages, because I want to encourage independent thinking that might conflict with or challenge my own interpretation. Also because there are so many interactions it's kind of impossible to encapsulate them all, and they will also change over time.\r\n\r\nTo be more specific..\r\n> If no GETDATA is processed before mempool initial-broadcast\r\nreattempt period expires, a new announcement is made to every peer. Due\r\nto inventory filter, this is only effective for new peers since last period\r\nexpiration.\r\n\r\nThis is the normal condition, but iirc `filterInventoryKnown` is cleared out based on number of transactions, so maybe under super high traffic network conditions, an announcement is resent to the same peer? \r\n\r\nAnd in regards to the second part of your comment, I don't quite follow..\r\n> Transaction origin privacy would only be worsened if a) among\r\nnew nodes there is a spying one \r\n\r\nSay you have a set of unbroadcast transactions. You attempt initial broadcast, but your wifi is disconnected so they don't go anywhere, but get inserted into `filterInventoryKnown` for your existing connections. A malicious node connects to you. `ReattemptInitialBroadcast` is triggered & you send your wallet transaction to this node. At that time, the node cannot identify that is your transaction with certainty. For it to carry out an attack, it needs to be the ONLY node you submitted the transaction to. Which is possible, but a specific subset of this condition.\r\n\r\n> b) no honest/reliable peers reported back\r\na GETDATA. Given the mempool rebroadcast period length, if b) occurs, that\r\nwould be a clue of bigger concern.\r\n(but if b) occurs that's a reliability improvement IMO)\r\n\r\nso, there are two main reasons a node wouldn't report back a `GETDATA`. Either network issues (it didn't receive announcement, you didn't receive the `GETDATA`). Or it is malicious. If it is occurring because of network issues, it makes sense to try again. Is this the reliability improvement that you are talking about? because thats the main point of this PR :) ",
      "created_at" : "2020-03-30T19:18:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-606190183",
      "id" : 606190183,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjE5MDE4Mw==",
      "updated_at" : "2020-03-30T22:14:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606190183",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r400569145"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400569145"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "from https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-606190183\r\n\r\nRE: wtxid - there is some additional code needed to support unbroadcast set & wtxid relay. I'll work on the patch & depending on timing around which PR is ready for merge first, include the patch here or offer it on the other PR. Thanks again for pointing that out :)",
      "commit_id" : "6307582b4d30167a931678d12e99a00a0e75e81a",
      "created_at" : "2020-03-31T00:14:40Z",
      "diff_hunk" : "@@ -534,6 +534,10 @@ class CTxMemPool\n     const setEntries & GetMemPoolParents(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     const setEntries & GetMemPoolChildren(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     uint64_t CalculateDescendantMaximum(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    // track locally submitted transactions & periodically retry initial broadcast\n+    std::set<uint256> m_unbroadcast_txids;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#discussion_r400569145",
      "id" : 400569145,
      "in_reply_to_id" : 393293074,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2OTE0NQ==",
      "original_commit_id" : "66ec5571ad49b68366e4607cf0b671231083757e",
      "original_position" : 6,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 384319528,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
      "updated_at" : "2020-03-31T00:14:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400569145",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ok! travis is green, all current review comments are addressed. \r\n\r\nthis PR is ready for another round of review! \r\nthanks in advance :) ",
      "created_at" : "2020-03-31T00:16:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18038#issuecomment-606320113",
      "id" : 606320113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjMyMDExMw==",
      "updated_at" : "2020-03-31T00:16:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606320113",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   }
]
