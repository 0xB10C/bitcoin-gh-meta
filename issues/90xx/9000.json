{
   "assignee" : null,
   "assignees" : [],
   "body" : "I'm not sure if this actually makes sense to include in the mainline code, but I'm PRing here in case others think it may be useful. It has proven to be extremely helpful for me in the last few days while testing various mining software.\r\n\r\nThis enables anyone to \"mine\" on any chain, including mainnet in realtime, in order to test mining software. The desired difficulty is set via a bitcoind param ```-forceminerdifficulty=n```. The difficulty is set in bitcoind rather than via a new rpc command or getblocktemplate/submitblock in order to facilitate testing mining/pool software that may be hard to change (for example, in embedded hardware, or pool software running on a different machine).\r\n\r\n### Backstory\r\n\r\nI was recently working on adding segwit commitments to some existing mining software. After doing basic sanity checks, I let it run on testnet (where the difficulty is currently very high) for a few days. I began to notice a subtle race condition that caused a small percentage of blocks to be rejected, with no obvious cause for the breakage.\r\n\r\nI didn't think that my code could've caused the problem, and ordinarily I would just re-run on the unpatched code. Problem was, testnet3 has activated segwit, and the unpatched miner could not insert the commitment. So the only way to really simulate (without manually creating lots of peers and transactions in order to stumble upon the problem) would be to mine on mainnet. Obviously that wasn't realistic.\r\n\r\n### Solution\r\n\r\nMine on mainnet with a specified difficulty, ignore the work requirement, validate, report success, then throw the block away. This turned out to work beautifully. The time it took me to reproduce the error dropped from ~10hrs to ~30sec.\r\n\r\nIn this case, specifying the difficulty, rather than simply setting it to the minimum, was crucial. The race condition occurred only after rolling the extranonce a few times.\r\n\r\nI believe this approach should work universally. Mining/Pooling software gets a little cranky about stale blocks, but otherwise works fine.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 4,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9000/comments",
   "created_at" : "2016-10-23T17:32:41Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9000/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/9000",
   "id" : 184702955,
   "labels" : [
      {
         "color" : "c7def8",
         "name" : "Mining",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Mining"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9000/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 9000,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/9000.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9000",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/9000.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9000"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "miner debugging: faux-mining",
   "updated_at" : "2016-10-26T11:52:42Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9000",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
      "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
      "followers_url" : "https://api.github.com/users/theuni/followers",
      "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/theuni",
      "id" : 417043,
      "login" : "theuni",
      "organizations_url" : "https://api.github.com/users/theuni/orgs",
      "received_events_url" : "https://api.github.com/users/theuni/received_events",
      "repos_url" : "https://api.github.com/users/theuni/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/theuni"
   }
}
