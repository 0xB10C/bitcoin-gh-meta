[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357709665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357709665"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 6d1491603f6dfb9f755e60d77685635c35d5a48b: \r\n\r\nIs m_chain.SetTip assumed to be under cs_main? If yes, this should say ` ... = WITH_LOCK(cs_main, return m_chain.Tip());`",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-13T15:51:26Z",
      "diff_hunk" : "@@ -4908,6 +4908,13 @@ void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n     assert(nNodes == forward.size());\n }\n \n+std::string CChainState::ToString()\n+{\n+    CBlockIndex* tip = m_chain.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357709665",
      "id" : 357709665,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcwOTY2NQ==",
      "original_commit_id" : "6d1491603f6dfb9f755e60d77685635c35d5a48b",
      "original_position" : 6,
      "path" : "src/validation.cpp",
      "position" : 206,
      "pull_request_review_id" : 331955313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-13T16:31:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357709665",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357709949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357709949"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 6d14916:\r\n\r\nI think the arguments are switched?",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-13T15:52:03Z",
      "diff_hunk" : "@@ -4908,6 +4908,13 @@ void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n     assert(nNodes == forward.size());\n }\n \n+std::string CChainState::ToString()\n+{\n+    CBlockIndex* tip = m_chain.Tip();\n+    return strprintf(\"Chainstate [%s] @ height %d\",\n+        tip ? tip->nHeight : -1, tip ? tip->GetBlockHash().ToString() : \"null\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357709949",
      "id" : 357709949,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcwOTk0OQ==",
      "original_commit_id" : "6d1491603f6dfb9f755e60d77685635c35d5a48b",
      "original_position" : 8,
      "path" : "src/validation.cpp",
      "position" : 209,
      "pull_request_review_id" : 331955313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-13T16:31:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357709949",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357711715"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357711715"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 6b62d2f15397226b273cb87f56b8978404fd415f:\r\n\r\nShould be const to ensure at compile time that we know whether a chainstate was created from a snapshot?",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-13T15:55:41Z",
      "diff_hunk" : "@@ -611,6 +611,13 @@ class CChainState {\n     //! @see CChain, CBlockIndex.\n     CChain m_chain;\n \n+    /**\n+     * The blockhash which is the base of the snapshot this chainstate was created from.\n+     *\n+     * IsNull() if this chainstate was not created from a snapshot.\n+     */\n+    uint256 m_from_snapshot_blockhash{};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357711715",
      "id" : 357711715,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcxMTcxNQ==",
      "original_commit_id" : "6b62d2f15397226b273cb87f56b8978404fd415f",
      "original_position" : 18,
      "path" : "src/validation.h",
      "position" : 39,
      "pull_request_review_id" : 331955313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-13T16:31:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357711715",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357712223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357712223"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 6b62d2f15397226b273cb87f56b8978404fd415f:\r\n\r\nconstructors (especially single arg ones) should be explicit. Otherwise any hash can be passed into a function that accepts a chainstate. Hmmm",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-13T15:56:44Z",
      "diff_hunk" : "@@ -583,7 +583,7 @@ class CChainState {\n \n public:\n     CChainState(BlockManager& blockman) : m_blockman(blockman) {}\n-    CChainState();\n+    CChainState(uint256 from_snapshot_blockhash = uint256());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357712223",
      "id" : 357712223,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcxMjIyMw==",
      "original_commit_id" : "6b62d2f15397226b273cb87f56b8978404fd415f",
      "original_position" : 5,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 331955313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-13T16:31:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357712223",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357712757"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357712757"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 6b62d2f15397226b273cb87f56b8978404fd415f:\r\n\r\nNow the arguments are correct. Might just squash the commits?",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-13T15:57:52Z",
      "diff_hunk" : "@@ -4908,6 +4908,13 @@ void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n     assert(nNodes == forward.size());\n }\n \n+std::string CChainState::ToString()\n+{\n+    CBlockIndex* tip = m_chain.Tip();\n+    return strprintf(\"Chainstate [%s] @ height %d\",\n+        tip ? tip->nHeight : -1, tip ? tip->GetBlockHash().ToString() : \"null\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357712757",
      "id" : 357712757,
      "in_reply_to_id" : 357709949,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcxMjc1Nw==",
      "original_commit_id" : "6d1491603f6dfb9f755e60d77685635c35d5a48b",
      "original_position" : 8,
      "path" : "src/validation.cpp",
      "position" : 209,
      "pull_request_review_id" : 331955313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-13T16:31:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357712757",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357713099"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357713099"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit in 6b62d2f15397226b273cb87f56b8978404fd415f:\r\n\r\nThe colon goes into a new line according to our clang-format",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-13T15:58:41Z",
      "diff_hunk" : "@@ -1245,7 +1245,9 @@ void CoinsViews::InitCache()\n \n // NOTE: for now m_blockman is set to a global, but this will be changed\n // in a future commit.\n-CChainState::CChainState() : m_blockman(g_blockman) {}\n+CChainState::CChainState(uint256 from_snapshot_blockhash) :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357713099",
      "id" : 357713099,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcxMzA5OQ==",
      "original_commit_id" : "6b62d2f15397226b273cb87f56b8978404fd415f",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 331955313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-13T16:31:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357713099",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357716948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357716948"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 6a629cfd02:\r\n\r\nWouldn't this need to happen under some chainstate manager lock? Otherwise the chainstate might point to uninitialized memory in case of a race where \" Its contents will be freed when background validation of the snapshot has completed.\"",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-13T16:07:06Z",
      "diff_hunk" : "@@ -757,6 +762,111 @@ bool InvalidateBlock(BlockValidationState& state, const CChainParams& chainparam\n /** Remove invalidity status from a block and its descendants. */\n void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+/**\n+ * Provides an interface for creating and interacting with multiple\n+ * chainstates, as well as a means to initialize chainstates from a\n+ * UTXO snapshot. Managed chainstates can be maintained at different\n+ * heights simultaneously.\n+ *\n+ * This class provides abstractions that allow the retrieval of the current\n+ * most-work chainstate (\"Active\") as well as chainstates which may be in\n+ * background use to validate UTXO snapshots.\n+ *\n+ * A few quick definitions:\n+ *\n+ * *IBD chainstate*: a chainstate populated via initial block download.\n+ *\n+ * *Snapshot chainstate*: a chainstate populated by loading in an\n+ *    assumed-valid UTXO snapshot.\n+ *\n+ * *Active chainstate*: the chainstate containing the current most-work\n+ *    chain. Consulted by most parts of the system (net_processing,\n+ *    wallet) as a reflection of the current chain and UTXO set.\n+ *    This may either be an IBD chainstate or a snapshot chainstate.\n+ *\n+ * *Background validation chainstate*: an IBD chainstate for which the\n+ *    IBD process is happening in the background while use of the\n+ *    active chainstate allows the rest of the system to function.\n+ *\n+ * *Validated chainstate*: a chainstate whose validity is not assumed.\n+ *    This could be an IBD chainstate, or a snapshot chainstate for\n+ *    which background validation (up to the base of the snapshot)\n+ *    has completed.\n+ */\n+class ChainstateManager\n+{\n+private:\n+    //! The chainstate used under normal operation (i.e. \"regular\" IBD) or,\n+    //! if a snapshot is in use, for background validation. Its contents will\n+    //! be freed when background validation of the snapshot has completed.\n+    std::unique_ptr<CChainState> m_ibd_chainstate;\n+\n+    //! A chainstate initialized on the basis of a UTXO snapshot. If this is\n+    //! non-null, it is always our active chainstate unless proven invalid.\n+    std::unique_ptr<CChainState> m_snapshot_chainstate;\n+\n+    //! Points to either the ibd or snapshot chainstate; indicates our\n+    //! most-work chain.\n+    CChainState* m_active_chainstate;\n+\n+    //! The base blockhash of the active UTXO snapshot (if one is being used)\n+    uint256 m_snapshot_blockhash{};\n+\n+    //! If true, the assumed-valid chainstate has been fully validated\n+    //! by the background validation chainstate.\n+    bool m_snapshot_validated{false};\n+\n+    // For access to m_active_chainstate.\n+    friend CChain& ChainActive();\n+\n+public:\n+    //! Instantiate a new chainstate and assign it based upon whether it is\n+    //! from a snapshot.\n+    //!\n+    //! @param[in] activate   If true, make this new chainstate the active one.\n+    //! @param[in] snapshot_blockhash   If given, signify that this chainstate\n+    //!                                 is based on a snapshot.\n+    CChainState& InitializeChainstate(\n+        bool activate = true, const uint256& snapshot_blockhash = uint256());\n+\n+    //! Get all chainstates currently being used.\n+    std::vector<CChainState*> GetAll();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357716948",
      "id" : 357716948,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcxNjk0OA==",
      "original_commit_id" : "6a629cfd02907162cea4dbef86837ee4c01bf157",
      "original_position" : 91,
      "path" : "src/validation.h",
      "position" : 139,
      "pull_request_review_id" : 331955313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-13T16:31:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357716948",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357719170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357719170"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 6a629cfd029071: \r\n\r\nHow and why is this different from `return !m_ibd_chainstate`?",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-13T16:11:38Z",
      "diff_hunk" : "@@ -757,6 +762,111 @@ bool InvalidateBlock(BlockValidationState& state, const CChainParams& chainparam\n /** Remove invalidity status from a block and its descendants. */\n void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+/**\n+ * Provides an interface for creating and interacting with multiple\n+ * chainstates, as well as a means to initialize chainstates from a\n+ * UTXO snapshot. Managed chainstates can be maintained at different\n+ * heights simultaneously.\n+ *\n+ * This class provides abstractions that allow the retrieval of the current\n+ * most-work chainstate (\"Active\") as well as chainstates which may be in\n+ * background use to validate UTXO snapshots.\n+ *\n+ * A few quick definitions:\n+ *\n+ * *IBD chainstate*: a chainstate populated via initial block download.\n+ *\n+ * *Snapshot chainstate*: a chainstate populated by loading in an\n+ *    assumed-valid UTXO snapshot.\n+ *\n+ * *Active chainstate*: the chainstate containing the current most-work\n+ *    chain. Consulted by most parts of the system (net_processing,\n+ *    wallet) as a reflection of the current chain and UTXO set.\n+ *    This may either be an IBD chainstate or a snapshot chainstate.\n+ *\n+ * *Background validation chainstate*: an IBD chainstate for which the\n+ *    IBD process is happening in the background while use of the\n+ *    active chainstate allows the rest of the system to function.\n+ *\n+ * *Validated chainstate*: a chainstate whose validity is not assumed.\n+ *    This could be an IBD chainstate, or a snapshot chainstate for\n+ *    which background validation (up to the base of the snapshot)\n+ *    has completed.\n+ */\n+class ChainstateManager\n+{\n+private:\n+    //! The chainstate used under normal operation (i.e. \"regular\" IBD) or,\n+    //! if a snapshot is in use, for background validation. Its contents will\n+    //! be freed when background validation of the snapshot has completed.\n+    std::unique_ptr<CChainState> m_ibd_chainstate;\n+\n+    //! A chainstate initialized on the basis of a UTXO snapshot. If this is\n+    //! non-null, it is always our active chainstate unless proven invalid.\n+    std::unique_ptr<CChainState> m_snapshot_chainstate;\n+\n+    //! Points to either the ibd or snapshot chainstate; indicates our\n+    //! most-work chain.\n+    CChainState* m_active_chainstate;\n+\n+    //! The base blockhash of the active UTXO snapshot (if one is being used)\n+    uint256 m_snapshot_blockhash{};\n+\n+    //! If true, the assumed-valid chainstate has been fully validated\n+    //! by the background validation chainstate.\n+    bool m_snapshot_validated{false};\n+\n+    // For access to m_active_chainstate.\n+    friend CChain& ChainActive();\n+\n+public:\n+    //! Instantiate a new chainstate and assign it based upon whether it is\n+    //! from a snapshot.\n+    //!\n+    //! @param[in] activate   If true, make this new chainstate the active one.\n+    //! @param[in] snapshot_blockhash   If given, signify that this chainstate\n+    //!                                 is based on a snapshot.\n+    CChainState& InitializeChainstate(\n+        bool activate = true, const uint256& snapshot_blockhash = uint256());\n+\n+    //! Get all chainstates currently being used.\n+    std::vector<CChainState*> GetAll();\n+\n+    //! The most-work chain.\n+    CChain& ActiveChain() const;\n+    int ActiveHeight() const { return ActiveChain().Height(); }\n+    CBlockIndex* ActiveTip() const { return ActiveChain().Tip(); }\n+\n+    bool IsSnapshotActive() const;\n+\n+    uint256 SnapshotBlockhash() const { return m_snapshot_blockhash; }\n+\n+    //! Is there a snapshot in use and has it been fully validated?\n+    bool IsSnapshotValidated() const { return m_snapshot_validated; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357719170",
      "id" : 357719170,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcxOTE3MA==",
      "original_commit_id" : "6a629cfd02907162cea4dbef86837ee4c01bf157",
      "original_position" : 103,
      "path" : "src/validation.h",
      "position" : 156,
      "pull_request_review_id" : 331955313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-13T16:31:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357719170",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357721286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357721286"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 6a629cfd02907162ce:\r\n\r\nI wonder if this method needs to happen under some kind of lock. Otherwise there might be a race in validation or net processing where the chainstate is switched down under during a call.",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-13T16:16:07Z",
      "diff_hunk" : "@@ -5116,3 +5116,68 @@ class CMainCleanup\n     }\n };\n static CMainCleanup instance_of_cmaincleanup;\n+\n+std::vector<CChainState*> ChainstateManager::GetAll()\n+{\n+    std::vector<CChainState*> out;\n+\n+    if (!IsSnapshotValidated() && m_ibd_chainstate) {\n+        out.push_back(m_ibd_chainstate.get());\n+    }\n+\n+    if (m_snapshot_chainstate) {\n+        out.push_back(m_snapshot_chainstate.get());\n+    }\n+\n+    return out;\n+}\n+\n+CChainState& ChainstateManager::InitializeChainstate(\n+    bool activate, const uint256& snapshot_blockhash)\n+{\n+    std::unique_ptr<CChainState>& to_modify = (\n+        snapshot_blockhash.IsNull() ? m_ibd_chainstate : m_snapshot_chainstate);\n+\n+    to_modify.reset(new CChainState(snapshot_blockhash));\n+\n+    if (activate) {\n+        LogPrintf(\"Switching active chainstate to %s\\n\", snapshot_blockhash.ToString());\n+        m_active_chainstate = to_modify.get();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357721286",
      "id" : 357721286,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcyMTI4Ng==",
      "original_commit_id" : "6a629cfd02907162cea4dbef86837ee4c01bf157",
      "original_position" : 30,
      "path" : "src/validation.cpp",
      "position" : 255,
      "pull_request_review_id" : 331955313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-13T16:31:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357721286",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357723785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357723785"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 6a629cfd0290716:\r\n\r\nHow and why is this different from `return m_active_chainstate->m_snapshot_blockhash;`?",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-13T16:21:52Z",
      "diff_hunk" : "@@ -757,6 +762,111 @@ bool InvalidateBlock(BlockValidationState& state, const CChainParams& chainparam\n /** Remove invalidity status from a block and its descendants. */\n void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+/**\n+ * Provides an interface for creating and interacting with multiple\n+ * chainstates, as well as a means to initialize chainstates from a\n+ * UTXO snapshot. Managed chainstates can be maintained at different\n+ * heights simultaneously.\n+ *\n+ * This class provides abstractions that allow the retrieval of the current\n+ * most-work chainstate (\"Active\") as well as chainstates which may be in\n+ * background use to validate UTXO snapshots.\n+ *\n+ * A few quick definitions:\n+ *\n+ * *IBD chainstate*: a chainstate populated via initial block download.\n+ *\n+ * *Snapshot chainstate*: a chainstate populated by loading in an\n+ *    assumed-valid UTXO snapshot.\n+ *\n+ * *Active chainstate*: the chainstate containing the current most-work\n+ *    chain. Consulted by most parts of the system (net_processing,\n+ *    wallet) as a reflection of the current chain and UTXO set.\n+ *    This may either be an IBD chainstate or a snapshot chainstate.\n+ *\n+ * *Background validation chainstate*: an IBD chainstate for which the\n+ *    IBD process is happening in the background while use of the\n+ *    active chainstate allows the rest of the system to function.\n+ *\n+ * *Validated chainstate*: a chainstate whose validity is not assumed.\n+ *    This could be an IBD chainstate, or a snapshot chainstate for\n+ *    which background validation (up to the base of the snapshot)\n+ *    has completed.\n+ */\n+class ChainstateManager\n+{\n+private:\n+    //! The chainstate used under normal operation (i.e. \"regular\" IBD) or,\n+    //! if a snapshot is in use, for background validation. Its contents will\n+    //! be freed when background validation of the snapshot has completed.\n+    std::unique_ptr<CChainState> m_ibd_chainstate;\n+\n+    //! A chainstate initialized on the basis of a UTXO snapshot. If this is\n+    //! non-null, it is always our active chainstate unless proven invalid.\n+    std::unique_ptr<CChainState> m_snapshot_chainstate;\n+\n+    //! Points to either the ibd or snapshot chainstate; indicates our\n+    //! most-work chain.\n+    CChainState* m_active_chainstate;\n+\n+    //! The base blockhash of the active UTXO snapshot (if one is being used)\n+    uint256 m_snapshot_blockhash{};\n+\n+    //! If true, the assumed-valid chainstate has been fully validated\n+    //! by the background validation chainstate.\n+    bool m_snapshot_validated{false};\n+\n+    // For access to m_active_chainstate.\n+    friend CChain& ChainActive();\n+\n+public:\n+    //! Instantiate a new chainstate and assign it based upon whether it is\n+    //! from a snapshot.\n+    //!\n+    //! @param[in] activate   If true, make this new chainstate the active one.\n+    //! @param[in] snapshot_blockhash   If given, signify that this chainstate\n+    //!                                 is based on a snapshot.\n+    CChainState& InitializeChainstate(\n+        bool activate = true, const uint256& snapshot_blockhash = uint256());\n+\n+    //! Get all chainstates currently being used.\n+    std::vector<CChainState*> GetAll();\n+\n+    //! The most-work chain.\n+    CChain& ActiveChain() const;\n+    int ActiveHeight() const { return ActiveChain().Height(); }\n+    CBlockIndex* ActiveTip() const { return ActiveChain().Tip(); }\n+\n+    bool IsSnapshotActive() const;\n+\n+    uint256 SnapshotBlockhash() const { return m_snapshot_blockhash; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357723785",
      "id" : 357723785,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcyMzc4NQ==",
      "original_commit_id" : "6a629cfd02907162cea4dbef86837ee4c01bf157",
      "original_position" : 100,
      "path" : "src/validation.h",
      "position" : 153,
      "pull_request_review_id" : 331955313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-13T16:31:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357723785",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357727259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357727259"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 4813167d989c:\r\n\r\nIs this comment no longer relevant?",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-13T16:29:30Z",
      "diff_hunk" : "@@ -1463,8 +1467,7 @@ bool AppInitMain(NodeContext& node)\n             bool is_coinsview_empty;\n             try {\n                 LOCK(cs_main);\n-                // This statement makes ::ChainstateActive() usable.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357727259",
      "id" : 357727259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcyNzI1OQ==",
      "original_commit_id" : "4813167d989c5777eb8b5133dedd93b12e1cc207",
      "original_position" : 32,
      "path" : "src/init.cpp",
      "position" : 32,
      "pull_request_review_id" : 331955313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-13T16:31:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357727259",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357890585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357890585"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree. Same question for other methods.",
      "commit_id" : "23283174f4e6f92c5eee1f7f1f94ceed8405099a",
      "created_at" : "2019-12-14T02:14:57Z",
      "diff_hunk" : "@@ -757,6 +762,111 @@ bool InvalidateBlock(BlockValidationState& state, const CChainParams& chainparam\n /** Remove invalidity status from a block and its descendants. */\n void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+/**\n+ * Provides an interface for creating and interacting with multiple\n+ * chainstates, as well as a means to initialize chainstates from a\n+ * UTXO snapshot. Managed chainstates can be maintained at different\n+ * heights simultaneously.\n+ *\n+ * This class provides abstractions that allow the retrieval of the current\n+ * most-work chainstate (\"Active\") as well as chainstates which may be in\n+ * background use to validate UTXO snapshots.\n+ *\n+ * A few quick definitions:\n+ *\n+ * *IBD chainstate*: a chainstate populated via initial block download.\n+ *\n+ * *Snapshot chainstate*: a chainstate populated by loading in an\n+ *    assumed-valid UTXO snapshot.\n+ *\n+ * *Active chainstate*: the chainstate containing the current most-work\n+ *    chain. Consulted by most parts of the system (net_processing,\n+ *    wallet) as a reflection of the current chain and UTXO set.\n+ *    This may either be an IBD chainstate or a snapshot chainstate.\n+ *\n+ * *Background validation chainstate*: an IBD chainstate for which the\n+ *    IBD process is happening in the background while use of the\n+ *    active chainstate allows the rest of the system to function.\n+ *\n+ * *Validated chainstate*: a chainstate whose validity is not assumed.\n+ *    This could be an IBD chainstate, or a snapshot chainstate for\n+ *    which background validation (up to the base of the snapshot)\n+ *    has completed.\n+ */\n+class ChainstateManager\n+{\n+private:\n+    //! The chainstate used under normal operation (i.e. \"regular\" IBD) or,\n+    //! if a snapshot is in use, for background validation. Its contents will\n+    //! be freed when background validation of the snapshot has completed.\n+    std::unique_ptr<CChainState> m_ibd_chainstate;\n+\n+    //! A chainstate initialized on the basis of a UTXO snapshot. If this is\n+    //! non-null, it is always our active chainstate unless proven invalid.\n+    std::unique_ptr<CChainState> m_snapshot_chainstate;\n+\n+    //! Points to either the ibd or snapshot chainstate; indicates our\n+    //! most-work chain.\n+    CChainState* m_active_chainstate;\n+\n+    //! The base blockhash of the active UTXO snapshot (if one is being used)\n+    uint256 m_snapshot_blockhash{};\n+\n+    //! If true, the assumed-valid chainstate has been fully validated\n+    //! by the background validation chainstate.\n+    bool m_snapshot_validated{false};\n+\n+    // For access to m_active_chainstate.\n+    friend CChain& ChainActive();\n+\n+public:\n+    //! Instantiate a new chainstate and assign it based upon whether it is\n+    //! from a snapshot.\n+    //!\n+    //! @param[in] activate   If true, make this new chainstate the active one.\n+    //! @param[in] snapshot_blockhash   If given, signify that this chainstate\n+    //!                                 is based on a snapshot.\n+    CChainState& InitializeChainstate(\n+        bool activate = true, const uint256& snapshot_blockhash = uint256());\n+\n+    //! Get all chainstates currently being used.\n+    std::vector<CChainState*> GetAll();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17737#discussion_r357890585",
      "id" : 357890585,
      "in_reply_to_id" : 357716948,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Nzg5MDU4NQ==",
      "original_commit_id" : "6a629cfd02907162cea4dbef86837ee4c01bf157",
      "original_position" : 91,
      "path" : "src/validation.h",
      "position" : 139,
      "pull_request_review_id" : 332189983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17737",
      "updated_at" : "2019-12-14T02:14:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357890585",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
