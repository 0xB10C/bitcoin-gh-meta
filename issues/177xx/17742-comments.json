[
   {
      "author_association" : "MEMBER",
      "body" : "As far as we are concerned, this is just a stylistic issue. Even with the fix, anyone with access to the rpc interface can still shut down the node (either by directly calling `stop` or #15017 or #14376 or ...)",
      "created_at" : "2019-12-13T16:45:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17742#issuecomment-565514184",
      "id" : 565514184,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17742",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTUxNDE4NA==",
      "updated_at" : "2019-12-13T16:45:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565514184",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n\r\n> As far as we are concerned, this is just a stylistic issue. \r\n\r\nIt would be silly for me to try to oversell this relatively small issue, but calling it \"just a stylistic issue\" from a Bitcoin Core perspective does not feel like an accurate description TBH :)\r\n\r\n**Point 1. RPC user whitelisting** \r\n\r\nWith the merge of RPC user whitelisting (PR #12763) we now effectively have \"not-as-trusted-as-the-node-operator\" RPC consumers whether we like it or not. Any such not fully trusted RPC consumer can trivially trigger this UniValue bug as demonstrated by the `curl` example above and shut down the node that he or she has been given supposedly locked down RPC access to.\r\n\r\nI don't think that is behaviour that our users expect.\r\n\r\n**Point 2. Partial control over JSON payload when Bitcoin Core is used as a service backend**\r\n\r\nIt sounds like you're assuming that access to the RPC interface is either full access (full control over the entire JSON payload sent to the node) or no access (no control over the JSON payload).\r\n\r\nFrom a \"`bitcoin-tx` perspective\" it is easy to get the impression that access is always binary and that the node operator is the only person being able to control the JSON payload.\r\n\r\nIn practice the RPC is interface is often used as a backend to various services (such as web interfaces, etc.). By interacting with these services an attacker can influence gain **partial** control over the JSON payload sent to the node.\r\n\r\nThis is a typical Bitcoin Core RPC JSON payload:\r\n\r\n```\r\n{\r\n   \"id\" : 1,\r\n   \"params\" : [â¦ some object structure â¦],\r\n   \"method\" : \"method_to_call\"\r\n}\r\n```\r\n\r\nIn a typical RPC-used-from-a-web-application the attacker is probably not being able to influence which method to call (`\"method\" : \"method_to_call\"` in the example above), but it is not unreasonable to assume that he/she may be able to influence at least a subset of the object structure that is sent as parameters to the RPC method (`\"params\" : [â¦ some object structure â¦]`) by legitimate interaction with the service.\r\n\r\nSo while an attacker is likely not be able to change the \"method\" field from say `help` to `stop` it is not unthinkable that he or she might be able to cause some part of the `params` structure to be excessively nested and thus triggering this UniValue issue and shuts down the backend Bitcoin Core node.\r\n\r\nAnd even if such nesting would be an error on the part of the application developer I think the expectation of our users would be that Bitcoin Core should return a parsing error and not die as it currently does :)\r\n\r\nGiven this clarification, can you see why calling this \"just a stylistic issue\" does not feel entirely accurate? :)",
      "created_at" : "2019-12-13T22:27:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17742#issuecomment-565632396",
      "id" : 565632396,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17742",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTYzMjM5Ng==",
      "updated_at" : "2019-12-13T22:29:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565632396",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
