[
   {
      "author_association" : "MEMBER",
      "body" : "Hi @mrbabtc, good question. I could be wrong but I think they are ordered by transaction `timereceived` (which is the same as `time` for sent transactions).\r\n\r\nIt could probably be made a bit more clear, but here is some explanation:\r\n\r\nIn wallet/wallet.cpp::3430 there are details on the timestamp for transactions added to the wallet, and a couple of links. See https://bitcointalk.org/?topic=54527 and https://github.com/bitcoin/bitcoin/pull/1393.\r\n\r\n```c++\r\n/**\r\n * Compute smart timestamp for a transaction being added to the wallet.\r\n *\r\n * Logic:\r\n * - If sending a transaction, assign its timestamp to the current time.\r\n * - If receiving a transaction outside a block, assign its timestamp to the\r\n *   current time.\r\n * - If receiving a block with a future timestamp, assign all its (not already\r\n *   known) transactions' timestamps to the current time.\r\n * - If receiving a block with a past timestamp, before the most recent known\r\n *   transaction (that we care about), assign all its (not already known)\r\n *   transactions' timestamps to the same timestamp as that most-recent-known\r\n *   transaction.\r\n * - If receiving a block with a past timestamp, but after the most recent known\r\n *   transaction, assign all its (not already known) transactions' timestamps to\r\n *   the block time.\r\n *\r\n * For more information see CWalletTx::nTimeSmart,\r\n * https://bitcointalk.org/?topic=54527, or\r\n * https://github.com/bitcoin/bitcoin/pull/1393.\r\n */\r\nunsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\r\n{\r\n    unsigned int nTimeSmart = wtx.nTimeReceived;\r\n    if (!wtx.isUnconfirmed() && !wtx.isAbandoned()) {\r\n        int64_t blocktime;\r\n        if (chain().findBlock(wtx.m_confirm.hashBlock, nullptr /* block */, &blocktime)) {\r\n            int64_t latestNow = wtx.nTimeReceived;\r\n```",
      "created_at" : "2019-12-13T00:31:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17739#issuecomment-565249017",
      "id" : 565249017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17739",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTI0OTAxNw==",
      "updated_at" : "2019-12-13T00:31:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565249017",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
