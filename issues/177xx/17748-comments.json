[
   {
      "author_association" : "MEMBER",
      "body" : "To address the \"messy wallet.dat\" problem, there is an ongoing project called descriptor wallets (https://github.com/bitcoin/bitcoin/projects/12) that will revamp how thing are structured internally. While descriptors (see https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md) are already supported in import, they're still converted at import time to the old wallet.dat structures. With descriptor wallets, the actual description of the addresses/keys in the wallet will be one or a few descriptors, along with some metadata. That's not quite what you're talking about with BIP39-like constructions, but I believe it's a large improvement in minimizing and structuring the amount of state that needs to be safeguarded.\r\n",
      "created_at" : "2019-12-15T09:27:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-565792201",
      "id" : 565792201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTc5MjIwMQ==",
      "updated_at" : "2019-12-15T09:27:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565792201",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As far as mnemonics goes, I think it's very reasonable to have support for converting various kinds to descriptors and importing those once we have descriptor wallets, as that should be very easy and safe at that point.\r\n\r\nIf you're talking about *just* mnemonics there is the complication that there isn't really a watch-only version of them. Wallets should know what to watch (what type of scripts, keys for other multisig participants, possibly policies that degrade over time using locktime, ...) independently of what their own private key is. I expect that that will end up just being descriptors. So I don't know what mnemonics support would look like, and how useful it is, if you still need a separate (but non-secret) description of your wallet.",
      "created_at" : "2019-12-15T09:39:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-565793035",
      "id" : 565793035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTc5MzAzNQ==",
      "updated_at" : "2019-12-15T09:40:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565793035",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I just suggested that, at least, Bitcoin Core should support the *standardized* scheme of BIP39/44/49/84.\r\n\r\nThe user could just simply import the mnemonic, then the first accounts (in use) of three different address types (legacy/p2sh-segwit/bech32) would show up. If the user opened something like \"wallet explorer\" (could be the successor of \" ~~sending/~~ receiving address\" and \"coin selection\" window), there would be a hierarchical view showing that the mnemonic derived everything as \"root\".",
      "created_at" : "2019-12-15T10:40:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-565797306",
      "id" : 565797306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTc5NzMwNg==",
      "updated_at" : "2019-12-15T11:42:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565797306",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@sipa Sorry, I'm not sure whether I have completely understood what you said...\r\n\r\n>To address the \"messy wallet.dat\" problem, there is an ongoing project called descriptor wallets\r\n\r\nWhat you were talking about seemed to be low-level technical things that I'm not able to evaluate.\r\n\r\nI actually suggested that a single wallet.dat could already provide the functions of \"multi-wallet\". I was not quite sure on this, since Bitcoin Core had already supported multi-wallet (loading multiple wallet.dat) feature.\r\n\r\nBesides, what I suggested is far more than \"cleaning up the wallet.dat database\" - I think the current situation that, text labels being the only way to mark/classify addresses/keys/etc, is too primitive, so that we need a more advanced/powerful way to manage them.\r\n\r\n>If you're talking about just mnemonics there is the complication that there isn't really a watch-only version of them. Wallets should know what to watch (what type of scripts, keys for other multisig participants, possibly policies that degrade over time using locktime, ...) independently of what their own private key is.\r\n\r\nTo my understanding, since a BIP39 mnemonic phrase is supposed to be universal, there will never be a \"ultimate\" comprehensive \"description\" of \"what to watch\".\r\n\r\nHowever, the wallet only needs to watch what its user needs to watch.\r\n\r\nFor BIP44/49/84, three xpubs would be enough to cover the simplest situation (only one account was in use).\r\n\r\nHere comes another question: since we already have PSBT that was intended to solve the cross-implementation interoperability problem during transaction signing process, why couldn't we have a similar standard for \"watch-only wallet descrption\"?",
      "created_at" : "2019-12-15T11:49:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-565802257",
      "id" : 565802257,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTgwMjI1Nw==",
      "updated_at" : "2019-12-15T11:49:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565802257",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   }
]
