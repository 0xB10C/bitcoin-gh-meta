[
   {
      "body" : "Do we actually enforce that on Travis? Its nice to have the auto-checker stuff, but AFAIR its (barely) hooked up anywhere?",
      "created_at" : "2017-07-18T20:57:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316195434",
      "id" : 316195434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-18T20:57:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316195434",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt Travis is currently not compiling with [Clang Thread Safety Analysis](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html) warnings (`-Wthread-safety-analysis`) enabled. (Do we want to change that?)\r\n\r\nPersonally I build daily using `clang` with `-Wthread-safety-analysis` enabled.\r\n\r\nIn the general case we want to fix all warnings emitted when compiling with `-Wthread-safety-analysis`, don't we? :-)\r\n\r\n<details>\r\n<summary>Click to expand: Current thread safety warnings</summary>\r\n<pre>\r\nnet_processing.cpp:587:10: warning: reading variable 'vExtraTxnForCompact' requires holding mutex 'cs_main' [-Wthread-safety-analysis]\r\n    if (!vExtraTxnForCompact.size())\r\n         ^\r\nnet_processing.cpp:60:57: note: Guarded_by declared here.\r\nstatic std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUARDED_BY(cs_main);\r\n                                                        ^\r\nnet_processing.cpp:583:1: note: Thread warning in function 'AddToCompactExtraTransactions'\r\n{\r\n^\r\nnet_processing.cpp:588:9: warning: reading variable 'vExtraTxnForCompact' requires holding mutex 'cs_main' [-Wthread-safety-analysis]\r\n        vExtraTxnForCompact.resize(max_extra_txn);\r\n        ^\r\nnet_processing.cpp:60:57: note: Guarded_by declared here.\r\nstatic std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUARDED_BY(cs_main);\r\n                                                        ^\r\nnet_processing.cpp:583:1: note: Thread warning in function 'AddToCompactExtraTransactions'\r\n{\r\n^\r\nnet_processing.cpp:589:5: warning: reading variable 'vExtraTxnForCompact' requires holding mutex 'cs_main' [-Wthread-safety-analysis]\r\n    vExtraTxnForCompact[vExtraTxnForCompactIt] = std::make_pair(tx->GetWitnessHash(), tx);\r\n    ^\r\nnet_processing.cpp:60:57: note: Guarded_by declared here.\r\nstatic std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUARDED_BY(cs_main);\r\n                                                        ^\r\nnet_processing.cpp:583:1: note: Thread warning in function 'AddToCompactExtraTransactions'\r\n{\r\n^\r\n</pre>\r\n</details>",
      "created_at" : "2017-07-18T21:24:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316202564",
      "id" : 316202564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-18T22:02:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316202564",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "If we're going to revive this safety checking infrastructure (it was introduced in #2003, and I don't think updated much since), there are probably many other places to add annotations.",
      "created_at" : "2017-07-19T00:39:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316238630",
      "id" : 316238630,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T00:40:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316238630",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Agree with @sipa.\r\n@practicalswift whats the reason of only add the safety checking infrastructure to `AddToCompactExtraTransactions`?",
      "created_at" : "2017-07-19T09:49:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316332960",
      "id" : 316332960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T09:49:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316332960",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "The reason I'm starting with `AddToCompactExtraTransactions(Ã¢ÂÂ¦)` is simply to fix the only current warning when building with `clang`'s `-Wthread-safety-analysis` enabled:\r\n\r\n```\r\nnet_processing.cpp:587:10: warning: reading variable 'vExtraTxnForCompact' requires holding mutex 'cs_main' [-Wthread-safety-analysis]\r\n```\r\n\r\nThe reason for the warning is that `vExtraTxnForCompact` is marked as guarded by the `cs_main`-mutex:\r\n\r\n```c++\r\nstatic std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact \r\n    GUARDED_BY(cs_main);\r\n```\r\n\r\n`clang` detects that `vExtraTxnForCompact` is accessed in `AddToCompactExtraTransactions(Ã¢ÂÂ¦)` and that this function lacks the `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` annotation that logically should follow from such access (if intentional).\r\n\r\nThis PR fixes that and after applying this PR the code base is free from `-Wthread-safety-analysis` warnings.\r\n\r\nI'd be glad to extend the usage of `GUARDED_BY(Ã¢ÂÂ¦)` annotations (and the corresponding `EXCLUSIVE_LOCKS_REQUIRED(Ã¢ÂÂ¦)` annotations) in the code base, but that is a larger undertaking that probably belongs in a follow-up PR.\r\n\r\nI guess one reason not to fix the current warning is if we for some reason instead would want to remove this thread-safety infrastructure. Let me know if that is the case :-)",
      "created_at" : "2017-07-19T14:50:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316412165",
      "id" : 316412165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T14:52:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316412165",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "Additional reading: The [\"C/C++ Thread Safety Analysis\"](https://research.google.com/pubs/archive/42958.pdf) paper (Hutchins, Ballman & Sutherland, 2014) paper describing `clang` thread-safety analysis and how it is used for the Google C++ codebase:\r\n\r\n> They essentially provide a static type system for threads, and can detect potential race conditions and deadlocks. This paper describes Clang Thread Safety Analysis, a tool which uses annotations to declare and enforce thread safety policies in C and C++ programs.\r\n> [Ã¢ÂÂ¦]\r\n> It has been deployed on a large scale at Google; all C++ code at Google is now compiled with thread safety analysis enabled by default.\r\n> [Ã¢ÂÂ¦]\r\n> The GUARDED_BY attribute declares that a thread must lock `mu` before it can read or write to `balance`, thus ensuring that the increment and decrement operations are atomic. Similarly,\r\nREQUIRES declares that the calling thread must lock mu before calling `withdrawImpl`. Because the caller is assumed to have locked `mu,` it is safe to modify `balance` within the body of the method.",
      "created_at" : "2017-07-19T15:06:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316417209",
      "id" : 316417209,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T15:21:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316417209",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "Ah! Didn't realize its to fix a warning, yea, lets a) do this and b) can you add a -Werror=thread-safety-analysis here, too? I was informed travis already does a clang build for OSX, so it should be able to catch errors here :).",
      "created_at" : "2017-07-19T22:12:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316533985",
      "id" : 316533985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T22:12:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316533985",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt Sure! I've updated the PR title to make things more clear :-)",
      "created_at" : "2017-07-19T22:26:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316537015",
      "id" : 316537015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T22:26:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316537015",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
