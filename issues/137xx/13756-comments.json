[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205107183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205107183"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commit \"test: Add test for avoidreuse feature\"\r\n\r\nUse `subtractfeefromamount=true` below instead?",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-07-25T13:28:00Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the -avoidreuse config option.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_rpc_error\n+from decimal import Decimal\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-avoidreuse=1']]\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance()\n+        if balance > 0.5:\n+            tosend = '%.5f' % (balance - Decimal(0.01))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205107183",
      "id" : 205107183,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTEwNzE4Mw==",
      "original_commit_id" : "cd6e85574eb5c13c6c19b7e79064c039a256e4ef",
      "original_position" : 24,
      "path" : "test/functional/feature_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 140310191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205107183",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IMO could be something like `-avoidaddressreuse`.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-07-25T13:31:04Z",
      "diff_hunk" : "@@ -55,6 +55,7 @@ void WalletInit::AddWalletOptions() const\n {\n     gArgs.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-avoidpartialspends\", strprintf(_(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u)\"), DEFAULT_AVOIDPARTIALSPENDS), false, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-avoidreuse\", \"Mark addresses which have been used to fund transactions in the past, and avoid reusing these in future funding, except when explicitly requested \" + strprintf(_(\"(default: %u)\"), DEFAULT_AVOIDREUSE), false, OptionsCategory::WALLET);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108227",
      "id" : 205108227,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTEwODIyNw==",
      "original_commit_id" : "8bb7905a9e30a8cd9337d19778f7b40c60f29ab4",
      "original_position" : 4,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 140310191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108227",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108432"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108432"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commit \"wallet: add m_allow_dirty_addresses flag to coin control object\"\r\n\r\nCould initialize here?",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-07-25T13:31:38Z",
      "diff_hunk" : "@@ -34,6 +34,8 @@ class CCoinControl\n     boost::optional<bool> m_signal_bip125_rbf;\n     //! Avoid partial use of funds sent to a given address\n     bool m_avoid_partial_spends;\n+    //! Allows inclusion of dirty (previously used) addresses\n+    bool m_allow_dirty_addresses;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108432",
      "id" : 205108432,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTEwODQzMg==",
      "original_commit_id" : "bb8ea84a93191eb7ae8c2097c04de9d632804d19",
      "original_position" : 5,
      "path" : "src/wallet/coincontrol.h",
      "position" : null,
      "pull_request_review_id" : 140310191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108432",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108796"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commit \"wallet: enable avoidreuse feature\"\r\n\r\nWhy is this here? Move up?\r\n\r\nSame in `CWallet::IsDirty` below.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-07-25T13:32:22Z",
      "diff_hunk" : "@@ -922,6 +922,37 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n     return success;\n }\n \n+void CWallet::SetDirtyState(const uint256& hash, unsigned int n, bool dirty)\n+{\n+    const CWalletTx* srctx = GetWalletTx(hash);\n+    if (srctx) {\n+        CTxDestination dst;\n+        if (ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst)) {\n+            AssertLockHeld(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108796",
      "id" : 205108796,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTEwODc5Ng==",
      "original_commit_id" : "f042d92b9e45d692819820fc0d694442416d8823",
      "original_position" : 10,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 140310191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108796",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205109362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205109362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commit \"wallet: enable avoidreuse feature\"\r\n\r\nInstead of nesting, could early return here:\r\n\r\n```cpp\r\nif (!srctx) return;\r\n```\r\n\r\nSame in `CWallet::IsDirty` below.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-07-25T13:33:47Z",
      "diff_hunk" : "@@ -922,6 +922,37 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n     return success;\n }\n \n+void CWallet::SetDirtyState(const uint256& hash, unsigned int n, bool dirty)\n+{\n+    const CWalletTx* srctx = GetWalletTx(hash);\n+    if (srctx) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205109362",
      "id" : 205109362,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTEwOTM2Mg==",
      "original_commit_id" : "f042d92b9e45d692819820fc0d694442416d8823",
      "original_position" : 7,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 140310191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205109362",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205110349"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205110349"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commit \"wallet: enable avoidreuse feature\"\r\n\r\nCould add a `g_allow_dirty_addresses` instead?",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-07-25T13:36:14Z",
      "diff_hunk" : "@@ -1940,6 +1979,7 @@ CAmount CWalletTx::GetImmatureCredit(bool fUseCache) const\n \n CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter) const\n {\n+    bool allow_dirty_addresses = !gArgs.GetBoolArg(\"-avoidreuse\", DEFAULT_AVOIDREUSE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205110349",
      "id" : 205110349,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTExMDM0OQ==",
      "original_commit_id" : "f042d92b9e45d692819820fc0d694442416d8823",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 140310191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205110349",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nNice work!",
      "created_at" : "2018-07-25T15:58:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-407805855",
      "id" : 407805855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwNzgwNTg1NQ==",
      "updated_at" : "2018-07-25T15:58:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407805855",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Perhaps fodder for a separate PR,  but listtransactions and the GUI should get indicators that an incoming payment was dirty when received.  By having that parties that reuse addresses will start getting a frowny-recycle-icon or whatever on their payments, which will increase awareness that their behaviour has downsides.\r\n\r\nEdit: I see I'm repeating myself from an earlier PR. :P",
      "created_at" : "2018-07-25T17:53:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-407840763",
      "id" : 407840763,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwNzg0MDc2Mw==",
      "updated_at" : "2018-07-25T22:08:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407840763",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205365896"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205365896"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Everything is initialized in `SetNull()`. In some cases, you can't initialize in the `.h` file because no `gArgs` available at compile time.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-07-26T08:10:27Z",
      "diff_hunk" : "@@ -34,6 +34,8 @@ class CCoinControl\n     boost::optional<bool> m_signal_bip125_rbf;\n     //! Avoid partial use of funds sent to a given address\n     bool m_avoid_partial_spends;\n+    //! Allows inclusion of dirty (previously used) addresses\n+    bool m_allow_dirty_addresses;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205365896",
      "id" : 205365896,
      "in_reply_to_id" : 205108432,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM2NTg5Ng==",
      "original_commit_id" : "bb8ea84a93191eb7ae8c2097c04de9d632804d19",
      "original_position" : 5,
      "path" : "src/wallet/coincontrol.h",
      "position" : null,
      "pull_request_review_id" : 140619323,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205365896",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205366021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205366021"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This may be artifact from previous iteration. Removing.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-07-26T08:10:57Z",
      "diff_hunk" : "@@ -922,6 +922,37 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n     return success;\n }\n \n+void CWallet::SetDirtyState(const uint256& hash, unsigned int n, bool dirty)\n+{\n+    const CWalletTx* srctx = GetWalletTx(hash);\n+    if (srctx) {\n+        CTxDestination dst;\n+        if (ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst)) {\n+            AssertLockHeld(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205366021",
      "id" : 205366021,
      "in_reply_to_id" : 205108796,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM2NjAyMQ==",
      "original_commit_id" : "f042d92b9e45d692819820fc0d694442416d8823",
      "original_position" : 10,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 140619484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205366021",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205366264"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205366264"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Might be worth it, yeah.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-07-26T08:11:49Z",
      "diff_hunk" : "@@ -1940,6 +1979,7 @@ CAmount CWalletTx::GetImmatureCredit(bool fUseCache) const\n \n CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter) const\n {\n+    bool allow_dirty_addresses = !gArgs.GetBoolArg(\"-avoidreuse\", DEFAULT_AVOIDREUSE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205366264",
      "id" : 205366264,
      "in_reply_to_id" : 205110349,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM2NjI2NA==",
      "original_commit_id" : "f042d92b9e45d692819820fc0d694442416d8823",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 140619751,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205366264",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205371182"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205371182"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fine for `SetDirtyState` but `IsDirty` returns `false` in two cases; (1) `!srctx` and (2) `!ExtractDestination(..)`, so fall-through feels cleaner.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-07-26T08:29:11Z",
      "diff_hunk" : "@@ -922,6 +922,37 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n     return success;\n }\n \n+void CWallet::SetDirtyState(const uint256& hash, unsigned int n, bool dirty)\n+{\n+    const CWalletTx* srctx = GetWalletTx(hash);\n+    if (srctx) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205371182",
      "id" : 205371182,
      "in_reply_to_id" : 205109362,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM3MTE4Mg==",
      "original_commit_id" : "f042d92b9e45d692819820fc0d694442416d8823",
      "original_position" : 7,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 140625576,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205371182",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag \r\n\r\n> Should we also disallow sending to a dirty address? If we don't then those coins can't be spend if the flag is set, or am I missing something?\r\n\r\nYou can always spend them by using the `allowdirty` flag or by manually selecting them using coin control (via `createrawtx` or via the GUI).\r\n\r\nI do think we should at least warn users about that kind of behaviour though, but it feels like a UI fix that can come later.\r\n\r\n@gmaxwell \r\n\r\n> Perhaps fodder for a separate PR, but listtransactions and the GUI should get indicators that an incoming payment was dirty when received. By having that parties that reuse addresses will start getting a frowny-recycle-icon or whatever on their payments, which will increase awareness that their behaviour has downsides.\r\n\r\nI will see about making that the case for the CLI side of things. I think a GUI side fix would be great, but unfortunately I don't seem to be talented at writing QT code. (Practice, I guess.)\r\n\r\n> Edit: I see I'm repeating myself from an earlier PR. :P\r\n\r\nSorry about that. I felt like it was worthwhile to re-PR since the old PR has a lot of outdated talk that is mitigated by #12257.",
      "created_at" : "2018-07-26T08:39:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408022590",
      "id" : 408022590,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODAyMjU5MA==",
      "updated_at" : "2018-07-26T08:39:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408022590",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15596](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15596.html) (rpc: Ignore sendmany::minconf as dummy value by MarcoFalke)\n* [#15487](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15487.html) ([WIP] descriptor based wallet serialization and import by Sjors)\n* [#15064](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15064.html) ([PoC] GUI: Migrate BIP70 merchant info to mapValue[\"to\"] by luke-jr)\n* [#15006](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15006.html) (Add option to create an encrypted wallet by achow101)\n* [#11413](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/11413.html) ([wallet] [rpc] sendtoaddress/sendmany: Add explicit feerate option by kallewoof)\n* [#10615](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10615.html) (RPC: Allow rpcauth configs to specify a 4th parameter naming a specific wallet by luke-jr)\n* [#9381](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9381.html) (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-07-26T09:27:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408036332",
      "id" : 408036332,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODAzNjMzMg==",
      "updated_at" : "2019-03-30T02:12:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408036332",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@gmaxwell:\r\n> the GUI should get indicators that an incoming payment was dirty when received\r\n\r\nI think \"dirty\" is a confusing concept. Maybe add an exclamation mark (or a detective icon) next to the transaction and when the user clicks on that, say something like \"This address has been used before, for privacy reasons it's better to create a new address each time you wish to receive coins, even from the same person\".\r\n\r\nDetective icon is a nice hint that there's privacy related information, but an exclamation mark can also be used to explain other potential problems with an incoming transaction, e.g. if the fee is extremely low.\r\n\r\nA parallel measure, that doesn't involve UI changes, could be for coin selection to not spend from dirty addresses as long as possible. And then try to spend them if there's an exact match (no other outputs, no change), perhaps even only if there's no other exact match, depending on how strongly you want to avoid spending these things.\r\n\r\nWhen the user wants to \"spend all\" funds and the dirty amount is less than x%, a dialog could popup and suggest to \"exclude a small amount for privacy reasons\".\r\n\r\nThis is the kind of behavior that if we want people to use it, should be on by default. That can wait for another PR, but it's useful to think about it a bit when designing the RPC.  `-avoidreuse` doesn't really capture the above. It's too aggressive / binary an option to be useful in a GUI IMO.\r\n\r\nTelling people to manually go into coin selection is not a good idea. If a user receives a non-trivial amount, they expect to be able to just spend it with no additional hoops. That means in the current form it's probably never a user friendly default.",
      "created_at" : "2018-07-26T19:47:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408214120",
      "id" : 408214120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODIxNDEyMA==",
      "updated_at" : "2018-07-26T19:47:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408214120",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Maybe add an exclamation mark\r\n\r\n@Sjors I like that, and then a tooltip/popup could explain the warning.\r\n\r\n> `-avoidreuse` doesn't really capture the above. It's too aggressive / binary an option to be useful in a GUI IMO.\r\n\r\n\"Avoid\" is not binary right?",
      "created_at" : "2018-07-26T19:58:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408217092",
      "id" : 408217092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODIxNzA5Mg==",
      "updated_at" : "2018-07-26T19:58:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408217092",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think \"dirty\" is a confusing concept.\r\n\r\nIt's called \"dirty\" in the CLI as well, but there's also a different concept in the wallet code called 'dirty' which is completely unrelated. In short, it may be a good idea to rename this feature, but I can't think of a good name. \"Compromised\" is too long. \"Seen\" is too vague. @luke-jr any ideas?\r\n\r\n> Detective icon is a nice hint that there's privacy related information, but an exclamation mark can also be used to explain other potential problems with an incoming transaction, e.g. if the fee is extremely low.\r\n\r\nI like \"!\" too. If it is used for multiple things, it could take away from the importance though (e.g. user ignores it thinking it's 'just cause of the 1 sat/b fee').\r\n\r\nAs a sidenote, we also should mark UTXOs in coin selection dialog somehow. Same approach? Maybe need to include a warning popup if they mix dirty and clean.\r\n\r\n> A parallel measure, that doesn't involve UI changes, could be for coin selection to not spend from dirty addresses as long as possible. And then try to spend them if there's an exact match (no other outputs, no change), perhaps even only if there's no other exact match, depending on how strongly you want to avoid spending these things.\r\n\r\nI don't know, I think we should always avoid dirty inputs unless the user explicitly marks them as 'clean' or picks them directly using manual coin control.\r\n\r\n> When the user wants to \"spend all\" funds and the dirty amount is less than x%, a dialog could popup and suggest to \"exclude a small amount for privacy reasons\".\r\n\r\nI didn't think about this case, and it's probably fairly common. Then again, I don't think I can do a lot from the CLI side, so this is probably GUI level stuff.\r\n\r\n> This is the kind of behavior that if we want people to use it, should be on by default. That can wait for another PR, but it's useful to think about it a bit when designing the RPC. -avoidreuse doesn't really capture the above. It's too aggressive / binary an option to be useful in a GUI IMO.\r\n\r\nWhat about it is too aggressive?\r\n\r\n> Telling people to manually go into coin selection is not a good idea. If a user receives a non-trivial amount, they expect to be able to just spend it with no additional hoops. That means in the current form it's probably never a user friendly default.\r\n\r\nMaybe it should be sensitive to the amount. A good middle ground may be to, for any input that is X times higher than current dust threshold, that goes to an already spent-from address, to show the user a dialog saying the input is dirty and ask them whether to force-mark it as clean or keep it as dirty.\r\n",
      "created_at" : "2018-07-27T02:15:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408290580",
      "id" : 408290580,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODI5MDU4MA==",
      "updated_at" : "2018-07-27T02:15:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408290580",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> What about it is too aggressive?\r\n\r\nA user might receive their entire salary on a reused address. If the current implementation of `-avoidreuse=1` were to become the default, then the UI would need to honor that setting. That means at minimum asking the user for confirmation when they're about to spend these funds. But that would be a very unintuitive question. The Spend screen is not the right place to handle this. Warning the user when they receive such funds is more appropriate.\r\n\r\nThis is where the threshold comes in, but I think it's non-trivial to figure out what the right threshold is, and it might be game-able.\r\n\r\nPerhaps the ! / detective icon in the transaction view could offer the user a choice to manually quarantine funds. Something like \"If you did not expect this transaction someone may be spying on you, waiting for you to spend the coins. Would you like to quarantine them?\"\r\n\r\nYou could even quarantine funds by default based on some heuristic as long as the UI makes that very clear and it's easy for a user to unquarantine it (similar to firewall and anti-virus popups). But maybe try the opt-in quarantine approach first.\r\n\r\nSo then there's `dirty` with a subset of `quarantined`. `-avoidreuse=1` could e.g. not spend `quarantined` without an override, give other `dirty` coins special treatment, but still spend them if needed. That way the setting can be made a default in a future version, in way that the GUI can honor it.\r\n\r\nDepending on what ends up happening, the documentation should perhaps point out that the GUI ignores this setting. Alternatively (for the current implementation) dirty coins could be hidden in the GUI, not shown in coin selection and not used when spending all, when this setting is enabled. Both options require a warning, and neither seems ideal, but updating the GUI in a more sophisticated way is pretty time consuming. ",
      "created_at" : "2018-07-27T09:45:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408369264",
      "id" : 408369264,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODM2OTI2NA==",
      "updated_at" : "2018-07-27T09:47:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408369264",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors That makes sense to me. It seems like adding this default off (as is the current proposal) makes the most sense.\r\n\r\nGUI work seems like it will be a good deal of work to get right, but in the meantime, there are real (advanced) users who would benefit from having this feature now, even without the GUI/intuitive component.",
      "created_at" : "2018-07-28T03:00:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408578113",
      "id" : 408578113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODU3ODExMw==",
      "updated_at" : "2018-07-28T03:00:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408578113",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "N.B. This doesn't actually fully solve #10065, since transactions received with a dirty address are still shown in the GUI / RPC.",
      "created_at" : "2018-07-29T22:02:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408709347",
      "id" : 408709347,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODcwOTM0Nw==",
      "updated_at" : "2018-07-29T22:02:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408709347",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(as for a term... \"reused\" perhaps? I don't know that this flag should be exposed as-is, but more like a \"will never confirm until spent\" status)",
      "created_at" : "2018-07-29T22:05:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408709493",
      "id" : 408709493,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODcwOTQ5Mw==",
      "updated_at" : "2018-07-29T22:05:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408709493",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think \"reused\" is a bit vague, and doesn't convey the fact it's considered a thing to be avoided if possible, in the way that \"dirty\" does.",
      "created_at" : "2018-07-30T04:20:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408742497",
      "id" : 408742497,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODc0MjQ5Nw==",
      "updated_at" : "2018-07-30T04:20:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408742497",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Note: I realized the test was invalid, as `getbalance` would return only clean amount, so I added support to `getbalance` and fixed the tests.",
      "created_at" : "2018-07-30T06:20:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408758746",
      "id" : 408758746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODc1ODc0Ng==",
      "updated_at" : "2018-07-30T06:20:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408758746",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~~~There is an alternative #13801 to this PR, which replaces the `dirty=true/false` flag with a `dest_filter=mixed/clean/dirty` filter. I will close one of these based on feedback on which one people prefer.~~~",
      "created_at" : "2018-07-30T08:33:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408788407",
      "id" : 408788407,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODc4ODQwNw==",
      "updated_at" : "2018-08-02T04:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408788407",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It feels to me that this should be a persistent per-wallet setting, rather than a global config option (I think we should be eliminating the global wallet config options wherever possible. See #13044)",
      "created_at" : "2018-07-30T16:33:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408927041",
      "id" : 408927041,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODkyNzA0MQ==",
      "updated_at" : "2018-07-30T16:33:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408927041",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I thought that was a PR @jonasschnelli was working on that wasn't merged yet (the no private keys one), but I could be mistaken. Either way, makes sense to make it persistent-per-wallet.",
      "created_at" : "2018-07-30T20:23:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408997556",
      "id" : 408997556,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODk5NzU1Ng==",
      "updated_at" : "2018-07-30T20:23:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408997556",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> a PR @jonasschnelli was working on that wasn't merged yet (the no private keys one)\r\n\r\n#9662 - merged!",
      "created_at" : "2018-07-30T21:13:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-409012354",
      "id" : 409012354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwOTAxMjM1NA==",
      "updated_at" : "2018-07-30T21:13:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409012354",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Cool! I was trying to find that one.",
      "created_at" : "2018-07-30T21:14:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-409012769",
      "id" : 409012769,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwOTAxMjc2OQ==",
      "updated_at" : "2018-07-30T21:14:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409012769",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "After @gmaxwell comment [here](https://github.com/bitcoin/bitcoin/pull/13801#issuecomment-409262305), the new funding approach would work as follows:\r\n\r\n1. Create output groups of all dirty coins\r\n2. See if any of them fulfil the desired payment amount including fees up to maybe 3x the amount, and return that group if found. MARK CHANGE AS DIRTY\r\n3. Try coin select using only clean coins\r\n\r\nIf user used `-allowdirty` flag, it would simplify to\r\n\r\n1. Try coin select using all coins. (MARK CHANGE AS DIRTY IF 1+ DIRTY COINS WERE USED)\r\n\r\nCurrently the code does step 3 of the first case and partially step 1 of the `-allowdirty` case, but does not mark change as dirty. So:\r\n\r\n* [x] Switch to using persistent per-wallet mode\r\n* [ ] Add check to see if dirty output groups would satisfy payment and use that if so\r\n* [x] Mark change outputs with 1+ dirty coins as their origin as also dirty\r\n",
      "created_at" : "2018-08-02T04:55:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-409805448",
      "id" : 409805448,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwOTgwNTQ0OA==",
      "updated_at" : "2018-08-03T08:18:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409805448",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Code is now using the wallet flag feature. The `-avoidreuse` flag now determines the default value for new wallets instead. (Also ping @jonasschnelli regarding wallet flag stuff.)",
      "created_at" : "2018-08-03T06:57:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-410163272",
      "id" : 410163272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMDE2MzI3Mg==",
      "updated_at" : "2018-08-03T06:57:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/410163272",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r214523103"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523103"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Typo found by `codespell`: useable",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-01T21:10:33Z",
      "diff_hunk" : "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoidreuse feature.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-avoidreuse=1']]\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the -avoidreuse flag.\n+        '''\n+        # TODO: Using -avoidreuse as startup option SHOULD cause the wallet to\n+        # TODO: have the avoidreuse flag set already, but this is not the case\n+        # Configure node 1 to use avoidreuse\n+        self.nodes[1].setwalletflag('avoidreuse')\n+\n+        # Flags should be node1.avoidreuse=false, node2.avoidreuse=true\n+        assert_equal(self.nodes[0].getwalletflags('avoidreuse'), False)\n+        assert_equal(self.nodes[1].getwalletflags('avoidreuse'), True)\n+\n+        # Stop and restart node 1 without -avoidreuse flag\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoidreuse=false, node2.avoidreuse=true\n+        assert_equal(self.nodes[0].getwalletflags('avoidreuse'), False)\n+        assert_equal(self.nodes[1].getwalletflags('avoidreuse'), True)\n+\n+    def test_fund_send_fund_send(self):\n+        '''\n+        Test the simple case where [1] generates a new address A, then\n+        [0] sends 10 BTC to A.\n+        [1] spends 5 BTC from A. (leaving roughly 4 BTC useable)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r214523103",
      "id" : 214523103,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUyMzEwMw==",
      "original_commit_id" : "483482b35d3cf917eec5439c957b1aecdf776dd3",
      "original_position" : 76,
      "path" : "test/functional/feature_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 151603454,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523103",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216177810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216177810"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Usable can also be spelled useable, with an e in the middle: both are correct.\r\n\r\nhttps://english.stackexchange.com/questions/69709/is-useable-preferred-in-certain-regions-or-just-an-alternate-spelling-of-usa",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-10T00:49:40Z",
      "diff_hunk" : "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoidreuse feature.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-avoidreuse=1']]\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the -avoidreuse flag.\n+        '''\n+        # TODO: Using -avoidreuse as startup option SHOULD cause the wallet to\n+        # TODO: have the avoidreuse flag set already, but this is not the case\n+        # Configure node 1 to use avoidreuse\n+        self.nodes[1].setwalletflag('avoidreuse')\n+\n+        # Flags should be node1.avoidreuse=false, node2.avoidreuse=true\n+        assert_equal(self.nodes[0].getwalletflags('avoidreuse'), False)\n+        assert_equal(self.nodes[1].getwalletflags('avoidreuse'), True)\n+\n+        # Stop and restart node 1 without -avoidreuse flag\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoidreuse=false, node2.avoidreuse=true\n+        assert_equal(self.nodes[0].getwalletflags('avoidreuse'), False)\n+        assert_equal(self.nodes[1].getwalletflags('avoidreuse'), True)\n+\n+    def test_fund_send_fund_send(self):\n+        '''\n+        Test the simple case where [1] generates a new address A, then\n+        [0] sends 10 BTC to A.\n+        [1] spends 5 BTC from A. (leaving roughly 4 BTC useable)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216177810",
      "id" : 216177810,
      "in_reply_to_id" : 214523103,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjE3NzgxMA==",
      "original_commit_id" : "483482b35d3cf917eec5439c957b1aecdf776dd3",
      "original_position" : 76,
      "path" : "test/functional/feature_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 153601246,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216177810",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216448479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216448479"
         }
      },
      "author_association" : "MEMBER",
      "body" : "My personal preference would be to remove this command line argument, since it's possible to create a wallet with this flag using the `createwallet` RPC, or update an existing wallet's flag with `setwalletflag`. I think it's better to remove it from here because:\r\n- it's better to have one way to do things\r\n- in general, I think we should be aiming to reduce the number of command line arguments, especially in the wallet (see https://github.com/bitcoin/bitcoin/issues/13044)",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-10T19:43:24Z",
      "diff_hunk" : "@@ -55,6 +55,7 @@ void WalletInit::AddWalletOptions() const\n {\n     gArgs.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-avoidpartialspends\", strprintf(_(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u)\"), DEFAULT_AVOIDPARTIALSPENDS), false, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-avoidreuse\", \"Enable the 'avoid reuse' flag for new wallets created. When enabled, wallets will mark addresses which have been used to fund transactions in the past, and avoid reusing these in future funding, except when explicitly requested \" + strprintf(_(\"(default: %u)\"), DEFAULT_AVOIDREUSE), false, OptionsCategory::WALLET);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216448479",
      "id" : 216448479,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ0ODQ3OQ==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 4,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 153932244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216448479",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216448707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216448707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd prefer to remove this, and make the flag settable through the `createwallet` and `setwalletflag` options (see how `WALLET_FLAG_DISABLE_PRIVATE_KEYS` is set)",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-10T19:44:16Z",
      "diff_hunk" : "@@ -227,8 +228,11 @@ bool WalletInit::Open() const\n         return true;\n     }\n \n+    uint64_t wallet_creation_flags =",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216448707",
      "id" : 216448707,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ0ODcwNw==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 12,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 153932244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216448707",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449453"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this change should be in the _wallet/rpc: add allow_dirty option to sendtoaddress_ commit (not the _wallet/rpc: add include_dirty flag to getbalance command_ commit)",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-10T19:46:58Z",
      "diff_hunk" : "@@ -292,7 +292,7 @@ static UniValue setlabel(const JSONRPCRequest& request)\n \n static CTransactionRef SendMoney(CWallet * const pwallet, const CTxDestination &address, CAmount nValue, bool fSubtractFeeFromAmount, const CCoinControl& coin_control, mapValue_t mapValue)\n {\n-    CAmount curBalance = pwallet->GetBalance();\n+    CAmount curBalance = pwallet->GetBalance(ISMINE_SPENDABLE, 0, coin_control.m_allow_dirty_addresses);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449453",
      "id" : 216449453,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ0OTQ1Mw==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 5,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 153932244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449453",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can we define these in `wallet.h`, so there's only one place to change when adding wallet flags?",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-10T19:47:30Z",
      "diff_hunk" : "@@ -2540,15 +2554,113 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static std::map<std::string,WalletFlags> walletflagmap{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449629",
      "id" : 216449629,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ0OTYyOQ==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 102,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 153932244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449629",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449835"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449835"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd prefer not to add this new method. Can we just add a `wallet_flags` field to the `getwalletinfo` return object?",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-10T19:48:15Z",
      "diff_hunk" : "@@ -2540,15 +2554,113 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static std::map<std::string,WalletFlags> walletflagmap{\n+    {\"avoidreuse\", WALLET_FLAG_AVOIDREUSE},\n+    {\"disable_private_keys\", WALLET_FLAG_DISABLE_PRIVATE_KEYS},\n+};\n+\n+static UniValue getwalletflags(const JSONRPCRequest& request)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449835",
      "id" : 216449835,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ0OTgzNQ==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 107,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 153932244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449835",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216450254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216450254"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this is always necessarily going to be true. The meaning of the upper section/lower section flags are which we can safely ignore if we don't know the meaning of (ie if we open a newer wallet on an older client), not whether the flags are mutable or not.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-10T19:49:45Z",
      "diff_hunk" : "@@ -2540,15 +2554,113 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static std::map<std::string,WalletFlags> walletflagmap{\n+    {\"avoidreuse\", WALLET_FLAG_AVOIDREUSE},\n+    {\"disable_private_keys\", WALLET_FLAG_DISABLE_PRIVATE_KEYS},\n+};\n+\n+static UniValue getwalletflags(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"getwalletflags ( flag )\\n\"\n+            \"\\nReturn the state of the (given) wallet flag(s) for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, optional) The name of the flag. Current available flags: \" + flags + \"\\n\"\n+            \"\\nResult (default):\\n\"\n+            \"{\\n\"\n+            \"  \\\"flagname\\\": true|false,  (string:bool pair) the name of the flag and its state\"\n+            \"}\\n\"\n+            \"\\nResult (flag=XXX)\\n\"\n+            \"true|false                 (bool) the state of the given flag\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getwalletflags\", \"\")\n+            + HelpExampleRpc(\"getwalletflag\", \"\")\n+        );\n+    }\n+\n+    if (request.params[0].isNull()) {\n+        UniValue res(UniValue::VOBJ);\n+        for (const auto& it : walletflagmap) {\n+            res.pushKV(it.first, pwallet->IsWalletFlagSet(it.second));\n+        }\n+\n+        return res;\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    return pwallet->IsWalletFlagSet(walletflagmap.at(flag));\n+}\n+\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoidreuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoidreuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (walletflagmap.at(flag) >= (1ULL << 32)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216450254",
      "id" : 216450254,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ1MDI1NA==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 187,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 153932244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216450254",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216451827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216451827"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be `wallet_avoidreuse.py`",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-10T19:54:48Z",
      "diff_hunk" : "@@ -94,6 +94,7 @@\n     'rpc_getchaintips.py',\n     'interface_rest.py',\n     'mempool_spend_coinbase.py',\n+    'feature_avoidreuse.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216451827",
      "id" : 216451827,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ1MTgyNw==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 4,
      "path" : "test/functional/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 153932244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216451827",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564497"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564497"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense. And resolves one TODO (the startup option is ignored for \"fresh\" nodes in the test framework).",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-11T07:07:09Z",
      "diff_hunk" : "@@ -55,6 +55,7 @@ void WalletInit::AddWalletOptions() const\n {\n     gArgs.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-avoidpartialspends\", strprintf(_(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u)\"), DEFAULT_AVOIDPARTIALSPENDS), false, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-avoidreuse\", \"Enable the 'avoid reuse' flag for new wallets created. When enabled, wallets will mark addresses which have been used to fund transactions in the past, and avoid reusing these in future funding, except when explicitly requested \" + strprintf(_(\"(default: %u)\"), DEFAULT_AVOIDREUSE), false, OptionsCategory::WALLET);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564497",
      "id" : 216564497,
      "in_reply_to_id" : 216448479,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU2NDQ5Nw==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 4,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 154072713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564497",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564636"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Above change resulted in its removal.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-11T07:07:54Z",
      "diff_hunk" : "@@ -227,8 +228,11 @@ bool WalletInit::Open() const\n         return true;\n     }\n \n+    uint64_t wallet_creation_flags =",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564636",
      "id" : 216564636,
      "in_reply_to_id" : 216448707,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU2NDYzNg==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 12,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 154072892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564636",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564670"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, yep. Thanks.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-11T07:08:03Z",
      "diff_hunk" : "@@ -292,7 +292,7 @@ static UniValue setlabel(const JSONRPCRequest& request)\n \n static CTransactionRef SendMoney(CWallet * const pwallet, const CTxDestination &address, CAmount nValue, bool fSubtractFeeFromAmount, const CCoinControl& coin_control, mapValue_t mapValue)\n {\n-    CAmount curBalance = pwallet->GetBalance();\n+    CAmount curBalance = pwallet->GetBalance(ISMINE_SPENDABLE, 0, coin_control.m_allow_dirty_addresses);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564670",
      "id" : 216564670,
      "in_reply_to_id" : 216449453,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU2NDY3MA==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 5,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154072935,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564670",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216565279"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216565279"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ahh. Got it.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-11T07:11:02Z",
      "diff_hunk" : "@@ -2540,15 +2554,113 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static std::map<std::string,WalletFlags> walletflagmap{\n+    {\"avoidreuse\", WALLET_FLAG_AVOIDREUSE},\n+    {\"disable_private_keys\", WALLET_FLAG_DISABLE_PRIVATE_KEYS},\n+};\n+\n+static UniValue getwalletflags(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"getwalletflags ( flag )\\n\"\n+            \"\\nReturn the state of the (given) wallet flag(s) for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, optional) The name of the flag. Current available flags: \" + flags + \"\\n\"\n+            \"\\nResult (default):\\n\"\n+            \"{\\n\"\n+            \"  \\\"flagname\\\": true|false,  (string:bool pair) the name of the flag and its state\"\n+            \"}\\n\"\n+            \"\\nResult (flag=XXX)\\n\"\n+            \"true|false                 (bool) the state of the given flag\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getwalletflags\", \"\")\n+            + HelpExampleRpc(\"getwalletflag\", \"\")\n+        );\n+    }\n+\n+    if (request.params[0].isNull()) {\n+        UniValue res(UniValue::VOBJ);\n+        for (const auto& it : walletflagmap) {\n+            res.pushKV(it.first, pwallet->IsWalletFlagSet(it.second));\n+        }\n+\n+        return res;\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    return pwallet->IsWalletFlagSet(walletflagmap.at(flag));\n+}\n+\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoidreuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoidreuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (walletflagmap.at(flag) >= (1ULL << 32)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216565279",
      "id" : 216565279,
      "in_reply_to_id" : 216450254,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU2NTI3OQ==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 187,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154073660,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216565279",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216565622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216565622"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removing it. There's already a \"private_keys_enabled\" and \"avoid_reuse\" entry in the returned value, so I don't think a wallet_flags is even necessary.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-11T07:12:19Z",
      "diff_hunk" : "@@ -2540,15 +2554,113 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static std::map<std::string,WalletFlags> walletflagmap{\n+    {\"avoidreuse\", WALLET_FLAG_AVOIDREUSE},\n+    {\"disable_private_keys\", WALLET_FLAG_DISABLE_PRIVATE_KEYS},\n+};\n+\n+static UniValue getwalletflags(const JSONRPCRequest& request)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216565622",
      "id" : 216565622,
      "in_reply_to_id" : 216449835,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU2NTYyMg==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 107,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154073996,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216565622",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216572474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216572474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Renamed",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-11T07:40:06Z",
      "diff_hunk" : "@@ -94,6 +94,7 @@\n     'rpc_getchaintips.py',\n     'interface_rest.py',\n     'mempool_spend_coinbase.py',\n+    'feature_avoidreuse.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216572474",
      "id" : 216572474,
      "in_reply_to_id" : 216451827,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU3MjQ3NA==",
      "original_commit_id" : "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
      "original_position" : 4,
      "path" : "test/functional/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 154082243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216572474",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Thanks for review! I believe I've addressed all your nits.",
      "created_at" : "2018-09-11T08:12:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-420186910",
      "id" : 420186910,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMDE4NjkxMA==",
      "updated_at" : "2018-09-11T08:12:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420186910",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217068348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217068348"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`flags` -> `flag` is a good name change, since `SetWalletFlag()` suggests this function should only be used to change a single flag.\r\n\r\nHowever, note that there's nothing in this function to enforce that. This doesn't necessarily need to go in your PR, but we could be more defensive by adding something like:\r\n\r\n```\r\nif (^flag || (flag & (flag-1)) {\r\n    # flag has no bits set or more than one bit set\r\n    throw ... \r\n}\r\n```",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T15:00:01Z",
      "diff_hunk" : "@@ -1415,15 +1452,15 @@ bool CWallet::IsHDEnabled() const\n     return !hdChain.seed_id.IsNull();\n }\n \n-void CWallet::SetWalletFlag(uint64_t flags)\n+void CWallet::SetWalletFlag(uint64_t flag, bool value)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217068348",
      "id" : 217068348,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA2ODM0OA==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 56,
      "path" : "src/wallet/wallet.cpp",
      "position" : 73,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217068348",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217072205"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217072205"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: this is a constant, so naming convention says this should be `WALLET_FLAG_MAP`.\r\n\r\n(`g_known_wallet_flags` above should also be `KNOWN_WALLET_FLAG`. Perhaps that should be changed as part of this PR?)",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T15:09:23Z",
      "diff_hunk" : "@@ -104,11 +104,22 @@ enum WalletFlags : uint64_t {\n     // wallet flags in the upper section (> 1 << 31) will lead to not opening the wallet if flag is unknown\n     // unknown wallet flags in the lower section <= (1 << 31) will be tolerated\n \n+    // will categorize coins as clean (not reused) and dirty (reused), and handle\n+    // them with privacy considerations in mind\n+    WALLET_FLAG_AVOIDREUSE = (1ULL << 0),\n+\n     // will enforce the rule that the wallet can't contain any private keys (only watch-only/pubkeys)\n     WALLET_FLAG_DISABLE_PRIVATE_KEYS = (1ULL << 32),\n };\n \n-static constexpr uint64_t g_known_wallet_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+static constexpr uint64_t g_known_wallet_flags =\n+        WALLET_FLAG_AVOIDREUSE\n+    |   WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+\n+static const std::map<std::string,WalletFlags> walletflagmap{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217072205",
      "id" : 217072205,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA3MjIwNQ==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 17,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217072205",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217076698"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217076698"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(same comment goes for all \"dirty\" text in RPC help/interface)\r\n\r\nAre we sure we want to introduce the new terminology \"dirty\" into the public-facing API? To me, \"dirty\" doesn't seem intuitive for users. I can imagine lots of users thinking \"why are these coins that I have dirty?\", \"Has someone sent me dirty coins?\", etc.\r\n\r\nIs it possible to describe these concepts using the word 'reused' or something that conveys the meaning more clearly to users?",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T15:20:40Z",
      "diff_hunk" : "@@ -339,9 +339,10 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 2 || request.params.size() > 8)\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 9)\n         throw std::runtime_error(\n-            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\")\\n\"\n+            std::string() +\n+            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\" allow_dirty )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217076698",
      "id" : 217076698,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA3NjY5OA==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 18,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217076698",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217077402"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217077402"
         }
      },
      "author_association" : "MEMBER",
      "body" : "naming mismatch: you've called it \"value\" here, but \"state\" in the RPC table. I slightly prefer \"value\", but either is fine.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T15:22:23Z",
      "diff_hunk" : "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217077402",
      "id" : 217077402,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA3NzQwMg==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 119,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217077402",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217080283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217080283"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure whether this is the most useful return object. The user wants to know whether the flag has been set or not, not whether the flag was updated or not (they're interested in the final state, not whether it changed).\r\n\r\nWould returning an array of flags set or the result of `getwalletinfo` be more helpful?\r\n\r\n(just a suggestion - I'm not sure what the best approach is here)",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T15:29:31Z",
      "diff_hunk" : "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217080283",
      "id" : 217080283,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA4MDI4Mw==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 121,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217080283",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217081465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217081465"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This early exit prevents the user from being able to unset a flag. If the flag is already set, we'll exit before trying to unset it.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T15:32:22Z",
      "diff_hunk" : "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217081465",
      "id" : 217081465,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA4MTQ2NQ==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 135,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217081465",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217082371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217082371"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It should **not** be possible to update the `disable_private_keys` flag after the wallet has been created (because by that time, there are already private keys in the wallet)",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T15:34:33Z",
      "diff_hunk" : "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;\n+\n+    pwallet->SetWalletFlag(walletflagmap.at(flag), value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217082371",
      "id" : 217082371,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA4MjM3MQ==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 137,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217082371",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217083108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217083108"
         }
      },
      "author_association" : "MEMBER",
      "body" : "naming convention: mamber variable names should be prefixed `m_`",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T15:36:27Z",
      "diff_hunk" : "@@ -354,6 +365,8 @@ class CWalletTx : public CMerkleTx\n     mutable bool fAvailableWatchCreditCached;\n     mutable bool fChangeCached;\n     mutable bool fInMempool;\n+    mutable bool available_dirty_credit_cached;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217083108",
      "id" : 217083108,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA4MzEwOA==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 28,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217083108",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217090455"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217090455"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't understand why this `std::string() +` is required",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T15:55:03Z",
      "diff_hunk" : "@@ -339,9 +339,10 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 2 || request.params.size() > 8)\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 9)\n         throw std::runtime_error(\n-            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\")\\n\"\n+            std::string() +",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217090455",
      "id" : 217090455,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA5MDQ1NQ==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 17,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217090455",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217091345"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217091345"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do you need to stop-start the node here? Can you just `unloadwallet` then `reloadwallet`?",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T15:57:25Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse feature.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217091345",
      "id" : 217091345,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA5MTM0NQ==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 61,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : 65,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217091345",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217092655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217092655"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this is sufficient for enabling 'avoid_reuse'. Consider:\r\n\r\n- wallet is created without the `avoid_reuse` flag\r\n- wallet sends from address\r\n- wallet receives new coins to used address. These are NOT marked as dirty because the `avoid_reuse` flag is not set\r\n- `avoid_reuse` is enabled with the `setwalletflag` RPC\r\n- `getbalance`, `sendtoaddress`, etc will all use the reused address coins because they're not set as dirty.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T16:00:57Z",
      "diff_hunk" : "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;\n+\n+    pwallet->SetWalletFlag(walletflagmap.at(flag), value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217092655",
      "id" : 217092655,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA5MjY1NQ==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 137,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217092655",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217092893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217092893"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It'd be nice if this tested the `setwalletflag` RPC too.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-12T16:01:33Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse feature.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217092893",
      "id" : 217092893,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA5Mjg5Mw==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 5,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 154694453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217092893",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257099"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257099"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The reason why we've stuck with dirty so far is because of the negative connotation. Note that a coin only becomes dirty if\r\n\r\n* you received to an address\r\n* you spent everything from that address\r\n* you received to the same address afterwards\r\n\r\nImagine walking through mud on the way home. As you go inside, you leave a trail behind on the walkway up to and to the inside of your house, even if you prudently take the shoes off at the entrance.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-13T04:28:31Z",
      "diff_hunk" : "@@ -339,9 +339,10 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 2 || request.params.size() > 8)\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 9)\n         throw std::runtime_error(\n-            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\")\\n\"\n+            std::string() +\n+            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\" allow_dirty )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257099",
      "id" : 217257099,
      "in_reply_to_id" : 217076698,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI1NzA5OQ==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 18,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154925035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257099",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257208"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257208"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, thanks! Fixed.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-13T04:29:47Z",
      "diff_hunk" : "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257208",
      "id" : 217257208,
      "in_reply_to_id" : 217077402,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI1NzIwOA==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 119,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154925186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257208",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257442"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think being told that your action did nothing vs your action did something is a good UI, personally.\r\n\r\nPerhaps it should actually *throw* instead of returning false, though...",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-13T04:31:57Z",
      "diff_hunk" : "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257442",
      "id" : 217257442,
      "in_reply_to_id" : 217080283,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI1NzQ0Mg==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 121,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154925476,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257442",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257479"
         }
      },
      "author_association" : "MEMBER",
      "body" : "D'oh, thanks. Fixed.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-13T04:32:22Z",
      "diff_hunk" : "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257479",
      "id" : 217257479,
      "in_reply_to_id" : 217081465,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI1NzQ3OQ==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 135,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154925525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257479",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217258020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217258020"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should it be possible to *disable* it?",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-13T04:37:30Z",
      "diff_hunk" : "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;\n+\n+    pwallet->SetWalletFlag(walletflagmap.at(flag), value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217258020",
      "id" : 217258020,
      "in_reply_to_id" : 217082371,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI1ODAyMA==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 137,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154926144,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217258020",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217260847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217260847"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I kind of want the node to go down completely so we don't get some weird case where a flag persists when reloading wallet but not when restarting node. Even if that sounds like an impossibility.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-13T05:03:41Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse feature.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217260847",
      "id" : 217260847,
      "in_reply_to_id" : 217091345,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI2MDg0Nw==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 61,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : 65,
      "pull_request_review_id" : 154929360,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217260847",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217261001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217261001"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right ... the idea is that the user has to actually call 'rescan' for it to become retroactive. This was explained when this was a command line option, I think, but the explanation vanished with the change to remove the option. Not sure where would be a good place to explain this. Perhaps there should be a 'caveats' map for flags which are returned when setting flags?",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-13T05:05:30Z",
      "diff_hunk" : "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;\n+\n+    pwallet->SetWalletFlag(walletflagmap.at(flag), value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217261001",
      "id" : 217261001,
      "in_reply_to_id" : 217092655,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI2MTAwMQ==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 137,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 154929553,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217261001",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217261098"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217261098"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It sort of does, actually. I assumed there were tests elsewhere, but apparently not. I will add complementary tests for setwalletflag.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-13T05:06:42Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse feature.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217261098",
      "id" : 217261098,
      "in_reply_to_id" : 217092893,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI2MTA5OA==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 5,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 154929688,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217261098",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Thanks a lot for all the feedback. I have addressed most of your nits (a few remain up in the air).",
      "created_at" : "2018-09-13T05:19:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-420886678",
      "id" : 420886678,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMDg4NjY3OA==",
      "updated_at" : "2018-09-13T05:19:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420886678",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217607878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217607878"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should skip this if wallet disabled.\r\n```python3\r\n    def skip_test_if_missing_module(self):\r\n        self.skip_if_no_wallet()\r\n```",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-09-14T06:00:45Z",
      "diff_hunk" : "@@ -0,0 +1,146 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217607878",
      "id" : 217607878,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzYwNzg3OA==",
      "original_commit_id" : "62b5893d9862b05b76db1ffefb21cb0ae0e70972",
      "original_position" : 27,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 155361558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217607878",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-09-18T23:59:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-422598794",
      "id" : 422598794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMjU5ODc5NA==",
      "updated_at" : "2018-09-18T23:59:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422598794",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-10-24T09:40:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-432587820",
      "id" : 432587820,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMjU4NzgyMA==",
      "updated_at" : "2018-10-24T09:40:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/432587820",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228076558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228076558"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Update: it throws now",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-10-25T08:23:30Z",
      "diff_hunk" : "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228076558",
      "id" : 228076558,
      "in_reply_to_id" : 217080283,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODA3NjU1OA==",
      "original_commit_id" : "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
      "original_position" : 121,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 168259784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228076558",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228079166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228079166"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you use `getreceivedbyaddress` instead of `getbalance` you don't need this `reset_balance` and `assert_approx` stuff.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-10-25T08:30:53Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228079166",
      "id" : 228079166,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODA3OTE2Ng==",
      "original_commit_id" : "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
      "original_position" : 48,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 168259784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228079166",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228080376"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228080376"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Move this test up, since it's more interesting.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-10-25T08:34:34Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''\n+        Test immutable wallet flags\n+        '''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_send(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228080376",
      "id" : 228080376,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODA4MDM3Ng==",
      "original_commit_id" : "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
      "original_position" : 92,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 168259784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228080376",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228081405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228081405"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This should probably be the first test, since it describes the behavior without the new flag.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-10-25T08:37:20Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''\n+        Test immutable wallet flags\n+        '''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_send(self):\n+        '''\n+        Test the simple case where [1] generates a new address A, then\n+        [0] sends 10 BTC to A.\n+        [1] spends 5 BTC from A. (leaving roughly 4 BTC useable)\n+        [0] sends 10 BTC to A again.\n+        [1] tries to spend 10 BTC (fails; dirty).\n+        [1] tries to spend 4 BTC (succeeds; change address sufficient)\n+        '''\n+\n+        fundaddr = self.nodes[1].getnewaddress()\n+        retaddr = self.nodes[0].getnewaddress()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[1].sendtoaddress(retaddr, 5)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        # node 1 should now have a balance of 5 (no dirty) or 15 (including dirty)\n+        assert_approx(self.nodes[1].getbalance(), 5, 0.001)\n+        assert_approx(self.nodes[1].getbalance(include_dirty=True), 15, 0.001)\n+\n+        assert_raises_rpc_error(-6, \"Insufficient funds\", self.nodes[1].sendtoaddress, retaddr, 10)\n+\n+        self.nodes[1].sendtoaddress(retaddr, 4)\n+\n+    def test_fund_send_fund_senddirty(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228081405",
      "id" : 228081405,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODA4MTQwNQ==",
      "original_commit_id" : "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
      "original_position" : 125,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 168259784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228081405",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228425325"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228425325"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: This method doesn't use `self` and could be a function instead?",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-10-26T07:12:19Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228425325",
      "id" : 228425325,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQyNTMyNQ==",
      "original_commit_id" : "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
      "original_position" : 27,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 168695218,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228425325",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors Thanks a lot for the detailed review.\r\n\r\n> the flag name `disable_private_keys` in `WALLET_FLAG_MAP` is inconsistent with the output of `getwalletinfo` (`private_keys_enabled`)\r\n\r\nYeah. This is remnant from a different PR which uses both variants. I think it should be resolved, but probably in its own PR.\r\n\r\n> the use of both allow_dirty and avoid_reuse is confusing. I find avoid_reuse more clear.\r\n\r\nMakes sense. Switched to using that.\r\n\r\n> why does `sendtoaddress` have an `allow_dirty` option, but e.g. `sendmany` doesn't?\r\n> why does getbalance have include_dirty, but similar calls don't? (in particular getunconfirmedbalance and getreceivedbylabel)\r\n\r\nI mentioned this in the original PR, but I am basically trying to keep the PR as small as I can, so I am leaving out some RPC tweaks and such. I intend to do a follow-up PR to address these things.\r\n\r\n> `setwalletflag avoid_reuse false` should mark used destinations as dirty or warn that it doesn't\r\n\r\nYou mean `true` I think? `false` would disable the feature. It may be worth it to add a \"warn user if turning <ON|OFF> flag <X>\" mapping to the wallet flags, as I expect other wallet flags may also want to give hints when toggled.\r\n\r\n> don't tease the user by listing disable_private_keys in the help, or add a separate \"Flags which can't be changed: \"\r\n\r\nI guess, yeah. Doesn't feel like a super big deal, and it could be useful to see a list even if you can't change them, but maybe it'll just confuse people. No longer displaying immutable flags in list.\r\n",
      "created_at" : "2018-10-26T07:23:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-433312984",
      "id" : 433312984,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMzMxMjk4NA==",
      "updated_at" : "2018-10-26T07:23:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433312984",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors\r\n\r\nI can't comment on the \"Update: it throws now\" comment for some reason. It does throw, but it also returns true/false for successful calls, where false means \"flag unchanged\" and true means \"flag changed\".",
      "created_at" : "2018-10-26T07:25:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-433313427",
      "id" : 433313427,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMzMxMzQyNw==",
      "updated_at" : "2018-10-26T07:25:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433313427",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228428998"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228428998"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's a good point, but `getreceivedbyaddress` has not been updated to handle the `avoid_reuse` flag yet. Perhaps it's worth doing that and switch, but it's also reassuring to ensure no weird balance appeared from some unexpected address.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-10-26T07:29:12Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228428998",
      "id" : 228428998,
      "in_reply_to_id" : 228079166,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQyODk5OA==",
      "original_commit_id" : "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
      "original_position" : 48,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 168699742,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228428998",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429286"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The way I see it is, the two tests above it will catch weird issues that could cause the test to fail in random places, so those tests are run first. The intention is to order tests chronologically.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-10-26T07:30:26Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''\n+        Test immutable wallet flags\n+        '''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_send(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429286",
      "id" : 228429286,
      "in_reply_to_id" : 228080376,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQyOTI4Ng==",
      "original_commit_id" : "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
      "original_position" : 92,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 168700076,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429286",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429609"
         }
      },
      "author_association" : "MEMBER",
      "body" : "OK!",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-10-26T07:32:00Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''\n+        Test immutable wallet flags\n+        '''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_send(self):\n+        '''\n+        Test the simple case where [1] generates a new address A, then\n+        [0] sends 10 BTC to A.\n+        [1] spends 5 BTC from A. (leaving roughly 4 BTC useable)\n+        [0] sends 10 BTC to A again.\n+        [1] tries to spend 10 BTC (fails; dirty).\n+        [1] tries to spend 4 BTC (succeeds; change address sufficient)\n+        '''\n+\n+        fundaddr = self.nodes[1].getnewaddress()\n+        retaddr = self.nodes[0].getnewaddress()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[1].sendtoaddress(retaddr, 5)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        # node 1 should now have a balance of 5 (no dirty) or 15 (including dirty)\n+        assert_approx(self.nodes[1].getbalance(), 5, 0.001)\n+        assert_approx(self.nodes[1].getbalance(include_dirty=True), 15, 0.001)\n+\n+        assert_raises_rpc_error(-6, \"Insufficient funds\", self.nodes[1].sendtoaddress, retaddr, 10)\n+\n+        self.nodes[1].sendtoaddress(retaddr, 4)\n+\n+    def test_fund_send_fund_senddirty(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429609",
      "id" : 228429609,
      "in_reply_to_id" : 228081405,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQyOTYwOQ==",
      "original_commit_id" : "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
      "original_position" : 125,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 168700499,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429609",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429738"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429738"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point. Turned into function.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-10-26T07:32:36Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429738",
      "id" : 228429738,
      "in_reply_to_id" : 228425325,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQyOTczOA==",
      "original_commit_id" : "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
      "original_position" : 27,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 168700673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429738",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228456534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228456534"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Multiple wallets per node might be another route.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-10-26T09:10:28Z",
      "diff_hunk" : "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228456534",
      "id" : 228456534,
      "in_reply_to_id" : 228079166,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQ1NjUzNA==",
      "original_commit_id" : "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
      "original_position" : 48,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 168734124,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228456534",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-11-05T12:24:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-435856221",
      "id" : 435856221,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNTg1NjIyMQ==",
      "updated_at" : "2018-11-05T12:24:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/435856221",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r232176122"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232176122"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could use `std::accumulate`?",
      "commit_id" : "e9223bbc25670c1012ca034d066dd190ae8607ed",
      "created_at" : "2018-11-09T08:43:48Z",
      "diff_hunk" : "@@ -2439,15 +2466,65 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : WALLET_FLAG_MAP)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r232176122",
      "id" : 232176122,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjE3NjEyMg==",
      "original_commit_id" : "e9223bbc25670c1012ca034d066dd190ae8607ed",
      "original_position" : 164,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 164,
      "pull_request_review_id" : 173315709,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2018-11-09T08:43:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232176122",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-11-09T15:16:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-437390272",
      "id" : 437390272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzM5MDI3Mg==",
      "updated_at" : "2018-11-09T15:16:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437390272",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Dirty should be set when receiving, not when the received coins are then spent.",
      "created_at" : "2018-11-09T17:29:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-437433948",
      "id" : 437433948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzQzMzk0OA==",
      "updated_at" : "2018-11-09T17:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437433948",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr \r\n\r\n> Dirty should be set when receiving, not when the received coins are then spent.\r\n\r\nThis is done in `AddToWallet`, so it looks like it is doing what you are asking for:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/dbfb209900cb6d4e6af3c0eb6ffa96f20f1dd123/src/wallet/wallet.cpp#L880-L886\r\n\r\nThe test `test_fund_send_fund_send` ensures that this behavior is the case, I think. Is it missing something?\r\n",
      "created_at" : "2018-11-12T05:48:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-437764081",
      "id" : 437764081,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzc2NDA4MQ==",
      "updated_at" : "2018-11-12T05:48:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437764081",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-11-13T21:55:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-438453013",
      "id" : 438453013,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODQ1MzAxMw==",
      "updated_at" : "2018-11-13T21:55:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438453013",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234434954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234434954"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: `WALLET_FLAG_AVOID_REUSE` instead of `WALLET_FLAG_AVOIDREUSE`",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-11-18T09:23:21Z",
      "diff_hunk" : "@@ -125,11 +125,22 @@ enum WalletFlags : uint64_t {\n     // wallet flags in the upper section (> 1 << 31) will lead to not opening the wallet if flag is unknown\n     // unknown wallet flags in the lower section <= (1 << 31) will be tolerated\n \n+    // will categorize coins as clean (not reused) and dirty (reused), and handle\n+    // them with privacy considerations in mind\n+    WALLET_FLAG_AVOIDREUSE = (1ULL << 0),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234434954",
      "id" : 234434954,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDQzNDk1NA==",
      "original_commit_id" : "602bd48de3046afea91dca1601a16623d91e4b5d",
      "original_position" : 6,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 176081493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234434954",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234435387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234435387"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Above help text says `(only applicable if the \\\"avoid reuse\\\" wallet flag is enabled)`, so why do you have this case? Shouldn't we just error immediately if it is set without `pwallet->IsWalletFlagSet(WALLET_FLAG_AVOIDREUSE)`? Same with the other RPCs",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-11-18T09:34:45Z",
      "diff_hunk" : "@@ -734,7 +735,11 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n-    return ValueFromAmount(pwallet->GetBalance(filter, min_depth));\n+    bool avoid_reuse = request.params[3].isNull()\n+        ? pwallet->IsWalletFlagSet(WALLET_FLAG_AVOIDREUSE)\n+        : request.params[3].get_bool();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234435387",
      "id" : 234435387,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDQzNTM4Nw==",
      "original_commit_id" : "e633e181f12c13304f147707e2d00cede6484735",
      "original_position" : 27,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 176081493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234435387",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234435825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234435825"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Help texts for all the RPC changes in this PR could do with some more consistency, e.g. in how the default is output (this one doesn't output the default at all, whereas `sendtoaddress` will decide whether to output `default=true` or `unavailable`)",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-11-18T09:46:03Z",
      "diff_hunk" : "@@ -555,13 +561,14 @@ static UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n-            \"getreceivedbyaddress \\\"address\\\" ( minconf )\\n\"\n+            \"getreceivedbyaddress \\\"address\\\" ( minconf avoid_reuse )\\n\"\n             \"\\nReturns the total amount received by the given address in transactions with at least minconf confirmations.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"address\\\"         (string, required) The bitcoin address for transactions.\\n\"\n             \"2. minconf             (numeric, optional, default=1) Only include transactions confirmed at least this many times.\\n\"\n+            \"3. avoid_reuse         (boolean, optional) Forbid inclusion of addresses which have been marked as 'dirty'.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234435825",
      "id" : 234435825,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDQzNTgyNQ==",
      "original_commit_id" : "afc146d69a56dc0955aedaf162cd842191f2278d",
      "original_position" : 60,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 176081493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234435825",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234489708"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234489708"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Code now throws an error if user does `avoidreuse=true` for a wallet which does not have `WALLET_FLAG_AVOID_REUSE` enabled.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-11-19T04:11:54Z",
      "diff_hunk" : "@@ -734,7 +735,11 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n-    return ValueFromAmount(pwallet->GetBalance(filter, min_depth));\n+    bool avoid_reuse = request.params[3].isNull()\n+        ? pwallet->IsWalletFlagSet(WALLET_FLAG_AVOIDREUSE)\n+        : request.params[3].get_bool();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234489708",
      "id" : 234489708,
      "in_reply_to_id" : 234435387,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDQ4OTcwOA==",
      "original_commit_id" : "e633e181f12c13304f147707e2d00cede6484735",
      "original_position" : 27,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 176138762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234489708",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MeshCollider Thanks much for the review!\r\n\r\n> The split into multiple commits is nice but perhaps a little too much, some squashing would be good e.g. \"wallet: add MUTABLE_WALLET_FLAGS\" -> \"wallet/rpc: add setwalletflag RPC command for modifying wallet flag post creation\", etc.\r\n\r\nI will try to squash stuff. Agree about the two commits you mentioned.",
      "created_at" : "2018-11-19T04:16:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-439766907",
      "id" : 439766907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTc2NjkwNw==",
      "updated_at" : "2018-11-19T04:16:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439766907",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I wrote earlier:\r\n> `setwalletflag avoid_reuse false` should mark used destinations as dirty or warn that it doesn't\r\n\r\nI meant to say `setwalletflag avoid_reuse true` should go through existing transactions in the wallet and mark things dirty as needed. Or the help text and/or release notes should warn that it doesn't.\r\n\r\n`getbalance \"*\" 0 false false` ignores unconfirmed transactions (pre-existing bug?)\r\n\r\n`getreceivedbyaddress tb1q... 0 true` discards the first transaction on the dirty address. That seems non-intuitive.\r\n\r\nA followup PR could add a \"Avoid Reuse\" checkbox to the coin selection dialog in the GUI to reveal dirty coins. Another PR could add a Avoid Reuse checkbox to the Options->Wallet dialog, which would perform `setwalletflag avoid_reuse true` (it would not use QT persisted settings).",
      "created_at" : "2018-11-19T15:17:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-439927756",
      "id" : 439927756,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTkyNzc1Ng==",
      "updated_at" : "2018-11-19T15:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439927756",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors getbalance is preexisting yep, see #14602",
      "created_at" : "2018-11-19T19:47:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-440019200",
      "id" : 440019200,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDAxOTIwMA==",
      "updated_at" : "2018-11-19T19:47:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440019200",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors Thanks for testing and for valuable feedback.\r\n\r\n> > setwalletflag avoid_reuse false should mark used destinations as dirty or warn that it doesn't\r\n> \r\n> I meant to say setwalletflag avoid_reuse true should go through existing transactions in the wallet and mark things dirty as needed. Or the help text and/or release notes should warn that it doesn't.\r\n\r\nI somehow forgot about this, apologies -- I've added \"caveats\" to the setwalletflags, and also added release notes indicating a rescan is required.\r\n\r\n> getreceivedbyaddress tb1q... 0 true discards the first transaction on the dirty address. That seems non-intuitive.\r\n\r\nThinking about this, I actually don't really see why `getreceivedbyaddress` should even care about reuse. It should just show everything that was received. Dropping that commit.\r\n",
      "created_at" : "2018-11-20T04:29:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-440134145",
      "id" : 440134145,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDEzNDE0NQ==",
      "updated_at" : "2018-11-20T04:29:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440134145",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-11-23T09:23:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-441189746",
      "id" : 441189746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTE4OTc0Ng==",
      "updated_at" : "2018-11-23T09:23:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/441189746",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r236677538"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236677538"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree with the nit, and also that it's a nit :-)",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2018-11-27T14:10:13Z",
      "diff_hunk" : "@@ -125,11 +125,22 @@ enum WalletFlags : uint64_t {\n     // wallet flags in the upper section (> 1 << 31) will lead to not opening the wallet if flag is unknown\n     // unknown wallet flags in the lower section <= (1 << 31) will be tolerated\n \n+    // will categorize coins as clean (not reused) and dirty (reused), and handle\n+    // them with privacy considerations in mind\n+    WALLET_FLAG_AVOIDREUSE = (1ULL << 0),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r236677538",
      "id" : 236677538,
      "in_reply_to_id" : 234434954,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjY3NzUzOA==",
      "original_commit_id" : "602bd48de3046afea91dca1601a16623d91e4b5d",
      "original_position" : 6,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 178799767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236677538",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors https://github.com/bitcoin/bitcoin/pull/13756#discussion_r236677538 I can't see what nit this is referring to -- is it the \"use `AVOID_REUSE`, not `AVOIDREUSE`\" one? Then cool, as I believe I addressed that.",
      "created_at" : "2018-11-28T01:43:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-442286415",
      "id" : 442286415,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MjI4NjQxNQ==",
      "updated_at" : "2018-11-28T01:43:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442286415",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kallewoof correct, looks like I responded to an outdated comment somehow.",
      "created_at" : "2018-11-28T14:25:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-442464663",
      "id" : 442464663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MjQ2NDY2Mw==",
      "updated_at" : "2018-11-28T14:25:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442464663",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-12-05T16:54:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-444558824",
      "id" : 444558824,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NDU1ODgyNA==",
      "updated_at" : "2018-12-05T16:54:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/444558824",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 23a15c5\r\n\r\nChanges since my last review: rebase, some commits reorganised, new RPC help syntax, cosmetic changes: \r\n\r\n```sh\r\nPREV=3bff2a5 N=14 && git range-diff `git merge-base --all HEAD $PREV`...$PREV HEAD~$N...HEAD\r\n```",
      "created_at" : "2019-01-30T11:54:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-458917539",
      "id" : 458917539,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1ODkxNzUzOQ==",
      "updated_at" : "2019-01-30T11:54:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458917539",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256294078"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256294078"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: this new check (if you keep it, see ff7fe3cf817f787ee8d929b73522d2e9c9da5681), as well as setting all flags in one go (below), deserves a separate commit. I do like the cleanup. ",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2019-02-13T08:47:27Z",
      "diff_hunk" : "@@ -4151,16 +4218,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+            (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET)) {\n+            InitError(_(\"Wallet cannot have both DISABLE_PRIVATE_KEYS and BLANK_WALLET flags\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256294078",
      "id" : 256294078,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjI5NDA3OA==",
      "original_commit_id" : "ac89bbac8780f0f5a3f0765414741e99d5cfcb74",
      "original_position" : 179,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 203085259,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256294078",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256302182"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256302182"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I assumed setting both was an error, but realized tests rely on being able to set both. I think I screwed up the logic though (the original code did if/else, which would actually not set one of the flags if the other one was set). Will address now.",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2019-02-13T09:10:19Z",
      "diff_hunk" : "@@ -4151,16 +4218,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+            (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET)) {\n+            InitError(_(\"Wallet cannot have both DISABLE_PRIVATE_KEYS and BLANK_WALLET flags\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256302182",
      "id" : 256302182,
      "in_reply_to_id" : 256294078,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjMwMjE4Mg==",
      "original_commit_id" : "ac89bbac8780f0f5a3f0765414741e99d5cfcb74",
      "original_position" : 179,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 203094793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256302182",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256305947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256305947"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Actually setting both is fine, so this check needs to be dropped.\r\n* a blank wallet with private keys enabled can import or generate new private keys\r\n* a blank wallet with private keys disabled can only import public keys\r\n\r\nThe other way around:\r\n* a wallet without private keys is blank upon creation, but that might change, so I don't think we should enforce that",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2019-02-13T09:20:26Z",
      "diff_hunk" : "@@ -4151,16 +4218,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+            (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET)) {\n+            InitError(_(\"Wallet cannot have both DISABLE_PRIVATE_KEYS and BLANK_WALLET flags\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256305947",
      "id" : 256305947,
      "in_reply_to_id" : 256294078,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjMwNTk0Nw==",
      "original_commit_id" : "ac89bbac8780f0f5a3f0765414741e99d5cfcb74",
      "original_position" : 179,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 203099507,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256305947",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256698871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256698871"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, setting both is fine, but the code pre-this-PR will actually ignore the blank wallet flag if the disable private keys flag is set:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/9c93f5d9fc93df2120998e8383bc972b738f3ff5/src/wallet/wallet.cpp#L4142-L4151\r\n\r\n(As such, the updated code will explicitly disable the blank wallet flag if both are set, before setting all flags.)",
      "commit_id" : "74581ff4742036932eacf2a8f518e4752e7945e2",
      "created_at" : "2019-02-14T05:54:17Z",
      "diff_hunk" : "@@ -4151,16 +4218,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+            (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET)) {\n+            InitError(_(\"Wallet cannot have both DISABLE_PRIVATE_KEYS and BLANK_WALLET flags\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256698871",
      "id" : 256698871,
      "in_reply_to_id" : 256294078,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjY5ODg3MQ==",
      "original_commit_id" : "ac89bbac8780f0f5a3f0765414741e99d5cfcb74",
      "original_position" : 179,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 203578216,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
      "updated_at" : "2019-03-05T01:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256698871",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Squashed. @Sjors I believe the code now acts the same way as master, i.e.\r\n\r\n* blank_wallet Ã¢ÂÂ blank_wallet\r\n* disable_privkeys Ã¢ÂÂ disable_privkeys\r\n* blank_wallet | disable_privkeys Ã¢ÂÂ disable_privkeys\r\n",
      "created_at" : "2019-02-14T06:00:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-463501498",
      "id" : 463501498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MzUwMTQ5OA==",
      "updated_at" : "2019-02-14T06:00:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463501498",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kallewoof you're right, it's the same as on master. utACK ec26b2e",
      "created_at" : "2019-02-14T10:05:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-463568472",
      "id" : 463568472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MzU2ODQ3Mg==",
      "updated_at" : "2019-02-14T10:05:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463568472",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors The big question is, does it even matter if both flags are set? I would love to not have those 5 lines of cruft in there, if they don't make a difference. I should hunt down whoever wrote that code and ask, I guess. (And/or verify myself.)",
      "created_at" : "2019-02-14T11:25:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-463592765",
      "id" : 463592765,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MzU5Mjc2NQ==",
      "updated_at" : "2019-02-14T11:25:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463592765",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not sure, but perhaps it's better dealt with in a followup to this as well as #14021. cc @achow101\r\n\r\nIt seems to me that when you create a wallet without private keys, as long as there's no additional argument to feed the new wallet with public keys, it's by definition blank. Problem is that the RPC needs a default and we probably don't want to make that too complicated. A sane default for `blank` is true when private keys are disabled, whereas otherwise the sane default for `blank` is false.",
      "created_at" : "2019-02-14T15:53:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-463679517",
      "id" : 463679517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MzY3OTUxNw==",
      "updated_at" : "2019-02-14T15:53:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463679517",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK rebased 74581ff",
      "created_at" : "2019-03-05T17:42:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-469779370",
      "id" : 469779370,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTc3OTM3MA==",
      "updated_at" : "2019-03-05T17:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469779370",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
