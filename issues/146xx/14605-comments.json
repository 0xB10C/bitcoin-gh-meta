[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->Reviewers, this pull request conflicts with the following ones:\n\n* [#14624](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14624.html) (Some simple improvements to the RNG code by sipa)\n* [#14489](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14489.html) (refactor: Drop boost::thread and boost::chrono by ken2812221)\n* [#14487](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14487.html) (Constexpr Everything Part 1: Constants by DesWurstes)\n* [#14464](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14464.html) (refactor: Remove boost in checkqueue by ken2812221)\n* [#14358](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14358.html) ([logs] Fix a few log messages related to duration measurement by romanz)\n* [#14224](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14224.html) (Document intentional and unintentional unsigned integer overflows (wraparounds) using annotations by practicalswift)\n* [#14194](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14194.html) (Annotate unused parameters with [[maybe_unused]] by practicalswift)\n* [#14121](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14121.html) (Index for BIP 157 block filters by jimpo)\n* [#13864](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13864.html) (validation: Document where we are intentionally ignoring bool return values from validation related functions by practicalswift)\n* [#13815](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13815.html) (util: Add [[nodiscard]] to all {Decode,Parse}[...](...) functions returning bool by practicalswift)\n* [#13123](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13123.html) (net: Add Clang thread safety annotations for guarded variables in the networking code by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-10-30T06:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#issuecomment-434184969",
      "id" : 434184969,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14605",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNDE4NDk2OQ==",
      "updated_at" : "2018-11-01T20:13:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/434184969",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229283979"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229283979"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Accidental changes in the first commit?",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-30T12:22:56Z",
      "diff_hunk" : "@@ -1221,16 +1221,17 @@ void RPCConsole::banSelectedNode(int bantime)\n         // Get currently selected peer address\n         NodeId id = nodes.at(i).data().toLongLong();\n \n-\t// Get currently selected peer address\n-\tint detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(id);\n-\tif(detailNodeRow < 0)\n+    // Get currently selected peer address\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(id);\n+    if(detailNodeRow < 0)\n \t    return;\n \n-\t// Find possible nodes, ban it and clear the selected node\n-\tconst CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n-\tif(stats) {\n+    // Find possible nodes, ban it and clear the selected node\n+    const CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    if(stats) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229283979",
      "id" : 229283979,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTI4Mzk3OQ==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 17,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : 169743898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229283979",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229330485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229330485"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Sort includes :-)",
      "commit_id" : "973d78f7f0a2af27c870435752272ac1483316d0",
      "created_at" : "2018-10-30T14:31:41Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229330485",
      "id" : 229330485,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMDQ4NQ==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 11,
      "path" : "src/banman.cpp",
      "position" : 9,
      "pull_request_review_id" : 169804522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-10-31T04:46:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229330485",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332038"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make sure parameter name matches between declaration and definition :-)",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-30T14:35:03Z",
      "diff_hunk" : "@@ -105,9 +105,8 @@ bool DeserializeFileDB(const fs::path& path, Data& data)\n \n }\n \n-CBanDB::CBanDB()\n+CBanDB::CBanDB(fs::path ban_file) : pathBanlist(std::move(ban_file))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332038",
      "id" : 229332038,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjAzOA==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 5,
      "path" : "src/addrdb.cpp",
      "position" : null,
      "pull_request_review_id" : 169806465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332038",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332334"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make sure parameter names match between:\r\n\r\n```\r\n    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\r\n    void BanMan::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\r\n```",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-30T14:35:46Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332334",
      "id" : 229332334,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjMzNA==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 39,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169806864,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332334",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332503"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332503"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make sure these match:\r\n\r\n```\r\n    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\r\n    void BanMan::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\r\n```",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-30T14:36:09Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332503",
      "id" : 229332503,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjUwMw==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 40,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169807104,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332503",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332663"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make sure these match:\r\n\r\n```\r\n    bool Unban(const CNetAddr &ip);\r\n    bool BanMan::Unban(const CNetAddr &addr) {\r\n```",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-30T14:36:32Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void ClearBanned();\n+    bool IsBanned(CNetAddr ip);\n+    bool IsBanned(CSubNet subnet);\n+    bool Unban(const CNetAddr &ip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332663",
      "id" : 229332663,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjY2Mw==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 44,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169807309,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332663",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332746"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here:\r\n\r\n```\r\n    bool Unban(const CSubNet &ip);\r\n    bool BanMan::Unban(const CSubNet &subNet) {\r\n```",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-30T14:36:44Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void ClearBanned();\n+    bool IsBanned(CNetAddr ip);\n+    bool IsBanned(CSubNet subnet);\n+    bool Unban(const CNetAddr &ip);\n+    bool Unban(const CSubNet &ip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332746",
      "id" : 229332746,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjc0Ng==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 45,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169807418,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332746",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332892"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here:\r\n\r\n```\r\n    void GetBanned(banmap_t &banmap);\r\n    void BanMan::GetBanned(banmap_t &banMap)\r\n```",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-30T14:37:02Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void ClearBanned();\n+    bool IsBanned(CNetAddr ip);\n+    bool IsBanned(CSubNet subnet);\n+    bool Unban(const CNetAddr &ip);\n+    bool Unban(const CSubNet &ip);\n+    void GetBanned(banmap_t &banmap);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332892",
      "id" : 229332892,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjg5Mg==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 46,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169807583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332892",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229333006"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229333006"
         }
      },
      "author_association" : "MEMBER",
      "body" : "And here :-)\r\n\r\n```\r\n    void SetBanned(const banmap_t &banmap);\r\n    void BanMan::SetBanned(const banmap_t &banMap)\r\n```",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-30T14:37:19Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void ClearBanned();\n+    bool IsBanned(CNetAddr ip);\n+    bool IsBanned(CSubNet subnet);\n+    bool Unban(const CNetAddr &ip);\n+    bool Unban(const CSubNet &ip);\n+    void GetBanned(banmap_t &banmap);\n+    void DumpBanlist();\n+\n+private:\n+    void SetBanned(const banmap_t &banmap);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229333006",
      "id" : 229333006,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMzAwNg==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 50,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169807733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229333006",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229334235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229334235"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `if (m_banned.erase(subNet) == 0)` to increase readability and avoid implicit conversion?",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-30T14:40:04Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap); // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if(m_client_interface)\n+        m_client_interface->BannedListChanged();\n+}\n+\n+bool BanMan::IsBanned(CNetAddr ip)\n+{\n+    LOCK(m_cs_banned);\n+    for (const auto& it : m_banned) {\n+        CSubNet subNet = it.first;\n+        CBanEntry banEntry = it.second;\n+\n+        if (subNet.Match(ip) && GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool BanMan::IsBanned(CSubNet subnet)\n+{\n+    LOCK(m_cs_banned);\n+    banmap_t::iterator i = m_banned.find(subnet);\n+    if (i != m_banned.end())\n+    {\n+        CBanEntry banEntry = (*i).second;\n+        if (GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+void BanMan::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CSubNet subNet(addr);\n+    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+}\n+\n+void BanMan::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CBanEntry banEntry(GetTime());\n+    banEntry.banReason = banReason;\n+    if (bantimeoffset <= 0)\n+    {\n+        bantimeoffset = m_default_ban_time;\n+        sinceUnixEpoch = false;\n+    }\n+    banEntry.nBanUntil = (sinceUnixEpoch ? 0 : GetTime() )+bantimeoffset;\n+\n+    {\n+        LOCK(m_cs_banned);\n+        if (m_banned[subNet].nBanUntil < banEntry.nBanUntil) {\n+            m_banned[subNet] = banEntry;\n+            m_is_dirty = true;\n+        }\n+        else\n+            return;\n+    }\n+    if(m_client_interface)\n+        m_client_interface->BannedListChanged();\n+\n+    if(banReason == BanReasonManuallyAdded)\n+        DumpBanlist(); //store banlist to disk immediately if user requested ban\n+}\n+\n+bool BanMan::Unban(const CNetAddr &addr) {\n+    CSubNet subNet(addr);\n+    return Unban(subNet);\n+}\n+\n+bool BanMan::Unban(const CSubNet &subNet) {\n+    {\n+        LOCK(m_cs_banned);\n+        if (!m_banned.erase(subNet))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229334235",
      "id" : 229334235,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzNDIzNQ==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 139,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 169809341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229334235",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229337596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229337596"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since this is new code - please run all new C++ files through `clang-format` (using the project local settings) to get the expected formatting.",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-30T14:47:42Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap); // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if(m_client_interface)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229337596",
      "id" : 229337596,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzNzU5Ng==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 68,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 169813779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229337596",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229482681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229482681"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could this be re-formulated to avoid reassigning parameters?",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-30T20:55:33Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap); // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if(m_client_interface)\n+        m_client_interface->BannedListChanged();\n+}\n+\n+bool BanMan::IsBanned(CNetAddr ip)\n+{\n+    LOCK(m_cs_banned);\n+    for (const auto& it : m_banned) {\n+        CSubNet subNet = it.first;\n+        CBanEntry banEntry = it.second;\n+\n+        if (subNet.Match(ip) && GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool BanMan::IsBanned(CSubNet subnet)\n+{\n+    LOCK(m_cs_banned);\n+    banmap_t::iterator i = m_banned.find(subnet);\n+    if (i != m_banned.end())\n+    {\n+        CBanEntry banEntry = (*i).second;\n+        if (GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+void BanMan::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CSubNet subNet(addr);\n+    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+}\n+\n+void BanMan::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CBanEntry banEntry(GetTime());\n+    banEntry.banReason = banReason;\n+    if (bantimeoffset <= 0)\n+    {\n+        bantimeoffset = m_default_ban_time;\n+        sinceUnixEpoch = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229482681",
      "id" : 229482681,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTQ4MjY4MQ==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 111,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 169995745,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229482681",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229563039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229563039"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See: https://github.com/bitcoin/bitcoin/pull/14605/commits/5dac8bf9616749b832ce14ccace4a2ab6eaf187b",
      "commit_id" : "973d78f7f0a2af27c870435752272ac1483316d0",
      "created_at" : "2018-10-31T04:48:43Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap); // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if(m_client_interface)\n+        m_client_interface->BannedListChanged();\n+}\n+\n+bool BanMan::IsBanned(CNetAddr ip)\n+{\n+    LOCK(m_cs_banned);\n+    for (const auto& it : m_banned) {\n+        CSubNet subNet = it.first;\n+        CBanEntry banEntry = it.second;\n+\n+        if (subNet.Match(ip) && GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool BanMan::IsBanned(CSubNet subnet)\n+{\n+    LOCK(m_cs_banned);\n+    banmap_t::iterator i = m_banned.find(subnet);\n+    if (i != m_banned.end())\n+    {\n+        CBanEntry banEntry = (*i).second;\n+        if (GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+void BanMan::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CSubNet subNet(addr);\n+    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+}\n+\n+void BanMan::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CBanEntry banEntry(GetTime());\n+    banEntry.banReason = banReason;\n+    if (bantimeoffset <= 0)\n+    {\n+        bantimeoffset = m_default_ban_time;\n+        sinceUnixEpoch = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229563039",
      "id" : 229563039,
      "in_reply_to_id" : 229482681,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTU2MzAzOQ==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 111,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 170091720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-10-31T04:48:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229563039",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "thank you for picking this up!\r\nWe welcome the Ban Man to our kingdom",
      "created_at" : "2018-10-31T17:14:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#issuecomment-434772194",
      "id" : 434772194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14605",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNDc3MjE5NA==",
      "updated_at" : "2018-10-31T17:21:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/434772194",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229867404"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229867404"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Reformulated in https://github.com/bitcoin/bitcoin/pull/14605/commits/36e6b241d0ed6f6d6ab503d61dfd95053202ce9b, let me know if you think that's good",
      "commit_id" : "a485720107942426229a455dc12fde2d32b96872",
      "created_at" : "2018-10-31T21:03:59Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap); // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if(m_client_interface)\n+        m_client_interface->BannedListChanged();\n+}\n+\n+bool BanMan::IsBanned(CNetAddr ip)\n+{\n+    LOCK(m_cs_banned);\n+    for (const auto& it : m_banned) {\n+        CSubNet subNet = it.first;\n+        CBanEntry banEntry = it.second;\n+\n+        if (subNet.Match(ip) && GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool BanMan::IsBanned(CSubNet subnet)\n+{\n+    LOCK(m_cs_banned);\n+    banmap_t::iterator i = m_banned.find(subnet);\n+    if (i != m_banned.end())\n+    {\n+        CBanEntry banEntry = (*i).second;\n+        if (GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+void BanMan::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CSubNet subNet(addr);\n+    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+}\n+\n+void BanMan::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CBanEntry banEntry(GetTime());\n+    banEntry.banReason = banReason;\n+    if (bantimeoffset <= 0)\n+    {\n+        bantimeoffset = m_default_ban_time;\n+        sinceUnixEpoch = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229867404",
      "id" : 229867404,
      "in_reply_to_id" : 229482681,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTg2NzQwNA==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 111,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 170471761,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-01T01:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229867404",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   }
]
