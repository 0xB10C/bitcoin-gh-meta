[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14897](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14897.html) (randomize GETDATA(tx) request order and introduce bias toward outbound by naumenkogs)\n* [#14624](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14624.html) (Some simple improvements to the RNG code by sipa)\n* [#14464](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14464.html) (refactor: make checkqueue manage the threads by itself (also removed some boost dependencies) by ken2812221)\n* [#14358](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14358.html) ([logs] Fix a few log messages related to duration measurement by romanz)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-10-30T06:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#issuecomment-434184969",
      "id" : 434184969,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14605",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNDE4NDk2OQ==",
      "updated_at" : "2018-12-09T19:48:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/434184969",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229283979"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229283979"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Accidental changes in the first commit?",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-30T12:22:56Z",
      "diff_hunk" : "@@ -1221,16 +1221,17 @@ void RPCConsole::banSelectedNode(int bantime)\n         // Get currently selected peer address\n         NodeId id = nodes.at(i).data().toLongLong();\n \n-\t// Get currently selected peer address\n-\tint detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(id);\n-\tif(detailNodeRow < 0)\n+    // Get currently selected peer address\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(id);\n+    if(detailNodeRow < 0)\n \t    return;\n \n-\t// Find possible nodes, ban it and clear the selected node\n-\tconst CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n-\tif(stats) {\n+    // Find possible nodes, ban it and clear the selected node\n+    const CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    if(stats) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229283979",
      "id" : 229283979,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTI4Mzk3OQ==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 17,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : 169743898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229283979",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229330485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229330485"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Sort includes :-)",
      "commit_id" : "973d78f7f0a2af27c870435752272ac1483316d0",
      "created_at" : "2018-10-30T14:31:41Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229330485",
      "id" : 229330485,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMDQ4NQ==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 11,
      "path" : "src/banman.cpp",
      "position" : 9,
      "pull_request_review_id" : 169804522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-10-31T04:46:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229330485",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332038"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make sure parameter name matches between declaration and definition :-)",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-30T14:35:03Z",
      "diff_hunk" : "@@ -105,9 +105,8 @@ bool DeserializeFileDB(const fs::path& path, Data& data)\n \n }\n \n-CBanDB::CBanDB()\n+CBanDB::CBanDB(fs::path ban_file) : pathBanlist(std::move(ban_file))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332038",
      "id" : 229332038,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjAzOA==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 5,
      "path" : "src/addrdb.cpp",
      "position" : null,
      "pull_request_review_id" : 169806465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332038",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332334"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make sure parameter names match between:\r\n\r\n```\r\n    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\r\n    void BanMan::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\r\n```",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-30T14:35:46Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332334",
      "id" : 229332334,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjMzNA==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 39,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169806864,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332334",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332503"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332503"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make sure these match:\r\n\r\n```\r\n    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\r\n    void BanMan::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\r\n```",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-30T14:36:09Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332503",
      "id" : 229332503,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjUwMw==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 40,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169807104,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332503",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332663"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make sure these match:\r\n\r\n```\r\n    bool Unban(const CNetAddr &ip);\r\n    bool BanMan::Unban(const CNetAddr &addr) {\r\n```",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-30T14:36:32Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void ClearBanned();\n+    bool IsBanned(CNetAddr ip);\n+    bool IsBanned(CSubNet subnet);\n+    bool Unban(const CNetAddr &ip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332663",
      "id" : 229332663,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjY2Mw==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 44,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169807309,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332663",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332746"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here:\r\n\r\n```\r\n    bool Unban(const CSubNet &ip);\r\n    bool BanMan::Unban(const CSubNet &subNet) {\r\n```",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-30T14:36:44Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void ClearBanned();\n+    bool IsBanned(CNetAddr ip);\n+    bool IsBanned(CSubNet subnet);\n+    bool Unban(const CNetAddr &ip);\n+    bool Unban(const CSubNet &ip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332746",
      "id" : 229332746,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjc0Ng==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 45,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169807418,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332746",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332892"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here:\r\n\r\n```\r\n    void GetBanned(banmap_t &banmap);\r\n    void BanMan::GetBanned(banmap_t &banMap)\r\n```",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-30T14:37:02Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void ClearBanned();\n+    bool IsBanned(CNetAddr ip);\n+    bool IsBanned(CSubNet subnet);\n+    bool Unban(const CNetAddr &ip);\n+    bool Unban(const CSubNet &ip);\n+    void GetBanned(banmap_t &banmap);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229332892",
      "id" : 229332892,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMjg5Mg==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 46,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169807583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229332892",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229333006"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229333006"
         }
      },
      "author_association" : "MEMBER",
      "body" : "And here :-)\r\n\r\n```\r\n    void SetBanned(const banmap_t &banmap);\r\n    void BanMan::SetBanned(const banmap_t &banMap)\r\n```",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-30T14:37:19Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BANMAN_H\n+#define BITCOIN_BANMAN_H\n+\n+#include <addrdb.h>\n+#include <fs.h>\n+#include <sync.h>\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static constexpr unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n+class CClientUIInterface;\n+class CNetAddr;\n+class CSubNet;\n+\n+// Denial-of-service detection/prevention\n+// The idea is to detect peers that are behaving\n+// badly and disconnect/ban them, but do it in a\n+// one-coding-mistake-won't-shatter-the-entire-network\n+// way.\n+// IMPORTANT:  There should be nothing I can give a\n+// node that it will forward on that will make that\n+// node's peers drop it. If there is, an attacker\n+// can isolate a node and/or try to split the network.\n+// Dropping a node for sending stuff that is invalid\n+// now but might be valid in a later version is also\n+// dangerous, because it can cause a network split\n+// between nodes running old code and nodes running\n+// new code.\n+\n+class BanMan\n+{\n+public:\n+    ~BanMan();\n+    BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n+    void Ban(const CNetAddr& netAddr, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void Ban(const CSubNet& subNet, const BanReason& reason, int64_t bantimeoffset = 0, bool sinceUnixEpoch = false);\n+    void ClearBanned();\n+    bool IsBanned(CNetAddr ip);\n+    bool IsBanned(CSubNet subnet);\n+    bool Unban(const CNetAddr &ip);\n+    bool Unban(const CSubNet &ip);\n+    void GetBanned(banmap_t &banmap);\n+    void DumpBanlist();\n+\n+private:\n+    void SetBanned(const banmap_t &banmap);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229333006",
      "id" : 229333006,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzMzAwNg==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 50,
      "path" : "src/banman.h",
      "position" : null,
      "pull_request_review_id" : 169807733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229333006",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229334235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229334235"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `if (m_banned.erase(subNet) == 0)` to increase readability and avoid implicit conversion?",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-30T14:40:04Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap); // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if(m_client_interface)\n+        m_client_interface->BannedListChanged();\n+}\n+\n+bool BanMan::IsBanned(CNetAddr ip)\n+{\n+    LOCK(m_cs_banned);\n+    for (const auto& it : m_banned) {\n+        CSubNet subNet = it.first;\n+        CBanEntry banEntry = it.second;\n+\n+        if (subNet.Match(ip) && GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool BanMan::IsBanned(CSubNet subnet)\n+{\n+    LOCK(m_cs_banned);\n+    banmap_t::iterator i = m_banned.find(subnet);\n+    if (i != m_banned.end())\n+    {\n+        CBanEntry banEntry = (*i).second;\n+        if (GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+void BanMan::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CSubNet subNet(addr);\n+    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+}\n+\n+void BanMan::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CBanEntry banEntry(GetTime());\n+    banEntry.banReason = banReason;\n+    if (bantimeoffset <= 0)\n+    {\n+        bantimeoffset = m_default_ban_time;\n+        sinceUnixEpoch = false;\n+    }\n+    banEntry.nBanUntil = (sinceUnixEpoch ? 0 : GetTime() )+bantimeoffset;\n+\n+    {\n+        LOCK(m_cs_banned);\n+        if (m_banned[subNet].nBanUntil < banEntry.nBanUntil) {\n+            m_banned[subNet] = banEntry;\n+            m_is_dirty = true;\n+        }\n+        else\n+            return;\n+    }\n+    if(m_client_interface)\n+        m_client_interface->BannedListChanged();\n+\n+    if(banReason == BanReasonManuallyAdded)\n+        DumpBanlist(); //store banlist to disk immediately if user requested ban\n+}\n+\n+bool BanMan::Unban(const CNetAddr &addr) {\n+    CSubNet subNet(addr);\n+    return Unban(subNet);\n+}\n+\n+bool BanMan::Unban(const CSubNet &subNet) {\n+    {\n+        LOCK(m_cs_banned);\n+        if (!m_banned.erase(subNet))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229334235",
      "id" : 229334235,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzNDIzNQ==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 139,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 169809341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229334235",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229337596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229337596"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since this is new code - please run all new C++ files through `clang-format` (using the project local settings) to get the expected formatting.",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-30T14:47:42Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap); // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if(m_client_interface)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229337596",
      "id" : 229337596,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzNzU5Ng==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 68,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 169813779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229337596",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229482681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229482681"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could this be re-formulated to avoid reassigning parameters?",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-30T20:55:33Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap); // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if(m_client_interface)\n+        m_client_interface->BannedListChanged();\n+}\n+\n+bool BanMan::IsBanned(CNetAddr ip)\n+{\n+    LOCK(m_cs_banned);\n+    for (const auto& it : m_banned) {\n+        CSubNet subNet = it.first;\n+        CBanEntry banEntry = it.second;\n+\n+        if (subNet.Match(ip) && GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool BanMan::IsBanned(CSubNet subnet)\n+{\n+    LOCK(m_cs_banned);\n+    banmap_t::iterator i = m_banned.find(subnet);\n+    if (i != m_banned.end())\n+    {\n+        CBanEntry banEntry = (*i).second;\n+        if (GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+void BanMan::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CSubNet subNet(addr);\n+    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+}\n+\n+void BanMan::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CBanEntry banEntry(GetTime());\n+    banEntry.banReason = banReason;\n+    if (bantimeoffset <= 0)\n+    {\n+        bantimeoffset = m_default_ban_time;\n+        sinceUnixEpoch = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229482681",
      "id" : 229482681,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTQ4MjY4MQ==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 111,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 169995745,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229482681",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229563039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229563039"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See: https://github.com/bitcoin/bitcoin/pull/14605/commits/5dac8bf9616749b832ce14ccace4a2ab6eaf187b",
      "commit_id" : "973d78f7f0a2af27c870435752272ac1483316d0",
      "created_at" : "2018-10-31T04:48:43Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap); // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if(m_client_interface)\n+        m_client_interface->BannedListChanged();\n+}\n+\n+bool BanMan::IsBanned(CNetAddr ip)\n+{\n+    LOCK(m_cs_banned);\n+    for (const auto& it : m_banned) {\n+        CSubNet subNet = it.first;\n+        CBanEntry banEntry = it.second;\n+\n+        if (subNet.Match(ip) && GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool BanMan::IsBanned(CSubNet subnet)\n+{\n+    LOCK(m_cs_banned);\n+    banmap_t::iterator i = m_banned.find(subnet);\n+    if (i != m_banned.end())\n+    {\n+        CBanEntry banEntry = (*i).second;\n+        if (GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+void BanMan::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CSubNet subNet(addr);\n+    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+}\n+\n+void BanMan::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CBanEntry banEntry(GetTime());\n+    banEntry.banReason = banReason;\n+    if (bantimeoffset <= 0)\n+    {\n+        bantimeoffset = m_default_ban_time;\n+        sinceUnixEpoch = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229563039",
      "id" : 229563039,
      "in_reply_to_id" : 229482681,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTU2MzAzOQ==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 111,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 170091720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-10-31T04:48:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229563039",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "thank you for picking this up!\r\nWe welcome the Ban Man to our kingdom",
      "created_at" : "2018-10-31T17:14:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#issuecomment-434772194",
      "id" : 434772194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14605",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNDc3MjE5NA==",
      "updated_at" : "2018-10-31T17:21:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/434772194",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229867404"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229867404"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Reformulated in https://github.com/bitcoin/bitcoin/pull/14605/commits/36e6b241d0ed6f6d6ab503d61dfd95053202ce9b, let me know if you think that's good",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-10-31T21:03:59Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap); // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if(m_client_interface)\n+        m_client_interface->BannedListChanged();\n+}\n+\n+bool BanMan::IsBanned(CNetAddr ip)\n+{\n+    LOCK(m_cs_banned);\n+    for (const auto& it : m_banned) {\n+        CSubNet subNet = it.first;\n+        CBanEntry banEntry = it.second;\n+\n+        if (subNet.Match(ip) && GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool BanMan::IsBanned(CSubNet subnet)\n+{\n+    LOCK(m_cs_banned);\n+    banmap_t::iterator i = m_banned.find(subnet);\n+    if (i != m_banned.end())\n+    {\n+        CBanEntry banEntry = (*i).second;\n+        if (GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+void BanMan::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CSubNet subNet(addr);\n+    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+}\n+\n+void BanMan::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CBanEntry banEntry(GetTime());\n+    banEntry.banReason = banReason;\n+    if (bantimeoffset <= 0)\n+    {\n+        bantimeoffset = m_default_ban_time;\n+        sinceUnixEpoch = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r229867404",
      "id" : 229867404,
      "in_reply_to_id" : 229482681,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTg2NzQwNA==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 111,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 170471761,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229867404",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "No merge conflicts, but it does need rebase [#14555]; current build fails wiith\r\n```c++\r\n/.../bitcoin/src/banman.cpp:10:10: fatal error: util.h: No such file or directory\r\n #include <util.h>\r\n          ^~~~~~~~\r\ncompilation terminated.\r\n```",
      "created_at" : "2018-11-06T13:10:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#issuecomment-436247077",
      "id" : 436247077,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14605",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjI0NzA3Nw==",
      "updated_at" : "2018-11-06T13:11:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436247077",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "created_at" : "2018-11-06T16:59:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#issuecomment-436327726",
      "id" : 436327726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14605",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjMyNzcyNg==",
      "updated_at" : "2018-11-06T16:59:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436327726",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r231216991"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231216991"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "since it's a new class and it mostly everywhere follows `snake_case` notation, WDYS to stick to it and in a few other places?",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-11-06T17:25:03Z",
      "diff_hunk" : "@@ -0,0 +1,203 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <ui_interface.h>\n+#include <util/system.h>\n+#include <util/time.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap);        // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned();            // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if (m_client_interface)\n+        m_client_interface->BannedListChanged();\n+}\n+\n+bool BanMan::IsBanned(CNetAddr net_addr)\n+{\n+    LOCK(m_cs_banned);\n+    for (const auto& it : m_banned) {\n+        CSubNet sub_net = it.first;\n+        CBanEntry banEntry = it.second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r231216991",
      "id" : 231216991,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTIxNjk5MQ==",
      "original_commit_id" : "157684a341eb1bed3e7961b90af2cc5044ed7a17",
      "original_position" : 77,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 172137848,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231216991",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/296795?v=4",
         "events_url" : "https://api.github.com/users/kostyantyn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kostyantyn/followers",
         "following_url" : "https://api.github.com/users/kostyantyn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kostyantyn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kostyantyn",
         "id" : 296795,
         "login" : "kostyantyn",
         "node_id" : "MDQ6VXNlcjI5Njc5NQ==",
         "organizations_url" : "https://api.github.com/users/kostyantyn/orgs",
         "received_events_url" : "https://api.github.com/users/kostyantyn/received_events",
         "repos_url" : "https://api.github.com/users/kostyantyn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kostyantyn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kostyantyn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kostyantyn"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r234008081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234008081"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@dongcarl Nice! Thanks! :-)",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-11-15T21:07:41Z",
      "diff_hunk" : "@@ -0,0 +1,202 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <utiltime.h>\n+#include <util.h>\n+#include <ui_interface.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap); // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if(m_client_interface)\n+        m_client_interface->BannedListChanged();\n+}\n+\n+bool BanMan::IsBanned(CNetAddr ip)\n+{\n+    LOCK(m_cs_banned);\n+    for (const auto& it : m_banned) {\n+        CSubNet subNet = it.first;\n+        CBanEntry banEntry = it.second;\n+\n+        if (subNet.Match(ip) && GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool BanMan::IsBanned(CSubNet subnet)\n+{\n+    LOCK(m_cs_banned);\n+    banmap_t::iterator i = m_banned.find(subnet);\n+    if (i != m_banned.end())\n+    {\n+        CBanEntry banEntry = (*i).second;\n+        if (GetTime() < banEntry.nBanUntil) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+void BanMan::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CSubNet subNet(addr);\n+    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+}\n+\n+void BanMan::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\n+    CBanEntry banEntry(GetTime());\n+    banEntry.banReason = banReason;\n+    if (bantimeoffset <= 0)\n+    {\n+        bantimeoffset = m_default_ban_time;\n+        sinceUnixEpoch = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r234008081",
      "id" : 234008081,
      "in_reply_to_id" : 229482681,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDAwODA4MQ==",
      "original_commit_id" : "af2c6548323b8e24cabe6c1ecc8d95c1f9c336f2",
      "original_position" : 111,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 175556296,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-11-28T17:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234008081",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased, and addressed casing concerns. Additional review welcome.",
      "created_at" : "2018-11-17T02:04:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#issuecomment-439578933",
      "id" : 439578933,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14605",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTU3ODkzMw==",
      "updated_at" : "2018-11-17T02:04:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439578933",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-11-28T16:40:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#issuecomment-442515721",
      "id" : 442515721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14605",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MjUxNTcyMQ==",
      "updated_at" : "2018-11-28T16:40:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442515721",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238845235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238845235"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This can now use MakeUnique.",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-12-04T21:27:28Z",
      "diff_hunk" : "@@ -1278,11 +1283,12 @@ bool AppInitMain(InitInterfaces& interfaces)\n     // is not yet setup and may end up being set up twice if we\n     // need to reindex later.\n \n+    assert(!g_banman);\n+    g_banman = std::unique_ptr<BanMan>(new BanMan(&uiInterface));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238845235",
      "id" : 238845235,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODg0NTIzNQ==",
      "original_commit_id" : "701702427e1b5463469d886025a7038d539fb8c5",
      "original_position" : 26,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 181487790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-12-04T22:46:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238845235",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd like to review this soon, but is there a description of what high level goal of this PR is? Is it cleanup geared towards making code maintenance easier? Or is it intended to enable a new feature? Is it cleaning up technical debt from a previously added feature? The previous PR #14605 just says it \"breaks the ban/unban functions out of CConnman and into a new class because, while logically bans are tied to connections, they're really just entries in a database,\" which I think justifies the change but doesn't really motivate it.",
      "created_at" : "2018-12-04T21:35:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#issuecomment-444267474",
      "id" : 444267474,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14605",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NDI2NzQ3NA==",
      "updated_at" : "2018-12-04T21:35:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/444267474",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238849008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238849008"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note for follow-up PR:\r\n\r\nconnman and banman pointers should be passed into NodeImpl's constructor. That would eliminate the use of globals here.",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-12-04T21:39:02Z",
      "diff_hunk" : "@@ -120,24 +120,24 @@ class NodeImpl : public Node\n     }\n     bool getBanned(banmap_t& banmap) override\n     {\n-        if (g_connman) {\n-            g_connman->GetBanned(banmap);\n+        if (g_banman) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238849008",
      "id" : 238849008,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODg0OTAwOA==",
      "original_commit_id" : "701702427e1b5463469d886025a7038d539fb8c5",
      "original_position" : 6,
      "path" : "src/interfaces/node.cpp",
      "position" : 14,
      "pull_request_review_id" : 181487790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-12-04T22:46:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238849008",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238855206"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238855206"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@kostyantyn That'd be fine in a follow-up PR, but the primary interest here is renaming the member variables so that they're immediately distinguishable.",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-12-04T21:56:54Z",
      "diff_hunk" : "@@ -0,0 +1,203 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+\n+#include <netaddress.h>\n+#include <ui_interface.h>\n+#include <util/system.h>\n+#include <util/time.h>\n+\n+\n+BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time) : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n+{\n+    if (m_client_interface)\n+        m_client_interface->InitMessage(_(\"Loading banlist...\"));\n+\n+    int64_t nStart = GetTimeMillis();\n+    m_is_dirty = false;\n+    banmap_t banmap;\n+    if (m_ban_db.Read(banmap)) {\n+        SetBanned(banmap);        // thread save setter\n+        SetBannedSetDirty(false); // no need to write down, just read data\n+        SweepBanned();            // sweep out unused entries\n+\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else {\n+        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        SetBannedSetDirty(true); // force write\n+        DumpBanlist();\n+    }\n+}\n+\n+BanMan::~BanMan()\n+{\n+    DumpBanlist();\n+}\n+\n+void BanMan::DumpBanlist()\n+{\n+    SweepBanned(); // clean unused entries (if bantime has expired)\n+\n+    if (!BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n+    banmap_t banmap;\n+    GetBanned(banmap);\n+    if (m_ban_db.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n+\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+void BanMan::ClearBanned()\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        m_banned.clear();\n+        m_is_dirty = true;\n+    }\n+    DumpBanlist(); //store banlist to disk\n+    if (m_client_interface)\n+        m_client_interface->BannedListChanged();\n+}\n+\n+bool BanMan::IsBanned(CNetAddr net_addr)\n+{\n+    LOCK(m_cs_banned);\n+    for (const auto& it : m_banned) {\n+        CSubNet sub_net = it.first;\n+        CBanEntry banEntry = it.second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238855206",
      "id" : 238855206,
      "in_reply_to_id" : 231216991,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODg1NTIwNg==",
      "original_commit_id" : "157684a341eb1bed3e7961b90af2cc5044ed7a17",
      "original_position" : 77,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 181487790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-12-04T22:46:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238855206",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238863651"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238863651"
         }
      },
      "author_association" : "MEMBER",
      "body" : "normalized_sinceUnixEpoch should be a bool.",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-12-04T22:25:34Z",
      "diff_hunk" : "@@ -106,11 +106,14 @@ void BanMan::Ban(const CSubNet& subNet, const BanReason& banReason, int64_t bant\n {\n     CBanEntry banEntry(GetTime());\n     banEntry.banReason = banReason;\n+\n+    int64_t normalized_bantimeoffset = bantimeoffset;\n+    int64_t normalized_sinceUnixEpoch = sinceUnixEpoch;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238863651",
      "id" : 238863651,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODg2MzY1MQ==",
      "original_commit_id" : "5090c8c9fd967c066c7bb8aa4170c1f5b0d9cbf3",
      "original_position" : 6,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 181487790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-12-04T22:46:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238863651",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238864267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238864267"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hungarian or snake_case, pick one :)",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-12-04T22:27:36Z",
      "diff_hunk" : "@@ -25,7 +25,7 @@ BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t\n         SweepBanned();            // sweep out unused entries\n \n         LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n-            banmap.size(), GetTimeMillis() - nStart);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238864267",
      "id" : 238864267,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODg2NDI2Nw==",
      "original_commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "original_position" : 13,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 181487790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-12-04T22:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238864267",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238867453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238867453"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please don't use special-cases in scripted-diffs to negate part of a change, as that means that manual review is required.\r\n\r\nInstead, please add a commit before the scripted-diff which renames any necessary conflicts.",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-12-04T22:38:24Z",
      "diff_hunk" : "@@ -69,78 +69,78 @@ void BanMan::ClearBanned()\n         m_client_interface->BannedListChanged();\n }\n \n-bool BanMan::IsBanned(CNetAddr netAddr)\n+bool BanMan::IsBanned(CNetAddr net_addr)\n {\n     LOCK(m_cs_banned);\n     for (const auto& it : m_banned) {\n-        CSubNet subNet = it.first;\n-        CBanEntry banEntry = it.second;\n+        CSubNet sub_net = it.first;\n+        CBanEntry ban_entry = it.second;\n \n-        if (subNet.Match(netAddr) && GetTime() < banEntry.nBanUntil) {\n+        if (sub_net.Match(net_addr) && GetTime() < ban_entry.nBanUntil) {\n             return true;\n         }\n     }\n     return false;\n }\n \n-bool BanMan::IsBanned(CSubNet subNet)\n+bool BanMan::IsBanned(CSubNet sub_net)\n {\n     LOCK(m_cs_banned);\n-    banmap_t::iterator i = m_banned.find(subNet);\n+    banmap_t::iterator i = m_banned.find(sub_net);\n     if (i != m_banned.end()) {\n-        CBanEntry banEntry = (*i).second;\n-        if (GetTime() < banEntry.nBanUntil) {\n+        CBanEntry ban_entry = (*i).second;\n+        if (GetTime() < ban_entry.nBanUntil) {\n             return true;\n         }\n     }\n     return false;\n }\n \n-void BanMan::Ban(const CNetAddr& netAddr, const BanReason& banReason, int64_t bantimeoffset, bool sinceUnixEpoch)\n+void BanMan::Ban(const CNetAddr& net_addr, const BanReason& ban_reason, int64_t ban_time_offset, bool since_unix_epoch)\n {\n-    CSubNet subNet(netAddr);\n-    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+    CSubNet sub_net(net_addr);\n+    Ban(sub_net, ban_reason, ban_time_offset, since_unix_epoch);\n }\n \n-void BanMan::Ban(const CSubNet& subNet, const BanReason& banReason, int64_t bantimeoffset, bool sinceUnixEpoch)\n+void BanMan::Ban(const CSubNet& sub_net, const BanReason& ban_reason, int64_t ban_time_offset, bool since_unix_epoch)\n {\n-    CBanEntry banEntry(GetTime());\n-    banEntry.banReason = banReason;\n-\n-    int64_t normalized_bantimeoffset = bantimeoffset;\n-    int64_t normalized_sinceUnixEpoch = sinceUnixEpoch;\n-    if (bantimeoffset <= 0) {\n-        normalized_bantimeoffset = m_default_ban_time;\n-        normalized_sinceUnixEpoch = false;\n+    CBanEntry ban_entry(GetTime());\n+    ban_entry.banReason = ban_reason;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238867453",
      "id" : 238867453,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODg2NzQ1Mw==",
      "original_commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "original_position" : 96,
      "path" : "src/banman.cpp",
      "position" : 108,
      "pull_request_review_id" : 181487790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-12-04T22:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238867453",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky This is one step (one of the big ones) closer to instantiated CConnman (self-contained and no-globals), which would allow for all kinds of cool things, primarily running separate net instances against each-other.\r\n\r\nAnother nice side-effect of the above is that once self-contained, bitcoind could be run (or even compiled!) without net support.\r\n\r\nEdit: See my comment here as an example of next steps: https://github.com/bitcoin/bitcoin/pull/14605#discussion_r238849008",
      "created_at" : "2018-12-04T22:49:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#issuecomment-444289739",
      "id" : 444289739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14605",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NDI4OTczOQ==",
      "updated_at" : "2018-12-04T22:51:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/444289739",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r239071958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239071958"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do you mean rename `CBanEntry.banReason` to `CBanEntry.m_ban_reason` before the scripted diff?",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-12-05T13:54:41Z",
      "diff_hunk" : "@@ -69,78 +69,78 @@ void BanMan::ClearBanned()\n         m_client_interface->BannedListChanged();\n }\n \n-bool BanMan::IsBanned(CNetAddr netAddr)\n+bool BanMan::IsBanned(CNetAddr net_addr)\n {\n     LOCK(m_cs_banned);\n     for (const auto& it : m_banned) {\n-        CSubNet subNet = it.first;\n-        CBanEntry banEntry = it.second;\n+        CSubNet sub_net = it.first;\n+        CBanEntry ban_entry = it.second;\n \n-        if (subNet.Match(netAddr) && GetTime() < banEntry.nBanUntil) {\n+        if (sub_net.Match(net_addr) && GetTime() < ban_entry.nBanUntil) {\n             return true;\n         }\n     }\n     return false;\n }\n \n-bool BanMan::IsBanned(CSubNet subNet)\n+bool BanMan::IsBanned(CSubNet sub_net)\n {\n     LOCK(m_cs_banned);\n-    banmap_t::iterator i = m_banned.find(subNet);\n+    banmap_t::iterator i = m_banned.find(sub_net);\n     if (i != m_banned.end()) {\n-        CBanEntry banEntry = (*i).second;\n-        if (GetTime() < banEntry.nBanUntil) {\n+        CBanEntry ban_entry = (*i).second;\n+        if (GetTime() < ban_entry.nBanUntil) {\n             return true;\n         }\n     }\n     return false;\n }\n \n-void BanMan::Ban(const CNetAddr& netAddr, const BanReason& banReason, int64_t bantimeoffset, bool sinceUnixEpoch)\n+void BanMan::Ban(const CNetAddr& net_addr, const BanReason& ban_reason, int64_t ban_time_offset, bool since_unix_epoch)\n {\n-    CSubNet subNet(netAddr);\n-    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+    CSubNet sub_net(net_addr);\n+    Ban(sub_net, ban_reason, ban_time_offset, since_unix_epoch);\n }\n \n-void BanMan::Ban(const CSubNet& subNet, const BanReason& banReason, int64_t bantimeoffset, bool sinceUnixEpoch)\n+void BanMan::Ban(const CSubNet& sub_net, const BanReason& ban_reason, int64_t ban_time_offset, bool since_unix_epoch)\n {\n-    CBanEntry banEntry(GetTime());\n-    banEntry.banReason = banReason;\n-\n-    int64_t normalized_bantimeoffset = bantimeoffset;\n-    int64_t normalized_sinceUnixEpoch = sinceUnixEpoch;\n-    if (bantimeoffset <= 0) {\n-        normalized_bantimeoffset = m_default_ban_time;\n-        normalized_sinceUnixEpoch = false;\n+    CBanEntry ban_entry(GetTime());\n+    ban_entry.banReason = ban_reason;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r239071958",
      "id" : 239071958,
      "in_reply_to_id" : 238867453,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTA3MTk1OA==",
      "original_commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "original_position" : 96,
      "path" : "src/banman.cpp",
      "position" : 108,
      "pull_request_review_id" : 181765187,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-12-05T13:54:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239071958",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r239072804"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239072804"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed in 9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f, unless this should be squashed in",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-12-05T13:56:45Z",
      "diff_hunk" : "@@ -25,7 +25,7 @@ BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t\n         SweepBanned();            // sweep out unused entries\n \n         LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n-            banmap.size(), GetTimeMillis() - nStart);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r239072804",
      "id" : 239072804,
      "in_reply_to_id" : 238864267,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTA3MjgwNA==",
      "original_commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "original_position" : 13,
      "path" : "src/banman.cpp",
      "position" : null,
      "pull_request_review_id" : 181766249,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-12-05T13:57:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239072804",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r239638482"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239638482"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How about just first adding a commit to hack around it so that we don't have to use the var by name?\r\n```patch\r\ndiff --git a/src/addrdb.h b/src/addrdb.h\r\nindex 90eca44..f50442f 100644\r\n--- a/src/addrdb.h\r\n+++ b/src/addrdb.h\r\n@@ -43,6 +43,11 @@ public:\r\n         nCreateTime = nCreateTimeIn;\r\n     }\r\n\r\n+    explicit CBanEntry(int64_t nCreateTimeIn, BanReason banReasonIn) : CBanEntry(nCreateTimeIn)\r\n+    {\r\n+        banReason = banReasonIn;\r\n+    }\r\n+\r\n     ADD_SERIALIZE_METHODS;\r\n\r\n     template <typename Stream, typename Operation>\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex fde85b0..db97ae8 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -540,8 +540,7 @@ void CConnman::Ban(const CNetAddr& addr, const BanReason &banReason, int64_t ban\r\n }\r\n\r\n void CConnman::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t bantimeoffset, bool sinceUnixEpoch) {\r\n-    CBanEntry banEntry(GetTime());\r\n-    banEntry.banReason = banReason;\r\n+    CBanEntry banEntry(GetTime(), banReason);\r\n     if (bantimeoffset <= 0)\r\n     {\r\n         bantimeoffset = gArgs.GetArg(\"-bantime\", DEFAULT_MISBEHAVING_BANTIME);\r\n```\r\n\r\nAfter that, I believe the scripted diff should work without hacks.",
      "commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "created_at" : "2018-12-06T22:27:37Z",
      "diff_hunk" : "@@ -69,78 +69,78 @@ void BanMan::ClearBanned()\n         m_client_interface->BannedListChanged();\n }\n \n-bool BanMan::IsBanned(CNetAddr netAddr)\n+bool BanMan::IsBanned(CNetAddr net_addr)\n {\n     LOCK(m_cs_banned);\n     for (const auto& it : m_banned) {\n-        CSubNet subNet = it.first;\n-        CBanEntry banEntry = it.second;\n+        CSubNet sub_net = it.first;\n+        CBanEntry ban_entry = it.second;\n \n-        if (subNet.Match(netAddr) && GetTime() < banEntry.nBanUntil) {\n+        if (sub_net.Match(net_addr) && GetTime() < ban_entry.nBanUntil) {\n             return true;\n         }\n     }\n     return false;\n }\n \n-bool BanMan::IsBanned(CSubNet subNet)\n+bool BanMan::IsBanned(CSubNet sub_net)\n {\n     LOCK(m_cs_banned);\n-    banmap_t::iterator i = m_banned.find(subNet);\n+    banmap_t::iterator i = m_banned.find(sub_net);\n     if (i != m_banned.end()) {\n-        CBanEntry banEntry = (*i).second;\n-        if (GetTime() < banEntry.nBanUntil) {\n+        CBanEntry ban_entry = (*i).second;\n+        if (GetTime() < ban_entry.nBanUntil) {\n             return true;\n         }\n     }\n     return false;\n }\n \n-void BanMan::Ban(const CNetAddr& netAddr, const BanReason& banReason, int64_t bantimeoffset, bool sinceUnixEpoch)\n+void BanMan::Ban(const CNetAddr& net_addr, const BanReason& ban_reason, int64_t ban_time_offset, bool since_unix_epoch)\n {\n-    CSubNet subNet(netAddr);\n-    Ban(subNet, banReason, bantimeoffset, sinceUnixEpoch);\n+    CSubNet sub_net(net_addr);\n+    Ban(sub_net, ban_reason, ban_time_offset, since_unix_epoch);\n }\n \n-void BanMan::Ban(const CSubNet& subNet, const BanReason& banReason, int64_t bantimeoffset, bool sinceUnixEpoch)\n+void BanMan::Ban(const CSubNet& sub_net, const BanReason& ban_reason, int64_t ban_time_offset, bool since_unix_epoch)\n {\n-    CBanEntry banEntry(GetTime());\n-    banEntry.banReason = banReason;\n-\n-    int64_t normalized_bantimeoffset = bantimeoffset;\n-    int64_t normalized_sinceUnixEpoch = sinceUnixEpoch;\n-    if (bantimeoffset <= 0) {\n-        normalized_bantimeoffset = m_default_ban_time;\n-        normalized_sinceUnixEpoch = false;\n+    CBanEntry ban_entry(GetTime());\n+    ban_entry.banReason = ban_reason;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14605#discussion_r239638482",
      "id" : 239638482,
      "in_reply_to_id" : 238867453,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTYzODQ4Mg==",
      "original_commit_id" : "9bad9fa1168ec53e92bb8b2df0b5e9d578344a2f",
      "original_position" : 96,
      "path" : "src/banman.cpp",
      "position" : 108,
      "pull_request_review_id" : 182478518,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14605",
      "updated_at" : "2018-12-06T22:27:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/239638482",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]
