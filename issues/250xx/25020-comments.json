[
   {
      "author_association" : "MEMBER",
      "body" : "> In the light of a new [shared library](https://github.com/bitcoin/bitcoin/pull/bitcoin/bitcoin#24322) it looks reasonable to start checking shared library symbols.\r\n\r\nYes, very good idea, Concept ACK.",
      "created_at" : "2022-05-03T12:34:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25020#issuecomment-1116047825",
      "id" : 1116047825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25020",
      "node_id" : "IC_kwDOABII585ChYnR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1116047825/reactions"
      },
      "updated_at" : "2022-05-03T12:34:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1116047825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r863728938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863728938"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think one of the most important things to check for shared libraries is that they export the right symbols (to make sure their entire API is available), and only the right symbols (extra and re-exported symbols can cause conflicts).",
      "commit_id" : "39947be795102e8a8e11aba9a13d9cfe768a092c",
      "created_at" : "2022-05-03T12:36:42Z",
      "diff_hunk" : "@@ -176,77 +180,82 @@ def check_version(max_versions, version, arch) -> bool:\n def check_imported_symbols(binary) -> bool:\n     ok: bool = True\n \n-    for symbol in binary.imported_symbols:\n+    for symbol in binary.concrete.imported_symbols:\n         if not symbol.imported:\n             continue\n \n         version = symbol.symbol_version if symbol.has_version else None\n \n         if version:\n             aux_version = version.symbol_version_auxiliary.name if version.has_auxiliary_version else None\n-            if aux_version and not check_version(MAX_VERSIONS, aux_version, binary.header.machine_type):\n+            if aux_version and not check_version(MAX_VERSIONS, aux_version, binary.concrete.header.machine_type):\n                 print(f'{filename}: symbol {symbol.name} from unsupported version {version}')\n                 ok = False\n     return ok\n \n def check_exported_symbols(binary) -> bool:\n     ok: bool = True\n+    if binary.abstract.header.object_type == lief.OBJECT_TYPES.LIBRARY:\n+        return ok",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r863728938",
      "id" : 863728938,
      "line" : 199,
      "node_id" : "PRRC_kwDOABII584ze3Uq",
      "original_commit_id" : "39947be795102e8a8e11aba9a13d9cfe768a092c",
      "original_line" : 199,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "contrib/devtools/symbol-check.py",
      "position" : 66,
      "pull_request_review_id" : 960307529,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863728938/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-03T13:29:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863728938",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r863763301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863763301"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yea, that is what I assumed this would be doing when I first looked. Otherwise I think the checks currently being added are ~0.",
      "commit_id" : "39947be795102e8a8e11aba9a13d9cfe768a092c",
      "created_at" : "2022-05-03T13:18:46Z",
      "diff_hunk" : "@@ -176,77 +180,82 @@ def check_version(max_versions, version, arch) -> bool:\n def check_imported_symbols(binary) -> bool:\n     ok: bool = True\n \n-    for symbol in binary.imported_symbols:\n+    for symbol in binary.concrete.imported_symbols:\n         if not symbol.imported:\n             continue\n \n         version = symbol.symbol_version if symbol.has_version else None\n \n         if version:\n             aux_version = version.symbol_version_auxiliary.name if version.has_auxiliary_version else None\n-            if aux_version and not check_version(MAX_VERSIONS, aux_version, binary.header.machine_type):\n+            if aux_version and not check_version(MAX_VERSIONS, aux_version, binary.concrete.header.machine_type):\n                 print(f'{filename}: symbol {symbol.name} from unsupported version {version}')\n                 ok = False\n     return ok\n \n def check_exported_symbols(binary) -> bool:\n     ok: bool = True\n+    if binary.abstract.header.object_type == lief.OBJECT_TYPES.LIBRARY:\n+        return ok",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r863763301",
      "id" : 863763301,
      "in_reply_to_id" : 863728938,
      "line" : 199,
      "node_id" : "PRRC_kwDOABII584ze_tl",
      "original_commit_id" : "39947be795102e8a8e11aba9a13d9cfe768a092c",
      "original_line" : 199,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "contrib/devtools/symbol-check.py",
      "position" : 66,
      "pull_request_review_id" : 960357378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863763301/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-03T13:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863763301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r863765821"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863765821"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> 2012abe043ca00525ef39b31c844f52ecf1963d9: contrib: Always explicitly cast lief.Binary object \r\n\r\nWhy?",
      "commit_id" : "39947be795102e8a8e11aba9a13d9cfe768a092c",
      "created_at" : "2022-05-03T13:21:38Z",
      "diff_hunk" : "@@ -176,76 +176,76 @@ def check_version(max_versions, version, arch) -> bool:\n def check_imported_symbols(binary) -> bool:\n     ok: bool = True\n \n-    for symbol in binary.imported_symbols:\n+    for symbol in binary.concrete.imported_symbols:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r863765821",
      "id" : 863765821,
      "line" : 183,
      "node_id" : "PRRC_kwDOABII584zfAU9",
      "original_commit_id" : "2012abe043ca00525ef39b31c844f52ecf1963d9",
      "original_line" : 179,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "contrib/devtools/symbol-check.py",
      "position" : 5,
      "pull_request_review_id" : 960361089,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863765821/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-03T13:21:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863765821",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r885637804"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885637804"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Let's not hardcode this name here. If we need to skip this, please define another constant for the list of libraries to skip.",
      "commit_id" : "39947be795102e8a8e11aba9a13d9cfe768a092c",
      "created_at" : "2022-05-31T13:27:14Z",
      "diff_hunk" : "@@ -176,77 +180,82 @@ def check_version(max_versions, version, arch) -> bool:\n def check_imported_symbols(binary) -> bool:\n     ok: bool = True\n \n-    for symbol in binary.imported_symbols:\n+    for symbol in binary.concrete.imported_symbols:\n         if not symbol.imported:\n             continue\n \n         version = symbol.symbol_version if symbol.has_version else None\n \n         if version:\n             aux_version = version.symbol_version_auxiliary.name if version.has_auxiliary_version else None\n-            if aux_version and not check_version(MAX_VERSIONS, aux_version, binary.header.machine_type):\n+            if aux_version and not check_version(MAX_VERSIONS, aux_version, binary.concrete.header.machine_type):\n                 print(f'{filename}: symbol {symbol.name} from unsupported version {version}')\n                 ok = False\n     return ok\n \n def check_exported_symbols(binary) -> bool:\n     ok: bool = True\n+    if binary.abstract.header.object_type == lief.OBJECT_TYPES.LIBRARY:\n+        return ok\n \n-    for symbol in binary.dynamic_symbols:\n+    for symbol in binary.concrete.dynamic_symbols:\n         if not symbol.exported:\n             continue\n         name = symbol.name\n-        if binary.header.machine_type == lief.ELF.ARCH.RISCV or name in IGNORE_EXPORTS:\n+        if binary.concrete.header.machine_type == lief.ELF.ARCH.RISCV or name in IGNORE_EXPORTS:\n             continue\n-        print(f'{binary.name}: export of symbol {name} not allowed!')\n+        print(f'{filename}: export of symbol {name} not allowed!')\n         ok = False\n     return ok\n \n def check_ELF_libraries(binary) -> bool:\n     ok: bool = True\n-    for library in binary.libraries:\n+    for library in binary.concrete.libraries:\n         if library not in ELF_ALLOWED_LIBRARIES:\n             print(f'{filename}: {library} is not in ALLOWED_LIBRARIES!')\n             ok = False\n     return ok\n \n def check_MACHO_libraries(binary) -> bool:\n     ok: bool = True\n-    for dylib in binary.libraries:\n-        split = dylib.name.split('/')\n-        if split[-1] not in MACHO_ALLOWED_LIBRARIES:\n-            print(f'{split[-1]} is not in ALLOWED_LIBRARIES!')\n+    for dylib in binary.concrete.libraries:\n+        library = dylib.name.split('/')[-1]\n+        if binary.abstract.header.object_type == lief.OBJECT_TYPES.LIBRARY and library == 'libbitcoinconsensus.0.dylib':",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r885637804",
      "id" : 885637804,
      "line" : 223,
      "node_id" : "PRRC_kwDOABII5840ycKs",
      "original_commit_id" : "39947be795102e8a8e11aba9a13d9cfe768a092c",
      "original_line" : 223,
      "original_position" : 98,
      "original_start_line" : null,
      "path" : "contrib/devtools/symbol-check.py",
      "position" : 98,
      "pull_request_review_id" : 990450733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885637804/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T13:27:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885637804",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r885641952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885641952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I also wonder, it's a bit ugly to have `.concrete` everywhere.",
      "commit_id" : "39947be795102e8a8e11aba9a13d9cfe768a092c",
      "created_at" : "2022-05-31T13:30:44Z",
      "diff_hunk" : "@@ -176,76 +176,76 @@ def check_version(max_versions, version, arch) -> bool:\n def check_imported_symbols(binary) -> bool:\n     ok: bool = True\n \n-    for symbol in binary.imported_symbols:\n+    for symbol in binary.concrete.imported_symbols:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r885641952",
      "id" : 885641952,
      "in_reply_to_id" : 863765821,
      "line" : 183,
      "node_id" : "PRRC_kwDOABII5840ydLg",
      "original_commit_id" : "2012abe043ca00525ef39b31c844f52ecf1963d9",
      "original_line" : 179,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "contrib/devtools/symbol-check.py",
      "position" : 5,
      "pull_request_review_id" : 990456729,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885641952/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T13:30:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885641952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Speaking of checking exported symbols, I checked `libbitcoinconsensus.so` from 23.0 and there's a ton of unnecessary symbols being exported:\r\n```\r\n$ objdump -T bitcoin-23.0/lib/libbitcoinconsensus.so|grep -v UND\r\nbitcoin-23.0/lib/libbitcoinconsensus.so:     file format elf64-x86-64\r\n\r\nDYNAMIC SYMBOL TABLE:\r\n00000000000203f0  w   DF .text  00000000000000d3  Base        _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_\r\n000000000002b850  w   DF .text  0000000000000373  Base        _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK5CTxInPS2_EET0_T_S7_S6_\r\n0000000000026100  w   DF .text  0000000000000062  Base        _ZNSt12_Vector_baseIhSaIhEED1Ev\r\n00000000000293d0 g    DF .text  0000000000000037  Base        bitcoinconsensus_version\r\n0000000000042aa0  w   DF .text  00000000000000e2  Base        _ZNSt6vectorIhSaIhEE7reserveEm\r\n0000000000038010  w   DF .text  0000000000000178  Base        _ZNSt6vectorIhSaIhEE17_M_realloc_insertIJhEEEvN9__gnu_cxx17__normal_iteratorIPhS1_EEDpOT_\r\n0000000000037aa0  w   DF .text  000000000000012d  Base        _ZNSt6vectorIS_IhSaIhEESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EES7_\r\n00000000000059b9  w   DF .text  0000000000000048  Base        _ZSt27__throw_bad_optional_accessv\r\n00000000000375f0  w   DF .text  00000000000000b6  Base        _ZNSt6vectorIhSaIhEEC2ERKS1_\r\n0000000000037e20  w   DF .text  00000000000001e5  Base        _ZNSt6vectorIS_IhSaIhEESaIS1_EE17_M_default_appendEm\r\n00000000000366d0  w   DF .text  0000000000000042  Base        _ZNSt19bad_optional_accessD2Ev\r\n00000000001719f0  w   DO .data.rel.ro   0000000000000028  Base        _ZTVSt19bad_optional_access\r\n00000000000366d0  w   DF .text  0000000000000042  Base        _ZNSt19bad_optional_accessD1Ev\r\n0000000000054e80  w   DO .rodata        0000000000000018  Base        _ZTSSt19bad_optional_access\r\n00000000000429f0  w   DF .text  00000000000000a7  Base        _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_\r\n0000000000042fb0  w   DF .text  00000000000000d4  Base        _ZNSt8__detail18__from_chars_digitIjEEbRPKcS2_RT_i\r\n0000000000036720  w   DF .text  0000000000000054  Base        _ZNSt19bad_optional_accessD0Ev\r\n0000000000020260  w   DF .text  0000000000000034  Base        _ZNKSt5ctypeIcE8do_widenEc\r\n0000000000021230  w   DF .text  0000000000000073  Base        _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev\r\n0000000000037980  w   DF .text  0000000000000120  Base        _ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_\r\n000000000002b680  w   DF .text  00000000000001cd  Base        _ZNSt6vectorIS_IhSaIhEESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_\r\n0000000000038190  w   DF .text  00000000000001e5  Base        _ZNSt6vectorIS_IhSaIhEESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_\r\n0000000000021230  w   DF .text  0000000000000073  Base        _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev\r\n00000000000212b0  w   DF .text  0000000000000081  Base        _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED0Ev\r\n00000000000361e0  w   DF .text  0000000000000039  Base        _ZNKSt19bad_optional_access4whatEv\r\n00000000000267f0  w   DF .text  0000000000000373  Base        _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_\r\n00000000001719a8  w   DO .data.rel.ro   0000000000000018  Base        _ZTISt19bad_optional_access\r\n0000000000036820  w   DF .text  0000000000000062  Base        _ZNSt6vectorIhSaIhEED2Ev\r\n00000000000375f0  w   DF .text  00000000000000b6  Base        _ZNSt6vectorIhSaIhEEC1ERKS1_\r\n00000000000203f0  w   DF .text  00000000000000d3  Base        _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_\r\n0000000000036820  w   DF .text  0000000000000062  Base        _ZNSt6vectorIhSaIhEED1Ev\r\n000000000002ae10 g    DF .text  000000000000006d  Base        bitcoinconsensus_verify_script\r\n0000000000051994 g    DF .fini  0000000000000000  Base        _fini\r\n0000000000004000 g    DF .init  0000000000000000  Base        _init\r\n0000000000037550  w   DF .text  000000000000009e  Base        _ZNSt6vectorIS_IhSaIhEESaIS1_EED2Ev\r\n00000000000376b0  w   DF .text  00000000000002cd  Base        _ZNSt6vectorIS_IhSaIhEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_\r\n0000000000037550  w   DF .text  000000000000009e  Base        _ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev\r\n0000000000037cc0  w   DF .text  0000000000000160  Base        _ZNSt6vectorIS_IhSaIhEESaIS1_EE13_M_insert_auxIS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEOT_\r\n0000000000037bd0  w   DF .text  00000000000000e3  Base        _ZNSt6vectorIS_IhSaIhEESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE\r\n000000000002adc0 g    DF .text  0000000000000049  Base        bitcoinconsensus_verify_script_with_amount\r\n0000000000042b90  w   DF .text  0000000000000178  Base        _ZNSt6vectorIhSaIhEE17_M_realloc_insertIJRKhEEEvN9__gnu_cxx17__normal_iteratorIPhS1_EEDpOT_\r\n0000000000042d10  w   DF .text  00000000000000dc  Base        _ZNSt8__detail18__from_chars_digitImEEbRPKcS2_RT_i\r\n000000000002af00  w   DF .text  00000000000000ce  Base        _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_\r\n0000000000026100  w   DF .text  0000000000000062  Base        _ZNSt12_Vector_baseIhSaIhEED2Ev\r\n```\r\nMost are related to C++ standard library (like vector), it seems? I wonder if there's a way to avoid this.",
      "created_at" : "2022-05-31T13:40:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25020#issuecomment-1142151675",
      "id" : 1142151675,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25020",
      "node_id" : "IC_kwDOABII585EE9n7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142151675/reactions"
      },
      "updated_at" : "2022-05-31T13:40:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142151675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj \r\n> Speaking of checking exported symbols, I checked `libbitcoinconsensus.so` from 23.0 and there's a ton of unnecessary symbols being exported:\r\n> \r\n> Most are related to C++ standard library (like vector), it seems? I wonder if there's a way to avoid this.\r\n\r\nIt appears, #24994 fixes it:\r\n```\r\n$ objdump -T bitcoin-c28bb15a117e-x86_64-linux-gnu/bitcoin-c28bb15a117e/lib/libbitcoinconsensus.so.0 | grep -v UND\r\n\r\nbitcoin-c28bb15a117e-x86_64-linux-gnu/bitcoin-c28bb15a117e/lib/libbitcoinconsensus.so.0:     file format elf64-x86-64\r\n\r\nDYNAMIC SYMBOL TABLE:\r\n0000000000003000 g    DF .init\t0000000000000000  Base        _init\r\n0000000000045494 g    DF .fini\t0000000000000000  Base        _fini\r\n0000000000004de0 g    DF .text\t0000000000000037  Base        bitcoinconsensus_version\r\n0000000000005230 g    DF .text\t0000000000000049  Base        bitcoinconsensus_verify_script_with_amount\r\n0000000000005280 g    DF .text\t000000000000006d  Base        bitcoinconsensus_verify_script\r\n\r\n\r\n```",
      "created_at" : "2022-06-05T11:17:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25020#issuecomment-1146786122",
      "id" : 1146786122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25020",
      "node_id" : "IC_kwDOABII585EWpFK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1146786122/reactions"
      },
      "updated_at" : "2022-06-05T11:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1146786122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r889683665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889683665"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Exactly. It was the initial idea of this PR. When I faced with a crowd of exported symbols, I decided to make this PR focused on introducing a tool, and leave fighting with linker issues for follow ups.",
      "commit_id" : "39947be795102e8a8e11aba9a13d9cfe768a092c",
      "created_at" : "2022-06-05T11:47:26Z",
      "diff_hunk" : "@@ -176,77 +180,82 @@ def check_version(max_versions, version, arch) -> bool:\n def check_imported_symbols(binary) -> bool:\n     ok: bool = True\n \n-    for symbol in binary.imported_symbols:\n+    for symbol in binary.concrete.imported_symbols:\n         if not symbol.imported:\n             continue\n \n         version = symbol.symbol_version if symbol.has_version else None\n \n         if version:\n             aux_version = version.symbol_version_auxiliary.name if version.has_auxiliary_version else None\n-            if aux_version and not check_version(MAX_VERSIONS, aux_version, binary.header.machine_type):\n+            if aux_version and not check_version(MAX_VERSIONS, aux_version, binary.concrete.header.machine_type):\n                 print(f'{filename}: symbol {symbol.name} from unsupported version {version}')\n                 ok = False\n     return ok\n \n def check_exported_symbols(binary) -> bool:\n     ok: bool = True\n+    if binary.abstract.header.object_type == lief.OBJECT_TYPES.LIBRARY:\n+        return ok",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25020#discussion_r889683665",
      "id" : 889683665,
      "in_reply_to_id" : 863728938,
      "line" : 199,
      "node_id" : "PRRC_kwDOABII5841B37R",
      "original_commit_id" : "39947be795102e8a8e11aba9a13d9cfe768a092c",
      "original_line" : 199,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "contrib/devtools/symbol-check.py",
      "position" : 66,
      "pull_request_review_id" : 995999248,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25020",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889683665/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-05T11:47:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889683665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
