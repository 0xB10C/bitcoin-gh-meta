[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25434](https://github.com/bitcoin/bitcoin/pull/25434) (mempool: Add option to bypass contextual timelocks in testmempoolaccept by w0xlt)\n* [#24836](https://github.com/bitcoin/bitcoin/pull/24836) (add RPC (-regtest only) for testing package policy by glozow)\n* [#24007](https://github.com/bitcoin/bitcoin/pull/24007) ([mempool] allow tx replacement by smaller witness by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-04-30T04:17:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1113911849",
      "id" : 1113911849,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
      "node_id" : "IC_kwDOABII585CZPIp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113911849/reactions"
      },
      "updated_at" : "2022-06-21T09:47:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113911849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\n$ ./test/lint/lint-python.py\r\ntest/functional/feature_package_rbf.py:18:1: F401 'test_framework.util.assert_equal' imported but unused\r\n```\r\n",
      "created_at" : "2022-05-03T14:21:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1116158353",
      "id" : 1116158353,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
      "node_id" : "IC_kwDOABII585ChzmR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1116158353/reactions"
      },
      "updated_at" : "2022-05-03T14:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1116158353",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "$ ./test/lint/lint-python.py\r\ntest/functional/feature_package_rbf.py:18:1: F401 'test_framework.util.assert_equal' imported but unused",
      "created_at" : "2022-05-09T02:50:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1120581194",
      "id" : 1120581194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
      "node_id" : "IC_kwDOABII585CyrZK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120581194/reactions"
      },
      "updated_at" : "2022-05-09T02:50:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120581194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/101321365?v=4",
         "events_url" : "https://api.github.com/users/ramsemune123/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ramsemune123/followers",
         "following_url" : "https://api.github.com/users/ramsemune123/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ramsemune123/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ramsemune123",
         "id" : 101321365,
         "login" : "ramsemune123",
         "node_id" : "U_kgDOBgoKlQ",
         "organizations_url" : "https://api.github.com/users/ramsemune123/orgs",
         "received_events_url" : "https://api.github.com/users/ramsemune123/received_events",
         "repos_url" : "https://api.github.com/users/ramsemune123/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ramsemune123/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ramsemune123/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ramsemune123"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r868430869"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868430869"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Reason to not turn `PackageTestAccept` as `true` too ?",
      "commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "created_at" : "2022-05-09T20:34:11Z",
      "diff_hunk" : "@@ -502,7 +505,7 @@ class MemPoolAccept\n                             /* m_bypass_limits */ false,\n                             /* m_coins_to_uncache */ coins_to_uncache,\n                             /* m_test_accept */ false,\n-                            /* m_allow_bip125_replacement */ false,\n+                            /* m_allow_bip125_replacement */ true,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r868430869",
      "id" : 868430869,
      "line" : 508,
      "node_id" : "PRRC_kwDOABII584zwzQV",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 508,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 15,
      "pull_request_review_id" : 966801973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868430869/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-09T22:25:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868430869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r868495787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868495787"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IIUC given that `PackageMempoolChecks` happens after package dedup there should not be remaining already-in-mempool transactions at that stage in `txns` ? So no descendants that could be `to-be-replaced mempool entries` to subtract or are you thinking to something else ? ",
      "commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "created_at" : "2022-05-09T21:42:14Z",
      "diff_hunk" : "@@ -975,13 +1006,89 @@ bool MemPoolAccept::PackageMempoolChecks(const std::vector<CTransactionRef>& txn\n     assert(std::all_of(txns.cbegin(), txns.cend(), [this](const auto& tx)\n                        { return !m_pool.exists(GenTxid::Txid(tx->GetHash()));}));\n \n+    // Populate with the union of all transactions' ancestors.\n+    CTxMemPool::setEntries m_collective_ancestors;\n+    for (const auto& ws : workspaces) {\n+        for (const auto& it : ws.m_ancestors) m_collective_ancestors.insert(it);\n+    }\n+\n     std::string err_string;\n     if (!m_pool.CheckPackageLimits(txns, m_limit_ancestors, m_limit_ancestor_size, m_limit_descendants,\n                                    m_limit_descendant_size, err_string)) {\n+        // TODO: When replacements exist, to avoid overestimating descendant counts, deduct the\n+        // to-be-replaced mempool entries when counting descendants. Note that this is not\n+        // necessarily as simple as subtracting the count/size from descendant limits, because\n+        // multiple transactions may conflict with the same entries, causing us to double-count them\n+        // and their descendants.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r868495787",
      "id" : 868495787,
      "line" : 1022,
      "node_id" : "PRRC_kwDOABII584zxDGr",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 1022,
      "original_position" : 221,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 221,
      "pull_request_review_id" : 966801973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868495787/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-09T22:25:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868495787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r868503310"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868503310"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure if this check isn't already redundant given that calling `ReplacementChecks` in `AcceptSingleTransaction` is dependent on `m_rbf=true` or unless there is another code path where it makes sense ?",
      "commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "created_at" : "2022-05-09T21:50:22Z",
      "diff_hunk" : "@@ -928,6 +952,9 @@ bool MemPoolAccept::ReplacementChecks(Workspace& ws)\n     const uint256& hash = ws.m_hash;\n     TxValidationState& state = ws.m_state;\n \n+    m_rbf = ws.m_conflicts.size() > 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r868503310",
      "id" : 868503310,
      "line" : 955,
      "node_id" : "PRRC_kwDOABII584zxE8O",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 955,
      "original_position" : 156,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 156,
      "pull_request_review_id" : 966801973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868503310/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-09T22:25:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868503310",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r868529657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868529657"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Depending on the design of p2p packages, we might relay the \"full-non-dedup\" version of the package as our peers might not have the same mempool composition. So the additional fees might have to be paid on the non-dedup package. I don't think we have to settle the question now though we might have to rework package-RBF in function of p2p design ?",
      "commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "created_at" : "2022-05-09T22:20:36Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package, including those that do not directly conflict with any mempool\n+   transactions, only include an unconfirmed input if that input was included in one of the directly\n+   conflicting transactions or is from another transaction in the package.\n+\n+4. The package fee after deduplication pays an absolute fee of at least the sum paid by the\n+   original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r868529657",
      "id" : 868529657,
      "line" : 137,
      "node_id" : "PRRC_kwDOABII584zxLX5",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 137,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 45,
      "pull_request_review_id" : 966801973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868529657/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-09T22:25:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868529657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r868533379"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868533379"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it could be a limitation for second-layer package issuers, where a child-with-parents package aims to replace more than 5 LN commitment transactions at the same time. A counterparty could extend the 5 non-related commitment transactions descendants until reaching max in-mempool limits, thus interfering with their potential package-RBF.\r\n\r\nAm I correct ? That said, I remember we've already said that child-with-parents to replace multiple LN commitment transactions open the door to malicious interferences.",
      "commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "created_at" : "2022-05-09T22:25:01Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package, including those that do not directly conflict with any mempool\n+   transactions, only include an unconfirmed input if that input was included in one of the directly\n+   conflicting transactions or is from another transaction in the package.\n+\n+4. The package fee after deduplication pays an absolute fee of at least the sum paid by the\n+   original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth after deduplication at or\n+   above the rate set by the node's incremental relay feerate. For example, if the incremental relay\n+   feerate is 1 satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the\n+   package fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+6. The number of original transactions does not exceed 100.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r868533379",
      "id" : 868533379,
      "line" : 143,
      "node_id" : "PRRC_kwDOABII584zxMSD",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 143,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 51,
      "pull_request_review_id" : 966801973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868533379/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-09T22:25:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868533379",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r869137839"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869137839"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This rule startled me a bit at first, it may be worth mentioning that if you want to update the package's child, you should do a normal RBF of just that child.\r\n\r\nWhat you mean is that package-rbf applies for the case where we want for example to replace `{commitTxAlice, anchorAlice}` by `{commitTxBob, anchorBob}` where `commitTxAlice` and `commitTxBob` conflict, but we cannot use package-rbf to replace `{commitTxAlice, anchorAlice1}` by `{commitTxAlice, anchorAlice2}` where `anchorAlice2` pays more fees than `anchorAlice1`. In that case we should submit `anchorAlice2` alone and it will go through the usual RBF rules. Is that correct?\r\n\r\nAlso you don't want to mix up package-rbf and normal rbf, so a child tx cannot create conflicts \"outside of the package\" IIUC.",
      "commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "created_at" : "2022-05-10T11:46:25Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r869137839",
      "id" : 869137839,
      "line" : 126,
      "node_id" : "PRRC_kwDOABII584zzf2v",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 126,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 34,
      "pull_request_review_id" : 967623639,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869137839/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-10T12:14:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869137839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r869152001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869152001"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "My head hurts :laughing: \r\n\r\nI'm not 100% sure I'm understanding this rule correctly, can you let me know if the following example makes sense?\r\n\r\nLet's imagine we have `{commitTxAlice, anchorTxAlice}` in the mempool that we want to replace.\r\nWhat we really want to do is to replace `commitTxAlice` by `commitTxBob` (the child is just a tool to achieve that).\r\nWe ask `bitcoind` to `fundrawtransaction` to ensure our `anchorTxBob` adds enough funds.\r\n`bitcoind` adds an unconfirmed (but safe) wallet input:\r\n\r\n```\r\n+-------------+\r\n| commitTxBob |---------+\r\n+-------------+         |      +-------------+\r\n                        |      |             |\r\n+------------------+    +----->| anchorTxBob |\r\n| previousWalletTx |---------->|             |\r\n+------------------+           +-------------+\r\n```\r\n\r\nIf we include `previousWalletTx` in the package, this package-rbf would work, right?\r\nBut if we don't include `previousWalletTx` in the package, this would be rejected?\r\n\r\nBut what if `previousWalletTx` itself has an unconfirmed parent?\r\nWe cannot include this grand-parent in the package (since packages are only parents-with-single-child).\r\n\r\nThis isn't directly bringing an unconfirmed input, but it is indirectly bringing one. Is that ok? If that's ok, why wouldn't it be ok to just allow adding new unconfirmed inputs in the first place?",
      "commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "created_at" : "2022-05-10T12:03:32Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package, including those that do not directly conflict with any mempool\n+   transactions, only include an unconfirmed input if that input was included in one of the directly\n+   conflicting transactions or is from another transaction in the package.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r869152001",
      "id" : 869152001,
      "line" : 132,
      "node_id" : "PRRC_kwDOABII584zzjUB",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 132,
      "original_position" : 40,
      "original_start_line" : 130,
      "path" : "doc/policy/packages.md",
      "position" : 40,
      "pull_request_review_id" : 967623639,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869152001/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 130,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-10T12:14:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869152001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r869160432"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869160432"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I believe this issue can unfortunately arise even when you're replacing a single LN commitment transaction.\r\nImagine that you're trying to replace `{commitTxAlice, anchorTxAlice}` but Alice has created `anchorTxAlice` to have 100 outputs and broadcast one child tx per output, you're already hitting the 100 transactions limit...\r\n\r\nI believe that the only thing that can save Bob here is to broadcast `{commitTxAlice, anchorTxBob}` by relying on the CPFP carve-out rule to get Alice's commitment to confirm. But in order to do that, Bob needs to somehow get the signed `commitTxAlice` (which never appeared in his mempool since his mempool contains `commitTxBob`).\r\n\r\nSo this rule is an issue for L2 protocols, but it is also a protection against high mempool churn, so it's hard to draw the line.",
      "commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "created_at" : "2022-05-10T12:12:45Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package, including those that do not directly conflict with any mempool\n+   transactions, only include an unconfirmed input if that input was included in one of the directly\n+   conflicting transactions or is from another transaction in the package.\n+\n+4. The package fee after deduplication pays an absolute fee of at least the sum paid by the\n+   original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth after deduplication at or\n+   above the rate set by the node's incremental relay feerate. For example, if the incremental relay\n+   feerate is 1 satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the\n+   package fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+6. The number of original transactions does not exceed 100.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r869160432",
      "id" : 869160432,
      "in_reply_to_id" : 868533379,
      "line" : 143,
      "node_id" : "PRRC_kwDOABII584zzlXw",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 143,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 51,
      "pull_request_review_id" : 967623639,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869160432/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-10T12:14:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869160432",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873782940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873782940"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This RBF policy is essentially treating the package as \"one big transaction,\" which works because everything is in the ancestor set of the child. PackageTestAccept doesn't impose any topology restrictions - it even allows unrelated transactions to be submitted as a group. So it wouldn't make sense to use each other's fees.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-05-16T14:16:28Z",
      "diff_hunk" : "@@ -502,7 +505,7 @@ class MemPoolAccept\n                             /* m_bypass_limits */ false,\n                             /* m_coins_to_uncache */ coins_to_uncache,\n                             /* m_test_accept */ false,\n-                            /* m_allow_bip125_replacement */ false,\n+                            /* m_allow_bip125_replacement */ true,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873782940",
      "id" : 873782940,
      "in_reply_to_id" : 868430869,
      "line" : 515,
      "node_id" : "PRRC_kwDOABII5840FN6c",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 515,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 15,
      "pull_request_review_id" : 974037959,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873782940/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-16T14:36:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873782940",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873799952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873799952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I mean a situation like this:\r\n\r\n<img width=\"673\" alt=\"image\" src=\"https://user-images.githubusercontent.com/25183001/168615825-6251d4d6-97b6-45cf-ada7-91c6a1d9ce45.png\">\r\n\r\n\r\n{A, B, C} are in the mempool, and A is already at the descendant limit (101KvB). {X, Y, Z} is a package where X conflicts with B and will replace {B, C}. However, when we run descendant limit checks, it will look like A's descendants include {B, C, X, Z} and reject it. But actually A's descendants will only include {X, Z} after the replacement.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-05-16T14:31:01Z",
      "diff_hunk" : "@@ -975,13 +1006,89 @@ bool MemPoolAccept::PackageMempoolChecks(const std::vector<CTransactionRef>& txn\n     assert(std::all_of(txns.cbegin(), txns.cend(), [this](const auto& tx)\n                        { return !m_pool.exists(GenTxid::Txid(tx->GetHash()));}));\n \n+    // Populate with the union of all transactions' ancestors.\n+    CTxMemPool::setEntries m_collective_ancestors;\n+    for (const auto& ws : workspaces) {\n+        for (const auto& it : ws.m_ancestors) m_collective_ancestors.insert(it);\n+    }\n+\n     std::string err_string;\n     if (!m_pool.CheckPackageLimits(txns, m_limit_ancestors, m_limit_ancestor_size, m_limit_descendants,\n                                    m_limit_descendant_size, err_string)) {\n+        // TODO: When replacements exist, to avoid overestimating descendant counts, deduct the\n+        // to-be-replaced mempool entries when counting descendants. Note that this is not\n+        // necessarily as simple as subtracting the count/size from descendant limits, because\n+        // multiple transactions may conflict with the same entries, causing us to double-count them\n+        // and their descendants.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873799952",
      "id" : 873799952,
      "in_reply_to_id" : 868495787,
      "line" : 1026,
      "node_id" : "PRRC_kwDOABII5840FSEQ",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 1026,
      "original_position" : 221,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 211,
      "pull_request_review_id" : 974037959,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873799952/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-16T14:36:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873799952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873809115"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873809115"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah good point, I forgot I had moved this to the bottom of PreChecks.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-05-16T14:38:52Z",
      "diff_hunk" : "@@ -928,6 +952,9 @@ bool MemPoolAccept::ReplacementChecks(Workspace& ws)\n     const uint256& hash = ws.m_hash;\n     TxValidationState& state = ws.m_state;\n \n+    m_rbf = ws.m_conflicts.size() > 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873809115",
      "id" : 873809115,
      "in_reply_to_id" : 868503310,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840FUTb",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 955,
      "original_position" : 156,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 974075624,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873809115/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-16T14:38:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873809115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873820419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873820419"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I think it could be a limitation for second-layer package issuers, where a child-with-parents package aims to replace more than 5 LN commitment transactions at the same time. A counterparty could extend the 5 non-related commitment transactions descendants until reaching max in-mempool limits, thus interfering with their potential package-RBF.\r\n\r\nYeah, batching multiple commitment transaction replacements isn't very safe. That's why we have the \"Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers should take caution if utilizing multi-parent packages.\" in the [doc](https://github.com/bitcoin/bitcoin/blob/master/doc/policy/packages.md#package-mempool-acceptance-rules).\r\n\r\n> I believe this issue can unfortunately arise even when you're replacing a single LN commitment transaction.\r\n\r\nI don't think this scenario is possible with our current mempool policy. With our descendant limit at 25,  `anchorTxAlice` wouldn't be able to have 100 children.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-05-16T14:47:38Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package, including those that do not directly conflict with any mempool\n+   transactions, only include an unconfirmed input if that input was included in one of the directly\n+   conflicting transactions or is from another transaction in the package.\n+\n+4. The package fee after deduplication pays an absolute fee of at least the sum paid by the\n+   original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth after deduplication at or\n+   above the rate set by the node's incremental relay feerate. For example, if the incremental relay\n+   feerate is 1 satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the\n+   package fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+6. The number of original transactions does not exceed 100.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873820419",
      "id" : 873820419,
      "in_reply_to_id" : 868533379,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840FXED",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 143,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : null,
      "pull_request_review_id" : 974093538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873820419/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-16T14:47:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873820419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873852659"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873852659"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Unfortunately, no, `previousWalletTx` cannot be used as one of the parents; all of `anchorTxBob`'s inputs need to be confirmed.\r\n\r\nThis is an extension of BIP 125 Rule 2. I currently don't know a safe way to remove that rule. #23121 was an attempt, but also unsafe. Very sorry :(\r\n\r\n",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-05-16T15:16:00Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package, including those that do not directly conflict with any mempool\n+   transactions, only include an unconfirmed input if that input was included in one of the directly\n+   conflicting transactions or is from another transaction in the package.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873852659",
      "id" : 873852659,
      "in_reply_to_id" : 869152001,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840Fe7z",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 132,
      "original_position" : 40,
      "original_start_line" : 130,
      "path" : "doc/policy/packages.md",
      "position" : null,
      "pull_request_review_id" : 974140337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873852659/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-16T15:16:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873852659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873854502"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873854502"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes you're right. Thanks for the feedback and clear explanation, adding some similar language to the doc!",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-05-16T15:17:45Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r873854502",
      "id" : 873854502,
      "in_reply_to_id" : 869137839,
      "line" : 126,
      "node_id" : "PRRC_kwDOABII5840FfYm",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 126,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 34,
      "pull_request_review_id" : 974143032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873854502/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-16T15:17:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/873854502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r875569716"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875569716"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Gotcha, thanks for the confirmation, we'll deal with that limitation then, it's already a good start. And hopefully we'll eventually figure out better RBF rules for both single txs and packages!",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-05-18T07:41:31Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package, including those that do not directly conflict with any mempool\n+   transactions, only include an unconfirmed input if that input was included in one of the directly\n+   conflicting transactions or is from another transaction in the package.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r875569716",
      "id" : 875569716,
      "in_reply_to_id" : 869152001,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840MCI0",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 132,
      "original_position" : 40,
      "original_start_line" : 130,
      "path" : "doc/policy/packages.md",
      "position" : null,
      "pull_request_review_id" : 976493853,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875569716/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-18T07:41:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875569716",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r878468366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878468366"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(Sorry for my earlier comment, I was confused)\r\n\r\n> If we include previousWalletTx in the package, this package-rbf would work, right?\r\n\r\nYes. It's fine because it's one of the direct parents of `anchorTxBob`.\r\n\r\n> But if we don't include previousWalletTx in the package, this would be rejected?\r\n\r\nIf you mean `anchorTxBob` now only has 1 unconfirmed input, `commitTxBob`, actually this would be accepted.\r\n\r\nIf you mean that `previousWalletTx` was submitted ahead of time, that should still be okay because the code will remember to exempt `previousWalletTx` from the \"no new unconfirmed\" rule.\r\n\r\n> But what if previousWalletTx itself has an unconfirmed parent?\r\n\r\nBased on this rule, if `previousWalletTx` has another unconfirmed parent, this would be rejected.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-05-20T19:00:15Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package, including those that do not directly conflict with any mempool\n+   transactions, only include an unconfirmed input if that input was included in one of the directly\n+   conflicting transactions or is from another transaction in the package.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r878468366",
      "id" : 878468366,
      "in_reply_to_id" : 869152001,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840XF0O",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 132,
      "original_position" : 40,
      "original_start_line" : 130,
      "path" : "doc/policy/packages.md",
      "position" : null,
      "pull_request_review_id" : 980563664,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878468366/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-20T19:00:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878468366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r880098512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880098512"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the clarification! I'll create extensive tests of this behavior and will report back.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-05-24T06:18:49Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package, including those that do not directly conflict with any mempool\n+   transactions, only include an unconfirmed input if that input was included in one of the directly\n+   conflicting transactions or is from another transaction in the package.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r880098512",
      "id" : 880098512,
      "in_reply_to_id" : 869152001,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840dTzQ",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 132,
      "original_position" : 40,
      "original_start_line" : 130,
      "path" : "doc/policy/packages.md",
      "position" : null,
      "pull_request_review_id" : 982646813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880098512/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-24T06:18:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880098512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@t-bast \r\n\r\n> to have 100 outputs and broadcast one child tx per output, you're already hitting the 100 transactions limit...\r\n\r\nThey cannot create this chain to begin with as from any single unconfirmed transaction with confirmed parents, you can only make 25 transactions.\r\n\r\nSo if you for example had >4 commitment transactions that you want to CPFP with a single bump transaction, this is where the limit can be hit.",
      "created_at" : "2022-06-02T19:58:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1145285891",
      "id" : 1145285891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
      "node_id" : "IC_kwDOABII585EQ60D",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1145285891/reactions"
      },
      "updated_at" : "2022-06-02T19:58:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1145285891",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> They cannot create this chain to begin with as from any single unconfirmed transaction with confirmed parents, you can only make 25 transactions.\r\n\r\nRight, I had forgotten that restriction! However, this 25 descendants chain limit is only a configuration parameter on bitcoind, not a BIP 125 requirement, right? So in theory we cannot fully rely on it, nothing prevents an attacker to inject a 100 descendants chain in miners mempools if they have configured their bitcoind differently (or even use a different implementation)?",
      "created_at" : "2022-06-02T22:26:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1145404055",
      "id" : 1145404055,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
      "node_id" : "IC_kwDOABII585ERXqX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1145404055/reactions"
      },
      "updated_at" : "2022-06-02T22:26:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1145404055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@t-bast unlikely but true, seems like something to consider scaling with other policies to be more robust?",
      "created_at" : "2022-06-02T23:21:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1145431949",
      "id" : 1145431949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
      "node_id" : "IC_kwDOABII585EReeN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1145431949/reactions"
      },
      "updated_at" : "2022-06-02T23:21:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1145431949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> this 25 descendants chain limit is only a configuration parameter on bitcoind, not a BIP 125 requirement\r\n\r\nNote that BIP 125 enforcement could be considered a configuration parameter too -- eg knots nodes will allow replacement of any tx, whether they signal or not.\r\n\r\nPerhaps something we could consider is defining a service bit to correspond with a relay policy, and have nodes preferential peer with other nodes who set that bit; that way you're more likely for nodes that support a particular policy to form a fully connected graph, and thus have a path to any miners that also accept that relay policy. Knots defines an experimental service bit for full-RBF nodes https://github.com/bitcoinknots/bitcoin/blob/23.x-knots/src/init.cpp#L1103 . ",
      "created_at" : "2022-06-02T23:49:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1145451225",
      "id" : 1145451225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
      "node_id" : "IC_kwDOABII585ERjLZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1145451225/reactions"
      },
      "updated_at" : "2022-06-02T23:49:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1145451225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r889005663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889005663"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since we are introducing a new form of RBF that doesn't currently exist, now might be the best time to at least improve the BIP 125 rules to be incentive compatible in all situations (though this comes at the cost of making replacements potentially more expensive).\r\n\r\nIn particular what I have in mind is that we require the ancestor feerate of the child transaction to be higher than the actual feerate of all transactions that would be evicted. This is conservative but I think would ensure that we don't have any situations where there are transactions being replaced that might appear in the next block, while the new transactions do not.\r\n\r\nWould this be too conservative for the use cases that we have in mind?",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-03T14:36:20Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r889005663",
      "id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5840_SZf",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 995003793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889005663/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T14:36:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889005663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r889037679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889037679"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you elaborate with an example? It's possible I don't have the same mental mapping to terms and do not understand the scenario.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-03T15:11:26Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r889037679",
      "id" : 889037679,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5840_aNv",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 995049541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889037679/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T15:11:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889037679",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r889064935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889064935"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure -- consider the case where you have a transaction A(100vb, 1sat/vb) and child B (100vb, 10sat/vb) in the mempool.  Total fees = 1100 sat.\r\n\r\nA package comes in with parent A'(100vb, 1sat/vb) and child B'(1000vb, 2.5sat/vb).  Total package fees = 2600 sat.\r\n\r\nUnder the rules described here, package (A', B') could replace (A, B) in the mempool, because total fees are paid for and there's enough left over fee to pay the incremental relay fee of the new package (1500 sat/1100 vb). Also the package feerate is higher than that of the direct conflicts[1].\r\n\r\nThe deficiency in the logic is that we're not looking at the feerates of the transactions that would be evicted -- even though their absolute fee is being paid, their feerate could be even higher than the transactions that would replace them.  Calculating the effective feerate that such a transaction would have in our mining code is tricky (because a sibling could pay for an ancestor, it's not quite right to just consider ancestor feerate), but using its feerate is a conservative check here -- any descendant that is paying for its confirmation would be caught in this logic, and its (higher) feerate considered if necessary.\r\n\r\nFor evaluating the mining suitability of the new transactions coming in, I think we can just look at the ancestor feerate of the package, which is a lower bound on the attractiveness of the new transactions.  (I think this would also allow us to relax the rule against new unconfirmed inputs.)\r\n\r\n[1] In looking at this example, I noticed that BIP 125 as drafted seems to misstate an important check we perform in our current RBF policy, namely that we compare the feerate of a new transaction coming in to the feerate of the existing transactions that it directly conflicts with.  (Without this check, a small high fee transaction could be replaced by a large low fee transaction!). From my first glance at the code in this PR, it looks like the code itself does a similar check for packages (comparing the package feerate to the feerate of the direct conflicts) so that is good at least, but the description of the logic in the documentation should point out that there is some feerate check happening as well.\r\n\r\n",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-03T15:44:22Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r889064935",
      "id" : 889064935,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5840_g3n",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 995088589,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889064935/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T16:01:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889064935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r889076418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889076418"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's ancient lore by now, but I'm not sure it's a \"mis-statement\" or just incentive incompatible stuff no one implements(becase feerate check is cheap). I agree with your reading of current texts either way and agree pulling that into the text is the right thing to do. ",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-03T15:58:32Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r889076418",
      "id" : 889076418,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5840_jrC",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 995104339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889076418/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T15:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889076418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r898197226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898197226"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> require the ancestor feerate of the child transaction to be higher than the actual feerate of all transactions that would be evicted. This is conservative but I think would ensure that we don't have any situations where there are transactions being replaced that might appear in the next block, while the new transactions do not.\r\n\r\nI think this is a sensible addition. I cannot think of any easy attacks since it's only the directly conflicting transactions and not their descendants (i.e. I don't have the concerns stated in https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-1004774370).\r\n\r\nBtw, don't we want min(package feerate, child ancestor feerate)?\r\n\r\nIn pseudocode for a child-with-unconfirmed-parents package: \r\n```\r\nfor each tx in directly_conflicting_transactions:\r\n    if min(package_feerate, child.ancestor_feerate) <= tx.individual_feerate\r\n        fail\r\n```\r\n\r\nWith this, do you think it would be acceptable to remove the \"no new unconfirmed inputs\" rule in package RBF?\r\n\r\n\r\n> we compare the feerate of a new transaction coming in to the feerate of the existing transactions that it directly conflicts with\r\n\r\nRight, this wasn't in BIP 125. I also misinterpreted that part of the code to be part of the other fee-related rules and just a \"fail fast\" piece of logic, and didn't include it in # #23711 either (gah!). Just opened #25382 to add test coverage for it in isolation + add it to doc/policy/replacements.md",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-15T16:38:13Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r898197226",
      "id" : 898197226,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5841iWbq",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 1007815154,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898197226/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-15T16:38:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898197226",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r901614084"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901614084"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> it's only the directly conflicting transactions and not their descendants\r\n\r\nCould you clarify that? I'm not sure whether @sdaftuar's example contradicts this claim or not.\r\n\r\nLet's consider a mempool containing transaction A (1000vb, 1sat/vb), child B (1000vb, 10sat/vb) and grand-child C (100vb, 100sat/vb).\r\n\r\nIf we want to replace this with a package containing transaction A' (1000vb, 1sat/vb) and child B' (1000vb, 20sat/vb), would that work? Or would we be forced to match the 100 sat/vb of grand-child C (since @sdaftuar says the ancestor feerate of that package must be higher than the _actual_ feerate of _all_ transactions that would be evicted)? If so, that would be an issue, an attacker could always put a low-fee high-feerate descendant to make it very expensive to replace the first transaction in the chain, can't they?\r\n\r\n",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-20T12:34:46Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r901614084",
      "id" : 901614084,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5841vYoE",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 1012200644,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901614084/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T12:49:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901614084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I have added a first set of tests to eclair that exercise the package-rbf logic: https://github.com/ACINQ/eclair/commit/4f583b5725cba6594388d54c0b31affc1bf8cddf\r\n\r\nI extracted the transactions as test vectors here: https://gist.github.com/t-bast/7c553e61ff2bee3720ff4f7db04cc1b3\r\nI'm not sure how easy it will be to translate them to bitcoin core tests, you'll need to re-generate some of the inputs and re-sign the commit transactions. The file should have all the required data, but it may be quite painful still...\r\n\r\nThe third test vector triggers the following error: `Internal bug detected: \"it != package_result.m_tx_results.end()\"`",
      "created_at" : "2022-06-21T14:51:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1161852823",
      "id" : 1161852823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
      "node_id" : "IC_kwDOABII585FQHeX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 1,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161852823/reactions"
      },
      "updated_at" : "2022-06-21T14:51:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161852823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r902725385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902725385"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's looking good with the current state of the PR, I am able to include new unconfirmed inputs that themselves have an unconfirmed parent as shown by [this test](https://gist.github.com/t-bast/7c553e61ff2bee3720ff4f7db04cc1b3#batching-commitment-fee-bump) :+1: ",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-21T14:53:12Z",
      "diff_hunk" : "@@ -117,3 +118,30 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package, including those that do not directly conflict with any mempool\n+   transactions, only include an unconfirmed input if that input was included in one of the directly\n+   conflicting transactions or is from another transaction in the package.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r902725385",
      "id" : 902725385,
      "in_reply_to_id" : 869152001,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841zn8J",
      "original_commit_id" : "abef97a6945df9f98d2c3a67bc2b1cbf0225fdbf",
      "original_line" : 132,
      "original_position" : 40,
      "original_start_line" : 130,
      "path" : "doc/policy/packages.md",
      "position" : null,
      "pull_request_review_id" : 1013757208,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902725385/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-21T14:53:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902725385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r902757779"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902757779"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> > require the ancestor feerate of the child transaction to be higher than the actual feerate of all transactions that would be evicted. This is conservative but I think would ensure that we don't have any situations where there are transactions being replaced that might appear in the next block, while the new transactions do not.\r\n> \r\n> I think this is a sensible addition. I cannot think of any easy attacks since it's only the directly conflicting transactions and not their descendants (i.e. I don't have the concerns stated in [#23121 (comment)](https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-1004774370)).\r\n\r\nAh, in writing this I overlooked what you had written up in that comment and forgot about that concern.  When I commented before I did indeed mean to suggest that we'd compare our estimated mining score of the new child transaction (`min(package feerate, ancestor feerate)` as you say) with the actual feerate of all the transactions that would be evicted, and not just the direct conflicts -- if we only compare to the feerate of direct conflicts, then I believe it is still possible for a transaction that would be included in the next block to be replaced by a transaction that will confirm much later.\r\n\r\nHowever now you have reminded me of the other concern, which is that a high actual feerate (but low ancestor feerate) transaction could be used to pin a package and make it difficult to evict.  I'm not sure what to do about this!  \r\n\r\nPerhaps a simple, good enough approach might be to require that the child transaction's score is better than the ancestor feerate of all the transactions that would be evicted, and the actual feerates of the direct conflicts?  I just think we should do something to ensure that a new transaction package isn't strictly worse than something that would be evicted.  We'd still be missing the case where something being evicted has a lower ancestor score than its actual mining score because of an unrelated transaction that is paying for a low feerate parent, but maybe that is an edge case that we can overlook (especially since the total fees in the mempool are still going up and the first order approximation of mining desirability is also going up).  \r\n\r\nI was trying to think about whether this approach might be attackable in some way to either muck with fee estimation or attack someone's mempool with low quality transactions, but I need to give it more thought.\r\n\r\nAn alternate approach to this problem might be to define some new (opt in) relay policy that limits the scope of descendant transactions in some way, and then only implement a package RBF policy that would interact with transactions that meet that limited criteria.  That might be a good direction to go if our broader attempts at this problem result in behavior that's not incentive compatible..?\r\n",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-21T15:20:47Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r902757779",
      "id" : 902757779,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5841zv2T",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 1013804318,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902757779/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-21T15:20:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902757779",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r903654520"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903654520"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Perhaps a simple, good enough approach might be to require that the child transaction's score is better than the ancestor feerate of all the transactions that would be evicted, and the actual feerates of the direct conflicts?\r\n\r\nTo my understanding of this dual-criteria approach (better ancestor score than the set of evicted transactions and better feerate of the direct conflicts) I'm not sure it's robust against pinning attackers.\r\n\r\nLet's say you have a mempool containing parent A (1000vb, 1 sat/vb), parent B (1000vb, 2 sat/vb) and child C (100vb, 20 sat/vb). You would like to replace C with newer transaction C' (100vb, 10 sat/vb) spending parent A and parent D (1000vb, 20 sat/vb). While the ancestor score of C' is better than C, the feerate is far less compelling and it should be rejected by the mempool. However, the low-ancestor score child C should not be mined for a while and the pin succeeds, if this scenario is correct.\r\n\r\n> An alternate approach to this problem might be to define some new (opt in) relay policy that limits the scope of descendant transactions in some way, and then only implement a package RBF policy that would interact with transactions that meet that limited criteria.\r\n\r\nI don't know if any opt-in approach limiting the size of the package (both ancestors/descendants) is compatible with miners incentives. I think a pinning attacker would be always able to attach an ancestor beyond the limit downgrading the high-feerate replacement candidate ancestor score.\r\n\r\nI'm not sure if we have considered other scoring approach like best-ancestor-score of the latest generation of package transactions. I.e, if you have parent A, parent B and child C and grandchild D, and you would like to replace with new package parent A, parent E and child C' you evaluate ancestor score of C' against grandchild D. I think it could be a correct answer to the miner viewpoint \"Which competing chain of transactions is the most interesting to include ?\". Though I don't know if it's fully incentive compatible.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-22T12:00:25Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r903654520",
      "id" : 903654520,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII58413Kx4",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 1015048923,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903654520/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-22T12:00:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903654520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r907576864"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907576864"
         }
      },
      "author_association" : "MEMBER",
      "body" : ">  When I commented before I did indeed mean to suggest that we'd compare our estimated mining score of the new child ...\r\n> However now you have reminded me of the other concern, which is that a high actual feerate (but low ancestor feerate) transaction could be used to pin a package and make it difficult to evict. I'm not sure what to do about this!\r\n\r\nMy bad about misunderstanding your original suggestion! Yes, this is my concern with it and I'm glad you agree.\r\n\r\n> Perhaps a simple, good enough approach might be to require that the child transaction's score is better than the ancestor feerate of all the transactions that would be evicted, and the actual feerates of the direct conflicts?\r\n\r\nI think this would be fine, definitely an improvement upon our current logic. I can't really think of a strong attack, will think about it more.\r\n\r\n> Let's say you have a mempool containing parent A ...\r\n> While the ancestor score of C' is better than C, the feerate is far less compelling and it should be rejected by the mempool.\r\n\r\nIIUC since we use the minimum of ancestor feerate and individual feerate, this example doesn't break it, since we'd use `C'`'s individual feerate of 10sat/vB to compare to `C`'s individual feerate of 20sat/vB.\r\n\r\nThe natural \"attack\" scenario might be:\r\nA counterparty broadcasts their tx A (which we'll want to replace). They also broadcast an unrelated high-fee tx B (50sat/vB), and a child C which spends from A and B. Since C spends from B, it has a high ancestor feerate (even though they wouldn't be mined together), and is thus harder to replace. But since B is high feerate, it will be mined soon, so we're probably fine.\r\n\r\n> An alternate approach to this problem might be to define some new (opt in) relay policy that limits the scope of descendant transactions in some way, and then only implement a package RBF policy that would interact with transactions that meet that limited criteria. That might be a good direction to go if our broader attempts at this problem result in behavior that's not incentive compatible..?\r\n\r\nI'm now pretty convinced that opt-in shrinking ancestor/descendant limits is the way to go (ping @instagibbs who had ideas about this being necessary in the future). Maybe we start allowing nVersion=3 (or whatever signal we decide) and it doubles as a signal for package RBF and stricter limits (and BIP 125 signaling would not be used for package RBF).\r\n\r\nA few questions:\r\n\r\n- Is it possible to have single transaction limits as well (e.g. a single transaction cannot be more than 10KvB)? If so, that seems simpler than restricting descendants based on the size of the original transaction. Or would that be a bad idea, since it would also imply fewer possible in-flight HTLCs?\r\n- In this policy, I think we would want to require \"any tx spending from an unconfirmed nVersion=3 tx must also be nVersion=3?\" And if a nVersion=3 transaction has ancestors that aren't nVersion=3, we'd use the stricter limits? Following that, I guess we would also need \"any tx replacing an nVersion=3 tx must also be nVersion=3?\"\r\n- Assuming we can figure out something sensible, it seems better to have both ancestor and descendant limits? Adding descendant limits resolves the \"you must pay for all conflicts\" type of pinning. But adding an ancestor limit could be beneficial in resolving the \"create a replacement tx with a giant ancestor\" type pinning.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-27T16:30:42Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r907576864",
      "id" : 907576864,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5842GIYg",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 1020463621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907576864/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-27T16:30:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907576864",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r907628486"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907628486"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've posted this privately in a few places, but here's a likely incomplete discussion of the opt-in limit reduction discussion, aimed at LN/eltoo problems, but by no means limited to them: https://gist.github.com/instagibbs/b3095752d6289ab52166c04df55c1c19\r\n\r\n\"complete package\" limits seem to be inherent to any usable solution",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-27T17:29:45Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r907628486",
      "id" : 907628486,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5842GU_G",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 1020539586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907628486/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-27T17:29:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907628486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r908996095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908996095"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Assuming we can figure out something sensible, it seems better to have both ancestor and descendant limits? Adding descendant limits resolves the \"you must pay for all conflicts\" type of pinning. But adding an ancestor limit could be beneficial in resolving the \"create a replacement tx with a giant ancestor\" type pinning.\r\n\r\nYeah I was thinking in this direction as well.  I wonder if we could find some super minimal use case, like a 2-transaction package replacing another 2-transaction package, and just implement that to start.  I think the rough idea would be:\r\n- some opt-in flag (eg nVersion=3, or anything else) indicates that a transaction can't have more than 1 in-mempool descendant with no more than X vbytes of total size.  Any descendant is also not allowed to have more than 1 ancestor.\r\n- When a 1-child, 1-parent package comes in, if it conflicts with at most 1 opt-in package, allow for RBF semantics along the lines of what we're discussing. In this case, I think we would require the package feerate to be greater than the ancestor feerates of both transactions that would be replaced (along with the total fee check, and the incremental relay fee check).\r\n\r\nWould there be value to any layer 2 projects if something this minimal were to be implemented?  ",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-28T21:37:48Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r908996095",
      "id" : 908996095,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5842Li3_",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 1022474615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908996095/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-28T21:37:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908996095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r909245000"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909245000"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This would be very valuable for lightning. @instagibbs has explored that space recently.\r\n\r\nA single descendant is too limiting though: in the lightning case, each participant has its own anchor output, so we need to allow 2 descendants if we apply that rule to the commitment transaction.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-29T06:30:29Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r909245000",
      "id" : 909245000,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5842MfpI",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 1022798326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909245000/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T06:30:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909245000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r909507429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909507429"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> [1] In looking at this example, I noticed that BIP 125 as drafted seems to misstate an important check we perform in our current RBF policy, namely that we compare the feerate of a new transaction coming in to the feerate of the existing transactions that it directly conflicts with.\r\n\r\nPerhaps we should aim for a new rbf bip that describes bitcoin core's actual policy for both rbf of single txs and packages of txs, and document that we implement the new bip, and not 125?",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-29T11:18:15Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r909507429",
      "id" : 909507429,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5842Nftl",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 1023167805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909507429/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T11:18:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909507429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r909641486"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909641486"
         }
      },
      "author_association" : "MEMBER",
      "body" : "To recap my thoughts:\r\n\r\n0) I really think this direction is somewhere we need to go. The fact that in my sketches I can *get rid of carveout*, and naively support N-party contracts speaks to me that we're on the right path. The fact it makes simple systems like batched payouts potentially more robust is also a win.\r\n\r\n1) I am 99% sure we want to limit *entire* package limits to make rule#3 pinning not a kill shot for replacement replacement\r\n\r\n2) @t-bast  Ephemeral dust, or dust values that are immediately spent within the package, enable LN and other systems to switch over to a single anchor output, obviating the requirement for carveout rules, and would fit within the one-parent-one-child pattern.\r\n\r\nWe could expand this to two direct children limit, and preserve the carveout to make sure currently deployed systems get benefits, assuming it's not otherwise a DoS/incentive compatible issue\r\n\r\n3) Another nice-to-have would be forced signaling of replacability of the child tx, since the single-anchor spend is mostly freeform. We can work around this via \"0 CSV OP_1ADD\" scriptpubkey which forces RBF signaling, but something to consider. Full RBF solves this longer term as well.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-29T13:34:33Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r909641486",
      "id" : 909641486,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5842OAcO",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 1023374053,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909641486/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T13:34:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909641486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r909654053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909654053"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> @t-bast Ephemeral dust, or dust values that are immediately spent within the package, enable LN and other systems to switch over to a single anchor output, obviating the requirement for carveout rules, and would fit within the one-parent-one-child pattern.\r\n\r\n:100: \r\n\r\n> We could expand this to two direct children limit, and preserve the carveout to make sure currently deployed systems get benefits, assuming it's not otherwise a DoS/incentive compatible issue\r\n\r\nDon't bother if it's only for lightning, since we'll need a (small) change on the commitment transaction format to benefit from it, we might as well directly switch to a single anchor output.",
      "commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "created_at" : "2022-06-29T13:44:39Z",
      "diff_hunk" : "@@ -117,3 +118,36 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+Child-with-unconfirmed-parents packages may replace mempool transactions under the following conditions:\n+\n+1. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+2. The directly conflicting transactions all signal replaceability explicitly.\n+\n+3. All transactions in the package only include an unconfirmed input if that input was included in\n+   one of the directly conflicting transactions or is from another transaction in the package. This\n+   rule applies to the transactions that do not directly conflict with any mempool transactions.\n+\n+4. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+\n+5. The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r909654053",
      "id" : 909654053,
      "in_reply_to_id" : 889005663,
      "line" : 148,
      "node_id" : "PRRC_kwDOABII5842ODgl",
      "original_commit_id" : "da7cc60fb59f8cd366312af7bc6f3b7fe4f5c82a",
      "original_line" : 148,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 56,
      "pull_request_review_id" : 1023391629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909654053/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T13:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909654053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-06-30T16:47:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1171454489",
      "id" : 1171454489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
      "node_id" : "IC_kwDOABII585F0voZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1171454489/reactions"
      },
      "updated_at" : "2022-06-30T16:47:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1171454489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Apologies for the delay, I am rebasing + working on the following:\r\n\r\n- Some unit tests for RBF code\r\n- Adding an ancestor feerate rule https://github.com/bitcoin/bitcoin/pull/25038#discussion_r907576864\r\n- Adding a set of rules for nVersion=3, i.e. stricter ancestor/descendant limits, inheritance, signaling for RBF, etc. https://github.com/bitcoin/bitcoin/pull/25038#discussion_r908996095 Won't be a finalized proposal, I'm hoping that having code written will help us iterate on what those rules should be.\r\n\r\nWill update soon!",
      "created_at" : "2022-07-08T09:50:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1178787330",
      "id" : 1178787330,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
      "node_id" : "IC_kwDOABII585GQt4C",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1178787330/reactions"
      },
      "updated_at" : "2022-07-08T09:50:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1178787330",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924626968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924626968"
         }
      },
      "author_association" : "MEMBER",
      "body" : "All of the directly conflicting transactions already in mempool?",
      "commit_id" : "a639f4f51fc291ab88811120241b560e9e81e823",
      "created_at" : "2022-07-19T15:10:14Z",
      "diff_hunk" : "@@ -117,3 +118,63 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+A package may replace mempool transaction(s) (\"Package RBF\") under the following conditions:\n+\n+1. The package is child-with-parents.\n+\n+*Rationale*: The fee-related rules are economically rational for ancestor packages, but not\n+necessarily other types of packages.\n+\n+However, allowing replacement for all ancestor packages also might not make sense due to the\n+increased complexity.\n+\n+2. At least one of the following signaling conditions is met:\n+\n+    1a. All of the directly conflicting transactions signal BIP125 replaceability explicitly.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924626968",
      "id" : 924626968,
      "line" : 136,
      "node_id" : "PRRC_kwDOABII5843HLAY",
      "original_commit_id" : "18630747af9e5967b229fbe80f9cadf6ceb29252",
      "original_line" : 136,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 44,
      "pull_request_review_id" : 1043617508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924626968/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-19T15:27:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924626968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924636307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924636307"
         }
      },
      "author_association" : "MEMBER",
      "body" : "replaced",
      "commit_id" : "a639f4f51fc291ab88811120241b560e9e81e823",
      "created_at" : "2022-07-19T15:15:33Z",
      "diff_hunk" : "@@ -117,3 +118,63 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+A package may replace mempool transaction(s) (\"Package RBF\") under the following conditions:\n+\n+1. The package is child-with-parents.\n+\n+*Rationale*: The fee-related rules are economically rational for ancestor packages, but not\n+necessarily other types of packages.\n+\n+However, allowing replacement for all ancestor packages also might not make sense due to the\n+increased complexity.\n+\n+2. At least one of the following signaling conditions is met:\n+\n+    1a. All of the directly conflicting transactions signal BIP125 replaceability explicitly.\n+\n+        *Rationale*: Any transaction that is replaceable without package RBF should still be\n+        replaceable.\n+\n+    1b. All directly conflicting transactions have `nVersion=3` and each package transaction that\n+        conflicts with a mempool transaction also has `nVersion=3`.\n+\n+        *Rationale*: This helps preserve the mempool policy that any transaction spending an\n+        unconfirmed `nVersion=3` transaction must also have `nVersion=3`. Otherwise, the child of a\n+        `nVersion=3` transaction could be replaced by a non-`nVersion=3` transaction, and thus there\n+        would be an `nVersion=3` transaction in the mempool with a non-`nVersion=3` child.\n+\n+        *Rationale*: Since V3 is inherited, this form of RBF signaling is implicitly inherited. That is,\n+        while a V3 transaction is unconfirmed, any descendant(s) accepted to the mempool must also be\n+        V3 and are thus also replaceable.\n+\n+3. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+4. The minimum between package feerate and ancestor feerate of the child is not lower than the\n+   individual feerates of all directly conflicting transactions and the ancestor feerates of all\n+   original transactions.\n+\n+*Rationale*: Attempt to ensure that the replacement transactions are not less incentive-compatible\n+to mine.\n+\n+5. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+   The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual\n+transactions](./mempool-replacements.md), treating the package (after deduplication) as one\n+composite transaction. This works because all of the transactions in a\n+child-with-unconfirmed-parents package are in the ancestor set of the child transaction.\n+\n+6. The number of original transactions does not exceed 100.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924636307",
      "id" : 924636307,
      "line" : 180,
      "node_id" : "PRRC_kwDOABII5843HNST",
      "original_commit_id" : "18630747af9e5967b229fbe80f9cadf6ceb29252",
      "original_line" : 180,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 88,
      "pull_request_review_id" : 1043617508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924636307/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-19T15:27:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924636307",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924649289"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924649289"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe this falls short in that the parent V3 transaction can be just south of 101kvB, even in ANYONECANPAY and SIGHASH_SINGLE like scenarios where additional inputs cannot be excluded by the presigning parties.\r\n\r\nIn imprecise language, this is what I expect to be required to solve it: \"When evaluating a V3 transaction, if its total mempool package size after entry into the mempool would exceed 4000 virtual bytes, it is rejected.\"",
      "commit_id" : "a639f4f51fc291ab88811120241b560e9e81e823",
      "created_at" : "2022-07-19T15:24:30Z",
      "diff_hunk" : "@@ -0,0 +1,16 @@\n+# Transactions with nVersion 3\n+\n+A transaction with its `nVersion` field set to 3 (\"V3 transactions\") are allowed in mempool and\n+transaction relay.\n+\n+The following set of policies apply to V3 transactions:\n+\n+1. Any descendant of an unconfirmed V3 transaction must also be V3.\n+\n+2. A V3 transaction can be replaced by another V3 transaction, even if it does not signal BIP125\n+   replaceability. Use the (`-mempoolfullrbf`) configuration option to allow transaction\n+   replacement without enforcement of any opt-in signaling rule.\n+\n+3. A V3 transaction cannot have more than 1 descendant.\n+\n+4. A V3 transaction that has a V3 ancestor cannot be larger than 4000 virtual bytes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924649289",
      "id" : 924649289,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII5843HQdJ",
      "original_commit_id" : "18630747af9e5967b229fbe80f9cadf6ceb29252",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "doc/policy/version3_transactions.md",
      "position" : 16,
      "pull_request_review_id" : 1043617508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924649289/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-19T15:27:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924649289",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924672736"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924672736"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, same as here: https://github.com/bitcoin/bitcoin/blob/master/doc/policy/mempool-replacements.md#current-replace-by-fee-policy\r\n> A transaction conflicts with an in-mempool transaction (\"directly conflicting transaction\") if they spend one or more of the same inputs.",
      "commit_id" : "a639f4f51fc291ab88811120241b560e9e81e823",
      "created_at" : "2022-07-19T15:43:39Z",
      "diff_hunk" : "@@ -117,3 +118,63 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+A package may replace mempool transaction(s) (\"Package RBF\") under the following conditions:\n+\n+1. The package is child-with-parents.\n+\n+*Rationale*: The fee-related rules are economically rational for ancestor packages, but not\n+necessarily other types of packages.\n+\n+However, allowing replacement for all ancestor packages also might not make sense due to the\n+increased complexity.\n+\n+2. At least one of the following signaling conditions is met:\n+\n+    1a. All of the directly conflicting transactions signal BIP125 replaceability explicitly.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924672736",
      "id" : 924672736,
      "in_reply_to_id" : 924626968,
      "line" : 136,
      "node_id" : "PRRC_kwDOABII5843HWLg",
      "original_commit_id" : "18630747af9e5967b229fbe80f9cadf6ceb29252",
      "original_line" : 136,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 44,
      "pull_request_review_id" : 1043673914,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924672736/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-19T15:43:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924672736",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924673763"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924673763"
         }
      },
      "author_association" : "MEMBER",
      "body" : "same as here: https://github.com/bitcoin/bitcoin/blob/master/doc/policy/mempool-replacements.md#current-replace-by-fee-policy\r\n\r\nWould it be more clear if I change the terms, or repeat them in this doc?",
      "commit_id" : "a639f4f51fc291ab88811120241b560e9e81e823",
      "created_at" : "2022-07-19T15:44:38Z",
      "diff_hunk" : "@@ -117,3 +118,63 @@ backward-compatible for users and applications that rely on p2p transaction rela\n package validation should not prevent the acceptance of a transaction that would otherwise be\n policy-valid on its own. By always accepting a transaction that passes individual validation before\n trying package validation, we prevent any unintentional restriction of policy.\n+\n+### Package Replace by Fee\n+\n+A package may replace mempool transaction(s) (\"Package RBF\") under the following conditions:\n+\n+1. The package is child-with-parents.\n+\n+*Rationale*: The fee-related rules are economically rational for ancestor packages, but not\n+necessarily other types of packages.\n+\n+However, allowing replacement for all ancestor packages also might not make sense due to the\n+increased complexity.\n+\n+2. At least one of the following signaling conditions is met:\n+\n+    1a. All of the directly conflicting transactions signal BIP125 replaceability explicitly.\n+\n+        *Rationale*: Any transaction that is replaceable without package RBF should still be\n+        replaceable.\n+\n+    1b. All directly conflicting transactions have `nVersion=3` and each package transaction that\n+        conflicts with a mempool transaction also has `nVersion=3`.\n+\n+        *Rationale*: This helps preserve the mempool policy that any transaction spending an\n+        unconfirmed `nVersion=3` transaction must also have `nVersion=3`. Otherwise, the child of a\n+        `nVersion=3` transaction could be replaced by a non-`nVersion=3` transaction, and thus there\n+        would be an `nVersion=3` transaction in the mempool with a non-`nVersion=3` child.\n+\n+        *Rationale*: Since V3 is inherited, this form of RBF signaling is implicitly inherited. That is,\n+        while a V3 transaction is unconfirmed, any descendant(s) accepted to the mempool must also be\n+        V3 and are thus also replaceable.\n+\n+3. The child transaction does not conflict with any transactions in the mempool.\n+\n+*Rationale*: Reduce complexity. Package RBF is intended for scenarios in which the user cannot\n+change the parent transaction (e.g. they were presigned with an untrusted party), but has control\n+over the child. For example, Package RBF can be used to replace the commitment transaction of an LN\n+counterparty by attaching a high-fee child to an anchor output. If the user later wants to update\n+the child (e.g. a further fee-bump), that can be done using a single transaction.\n+\n+4. The minimum between package feerate and ancestor feerate of the child is not lower than the\n+   individual feerates of all directly conflicting transactions and the ancestor feerates of all\n+   original transactions.\n+\n+*Rationale*: Attempt to ensure that the replacement transactions are not less incentive-compatible\n+to mine.\n+\n+5. The package fee pays an absolute fee of at least the sum paid by the original transactions.\n+   The additional fees (difference between absolute fee paid by the package after deduplication and the\n+   sum paid by the original transactions) pays for the package's bandwidth at or above the rate set\n+   by the node's incremental relay feerate. For example, if the incremental relay feerate is 1\n+   satoshi/vB and the package after deduplication contains 500 virtual bytes total, then the package\n+   fees after deduplication is at least 500 satoshis higher than the sum of the original transactions.\n+\n+*Rationale*: These fee-related rules are identical to the replacement [policy for individual\n+transactions](./mempool-replacements.md), treating the package (after deduplication) as one\n+composite transaction. This works because all of the transactions in a\n+child-with-unconfirmed-parents package are in the ancestor set of the child transaction.\n+\n+6. The number of original transactions does not exceed 100.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924673763",
      "id" : 924673763,
      "in_reply_to_id" : 924636307,
      "line" : 180,
      "node_id" : "PRRC_kwDOABII5843HWbj",
      "original_commit_id" : "18630747af9e5967b229fbe80f9cadf6ceb29252",
      "original_line" : 180,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 88,
      "pull_request_review_id" : 1043675337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924673763/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-19T15:44:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924673763",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924683437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924683437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Happy to change this of course, but just want to clarify what you're suggesting.\r\n\r\n> In imprecise language, this is what I expect to be required to solve it: \"When evaluating a V3 transaction, if its total mempool package size after entry into the mempool would exceed 4000 virtual bytes, it is rejected.\"\r\n\r\nI interpret this to mean that we should change both ancestor and descendant limits to 4000vB. This also means an individual V3 tx is not allowed to be more than 4000vB by itself. So in the LN case, a commitment tx isn't allowed to be more than 4000vB. I believe this would necessitate lowering the max in-flight HTLC limit. Is that accurate and if so, is it ok?",
      "commit_id" : "a639f4f51fc291ab88811120241b560e9e81e823",
      "created_at" : "2022-07-19T15:53:34Z",
      "diff_hunk" : "@@ -0,0 +1,16 @@\n+# Transactions with nVersion 3\n+\n+A transaction with its `nVersion` field set to 3 (\"V3 transactions\") are allowed in mempool and\n+transaction relay.\n+\n+The following set of policies apply to V3 transactions:\n+\n+1. Any descendant of an unconfirmed V3 transaction must also be V3.\n+\n+2. A V3 transaction can be replaced by another V3 transaction, even if it does not signal BIP125\n+   replaceability. Use the (`-mempoolfullrbf`) configuration option to allow transaction\n+   replacement without enforcement of any opt-in signaling rule.\n+\n+3. A V3 transaction cannot have more than 1 descendant.\n+\n+4. A V3 transaction that has a V3 ancestor cannot be larger than 4000 virtual bytes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924683437",
      "id" : 924683437,
      "in_reply_to_id" : 924649289,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII5843HYyt",
      "original_commit_id" : "18630747af9e5967b229fbe80f9cadf6ceb29252",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "doc/policy/version3_transactions.md",
      "position" : 16,
      "pull_request_review_id" : 1043689319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924683437/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-19T15:53:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924683437",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924689587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924689587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Your comment seems correct. Will have to think about this some more with respect to the case today.\r\n\r\nedit: Looks like that works out to ~85 HTLC outputs or so naively in the layered commitment style setting",
      "commit_id" : "a639f4f51fc291ab88811120241b560e9e81e823",
      "created_at" : "2022-07-19T15:59:17Z",
      "diff_hunk" : "@@ -0,0 +1,16 @@\n+# Transactions with nVersion 3\n+\n+A transaction with its `nVersion` field set to 3 (\"V3 transactions\") are allowed in mempool and\n+transaction relay.\n+\n+The following set of policies apply to V3 transactions:\n+\n+1. Any descendant of an unconfirmed V3 transaction must also be V3.\n+\n+2. A V3 transaction can be replaced by another V3 transaction, even if it does not signal BIP125\n+   replaceability. Use the (`-mempoolfullrbf`) configuration option to allow transaction\n+   replacement without enforcement of any opt-in signaling rule.\n+\n+3. A V3 transaction cannot have more than 1 descendant.\n+\n+4. A V3 transaction that has a V3 ancestor cannot be larger than 4000 virtual bytes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r924689587",
      "id" : 924689587,
      "in_reply_to_id" : 924649289,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII5843HaSz",
      "original_commit_id" : "18630747af9e5967b229fbe80f9cadf6ceb29252",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "doc/policy/version3_transactions.md",
      "position" : 16,
      "pull_request_review_id" : 1043697896,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924689587/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-19T16:17:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924689587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r925104761"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925104761"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I believe this falls short in that the parent V3 transaction can be just south of 101kvB,\r\n\r\nCorrect me if I'm wrong, but I think this case would be something like: you're trying to confirm tx A which pays no fees itself; your counterparty publishes a package of tx A, B and C; C spends both A and B; A and C are both small, but B is 99kvB with an ephemeral output that is spent by C. You can't replace C without also replacing B because of the ephemeral output.\r\n\r\nWhat you could do, if the ephemeral output is anyone can spend, is replace C in two steps: one that creates tx D that spends B's ephemeral output (it's anyone can spend), which costs you C's fees plus epsilon; then you create tx E that spends A with your desired feerate. So you're paying ~100kvB at the \"backlog\" rate here. \r\n\r\nWith a 4kvB \"related txs\" limit, I think the worst case setup is just A is small (100vB) and is spent by B which is large (3900vB), so you have to pay at least 3.9kvB at the backlog rate plus epsilon to replace it with something smaller, but that's clearly already 25x better. Even if the backlog rate is not much smaller than the next block rate, you're only overpaying by at most 39x rather than perhaps 1000x here.\r\n\r\n> I interpret this to mean that we should change both ancestor and descendant limits to 4000vB. \r\n\r\nHmm, I think the worst case scenario here would still be bad:\r\n\r\n * A is spent by {B1,..,B20} (descendent count = 21 so less than 25)\r\n * B1 also spends C1, B2 also spends C2, etc; all via ephemeral outputs\r\n * A, Bn are 100vB each; Cn is 3800vB each\r\n\r\nA has a descendent size of 2100vB; Bn has an ancestor size of 4000vB and a descendent size of 100vB; Cn has a descendent size of 3900vB. So the 4000vB restriction is okay.\r\n\r\nBut replacing A thus means Bn are invalid, which then means Cn are invalid due to the now unspent ephemeral outputs, which means you're replacing 78kvB in the mempool, not just 4kvB.",
      "commit_id" : "a639f4f51fc291ab88811120241b560e9e81e823",
      "created_at" : "2022-07-20T02:24:37Z",
      "diff_hunk" : "@@ -0,0 +1,16 @@\n+# Transactions with nVersion 3\n+\n+A transaction with its `nVersion` field set to 3 (\"V3 transactions\") are allowed in mempool and\n+transaction relay.\n+\n+The following set of policies apply to V3 transactions:\n+\n+1. Any descendant of an unconfirmed V3 transaction must also be V3.\n+\n+2. A V3 transaction can be replaced by another V3 transaction, even if it does not signal BIP125\n+   replaceability. Use the (`-mempoolfullrbf`) configuration option to allow transaction\n+   replacement without enforcement of any opt-in signaling rule.\n+\n+3. A V3 transaction cannot have more than 1 descendant.\n+\n+4. A V3 transaction that has a V3 ancestor cannot be larger than 4000 virtual bytes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r925104761",
      "id" : 925104761,
      "in_reply_to_id" : 924649289,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII5843I_p5",
      "original_commit_id" : "18630747af9e5967b229fbe80f9cadf6ceb29252",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "doc/policy/version3_transactions.md",
      "position" : 16,
      "pull_request_review_id" : 1044303782,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925104761/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-20T02:24:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925104761",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r925333875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925333875"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@ajtowns Note that ephemeral outputs aren't proposed here, just the anc/desc limits.\r\n\r\nAlso note that V3 descendant count is limited to 2 (i.e. a V3 transaction can only have 1 descendant), so A can't be spent by {B1...B20}. But of course B1 could spend a bunch of things, up to {C1...C23}.\r\n\r\nGood point that with ephemeral outputs replacing a child means we need to remove the parent as well. I'm experimenting with implementing it, and my idea was to require the parent (the one with the dust output) pay 0 fee so it can't stay in the mempool by itself. We'd still want to prevent replacing a large volume of transactions (i.e. include it in the RBF 100 limit), but users/devs don't have to worry about high costs of replacement since its fee is 0?\r\n\r\nI'm thinking about ephemeral outputs but hoping to minimize the scope of this proposal. Correct me if I'm wrong, but it seems ephemeral outputs are not needed to make package relay work for LN penalty without pinning attacks. We could do ephemeral outputs as a next step - IIUC ephemeral outputs would be a \"loosening\" of policy rules so we could add it on to V3 rules later?",
      "commit_id" : "a639f4f51fc291ab88811120241b560e9e81e823",
      "created_at" : "2022-07-20T08:37:48Z",
      "diff_hunk" : "@@ -0,0 +1,16 @@\n+# Transactions with nVersion 3\n+\n+A transaction with its `nVersion` field set to 3 (\"V3 transactions\") are allowed in mempool and\n+transaction relay.\n+\n+The following set of policies apply to V3 transactions:\n+\n+1. Any descendant of an unconfirmed V3 transaction must also be V3.\n+\n+2. A V3 transaction can be replaced by another V3 transaction, even if it does not signal BIP125\n+   replaceability. Use the (`-mempoolfullrbf`) configuration option to allow transaction\n+   replacement without enforcement of any opt-in signaling rule.\n+\n+3. A V3 transaction cannot have more than 1 descendant.\n+\n+4. A V3 transaction that has a V3 ancestor cannot be larger than 4000 virtual bytes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r925333875",
      "id" : 925333875,
      "in_reply_to_id" : 924649289,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII5843J3lz",
      "original_commit_id" : "18630747af9e5967b229fbe80f9cadf6ceb29252",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "doc/policy/version3_transactions.md",
      "position" : 16,
      "pull_request_review_id" : 1044641067,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925333875/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-20T08:37:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925333875",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r925605697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925605697"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ephemeral outputs for ln-penalty are nice but definitely a stretch goal. I'm assuming some form exists for eltoo.\r\n\r\nKeeping inline with what is proposed here:\r\n\r\nFor eltoo purposes, there's no reason we cannot restrict each presigned transaction to having a single input only, and only the one ephemeral anchor for spending. Whenever a proper replacement for rule#3 is figured out, the one-input restriction could be relaxed for eltoo construction, and more typical ANYONECANPAY constructions likely work after this as well.",
      "commit_id" : "a639f4f51fc291ab88811120241b560e9e81e823",
      "created_at" : "2022-07-20T13:26:36Z",
      "diff_hunk" : "@@ -0,0 +1,16 @@\n+# Transactions with nVersion 3\n+\n+A transaction with its `nVersion` field set to 3 (\"V3 transactions\") are allowed in mempool and\n+transaction relay.\n+\n+The following set of policies apply to V3 transactions:\n+\n+1. Any descendant of an unconfirmed V3 transaction must also be V3.\n+\n+2. A V3 transaction can be replaced by another V3 transaction, even if it does not signal BIP125\n+   replaceability. Use the (`-mempoolfullrbf`) configuration option to allow transaction\n+   replacement without enforcement of any opt-in signaling rule.\n+\n+3. A V3 transaction cannot have more than 1 descendant.\n+\n+4. A V3 transaction that has a V3 ancestor cannot be larger than 4000 virtual bytes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r925605697",
      "id" : 925605697,
      "in_reply_to_id" : 924649289,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII5843K59B",
      "original_commit_id" : "18630747af9e5967b229fbe80f9cadf6ceb29252",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "doc/policy/version3_transactions.md",
      "position" : 16,
      "pull_request_review_id" : 1045028017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925605697/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-20T13:29:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925605697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r925639336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925639336"
         }
      },
      "author_association" : "MEMBER",
      "body" : ">  But replacing A thus means Bn are invalid, which then means Cn are invalid due to the now unspent ephemeral outputs, which means you're replacing 78kvB in the mempool, not just 4kvB.\r\n\r\nTo be clear, as long as we have sane DoS limits in place, to the RBF-ing party, they don't care about these extra bytes as they wouldn't be paying for those additional bytes(by package CPFP logic already in place, the child is already paying for parent). These further-restricted limits are not about stopping network DoS, but about pinning.",
      "commit_id" : "a639f4f51fc291ab88811120241b560e9e81e823",
      "created_at" : "2022-07-20T13:55:39Z",
      "diff_hunk" : "@@ -0,0 +1,16 @@\n+# Transactions with nVersion 3\n+\n+A transaction with its `nVersion` field set to 3 (\"V3 transactions\") are allowed in mempool and\n+transaction relay.\n+\n+The following set of policies apply to V3 transactions:\n+\n+1. Any descendant of an unconfirmed V3 transaction must also be V3.\n+\n+2. A V3 transaction can be replaced by another V3 transaction, even if it does not signal BIP125\n+   replaceability. Use the (`-mempoolfullrbf`) configuration option to allow transaction\n+   replacement without enforcement of any opt-in signaling rule.\n+\n+3. A V3 transaction cannot have more than 1 descendant.\n+\n+4. A V3 transaction that has a V3 ancestor cannot be larger than 4000 virtual bytes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25038#discussion_r925639336",
      "id" : 925639336,
      "in_reply_to_id" : 924649289,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII5843LCKo",
      "original_commit_id" : "18630747af9e5967b229fbe80f9cadf6ceb29252",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "doc/policy/version3_transactions.md",
      "position" : 16,
      "pull_request_review_id" : 1045076631,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925639336/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-20T13:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925639336",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   }
]
