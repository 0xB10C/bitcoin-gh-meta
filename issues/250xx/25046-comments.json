[
   {
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/pull/25046/checks?check_run_id=6246362180:\r\n```bash\r\nmake[2]: Entering directory '/tmp/cirrus-ci-build/ci/scratch/build/src'\r\nMakefile:20771: /tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/native/include/mpgen.mk: No such file or directory\r\nmake[2]: *** No rule to make target '/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/native/include/mpgen.mk'.  Stop.\r\nmake[2]: Leaving directory '/tmp/cirrus-ci-build/ci/scratch/build/src'\r\nmake[1]: *** [Makefile:922: distdir-am] Error 1\r\n```",
      "created_at" : "2022-05-01T11:41:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25046#issuecomment-1114212084",
      "id" : 1114212084,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25046",
      "node_id" : "IC_kwDOABII585CaYb0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114212084/reactions"
      },
      "updated_at" : "2022-05-01T11:41:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114212084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22552](https://github.com/bitcoin/bitcoin/pull/22552) (build: Improve depends build system robustness by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-05-01T13:01:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25046#issuecomment-1114230074",
      "id" : 1114230074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25046",
      "node_id" : "IC_kwDOABII585Cac06",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114230074/reactions"
      },
      "updated_at" : "2022-05-01T13:01:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114230074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for picking this up @hebasto. I spend a day looking into this issue https://github.com/bitcoin/bitcoin/issues/24387#issuecomment-1054776195 but got too confused by what I was seeing.\r\n\r\nTaking a quick look at this, first commit passing executable paths to libmultiprocess makes sense. Second commit dropping native_libmultiprocess at first thought does not seem to make sense. Third commit optimizing native builds seems ok, but perhaps not worth added complexity.\r\n\r\nFor the second commit, I wouldn't think you could drop the native_libmultiprocess package. The libmultiprocess & capnp packages are both fat packages producing multiple outputs which are sometimes unnecessary. A less wasteful capnp packaging would be divided in two parts, with one package to build command-line tools [`capnp`, etc](https://packages.debian.org/sid/amd64/capnproto/filelist) which only need to be natively compiled, and separate package to build  libraries [`libcapnp.a`, etc](https://packages.debian.org/sid/amd64/libcapnp-dev/filelist) which need to be cross and native. Similarly a less wasteful libmultiprocess packaging would define one package to build the [`mpgen`](https://github.com/chaincodelabs/libmultiprocess/blob/49dc279926fe852fc75b3da7582f146f0b805642/CMakeLists.txt#L76) codegen tool, which only needs to be built natively, and another package to build the [`libmultiprocess.a`](https://github.com/chaincodelabs/libmultiprocess/blob/49dc279926fe852fc75b3da7582f146f0b805642/CMakeLists.txt#L55) library. When I wrote these packages, I wrote them as fat packages building codegen executables and runtime libraries together, instead smaller packages building them separately, just for simplicity to avoid repeating the similar build definitions. I also didn't try to trim unnecessary outputs because they didn't seem very expensive to build.\r\n\r\nSo I don't understand how the second commit dropping `native_libmultiprocess` could work, given that bitcoin build needs it to provide a native `mpgen` codegen executable. The comment \"I don't understand why it currently has a dependency\" was just trying to say that `libmultiprocess` package should not depend on `native_libmultiprocess` package, not that `native_libmultiprocess` should not exist at all.\r\n\r\n**Questions / Recommendations** for this PR\r\n\r\n- I wonder if first commit is sufficient to fix problems, and maybe second and third commits are unnecessary? I think I would drop them and maybe make them into separate followups if they provide advantages.\r\n\r\n- This is more of a long term question, and maybe an ignorant one since I'm not familiar with the Guix build, but why do even need the depends system anymore? I'd expect the Guix build to define guix packages instead of using depends packages. I don't personally don't use depends since I use Nix and write a `shell.nix` to bring in developer dependencies.  I'd expect other developers to use their own preferred package managers. Do people actually use the depends system, or is there a thought of dropping it and just switching to guix packages for QA and releases and standard packages for developing?",
      "created_at" : "2022-05-01T14:54:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25046#issuecomment-1114257497",
      "id" : 1114257497,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25046",
      "node_id" : "IC_kwDOABII585CajhZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114257497/reactions"
      },
      "updated_at" : "2022-05-01T14:55:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114257497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky \r\n\r\nThank you for your review.\r\n\r\n> I wonder if first commit is sufficient to fix problems, and maybe second and third commits are unnecessary?\r\n\r\nDropped second and third commits.",
      "created_at" : "2022-05-01T15:23:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25046#issuecomment-1114264871",
      "id" : 1114264871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25046",
      "node_id" : "IC_kwDOABII585CalUn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114264871/reactions"
      },
      "updated_at" : "2022-05-01T15:23:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114264871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25046#discussion_r863911042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25046"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863911042"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"build: Fix `libmultiprocess` cross-compiling to Linux hosts\" (c0f5cc14ef9fae2b2de4222ee061729629ebb6b4)\r\n\r\nNote (just for understanding): This overrides the capnp tool paths used by the cross-compiled libmultiprocess build, so it will use native capnp tools, instead the cross compiled ones found by `find_package(CapnProto)` in the libmultiprocess build, which is needed to find the cross-compiled capnp libraries, but also finds the cross-compiled tools.\r\n\r\nThere's some documentation about overriding these variables: https://github.com/capnproto/capnproto/blob/55a368beb987abf9eeb9b3843e9c5423ad37ab29/c%2B%2B/cmake/CapnProtoConfig.cmake.in#L18-L22",
      "commit_id" : "c0f5cc14ef9fae2b2de4222ee061729629ebb6b4",
      "created_at" : "2022-05-03T15:35:55Z",
      "diff_hunk" : "@@ -4,6 +4,16 @@ $(package)_download_path=$(native_$(package)_download_path)\n $(package)_file_name=$(native_$(package)_file_name)\n $(package)_sha256_hash=$(native_$(package)_sha256_hash)\n $(package)_dependencies=native_$(package) capnp\n+ifneq ($(host),$(build))\n+$(package)_dependencies += native_capnp\n+endif\n+\n+define $(package)_set_vars :=\n+ifneq ($(host),$(build))\n+$(package)_cmake_opts := -DCAPNP_EXECUTABLE=\"$$(native_capnp_prefixbin)/capnp\"\n+$(package)_cmake_opts += -DCAPNPC_CXX_EXECUTABLE=\"$$(native_capnp_prefixbin)/capnpc-c++\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25046#discussion_r863911042",
      "id" : 863911042,
      "line" : 14,
      "node_id" : "PRRC_kwDOABII584zfjyC",
      "original_commit_id" : "c0f5cc14ef9fae2b2de4222ee061729629ebb6b4",
      "original_line" : 14,
      "original_position" : 11,
      "original_start_line" : 13,
      "path" : "depends/packages/libmultiprocess.mk",
      "position" : 11,
      "pull_request_review_id" : 960576362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25046",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863911042/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 13,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-03T15:57:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863911042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25046#discussion_r863919020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25046"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863919020"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"build: Fix `libmultiprocess` cross-compiling to Linux hosts\" (c0f5cc14ef9fae2b2de4222ee061729629ebb6b4)\r\n\r\nIn a different PR, could probably drop `native_$(package)` as a dependency here. The cross compiled libmultiprocess packages doesn't actually depend on native libmultiprocess package for anything. (This is different from the cross compiled capnp which does depend on the native capnp for codegen tools used during cross-compilation).",
      "commit_id" : "c0f5cc14ef9fae2b2de4222ee061729629ebb6b4",
      "created_at" : "2022-05-03T15:43:53Z",
      "diff_hunk" : "@@ -4,6 +4,16 @@ $(package)_download_path=$(native_$(package)_download_path)\n $(package)_file_name=$(native_$(package)_file_name)\n $(package)_sha256_hash=$(native_$(package)_sha256_hash)\n $(package)_dependencies=native_$(package) capnp",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25046#discussion_r863919020",
      "id" : 863919020,
      "line" : 6,
      "node_id" : "PRRC_kwDOABII584zflus",
      "original_commit_id" : "c0f5cc14ef9fae2b2de4222ee061729629ebb6b4",
      "original_line" : 6,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "depends/packages/libmultiprocess.mk",
      "position" : 3,
      "pull_request_review_id" : 960576362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25046",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863919020/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-03T15:57:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863919020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This is more of a long term question, and maybe an ignorant one since I'm not familiar with the Guix build, but why do even need the depends system anymore? I'd expect the Guix build to define guix packages instead of using depends packages. I don't personally don't use depends since I use Nix and write a shell.nix to bring in developer dependencies. I'd expect other developers to use their own preferred package managers. Do people actually use the depends system, or is there a thought of dropping it and just switching to guix packages for QA and releases and standard packages for developing?\r\n\r\nThe depends system exists as a middle ground between requiring Guix to build Bitcoin core, and being completely reliant on system packages, neither of which are ideal / usable for everyone scenarios.\r\n\r\n> I'd expect other developers to use their own preferred package managers. \r\n\r\nThis is fine unless your package manger has versions of our dependencies that are too old, broken in some way, or just not packaged. Package managers also have a tendency to patch their sources, and those patches may undermine some assumption we make, or subtly break things. Having the ability to compile using unpatched (or only our patches) source is nice. Package manger vendored libraries are also no-doubt configured / compiled (for better or worse) differently to how we build libraries in depends.\r\n\r\nI think for self-compiling end users, who may want to customize their builds slightly (i.e no port forwarding libs, no wallet, additional compiler flags etc), but otherwise want to compile a Bitcoin Core as close as possible to how we build releases, depends is very useful.\r\n\r\nDepends is also very convenient for cross-compilation. If we delete depends tomorrow, and I'm using a Debian machine, and want to cross-compile a deployable Bitcoin Core for macOS (with all optional features + gui). What would be your recommended way of doing so? It's probably going to end up being something like what depends would have been doing anyways, but I'm just going to have to put everything together manually, rather than running `make HOST=x` and plugging a `CONFIG_SITE` into configure. Slightly less involved (no SDK and less convoluted compiler setup), but a similar scenario, is if I'm cross-compiling for Windows.\r\n\r\nHaving a single source of truth, that defines the dependencies required to build Bitcoin Core, and how they are patched / compiled, which isn't reliant on other systems (i.e guix / nix) or tooling (other than, fairly basic compiler + utls + make etc), I think, is important, and, if for some reason we had to move away from Guix tomorrow, we could take depends, plug it into a different setup/environment that provides reproducibility, and just carry on.",
      "created_at" : "2022-05-04T11:07:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25046#issuecomment-1117185586",
      "id" : 1117185586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25046",
      "node_id" : "IC_kwDOABII585CluYy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117185586/reactions"
      },
      "updated_at" : "2022-05-04T11:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117185586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @fanquake! I didn't realize is that GUIX isn't actually available on macos. I assumed guix was like nix could easily be installed everywhere. I also didn't realize our GUIX build doesn't really define packages. It just calls `make -C depends` from a shell script. So my comment was written with false assumption that there was no need for `depends/packages/boost.mk` and similar package definitions because there were GUIX versions of these packages.\r\n\r\n> If we delete depends tomorrow, and I'm using a Debian machine, and want to cross-compile a deployable Bitcoin Core for macOS (with all optional features + gui). What would be your recommended way of doing so?\r\n\r\nPresumably guix has an option to cross compile packages. In nix it is something like `--arg crossSystem '{ config = \"aarch64-unknown-linux-gnu\"; }'`\r\n\r\n> The depends system exists as a middle ground between requiring Guix to build Bitcoin core, and being completely reliant on system packages, neither of which are ideal / usable for everyone scenarios.\r\n\r\nThe depends system just seems like a bootleg version of nix or guix to me with nonstandard package definitions that are fragile painful to debug[*]. So I don't know why anybody would use depends if there were guix package definitions easily available somewhere. This seems like it is not the case, and guix itself is not very portable, and guix may be generally less useful as a package manager for development than nix (https://nix.dev/).\r\n\r\n[*] My main problem debugging depends packages is It seems to love immediately deleting stuff after building it. So if anything isn't built correctly I have to wait for a slow rebuild and figure out some incantation that will do a partial build keeping the output I want to look at. I was waiting for GUIX to solve this but I guess the scope of our GUIX build is just to provide a build environment, not be a development package manager.",
      "created_at" : "2022-05-04T12:17:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25046#issuecomment-1117244579",
      "id" : 1117244579,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25046",
      "node_id" : "IC_kwDOABII585Cl8yj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117244579/reactions"
      },
      "updated_at" : "2022-05-04T12:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117244579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
