[
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors ",
      "created_at" : "2023-05-25T09:22:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/27749#issuecomment-1562574435",
      "id" : 1562574435,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27749",
      "node_id" : "IC_kwDOABII585dIv5j",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1562574435/reactions"
      },
      "updated_at" : "2023-05-25T09:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1562574435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "FWIW I have seen this error once before running tests locally, but I was making changes to `reconsiderblock` at the time and assumed it was related to that.",
      "created_at" : "2023-05-26T09:59:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/27749#issuecomment-1564135165",
      "id" : 1564135165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27749",
      "node_id" : "IC_kwDOABII585dOs79",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1564135165/reactions"
      },
      "updated_at" : "2023-05-26T09:59:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1564135165",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I wasn't able to reproduce it but my spider sense tells me that it will be fixed by #27770.",
      "created_at" : "2023-05-26T21:17:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/27749#issuecomment-1564966458",
      "id" : 1564966458,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27749",
      "node_id" : "IC_kwDOABII585dR346",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1564966458/reactions"
      },
      "updated_at" : "2023-05-26T21:17:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1564966458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "After digging deeper and analyzing the [failed CI log](https://api.cirrus-ci.com/v1/task/4776911524593664/logs/ci.log), I got a clearer picture what's going on here.\r\nComparing the \"Leaving block file\" debug messages from a successful and the failed test run gave the\r\nessential hint:\r\n\r\n```\r\n$ grep \"Leaving block\" successful_run.log\r\nLeaving block file 0: CBlockFileInfo(blocks=249, size=65319, heights=0...248, time=2011-02-02...2023-05-28)\r\nLeaving block file 1: CBlockFileInfo(blocks=251, size=65511, heights=249...499, time=2023-05-28...2023-05-28)\r\n\r\n$ grep \"Leaving block\" failed_ci.log\r\nLeaving block file 0: CBlockFileInfo(blocks=249, size=65319, heights=0...249, time=2011-02-02...2023-05-24)\r\nLeaving block file 1: CBlockFileInfo(blocks=251, size=65511, heights=248...499, time=2023-05-24...2023-05-24)\r\n```\r\n\r\nBlocks are appended to blk*.dat files in whatever order they are received from the network (either directly as\r\n\"block\" message or reconstructed via compact blocks), and it turns out that in this (obviously rare?) scenario node2 saw block 249 before block 248, so block 249 makes it still into blk00000.dat and block 248 is already ending up in the next one, blk00001.dat. So in this case, the `pruneblockchain` return value is obviously one higher than usual (249 vs. 248).\r\n\r\nI was surprised to see that even with only a single peer (node2 is only getting blocks from node0) blocks could arrive out-of-order, but that seems to be due to a mix of receiving full blocks and compact blocks. Wrote up some [hacky python-regex-log-parsing magic](https://gist.github.com/theStack/cb5a08583b0a7376c2155b21a10dbbb7) to compare order of the actual chain (as generated on node0) with on how it's received on node2, confirming what's stated above:\r\n<details>\r\n\r\n```\r\n$ ./analyze_issue_27749.py\r\nnode2 received block 201, OK.\r\nnode2 received block 202, OK.\r\nnode2 received block 203, OK.\r\nnode2 received block 204, OK.\r\nnode2 received block 205, OK.\r\nnode2 reconstructed block 206, OK.\r\nnode2 received block 207, OK.\r\nnode2 received block 208, OK.\r\nnode2 received block 209, OK.\r\nnode2 received block 210, OK.\r\nnode2 received block 211, OK.\r\n!!! expected to receive/reconstruct block 212, but reconstructed block 213 !!!\r\n!!! expected to receive/reconstruct block 213, but received block 212 !!!\r\nnode2 received block 214, OK.\r\nnode2 received block 215, OK.\r\nnode2 received block 216, OK.\r\nnode2 received block 217, OK.\r\nnode2 received block 218, OK.\r\nnode2 received block 219, OK.\r\nnode2 received block 220, OK.\r\nnode2 received block 221, OK.\r\nnode2 received block 222, OK.\r\nnode2 received block 223, OK.\r\nnode2 received block 224, OK.\r\nnode2 received block 225, OK.\r\nnode2 received block 226, OK.\r\nnode2 received block 227, OK.\r\nnode2 received block 228, OK.\r\nnode2 received block 229, OK.\r\nnode2 received block 230, OK.\r\nnode2 received block 231, OK.\r\nnode2 received block 232, OK.\r\nnode2 received block 233, OK.\r\nnode2 received block 234, OK.\r\nnode2 received block 235, OK.\r\nnode2 received block 236, OK.\r\nnode2 received block 237, OK.\r\nnode2 received block 238, OK.\r\nnode2 received block 239, OK.\r\nnode2 received block 240, OK.\r\nnode2 received block 241, OK.\r\nnode2 received block 242, OK.\r\nnode2 received block 243, OK.\r\nnode2 received block 244, OK.\r\nnode2 received block 245, OK.\r\nnode2 received block 246, OK.\r\nnode2 received block 247, OK.\r\n!!! expected to receive/reconstruct block 248, but reconstructed block 249 !!!\r\n!!! expected to receive/reconstruct block 249, but received block 248 !!!\r\nnode2 reconstructed block 250, OK.\r\nnode2 reconstructed block 251, OK.\r\nnode2 reconstructed block 252, OK.\r\nnode2 reconstructed block 253, OK.\r\nnode2 reconstructed block 254, OK.\r\nnode2 reconstructed block 255, OK.\r\nnode2 reconstructed block 256, OK.\r\n..........\r\nnode2 reconstructed block 605, OK.\r\n```\r\n\r\n</details>\r\n\r\nNot sure how to best solve this issue. Is there a way to enforce linear blocks reception at least when only having a single peer? Or maybe the best solution would be to not involve the network at node2 at all (for the sake of the pruning part of the test) and just `submitblock` the blocks generated at node0? #27770 is of course always an alternative.",
      "created_at" : "2023-05-29T01:22:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/27749#issuecomment-1566354933",
      "id" : 1566354933,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27749",
      "node_id" : "IC_kwDOABII585dXK31",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1566354933/reactions"
      },
      "updated_at" : "2023-05-29T01:25:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1566354933",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice analysis!\r\n\r\n> Not sure how to best solve this issue. Is there a way to enforce linear blocks reception at least when only having a single peer?\r\n\r\nI think the cause is that a failed DoS check\r\n`if (pindex->nHeight <= m_chainman.ActiveChain().Height() + 2) ` ([link](https://github.com/bitcoin/bitcoin/blob/7d33ae755de2bff806fe600bdaebedbd7fa67aba/src/net_processing.cpp#LL4342C9-L4342C72))\r\nwill revert to HeadersProcessing if the chain of node2 hasn't caught up enough (the new block is too far ahead of the existing chain), adding another roundtrip compared to the block download compared to compact block reconstruction. When node2 has caught up and switches to compact block reconstruction, the two blocks can arrive to disk in a different order. \r\nThis can happen in the first place because node2 initially also needs to catch up with blocks 201-205 from the first part of the test (and is rather slow to do so in the failed run!). \r\n\r\nSo I think that an alternative fix would be to add a sync_blocks call between node0 and node2 before letting node0 generate the 400 blocks. This should guarantee that all of these 400 blocks will be processed by compact block reconstruction.",
      "created_at" : "2023-05-29T05:07:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/27749#issuecomment-1566554075",
      "id" : 1566554075,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27749",
      "node_id" : "IC_kwDOABII585dX7fb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1566554075/reactions"
      },
      "updated_at" : "2023-05-29T05:07:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1566554075",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Awesome investigation! It feels good when all dots are connected.\r\n\r\nApart from mzumzande's patch to enforce sequential block storage, which looks promising at first glance. I would like to refer to a portion of what I just wrote in https://github.com/bitcoin/bitcoin/pull/27770#issuecomment-1567161622:\r\n\r\nI believe the main conclusion of the analysis (at least mine) is that the accuracy of the `pruneblockchain` result is questionable. The real issue lies in the fact that the RPC command's result description claims to return the \"height of the last block pruned\", which may not be true since blocks could have been stored out of order. Therefore, obtaining the block height 249 as the \"last block pruned\" does not necessarily indicate that block 248 has been pruned from disk.\r\n\r\nConsidering this aspect, alongside mzumzande's fix, I hold the view that the test is quite fragile and would be unwise to maintain the current prune blockchain hardcoded numbers. These numbers have a significant discrepancy vs the block files information (as indicated in [comment](https://github.com/bitcoin/bitcoin/pull/27770#issuecomment-1567161622)) and aren't really documented anywhere.",
      "created_at" : "2023-05-29T14:27:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/27749#issuecomment-1567211356",
      "id" : 1567211356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27749",
      "node_id" : "IC_kwDOABII585dab9c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1567211356/reactions"
      },
      "updated_at" : "2023-05-29T14:44:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1567211356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   }
]
