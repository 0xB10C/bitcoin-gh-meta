[
   {
      "author_association" : "MEMBER",
      "body" : "Test output after these changes.  The slow legacy multisig tests are placed at the end.\r\n\r\n```rake\r\n$ test/functional/rpc_rawtransaction.py \r\n2021-07-13T13:42:55.022000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_u_56kycw\r\n2021-07-13T13:42:56.672000Z TestFramework (INFO): Prepare some coins for multiple *rawtransaction commands\r\n2021-07-13T13:43:04.132000Z TestFramework (INFO): Test getrawtransaction with -txindex, without -blocksonly\r\n2021-07-13T13:43:04.305000Z TestFramework (INFO): Test getrawtransaction without -txindex, without -blocksonly\r\n2021-07-13T13:43:04.447000Z TestFramework (INFO): Test getrawtransaction without -txindex, with -blocksonly\r\n2021-07-13T13:43:04.603000Z TestFramework (INFO): Test getrawtransaction with -txindex, with -blocksonly\r\n2021-07-13T13:43:04.763000Z TestFramework (INFO): Test getrawtransaction on genesis block coinbase returns an error\r\n2021-07-13T13:43:04.770000Z TestFramework (INFO): Test createrawtransaction\r\n2021-07-13T13:43:04.917000Z TestFramework (INFO): Test sendrawtransaction with missing input\r\n2021-07-13T13:43:04.969000Z TestFramework (INFO): Test sendrawtransaction with missing prevtx info (bech32)\r\n2021-07-13T13:43:05.055000Z TestFramework (INFO): Test sendrawtransaction with missing prevtx info (p2sh-segwit)\r\n2021-07-13T13:43:05.121000Z TestFramework (INFO): Test sendrawtransaction with missing prevtx info (legacy)\r\n2021-07-13T13:43:05.165000Z TestFramework (INFO): Test sendrawtransaction/testmempoolaccept with maxfeerate\r\n2021-07-13T13:43:07.578000Z TestFramework (INFO): Test decoderawtransaction\r\n2021-07-13T13:43:07.598000Z TestFramework (INFO): Test transaction version numbers\r\n2021-07-13T13:43:07.602000Z TestFramework (INFO): Test raw multisig transactions (legacy)\r\n2021-07-13T13:43:13.866000Z TestFramework (INFO): Stopping nodes\r\n2021-07-13T13:43:14.133000Z TestFramework (INFO): Cleaning up /tmp/bitcoin_func_test_u_56kycw on exit\r\n2021-07-13T13:43:14.134000Z TestFramework (INFO): Tests successful\r\n```\r\n",
      "created_at" : "2021-07-13T13:46:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#issuecomment-879102807",
      "id" : 879102807,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22437",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3OTEwMjgwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-13T13:46:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/879102807",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20892 by achow101\n* #20362 by MarcoFalke\n* #19831 by MarcoFalke\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-07-13T19:10:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#issuecomment-879332860",
      "id" : 879332860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22437",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3OTMzMjg2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-13T19:10:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/879332860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 993189b1fe39cfc29e960ea3a20092309001fa8f very nicely done!",
      "created_at" : "2021-07-14T19:46:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#issuecomment-880161748",
      "id" : 880161748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22437",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg4MDE2MTc0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-14T19:46:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880161748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @mjdietzx!  Rebased to master following the merge of #22447, dropping the first two commits; no other change.\r\n\r\n`git range-diff 97153a7 993189b d27edf1`",
      "created_at" : "2021-07-15T08:20:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#issuecomment-880497872",
      "id" : 880497872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22437",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg4MDQ5Nzg3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-15T08:20:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880497872",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r673478039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/673478039"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe:\r\n\r\n```suggestion\r\n            # 2. invalid parameters - supply txid and string \"Flase\" (intentionally misspelled \"False\").\r\n```\r\n\r\n?",
      "commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "created_at" : "2021-07-20T20:42:39Z",
      "diff_hunk" : "@@ -69,24 +74,129 @@ def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n+    def sync_peers(self):\n+        self.sync_mempools(self.nodes[0:3])\n+        self.sync_blocks()\n+\n+    def generate_and_sync(self, node, blocks):\n+        self.sync_peers()\n+        self.nodes[node].generate(blocks)\n+        self.sync_peers()\n+\n     def run_test(self):\n-        self.log.info('prepare some coins for multiple *rawtransaction commands')\n-        self.nodes[2].generate(1)\n-        self.sync_all()\n-        self.nodes[0].generate(COINBASE_MATURITY + 1)\n-        self.sync_all()\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.5)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.0)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),5.0)\n-        self.sync_all()\n-        self.nodes[0].generate(5)\n-        self.sync_all()\n-\n-        self.log.info('Test getrawtransaction on genesis block coinbase returns an error')\n+        self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n+        self.generate_and_sync(node=2, blocks=1)\n+        self.generate_and_sync(node=0, blocks=COINBASE_MATURITY + 1)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.5)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.0)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 5.0)\n+        self.generate_and_sync(node=0, blocks=5)\n+\n+        self.getrawtransaction_tests()\n+        self.createrawtransaction_tests()\n+        self.sendrawtransaction_tests()\n+        self.sendrawtransaction_testmempoolaccept_tests()\n+        self.decoderawtransaction_tests()\n+        self.transaction_version_number_tests()\n+        if not self.options.descriptors:\n+            self.raw_multisig_transaction_legacy_tests()\n+\n+    def getrawtransaction_tests(self):\n+        addr = self.nodes[1].getnewaddress()\n+        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        self.generate_and_sync(node=0, blocks=1)\n+        vout = find_vout_for_address(self.nodes[1], txid, addr)\n+        rawTx = self.nodes[1].createrawtransaction([{'txid': txid, 'vout': vout}], {self.nodes[1].getnewaddress(): 9.999})\n+        rawTxSigned = self.nodes[1].signrawtransactionwithwallet(rawTx)\n+        txId = self.nodes[1].sendrawtransaction(rawTxSigned['hex'])\n+        self.generate_and_sync(node=0, blocks=1)\n+\n+        # Make a tx by sending, then generate 2 blocks; block1 has the tx in it\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_peers()\n+\n+        err_msg = (\n+            \"No such mempool transaction. Use -txindex or provide a block hash to enable\"\n+            \" blockchain transaction queries. Use gettransaction for wallet transactions.\"\n+        )\n+\n+        for n in [0, 3, 4, 5]:\n+            self.log.info(\n+                f\"Test getrawtransaction {'with' if n == 0 or n == 5 else 'without'} -txindex,\"\n+                f\" {'with' if n >= 4 else 'without'} -blocksonly\"\n+            )\n+\n+            # 1. valid parameters - supply txid along with various valid values for verbose\n+            if n == 0 or n == 5:\n+                # with -txindex\n+                for verbose in [None, 0, False]:\n+                    gottx = self.nodes[n].getrawtransaction(txId, verbose)\n+                    assert_equal(gottx, rawTxSigned['hex'])\n+                    assert 'in_active_chain' not in gottx\n+                for verbose in [1, True]:\n+                    # We only check the \"hex\" field of the output so we don't need to update\n+                    # this test every time the output format changes.\n+                    gottx = self.nodes[n].getrawtransaction(txId, verbose)['hex']\n+                    assert_equal(gottx, rawTxSigned['hex'])\n+                    assert 'in_active_chain' not in gottx\n+            else:\n+                # without -txindex\n+                for verbose in [None, 0, False, 1, True]:\n+                    assert_raises_rpc_error(-5, err_msg, self.nodes[n].getrawtransaction, txid, verbose)\n+\n+            # 2. invalid parameters - supply txid and string \"Flase\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r673478039",
      "id" : 673478039,
      "line" : 148,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MzQ3ODAzOQ==",
      "original_commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "original_line" : 148,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "test/functional/rpc_rawtransaction.py",
      "position" : 118,
      "pull_request_review_id" : 711046958,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-20T21:02:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/673478039",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r673481308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/673481308"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is suspicious to me. Isn't this always true given that `gottx` is in hex?",
      "commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "created_at" : "2021-07-20T20:47:42Z",
      "diff_hunk" : "@@ -69,24 +74,129 @@ def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n+    def sync_peers(self):\n+        self.sync_mempools(self.nodes[0:3])\n+        self.sync_blocks()\n+\n+    def generate_and_sync(self, node, blocks):\n+        self.sync_peers()\n+        self.nodes[node].generate(blocks)\n+        self.sync_peers()\n+\n     def run_test(self):\n-        self.log.info('prepare some coins for multiple *rawtransaction commands')\n-        self.nodes[2].generate(1)\n-        self.sync_all()\n-        self.nodes[0].generate(COINBASE_MATURITY + 1)\n-        self.sync_all()\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.5)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.0)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),5.0)\n-        self.sync_all()\n-        self.nodes[0].generate(5)\n-        self.sync_all()\n-\n-        self.log.info('Test getrawtransaction on genesis block coinbase returns an error')\n+        self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n+        self.generate_and_sync(node=2, blocks=1)\n+        self.generate_and_sync(node=0, blocks=COINBASE_MATURITY + 1)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.5)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.0)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 5.0)\n+        self.generate_and_sync(node=0, blocks=5)\n+\n+        self.getrawtransaction_tests()\n+        self.createrawtransaction_tests()\n+        self.sendrawtransaction_tests()\n+        self.sendrawtransaction_testmempoolaccept_tests()\n+        self.decoderawtransaction_tests()\n+        self.transaction_version_number_tests()\n+        if not self.options.descriptors:\n+            self.raw_multisig_transaction_legacy_tests()\n+\n+    def getrawtransaction_tests(self):\n+        addr = self.nodes[1].getnewaddress()\n+        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        self.generate_and_sync(node=0, blocks=1)\n+        vout = find_vout_for_address(self.nodes[1], txid, addr)\n+        rawTx = self.nodes[1].createrawtransaction([{'txid': txid, 'vout': vout}], {self.nodes[1].getnewaddress(): 9.999})\n+        rawTxSigned = self.nodes[1].signrawtransactionwithwallet(rawTx)\n+        txId = self.nodes[1].sendrawtransaction(rawTxSigned['hex'])\n+        self.generate_and_sync(node=0, blocks=1)\n+\n+        # Make a tx by sending, then generate 2 blocks; block1 has the tx in it\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_peers()\n+\n+        err_msg = (\n+            \"No such mempool transaction. Use -txindex or provide a block hash to enable\"\n+            \" blockchain transaction queries. Use gettransaction for wallet transactions.\"\n+        )\n+\n+        for n in [0, 3, 4, 5]:\n+            self.log.info(\n+                f\"Test getrawtransaction {'with' if n == 0 or n == 5 else 'without'} -txindex,\"\n+                f\" {'with' if n >= 4 else 'without'} -blocksonly\"\n+            )\n+\n+            # 1. valid parameters - supply txid along with various valid values for verbose\n+            if n == 0 or n == 5:\n+                # with -txindex\n+                for verbose in [None, 0, False]:\n+                    gottx = self.nodes[n].getrawtransaction(txId, verbose)\n+                    assert_equal(gottx, rawTxSigned['hex'])\n+                    assert 'in_active_chain' not in gottx\n+                for verbose in [1, True]:\n+                    # We only check the \"hex\" field of the output so we don't need to update\n+                    # this test every time the output format changes.\n+                    gottx = self.nodes[n].getrawtransaction(txId, verbose)['hex']\n+                    assert_equal(gottx, rawTxSigned['hex'])\n+                    assert 'in_active_chain' not in gottx",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r673481308",
      "id" : 673481308,
      "line" : 142,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MzQ4MTMwOA==",
      "original_commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "original_line" : 142,
      "original_position" : 112,
      "original_start_line" : null,
      "path" : "test/functional/rpc_rawtransaction.py",
      "position" : 112,
      "pull_request_review_id" : 711046958,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-20T21:02:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/673481308",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r673490146"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/673490146"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Question: Is this intentionally only on 4 nodes instead of 6? If it is, maybe `sync_peers` should be called slightly differently not to give the wrong impression.",
      "commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "created_at" : "2021-07-20T21:01:05Z",
      "diff_hunk" : "@@ -69,24 +74,129 @@ def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n+    def sync_peers(self):\n+        self.sync_mempools(self.nodes[0:3])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r673490146",
      "id" : 673490146,
      "line" : 78,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MzQ5MDE0Ng==",
      "original_commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "original_line" : 78,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/rpc_rawtransaction.py",
      "position" : 35,
      "pull_request_review_id" : 711046958,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-20T21:02:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/673490146",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r673496593"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/673496593"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not originally your code, but variables named `txid` and `txId` are very easy to confuse, I think.",
      "commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "created_at" : "2021-07-20T21:11:19Z",
      "diff_hunk" : "@@ -69,24 +74,129 @@ def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n+    def sync_peers(self):\n+        self.sync_mempools(self.nodes[0:3])\n+        self.sync_blocks()\n+\n+    def generate_and_sync(self, node, blocks):\n+        self.sync_peers()\n+        self.nodes[node].generate(blocks)\n+        self.sync_peers()\n+\n     def run_test(self):\n-        self.log.info('prepare some coins for multiple *rawtransaction commands')\n-        self.nodes[2].generate(1)\n-        self.sync_all()\n-        self.nodes[0].generate(COINBASE_MATURITY + 1)\n-        self.sync_all()\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.5)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.0)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),5.0)\n-        self.sync_all()\n-        self.nodes[0].generate(5)\n-        self.sync_all()\n-\n-        self.log.info('Test getrawtransaction on genesis block coinbase returns an error')\n+        self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n+        self.generate_and_sync(node=2, blocks=1)\n+        self.generate_and_sync(node=0, blocks=COINBASE_MATURITY + 1)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.5)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.0)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 5.0)\n+        self.generate_and_sync(node=0, blocks=5)\n+\n+        self.getrawtransaction_tests()\n+        self.createrawtransaction_tests()\n+        self.sendrawtransaction_tests()\n+        self.sendrawtransaction_testmempoolaccept_tests()\n+        self.decoderawtransaction_tests()\n+        self.transaction_version_number_tests()\n+        if not self.options.descriptors:\n+            self.raw_multisig_transaction_legacy_tests()\n+\n+    def getrawtransaction_tests(self):\n+        addr = self.nodes[1].getnewaddress()\n+        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        self.generate_and_sync(node=0, blocks=1)\n+        vout = find_vout_for_address(self.nodes[1], txid, addr)\n+        rawTx = self.nodes[1].createrawtransaction([{'txid': txid, 'vout': vout}], {self.nodes[1].getnewaddress(): 9.999})\n+        rawTxSigned = self.nodes[1].signrawtransactionwithwallet(rawTx)\n+        txId = self.nodes[1].sendrawtransaction(rawTxSigned['hex'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r673496593",
      "id" : 673496593,
      "line" : 111,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MzQ5NjU5Mw==",
      "original_commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "original_line" : 111,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "test/functional/rpc_rawtransaction.py",
      "position" : 81,
      "pull_request_review_id" : 711070104,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-20T21:11:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/673496593",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r673498569"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/673498569"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I would expect `txId` instead of `txid` here. Or can you explain this please?",
      "commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "created_at" : "2021-07-20T21:14:44Z",
      "diff_hunk" : "@@ -69,24 +74,129 @@ def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n+    def sync_peers(self):\n+        self.sync_mempools(self.nodes[0:3])\n+        self.sync_blocks()\n+\n+    def generate_and_sync(self, node, blocks):\n+        self.sync_peers()\n+        self.nodes[node].generate(blocks)\n+        self.sync_peers()\n+\n     def run_test(self):\n-        self.log.info('prepare some coins for multiple *rawtransaction commands')\n-        self.nodes[2].generate(1)\n-        self.sync_all()\n-        self.nodes[0].generate(COINBASE_MATURITY + 1)\n-        self.sync_all()\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.5)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.0)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),5.0)\n-        self.sync_all()\n-        self.nodes[0].generate(5)\n-        self.sync_all()\n-\n-        self.log.info('Test getrawtransaction on genesis block coinbase returns an error')\n+        self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n+        self.generate_and_sync(node=2, blocks=1)\n+        self.generate_and_sync(node=0, blocks=COINBASE_MATURITY + 1)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.5)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.0)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 5.0)\n+        self.generate_and_sync(node=0, blocks=5)\n+\n+        self.getrawtransaction_tests()\n+        self.createrawtransaction_tests()\n+        self.sendrawtransaction_tests()\n+        self.sendrawtransaction_testmempoolaccept_tests()\n+        self.decoderawtransaction_tests()\n+        self.transaction_version_number_tests()\n+        if not self.options.descriptors:\n+            self.raw_multisig_transaction_legacy_tests()\n+\n+    def getrawtransaction_tests(self):\n+        addr = self.nodes[1].getnewaddress()\n+        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        self.generate_and_sync(node=0, blocks=1)\n+        vout = find_vout_for_address(self.nodes[1], txid, addr)\n+        rawTx = self.nodes[1].createrawtransaction([{'txid': txid, 'vout': vout}], {self.nodes[1].getnewaddress(): 9.999})\n+        rawTxSigned = self.nodes[1].signrawtransactionwithwallet(rawTx)\n+        txId = self.nodes[1].sendrawtransaction(rawTxSigned['hex'])\n+        self.generate_and_sync(node=0, blocks=1)\n+\n+        # Make a tx by sending, then generate 2 blocks; block1 has the tx in it\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_peers()\n+\n+        err_msg = (\n+            \"No such mempool transaction. Use -txindex or provide a block hash to enable\"\n+            \" blockchain transaction queries. Use gettransaction for wallet transactions.\"\n+        )\n+\n+        for n in [0, 3, 4, 5]:\n+            self.log.info(\n+                f\"Test getrawtransaction {'with' if n == 0 or n == 5 else 'without'} -txindex,\"\n+                f\" {'with' if n >= 4 else 'without'} -blocksonly\"\n+            )\n+\n+            # 1. valid parameters - supply txid along with various valid values for verbose\n+            if n == 0 or n == 5:\n+                # with -txindex\n+                for verbose in [None, 0, False]:\n+                    gottx = self.nodes[n].getrawtransaction(txId, verbose)\n+                    assert_equal(gottx, rawTxSigned['hex'])\n+                    assert 'in_active_chain' not in gottx\n+                for verbose in [1, True]:\n+                    # We only check the \"hex\" field of the output so we don't need to update\n+                    # this test every time the output format changes.\n+                    gottx = self.nodes[n].getrawtransaction(txId, verbose)['hex']\n+                    assert_equal(gottx, rawTxSigned['hex'])\n+                    assert 'in_active_chain' not in gottx\n+            else:\n+                # without -txindex\n+                for verbose in [None, 0, False, 1, True]:\n+                    assert_raises_rpc_error(-5, err_msg, self.nodes[n].getrawtransaction, txid, verbose)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r673498569",
      "id" : 673498569,
      "line" : 146,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MzQ5ODU2OQ==",
      "original_commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "original_line" : 146,
      "original_position" : 116,
      "original_start_line" : null,
      "path" : "test/functional/rpc_rawtransaction.py",
      "position" : 116,
      "pull_request_review_id" : 711072535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-20T21:14:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/673498569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r675615674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675615674"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it necessary here to have `node[2]` create 1 block first? ",
      "commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "created_at" : "2021-07-23T14:38:02Z",
      "diff_hunk" : "@@ -69,24 +74,129 @@ def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n+    def sync_peers(self):\n+        self.sync_mempools(self.nodes[0:3])\n+        self.sync_blocks()\n+\n+    def generate_and_sync(self, node, blocks):\n+        self.sync_peers()\n+        self.nodes[node].generate(blocks)\n+        self.sync_peers()\n+\n     def run_test(self):\n-        self.log.info('prepare some coins for multiple *rawtransaction commands')\n-        self.nodes[2].generate(1)\n-        self.sync_all()\n-        self.nodes[0].generate(COINBASE_MATURITY + 1)\n-        self.sync_all()\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.5)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.0)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),5.0)\n-        self.sync_all()\n-        self.nodes[0].generate(5)\n-        self.sync_all()\n-\n-        self.log.info('Test getrawtransaction on genesis block coinbase returns an error')\n+        self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n+        self.generate_and_sync(node=2, blocks=1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r675615674",
      "id" : 675615674,
      "line" : 88,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NTYxNTY3NA==",
      "original_commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "original_line" : 88,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/rpc_rawtransaction.py",
      "position" : 58,
      "pull_request_review_id" : 713795683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-23T15:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675615674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/36541669?v=4",
         "events_url" : "https://api.github.com/users/rajarshimaitra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rajarshimaitra/followers",
         "following_url" : "https://api.github.com/users/rajarshimaitra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rajarshimaitra",
         "id" : 36541669,
         "login" : "rajarshimaitra",
         "node_id" : "MDQ6VXNlcjM2NTQxNjY5",
         "organizations_url" : "https://api.github.com/users/rajarshimaitra/orgs",
         "received_events_url" : "https://api.github.com/users/rajarshimaitra/received_events",
         "repos_url" : "https://api.github.com/users/rajarshimaitra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rajarshimaitra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rajarshimaitra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r675626356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675626356"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "+1. Maybe something like `txid1`, `txid2`? ",
      "commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "created_at" : "2021-07-23T14:52:33Z",
      "diff_hunk" : "@@ -69,24 +74,129 @@ def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n+    def sync_peers(self):\n+        self.sync_mempools(self.nodes[0:3])\n+        self.sync_blocks()\n+\n+    def generate_and_sync(self, node, blocks):\n+        self.sync_peers()\n+        self.nodes[node].generate(blocks)\n+        self.sync_peers()\n+\n     def run_test(self):\n-        self.log.info('prepare some coins for multiple *rawtransaction commands')\n-        self.nodes[2].generate(1)\n-        self.sync_all()\n-        self.nodes[0].generate(COINBASE_MATURITY + 1)\n-        self.sync_all()\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.5)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.0)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),5.0)\n-        self.sync_all()\n-        self.nodes[0].generate(5)\n-        self.sync_all()\n-\n-        self.log.info('Test getrawtransaction on genesis block coinbase returns an error')\n+        self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n+        self.generate_and_sync(node=2, blocks=1)\n+        self.generate_and_sync(node=0, blocks=COINBASE_MATURITY + 1)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.5)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.0)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 5.0)\n+        self.generate_and_sync(node=0, blocks=5)\n+\n+        self.getrawtransaction_tests()\n+        self.createrawtransaction_tests()\n+        self.sendrawtransaction_tests()\n+        self.sendrawtransaction_testmempoolaccept_tests()\n+        self.decoderawtransaction_tests()\n+        self.transaction_version_number_tests()\n+        if not self.options.descriptors:\n+            self.raw_multisig_transaction_legacy_tests()\n+\n+    def getrawtransaction_tests(self):\n+        addr = self.nodes[1].getnewaddress()\n+        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        self.generate_and_sync(node=0, blocks=1)\n+        vout = find_vout_for_address(self.nodes[1], txid, addr)\n+        rawTx = self.nodes[1].createrawtransaction([{'txid': txid, 'vout': vout}], {self.nodes[1].getnewaddress(): 9.999})\n+        rawTxSigned = self.nodes[1].signrawtransactionwithwallet(rawTx)\n+        txId = self.nodes[1].sendrawtransaction(rawTxSigned['hex'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r675626356",
      "id" : 675626356,
      "in_reply_to_id" : 673496593,
      "line" : 111,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NTYyNjM1Ng==",
      "original_commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "original_line" : 111,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "test/functional/rpc_rawtransaction.py",
      "position" : 81,
      "pull_request_review_id" : 713795683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-23T15:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675626356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/36541669?v=4",
         "events_url" : "https://api.github.com/users/rajarshimaitra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rajarshimaitra/followers",
         "following_url" : "https://api.github.com/users/rajarshimaitra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rajarshimaitra",
         "id" : 36541669,
         "login" : "rajarshimaitra",
         "node_id" : "MDQ6VXNlcjM2NTQxNjY5",
         "organizations_url" : "https://api.github.com/users/rajarshimaitra/orgs",
         "received_events_url" : "https://api.github.com/users/rajarshimaitra/received_events",
         "repos_url" : "https://api.github.com/users/rajarshimaitra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rajarshimaitra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rajarshimaitra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r675629014"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675629014"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This doesn't seem like `getrawtransaction()` tests. Maybe test `5` and `6` should be moved into `createrawtransaction()` test group? ",
      "commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "created_at" : "2021-07-23T14:56:01Z",
      "diff_hunk" : "@@ -69,24 +74,129 @@ def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n+    def sync_peers(self):\n+        self.sync_mempools(self.nodes[0:3])\n+        self.sync_blocks()\n+\n+    def generate_and_sync(self, node, blocks):\n+        self.sync_peers()\n+        self.nodes[node].generate(blocks)\n+        self.sync_peers()\n+\n     def run_test(self):\n-        self.log.info('prepare some coins for multiple *rawtransaction commands')\n-        self.nodes[2].generate(1)\n-        self.sync_all()\n-        self.nodes[0].generate(COINBASE_MATURITY + 1)\n-        self.sync_all()\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.5)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.0)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),5.0)\n-        self.sync_all()\n-        self.nodes[0].generate(5)\n-        self.sync_all()\n-\n-        self.log.info('Test getrawtransaction on genesis block coinbase returns an error')\n+        self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n+        self.generate_and_sync(node=2, blocks=1)\n+        self.generate_and_sync(node=0, blocks=COINBASE_MATURITY + 1)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.5)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.0)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 5.0)\n+        self.generate_and_sync(node=0, blocks=5)\n+\n+        self.getrawtransaction_tests()\n+        self.createrawtransaction_tests()\n+        self.sendrawtransaction_tests()\n+        self.sendrawtransaction_testmempoolaccept_tests()\n+        self.decoderawtransaction_tests()\n+        self.transaction_version_number_tests()\n+        if not self.options.descriptors:\n+            self.raw_multisig_transaction_legacy_tests()\n+\n+    def getrawtransaction_tests(self):\n+        addr = self.nodes[1].getnewaddress()\n+        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        self.generate_and_sync(node=0, blocks=1)\n+        vout = find_vout_for_address(self.nodes[1], txid, addr)\n+        rawTx = self.nodes[1].createrawtransaction([{'txid': txid, 'vout': vout}], {self.nodes[1].getnewaddress(): 9.999})\n+        rawTxSigned = self.nodes[1].signrawtransactionwithwallet(rawTx)\n+        txId = self.nodes[1].sendrawtransaction(rawTxSigned['hex'])\n+        self.generate_and_sync(node=0, blocks=1)\n+\n+        # Make a tx by sending, then generate 2 blocks; block1 has the tx in it\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_peers()\n+\n+        err_msg = (\n+            \"No such mempool transaction. Use -txindex or provide a block hash to enable\"\n+            \" blockchain transaction queries. Use gettransaction for wallet transactions.\"\n+        )\n+\n+        for n in [0, 3, 4, 5]:\n+            self.log.info(\n+                f\"Test getrawtransaction {'with' if n == 0 or n == 5 else 'without'} -txindex,\"\n+                f\" {'with' if n >= 4 else 'without'} -blocksonly\"\n+            )\n+\n+            # 1. valid parameters - supply txid along with various valid values for verbose\n+            if n == 0 or n == 5:\n+                # with -txindex\n+                for verbose in [None, 0, False]:\n+                    gottx = self.nodes[n].getrawtransaction(txId, verbose)\n+                    assert_equal(gottx, rawTxSigned['hex'])\n+                    assert 'in_active_chain' not in gottx\n+                for verbose in [1, True]:\n+                    # We only check the \"hex\" field of the output so we don't need to update\n+                    # this test every time the output format changes.\n+                    gottx = self.nodes[n].getrawtransaction(txId, verbose)['hex']\n+                    assert_equal(gottx, rawTxSigned['hex'])\n+                    assert 'in_active_chain' not in gottx\n+            else:\n+                # without -txindex\n+                for verbose in [None, 0, False, 1, True]:\n+                    assert_raises_rpc_error(-5, err_msg, self.nodes[n].getrawtransaction, txid, verbose)\n+\n+            # 2. invalid parameters - supply txid and string \"Flase\"\n+            assert_raises_rpc_error(-1, \"not a boolean\", self.nodes[n].getrawtransaction, txId, \"Flase\")\n+\n+            # 3. invalid parameters - supply txid and empty array\n+            assert_raises_rpc_error(-1, \"not a boolean\", self.nodes[n].getrawtransaction, txId, [])\n+\n+            # 4. invalid parameters - supply txid and empty dict\n+            assert_raises_rpc_error(-1, \"not a boolean\", self.nodes[n].getrawtransaction, txId, {})\n+\n+            # 5. invalid parameters - sequence out of range",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r675629014",
      "id" : 675629014,
      "line" : 157,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NTYyOTAxNA==",
      "original_commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "original_line" : 157,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "test/functional/rpc_rawtransaction.py",
      "position" : 127,
      "pull_request_review_id" : 713795683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-23T15:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675629014",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/36541669?v=4",
         "events_url" : "https://api.github.com/users/rajarshimaitra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rajarshimaitra/followers",
         "following_url" : "https://api.github.com/users/rajarshimaitra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rajarshimaitra",
         "id" : 36541669,
         "login" : "rajarshimaitra",
         "node_id" : "MDQ6VXNlcjM2NTQxNjY5",
         "organizations_url" : "https://api.github.com/users/rajarshimaitra/orgs",
         "received_events_url" : "https://api.github.com/users/rajarshimaitra/received_events",
         "repos_url" : "https://api.github.com/users/rajarshimaitra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rajarshimaitra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rajarshimaitra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r675632466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675632466"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I am not sure whether having two `txid` and `txId` transactions helps here, given both of them are confirmed. Because of that we are also not getting a test for only `mempool` transactions.\r\n\r\nSo maybe we can have a `txid` confirmed in a block, and then have `txId` in the mempool to check for both the scenario?\r\n\r\nWill make the purpose of two transactions clear.\r\n\r\nAlso, the names are confusing, something more distinct would be helpful.   \r\n\r\n  ",
      "commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "created_at" : "2021-07-23T15:00:56Z",
      "diff_hunk" : "@@ -69,24 +74,129 @@ def setup_network(self):\n         super().setup_network()\n         self.connect_nodes(0, 2)\n \n+    def sync_peers(self):\n+        self.sync_mempools(self.nodes[0:3])\n+        self.sync_blocks()\n+\n+    def generate_and_sync(self, node, blocks):\n+        self.sync_peers()\n+        self.nodes[node].generate(blocks)\n+        self.sync_peers()\n+\n     def run_test(self):\n-        self.log.info('prepare some coins for multiple *rawtransaction commands')\n-        self.nodes[2].generate(1)\n-        self.sync_all()\n-        self.nodes[0].generate(COINBASE_MATURITY + 1)\n-        self.sync_all()\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.5)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.0)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),5.0)\n-        self.sync_all()\n-        self.nodes[0].generate(5)\n-        self.sync_all()\n-\n-        self.log.info('Test getrawtransaction on genesis block coinbase returns an error')\n+        self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n+        self.generate_and_sync(node=2, blocks=1)\n+        self.generate_and_sync(node=0, blocks=COINBASE_MATURITY + 1)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.5)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.0)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 5.0)\n+        self.generate_and_sync(node=0, blocks=5)\n+\n+        self.getrawtransaction_tests()\n+        self.createrawtransaction_tests()\n+        self.sendrawtransaction_tests()\n+        self.sendrawtransaction_testmempoolaccept_tests()\n+        self.decoderawtransaction_tests()\n+        self.transaction_version_number_tests()\n+        if not self.options.descriptors:\n+            self.raw_multisig_transaction_legacy_tests()\n+\n+    def getrawtransaction_tests(self):\n+        addr = self.nodes[1].getnewaddress()\n+        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        self.generate_and_sync(node=0, blocks=1)\n+        vout = find_vout_for_address(self.nodes[1], txid, addr)\n+        rawTx = self.nodes[1].createrawtransaction([{'txid': txid, 'vout': vout}], {self.nodes[1].getnewaddress(): 9.999})\n+        rawTxSigned = self.nodes[1].signrawtransactionwithwallet(rawTx)\n+        txId = self.nodes[1].sendrawtransaction(rawTxSigned['hex'])\n+        self.generate_and_sync(node=0, blocks=1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22437#discussion_r675632466",
      "id" : 675632466,
      "line" : 112,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NTYzMjQ2Ng==",
      "original_commit_id" : "d27edf1d85f44c58029e0197251cca56873b860f",
      "original_line" : 112,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "test/functional/rpc_rawtransaction.py",
      "position" : 82,
      "pull_request_review_id" : 713795683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22437",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-23T15:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675632466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/36541669?v=4",
         "events_url" : "https://api.github.com/users/rajarshimaitra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rajarshimaitra/followers",
         "following_url" : "https://api.github.com/users/rajarshimaitra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rajarshimaitra",
         "id" : 36541669,
         "login" : "rajarshimaitra",
         "node_id" : "MDQ6VXNlcjM2NTQxNjY5",
         "organizations_url" : "https://api.github.com/users/rajarshimaitra/orgs",
         "received_events_url" : "https://api.github.com/users/rajarshimaitra/received_events",
         "repos_url" : "https://api.github.com/users/rajarshimaitra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rajarshimaitra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rajarshimaitra"
      }
   }
]
