[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15606](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15606.html) ([experimental] UTXO snapshots by jamesob)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-09-23T20:01:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16945#issuecomment-534260399",
      "id" : 534260399,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16945",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNDI2MDM5OQ==",
      "updated_at" : "2019-09-23T20:01:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534260399",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327669352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327669352"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe avoid introducing `static` here since there was no `static` previously, and in general this isn't a pattern we use with other `GetArg` calls, and and it makes this code harder to test with different sizes, or allow updating the size without restarting.",
      "commit_id" : "d780c6a3ef07715330edec21fcf2882db75d9166",
      "created_at" : "2019-09-24T15:04:04Z",
      "diff_hunk" : "@@ -2206,13 +2206,30 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     return true;\n }\n \n+CoinsCacheSizeState CChainState::GetCoinsCacheSizeState()\n+{\n+    static int64_t nMempoolSizeMax = gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327669352",
      "id" : 327669352,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzY2OTM1Mg==",
      "original_commit_id" : "e3ac4ebeeb64b9fc9752384177474a53d8bf75c3",
      "original_position" : 6,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 292493041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945",
      "updated_at" : "2019-09-25T18:47:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327669352",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327681232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327681232"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it make sense to pass in the mempool as a `tx_pool` argument instead of using the global in this function?",
      "commit_id" : "d780c6a3ef07715330edec21fcf2882db75d9166",
      "created_at" : "2019-09-24T15:24:58Z",
      "diff_hunk" : "@@ -2206,13 +2206,30 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     return true;\n }\n \n+CoinsCacheSizeState CChainState::GetCoinsCacheSizeState()\n+{\n+    static int64_t nMempoolSizeMax = gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+    int64_t nMempoolUsage = mempool.DynamicMemoryUsage();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327681232",
      "id" : 327681232,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzY4MTIzMg==",
      "original_commit_id" : "e3ac4ebeeb64b9fc9752384177474a53d8bf75c3",
      "original_position" : 7,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 292508828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945",
      "updated_at" : "2019-09-25T18:47:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327681232",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327692844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327692844"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good points, will fix. Can't remember why I added that.",
      "commit_id" : "d780c6a3ef07715330edec21fcf2882db75d9166",
      "created_at" : "2019-09-24T15:45:51Z",
      "diff_hunk" : "@@ -2206,13 +2206,30 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     return true;\n }\n \n+CoinsCacheSizeState CChainState::GetCoinsCacheSizeState()\n+{\n+    static int64_t nMempoolSizeMax = gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327692844",
      "id" : 327692844,
      "in_reply_to_id" : 327669352,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzY5Mjg0NA==",
      "original_commit_id" : "e3ac4ebeeb64b9fc9752384177474a53d8bf75c3",
      "original_position" : 6,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 292524313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945",
      "updated_at" : "2019-09-25T18:47:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327692844",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327692899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327692899"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep, good idea.",
      "commit_id" : "d780c6a3ef07715330edec21fcf2882db75d9166",
      "created_at" : "2019-09-24T15:45:57Z",
      "diff_hunk" : "@@ -2206,13 +2206,30 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     return true;\n }\n \n+CoinsCacheSizeState CChainState::GetCoinsCacheSizeState()\n+{\n+    static int64_t nMempoolSizeMax = gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+    int64_t nMempoolUsage = mempool.DynamicMemoryUsage();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327692899",
      "id" : 327692899,
      "in_reply_to_id" : 327681232,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzY5Mjg5OQ==",
      "original_commit_id" : "e3ac4ebeeb64b9fc9752384177474a53d8bf75c3",
      "original_position" : 7,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 292524313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945",
      "updated_at" : "2019-09-25T18:47:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327692899",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the looks so far @ryanofsky @MarcoFalke. I've taken all proposed advice, as well as going further to parameterize the maximum coins cache and mempool target sizes. I've also added a unittest exercising this.",
      "created_at" : "2019-09-24T18:16:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16945#issuecomment-534683144",
      "id" : 534683144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16945",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNDY4MzE0NA==",
      "updated_at" : "2019-09-24T18:16:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534683144",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327790044"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327790044"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like this fails:\r\n\r\n```\r\nRunning tests: validation_flush_tests from test/validation_flush_tests.cpp\r\n\r\nRunning 1 test case...\r\n\r\nTest cases order is shuffled using seed: 1589090245\r\n\r\nEntering test module \"Bitcoin Core Test Suite\"\r\n\r\ntest/validation_flush_tests.cpp(12): Entering test suite \"validation_flush_tests\"\r\n\r\ntest/validation_flush_tests.cpp(19): Entering test case \"getcoinscachesizestate\"\r\n\r\nCCoinsViewCache memory usage: 16\r\n\r\ntest/validation_flush_tests.cpp(55): error: in \"validation_flush_tests/getcoinscachesizestate\": check view.DynamicMemoryUsage() == 32 has failed [16 != 32]",
      "commit_id" : "d780c6a3ef07715330edec21fcf2882db75d9166",
      "created_at" : "2019-09-24T19:18:37Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <txmempool.h>\n+#include <validation.h>\n+#include <sync.h>\n+#include <test/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_flush_tests, BasicTestingSetup)\n+\n+//! Test utilities for detecting when we need to flush the coins cache based\n+//! on estimated memory usage.\n+//!\n+//! @sa CChainState::GetCoinsCacheSizeState()\n+//!\n+BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n+{\n+    BlockManager blockman{};\n+    CChainState chainstate{blockman};\n+    chainstate.InitCoinsDB(/*cache_size_bytes*/ 1 << 10, /*in_memory*/ true, /*should_wipe*/ false);\n+    WITH_LOCK(::cs_main, chainstate.InitCoinsCache());\n+    CTxMemPool tx_pool{};\n+\n+    LOCK(::cs_main);\n+    auto& view = chainstate.CoinsTip();\n+\n+    //! Create and add a Coin with DynamicMemoryUsage of 80 bytes to the given view.\n+    auto add_coin = [](CCoinsViewCache& coins_view) -> COutPoint {\n+        Coin newcoin;\n+        uint256 txid = InsecureRand256();\n+        COutPoint outp{txid, 0};\n+        newcoin.nHeight = 1;\n+        newcoin.out.nValue = InsecureRand32();\n+        newcoin.out.scriptPubKey.assign((uint32_t)56, 1);\n+        coins_view.AddCoin(outp, std::move(newcoin), false);\n+\n+        return outp;\n+    };\n+\n+    auto print_view_mem_usage = [](CCoinsViewCache& view) {\n+        BOOST_TEST_MESSAGE(\"CCoinsViewCache memory usage: \" << view.DynamicMemoryUsage());\n+    };\n+\n+    constexpr size_t MAX_COINS_CACHE_BYTES = 1024;\n+\n+    // Without any coins in the cache, we shouldn't need to flush.\n+    BOOST_CHECK_EQUAL(\n+        chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n+        CoinsCacheSizeState::OK);\n+\n+    print_view_mem_usage(view);\n+    BOOST_CHECK_EQUAL(view.DynamicMemoryUsage(), 32);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327790044",
      "id" : 327790044,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzc5MDA0NA==",
      "original_commit_id" : "3c66fb4e585f727b2718af8987dcafe1cff05bbb",
      "original_position" : 55,
      "path" : "src/test/validation_flush_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 292650589,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945",
      "updated_at" : "2019-09-25T18:47:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327790044",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327795428"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327795428"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah right, forgot to account for 32 bit platforms.",
      "commit_id" : "d780c6a3ef07715330edec21fcf2882db75d9166",
      "created_at" : "2019-09-24T19:31:59Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <txmempool.h>\n+#include <validation.h>\n+#include <sync.h>\n+#include <test/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_flush_tests, BasicTestingSetup)\n+\n+//! Test utilities for detecting when we need to flush the coins cache based\n+//! on estimated memory usage.\n+//!\n+//! @sa CChainState::GetCoinsCacheSizeState()\n+//!\n+BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n+{\n+    BlockManager blockman{};\n+    CChainState chainstate{blockman};\n+    chainstate.InitCoinsDB(/*cache_size_bytes*/ 1 << 10, /*in_memory*/ true, /*should_wipe*/ false);\n+    WITH_LOCK(::cs_main, chainstate.InitCoinsCache());\n+    CTxMemPool tx_pool{};\n+\n+    LOCK(::cs_main);\n+    auto& view = chainstate.CoinsTip();\n+\n+    //! Create and add a Coin with DynamicMemoryUsage of 80 bytes to the given view.\n+    auto add_coin = [](CCoinsViewCache& coins_view) -> COutPoint {\n+        Coin newcoin;\n+        uint256 txid = InsecureRand256();\n+        COutPoint outp{txid, 0};\n+        newcoin.nHeight = 1;\n+        newcoin.out.nValue = InsecureRand32();\n+        newcoin.out.scriptPubKey.assign((uint32_t)56, 1);\n+        coins_view.AddCoin(outp, std::move(newcoin), false);\n+\n+        return outp;\n+    };\n+\n+    auto print_view_mem_usage = [](CCoinsViewCache& view) {\n+        BOOST_TEST_MESSAGE(\"CCoinsViewCache memory usage: \" << view.DynamicMemoryUsage());\n+    };\n+\n+    constexpr size_t MAX_COINS_CACHE_BYTES = 1024;\n+\n+    // Without any coins in the cache, we shouldn't need to flush.\n+    BOOST_CHECK_EQUAL(\n+        chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n+        CoinsCacheSizeState::OK);\n+\n+    print_view_mem_usage(view);\n+    BOOST_CHECK_EQUAL(view.DynamicMemoryUsage(), 32);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r327795428",
      "id" : 327795428,
      "in_reply_to_id" : 327790044,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzc5NTQyOA==",
      "original_commit_id" : "3c66fb4e585f727b2718af8987dcafe1cff05bbb",
      "original_position" : 55,
      "path" : "src/test/validation_flush_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 292657569,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945",
      "updated_at" : "2019-09-25T18:47:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/327795428",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r328237794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328237794"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\ntest/validation_flush_tests.cpp(106): error: in \"validation_flush_tests/getcoinscachesizestate\": check chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, 0) == CoinsCacheSizeState::CRITICAL has failed [1 != 2]\r\n```\r\n\r\nhttps://travis-ci.org/bitcoin/bitcoin/jobs/589530820#L2957",
      "commit_id" : "d780c6a3ef07715330edec21fcf2882db75d9166",
      "created_at" : "2019-09-25T17:06:11Z",
      "diff_hunk" : "@@ -0,0 +1,163 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <txmempool.h>\n+#include <validation.h>\n+#include <sync.h>\n+#include <test/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(validation_flush_tests, BasicTestingSetup)\n+\n+//! Test utilities for detecting when we need to flush the coins cache based\n+//! on estimated memory usage.\n+//!\n+//! @sa CChainState::GetCoinsCacheSizeState()\n+//!\n+BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n+{\n+    BlockManager blockman{};\n+    CChainState chainstate{blockman};\n+    chainstate.InitCoinsDB(/*cache_size_bytes*/ 1 << 10, /*in_memory*/ true, /*should_wipe*/ false);\n+    WITH_LOCK(::cs_main, chainstate.InitCoinsCache());\n+    CTxMemPool tx_pool{};\n+\n+    void* __ptr;\n+    constexpr bool is_64_bit = sizeof(__ptr) == 8;\n+\n+    LOCK(::cs_main);\n+    auto& view = chainstate.CoinsTip();\n+\n+    //! Create and add a Coin with DynamicMemoryUsage of 80 bytes to the given view.\n+    auto add_coin = [](CCoinsViewCache& coins_view) -> COutPoint {\n+        Coin newcoin;\n+        uint256 txid = InsecureRand256();\n+        COutPoint outp{txid, 0};\n+        newcoin.nHeight = 1;\n+        newcoin.out.nValue = InsecureRand32();\n+        newcoin.out.scriptPubKey.assign((uint32_t)56, 1);\n+        coins_view.AddCoin(outp, std::move(newcoin), false);\n+\n+        return outp;\n+    };\n+\n+    constexpr int COIN_SIZE = is_64_bit ? 80 : 64;\n+\n+    auto print_view_mem_usage = [](CCoinsViewCache& view) {\n+        BOOST_TEST_MESSAGE(\"CCoinsViewCache memory usage: \" << view.DynamicMemoryUsage());\n+    };\n+\n+    constexpr size_t MAX_COINS_CACHE_BYTES = 1024;\n+\n+    // Without any coins in the cache, we shouldn't need to flush.\n+    BOOST_CHECK_EQUAL(\n+        chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n+        CoinsCacheSizeState::OK);\n+\n+    // If the initial memory allocations of cacheCoins don't match these common\n+    // cases, we can't really continue to make assertions about memory usage.\n+    // End the test early.\n+    if (view.DynamicMemoryUsage() != 32 && view.DynamicMemoryUsage() != 16) {\n+        // Add a bunch of coins to see that we at least flip over to CRITICAL.\n+\n+        for (int i{0}; i < 1000; ++i) {\n+            COutPoint res = add_coin(view);\n+            BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n+        }\n+\n+        BOOST_CHECK_EQUAL(\n+            chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n+            CoinsCacheSizeState::CRITICAL);\n+\n+        return;\n+    }\n+\n+    print_view_mem_usage(view);\n+    BOOST_CHECK_EQUAL(view.DynamicMemoryUsage(), is_64_bit ? 32 : 16);\n+\n+    // We should be able to add COINS_UNTIL_CRITICAL coins to the cache before going CRITICAL.\n+    // This is contingent not only on the dynamic memory usage of the Coins\n+    // that we're adding (COIN_SIZE bytes per), but also on how much memory the\n+    // cacheCoins (unordered_map) preallocates.\n+    //\n+    // I came up with the count by examining the printed memory usage of the\n+    // CCoinsCacheView, so it's sort of arbitrary - but it shouldn't change\n+    // unless we somehow change the way the cacheCoins map allocates memory.\n+    //\n+    constexpr int COINS_UNTIL_CRITICAL = is_64_bit ? 4 : 5;\n+\n+    for (int i{0}; i < COINS_UNTIL_CRITICAL; ++i) {\n+        COutPoint res = add_coin(view);\n+        print_view_mem_usage(view);\n+        BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n+        BOOST_CHECK_EQUAL(\n+            chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n+            CoinsCacheSizeState::OK);\n+    }\n+\n+    // Adding an additional coin will push us over the edge to CRITICAL.\n+    COutPoint res = add_coin(view);\n+    print_view_mem_usage(view);\n+\n+    BOOST_CHECK_EQUAL(\n+        chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n+        CoinsCacheSizeState::CRITICAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16945#discussion_r328237794",
      "id" : 328237794,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODIzNzc5NA==",
      "original_commit_id" : "4708fcbf99725ccb38b1f2f847aa8f7eb0e4849a",
      "original_position" : 106,
      "path" : "src/test/validation_flush_tests.cpp",
      "position" : 115,
      "pull_request_review_id" : 293230080,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16945",
      "updated_at" : "2019-09-25T18:47:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328237794",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
