[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198764592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198764592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commit \"Make SignatureData able to store signatures and scripts\"\r\n\r\nnit, `++i`",
      "commit_id" : "e6accb5bdb1ec80fcd477f55beeeac349331552a",
      "created_at" : "2018-06-28T09:04:02Z",
      "diff_hunk" : "@@ -169,15 +171,106 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n+}\n+\n+// Extracts signatures and scripts from incomplete scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n     SignatureData data;\n     assert(tx.vin.size() > nIn);\n     data.scriptSig = tx.vin[nIn].scriptSig;\n     data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    MutableTransactionSignatureChecker tx_checker(&tx, nIn, txout.nValue);\n+    SignatureExtractorChecker extractor_checker(&data, &tx_checker);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, extractor_checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.redeem_script = redeem_script;\n+        next_script = std::move(redeem_script);\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.witness_script = witness_script;\n+        next_script = std::move(witness_script);\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = std::move(stack.witness);\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        unsigned int last_success_key = 0;\n+        for (const valtype& sig : stack.script) {\n+            for (unsigned int i = last_success_key; i < num_pubkeys; i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198764592",
      "id" : 198764592,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc2NDU5Mg==",
      "original_commit_id" : "a86d0679db0eb0a12e4ced4ee09c18b0bd81dd84",
      "original_position" : 104,
      "path" : "src/script/sign.cpp",
      "position" : 296,
      "pull_request_review_id" : 132751570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557",
      "updated_at" : "2018-06-28T09:33:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198764592",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198766870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198766870"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commit  \"Make SignatureData able to store signatures and scripts\"\r\n\r\n`class SignatureExtractorChecker final`?",
      "commit_id" : "e6accb5bdb1ec80fcd477f55beeeac349331552a",
      "created_at" : "2018-06-28T09:09:27Z",
      "diff_hunk" : "@@ -81,4 +91,15 @@ void UpdateInput(CTxIn& input, const SignatureData& data);\n  * Solvability is unrelated to whether we consider this output to be ours. */\n bool IsSolvable(const SigningProvider& provider, const CScript& script);\n \n+class SignatureExtractorChecker : public BaseSignatureChecker",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198766870",
      "id" : 198766870,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc2Njg3MA==",
      "original_commit_id" : "a86d0679db0eb0a12e4ced4ee09c18b0bd81dd84",
      "original_position" : 40,
      "path" : "src/script/sign.h",
      "position" : 651,
      "pull_request_review_id" : 132751570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557",
      "updated_at" : "2018-06-28T09:33:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198766870",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198769412"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198769412"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commit \"Make SignatureData able to store signatures and scripts\"\r\n\r\nThis is called when `pubkey.GetID()` doesn't exists in signatures, maybe assert it is new:\r\n```cpp\r\nauto i = sigdata->signatures.emplace(...);\r\nassert(i.second);\r\n```",
      "commit_id" : "e6accb5bdb1ec80fcd477f55beeeac349331552a",
      "created_at" : "2018-06-28T09:15:36Z",
      "diff_hunk" : "@@ -169,15 +171,106 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198769412",
      "id" : 198769412,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc2OTQxMg==",
      "original_commit_id" : "a86d0679db0eb0a12e4ced4ee09c18b0bd81dd84",
      "original_position" : 23,
      "path" : "src/script/sign.cpp",
      "position" : 214,
      "pull_request_review_id" : 132751570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557",
      "updated_at" : "2018-06-28T09:34:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198769412",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198769810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198769810"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commit \"Make SignatureData able to store signatures and scripts\"\r\n\r\nUse references instead of pointers?",
      "commit_id" : "e6accb5bdb1ec80fcd477f55beeeac349331552a",
      "created_at" : "2018-06-28T09:16:40Z",
      "diff_hunk" : "@@ -81,4 +91,15 @@ void UpdateInput(CTxIn& input, const SignatureData& data);\n  * Solvability is unrelated to whether we consider this output to be ours. */\n bool IsSolvable(const SigningProvider& provider, const CScript& script);\n \n+class SignatureExtractorChecker : public BaseSignatureChecker\n+{\n+private:\n+    SignatureData* sigdata;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198769810",
      "id" : 198769810,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc2OTgxMA==",
      "original_commit_id" : "a86d0679db0eb0a12e4ced4ee09c18b0bd81dd84",
      "original_position" : 43,
      "path" : "src/script/sign.h",
      "position" : 654,
      "pull_request_review_id" : 132751570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557",
      "updated_at" : "2018-06-28T09:33:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198769810",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198771222"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198771222"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commit \"Replace CombineSignatures with ProduceSignature\"\r\n\r\nLooks like these could be refefenreces:\r\n```cpp\r\nstatic bool GetCScript(const SigningProvider& provider, const SignatureData& sigdata, const CScriptID &scriptid, CScript& script)\r\n```\r\nand remove `provider != nullptr` below.",
      "commit_id" : "e6accb5bdb1ec80fcd477f55beeeac349331552a",
      "created_at" : "2018-06-28T09:20:06Z",
      "diff_hunk" : "@@ -33,14 +33,60 @@ bool MutableTransactionSignatureCreator::CreateSig(const SigningProvider& provid\n     return true;\n }\n \n+static bool GetCScript(const SigningProvider* provider, const SignatureData* sigdata, const CScriptID &scriptid, CScript& script)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198771222",
      "id" : 198771222,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc3MTIyMg==",
      "original_commit_id" : "c5d47a58fdeea1a3ed206e5cdb2c37d70942c819",
      "original_position" : 4,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 132751570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557",
      "updated_at" : "2018-06-28T09:33:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198771222",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198773739"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198773739"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Otherwise fix space before `scriptid` argument. Same below in the definition.",
      "commit_id" : "e6accb5bdb1ec80fcd477f55beeeac349331552a",
      "created_at" : "2018-06-28T09:25:59Z",
      "diff_hunk" : "@@ -33,14 +33,60 @@ bool MutableTransactionSignatureCreator::CreateSig(const SigningProvider& provid\n     return true;\n }\n \n+static bool GetCScript(const SigningProvider* provider, const SignatureData* sigdata, const CScriptID &scriptid, CScript& script)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198773739",
      "id" : 198773739,
      "in_reply_to_id" : 198771222,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc3MzczOQ==",
      "original_commit_id" : "c5d47a58fdeea1a3ed206e5cdb2c37d70942c819",
      "original_position" : 4,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 132751570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557",
      "updated_at" : "2018-06-28T09:33:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198773739",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198774215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198774215"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commit \"Replace CombineSignatures with ProduceSignature\"\r\n\r\nAs pointed by @MarcoFalke, don't use references to iterators. Check throughout too.",
      "commit_id" : "e6accb5bdb1ec80fcd477f55beeeac349331552a",
      "created_at" : "2018-06-28T09:27:04Z",
      "diff_hunk" : "@@ -33,14 +33,60 @@ bool MutableTransactionSignatureCreator::CreateSig(const SigningProvider& provid\n     return true;\n }\n \n+static bool GetCScript(const SigningProvider* provider, const SignatureData* sigdata, const CScriptID &scriptid, CScript& script)\n+{\n+    if (provider != nullptr && provider->GetCScript(scriptid, script)) {\n+        return true;\n+    }\n+    // Look for scripts in SignatureData\n+    if (CScriptID(sigdata->redeem_script) == scriptid) {\n+        script = sigdata->redeem_script;\n+        return true;\n+    } else if (CScriptID(sigdata->witness_script) == scriptid) {\n+        script = sigdata->witness_script;\n+        return true;\n+    }\n+    return false;\n+}\n+\n+static bool GetPubKey(const SigningProvider* provider, const SignatureData* sigdata, const CKeyID &address, CPubKey& pubkey)\n+{\n+    if (provider != nullptr && provider->GetPubKey(address, pubkey)) {\n+        return true;\n+    }\n+    // Look for pubkey in all partial sigs\n+    const auto& it = sigdata->signatures.find(address);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13557#discussion_r198774215",
      "id" : 198774215,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc3NDIxNQ==",
      "original_commit_id" : "c5d47a58fdeea1a3ed206e5cdb2c37d70942c819",
      "original_position" : 26,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 132751570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557",
      "updated_at" : "2018-06-28T09:33:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198774215",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13449 ([WIP] support new multisig template in wallet for Solver, signing, and signature combining by instagibbs)\n* #13429 (Return the script type from Solver by Empact)\n* #13360 ([Policy] Reject SIGHASH_SINGLE with output out of bound by jl2012)\n* #13359 (wallet: Directly operate with CMutableTransaction by MarcoFalke)\n* #13266 (refactoring: Inline DataFromTransaction via new SignatureData constructor by Empact)\n* #13144 (RPC: Improve error messages on RPC endpoints that use GetTransaction by jimpo)\n* #13098 (Skip tx-rehashing on historic blocks by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-06-28T09:28:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13557#issuecomment-400972753",
      "id" : 400972753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwMDk3Mjc1Mw==",
      "updated_at" : "2018-06-28T09:28:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/400972753",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag Just so you know, those commits are part of #13425 ",
      "created_at" : "2018-06-28T17:52:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13557#issuecomment-401119664",
      "id" : 401119664,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwMTExOTY2NA==",
      "updated_at" : "2018-06-28T17:52:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/401119664",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ops @achow101 do you want me to comment there?",
      "created_at" : "2018-06-28T18:01:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13557#issuecomment-401122013",
      "id" : 401122013,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwMTEyMjAxMw==",
      "updated_at" : "2018-06-28T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/401122013",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
