[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13525#discussion_r197612061"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13525"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197612061"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not tested?",
      "commit_id" : "a1a07ae27153ec57239622d1a32d2399b18a55fd",
      "created_at" : "2018-06-23T13:32:22Z",
      "diff_hunk" : "@@ -169,19 +170,28 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n         txnouttype whichType;\n         // get the scriptPubKey corresponding to this input:\n         const CScript& prevScript = prev.scriptPubKey;\n-        if (!Solver(prevScript, whichType, vSolutions))\n+        if (!Solver(prevScript, whichType, vSolutions)) {\n+            reason = strprintf(\"input %u script nonstandard\", i);\n             return false;\n+        }\n \n         if (whichType == TX_SCRIPTHASH)\n         {\n             std::vector<std::vector<unsigned char> > stack;\n             // convert the scriptSig into a stack, so we can inspect the redeemScript\n-            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SigVersion::BASE))\n+            ScriptError serror;\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SigVersion::BASE, &serror)) {\n+                reason = strprintf(\"input %u script error: %s\", i, ScriptErrorString(serror));\n                 return false;\n-            if (stack.empty())\n+            }\n+            if (stack.empty()) {\n+                reason = strprintf(\"input %u script stack empty\", i);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13525#discussion_r197612061",
      "id" : 197612061,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzYxMjA2MQ==",
      "original_commit_id" : "a1a07ae27153ec57239622d1a32d2399b18a55fd",
      "original_position" : 39,
      "path" : "src/policy/policy.cpp",
      "position" : 39,
      "pull_request_review_id" : 131394819,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13525",
      "updated_at" : "2018-06-23T13:37:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197612061",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13525#discussion_r197612109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13525"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197612109"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`contains the reason of the first non-standard input`?",
      "commit_id" : "a1a07ae27153ec57239622d1a32d2399b18a55fd",
      "created_at" : "2018-06-23T13:34:35Z",
      "diff_hunk" : "@@ -88,9 +88,10 @@ bool IsStandardTx(const CTransaction& tx, std::string& reason);\n     /**\n      * Check for standard transaction types\n      * @param[in] mapInputs    Map of previous transactions that have outputs we're spending\n+     * @param[out] reason      If return is false, contains the reason the inputs were judged non-standard",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13525#discussion_r197612109",
      "id" : 197612109,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzYxMjEwOQ==",
      "original_commit_id" : "a1a07ae27153ec57239622d1a32d2399b18a55fd",
      "original_position" : 4,
      "path" : "src/policy/policy.h",
      "position" : 4,
      "pull_request_review_id" : 131394819,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13525",
      "updated_at" : "2018-06-23T13:37:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197612109",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13525#discussion_r197612130"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13525"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197612130"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not tested?",
      "commit_id" : "a1a07ae27153ec57239622d1a32d2399b18a55fd",
      "created_at" : "2018-06-23T13:35:19Z",
      "diff_hunk" : "@@ -169,19 +170,28 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n         txnouttype whichType;\n         // get the scriptPubKey corresponding to this input:\n         const CScript& prevScript = prev.scriptPubKey;\n-        if (!Solver(prevScript, whichType, vSolutions))\n+        if (!Solver(prevScript, whichType, vSolutions)) {\n+            reason = strprintf(\"input %u script nonstandard\", i);\n             return false;\n+        }\n \n         if (whichType == TX_SCRIPTHASH)\n         {\n             std::vector<std::vector<unsigned char> > stack;\n             // convert the scriptSig into a stack, so we can inspect the redeemScript\n-            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SigVersion::BASE))\n+            ScriptError serror;\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SigVersion::BASE, &serror)) {\n+                reason = strprintf(\"input %u script error: %s\", i, ScriptErrorString(serror));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13525#discussion_r197612130",
      "id" : 197612130,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzYxMjEzMA==",
      "original_commit_id" : "a1a07ae27153ec57239622d1a32d2399b18a55fd",
      "original_position" : 34,
      "path" : "src/policy/policy.cpp",
      "position" : 34,
      "pull_request_review_id" : 131394819,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13525",
      "updated_at" : "2018-06-23T13:37:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197612130",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13525#discussion_r197612160"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13525"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197612160"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why this change? It must succeed no?",
      "commit_id" : "a1a07ae27153ec57239622d1a32d2399b18a55fd",
      "created_at" : "2018-06-23T13:36:55Z",
      "diff_hunk" : "@@ -77,8 +77,10 @@ static void CCoinsCaching(benchmark::State& state)\n \n     // Benchmark.\n     while (state.KeepRunning()) {\n-        bool success = AreInputsStandard(t1, coins);\n-        assert(success);\n+        std::string reason;\n+        if (!AreInputsStandard(t1, coins, reason)) {\n+            throw std::runtime_error(reason);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13525#discussion_r197612160",
      "id" : 197612160,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzYxMjE2MA==",
      "original_commit_id" : "a1a07ae27153ec57239622d1a32d2399b18a55fd",
      "original_position" : 8,
      "path" : "src/bench/ccoins_caching.cpp",
      "position" : 8,
      "pull_request_review_id" : 131394819,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13525",
      "updated_at" : "2018-06-23T13:37:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197612160",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
