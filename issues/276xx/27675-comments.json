[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [sdaftuar](https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1553249207) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27742](https://github.com/bitcoin/bitcoin/pull/27742) ([NO MERGE] BIP331 Ancestor Package Relay by glozow)\n* [#27630](https://github.com/bitcoin/bitcoin/pull/27630) (p2p: Increase tx relay rate by sdaftuar)\n* [#27625](https://github.com/bitcoin/bitcoin/pull/27625) (p2p: Stop relaying non-mempool txs by MarcoFalke)\n* [#27602](https://github.com/bitcoin/bitcoin/pull/27602) (net processing: avoid serving non-announced txs as a result of a MEMPOOL message by sr-gi)\n* [#26969](https://github.com/bitcoin/bitcoin/pull/26969) (net, refactor: net_processing, add `ProcessCompactBlockTxns` by brunoerg)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-05-16T13:45:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1549705895",
      "id" : 1549705895,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27675",
      "node_id" : "IC_kwDOABII585cXqKn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1549705895/reactions"
      },
      "updated_at" : "2023-06-09T22:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1549705895",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "As justification for ignoring the privacy benefits of rate limiting INV messages, consider the following approach: an attacker makes multiple inbound connections to our peer, and upon receiving an INV of txs a,b,c,d,... via one connection immediately announces the same txs on each of its other connections. In that case the next INV we send on some other connection to the attacker will skip those transactions, providing a new unique set. With this approach, the attacker should be able to receive tx announcements from us at many times the 7tx/s limit we originally set.",
      "created_at" : "2023-05-16T13:48:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1549711784",
      "id" : 1549711784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27675",
      "node_id" : "IC_kwDOABII585cXrmo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1549711784/reactions"
      },
      "updated_at" : "2023-05-16T13:48:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1549711784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195220741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195220741"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Looks like this will make inbound peers be treated identical to outbound ones for the purposes of getdata, as long as mapRelay is still around. For in-mempool txs it may be possible to fix by moving the time check outside of `info_for_relay` into this function and returning a nullptr early if the tx is known to not be announced. For non-mempool txs, I don't know.",
      "commit_id" : "bbf5dcf47b604ebbf980e7f9236f558724046365",
      "created_at" : "2023-05-16T14:04:22Z",
      "diff_hunk" : "@@ -2261,26 +2253,17 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n {\n-    auto txinfo = m_mempool.info(gtxid);\n+    auto txinfo = m_mempool.info_for_relay(gtxid, tx_relay.m_last_inv_send_time);\n     if (txinfo.tx) {\n-        // If a TX could have been INVed in reply to a MEMPOOL request,\n-        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n-        // unconditionally.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return std::move(txinfo.tx);\n-        }\n+        return std::move(txinfo.tx);\n     }\n \n-    // Otherwise, the transaction must have been announced recently.\n-    if (tx_relay.m_recently_announced_invs.contains(gtxid.GetHash())) {\n-        // If it was, it can be relayed from either the mempool...\n-        if (txinfo.tx) return std::move(txinfo.tx);\n-        // ... or the relay pool.\n-        auto mi = mapRelay.find(gtxid.GetHash());\n-        if (mi != mapRelay.end()) return mi->second;\n-    }\n+    // Otherwise, the transaction must have been announced recently or removed from the mempool.\n+    // If the latter, maybe it's in mapRelay!",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195220741",
      "id" : 1195220741,
      "line" : 2264,
      "node_id" : "PRRC_kwDOABII585HPZ8F",
      "original_commit_id" : "9607a5078dbb6a65913055cf36a14c6e07229309",
      "original_line" : 2264,
      "original_position" : 91,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 91,
      "pull_request_review_id" : 1428669748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195220741/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-16T15:44:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195220741",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195225774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195225774"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: My recommendation would be to not rename the method, or if you want, to pick `GetEntryTime()` over `GetNodeTime()`, because the function doesn't return the current node time but the time of transaction entry.",
      "commit_id" : "bbf5dcf47b604ebbf980e7f9236f558724046365",
      "created_at" : "2023-05-16T14:07:57Z",
      "diff_hunk" : "@@ -126,7 +126,7 @@ class CTxMemPoolEntry\n         return GetVirtualTransactionSize(nTxWeight, sigOpCost, ::nBytesPerSigOp);\n     }\n     size_t GetTxWeight() const { return nTxWeight; }\n-    std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n+    NodeClock::time_point GetNodeTime() const { return nTime; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195225774",
      "id" : 1195225774,
      "line" : 129,
      "node_id" : "PRRC_kwDOABII585HPbKu",
      "original_commit_id" : "9607a5078dbb6a65913055cf36a14c6e07229309",
      "original_line" : 129,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/kernel/mempool_entry.h",
      "position" : 23,
      "pull_request_review_id" : 1428669748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195225774/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-16T15:44:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195225774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195879972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195879972"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I mostly renamed it to make sure there'd be compiler errors anywhere that it didn't get updated, just in case some type conversion happened automatically.",
      "commit_id" : "bbf5dcf47b604ebbf980e7f9236f558724046365",
      "created_at" : "2023-05-17T03:09:33Z",
      "diff_hunk" : "@@ -126,7 +126,7 @@ class CTxMemPoolEntry\n         return GetVirtualTransactionSize(nTxWeight, sigOpCost, ::nBytesPerSigOp);\n     }\n     size_t GetTxWeight() const { return nTxWeight; }\n-    std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n+    NodeClock::time_point GetNodeTime() const { return nTime; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195879972",
      "id" : 1195879972,
      "in_reply_to_id" : 1195225774,
      "line" : 129,
      "node_id" : "PRRC_kwDOABII585HR64k",
      "original_commit_id" : "9607a5078dbb6a65913055cf36a14c6e07229309",
      "original_line" : 129,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/kernel/mempool_entry.h",
      "position" : 23,
      "pull_request_review_id" : 1429722989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195879972/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-17T03:09:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195879972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195881028"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195881028"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, this is broken as-is. My original idea was to add a timestamp to the `mapRelay` entries too, then it was to drop `mapRelay` and add `vExtraTxnForCompact`-relay, then I compromised by just doing it wrong...",
      "commit_id" : "bbf5dcf47b604ebbf980e7f9236f558724046365",
      "created_at" : "2023-05-17T03:11:57Z",
      "diff_hunk" : "@@ -2261,26 +2253,17 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n {\n-    auto txinfo = m_mempool.info(gtxid);\n+    auto txinfo = m_mempool.info_for_relay(gtxid, tx_relay.m_last_inv_send_time);\n     if (txinfo.tx) {\n-        // If a TX could have been INVed in reply to a MEMPOOL request,\n-        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n-        // unconditionally.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return std::move(txinfo.tx);\n-        }\n+        return std::move(txinfo.tx);\n     }\n \n-    // Otherwise, the transaction must have been announced recently.\n-    if (tx_relay.m_recently_announced_invs.contains(gtxid.GetHash())) {\n-        // If it was, it can be relayed from either the mempool...\n-        if (txinfo.tx) return std::move(txinfo.tx);\n-        // ... or the relay pool.\n-        auto mi = mapRelay.find(gtxid.GetHash());\n-        if (mi != mapRelay.end()) return mi->second;\n-    }\n+    // Otherwise, the transaction must have been announced recently or removed from the mempool.\n+    // If the latter, maybe it's in mapRelay!",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1195881028",
      "id" : 1195881028,
      "in_reply_to_id" : 1195220741,
      "line" : 2264,
      "node_id" : "PRRC_kwDOABII585HR7JE",
      "original_commit_id" : "9607a5078dbb6a65913055cf36a14c6e07229309",
      "original_line" : 2264,
      "original_position" : 91,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 91,
      "pull_request_review_id" : 1429724356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195881028/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-17T03:11:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195881028",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1197968591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197968591"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The `NodeClock::now()` time can go backwards, right?  If so I think that could pose some issues if we're primarily relying on system time in order to determine whether transactions should be available for relay. Can we use a steady clock instead?",
      "commit_id" : "3d9d11fa480b9d07466173d39d2426faf9d6890d",
      "created_at" : "2023-05-18T15:31:02Z",
      "diff_hunk" : "@@ -2299,7 +2299,7 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\n     std::vector<CInv> vNotFound;\n     const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n \n-    const auto now{GetTime<std::chrono::seconds>()};\n+    const NodeClock::time_point now = NodeClock::now();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1197968591",
      "id" : 1197968591,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585HZ4zP",
      "original_commit_id" : "023d0503ffdd91d408f10b34905b58f68edcc056",
      "original_line" : 2302,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1432933993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197968591/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-18T15:31:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197968591",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on getting rid of the recently announced filter.  I think we'd need to use a steady clock to avoid random failures for no good reason, is that easy to do?",
      "created_at" : "2023-05-18T15:41:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1553249207",
      "id" : 1553249207,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27675",
      "node_id" : "IC_kwDOABII585clLO3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553249207/reactions"
      },
      "updated_at" : "2023-05-18T15:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553249207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1202129704"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1202129704"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We could; it'd mean adding an extra field to the mempool, and using both mockable time and steady time for dealing with next invs (mockable time so we can skip over delays in sending invs; steady time for this purpose).",
      "commit_id" : "55b77aa435af626ed4c7dd413aecab57199ae371",
      "created_at" : "2023-05-23T11:29:51Z",
      "diff_hunk" : "@@ -2299,7 +2299,7 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\n     std::vector<CInv> vNotFound;\n     const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n \n-    const auto now{GetTime<std::chrono::seconds>()};\n+    const NodeClock::time_point now = NodeClock::now();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1202129704",
      "id" : 1202129704,
      "in_reply_to_id" : 1197968591,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Hpwso",
      "original_commit_id" : "023d0503ffdd91d408f10b34905b58f68edcc056",
      "original_line" : 2302,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1439442345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1202129704/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-23T11:29:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1202129704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1202222611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1202222611"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Might have to use `LossyChronoFormatter` to avoid the fuzz crash?",
      "commit_id" : "55b77aa435af626ed4c7dd413aecab57199ae371",
      "created_at" : "2023-05-23T12:20:03Z",
      "diff_hunk" : "@@ -78,7 +78,7 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\n             }\n             if (nTime > TicksSinceEpoch<std::chrono::seconds>(now - pool.m_expiry)) {\n                 LOCK(cs_main);\n-                const auto& accepted = AcceptToMemoryPool(active_chainstate, tx, nTime, /*bypass_limits=*/false, /*test_accept=*/false);\n+                const auto& accepted = AcceptToMemoryPool(active_chainstate, tx, NodeClock::time_point{std::chrono::seconds{nTime}}, /*bypass_limits=*/false, /*test_accept=*/false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1202222611",
      "id" : 1202222611,
      "line" : 81,
      "node_id" : "PRRC_kwDOABII585HqHYT",
      "original_commit_id" : "71078b35eff1e43dc88203bb4d558b1706210a7d",
      "original_line" : 81,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/kernel/mempool_persist.cpp",
      "position" : 5,
      "pull_request_review_id" : 1439563203,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1202222611/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-23T12:20:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1202222611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "What's the rationale regarding optimizing for memory instead of privacy here? I can see how this simplifies the design, however, I fail to see this being an obvious pick given we'd be potentially even more exposed to fingerprinting than before (as is now it is trivial for every connection to probe data on the node's mempool).",
      "created_at" : "2023-05-23T18:22:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1559935656",
      "id" : 1559935656,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27675",
      "node_id" : "IC_kwDOABII585c-rqo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1559935656/reactions"
      },
      "updated_at" : "2023-05-23T18:22:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1559935656",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "So just to be clear, my concern here relates to the fact that the current codebase only allows a peer to request a transaction as long as we have announced that to them (with the exception of data requested after a `MEMPOOL` message if we happen run signaling bip37).\r\n\r\nAfter this patch, the logic above won't hold true anymore. If for whatever reason we have more than `INV_BROADCAST_MAX` transactions to send to a given peer at a given time, and we send an INV message to it, it will immediately be able to request any of those new transactions (even if they were never offered). Whether this is in itself a meaningful privacy leak is unclear to me. Under regular loads (<`INV_BROADCAST_MAX` pending transactions to be announced), this behaves exactly like the current codebase.\r\n\r\nI guess it all boils down to whether potentially allowing a peer to know when a transaction enters our mempool is something we should guard about or not.\r\n\r\n",
      "created_at" : "2023-05-31T17:52:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1570662645",
      "id" : 1570662645,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27675",
      "node_id" : "IC_kwDOABII585dnmj1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1570662645/reactions"
      },
      "updated_at" : "2023-05-31T17:52:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1570662645",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> What's the rationale regarding optimizing for memory instead of privacy here? I can see how this simplifies the design, however, I fail to see this being an obvious pick given we'd be potentially even more exposed to fingerprinting than before (as is now it is trivial for every connection to probe data on the node's mempool).\r\n\r\nThis isn't trading off privacy -- that's the point of [this comment](https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1549711784). It does mean that someone trying to find out whether a recent transaction entered your mempool in the last window doesn't need multiple inbound connections, but that's a good thing: having many inbound connections is easy for an attacker, so avoiding the need to make many inbound connections just means those inbound slots become available for honest peers.\r\n\r\n> So just to be clear, my concern here relates to the fact that the current codebase only allows a peer to request a transaction as long as we have announced that to them (with the exception of data requested after a `MEMPOOL` message if we happen run signaling bip37).\r\n\r\nThat's already the case for any txs that have been in the mempool for greater than two minutes, and any transactions that have been announced to a peer. Generally that's plenty for fingerprinting -- if you announce pairs of conflicting txs randomly to different nodes, then if you do that 20 times at the same low-ish feerate (so that neither will rbf the other), then wait two minutes, you'll likely already get a nearly unique set of txs that will serve as a fingerprint for any given node.\r\n\r\n> After this patch, the logic above won't hold true anymore. If for whatever reason we have more than `INV_BROADCAST_MAX` transactions to send to a given peer at a given time, and we send an INV message to it, it will immediately be able to request any of those new transactions (even if they were never offered). Whether this is in itself a meaningful privacy leak is unclear to me. Under regular loads (<`INV_BROADCAST_MAX` pending transactions to be announced), this behaves exactly like the current codebase.\r\n> \r\n> I guess it all boils down to whether potentially allowing a peer to know when a transaction enters our mempool is something we should guard about or not.\r\n\r\nThe point of the random INV intervals is that we limit the knowledge of when a transaction entered our mempool to a specific window -- if we send an INV at t=0s, t=1.1s, t=6.1s, t=6.4s, eg, then our peer can tell the difference between a tx that entered at t=0.5s and t=3s, but can't tell the difference between t=3s and t=4s or t=5s, because they're all in the same window. We then use the same window boundaries for all inbound peers so that adding extra inbound peers doesn't give you more precise knowledge.\r\n\r\nIf the attacker only has a single inbound connection, then when the number of txs in a window exceeds `INV_BROADCAST_MAX` they'll get less information; however as the comment above attempted to explain, adding additional inbound connections and manually announcing some txs on some of the connections will allow an attacker to get the full set of txs included in each window. So I don't think it makes sense to consider the `INV_BROADCAST_MAX` limit to have a privacy benefit. (And if we eventually add erlay support, I think that limit goes away entirely for connections doing announcements over erlay rather than INV anyway)",
      "created_at" : "2023-06-02T05:04:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1573150818",
      "id" : 1573150818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27675",
      "node_id" : "IC_kwDOABII585dxGBi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1573150818/reactions"
      },
      "updated_at" : "2023-06-02T05:04:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1573150818",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> > What's the rationale regarding optimizing for memory instead of privacy here? I can see how this simplifies the design, however, I fail to see this being an obvious pick given we'd be potentially even more exposed to fingerprinting than before (as is now it is trivial for every connection to probe data on the node's mempool).\r\n> \r\n> This isn't trading off privacy -- that's the point of [this comment](https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1549711784). It does mean that someone trying to find out whether a recent transaction entered your mempool in the last window doesn't need multiple inbound connections, but that's a good thing: having many inbound connections is easy for an attacker, so avoiding the need to make many inbound connections just means those inbound slots become available for honest peers.\r\n\r\nRight, I don't think I originally fully understood what you meant by that. So the case is:\r\n\r\n- An attacker has `n` inbound connections to node `B` (namely `A0, ..., An-1`)\r\n- `B` sends an `INV` message containing `a, b, c, d` through link `Ai`\r\n    - *During the same message processing loop* for `B`, `A` sends `a, b, c, d` through link `Aj`\r\n    - Now `Aj` will receive an `INV` with a disjoint set for `a, b, c, d` when `B` picks it in this round\r\n\r\nProvided `A` has enough links with `B`, it should be able to get all pending connections in `B`'s mempool in a single round. Is that it? If so, I think this renders all my other comments irrelevant.\r\n\r\n> That's already the case for any txs that have been in the mempool for greater than two minutes, and any transactions that have been announced to a peer. Generally that's plenty for fingerprinting -- if you announce pairs of conflicting txs randomly to different nodes, then if you do that 20 times at the same low-ish feerate (so that neither will rbf the other), then wait two minutes, you'll likely already get a nearly unique set of txs that will serve as a fingerprint for any given node.\r\n\r\nI don't think I follow here though. Would you mind elaborating?",
      "created_at" : "2023-06-02T18:46:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1574166059",
      "id" : 1574166059,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27675",
      "node_id" : "IC_kwDOABII585d094r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1574166059/reactions"
      },
      "updated_at" : "2023-06-02T18:46:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1574166059",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1215190508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1215190508"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the answer is just to add a new tx entry field for the steady clock time and use that at natural precision.",
      "commit_id" : "55b77aa435af626ed4c7dd413aecab57199ae371",
      "created_at" : "2023-06-03T04:14:08Z",
      "diff_hunk" : "@@ -78,7 +78,7 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\n             }\n             if (nTime > TicksSinceEpoch<std::chrono::seconds>(now - pool.m_expiry)) {\n                 LOCK(cs_main);\n-                const auto& accepted = AcceptToMemoryPool(active_chainstate, tx, nTime, /*bypass_limits=*/false, /*test_accept=*/false);\n+                const auto& accepted = AcceptToMemoryPool(active_chainstate, tx, NodeClock::time_point{std::chrono::seconds{nTime}}, /*bypass_limits=*/false, /*test_accept=*/false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#discussion_r1215190508",
      "id" : 1215190508,
      "in_reply_to_id" : 1202222611,
      "line" : 81,
      "node_id" : "PRRC_kwDOABII585IblXs",
      "original_commit_id" : "71078b35eff1e43dc88203bb4d558b1706210a7d",
      "original_line" : 81,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/kernel/mempool_persist.cpp",
      "position" : 5,
      "pull_request_review_id" : 1458871012,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1215190508/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-03T04:14:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1215190508",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-06-12T10:42:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1587069681",
      "id" : 1587069681,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27675",
      "node_id" : "IC_kwDOABII585emMLx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587069681/reactions"
      },
      "updated_at" : "2023-06-12T10:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587069681",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\r\n> > [it is trivial for every connection to probe data on the node's mempool] already the case for any txs that have been in the mempool for greater than two minutes, and any transactions that have been announced to a peer. Generally that's plenty for fingerprinting -- if you announce pairs of conflicting txs randomly to different nodes, then if you do that 20 times at the same low-ish feerate (so that neither will rbf the other), then wait two minutes, you'll likely already get a nearly unique set of txs that will serve as a fingerprint for any given node.\r\n> \r\n> I don't think I follow here though. Would you mind elaborating?\r\n\r\nThe easy way to probe for the presence of transaction X in the mempool is to propose a fake transaction Z that spends an unspent output of X, and a fake transaction Y, with fake signatures for both, and see how its orphan handling behaves. If you receive a request for X and Y, then the victim didn't have X in its mempool; if you receive a request for just Y, then it did have X in the mempool; if you don't receive a request for either, then X was not in the mempool and was in its reject filter.\r\n\r\nIf you want to fingerprint a node, for example to see that an ipv4 address and a tor address are both pointing to the same node, then you need to set things up so that each node in the network has a different set of txs in their mempools, then query them to see if the node behind the ipv4 address and the node behind the tor address have the same set of txs. One way to do that is to propose a bunch of double-spends at the same feerate: a1/a2, b1/b2, c1/c2, etc and fire them off at various nodes on the network, then use the previous technique to see which txs actually ended up in the interesting nodes' mempools.\r\n\r\nNone of that requires careful timing -- you just need to set the feerates so they won't either be mined immediately, nor be evicted from the mempool too quickly.",
      "created_at" : "2023-06-12T11:56:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27675#issuecomment-1587182546",
      "id" : 1587182546,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27675",
      "node_id" : "IC_kwDOABII585emnvS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587182546/reactions"
      },
      "updated_at" : "2023-06-12T11:56:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587182546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
