[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [sdaftuar](https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1547892773), [ajtowns](https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1552435967) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-05-11T13:53:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544032117",
      "id" : 1544032117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585cCA91",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544032117/reactions"
      },
      "updated_at" : "2023-05-18T05:39:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544032117",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think the removed-for-block case is the main one we care about -- in a situation where a peer has requested a transaction where we have received a block containing the transaction in the time between announcement and relay, it seems likely that the peer is about to receive the block as well, and with the compact block protocol we may be helping our peer quite a bit (potentially saving a round trip) if we deliver the transaction before the cmpctblock arrives to them.",
      "created_at" : "2023-05-11T14:04:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544047433",
      "id" : 1544047433,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585cCEtJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544047433/reactions"
      },
      "updated_at" : "2023-05-11T14:04:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544047433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-05-11T14:40:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544111666",
      "id" : 1544111666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585cCUYy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544111666/reactions"
      },
      "updated_at" : "2023-05-11T14:40:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544111666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, good point. I was about to suggest that in that case it seems sufficient to only put `BLOCK` (maybe also `CONFLICTED`/`REORG`) transactions into `mapRelay` (keeping their mempool timestamp, to avoid adding ones that are older than 15 minutes). However, I think your point also applies to `REPLACED` transactions, because we'd still want to relay them, so that they are rejected by the peer and end up in their `AddToCompactExtraTransactions`? I wonder if it makes sense to drop a line or two of documentation here. (Edit: Or maybe even a test, if we want to get extra fancy)",
      "created_at" : "2023-05-11T15:10:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544171255",
      "id" : 1544171255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585cCi73",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544171255/reactions"
      },
      "updated_at" : "2023-05-11T18:52:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544171255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "FWIW, I've thought about moving `mapRelay` into txmempool so that its size can be counted as part of the 300MB (or whatever), and, if it grows too large, that we could trim `mapRelay` before their scheduled expiry time has actually been reached. Then you could have a multi_index amongst `txid`, `wtxid`, `expiry` to an `CTransactionRef`, along with a counter of how many entries in `mapRelay` aren't also in the mempool for handling memory usage?",
      "created_at" : "2023-05-11T16:08:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544274997",
      "id" : 1544274997,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585cC8Q1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544274997/reactions"
      },
      "updated_at" : "2023-05-11T16:08:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544274997",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> we could trim mapRelay before their scheduled expiry time has actually been reached.\r\n\r\nSounds like this would either degrade compact block relay when the mempool is full due to trimming `mapRelay`, or turn one DoS (OOM) into another DoS (lost fee income) due to trimming valid mempool txs? And if you use separate and dedicated size limits for `mapRelay` and the mempool, it might be easier to keep them separate data structures? ",
      "created_at" : "2023-05-11T19:15:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544546730",
      "id" : 1544546730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585cD-mq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544546730/reactions"
      },
      "updated_at" : "2023-05-11T19:15:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544546730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "What is the benefit of `mapRelay` overlapping with mempool? If we moved it into txmempool, could we just add things to `mapRelay` from `mapTx` whenever evicting something for a block-related reason + whose timestamp is recent? If the main reason is transactions that could be in blocks, it seems reasonable to cap it at just a few thousand entries?",
      "created_at" : "2023-05-11T19:45:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544581150",
      "id" : 1544581150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585cEHAe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544581150/reactions"
      },
      "updated_at" : "2023-05-11T19:46:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544581150",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > we could trim mapRelay before their scheduled expiry time has actually been reached.\r\n> \r\n> Sounds like this would either degrade compact block relay when the mempool is full due to trimming `mapRelay`, or turn one DoS (OOM) into another DoS (lost fee income) due to trimming valid mempool txs? And if you use separate and dedicated size limits for `mapRelay` and the mempool, it might be easier to keep them separate data structures?\r\n\r\nThe memory usage of `mapRelay` depends on whether the transactions in it have been removed from the mempool -- if you've got 15k txs in `mapRelay` but all of them are in the mempool, then that's likely using up ~1MB; but if 50% of them were removed from the mempool and each `CTransactionRef` is using up 1kB, then that's more an extra ~15MB. You maybe get the latter scenario if you're relaying a lot of RBF txs. So I don't think you can sensibly put a figure on how much memory `mapRelay` is using if you don't track the relationship.\r\n\r\nBeyond that, the advantage of linking the two together for limits is that if you start trimming the mempool because `mapRelay` is too large, then you're increasing the mempool minfee, which reduces the RBF headroom -- instead of being able to RBF 50 times from 10 sat/vb up to 60 sat/vb, you might only see and relay 40 RBFs, from 20 sat/vb up to 60 sat/vb, which then reduces pressure on `mapRelay`.\r\n\r\n> What is the benefit of `mapRelay` overlapping with mempool?\r\n\r\n(a) We want things to expire from `mapRelay` based on when we first announced them, not when we first received them or when we evicted them, so that's extra data to store.\r\n\r\n(b) The number of txs we announce in 15 minutes is (currently) relatively tightly constrained (35tx every 2s for outbounds over 15min is ~16k; chance of >20k in 15min is about 1-in-5M).\r\n\r\n> If the main reason is transactions that could be in blocks, it seems reasonable to cap it at just a few thousand entries?\r\n\r\nWith RBF, you could have many different variants of a single tx, each relatively likely to make it into a block depending on when the miner picked the block template, so I think the time-based cap makes sense.\r\n\r\nThat said, I don't think there's a strong reason for the expiry duration to be 15 minutes rather than something shorter -- that was just left unchanged in #16851 when `mapRelay` went from being the only way to find a tx to just being the way to get at txs that are new to the mempool.",
      "created_at" : "2023-05-12T00:53:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544947585",
      "id" : 1544947585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585cFgeB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544947585/reactions"
      },
      "updated_at" : "2023-05-12T00:53:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544947585",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm a concept ACK on getting rid of mapRelay.  It's been a while since I thought about this and I haven't fully dug through the code again to refresh my memory, but my recollection is that one of the main reasons we had to keep mapRelay in the past was that historically, our software wouldn't deal with NOTFOUND responses to a getdata very well, and so if we announced a transaction and then dropped it (for whatever reason) we would be mildly DoS'ing our peers (I think we used to wait 2 minutes before trying the next peer who had announced it to us).\r\n\r\nNow that we handle NOTFOUND's better, I think the last reason to hang on to mapRelay is the reason I gave above -- if the transaction was just removed in a block, we should provide it.  However, we can do that by just looking at the last block we received, which I believe we store in memory for fast compact block replies (`m_most_recent_block`).  So if we just built an index into that last block, then I think we would be clear to drop mapRelay altogether.",
      "created_at" : "2023-05-15T13:48:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1547892773",
      "id" : 1547892773,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585cQvgl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1547892773/reactions"
      },
      "updated_at" : "2023-05-15T13:48:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1547892773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think the last reason to hang on to mapRelay is the reason I gave above\r\n\r\nMy understanding is that `REPLACED` would also need to be provided to peers: https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544171255. Otherwise there may be another round trip if the miner mines a previous version of a recently replaced transaction, which is in `mapRelay` and  `vExtraTxnForCompact`, but not the mempool (and not yet in a block, because it may be in-flight)?\r\n\r\nHowever, that may be solved, but just replacing the `mapRelay` lookup by a `vExtraTxnForCompact` lookup?",
      "created_at" : "2023-05-15T14:53:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1548022004",
      "id" : 1548022004,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585cRPD0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1548022004/reactions"
      },
      "updated_at" : "2023-05-15T15:00:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1548022004",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> My understanding is that `REPLACED` would also need to be provided to peers: [#27625 (comment)](https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544171255). Otherwise there may be another round trip if the miner mines a previous version of a recently replaced transaction, which is in `mapRelay` and `vExtraTxnForCompact`, but not the mempool (and not yet in a block, because it may be in-flight)?\r\n\r\nI think it's better that we not relay transactions that are `REPLACED` -- note that we already won't send a given peer the INV for a replaced transaction if the replacement occurs prior to the original INV going out (because we filter out transactions that are dropped from the mempool when we INV).\r\n\r\nMoreover I think it's better if, when we are aware of conflicting transactions, that we only relay the version that we think ought to confirm.  At the margin, it makes it more likely that the version we think is better gets mined, and from the perspective of a single node, we're presumably picking the one that we think is best to keep in our own mempools, so I don't think we should be spending system resources (and those of our peer) relaying the wrong version.",
      "created_at" : "2023-05-15T20:09:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1548505174",
      "id" : 1548505174,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585cTFBW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1548505174/reactions"
      },
      "updated_at" : "2023-05-15T20:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1548505174",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nThe original use of `mapRelay` was that if a tx wasn't in `mapRelay` it wouldn't be relayed at all. That resulted in problems with child transactions -- if we relay a recent child to a peer that doesn't have the parent, the parent may have expired from `mapRelay` and thus the peer wouldn't be able to accept the child at all.\r\n\r\nWe fixed that with #16851 so that we'd relay txs from the mempool if they'd been in the mempool long enough to expire from `mapRelay` (ie, 15 minutes). That got further tweaked in #18861 so that we'd skip txs that were in the to-be-announced queue, and then got tweaked further in #19109 so that the mempool would be used unconditionally for txs that had been announced recently, or that were older than 2 minutes, and `mapRelay` would only be used for txs that had left the mempool, had been announced recently (with the last 3500-5250 txs), and had entered the mempool within the last 15 minutes.\r\n\r\nThis resurrects #17303, and it's probably worth reviewing the comments there; most of the issues they raise have already been addressed, I think.\r\n\r\nI think I agree with [Suhas's comment](https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1544047433) that we should ensure we serve any txs in the most recent block before dropping `mapRelay` though, so only a concept ack here. Here's a test commit that adds that functionality https://github.com/bitcoin/bitcoin/pull/27675/commits/f26a85059fb4eaf29f9c1652b2b5e14060d79a36 I'm now running that with logging for both relayed-from-most-recent-block and relayed-from-mapRelay-only to see how relevant those cases are in practice.\r\n\r\nI think it would also be good to continue serving txs from `vExtraTxnForCompact` (and to use them for resolving orphans?) to help address the [privacy issue for rbf relay](https://github.com/bitcoin/bitcoin/pull/17303#issuecomment-550460346), but I don't think that needs to be a prerequisite for dropping `mapRelay`.",
      "created_at" : "2023-05-18T05:39:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27625#issuecomment-1552435967",
      "id" : 1552435967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27625",
      "node_id" : "IC_kwDOABII585ciEr_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1552435967/reactions"
      },
      "updated_at" : "2023-05-18T05:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1552435967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
