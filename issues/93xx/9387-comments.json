[
   {
      "body" : "General concept ACK on a RAII approach (C++ wrapper) for libevent.\r\nI think we should avoid `boost::noncopyable` and instead use C++11's `MyClass& operator=(const MyClass&) = delete;` approach.",
      "created_at" : "2016-12-20T08:18:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268182039",
      "id" : 268182039,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T08:18:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268182039",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli Fixed.",
      "created_at" : "2016-12-20T08:32:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268184790",
      "id" : 268184790,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T08:32:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268184790",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "ACK on making things RAII. Thanks.\r\n\r\nI'm not so sure about wrapping the entire interface, though. I'm not sure about others but I'd prefer something thinner.\r\n\r\nFor example  `evhttp_set_max_headers_size` -> `setMaxHeadersSize`. This makes it fractionally harder for someone that has learned the libevent APIs to understand the code because the functions are named differently.\r\n\r\n(also it adds maintenance overhead as every function of libevent to be used has to be wrapped)",
      "created_at" : "2016-12-20T10:20:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268207070",
      "id" : 268207070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T10:21:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268207070",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj It felt sensible to make the underlying `ev*` structs private but maybe my intuition was off on that. I'm not entirely convinced that `evhttp_set_max_headers_size` -> `setMaxHeadersSize` is a problem, but if you think it is, it may be better to un-private'ify the structs. That would remove the need for friends as well.",
      "created_at" : "2016-12-20T10:31:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268209325",
      "id" : 268209325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T10:31:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268209325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "It's not a *problem* but it's one of the little things that I've learned in years developing in open source. If a project makes use of some library which you already know, it's easier to get into it if it is simply using the \"lexicon\" of that library instead of wrapping everything in custom-named calls.\r\n\r\nYou could work around this by making the wrapping functions the same as the evhttp calls, e.g. don't do the camel-case thing. But yes I'd prefer not making the inner objects private - make it behave more like a \"smart pointer\".\r\n\r\nAnother (less-LoC) alternative to all of this is to define a std::unique_ptr with our own cleanup hook. I've done a similar thing recently in `paymentserver.cpp`.\r\n```\r\nstruct X509StoreDeleter {\r\n      void operator()(X509_STORE* b) {\r\n          X509_STORE_free(b);\r\n      }\r\n};\r\nstd::unique_ptr<X509_STORE, X509StoreDeleter> certStore;\r\n```\r\n",
      "created_at" : "2016-12-20T10:38:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268210767",
      "id" : 268210767,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T10:38:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268210767",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "There is also a slight issue with the `evhttp_request` which needs to *not* be freed if a call to `evhttp_make_request` has been made. By exposing the internal `evhttp_request`, it's not possible to determine which is the case.",
      "created_at" : "2016-12-20T10:39:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268210929",
      "id" : 268210929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T10:39:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268210929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "That (names being same) makes sense. The `unique_ptr` approach looks very nice, but unsure if it can address the above issue adequately.",
      "created_at" : "2016-12-20T10:42:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268211467",
      "id" : 268211467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T10:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268211467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "> There is also a slight issue with the evhttp_request which needs to not be freed if a call to evhttp_make_request has been made. By exposing the internal evhttp_request, it's not possible to determine which is the case.\r\n\r\nCouldn't, in that case, the calling code could just `.release()` the pointer? No need to build that intelligence into the pointer object.",
      "created_at" : "2016-12-20T10:43:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268211729",
      "id" : 268211729,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T10:43:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268211729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "You mean, explicitly tell the wrapper it no longer owns the object whenever you do `evhttp_make_request`? I suppose that is doable. I would have loved to not have to risk developers forgetting to do so though.",
      "created_at" : "2016-12-20T10:46:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268212325",
      "id" : 268212325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T10:46:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268212325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "True, though hiding behaviour in the wrapper instead of explicit transfer\nof ownership could also cause confusion, as there is a certain expectation\nfrom the API.\n\nOn Dec 20, 2016 11:46 AM, \"kallewoof\" <notifications@github.com> wrote:\n\n> You mean, explicitly tell the wrapper it no longer owns the object\n> whenever you do evhttp_make_request? I suppose that is doable. I would\n> have loved to not have to risk developers forgetting to do so though.\n>\n> Ã¢ÂÂ\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268212325>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAHutu5cec1TevmA-izXHyoEfiUmitigks5rJ7IDgaJpZM4LRjq0>\n> .\n>\n",
      "created_at" : "2016-12-20T10:50:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268213151",
      "id" : 268213151,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T10:50:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268213151",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Yeah, that makes sense. Thanks for the feedback, will fix!",
      "created_at" : "2016-12-20T10:51:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268213474",
      "id" : 268213474,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T10:51:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268213474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "@laanwj I decided to go with the unique pointer + deleter approach. It became awfully verbose, so I did some macroing. (Maybe I should have remade a PR instead of building off of this one. It's a bit long.)",
      "created_at" : "2016-12-20T11:53:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268224948",
      "id" : 268224948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T12:03:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268224948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "Nice!\r\nConcept ACK. I think the use of macros is okay in this case, as indeed they all follow the same pattern and it saves a lot of dumb repetition.\r\n",
      "created_at" : "2016-12-20T12:22:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9387#issuecomment-268230164",
      "id" : 268230164,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9387",
      "updated_at" : "2016-12-20T12:24:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268230164",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
