[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Or should I rather validate port directly in addpeeraddress() and just ignore the -0 case?\r\n\r\n~~I think it can be ignored. Tried using `-0` in few other arguments for other RPC and it is considered as `0`. I could not find a way to read `peers.dat` however this observation is based on usage of negative zero in other parameters.~~\r\n\r\nBased on reading few posts like https://softwareengineering.stackexchange.com/questions/280648/why-is-negative-zero-important it could be an issue in some cases ~~but not here I guess.I have no opinion on this because I couldn't do anything interesting with `-0` in `addpeeraddress`~~\r\n\r\n@amadeuszpawlik  I tried using port `-0` in `addnode` and it adds negative zero in the port, I am assuming similar thing would happen with `addpeeraddress` so: \r\n\r\n**Concept ACK** for this PR and maybe we need to make changes for few other RPC",
      "created_at" : "2021-12-07T23:10:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23679#issuecomment-988329017",
      "id" : 988329017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23679",
      "node_id" : "IC_kwDOABII58466LQ5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988329017/reactions"
      },
      "updated_at" : "2021-12-08T10:50:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988329017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@prayank23 good find with `addnode` (although in that particular command the port is specified in an address string, so this wouldn't fix it). It looks like `-0` is not the only case that `addnode` accepts.\r\nThe modded `SplitHostPort` I propose in #22087 would definitely be nice here for port validation.\r\nI'll go trough other RPCs and add validation for them too.\r\n\r\nMy question still stands, is modifying `univalue` a valid approach for commands that currently use `int` for port value, or do I ignore the `-0` case and simply validate directly in `net.cpp`?",
      "created_at" : "2021-12-12T14:12:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23679#issuecomment-991905585",
      "id" : 991905585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23679",
      "node_id" : "IC_kwDOABII5847H0cx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/991905585/reactions"
      },
      "updated_at" : "2021-12-12T14:13:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/991905585",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/35263201?v=4",
         "events_url" : "https://api.github.com/users/amadeuszpawlik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amadeuszpawlik/followers",
         "following_url" : "https://api.github.com/users/amadeuszpawlik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amadeuszpawlik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amadeuszpawlik",
         "id" : 35263201,
         "login" : "amadeuszpawlik",
         "node_id" : "MDQ6VXNlcjM1MjYzMjAx",
         "organizations_url" : "https://api.github.com/users/amadeuszpawlik/orgs",
         "received_events_url" : "https://api.github.com/users/amadeuszpawlik/received_events",
         "repos_url" : "https://api.github.com/users/amadeuszpawlik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amadeuszpawlik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amadeuszpawlik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amadeuszpawlik"
      }
   }
]
