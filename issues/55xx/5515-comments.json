[
   {
      "body" : "Since travis passes, I figured we might actually consider this...essentially, it asserts that we dont have deadlocks assuming: (a) no locking-conditions are based on data other than the current set of locked locks and (b) if we do a TRY_LOCK, and it fails, we will immediately bail out and just skip that section of code.\r\nSince DEBUG_LOCKORDER is pretty much travis-only, if it might crash in cases that regular bitcoind might not, I dont really mind.",
      "created_at" : "2014-12-20T21:15:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5515#issuecomment-67750006",
      "id" : 67750006,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5515",
      "updated_at" : "2014-12-20T21:15:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67750006",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Mostly, the DEBUG_LOCKORDER warnings arent even shown by travis anymore (they're just hidden behind the debug.log, so the only thing that flag does is check the lock assertions), so I figure we should have some semi-automated screeching if common-path code has lock inversions.",
      "created_at" : "2014-12-20T21:16:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5515#issuecomment-67750056",
      "id" : 67750056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5515",
      "updated_at" : "2014-12-20T21:16:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/67750056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Concept ACK, but this makes the deadlock detection code kind of complex. I can't immediately see whether it's correct or wrong.",
      "created_at" : "2015-04-01T12:00:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5515#issuecomment-88450537",
      "id" : 88450537,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5515",
      "updated_at" : "2015-04-01T12:00:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88450537",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Hmmm....\r\n\r\nWould this work instead? Modify sync.h CMutexLock::TryEnter to only call EnterCritical() if the lock is successfully acquired?\r\n```\r\n    bool TryEnter(const char* pszName, const char* pszFile, int nLine)\r\n    {\r\n        lock.try_lock();\r\n        if (lock.owns_lock()\r\n              EnterCritical(pszName, pszFile, nLine, (void*)(lock.mutex()), true);\r\n        return lock.owns_lock();\r\n    }\r\n```\r\n(or, in other words: just ignore TRY_LOCKS that don't acquire the lock)\r\n",
      "created_at" : "2015-04-01T14:19:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5515#issuecomment-88502698",
      "id" : 88502698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5515",
      "updated_at" : "2015-04-01T14:21:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88502698",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "@gavinandresen No, because often you see warnings because you have a lock(B) followed by a try_lock(A) and a lock(A) followed by a lock(B) at different times, you'll get a warning, but your suggestion would ignore it because you didnt actually see a deadlock.\r\n\r\nAlso, you cant just ignore try_locks entirely because it is very easy to create a deadlock with a try_lock.",
      "created_at" : "2015-04-03T17:30:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5515#issuecomment-89368860",
      "id" : 89368860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5515",
      "updated_at" : "2015-04-03T17:30:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89368860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt : maybe I'm being dense... but:\r\n\r\nIf we get:  lock(B) then a successful (lock-acquired) try_lock(A), then the lockorders map will contain \"B then A\".\r\nIf at any point in the future lock(A) is followed by lock(B), a warning will be triggered -- my suggestion doesn't require that there be an actual deadlock.\r\n\r\nI'm not suggesting that try_lock be ignored entirely....",
      "created_at" : "2015-04-03T17:56:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5515#issuecomment-89375121",
      "id" : 89375121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5515",
      "updated_at" : "2015-04-03T17:56:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89375121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   }
]
