[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. This will make #22341 a _lot_ easier.",
      "created_at" : "2021-11-02T19:47:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-958114472",
      "id" : 958114472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII5845G6qo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/958114472/reactions"
      },
      "updated_at" : "2021-11-02T19:47:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/958114472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25806](https://github.com/bitcoin/bitcoin/pull/25806) (wallet: single outputs grouping calculation by furszy)\n* [#25766](https://github.com/bitcoin/bitcoin/pull/25766) (wallet: Include a signature with encrypted keys to mitigate a wallet scam by achow101)\n* [#25707](https://github.com/bitcoin/bitcoin/pull/25707) (refactor: Make const references to avoid unnecessarily copying objects and enable two clang-tidy checks by aureleoules)\n* [#24914](https://github.com/bitcoin/bitcoin/pull/24914) (wallet: Load database records in a particular order by achow101)\n* [#24897](https://github.com/bitcoin/bitcoin/pull/24897) ([Draft / POC] Silent Payments by w0xlt)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n* [#20205](https://github.com/bitcoin/bitcoin/pull/20205) (wallet: Properly support a wallet id by achow101)\n* [#19602](https://github.com/bitcoin/bitcoin/pull/19602) (wallet: Migrate legacy wallets to descriptor wallets by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-11-03T00:08:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-958482937",
      "id" : 958482937,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII5845IUn5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/958482937/reactions"
      },
      "updated_at" : "2022-08-09T17:45:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/958482937",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r743729962"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743729962"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1399c27ec5081af7a1f31a9bb750b216cc68c6cf: nit, maybe order by `vchFingerprint < other.vchFingerprint || pubkey < other.pubkey`, in case we ever want to use this to sort by master key.",
      "commit_id" : "2fdd0d01c3ce0ef747369400a2fa651e6a93abed",
      "created_at" : "2021-11-05T14:51:53Z",
      "diff_hunk" : "@@ -304,6 +304,7 @@ struct CExtPubKey {\n     {\n         return !(a == b);\n     }\n+    bool operator<(const CExtPubKey& other) const { return pubkey < other.pubkey; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r743729962",
      "id" : 743729962,
      "line" : 307,
      "node_id" : "PRRC_kwDOABII584sVGsq",
      "original_commit_id" : "1399c27ec5081af7a1f31a9bb750b216cc68c6cf",
      "original_line" : 307,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/pubkey.h",
      "position" : 4,
      "pull_request_review_id" : 798987425,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743729962/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T16:57:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743729962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r743737544"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743737544"
         }
      },
      "author_association" : "MEMBER",
      "body" : "2ed25fe1a512d50065c6e27b23016500f3e6d647\r\n```\r\n// The active HD master key, identified by its extended public key\r\n```",
      "commit_id" : "2fdd0d01c3ce0ef747369400a2fa651e6a93abed",
      "created_at" : "2021-11-05T15:00:23Z",
      "diff_hunk" : "@@ -55,6 +55,7 @@ namespace DBKeys {\n extern const std::string ACENTRY;\n extern const std::string ACTIVEEXTERNALSPK;\n extern const std::string ACTIVEINTERNALSPK;\n+extern const std::string ACTIVEHDKEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r743737544",
      "id" : 743737544,
      "line" : 58,
      "node_id" : "PRRC_kwDOABII584sVIjI",
      "original_commit_id" : "2ed25fe1a512d50065c6e27b23016500f3e6d647",
      "original_line" : 58,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : 4,
      "pull_request_review_id" : 798987425,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743737544/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T16:57:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743737544",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r743738748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743738748"
         }
      },
      "author_association" : "MEMBER",
      "body" : "2ed25fe1a512d50065c6e27b23016500f3e6d647\r\n```\r\n// An HD master key, identified by its extended public key\r\n```",
      "commit_id" : "2fdd0d01c3ce0ef747369400a2fa651e6a93abed",
      "created_at" : "2021-11-05T15:01:47Z",
      "diff_hunk" : "@@ -63,6 +64,7 @@ extern const std::string DEFAULTKEY;\n extern const std::string DESTDATA;\n extern const std::string FLAGS;\n extern const std::string HDCHAIN;\n+extern const std::string HDPUBKEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r743738748",
      "id" : 743738748,
      "line" : 67,
      "node_id" : "PRRC_kwDOABII584sVI18",
      "original_commit_id" : "2ed25fe1a512d50065c6e27b23016500f3e6d647",
      "original_line" : 67,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : 12,
      "pull_request_review_id" : 798987425,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743738748/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T16:57:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743738748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r743788858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743788858"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1c76661cc73a32cfc5a6185aec1aa954dbad3dd6: assuming we don't back port this, shouldn't it be `last_client <= 229999`. Otherwise we wouldn't upgrade wallets touched by (hypothetical future release) v22.1",
      "commit_id" : "2fdd0d01c3ce0ef747369400a2fa651e6a93abed",
      "created_at" : "2021-11-05T16:01:58Z",
      "diff_hunk" : "@@ -1085,7 +1085,97 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n-    // TODO: Upgrade to using KeyMan\n+    // Upgrade to using KeyMan\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_USES_KEYMAN) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)\n+        && last_client <= 220000",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r743788858",
      "id" : 743788858,
      "line" : 1084,
      "node_id" : "PRRC_kwDOABII584sVVE6",
      "original_commit_id" : "1c76661cc73a32cfc5a6185aec1aa954dbad3dd6",
      "original_line" : 1094,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 232,
      "pull_request_review_id" : 798987425,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743788858/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T16:57:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743788858",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r743792769"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743792769"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1c76661: maybe clarify that we're dealing with the xpub at the root level, not the BIP44/49/84 \"account\" level.",
      "commit_id" : "2fdd0d01c3ce0ef747369400a2fa651e6a93abed",
      "created_at" : "2021-11-05T16:06:59Z",
      "diff_hunk" : "@@ -1085,7 +1085,97 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n-    // TODO: Upgrade to using KeyMan\n+    // Upgrade to using KeyMan\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_USES_KEYMAN) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)\n+        && last_client <= 220000\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r743792769",
      "id" : 743792769,
      "line" : 1089,
      "node_id" : "PRRC_kwDOABII584sVWCB",
      "original_commit_id" : "1c76661cc73a32cfc5a6185aec1aa954dbad3dd6",
      "original_line" : 1099,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 237,
      "pull_request_review_id" : 798987425,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743792769/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T16:57:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743792769",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-11-08T13:49:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-963167428",
      "id" : 963167428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII5845aMTE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/963167428/reactions"
      },
      "updated_at" : "2021-11-08T13:49:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/963167428",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r745968135"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745968135"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "be70c2322fcb52e4ff586a10577687e292ea3783",
      "created_at" : "2021-11-09T19:59:50Z",
      "diff_hunk" : "@@ -304,6 +304,7 @@ struct CExtPubKey {\n     {\n         return !(a == b);\n     }\n+    bool operator<(const CExtPubKey& other) const { return pubkey < other.pubkey; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r745968135",
      "id" : 745968135,
      "in_reply_to_id" : 743729962,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sdpIH",
      "original_commit_id" : "1399c27ec5081af7a1f31a9bb750b216cc68c6cf",
      "original_line" : 307,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/pubkey.h",
      "position" : null,
      "pull_request_review_id" : 801803944,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745968135/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T19:59:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745968135",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r745968204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745968204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "be70c2322fcb52e4ff586a10577687e292ea3783",
      "created_at" : "2021-11-09T19:59:54Z",
      "diff_hunk" : "@@ -55,6 +55,7 @@ namespace DBKeys {\n extern const std::string ACENTRY;\n extern const std::string ACTIVEEXTERNALSPK;\n extern const std::string ACTIVEINTERNALSPK;\n+extern const std::string ACTIVEHDKEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r745968204",
      "id" : 745968204,
      "in_reply_to_id" : 743737544,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sdpJM",
      "original_commit_id" : "2ed25fe1a512d50065c6e27b23016500f3e6d647",
      "original_line" : 58,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : null,
      "pull_request_review_id" : 801804007,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745968204/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T19:59:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745968204",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r745968275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745968275"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "be70c2322fcb52e4ff586a10577687e292ea3783",
      "created_at" : "2021-11-09T19:59:58Z",
      "diff_hunk" : "@@ -63,6 +64,7 @@ extern const std::string DEFAULTKEY;\n extern const std::string DESTDATA;\n extern const std::string FLAGS;\n extern const std::string HDCHAIN;\n+extern const std::string HDPUBKEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r745968275",
      "id" : 745968275,
      "in_reply_to_id" : 743738748,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sdpKT",
      "original_commit_id" : "2ed25fe1a512d50065c6e27b23016500f3e6d647",
      "original_line" : 67,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : null,
      "pull_request_review_id" : 801804075,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745968275/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T19:59:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745968275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r745969175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745969175"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, also changed this to be either the flag is not set, or the last client is <= 229999. This is to handle the upgrade then downgrade and then upgrade again case.",
      "commit_id" : "be70c2322fcb52e4ff586a10577687e292ea3783",
      "created_at" : "2021-11-09T20:00:52Z",
      "diff_hunk" : "@@ -1085,7 +1085,97 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n-    // TODO: Upgrade to using KeyMan\n+    // Upgrade to using KeyMan\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_USES_KEYMAN) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)\n+        && last_client <= 220000",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r745969175",
      "id" : 745969175,
      "in_reply_to_id" : 743788858,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sdpYX",
      "original_commit_id" : "1c76661cc73a32cfc5a6185aec1aa954dbad3dd6",
      "original_line" : 1094,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 801804881,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745969175/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T20:00:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745969175",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r745969252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745969252"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "be70c2322fcb52e4ff586a10577687e292ea3783",
      "created_at" : "2021-11-09T20:00:58Z",
      "diff_hunk" : "@@ -1085,7 +1085,97 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n-    // TODO: Upgrade to using KeyMan\n+    // Upgrade to using KeyMan\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_USES_KEYMAN) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)\n+        && last_client <= 220000\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r745969252",
      "id" : 745969252,
      "in_reply_to_id" : 743792769,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sdpZk",
      "original_commit_id" : "1c76661cc73a32cfc5a6185aec1aa954dbad3dd6",
      "original_line" : 1099,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 801804949,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745969252/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T20:00:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745969252",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thread safety warnings are fixed, not seeing the wallet_transactiontime_rescan.py failure.",
      "created_at" : "2021-11-09T20:01:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-964490868",
      "id" : 964490868,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII5845fPZ0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964490868/reactions"
      },
      "updated_at" : "2021-11-09T20:01:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964490868",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747611357"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747611357"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, my example wasn't very smart, because this is comparing pointers...  `unsigned char vchFingerprint[4]`. The `memcmp` approach in `==` above is probably more useful. And we should probably be consistent and compare all the things.",
      "commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "created_at" : "2021-11-11T15:45:50Z",
      "diff_hunk" : "@@ -304,6 +304,7 @@ struct CExtPubKey {\n     {\n         return !(a == b);\n     }\n+    bool operator<(const CExtPubKey& other) const { return vchFingerprint < other.vchFingerprint || pubkey < other.pubkey; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747611357",
      "id" : 747611357,
      "line" : 307,
      "node_id" : "PRRC_kwDOABII584sj6Td",
      "original_commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "original_line" : 307,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/pubkey.h",
      "position" : 4,
      "pull_request_review_id" : 803946152,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747611357/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-11T18:11:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747611357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747615584"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747615584"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n /** Return all (extended) public  keys for this descriptor, including any from any subdescriptors.\r\n     *\r\n     * @param[out] pubkeys Any public keys.\r\n     * @param[out] pubkeys Any extended public keys.\r\n     */\r\n```\r\n\r\nThis recursive function always ends up at `GetRootPubkeys`; any reason why `Root` is not present in this function name?",
      "commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "created_at" : "2021-11-11T15:51:06Z",
      "diff_hunk" : "@@ -146,6 +146,8 @@ struct Descriptor {\n \n     /** @return The OutputType of the scriptPubKey(s) produced by this descriptor. Or nullopt if indeterminate (multiple or none) */\n     virtual std::optional<OutputType> GetOutputType() const = 0;\n+\n+    virtual void GetPubkeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747615584",
      "id" : 747615584,
      "line" : 150,
      "node_id" : "PRRC_kwDOABII584sj7Vg",
      "original_commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "original_line" : 150,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/descriptor.h",
      "position" : 5,
      "pull_request_review_id" : 803946152,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747615584/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-11T18:11:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747615584",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747623354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747623354"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n /** Return all (extended) public  keys for this descriptor\r\n     *\r\n     * @param[out] pubkeys Any public keys.\r\n     * @param[out] pubkeys Any extended public keys.\r\n     */\r\n```",
      "commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "created_at" : "2021-11-11T16:00:11Z",
      "diff_hunk" : "@@ -185,6 +185,8 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    virtual void GetRootPubkey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747623354",
      "id" : 747623354,
      "line" : 189,
      "node_id" : "PRRC_kwDOABII584sj9O6",
      "original_commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "original_line" : 189,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 5,
      "pull_request_review_id" : 803946152,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747623354/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-11T18:11:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747623354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747638450"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747638450"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Let's clarify here, or at the documentation for `GetActiveHDKey`, that the corresponding extended private key is reconstructed using this extended public key, which includes the chain code, and the right `KEYMAN_KEY` or `KEYMAN_CKEY` private key.\r\n\r\nStill this process seems rather complicated, why not just store the (encrypted) extended private key?",
      "commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "created_at" : "2021-11-11T16:19:32Z",
      "diff_hunk" : "@@ -63,8 +64,11 @@ extern const std::string DEFAULTKEY;\n extern const std::string DESTDATA;\n extern const std::string FLAGS;\n extern const std::string HDCHAIN;\n+extern const std::string HDPUBKEY; // A HD key, identified by extended pubkey",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747638450",
      "id" : 747638450,
      "line" : 67,
      "node_id" : "PRRC_kwDOABII584skA6y",
      "original_commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "original_line" : 67,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : 12,
      "pull_request_review_id" : 803946152,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747638450/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-11T18:11:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747638450",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747846801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747846801"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not particularly. I believe originally I wanted the underlying function in `PubkeyProvider` to be `GetPubkey` but that was already taken. The `Root` part came from the fact that `GetPubkey` in `BIP32PubkeyProvider` returns a derived key whereas I needed the root extended key.",
      "commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "created_at" : "2021-11-11T22:05:13Z",
      "diff_hunk" : "@@ -146,6 +146,8 @@ struct Descriptor {\n \n     /** @return The OutputType of the scriptPubKey(s) produced by this descriptor. Or nullopt if indeterminate (multiple or none) */\n     virtual std::optional<OutputType> GetOutputType() const = 0;\n+\n+    virtual void GetPubkeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747846801",
      "id" : 747846801,
      "in_reply_to_id" : 747615584,
      "line" : 150,
      "node_id" : "PRRC_kwDOABII584skzyR",
      "original_commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "original_line" : 150,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/descriptor.h",
      "position" : 5,
      "pull_request_review_id" : 804254898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747846801/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-11T22:05:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747846801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747861202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747861202"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A lot of places in the codebase do not expect `CExtKey`s when fetching private keys, even in places where BIP 32 derivation ends up being done. They instead take `CKey`s and combine them with `CExtPubKey`s to get the necessary `CExtKey`s. We maintain this same paradigm for ease of implementation.\r\n\r\nAdditionally, having all private keys be universally `CKey`s makes it easier to support non-ranged descriptors. Instead of having to store and fetch different data types depending on whether the descriptor is ranged, and then converting them into the same data type for expansion and signing, we can use the same datatype throughout. When we do need the extended key, it can be reconstructed, but that (currently) happens rarely.",
      "commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "created_at" : "2021-11-11T22:37:07Z",
      "diff_hunk" : "@@ -63,8 +64,11 @@ extern const std::string DEFAULTKEY;\n extern const std::string DESTDATA;\n extern const std::string FLAGS;\n extern const std::string HDCHAIN;\n+extern const std::string HDPUBKEY; // A HD key, identified by extended pubkey",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r747861202",
      "id" : 747861202,
      "in_reply_to_id" : 747638450,
      "line" : 67,
      "node_id" : "PRRC_kwDOABII584sk3TS",
      "original_commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "original_line" : 67,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : 12,
      "pull_request_review_id" : 804273373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747861202/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-11T22:37:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747861202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r748170446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748170446"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Storing both `CExtKey` and `Ckey` (for non-ranged descriptors) could be an approach, but I'm also not sure if that makes the implementation any easier to understand. This is probably the only opportunity to break with the past convention, if we want to.",
      "commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "created_at" : "2021-11-12T11:14:02Z",
      "diff_hunk" : "@@ -63,8 +64,11 @@ extern const std::string DEFAULTKEY;\n extern const std::string DESTDATA;\n extern const std::string FLAGS;\n extern const std::string HDCHAIN;\n+extern const std::string HDPUBKEY; // A HD key, identified by extended pubkey",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r748170446",
      "id" : 748170446,
      "in_reply_to_id" : 747638450,
      "line" : 67,
      "node_id" : "PRRC_kwDOABII584smCzO",
      "original_commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "original_line" : 67,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : 12,
      "pull_request_review_id" : 804675890,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748170446/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-12T11:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748170446",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r748565931"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748565931"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "2e3eb1629143e918d4a06543937b47acb6db29c1",
      "created_at" : "2021-11-12T20:25:22Z",
      "diff_hunk" : "@@ -304,6 +304,7 @@ struct CExtPubKey {\n     {\n         return !(a == b);\n     }\n+    bool operator<(const CExtPubKey& other) const { return vchFingerprint < other.vchFingerprint || pubkey < other.pubkey; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r748565931",
      "id" : 748565931,
      "in_reply_to_id" : 747611357,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584snjWr",
      "original_commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "original_line" : 307,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/pubkey.h",
      "position" : null,
      "pull_request_review_id" : 805199486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748565931/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-12T20:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748565931",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r748565962"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748565962"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added the comment",
      "commit_id" : "2e3eb1629143e918d4a06543937b47acb6db29c1",
      "created_at" : "2021-11-12T20:25:26Z",
      "diff_hunk" : "@@ -146,6 +146,8 @@ struct Descriptor {\n \n     /** @return The OutputType of the scriptPubKey(s) produced by this descriptor. Or nullopt if indeterminate (multiple or none) */\n     virtual std::optional<OutputType> GetOutputType() const = 0;\n+\n+    virtual void GetPubkeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r748565962",
      "id" : 748565962,
      "in_reply_to_id" : 747615584,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII584snjXK",
      "original_commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "original_line" : 155,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/descriptor.h",
      "position" : 10,
      "pull_request_review_id" : 805199602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748565962/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-12T20:25:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748565962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r748566173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748566173"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "2e3eb1629143e918d4a06543937b47acb6db29c1",
      "created_at" : "2021-11-12T20:25:40Z",
      "diff_hunk" : "@@ -185,6 +185,8 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    virtual void GetRootPubkey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r748566173",
      "id" : 748566173,
      "in_reply_to_id" : 747623354,
      "line" : 193,
      "node_id" : "PRRC_kwDOABII584snjad",
      "original_commit_id" : "7fc1afc000ad2f29bec78e6b82470369bbbf32c2",
      "original_line" : 193,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 9,
      "pull_request_review_id" : 805199893,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748566173/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-12T20:25:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748566173",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Not seeing any thread warning anymore, so that's good.\r\n\r\n`wallet_transactiontime_rescan.py` only fails for me with configuring `--without-bdb`. ",
      "created_at" : "2021-11-16T12:34:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-970229451",
      "id" : 970229451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII58451IbL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970229451/reactions"
      },
      "updated_at" : "2021-11-16T12:34:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970229451",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r750288077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750288077"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It would be nice to group the wallet loading and unloading functions.\r\n\r\nSimilarly let's separate functions that modify wallet storage from those that don't. ",
      "commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "created_at" : "2021-11-16T13:47:00Z",
      "diff_hunk" : "@@ -0,0 +1,65 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_KEYMAN_H\n+#define BITCOIN_WALLET_KEYMAN_H\n+\n+#include <sync.h>\n+#include <wallet/db.h>\n+#include <wallet/storage.h>\n+\n+#include <map>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+class CKey;\n+class CKeyID;\n+class CPubKey;\n+class WalletBatch;\n+\n+class KeyManager\n+{\n+private:\n+    WalletStorage& m_storage;\n+\n+    std::map<CKeyID, CKey> m_map_keys GUARDED_BY(cs_keyman);\n+    std::map<CKeyID, CExtPubKey> m_map_xpubs GUARDED_BY(cs_keyman);\n+    std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char>>> m_map_crypted_keys GUARDED_BY(cs_keyman);\n+\n+    bool m_decryption_thoroughly_checked = false;\n+\n+    CExtPubKey m_active_xpub GUARDED_BY(cs_keyman);\n+\n+    bool AddKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey) EXCLUSIVE_LOCKS_REQUIRED(cs_keyman);\n+    std::vector<unsigned char> AddCryptedKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey) EXCLUSIVE_LOCKS_REQUIRED(cs_keyman);\n+\n+public:\n+    mutable RecursiveMutex cs_keyman;\n+\n+    KeyManager(WalletStorage& storage) : m_storage(storage) {}\n+    KeyManager() = delete;\n+\n+    void GenerateAndSetHDKey();\n+    std::optional<CExtKey> GetActiveHDKey() const EXCLUSIVE_LOCKS_REQUIRED(cs_keyman);\n+    std::optional<CExtPubKey> GetActiveHDPubKey() const EXCLUSIVE_LOCKS_REQUIRED(cs_keyman);\n+    void SetActiveHDKey(const CExtPubKey& extpub);\n+    void LoadActiveHDKey(const CExtPubKey& extpub);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r750288077",
      "id" : 750288077,
      "line" : 48,
      "node_id" : "PRRC_kwDOABII584suHzN",
      "original_commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "original_line" : 48,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/wallet/keyman.h",
      "position" : 48,
      "pull_request_review_id" : 807320159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750288077/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-17T14:58:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750288077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> `wallet_transactiontime_rescan.py` only fails for me with configuring `--without-bdb`.\r\n\r\nThis appears to fail on master as well.",
      "created_at" : "2021-11-16T17:42:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-970510995",
      "id" : 970510995,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII58452NKT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970510995/reactions"
      },
      "updated_at" : "2021-11-16T17:42:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970510995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751259808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751259808"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(partly existing code)\r\nIf an encrypted wallet is locked, rather than fail, this function just returns the `m_map_keys` which happens to be empty. Not sure how I feel about that, but let's at least document (that calling this on a locked wallet returns an empty result).",
      "commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "created_at" : "2021-11-17T13:51:59Z",
      "diff_hunk" : "@@ -0,0 +1,272 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <wallet/crypter.h>\n+#include <wallet/keyman.h>\n+#include <wallet/walletdb.h>\n+\n+void KeyManager::GenerateAndSetHDKey()\n+{\n+    LOCK(cs_keyman);\n+    CKey key;\n+    key.MakeNewKey(true);\n+    CPubKey seed_pub = key.GetPubKey();\n+    assert(key.VerifyPubKey(seed_pub));\n+\n+    CExtKey master_key;\n+    master_key.SetSeed(key);\n+    CExtPubKey master_xpub = master_key.Neuter();\n+\n+    WalletBatch batch(m_storage.GetDatabase());\n+    AddHDKey(batch, master_key, master_xpub);\n+    SetActiveHDKey(master_xpub);\n+}\n+\n+void KeyManager::LoadActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    m_active_xpub = extpub;\n+}\n+\n+void KeyManager::SetActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    LoadActiveHDKey(extpub);\n+    WalletBatch batch(m_storage.GetDatabase());\n+    batch.WriteActiveHDKey(extpub);\n+}\n+\n+std::optional<CExtKey> KeyManager::GetActiveHDKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+\n+    CKey key;\n+    if (m_storage.HasEncryptionKeys()) {\n+        if (m_storage.IsLocked()) {\n+            return std::nullopt;\n+        }\n+        const auto& it = m_map_crypted_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_crypted_keys.end());\n+        const auto& [pubkey, ckey] = it->second;\n+\n+        if (!DecryptKey(m_storage.GetEncryptionKey(), ckey, pubkey, key)) {\n+            return std::nullopt;\n+        }\n+    } else {\n+        const auto& it = m_map_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_keys.end());\n+        key = it->second;\n+    }\n+    assert(key.IsValid());\n+\n+    CExtKey master_key;\n+    master_key.nDepth = m_active_xpub.nDepth;\n+    std::copy(m_active_xpub.vchFingerprint, m_active_xpub.vchFingerprint + sizeof(master_key.vchFingerprint), master_key.vchFingerprint);\n+    master_key.nChild = m_active_xpub.nChild;\n+    master_key.chaincode = m_active_xpub.chaincode;\n+    master_key.key = key;\n+    return master_key;\n+}\n+\n+std::optional<CExtPubKey> KeyManager::GetActiveHDPubKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+    return m_active_xpub;\n+}\n+\n+bool KeyManager::AddKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+    assert(!m_storage.HasEncryptionKeys());\n+\n+    const CKeyID& id = pubkey.GetID();\n+    if (m_map_keys.find(id) != m_map_keys.end()) {\n+        return true;\n+    }\n+\n+    m_map_keys[id] = key;\n+    return batch.WriteKeyManKey(pubkey, key.GetPrivKey());\n+}\n+\n+std::vector<unsigned char> KeyManager::AddCryptedKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+\n+    assert(m_storage.HasEncryptionKeys());\n+    if (m_storage.IsLocked()) {\n+        return {};\n+    }\n+\n+    const CKeyID& id = pubkey.GetID();\n+    const auto& it = m_map_crypted_keys.find(id);\n+    if (it != m_map_crypted_keys.end()) {\n+        return it->second.second;\n+    }\n+\n+    std::vector<unsigned char> crypted_secret;\n+    CKeyingMaterial secret(key.begin(), key.end());\n+    if (!EncryptSecret(m_storage.GetEncryptionKey(), secret, pubkey.GetHash(), crypted_secret)) {\n+        return {};\n+    }\n+\n+    m_map_crypted_keys[id] = make_pair(pubkey, crypted_secret);\n+\n+    if (!batch.WriteCryptedKeyManKey(pubkey, crypted_secret)) {\n+        return {};\n+    }\n+\n+    return crypted_secret;\n+}\n+\n+bool KeyManager::AddDescriptorKey(WalletBatch& batch, const uint256& desc_id, const CKey& key, const CPubKey& pubkey)\n+{\n+    LOCK(cs_keyman);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, key, pubkey);\n+        if (ckey.empty()) {\n+            return false;\n+        }\n+        return batch.WriteCryptedDescriptorKey(desc_id, pubkey, ckey);\n+    } else {\n+        return AddKeyInner(batch, key, pubkey) && batch.WriteDescriptorKey(desc_id, pubkey, key.GetPrivKey());\n+    }\n+}\n+\n+bool KeyManager::AddHDKey(WalletBatch& batch, const CExtKey& extkey, const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    const CKeyID& id = extpub.pubkey.GetID();\n+    m_map_xpubs[id] = extpub;\n+    batch.WriteHDPubKey(extpub);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, extkey.key, extpub.pubkey);\n+        return !ckey.empty();\n+    } else {\n+        return AddKeyInner(batch, extkey.key, extpub.pubkey);\n+    }\n+}\n+\n+void KeyManager::LoadKey(const CKeyID& key_id, const CKey& key)\n+{\n+    LOCK(cs_keyman);\n+    m_map_keys[key_id] = key;\n+}\n+\n+bool KeyManager::LoadCryptedKey(const CKeyID& key_id, const CPubKey& pubkey, const std::vector<unsigned char>& ckey)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    m_map_crypted_keys[key_id] = make_pair(pubkey, ckey);\n+    return true;\n+}\n+\n+void KeyManager::LoadHDKey(const CKeyID& key_id, const CExtPubKey& xpub)\n+{\n+    LOCK(cs_keyman);\n+    m_map_xpubs[key_id] = xpub;\n+}\n+\n+bool KeyManager::CheckDecryptionKey(const CKeyingMaterial& master_key, bool accept_no_keys)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    bool keyPass = m_map_crypted_keys.empty(); // Always pass when there are no encrypted keys\n+    bool keyFail = false;\n+    for (const auto& mi : m_map_crypted_keys) {\n+        const CPubKey& pubkey = mi.second.first;\n+        const std::vector<unsigned char>& crypted_secret = mi.second.second;\n+        CKey key;\n+        if (!DecryptKey(master_key, crypted_secret, pubkey, key)) {\n+            keyFail = true;\n+            break;\n+        }\n+        keyPass = true;\n+        if (m_decryption_thoroughly_checked)\n+            break;\n+    }\n+    if (keyPass && keyFail) {\n+        LogPrintf(\"The wallet is probably corrupted: Some keys decrypt but not all.\\n\");\n+        throw std::runtime_error(\"Error unlocking wallet: some keys decrypt but not all. Your wallet file may be corrupt.\");\n+    }\n+    if (keyFail || (!keyPass && !accept_no_keys)) {\n+        return false;\n+    }\n+    m_decryption_thoroughly_checked = true;\n+    return true;\n+}\n+\n+bool KeyManager::Encrypt(const CKeyingMaterial& master_key, WalletBatch* batch)\n+{\n+    LOCK(cs_keyman);\n+\n+    // Nothing to encrypt\n+    if (m_map_keys.empty()) {\n+        return true;\n+    }\n+\n+    if (!m_map_crypted_keys.empty()) {\n+        return false;\n+    }\n+\n+    for (const auto& [id, key] : m_map_keys)\n+    {\n+        CPubKey pubkey = key.GetPubKey();\n+        CKeyingMaterial secret(key.begin(), key.end());\n+        std::vector<unsigned char> crypted_secret;\n+        if (!EncryptSecret(master_key, secret, pubkey.GetHash(), crypted_secret)) {\n+            return false;\n+        }\n+        m_map_crypted_keys[id] = make_pair(pubkey, crypted_secret);\n+        batch->WriteCryptedKeyManKey(pubkey, crypted_secret);\n+    }\n+    m_map_keys.clear();\n+    return true;\n+}\n+\n+std::map<CKeyID, CKey> KeyManager::GetKeys() const\n+{\n+    AssertLockHeld(cs_keyman);\n+    if (m_storage.HasEncryptionKeys() && !m_storage.IsLocked()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751259808",
      "id" : 751259808,
      "line" : 245,
      "node_id" : "PRRC_kwDOABII584sx1Cg",
      "original_commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "original_line" : 245,
      "original_position" : 245,
      "original_start_line" : null,
      "path" : "src/wallet/keyman.cpp",
      "position" : 245,
      "pull_request_review_id" : 807320159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751259808/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-17T14:58:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751259808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751271168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751271168"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Clear `m_map_crypted_keys` first?",
      "commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "created_at" : "2021-11-17T14:04:32Z",
      "diff_hunk" : "@@ -0,0 +1,272 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <wallet/crypter.h>\n+#include <wallet/keyman.h>\n+#include <wallet/walletdb.h>\n+\n+void KeyManager::GenerateAndSetHDKey()\n+{\n+    LOCK(cs_keyman);\n+    CKey key;\n+    key.MakeNewKey(true);\n+    CPubKey seed_pub = key.GetPubKey();\n+    assert(key.VerifyPubKey(seed_pub));\n+\n+    CExtKey master_key;\n+    master_key.SetSeed(key);\n+    CExtPubKey master_xpub = master_key.Neuter();\n+\n+    WalletBatch batch(m_storage.GetDatabase());\n+    AddHDKey(batch, master_key, master_xpub);\n+    SetActiveHDKey(master_xpub);\n+}\n+\n+void KeyManager::LoadActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    m_active_xpub = extpub;\n+}\n+\n+void KeyManager::SetActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    LoadActiveHDKey(extpub);\n+    WalletBatch batch(m_storage.GetDatabase());\n+    batch.WriteActiveHDKey(extpub);\n+}\n+\n+std::optional<CExtKey> KeyManager::GetActiveHDKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+\n+    CKey key;\n+    if (m_storage.HasEncryptionKeys()) {\n+        if (m_storage.IsLocked()) {\n+            return std::nullopt;\n+        }\n+        const auto& it = m_map_crypted_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_crypted_keys.end());\n+        const auto& [pubkey, ckey] = it->second;\n+\n+        if (!DecryptKey(m_storage.GetEncryptionKey(), ckey, pubkey, key)) {\n+            return std::nullopt;\n+        }\n+    } else {\n+        const auto& it = m_map_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_keys.end());\n+        key = it->second;\n+    }\n+    assert(key.IsValid());\n+\n+    CExtKey master_key;\n+    master_key.nDepth = m_active_xpub.nDepth;\n+    std::copy(m_active_xpub.vchFingerprint, m_active_xpub.vchFingerprint + sizeof(master_key.vchFingerprint), master_key.vchFingerprint);\n+    master_key.nChild = m_active_xpub.nChild;\n+    master_key.chaincode = m_active_xpub.chaincode;\n+    master_key.key = key;\n+    return master_key;\n+}\n+\n+std::optional<CExtPubKey> KeyManager::GetActiveHDPubKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+    return m_active_xpub;\n+}\n+\n+bool KeyManager::AddKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+    assert(!m_storage.HasEncryptionKeys());\n+\n+    const CKeyID& id = pubkey.GetID();\n+    if (m_map_keys.find(id) != m_map_keys.end()) {\n+        return true;\n+    }\n+\n+    m_map_keys[id] = key;\n+    return batch.WriteKeyManKey(pubkey, key.GetPrivKey());\n+}\n+\n+std::vector<unsigned char> KeyManager::AddCryptedKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+\n+    assert(m_storage.HasEncryptionKeys());\n+    if (m_storage.IsLocked()) {\n+        return {};\n+    }\n+\n+    const CKeyID& id = pubkey.GetID();\n+    const auto& it = m_map_crypted_keys.find(id);\n+    if (it != m_map_crypted_keys.end()) {\n+        return it->second.second;\n+    }\n+\n+    std::vector<unsigned char> crypted_secret;\n+    CKeyingMaterial secret(key.begin(), key.end());\n+    if (!EncryptSecret(m_storage.GetEncryptionKey(), secret, pubkey.GetHash(), crypted_secret)) {\n+        return {};\n+    }\n+\n+    m_map_crypted_keys[id] = make_pair(pubkey, crypted_secret);\n+\n+    if (!batch.WriteCryptedKeyManKey(pubkey, crypted_secret)) {\n+        return {};\n+    }\n+\n+    return crypted_secret;\n+}\n+\n+bool KeyManager::AddDescriptorKey(WalletBatch& batch, const uint256& desc_id, const CKey& key, const CPubKey& pubkey)\n+{\n+    LOCK(cs_keyman);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, key, pubkey);\n+        if (ckey.empty()) {\n+            return false;\n+        }\n+        return batch.WriteCryptedDescriptorKey(desc_id, pubkey, ckey);\n+    } else {\n+        return AddKeyInner(batch, key, pubkey) && batch.WriteDescriptorKey(desc_id, pubkey, key.GetPrivKey());\n+    }\n+}\n+\n+bool KeyManager::AddHDKey(WalletBatch& batch, const CExtKey& extkey, const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    const CKeyID& id = extpub.pubkey.GetID();\n+    m_map_xpubs[id] = extpub;\n+    batch.WriteHDPubKey(extpub);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, extkey.key, extpub.pubkey);\n+        return !ckey.empty();\n+    } else {\n+        return AddKeyInner(batch, extkey.key, extpub.pubkey);\n+    }\n+}\n+\n+void KeyManager::LoadKey(const CKeyID& key_id, const CKey& key)\n+{\n+    LOCK(cs_keyman);\n+    m_map_keys[key_id] = key;\n+}\n+\n+bool KeyManager::LoadCryptedKey(const CKeyID& key_id, const CPubKey& pubkey, const std::vector<unsigned char>& ckey)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    m_map_crypted_keys[key_id] = make_pair(pubkey, ckey);\n+    return true;\n+}\n+\n+void KeyManager::LoadHDKey(const CKeyID& key_id, const CExtPubKey& xpub)\n+{\n+    LOCK(cs_keyman);\n+    m_map_xpubs[key_id] = xpub;\n+}\n+\n+bool KeyManager::CheckDecryptionKey(const CKeyingMaterial& master_key, bool accept_no_keys)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    bool keyPass = m_map_crypted_keys.empty(); // Always pass when there are no encrypted keys\n+    bool keyFail = false;\n+    for (const auto& mi : m_map_crypted_keys) {\n+        const CPubKey& pubkey = mi.second.first;\n+        const std::vector<unsigned char>& crypted_secret = mi.second.second;\n+        CKey key;\n+        if (!DecryptKey(master_key, crypted_secret, pubkey, key)) {\n+            keyFail = true;\n+            break;\n+        }\n+        keyPass = true;\n+        if (m_decryption_thoroughly_checked)\n+            break;\n+    }\n+    if (keyPass && keyFail) {\n+        LogPrintf(\"The wallet is probably corrupted: Some keys decrypt but not all.\\n\");\n+        throw std::runtime_error(\"Error unlocking wallet: some keys decrypt but not all. Your wallet file may be corrupt.\");\n+    }\n+    if (keyFail || (!keyPass && !accept_no_keys)) {\n+        return false;\n+    }\n+    m_decryption_thoroughly_checked = true;\n+    return true;\n+}\n+\n+bool KeyManager::Encrypt(const CKeyingMaterial& master_key, WalletBatch* batch)\n+{\n+    LOCK(cs_keyman);\n+\n+    // Nothing to encrypt\n+    if (m_map_keys.empty()) {\n+        return true;\n+    }\n+\n+    if (!m_map_crypted_keys.empty()) {\n+        return false;\n+    }\n+\n+    for (const auto& [id, key] : m_map_keys)\n+    {\n+        CPubKey pubkey = key.GetPubKey();\n+        CKeyingMaterial secret(key.begin(), key.end());\n+        std::vector<unsigned char> crypted_secret;\n+        if (!EncryptSecret(master_key, secret, pubkey.GetHash(), crypted_secret)) {\n+            return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751271168",
      "id" : 751271168,
      "line" : 233,
      "node_id" : "PRRC_kwDOABII584sx30A",
      "original_commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "original_line" : 233,
      "original_position" : 233,
      "original_start_line" : null,
      "path" : "src/wallet/keyman.cpp",
      "position" : 233,
      "pull_request_review_id" : 807320159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751271168/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-17T14:58:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751271168",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751276375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751276375"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: move `break` inline or add brackets.",
      "commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "created_at" : "2021-11-17T14:09:21Z",
      "diff_hunk" : "@@ -0,0 +1,272 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <wallet/crypter.h>\n+#include <wallet/keyman.h>\n+#include <wallet/walletdb.h>\n+\n+void KeyManager::GenerateAndSetHDKey()\n+{\n+    LOCK(cs_keyman);\n+    CKey key;\n+    key.MakeNewKey(true);\n+    CPubKey seed_pub = key.GetPubKey();\n+    assert(key.VerifyPubKey(seed_pub));\n+\n+    CExtKey master_key;\n+    master_key.SetSeed(key);\n+    CExtPubKey master_xpub = master_key.Neuter();\n+\n+    WalletBatch batch(m_storage.GetDatabase());\n+    AddHDKey(batch, master_key, master_xpub);\n+    SetActiveHDKey(master_xpub);\n+}\n+\n+void KeyManager::LoadActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    m_active_xpub = extpub;\n+}\n+\n+void KeyManager::SetActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    LoadActiveHDKey(extpub);\n+    WalletBatch batch(m_storage.GetDatabase());\n+    batch.WriteActiveHDKey(extpub);\n+}\n+\n+std::optional<CExtKey> KeyManager::GetActiveHDKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+\n+    CKey key;\n+    if (m_storage.HasEncryptionKeys()) {\n+        if (m_storage.IsLocked()) {\n+            return std::nullopt;\n+        }\n+        const auto& it = m_map_crypted_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_crypted_keys.end());\n+        const auto& [pubkey, ckey] = it->second;\n+\n+        if (!DecryptKey(m_storage.GetEncryptionKey(), ckey, pubkey, key)) {\n+            return std::nullopt;\n+        }\n+    } else {\n+        const auto& it = m_map_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_keys.end());\n+        key = it->second;\n+    }\n+    assert(key.IsValid());\n+\n+    CExtKey master_key;\n+    master_key.nDepth = m_active_xpub.nDepth;\n+    std::copy(m_active_xpub.vchFingerprint, m_active_xpub.vchFingerprint + sizeof(master_key.vchFingerprint), master_key.vchFingerprint);\n+    master_key.nChild = m_active_xpub.nChild;\n+    master_key.chaincode = m_active_xpub.chaincode;\n+    master_key.key = key;\n+    return master_key;\n+}\n+\n+std::optional<CExtPubKey> KeyManager::GetActiveHDPubKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+    return m_active_xpub;\n+}\n+\n+bool KeyManager::AddKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+    assert(!m_storage.HasEncryptionKeys());\n+\n+    const CKeyID& id = pubkey.GetID();\n+    if (m_map_keys.find(id) != m_map_keys.end()) {\n+        return true;\n+    }\n+\n+    m_map_keys[id] = key;\n+    return batch.WriteKeyManKey(pubkey, key.GetPrivKey());\n+}\n+\n+std::vector<unsigned char> KeyManager::AddCryptedKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+\n+    assert(m_storage.HasEncryptionKeys());\n+    if (m_storage.IsLocked()) {\n+        return {};\n+    }\n+\n+    const CKeyID& id = pubkey.GetID();\n+    const auto& it = m_map_crypted_keys.find(id);\n+    if (it != m_map_crypted_keys.end()) {\n+        return it->second.second;\n+    }\n+\n+    std::vector<unsigned char> crypted_secret;\n+    CKeyingMaterial secret(key.begin(), key.end());\n+    if (!EncryptSecret(m_storage.GetEncryptionKey(), secret, pubkey.GetHash(), crypted_secret)) {\n+        return {};\n+    }\n+\n+    m_map_crypted_keys[id] = make_pair(pubkey, crypted_secret);\n+\n+    if (!batch.WriteCryptedKeyManKey(pubkey, crypted_secret)) {\n+        return {};\n+    }\n+\n+    return crypted_secret;\n+}\n+\n+bool KeyManager::AddDescriptorKey(WalletBatch& batch, const uint256& desc_id, const CKey& key, const CPubKey& pubkey)\n+{\n+    LOCK(cs_keyman);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, key, pubkey);\n+        if (ckey.empty()) {\n+            return false;\n+        }\n+        return batch.WriteCryptedDescriptorKey(desc_id, pubkey, ckey);\n+    } else {\n+        return AddKeyInner(batch, key, pubkey) && batch.WriteDescriptorKey(desc_id, pubkey, key.GetPrivKey());\n+    }\n+}\n+\n+bool KeyManager::AddHDKey(WalletBatch& batch, const CExtKey& extkey, const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    const CKeyID& id = extpub.pubkey.GetID();\n+    m_map_xpubs[id] = extpub;\n+    batch.WriteHDPubKey(extpub);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, extkey.key, extpub.pubkey);\n+        return !ckey.empty();\n+    } else {\n+        return AddKeyInner(batch, extkey.key, extpub.pubkey);\n+    }\n+}\n+\n+void KeyManager::LoadKey(const CKeyID& key_id, const CKey& key)\n+{\n+    LOCK(cs_keyman);\n+    m_map_keys[key_id] = key;\n+}\n+\n+bool KeyManager::LoadCryptedKey(const CKeyID& key_id, const CPubKey& pubkey, const std::vector<unsigned char>& ckey)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    m_map_crypted_keys[key_id] = make_pair(pubkey, ckey);\n+    return true;\n+}\n+\n+void KeyManager::LoadHDKey(const CKeyID& key_id, const CExtPubKey& xpub)\n+{\n+    LOCK(cs_keyman);\n+    m_map_xpubs[key_id] = xpub;\n+}\n+\n+bool KeyManager::CheckDecryptionKey(const CKeyingMaterial& master_key, bool accept_no_keys)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    bool keyPass = m_map_crypted_keys.empty(); // Always pass when there are no encrypted keys\n+    bool keyFail = false;\n+    for (const auto& mi : m_map_crypted_keys) {\n+        const CPubKey& pubkey = mi.second.first;\n+        const std::vector<unsigned char>& crypted_secret = mi.second.second;\n+        CKey key;\n+        if (!DecryptKey(master_key, crypted_secret, pubkey, key)) {\n+            keyFail = true;\n+            break;\n+        }\n+        keyPass = true;\n+        if (m_decryption_thoroughly_checked)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751276375",
      "id" : 751276375,
      "line" : 200,
      "node_id" : "PRRC_kwDOABII584sx5FX",
      "original_commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "original_line" : 200,
      "original_position" : 200,
      "original_start_line" : null,
      "path" : "src/wallet/keyman.cpp",
      "position" : 200,
      "pull_request_review_id" : 807320159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751276375/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-17T14:58:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751276375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751578343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751578343"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's fine to not do this. The caller will `assert(false)` in that case anyways.",
      "commit_id" : "ae04507cb4964d254d2af0f4cb37ee3a44c425db",
      "created_at" : "2021-11-17T19:40:12Z",
      "diff_hunk" : "@@ -0,0 +1,272 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <wallet/crypter.h>\n+#include <wallet/keyman.h>\n+#include <wallet/walletdb.h>\n+\n+void KeyManager::GenerateAndSetHDKey()\n+{\n+    LOCK(cs_keyman);\n+    CKey key;\n+    key.MakeNewKey(true);\n+    CPubKey seed_pub = key.GetPubKey();\n+    assert(key.VerifyPubKey(seed_pub));\n+\n+    CExtKey master_key;\n+    master_key.SetSeed(key);\n+    CExtPubKey master_xpub = master_key.Neuter();\n+\n+    WalletBatch batch(m_storage.GetDatabase());\n+    AddHDKey(batch, master_key, master_xpub);\n+    SetActiveHDKey(master_xpub);\n+}\n+\n+void KeyManager::LoadActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    m_active_xpub = extpub;\n+}\n+\n+void KeyManager::SetActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    LoadActiveHDKey(extpub);\n+    WalletBatch batch(m_storage.GetDatabase());\n+    batch.WriteActiveHDKey(extpub);\n+}\n+\n+std::optional<CExtKey> KeyManager::GetActiveHDKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+\n+    CKey key;\n+    if (m_storage.HasEncryptionKeys()) {\n+        if (m_storage.IsLocked()) {\n+            return std::nullopt;\n+        }\n+        const auto& it = m_map_crypted_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_crypted_keys.end());\n+        const auto& [pubkey, ckey] = it->second;\n+\n+        if (!DecryptKey(m_storage.GetEncryptionKey(), ckey, pubkey, key)) {\n+            return std::nullopt;\n+        }\n+    } else {\n+        const auto& it = m_map_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_keys.end());\n+        key = it->second;\n+    }\n+    assert(key.IsValid());\n+\n+    CExtKey master_key;\n+    master_key.nDepth = m_active_xpub.nDepth;\n+    std::copy(m_active_xpub.vchFingerprint, m_active_xpub.vchFingerprint + sizeof(master_key.vchFingerprint), master_key.vchFingerprint);\n+    master_key.nChild = m_active_xpub.nChild;\n+    master_key.chaincode = m_active_xpub.chaincode;\n+    master_key.key = key;\n+    return master_key;\n+}\n+\n+std::optional<CExtPubKey> KeyManager::GetActiveHDPubKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+    return m_active_xpub;\n+}\n+\n+bool KeyManager::AddKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+    assert(!m_storage.HasEncryptionKeys());\n+\n+    const CKeyID& id = pubkey.GetID();\n+    if (m_map_keys.find(id) != m_map_keys.end()) {\n+        return true;\n+    }\n+\n+    m_map_keys[id] = key;\n+    return batch.WriteKeyManKey(pubkey, key.GetPrivKey());\n+}\n+\n+std::vector<unsigned char> KeyManager::AddCryptedKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+\n+    assert(m_storage.HasEncryptionKeys());\n+    if (m_storage.IsLocked()) {\n+        return {};\n+    }\n+\n+    const CKeyID& id = pubkey.GetID();\n+    const auto& it = m_map_crypted_keys.find(id);\n+    if (it != m_map_crypted_keys.end()) {\n+        return it->second.second;\n+    }\n+\n+    std::vector<unsigned char> crypted_secret;\n+    CKeyingMaterial secret(key.begin(), key.end());\n+    if (!EncryptSecret(m_storage.GetEncryptionKey(), secret, pubkey.GetHash(), crypted_secret)) {\n+        return {};\n+    }\n+\n+    m_map_crypted_keys[id] = make_pair(pubkey, crypted_secret);\n+\n+    if (!batch.WriteCryptedKeyManKey(pubkey, crypted_secret)) {\n+        return {};\n+    }\n+\n+    return crypted_secret;\n+}\n+\n+bool KeyManager::AddDescriptorKey(WalletBatch& batch, const uint256& desc_id, const CKey& key, const CPubKey& pubkey)\n+{\n+    LOCK(cs_keyman);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, key, pubkey);\n+        if (ckey.empty()) {\n+            return false;\n+        }\n+        return batch.WriteCryptedDescriptorKey(desc_id, pubkey, ckey);\n+    } else {\n+        return AddKeyInner(batch, key, pubkey) && batch.WriteDescriptorKey(desc_id, pubkey, key.GetPrivKey());\n+    }\n+}\n+\n+bool KeyManager::AddHDKey(WalletBatch& batch, const CExtKey& extkey, const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    const CKeyID& id = extpub.pubkey.GetID();\n+    m_map_xpubs[id] = extpub;\n+    batch.WriteHDPubKey(extpub);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, extkey.key, extpub.pubkey);\n+        return !ckey.empty();\n+    } else {\n+        return AddKeyInner(batch, extkey.key, extpub.pubkey);\n+    }\n+}\n+\n+void KeyManager::LoadKey(const CKeyID& key_id, const CKey& key)\n+{\n+    LOCK(cs_keyman);\n+    m_map_keys[key_id] = key;\n+}\n+\n+bool KeyManager::LoadCryptedKey(const CKeyID& key_id, const CPubKey& pubkey, const std::vector<unsigned char>& ckey)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    m_map_crypted_keys[key_id] = make_pair(pubkey, ckey);\n+    return true;\n+}\n+\n+void KeyManager::LoadHDKey(const CKeyID& key_id, const CExtPubKey& xpub)\n+{\n+    LOCK(cs_keyman);\n+    m_map_xpubs[key_id] = xpub;\n+}\n+\n+bool KeyManager::CheckDecryptionKey(const CKeyingMaterial& master_key, bool accept_no_keys)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    bool keyPass = m_map_crypted_keys.empty(); // Always pass when there are no encrypted keys\n+    bool keyFail = false;\n+    for (const auto& mi : m_map_crypted_keys) {\n+        const CPubKey& pubkey = mi.second.first;\n+        const std::vector<unsigned char>& crypted_secret = mi.second.second;\n+        CKey key;\n+        if (!DecryptKey(master_key, crypted_secret, pubkey, key)) {\n+            keyFail = true;\n+            break;\n+        }\n+        keyPass = true;\n+        if (m_decryption_thoroughly_checked)\n+            break;\n+    }\n+    if (keyPass && keyFail) {\n+        LogPrintf(\"The wallet is probably corrupted: Some keys decrypt but not all.\\n\");\n+        throw std::runtime_error(\"Error unlocking wallet: some keys decrypt but not all. Your wallet file may be corrupt.\");\n+    }\n+    if (keyFail || (!keyPass && !accept_no_keys)) {\n+        return false;\n+    }\n+    m_decryption_thoroughly_checked = true;\n+    return true;\n+}\n+\n+bool KeyManager::Encrypt(const CKeyingMaterial& master_key, WalletBatch* batch)\n+{\n+    LOCK(cs_keyman);\n+\n+    // Nothing to encrypt\n+    if (m_map_keys.empty()) {\n+        return true;\n+    }\n+\n+    if (!m_map_crypted_keys.empty()) {\n+        return false;\n+    }\n+\n+    for (const auto& [id, key] : m_map_keys)\n+    {\n+        CPubKey pubkey = key.GetPubKey();\n+        CKeyingMaterial secret(key.begin(), key.end());\n+        std::vector<unsigned char> crypted_secret;\n+        if (!EncryptSecret(master_key, secret, pubkey.GetHash(), crypted_secret)) {\n+            return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751578343",
      "id" : 751578343,
      "in_reply_to_id" : 751271168,
      "line" : 235,
      "node_id" : "PRRC_kwDOABII584szCzn",
      "original_commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "original_line" : 235,
      "original_position" : 233,
      "original_start_line" : null,
      "path" : "src/wallet/keyman.cpp",
      "position" : 235,
      "pull_request_review_id" : 809058811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751578343/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-17T19:40:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751578343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751579190"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751579190"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "ae04507cb4964d254d2af0f4cb37ee3a44c425db",
      "created_at" : "2021-11-17T19:41:23Z",
      "diff_hunk" : "@@ -0,0 +1,65 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_KEYMAN_H\n+#define BITCOIN_WALLET_KEYMAN_H\n+\n+#include <sync.h>\n+#include <wallet/db.h>\n+#include <wallet/storage.h>\n+\n+#include <map>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+class CKey;\n+class CKeyID;\n+class CPubKey;\n+class WalletBatch;\n+\n+class KeyManager\n+{\n+private:\n+    WalletStorage& m_storage;\n+\n+    std::map<CKeyID, CKey> m_map_keys GUARDED_BY(cs_keyman);\n+    std::map<CKeyID, CExtPubKey> m_map_xpubs GUARDED_BY(cs_keyman);\n+    std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char>>> m_map_crypted_keys GUARDED_BY(cs_keyman);\n+\n+    bool m_decryption_thoroughly_checked = false;\n+\n+    CExtPubKey m_active_xpub GUARDED_BY(cs_keyman);\n+\n+    bool AddKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey) EXCLUSIVE_LOCKS_REQUIRED(cs_keyman);\n+    std::vector<unsigned char> AddCryptedKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey) EXCLUSIVE_LOCKS_REQUIRED(cs_keyman);\n+\n+public:\n+    mutable RecursiveMutex cs_keyman;\n+\n+    KeyManager(WalletStorage& storage) : m_storage(storage) {}\n+    KeyManager() = delete;\n+\n+    void GenerateAndSetHDKey();\n+    std::optional<CExtKey> GetActiveHDKey() const EXCLUSIVE_LOCKS_REQUIRED(cs_keyman);\n+    std::optional<CExtPubKey> GetActiveHDPubKey() const EXCLUSIVE_LOCKS_REQUIRED(cs_keyman);\n+    void SetActiveHDKey(const CExtPubKey& extpub);\n+    void LoadActiveHDKey(const CExtPubKey& extpub);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751579190",
      "id" : 751579190,
      "in_reply_to_id" : 750288077,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584szDA2",
      "original_commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "original_line" : 48,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/wallet/keyman.h",
      "position" : null,
      "pull_request_review_id" : 809059895,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751579190/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-17T19:41:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751579190",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751579327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751579327"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a comment.",
      "commit_id" : "ae04507cb4964d254d2af0f4cb37ee3a44c425db",
      "created_at" : "2021-11-17T19:41:34Z",
      "diff_hunk" : "@@ -0,0 +1,272 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <wallet/crypter.h>\n+#include <wallet/keyman.h>\n+#include <wallet/walletdb.h>\n+\n+void KeyManager::GenerateAndSetHDKey()\n+{\n+    LOCK(cs_keyman);\n+    CKey key;\n+    key.MakeNewKey(true);\n+    CPubKey seed_pub = key.GetPubKey();\n+    assert(key.VerifyPubKey(seed_pub));\n+\n+    CExtKey master_key;\n+    master_key.SetSeed(key);\n+    CExtPubKey master_xpub = master_key.Neuter();\n+\n+    WalletBatch batch(m_storage.GetDatabase());\n+    AddHDKey(batch, master_key, master_xpub);\n+    SetActiveHDKey(master_xpub);\n+}\n+\n+void KeyManager::LoadActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    m_active_xpub = extpub;\n+}\n+\n+void KeyManager::SetActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    LoadActiveHDKey(extpub);\n+    WalletBatch batch(m_storage.GetDatabase());\n+    batch.WriteActiveHDKey(extpub);\n+}\n+\n+std::optional<CExtKey> KeyManager::GetActiveHDKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+\n+    CKey key;\n+    if (m_storage.HasEncryptionKeys()) {\n+        if (m_storage.IsLocked()) {\n+            return std::nullopt;\n+        }\n+        const auto& it = m_map_crypted_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_crypted_keys.end());\n+        const auto& [pubkey, ckey] = it->second;\n+\n+        if (!DecryptKey(m_storage.GetEncryptionKey(), ckey, pubkey, key)) {\n+            return std::nullopt;\n+        }\n+    } else {\n+        const auto& it = m_map_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_keys.end());\n+        key = it->second;\n+    }\n+    assert(key.IsValid());\n+\n+    CExtKey master_key;\n+    master_key.nDepth = m_active_xpub.nDepth;\n+    std::copy(m_active_xpub.vchFingerprint, m_active_xpub.vchFingerprint + sizeof(master_key.vchFingerprint), master_key.vchFingerprint);\n+    master_key.nChild = m_active_xpub.nChild;\n+    master_key.chaincode = m_active_xpub.chaincode;\n+    master_key.key = key;\n+    return master_key;\n+}\n+\n+std::optional<CExtPubKey> KeyManager::GetActiveHDPubKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+    return m_active_xpub;\n+}\n+\n+bool KeyManager::AddKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+    assert(!m_storage.HasEncryptionKeys());\n+\n+    const CKeyID& id = pubkey.GetID();\n+    if (m_map_keys.find(id) != m_map_keys.end()) {\n+        return true;\n+    }\n+\n+    m_map_keys[id] = key;\n+    return batch.WriteKeyManKey(pubkey, key.GetPrivKey());\n+}\n+\n+std::vector<unsigned char> KeyManager::AddCryptedKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+\n+    assert(m_storage.HasEncryptionKeys());\n+    if (m_storage.IsLocked()) {\n+        return {};\n+    }\n+\n+    const CKeyID& id = pubkey.GetID();\n+    const auto& it = m_map_crypted_keys.find(id);\n+    if (it != m_map_crypted_keys.end()) {\n+        return it->second.second;\n+    }\n+\n+    std::vector<unsigned char> crypted_secret;\n+    CKeyingMaterial secret(key.begin(), key.end());\n+    if (!EncryptSecret(m_storage.GetEncryptionKey(), secret, pubkey.GetHash(), crypted_secret)) {\n+        return {};\n+    }\n+\n+    m_map_crypted_keys[id] = make_pair(pubkey, crypted_secret);\n+\n+    if (!batch.WriteCryptedKeyManKey(pubkey, crypted_secret)) {\n+        return {};\n+    }\n+\n+    return crypted_secret;\n+}\n+\n+bool KeyManager::AddDescriptorKey(WalletBatch& batch, const uint256& desc_id, const CKey& key, const CPubKey& pubkey)\n+{\n+    LOCK(cs_keyman);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, key, pubkey);\n+        if (ckey.empty()) {\n+            return false;\n+        }\n+        return batch.WriteCryptedDescriptorKey(desc_id, pubkey, ckey);\n+    } else {\n+        return AddKeyInner(batch, key, pubkey) && batch.WriteDescriptorKey(desc_id, pubkey, key.GetPrivKey());\n+    }\n+}\n+\n+bool KeyManager::AddHDKey(WalletBatch& batch, const CExtKey& extkey, const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    const CKeyID& id = extpub.pubkey.GetID();\n+    m_map_xpubs[id] = extpub;\n+    batch.WriteHDPubKey(extpub);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, extkey.key, extpub.pubkey);\n+        return !ckey.empty();\n+    } else {\n+        return AddKeyInner(batch, extkey.key, extpub.pubkey);\n+    }\n+}\n+\n+void KeyManager::LoadKey(const CKeyID& key_id, const CKey& key)\n+{\n+    LOCK(cs_keyman);\n+    m_map_keys[key_id] = key;\n+}\n+\n+bool KeyManager::LoadCryptedKey(const CKeyID& key_id, const CPubKey& pubkey, const std::vector<unsigned char>& ckey)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    m_map_crypted_keys[key_id] = make_pair(pubkey, ckey);\n+    return true;\n+}\n+\n+void KeyManager::LoadHDKey(const CKeyID& key_id, const CExtPubKey& xpub)\n+{\n+    LOCK(cs_keyman);\n+    m_map_xpubs[key_id] = xpub;\n+}\n+\n+bool KeyManager::CheckDecryptionKey(const CKeyingMaterial& master_key, bool accept_no_keys)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    bool keyPass = m_map_crypted_keys.empty(); // Always pass when there are no encrypted keys\n+    bool keyFail = false;\n+    for (const auto& mi : m_map_crypted_keys) {\n+        const CPubKey& pubkey = mi.second.first;\n+        const std::vector<unsigned char>& crypted_secret = mi.second.second;\n+        CKey key;\n+        if (!DecryptKey(master_key, crypted_secret, pubkey, key)) {\n+            keyFail = true;\n+            break;\n+        }\n+        keyPass = true;\n+        if (m_decryption_thoroughly_checked)\n+            break;\n+    }\n+    if (keyPass && keyFail) {\n+        LogPrintf(\"The wallet is probably corrupted: Some keys decrypt but not all.\\n\");\n+        throw std::runtime_error(\"Error unlocking wallet: some keys decrypt but not all. Your wallet file may be corrupt.\");\n+    }\n+    if (keyFail || (!keyPass && !accept_no_keys)) {\n+        return false;\n+    }\n+    m_decryption_thoroughly_checked = true;\n+    return true;\n+}\n+\n+bool KeyManager::Encrypt(const CKeyingMaterial& master_key, WalletBatch* batch)\n+{\n+    LOCK(cs_keyman);\n+\n+    // Nothing to encrypt\n+    if (m_map_keys.empty()) {\n+        return true;\n+    }\n+\n+    if (!m_map_crypted_keys.empty()) {\n+        return false;\n+    }\n+\n+    for (const auto& [id, key] : m_map_keys)\n+    {\n+        CPubKey pubkey = key.GetPubKey();\n+        CKeyingMaterial secret(key.begin(), key.end());\n+        std::vector<unsigned char> crypted_secret;\n+        if (!EncryptSecret(master_key, secret, pubkey.GetHash(), crypted_secret)) {\n+            return false;\n+        }\n+        m_map_crypted_keys[id] = make_pair(pubkey, crypted_secret);\n+        batch->WriteCryptedKeyManKey(pubkey, crypted_secret);\n+    }\n+    m_map_keys.clear();\n+    return true;\n+}\n+\n+std::map<CKeyID, CKey> KeyManager::GetKeys() const\n+{\n+    AssertLockHeld(cs_keyman);\n+    if (m_storage.HasEncryptionKeys() && !m_storage.IsLocked()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751579327",
      "id" : 751579327,
      "in_reply_to_id" : 751259808,
      "line" : 247,
      "node_id" : "PRRC_kwDOABII584szDC_",
      "original_commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "original_line" : 247,
      "original_position" : 245,
      "original_start_line" : null,
      "path" : "src/wallet/keyman.cpp",
      "position" : 247,
      "pull_request_review_id" : 809060089,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751579327/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-17T19:41:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751579327",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751579474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751579474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "ae04507cb4964d254d2af0f4cb37ee3a44c425db",
      "created_at" : "2021-11-17T19:41:46Z",
      "diff_hunk" : "@@ -0,0 +1,272 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <wallet/crypter.h>\n+#include <wallet/keyman.h>\n+#include <wallet/walletdb.h>\n+\n+void KeyManager::GenerateAndSetHDKey()\n+{\n+    LOCK(cs_keyman);\n+    CKey key;\n+    key.MakeNewKey(true);\n+    CPubKey seed_pub = key.GetPubKey();\n+    assert(key.VerifyPubKey(seed_pub));\n+\n+    CExtKey master_key;\n+    master_key.SetSeed(key);\n+    CExtPubKey master_xpub = master_key.Neuter();\n+\n+    WalletBatch batch(m_storage.GetDatabase());\n+    AddHDKey(batch, master_key, master_xpub);\n+    SetActiveHDKey(master_xpub);\n+}\n+\n+void KeyManager::LoadActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    m_active_xpub = extpub;\n+}\n+\n+void KeyManager::SetActiveHDKey(const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    LoadActiveHDKey(extpub);\n+    WalletBatch batch(m_storage.GetDatabase());\n+    batch.WriteActiveHDKey(extpub);\n+}\n+\n+std::optional<CExtKey> KeyManager::GetActiveHDKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+\n+    CKey key;\n+    if (m_storage.HasEncryptionKeys()) {\n+        if (m_storage.IsLocked()) {\n+            return std::nullopt;\n+        }\n+        const auto& it = m_map_crypted_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_crypted_keys.end());\n+        const auto& [pubkey, ckey] = it->second;\n+\n+        if (!DecryptKey(m_storage.GetEncryptionKey(), ckey, pubkey, key)) {\n+            return std::nullopt;\n+        }\n+    } else {\n+        const auto& it = m_map_keys.find(m_active_xpub.pubkey.GetID());\n+        assert(it != m_map_keys.end());\n+        key = it->second;\n+    }\n+    assert(key.IsValid());\n+\n+    CExtKey master_key;\n+    master_key.nDepth = m_active_xpub.nDepth;\n+    std::copy(m_active_xpub.vchFingerprint, m_active_xpub.vchFingerprint + sizeof(master_key.vchFingerprint), master_key.vchFingerprint);\n+    master_key.nChild = m_active_xpub.nChild;\n+    master_key.chaincode = m_active_xpub.chaincode;\n+    master_key.key = key;\n+    return master_key;\n+}\n+\n+std::optional<CExtPubKey> KeyManager::GetActiveHDPubKey() const\n+{\n+    if (!m_active_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+    return m_active_xpub;\n+}\n+\n+bool KeyManager::AddKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+    assert(!m_storage.HasEncryptionKeys());\n+\n+    const CKeyID& id = pubkey.GetID();\n+    if (m_map_keys.find(id) != m_map_keys.end()) {\n+        return true;\n+    }\n+\n+    m_map_keys[id] = key;\n+    return batch.WriteKeyManKey(pubkey, key.GetPrivKey());\n+}\n+\n+std::vector<unsigned char> KeyManager::AddCryptedKeyInner(WalletBatch& batch, const CKey& key, const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_keyman);\n+\n+    assert(m_storage.HasEncryptionKeys());\n+    if (m_storage.IsLocked()) {\n+        return {};\n+    }\n+\n+    const CKeyID& id = pubkey.GetID();\n+    const auto& it = m_map_crypted_keys.find(id);\n+    if (it != m_map_crypted_keys.end()) {\n+        return it->second.second;\n+    }\n+\n+    std::vector<unsigned char> crypted_secret;\n+    CKeyingMaterial secret(key.begin(), key.end());\n+    if (!EncryptSecret(m_storage.GetEncryptionKey(), secret, pubkey.GetHash(), crypted_secret)) {\n+        return {};\n+    }\n+\n+    m_map_crypted_keys[id] = make_pair(pubkey, crypted_secret);\n+\n+    if (!batch.WriteCryptedKeyManKey(pubkey, crypted_secret)) {\n+        return {};\n+    }\n+\n+    return crypted_secret;\n+}\n+\n+bool KeyManager::AddDescriptorKey(WalletBatch& batch, const uint256& desc_id, const CKey& key, const CPubKey& pubkey)\n+{\n+    LOCK(cs_keyman);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, key, pubkey);\n+        if (ckey.empty()) {\n+            return false;\n+        }\n+        return batch.WriteCryptedDescriptorKey(desc_id, pubkey, ckey);\n+    } else {\n+        return AddKeyInner(batch, key, pubkey) && batch.WriteDescriptorKey(desc_id, pubkey, key.GetPrivKey());\n+    }\n+}\n+\n+bool KeyManager::AddHDKey(WalletBatch& batch, const CExtKey& extkey, const CExtPubKey& extpub)\n+{\n+    LOCK(cs_keyman);\n+    const CKeyID& id = extpub.pubkey.GetID();\n+    m_map_xpubs[id] = extpub;\n+    batch.WriteHDPubKey(extpub);\n+\n+    if (m_storage.HasEncryptionKeys()) {\n+        std::vector<unsigned char> ckey = AddCryptedKeyInner(batch, extkey.key, extpub.pubkey);\n+        return !ckey.empty();\n+    } else {\n+        return AddKeyInner(batch, extkey.key, extpub.pubkey);\n+    }\n+}\n+\n+void KeyManager::LoadKey(const CKeyID& key_id, const CKey& key)\n+{\n+    LOCK(cs_keyman);\n+    m_map_keys[key_id] = key;\n+}\n+\n+bool KeyManager::LoadCryptedKey(const CKeyID& key_id, const CPubKey& pubkey, const std::vector<unsigned char>& ckey)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    m_map_crypted_keys[key_id] = make_pair(pubkey, ckey);\n+    return true;\n+}\n+\n+void KeyManager::LoadHDKey(const CKeyID& key_id, const CExtPubKey& xpub)\n+{\n+    LOCK(cs_keyman);\n+    m_map_xpubs[key_id] = xpub;\n+}\n+\n+bool KeyManager::CheckDecryptionKey(const CKeyingMaterial& master_key, bool accept_no_keys)\n+{\n+    LOCK(cs_keyman);\n+    if (!m_map_keys.empty()) {\n+        return false;\n+    }\n+\n+    bool keyPass = m_map_crypted_keys.empty(); // Always pass when there are no encrypted keys\n+    bool keyFail = false;\n+    for (const auto& mi : m_map_crypted_keys) {\n+        const CPubKey& pubkey = mi.second.first;\n+        const std::vector<unsigned char>& crypted_secret = mi.second.second;\n+        CKey key;\n+        if (!DecryptKey(master_key, crypted_secret, pubkey, key)) {\n+            keyFail = true;\n+            break;\n+        }\n+        keyPass = true;\n+        if (m_decryption_thoroughly_checked)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#discussion_r751579474",
      "id" : 751579474,
      "in_reply_to_id" : 751276375,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584szDFS",
      "original_commit_id" : "709a917c26bf048de454760c7189278b965ca7f3",
      "original_line" : 200,
      "original_position" : 200,
      "original_start_line" : null,
      "path" : "src/wallet/keyman.cpp",
      "position" : null,
      "pull_request_review_id" : 809060281,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751579474/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-17T19:41:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751579474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Looks like you got rid of `AddDescriptorKeyWithDB`, but it's still defined in header\r\n\r\nFixed\r\n\r\n> Also the original function contained an assert for not having `WALLET_FLAG_DISABLE_PRIVATE_KEYS` and it would check if the key already existed (`AddKeyInner` does that now).\r\n\r\nAdded that back in.",
      "created_at" : "2021-11-17T19:42:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-971913592",
      "id" : 971913592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII58457jl4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/971913592/reactions"
      },
      "updated_at" : "2021-11-17T19:42:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/971913592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-11-22T11:04:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-975406275",
      "id" : 975406275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII5846I4TD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/975406275/reactions"
      },
      "updated_at" : "2021-11-22T11:04:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/975406275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-12-08T05:22:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-988509555",
      "id" : 988509555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII584663Vz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988509555/reactions"
      },
      "updated_at" : "2021-12-08T05:22:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988509555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~re-utACK b1d76a8d91a070668332f06608a20a9d937ba1a4~\r\n\r\n(the two spurious CI failures should go away after the next rebase)\r\n\r\n_Update: apparently one of them was hiding a non-spurious failure_",
      "created_at" : "2021-12-10T06:22:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-990651616",
      "id" : 990651616,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII5847DCTg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/990651616/reactions"
      },
      "updated_at" : "2021-12-13T12:03:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/990651616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "`/usr/include/c++/8/bits/stl_function.h:386:20: error: ambiguous overload for âoperator<â (operand types are âconst CExtPubKeyâ and âconst CExtPubKeyâ)`",
      "created_at" : "2021-12-13T08:35:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-992226996",
      "id" : 992226996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII5847JC60",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/992226996/reactions"
      },
      "updated_at" : "2021-12-13T08:35:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/992226996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK 49234d0dbc11f91e9ae657602c97b4a0dc0ec75e\r\n(just a rebase, but with 2edf8b89b4 dropped entirely)",
      "created_at" : "2021-12-30T08:35:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-1002925709",
      "id" : 1002925709,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII5847x26N",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1002925709/reactions"
      },
      "updated_at" : "2021-12-30T08:35:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1002925709",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-01-11T10:36:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-1009830791",
      "id" : 1009830791,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII5848MMuH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1009830791/reactions"
      },
      "updated_at" : "2022-01-11T10:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1009830791",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK 01a4860 (after #23497 namespace stuff)",
      "created_at" : "2022-01-12T15:56:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-1011190713",
      "id" : 1011190713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII5848RYu5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011190713/reactions"
      },
      "updated_at" : "2022-01-12T15:56:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011190713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK 3992d06c15af5242d955fd7f74e9e089bbb8a166",
      "created_at" : "2022-04-29T12:35:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-1113262519",
      "id" : 1113262519,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII585CWwm3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113262519/reactions"
      },
      "updated_at" : "2022-04-29T12:35:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113262519",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-08-05T20:14:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-1206820708",
      "id" : 1206820708,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII585H7p9k",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206820708/reactions"
      },
      "updated_at" : "2022-08-05T20:14:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206820708",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "CI is not happy :-(",
      "created_at" : "2022-08-06T09:34:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-1207183062",
      "id" : 1207183062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII585H9CbW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207183062/reactions"
      },
      "updated_at" : "2022-08-06T09:34:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207183062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK  8133ce4da3fbbcbecab4346cbe3cc825f4467ce7",
      "created_at" : "2022-08-10T08:51:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23417#issuecomment-1210364525",
      "id" : 1210364525,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
      "node_id" : "IC_kwDOABII585IJLJt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210364525/reactions"
      },
      "updated_at" : "2022-08-10T08:51:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210364525",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
