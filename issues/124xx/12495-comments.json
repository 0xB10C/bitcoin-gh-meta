[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r169968749"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169968749"
         }
      },
      "author_association" : "OWNER",
      "body" : "Add `static`?",
      "commit_id" : "a6f5abf623ce53fdf57d0030d8ad5ad6b35e4b03",
      "created_at" : "2018-02-22T14:22:39Z",
      "diff_hunk" : "@@ -71,14 +71,41 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n     }\n };\n \n+constexpr int PermissibleMaxOpenFiles() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r169968749",
      "id" : 169968749,
      "original_commit_id" : "c1b39470cdba75f3359b12e5a47eb5af0de07615",
      "original_position" : 4,
      "path" : "src/dbwrapper.cpp",
      "position" : null,
      "pull_request_review_id" : 98580714,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495",
      "updated_at" : "2018-03-03T20:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169968749",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r169970767"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169970767"
         }
      },
      "author_association" : "OWNER",
      "body" : "I don't think this does what you expect it to. As I understand it, confirmed by the [gcc page](https://www.gnu.org/software/libc/manual/html_node/Feature-Test-Macros.html) about it, `_POSIX_C_SOURCE` is supposed to be defined explicitly at the top of the compilation unit to request certain POSIX C library features. It is not defined by the compiler. So it can't be used to detect whether the platform compiled to is POSIX.\r\n\r\nIn other place, we've just used `#if[n]def WIN32` as WIN32 is the only non-POSIX platform supported in this project.",
      "commit_id" : "a6f5abf623ce53fdf57d0030d8ad5ad6b35e4b03",
      "created_at" : "2018-02-22T14:27:17Z",
      "diff_hunk" : "@@ -71,14 +71,41 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n     }\n };\n \n+constexpr int PermissibleMaxOpenFiles() {\n+#ifdef _POSIX_C_SOURCE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r169970767",
      "id" : 169970767,
      "original_commit_id" : "c1b39470cdba75f3359b12e5a47eb5af0de07615",
      "original_position" : 5,
      "path" : "src/dbwrapper.cpp",
      "position" : null,
      "pull_request_review_id" : 98580714,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495",
      "updated_at" : "2018-03-03T20:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169970767",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I measured the impact of this change, you can see a graph here: https://monad.io/max_open_files.png\r\n\r\nMethod for creating this graph:\r\n * Ran `bitcoind -reindex-chainstate` on a full node that had already been synced on mainnet\r\n * Instance is a GCP n1-standard-1 host which has one vCPU pinned to host CPU, 4 GB of RAM, and very slow virtualized disks",
      "created_at" : "2018-02-22T14:41:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-367701278",
      "id" : 367701278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-02-22T14:41:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/367701278",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> I measured the impact of this change, you can see a graph here: https://monad.io/max_open_files.png\r\n\r\nNice!",
      "created_at" : "2018-02-22T14:51:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-367704702",
      "id" : 367704702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-02-22T14:51:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/367704702",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r170069914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/170069914"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You're absolutely right, I will fix this.",
      "commit_id" : "a6f5abf623ce53fdf57d0030d8ad5ad6b35e4b03",
      "created_at" : "2018-02-22T19:37:16Z",
      "diff_hunk" : "@@ -71,14 +71,41 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n     }\n };\n \n+constexpr int PermissibleMaxOpenFiles() {\n+#ifdef _POSIX_C_SOURCE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r170069914",
      "id" : 170069914,
      "in_reply_to_id" : 169970767,
      "original_commit_id" : "c1b39470cdba75f3359b12e5a47eb5af0de07615",
      "original_position" : 5,
      "path" : "src/dbwrapper.cpp",
      "position" : null,
      "pull_request_review_id" : 98699976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495",
      "updated_at" : "2018-03-03T20:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/170069914",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r170083156"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/170083156"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The `static` specifier isn't necessary because `constexpr` functions are evaluated at compile time. I double checked that `nm ./src/bitcoind | c++filt | grep Permissible` produces no output.",
      "commit_id" : "a6f5abf623ce53fdf57d0030d8ad5ad6b35e4b03",
      "created_at" : "2018-02-22T20:26:59Z",
      "diff_hunk" : "@@ -71,14 +71,41 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n     }\n };\n \n+constexpr int PermissibleMaxOpenFiles() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r170083156",
      "id" : 170083156,
      "in_reply_to_id" : 169968749,
      "original_commit_id" : "c1b39470cdba75f3359b12e5a47eb5af0de07615",
      "original_position" : 4,
      "path" : "src/dbwrapper.cpp",
      "position" : null,
      "pull_request_review_id" : 98715776,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495",
      "updated_at" : "2018-03-03T20:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/170083156",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The reason for this speedup isn't super obvious, and I think merits some explanation. I've spent a lot of time the last three days reading the LevelDB source code and think I understand now. It actually has nothing to do with reducing the number of open/close/mmap/munmap syscalls, as I had originally thought.\r\n\r\nThe LevelDB terminology for a `.ldb` file is a \"table\", and the tables are composed of 4 KB blocks. Each table contains a block index, which is an index that can be used to determine which block a given key will be in. The block index for a given table file is loaded into memory when that table is opened.\r\n\r\nIncreasing the `max_open_files` here forces Bitcoin to keep much more of the block index data actually loaded into memory. I think it might be worth actually increasing the internal limits of LevelDB on the number of mmap files beyond 1000 on 64-bit Unix platforms, as that would result in the entire block index being loaded into memory. However I think we should start with this, and then consider increasing the limits once I've done more investigation into what the overhead is.",
      "created_at" : "2018-02-22T20:40:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-367815005",
      "id" : 367815005,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-02-22T20:40:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/367815005",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@eklitzke Cheers for referencing #12123 . Replying here to get subscribed.\r\n\r\nI am going to do more tests on a Windows machine at the weekend with your changes here and report back my results.\r\n\r\nI am pretty familiar with Windows internals so I'll do further investigations to see if we can have similar changes on Windows.",
      "created_at" : "2018-02-22T22:00:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-367837075",
      "id" : 367837075,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-02-22T22:00:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/367837075",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6394033?v=4",
         "events_url" : "https://api.github.com/users/donaloconnor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/donaloconnor/followers",
         "following_url" : "https://api.github.com/users/donaloconnor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/donaloconnor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/donaloconnor",
         "id" : 6394033,
         "login" : "donaloconnor",
         "organizations_url" : "https://api.github.com/users/donaloconnor/orgs",
         "received_events_url" : "https://api.github.com/users/donaloconnor/received_events",
         "repos_url" : "https://api.github.com/users/donaloconnor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/donaloconnor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/donaloconnor"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I had a closer look at Windows and the way we use the win32 apis in LevelDB.\r\n\r\nObservations:\r\n\r\n1. Win32RandomAccessFile does not use memory mapped files.\r\n2. The file opening and reading is done on the Win32 API level: CreateFile, ReadFile. There is no limit to the number of files that can be opened at this level (Use Window's HANDLES rather than FDs). Limits are at the C runtime library level but this is irrelevant.\r\n\r\nI am confident that this increase to 1000 files will not affect Windows. I have already tested this but will do more tests tomorrow.\r\n\r\nThe Win32RandomAccessFile is as basic as it gets. Further optimizations can be made in this by using Memory Mapped files (Similar to the POSIX versions). The random access nature of accesses should be a win for Memory Mapped files over regular file read operations due to the kernel level caching.\r\nI will modify this and see if any significant performance improvements are achieved. I reckon it will.\r\n\r\nAs I've mentioned in #12123, we achieve optimization at CPU level also by avoiding the CRC checksum check that's performed on each file open.\r\n\r\n@eklitzke I hope you don't mind me replying on here. I'll continue to do more tests on the Windows sides of things. Any improvement to the IBD is a big win!\r\n\r\nCheers,\r\nDonal",
      "created_at" : "2018-02-24T19:23:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-368252740",
      "id" : 368252740,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-02-24T19:23:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/368252740",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6394033?v=4",
         "events_url" : "https://api.github.com/users/donaloconnor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/donaloconnor/followers",
         "following_url" : "https://api.github.com/users/donaloconnor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/donaloconnor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/donaloconnor",
         "id" : 6394033,
         "login" : "donaloconnor",
         "organizations_url" : "https://api.github.com/users/donaloconnor/orgs",
         "received_events_url" : "https://api.github.com/users/donaloconnor/received_events",
         "repos_url" : "https://api.github.com/users/donaloconnor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/donaloconnor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/donaloconnor"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I have a branch that measures how much extra memory this uses. On my node, the average block index size is 19797 bytes for the chainstate database. The bloom filters (which are also loaded in memory) are 6 bytes or 7 bytes depending on the file. Thus a reasonable approximation is 20 KB of data per chainstate `.ldb` file. This means on master the indexes use about 1 MB of memory, and with this branch they'll use about 20 MB of memory. If we loaded *all* of the indexes into memory (not possible right now due to the hard-coded 1000 file limit, but possible if we patched leveldb) that would be about 33 MB of memory.",
      "created_at" : "2018-02-26T22:44:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-368678039",
      "id" : 368678039,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-02-26T22:47:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/368678039",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I ran bitcoind -reindex-chainstate on my Windows 10 PC with the full node synced.\r\n\r\nFirst I ran using the default: `max_open_files=64` (Blue series)\r\nNext I ran using `max_open_files=1000` (Red series).\r\n\r\nThe results show a substantial difference in sync time.\r\n\r\n![image](https://user-images.githubusercontent.com/6394033/36870837-37cffa7c-1d98-11e8-84fa-507a290a89bb.png)\r\n\r\nTime to reach 100% with `max_open_files=64` was: 12h 15m\r\nTime to reach 100% with `max_open_files=1000` was: 5h 40m\r\n\r\nThat's an over 50% reduction in the time to reindex. I didn't expect such an improvement.\r\n\r\n\r\n",
      "created_at" : "2018-03-01T21:38:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-369739699",
      "id" : 369739699,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-01T21:38:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369739699",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6394033?v=4",
         "events_url" : "https://api.github.com/users/donaloconnor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/donaloconnor/followers",
         "following_url" : "https://api.github.com/users/donaloconnor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/donaloconnor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/donaloconnor",
         "id" : 6394033,
         "login" : "donaloconnor",
         "organizations_url" : "https://api.github.com/users/donaloconnor/orgs",
         "received_events_url" : "https://api.github.com/users/donaloconnor/received_events",
         "repos_url" : "https://api.github.com/users/donaloconnor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/donaloconnor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/donaloconnor"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "That's a pretty big speedup! Does this only work on 64 bit systems? Would it be possible to do it for all systems?",
      "created_at" : "2018-03-01T22:10:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-369748527",
      "id" : 369748527,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-01T22:10:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369748527",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "At least for POSIX systems, the issue is that LevelDB won't use `mmap()` on 32-bit systems because the virtual memory space isn't large enough. The chainstate database is larger than 4 GB. On such hosts, each open file handle really does use up a file descriptor, which can obviously lead to problems in a `select(2)` loop if the fd count exceeds 1024. I haven't posted this data yet, but I also have data showing a large speedup on POSIX hosts that have intermediate disk characteristics to what I posted earlier. That said: I really cannot imagine many users are running Bitcoin on 32-bit hosts, and it's easy enough to have conditional logic in that case anyway.\r\n\r\nI've been working on other LevelDB improvements that will result in even more significant improvements than what I've posted here, but they're more invasive changes. So I'm interested in getting this change (or a variant of it) merged before I try to go deeper into the UTXO system.\r\n\r\n@donaloconnor Can you comment on whether `select()` loops have the same 1024 fd limit on Windows?",
      "created_at" : "2018-03-02T05:03:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-369821550",
      "id" : 369821550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-02T05:04:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369821550",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Windows by default has a limit of 64 descriptors in `select()`, but:\r\n\r\n1. This is a limit on the number of descriptors added to the fd_set, not a limit on total descriptors in the process.\r\n2. We override `FD_SETSIZE` to 1024 in compat.h.\r\n\r\n(POSIX is supposed to allow changing `FD_SETSIZE` too, but this is broken in some versions of glibc)",
      "created_at" : "2018-03-02T05:11:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-369822424",
      "id" : 369822424,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-02T05:11:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369822424",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Does this only work on 64 bit systems\r\n\r\nThe LevelDB's Win32 code does not use memory mapped files (Unlike the POSIX version) so this change should improve both 32/64bit versions of Windows. \r\n\r\n>@donaloconnor Can you comment on whether select() loops have the same 1024 fd limit on Windows?\r\n\r\nWhat @luke-jr said above ^. Again since the LevelDB code for Win32 is using the Win32 ReadFile/CreateFile APIs, it should not affect any POSIX functions/fd descriptors.\r\n\r\nI'm running with a limit of 64 open files again to see if I get similar results (12hour sync time). I'd be really happy if someone else can also test this on Windows. I am finding it hard to believe the 2x speed up but it does seem to be the case.\r\n",
      "created_at" : "2018-03-02T12:04:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-369903951",
      "id" : 369903951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-02T12:05:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369903951",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6394033?v=4",
         "events_url" : "https://api.github.com/users/donaloconnor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/donaloconnor/followers",
         "following_url" : "https://api.github.com/users/donaloconnor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/donaloconnor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/donaloconnor",
         "id" : 6394033,
         "login" : "donaloconnor",
         "organizations_url" : "https://api.github.com/users/donaloconnor/orgs",
         "received_events_url" : "https://api.github.com/users/donaloconnor/received_events",
         "repos_url" : "https://api.github.com/users/donaloconnor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/donaloconnor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/donaloconnor"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Interesting stats from observing Disk I/O reported by Task Manager:\r\n\r\n`max_open_files=64` - seems to hover around 2 - 6 MB/s with bursts of 40MB/s +\r\n`max_open_files=1000` - Seemed to be consistently above 60 MB/s when ever I looked at it\r\n\r\nThis backs up the theory that since the files remain open, the file cache on Windows remains warm.\r\n\r\n*Not scientific, just observations. Can do some real disk I/O profiling later.",
      "created_at" : "2018-03-02T12:18:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-369906511",
      "id" : 369906511,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-02T12:18:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369906511",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6394033?v=4",
         "events_url" : "https://api.github.com/users/donaloconnor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/donaloconnor/followers",
         "following_url" : "https://api.github.com/users/donaloconnor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/donaloconnor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/donaloconnor",
         "id" : 6394033,
         "login" : "donaloconnor",
         "organizations_url" : "https://api.github.com/users/donaloconnor/orgs",
         "received_events_url" : "https://api.github.com/users/donaloconnor/received_events",
         "repos_url" : "https://api.github.com/users/donaloconnor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/donaloconnor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/donaloconnor"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think it's related to the disk cache, it's due to the increased availability of the deserialized buffer indexes (and bloom filters) in memory. At least on Unix, files being open is unrelated to the availability of their contents in the page cache. In my measurements it takes four disk seeks just to open each .ldb file (which is related to parsing out the file header, bloom filter, and the block index), and the information is stored on disk in a compressed form that has to be deserialized. But once the file is open and in the table cache all that data is right there, ready to be accessed. I started writing up a blog post about this with details about how the table format works, how the LevelDB caches interact, and what's involved during key lookup. I'll try to finish that up in case people want to learn more about the details.\r\n\r\nI'll update this PR to also increase the limit on Windows. I am interested in hearing if people would like to see any other changes. For instance, in IRC Greg asked if there's a way to tell from the LevelDB API if there's a way to find out for a given platform if the implementation is going to use up real file descriptors or not. There isn't, but I could patch LevelDB to expose that if that's something reviewers want to see.\r\n\r\n",
      "created_at" : "2018-03-03T17:47:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-370166267",
      "id" : 370166267,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-03T17:47:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370166267",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, I'm also now inclined to believe that it's probably unrelated to disk cache. Actually I've seen higher utilization of CPU in the 1000 limit case (mine was about 60-80% CPU usage, where as with the 64 limit it was just 30% mostly.\r\n\r\nAnyway, I just finished the tests again a few minutes ago:\r\n\r\n`max_open_files=64`  -reindex-chainstate time: **13h 30m**\r\n`max_open_files=1000` -reindex-chainstate time: **6h 30m**\r\n\r\nAnother 2x improvement.\r\n\r\n> I started writing up a blog post about this with details about how the table format works, how the LevelDB caches interact, and what's involved during key lookup. I'll try to finish that up in case people want to learn more about the details.\r\n\r\nLooking forward to it Ã°ÂÂÂ ",
      "created_at" : "2018-03-03T18:07:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-370167628",
      "id" : 370167628,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-03T18:12:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370167628",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6394033?v=4",
         "events_url" : "https://api.github.com/users/donaloconnor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/donaloconnor/followers",
         "following_url" : "https://api.github.com/users/donaloconnor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/donaloconnor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/donaloconnor",
         "id" : 6394033,
         "login" : "donaloconnor",
         "organizations_url" : "https://api.github.com/users/donaloconnor/orgs",
         "received_events_url" : "https://api.github.com/users/donaloconnor/received_events",
         "repos_url" : "https://api.github.com/users/donaloconnor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/donaloconnor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/donaloconnor"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Can you let me know if the comment looks correct regarding Windows behavior?",
      "created_at" : "2018-03-03T18:27:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-370168999",
      "id" : 370168999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-03T18:27:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370168999",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r172025190"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172025190"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "max_open_files is not set explicitly before calling SetMaxOpenFiles. Probably should be set in SetMaxOpenFiles explicitly to 1000 before the #ifndef ",
      "commit_id" : "a6f5abf623ce53fdf57d0030d8ad5ad6b35e4b03",
      "created_at" : "2018-03-03T18:53:34Z",
      "diff_hunk" : "@@ -71,20 +71,40 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n     }\n };\n \n+static void SetMaxOpenFiles(leveldb::Options *options) {\n+    // On most platforms the default setting of max_open_files (which is 1000)\n+    // is optimal. On Windows using a large file count is OK because the handles\n+    // do not interfere with select() loops. On 64-bit Unix hosts this value is\n+    // also OK, because up to that amount LevelDB will use an mmap\n+    // implementation that does not use extra file descriptors (the fds are\n+    // closed after being mmaped).\n+    //\n+    // Increasing the value beyond the default is dangerous because LevelDB will\n+    // fall back to a non-mmap implementation when the file count is too large.\n+    // On 32-bit Unix host we should decrease the value because the handles use\n+    // up real fds, and we want to avoid fd exhaustion issues.\n+    //\n+    // See PR #12495 for further discussion.\n+#ifndef WIN32\n+    if (sizeof(void*) < 8)\n+        options->max_open_files = 64;\n+#endif\n+}\n+\n static leveldb::Options GetOptions(size_t nCacheSize)\n {\n     leveldb::Options options;\n     options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n     options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n     options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n     options.compression = leveldb::kNoCompression;\n-    options.max_open_files = 64;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r172025190",
      "id" : 172025190,
      "original_commit_id" : "08b132ce7a22d66452d2153375c962a87c50dd93",
      "original_position" : 31,
      "path" : "src/dbwrapper.cpp",
      "position" : 36,
      "pull_request_review_id" : 100983397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495",
      "updated_at" : "2018-03-03T20:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172025190",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6394033?v=4",
         "events_url" : "https://api.github.com/users/donaloconnor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/donaloconnor/followers",
         "following_url" : "https://api.github.com/users/donaloconnor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/donaloconnor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/donaloconnor",
         "id" : 6394033,
         "login" : "donaloconnor",
         "organizations_url" : "https://api.github.com/users/donaloconnor/orgs",
         "received_events_url" : "https://api.github.com/users/donaloconnor/received_events",
         "repos_url" : "https://api.github.com/users/donaloconnor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/donaloconnor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/donaloconnor"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r172025197"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172025197"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Prefer, to be safe:\r\n\r\n```C++\r\nif (sizeof(void*) < 8 || leveldb::kMajorVersion != 1 || leveldb::kMinorVersion < 3 || leveldb::kMinorVersion > 20) {\r\n    options->max_open_files = 64;\r\n}\r\n```",
      "commit_id" : "a6f5abf623ce53fdf57d0030d8ad5ad6b35e4b03",
      "created_at" : "2018-03-03T18:53:50Z",
      "diff_hunk" : "@@ -71,20 +71,40 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n     }\n };\n \n+static void SetMaxOpenFiles(leveldb::Options *options) {\n+    // On most platforms the default setting of max_open_files (which is 1000)\n+    // is optimal. On Windows using a large file count is OK because the handles\n+    // do not interfere with select() loops. On 64-bit Unix hosts this value is\n+    // also OK, because up to that amount LevelDB will use an mmap\n+    // implementation that does not use extra file descriptors (the fds are\n+    // closed after being mmaped).\n+    //\n+    // Increasing the value beyond the default is dangerous because LevelDB will\n+    // fall back to a non-mmap implementation when the file count is too large.\n+    // On 32-bit Unix host we should decrease the value because the handles use\n+    // up real fds, and we want to avoid fd exhaustion issues.\n+    //\n+    // See PR #12495 for further discussion.\n+#ifndef WIN32\n+    if (sizeof(void*) < 8)\n+        options->max_open_files = 64;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r172025197",
      "id" : 172025197,
      "original_commit_id" : "08b132ce7a22d66452d2153375c962a87c50dd93",
      "original_position" : 20,
      "path" : "src/dbwrapper.cpp",
      "position" : null,
      "pull_request_review_id" : 100983400,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495",
      "updated_at" : "2018-03-03T20:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172025197",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Can you let me know if the comment looks correct regarding Windows behavior?\r\n\r\nComment LGTM!",
      "created_at" : "2018-03-03T18:55:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-370170999",
      "id" : 370170999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-03T18:55:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370170999",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6394033?v=4",
         "events_url" : "https://api.github.com/users/donaloconnor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/donaloconnor/followers",
         "following_url" : "https://api.github.com/users/donaloconnor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/donaloconnor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/donaloconnor",
         "id" : 6394033,
         "login" : "donaloconnor",
         "organizations_url" : "https://api.github.com/users/donaloconnor/orgs",
         "received_events_url" : "https://api.github.com/users/donaloconnor/received_events",
         "repos_url" : "https://api.github.com/users/donaloconnor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/donaloconnor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/donaloconnor"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r172025351"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172025351"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The constructor for `leveldb::Options` sets it to 1000.",
      "commit_id" : "a6f5abf623ce53fdf57d0030d8ad5ad6b35e4b03",
      "created_at" : "2018-03-03T18:59:45Z",
      "diff_hunk" : "@@ -71,20 +71,40 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n     }\n };\n \n+static void SetMaxOpenFiles(leveldb::Options *options) {\n+    // On most platforms the default setting of max_open_files (which is 1000)\n+    // is optimal. On Windows using a large file count is OK because the handles\n+    // do not interfere with select() loops. On 64-bit Unix hosts this value is\n+    // also OK, because up to that amount LevelDB will use an mmap\n+    // implementation that does not use extra file descriptors (the fds are\n+    // closed after being mmaped).\n+    //\n+    // Increasing the value beyond the default is dangerous because LevelDB will\n+    // fall back to a non-mmap implementation when the file count is too large.\n+    // On 32-bit Unix host we should decrease the value because the handles use\n+    // up real fds, and we want to avoid fd exhaustion issues.\n+    //\n+    // See PR #12495 for further discussion.\n+#ifndef WIN32\n+    if (sizeof(void*) < 8)\n+        options->max_open_files = 64;\n+#endif\n+}\n+\n static leveldb::Options GetOptions(size_t nCacheSize)\n {\n     leveldb::Options options;\n     options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n     options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n     options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n     options.compression = leveldb::kNoCompression;\n-    options.max_open_files = 64;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r172025351",
      "id" : 172025351,
      "in_reply_to_id" : 172025190,
      "original_commit_id" : "08b132ce7a22d66452d2153375c962a87c50dd93",
      "original_position" : 31,
      "path" : "src/dbwrapper.cpp",
      "position" : 36,
      "pull_request_review_id" : 100983548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495",
      "updated_at" : "2018-03-03T20:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172025351",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r172025474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172025474"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I didn't scroll far another down :) - you're right.",
      "commit_id" : "a6f5abf623ce53fdf57d0030d8ad5ad6b35e4b03",
      "created_at" : "2018-03-03T19:03:57Z",
      "diff_hunk" : "@@ -71,20 +71,40 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n     }\n };\n \n+static void SetMaxOpenFiles(leveldb::Options *options) {\n+    // On most platforms the default setting of max_open_files (which is 1000)\n+    // is optimal. On Windows using a large file count is OK because the handles\n+    // do not interfere with select() loops. On 64-bit Unix hosts this value is\n+    // also OK, because up to that amount LevelDB will use an mmap\n+    // implementation that does not use extra file descriptors (the fds are\n+    // closed after being mmaped).\n+    //\n+    // Increasing the value beyond the default is dangerous because LevelDB will\n+    // fall back to a non-mmap implementation when the file count is too large.\n+    // On 32-bit Unix host we should decrease the value because the handles use\n+    // up real fds, and we want to avoid fd exhaustion issues.\n+    //\n+    // See PR #12495 for further discussion.\n+#ifndef WIN32\n+    if (sizeof(void*) < 8)\n+        options->max_open_files = 64;\n+#endif\n+}\n+\n static leveldb::Options GetOptions(size_t nCacheSize)\n {\n     leveldb::Options options;\n     options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n     options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n     options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n     options.compression = leveldb::kNoCompression;\n-    options.max_open_files = 64;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#discussion_r172025474",
      "id" : 172025474,
      "in_reply_to_id" : 172025190,
      "original_commit_id" : "08b132ce7a22d66452d2153375c962a87c50dd93",
      "original_position" : 31,
      "path" : "src/dbwrapper.cpp",
      "position" : 36,
      "pull_request_review_id" : 100983658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12495",
      "updated_at" : "2018-03-03T20:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172025474",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6394033?v=4",
         "events_url" : "https://api.github.com/users/donaloconnor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/donaloconnor/followers",
         "following_url" : "https://api.github.com/users/donaloconnor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/donaloconnor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/donaloconnor",
         "id" : 6394033,
         "login" : "donaloconnor",
         "organizations_url" : "https://api.github.com/users/donaloconnor/orgs",
         "received_events_url" : "https://api.github.com/users/donaloconnor/received_events",
         "repos_url" : "https://api.github.com/users/donaloconnor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/donaloconnor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/donaloconnor"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Might be good to log somewhere which limit is being used...\r\n\r\n```C++\r\n#ifndef WIN32\r\n    if (sizeof(void*) < 8 || leveldb::kMajorVersion != 1 || leveldb::kMinorVersion < 3 || leveldb::kMinorVersion > 20) {\r\n        options->max_open_files = 64;\r\n        LogPrint(BCLog::LEVELDB, \"LevelDB max_open_files=%d\\n\", options->max_open_files);\r\n    } else {\r\n        LogPrint(BCLog::LEVELDB, \"LevelDB max_open_files=%d (default)\\n\", options->max_open_files);\r\n    }\r\n#endif\r\n```",
      "created_at" : "2018-03-03T19:10:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-370172051",
      "id" : 370172051,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-03T20:06:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370172051",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've added the log statement. I also added a `static_assert()` on the exact LevelDB version. That way in the future if someone upgrades LevelDB, they will be forced to check that the POSIX `RandomAccessFile` implementation hasn't changed in a way that will cause fd exhaustion issues. What do you think of this approach?",
      "created_at" : "2018-03-03T20:39:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12495#issuecomment-370178046",
      "id" : 370178046,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12495",
      "updated_at" : "2018-03-03T20:39:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370178046",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   }
]
