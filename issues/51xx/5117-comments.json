[
   {
      "body" : "Seems to be this change was made, when CAmount was introduced, nice you catched that.",
      "created_at" : "2014-10-22T06:38:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5117#issuecomment-60042702",
      "id" : 60042702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5117",
      "updated_at" : "2014-10-22T06:38:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60042702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "NACK. This solution is hacky because CAmount is not guaranteed to be a uint64_t, and the type of setValue is actually a CAmount.\r\n\r\nThat's weird actually. Why doesn't CAmount work here? We do register the type with Qt, here\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/qt/bitcoin.cpp#L516\r\n\r\nI cannot reproduce it here either. The fee field works fine w/ Qt 5.2.1. What version of Qt are you building with?\r\n\r\n",
      "created_at" : "2014-10-22T08:00:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5117#issuecomment-60049209",
      "id" : 60049209,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5117",
      "updated_at" : "2014-10-22T08:00:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60049209",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Agreed on the hack, but I dont know better.\r\nIt works under qt5.3 for me too. Problem exists with 4.8.\r\nDo we still build linux-releases with qt4?\r\n",
      "created_at" : "2014-10-22T18:31:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5117#issuecomment-60132315",
      "id" : 60132315,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5117",
      "updated_at" : "2014-10-22T18:31:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60132315",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   },
   {
      "body" : "Yes, we do, so I guess we need to find a solution for qt4 (even if we wouldn't build with it ourselves anymore we should support it).\r\nIn the worst case we could make this an #ifdef ... but I wonder if I'm not just doing something wrong in the registration?",
      "created_at" : "2014-10-23T07:15:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5117#issuecomment-60200892",
      "id" : 60200892,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5117",
      "updated_at" : "2014-10-23T07:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60200892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I tried playing around with the MetaType-Registration, does not work.\r\nUpdated now to an #if.",
      "created_at" : "2014-10-23T17:23:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5117#issuecomment-60275053",
      "id" : 60275053,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5117",
      "updated_at" : "2014-10-23T17:23:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60275053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   },
   {
      "body" : "I don't see any difference on OSX with 4.8.6. Seems to work fine without the hack. Could you describe exactly what's fixed? I'm assuming I'd know the problem if I saw it.\r\n\r\nWhat is the build/runtime environment you're using?",
      "created_at" : "2014-10-23T18:47:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5117#issuecomment-60289189",
      "id" : 60289189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5117",
      "updated_at" : "2014-10-23T18:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60289189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "I compile archlinux, but I also tested compiling a release in virtualbox and then tested the resulting linux executable in a different linux virtualbox, same bug. Dont know about windows or osx.\r\n\r\n![bug](https://cloud.githubusercontent.com/assets/2814559/4759559/4efe8aa4-5ae8-11e4-9191-6ec22f04b0f7.png)\r\n\r\nThe field is always empty when opening the dialog. You can enter a value and its stored correctly internally, but if you reopen the dialog its empty again.",
      "created_at" : "2014-10-23T23:10:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5117#issuecomment-60323409",
      "id" : 60323409,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5117",
      "updated_at" : "2014-10-23T23:10:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60323409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   },
   {
      "body" : "Ok, I've reproduced in linux with qt4.8. I went pretty far down the rabbit hole and I believe I've found the core issue, but I can only wildly speculate as to the reason.\r\n\r\nlinux64: typedef long int                int64_t;\r\nosx64: typedef long long               int64_t;\r\nlinux32: typedef long long int           int64_t;\r\nwin64: typedef long long  int64_t;\r\nwin32: typedef long long  int64_t;\r\n\r\nOnly linux64 defines int64_t as a long. I would guess that everywhere else is working fine.\r\n\r\nAs a test, changing the typedef for CAmount from \"int64_t\" to \"long long\" (and fixing up a few casualties like json) allows the fee field to work again. Change it to \"long\" instead, which is the same size, and it breaks. So it seems as though what's in master will be broken on systems running qt4 where int64_t != long long.\r\n\r\n### \\<wild speculation\\>\r\n\r\nMy best guess from looking at the headers is that qt's variant in qt4 is that they use some rtti to determine convertible user-defined types, but they don't seem to ever store longs, they always store long long's (qint64 is also long long):\r\n\r\n```\r\nqt4:\r\n...\r\n            float f;\r\n            qreal real;\r\n            qlonglong ll;\r\n            qulonglong ull;\r\n            QObject *o;\r\n            void *ptr;\r\n```\r\n\r\n```\r\nqt5:\r\n...\r\n            long l;\r\n            ulong ul;\r\n            bool b;\r\n            double d;\r\n            float f;\r\n            qreal real;\r\n            qlonglong ll;\r\n            qulonglong ull;\r\n```\r\nSo when it attempts to convert out of the variant to our \"long\", it sees typeid's that don't match, refuses to convert, and sets the valid_out in AmountSpinBox::value to false.\r\n### \\</wild speculation\\>\r\n\r\nI'm not sure if that's any help, since I can't explain exactly what the problem is, but it's definitely more than just a matter of qt4/qt5.",
      "created_at" : "2014-10-24T05:17:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5117#issuecomment-60345625",
      "id" : 60345625,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5117",
      "updated_at" : "2014-10-24T05:17:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60345625",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni I dived into another part of the rabbit hole last night. The issue is twofold:\r\n\r\n1. QDataWidgetMapper doesn't seem to accept the custom property types. No matter what, it doesn't seem to be able to pass a user type like CAmount from the model's data to the widget property. It just treats the result as invalid.\r\n2. In `OptionsModel::data` with FEE we actually return a QVariant(qint64), not a QVariant.setValue(CAmount), so it's a wonder this works at all, and Qt5 finds a way to map this to the CAmount property type. To return the proper type it should be\r\n```\r\n        case Fee: {\r\n            // Attention: Init() is called before payTxFee is set in AppInit2()!\r\n            // To ensure we can change the fee on-the-fly update our QSetting when\r\n            // opening OptionsDialog, which queries Fee via the mapper.\r\n            if (!(payTxFee == CFeeRate(settings.value(\"nTransactionFee\").toLongLong(), 1000)))\r\n                settings.setValue(\"nTransactionFee\", (qint64)payTxFee.GetFeePerK());\r\n            // Todo: Consider to revert back to use just payTxFee here, if we don't want\r\n            // -paytxfee to update our QSettings!\r\n            QVariant v;\r\n            CAmount amount = CAmount(settings.value(\"nTransactionFee\").toLongLong());\r\n            v.setValue(amount);\r\n            return v; // v.type() will now be the user type for CAmount\r\n        }\r\n```\r\n(a symmetrical change would be needed in setData, which still expects a qint64!)\r\n\r\n(2) is easy to fix, but it doesn't make it any better, and breaks cozz's fix too, as it will have no idea how to convert a QVariant:CAmount to a qint64 property. (1) is more tricky. \r\n\r\nA difference between Qt4 and Qt5 here seems to be that on Qt4, an actual UserType is registered for CAmount (which gets ID 129 or so). Qt5 understands it to be just a typedef (and gets ID 32:long / 4:longlong). This explains why it 'just works' on Qt5.\r\n\r\nIn retrospect I'd say @cozz's solution is the best for now, **both for Qt4 and Qt5**. It will break on compilation of the generated `moc` in case `BitcoinAmountField::setValue()` no longer takes a qint64, but that's a problem for altcoins where CAmount is not a qint64, not for us. Let's just add a comment referring to this issue why we did it this way.\r\n\r\n-----------------\r\n\r\n... but then I realized something I should have realized before charging into rabbit holes : do we still need this setting at all after the 'smart fee' change, or do we need to deal with fee completely different now?\r\n\r\nAt least we now have a new an extra setting:\r\n\r\n- `-txconfirmtarget=n` : create transactions that have enough fees (or priority) so they are likely to confirm within n blocks (default: 1). This setting is over-ridden by the -paytxfee option.\r\n\r\nFor the GUI maybe this should not be global at all, it would be nice to allow people to interactively determine their fee versus confirm target preference while sending the transaction.\r\n",
      "created_at" : "2014-10-24T07:11:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5117#issuecomment-60352126",
      "id" : 60352126,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5117",
      "updated_at" : "2014-10-24T07:11:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60352126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj I started down the same path as well. I began by using QVariant::fromValue<CAmount>() and value.value<CAmount>() as necessary, but I never had any luck that way. I assumed that If I treated it as though it were an opaque class that wasn't compatible to an integral type I'd eventually be able to get the same \"class\" back out by doing all variant operations manually and in reverse, but I had no such luck. Sounds like your first point is probably the cause there.\r\n\r\nEdit: Grr, github ate my tags. That was QVariant::fromValue\\<CAmount\\>() and value.value\\<CAmount\\>()",
      "created_at" : "2014-10-24T07:35:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5117#issuecomment-60353942",
      "id" : 60353942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5117",
      "updated_at" : "2014-10-24T07:36:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60353942",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Updated now for both qt4/5 and linked to this issue.\r\n\r\nI also suspect that because there is a weird difference between long and long long\r\nthe mapping does not work.\r\n\r\n@laanwj \r\nAbout smartfee, I thought the same and was really trying to come up with something\r\nto bring -txconfirmtarget to the GUI, but I didnt. See full thoughts here: #4866",
      "created_at" : "2014-10-25T04:56:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5117#issuecomment-60471753",
      "id" : 60471753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5117",
      "updated_at" : "2014-10-25T04:56:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60471753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   }
]
