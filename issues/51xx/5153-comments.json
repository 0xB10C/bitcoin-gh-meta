[
   {
      "body" : "Yikes. Could you elaborate on the reasoning? In particular, I could understand moving the logic for each opcode to a function so that they could be independently verified or changed, but the groupings like OpNumUnary make this seem like a high-risk lateral move.",
      "created_at" : "2014-10-28T03:30:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60705367",
      "id" : 60705367,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-28T03:30:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60705367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Yes, this change is about readability and maintainability (which includes being able to change a small part without affecting other parts).\r\nI used to use automatic style checking tools in java. Both Functions/methods longer than X lines and Y nested levels of flow control raised warnings saying that the function couldn't possibly be readable and asking you to refactor it.\r\nAfter the change EvalScript() is 274 lines and has 4 nested levels of flow control at most, which I think it's complex enough.\r\n\r\nThe groupings were already there, this is just the simplest (more reviewable) way to split the switch maintaining most of the code and just passsing opcode to those cases that were already grouped.\r\nIn some cases like OpEqual(), I've replaced the opcode parameter for a simpler boolean param (fVerify to do the additional verification when the opcode is OP_EQUALVERIFY).\r\n\r\nMaybe later OpNumUnary(), OpNumBinary(), OpCrypto(), etc can be split further without replicating code (I doubt it), but in fact splitting them in the same commit actually seems more risky and less reviewable to me.\r\n\r\nEDIT: Anyway, the tests are failing in some platforms so I've must have done something wrong.",
      "created_at" : "2014-10-28T11:31:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60742044",
      "id" : 60742044,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-28T11:32:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60742044",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Personally I'd rather not touch this code if not necessary.",
      "created_at" : "2014-10-28T12:01:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60744720",
      "id" : 60744720,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-28T12:01:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60744720",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I missed a break after OP_EQUAL, fixed but now it needs rebase...",
      "created_at" : "2014-10-28T13:38:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60755803",
      "id" : 60755803,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-28T13:38:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60755803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "NACK from me, too dangerous to change, benefits do not outweigh the risks.\r\n",
      "created_at" : "2014-10-28T13:43:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60756453",
      "id" : 60756453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-28T13:43:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60756453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "In my opinion the benefits in readability in a critical part like this are underestimated.\r\nLeaving the current code structure not only makes later changes harder to review, it also reduces the number of potential reviewers we could have for those changes and the performance of those who are already reviewing these changes.Given that those resources are currently very limited, I completely understand the bias towards minimizing review needs in critical parts of the code, this conservative attitude makes the most sense.\r\nI consider this apparently meaningless change a great investment in precisely the resources that are being economized though.\r\n\r\nAt the same time, I also believe the risks are overestimated. \r\nThrough the use of version control tools like Git, I've discovered (mainly by contributing to complex projects including this one) that the amount of logical changes applied to a given codebase can be greatly minimized  with some effort to simplify the review process.\r\nThere are multiple possibilities only in this example: the operators could be tunred into functions first and change their interface (ie: replace an opcode param with a bool) later, operators could be turned into functions one by one, by groups, ordered by complexity in both directions...\r\nMany roads lead to Rome (not all of them if you're trying to avoid crossing an seas and oceans).\r\nI'm very open to hear more ideas about the best way to reduce risks while also reducing our costs in terms of collective time.\r\nRebased only splitting OpChecksig() and OpCheckMultisig() [the ones at the end to minimize the diff but, coincidentally, also the ones with higher levels of flow control nesting].\r\n\r\nIn any case, I also understand that pre0.10 is probably not the best time to have this discussion so I'm happy waiting for a better time and rebasing as many times as necessary. Obviously functional changes and releases should never be delayed to make refactorings easier.\r\n\r\nNonetheless, early feedback is always greatly appreciated, thank you @theuni @laanwj @gavinandresen\r\n\r\nIf keeping it open for later is a distraction, I can close it now and reopen it after0.10, no problem.",
      "created_at" : "2014-10-28T17:17:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60794318",
      "id" : 60794318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-28T17:17:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60794318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Minor style nit : should it be OpCheckSig and OpCheckMultiSig?\r\n\r\nOtherwise, need a language lawyer to make sure that nothing changed with the introduction of a function call. Looks okay to me otherwise.",
      "created_at" : "2014-10-28T17:41:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60798594",
      "id" : 60798594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-28T17:41:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60798594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "-1\r\n\r\nRisky, and slower too.\r\n",
      "created_at" : "2014-10-28T19:15:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60814452",
      "id" : 60814452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-28T19:15:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60814452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "How slower? The functions can be inlined (I assumed the compiler would figure it out by itself having only one call per function though).",
      "created_at" : "2014-10-28T22:40:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60844478",
      "id" : 60844478,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-28T22:40:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60844478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "I don't like breaking the script execution engine into functions very much. The big switch statement is readable and generally easy to reason about. The rather long function prototypes are perhaps an indication that this isn't a good abstraction boundary.",
      "created_at" : "2014-10-28T22:59:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60846626",
      "id" : 60846626,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-28T22:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60846626",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "> The big switch statement is readable and generally easy to reason about. \r\n\r\nI obviously disagree with this.\r\n\r\n> The rather long function prototypes are perhaps an indication that this isn't a good abstraction boundary.\r\n\r\nThe longer ones are precisely these two. Though, yes, the fact that these have such long list of attributes while most of the rest practically just use the stack may indicate something, but don't necessarily talk bad about this division. Maybe in favor given that it makes this \"parameters asymmetry\" more visible.\r\n",
      "created_at" : "2014-10-29T02:55:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60866649",
      "id" : 60866649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-29T02:55:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60866649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "To be clear I saw this after it was reduced to only `OpCheckSig` and `OpCheckMultiSig`. I favor this approach for gigantic, monolithic operators like these two. Imagine how much worse it would be if/when we soft-fork functionality into `CHECKSIG`. I would not support splitting off execution for things like DUP et al.",
      "created_at" : "2014-10-29T05:04:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60874711",
      "id" : 60874711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-29T05:04:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60874711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=3",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "body" : "@jtimon I generally agree with you that structuring code in a way to make reviewing easier is good. However this is code that is very unlikely to change in the first place. I'd only feel confident about changes like this if they don't change the resulting executable at all, or there would be some other rigorous proof system.\r\n",
      "created_at" : "2014-10-29T07:52:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-60885271",
      "id" : 60885271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-29T07:52:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60885271",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj Not changing the resulting at all should clear all risk and performance concerns, thank you for suggesting that.\r\nIs there a simple way to do that?\r\nI don't know many details about deterministic building processes, but maybe there's a one-line thing to compare the hashes of the resulting builds from 2 different git commits, that everybody but myself is aware of or something. I would greatly appreciate more guidance in this direction. That would be very useful for me in general, not just for this PR.",
      "created_at" : "2014-10-29T21:28:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-61008319",
      "id" : 61008319,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-10-29T21:28:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61008319",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon There's no one-ling thing, but you could follow my process here https://github.com/bitcoin/bitcoin/pull/4180#issuecomment-52148271\r\n",
      "created_at" : "2014-11-12T17:41:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-62759239",
      "id" : 62759239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-11-12T17:41:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/62759239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Thank you @laanwj that seems very useful. I feel tempted to use that to write a little python script that checks that the resulting builds from 2 different commits are identical. And then use that script to check this PR. But that's definitely after-0.10 (and with that tool we don't care much about an additional clang since I could just indent properly from the beginning without worrying about making the diff harder to read) so I'm closing this for now.",
      "created_at" : "2014-11-15T14:07:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5153#issuecomment-63173488",
      "id" : 63173488,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5153",
      "updated_at" : "2014-11-15T14:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/63173488",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   }
]
