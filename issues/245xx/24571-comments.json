[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25096](https://github.com/bitcoin/bitcoin/pull/25096) ([net] Minor improvements to addr caching by dergoegge)\n* [#24970](https://github.com/bitcoin/bitcoin/pull/24970) (net processing: Move cleanSubVer, fPreferredDownload and nLocalHostNonce to Peer by jnewbery)\n* [#24232](https://github.com/bitcoin/bitcoin/pull/24232) (assumeutxo: add init and completion logic by jamesob)\n* [#24008](https://github.com/bitcoin/bitcoin/pull/24008) (assumeutxo: net_processing changes by jamesob)\n* [#19888](https://github.com/bitcoin/bitcoin/pull/19888) (rpc, test: Improve getblockstats for unspendables by fjahr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-03-15T18:50:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1068342401",
      "id" : 1068342401,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII584_rZyB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1068342401/reactions"
      },
      "updated_at" : "2022-05-19T20:26:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1068342401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\nNeat and creative finding.\r\n\r\nAs I understood it,\r\nAn attacker is currently able to see whether a node received a stale block previously, by sending headers *on top of that stale block* (does it require proof-of-work for this attack?).\r\nThis PR prevents it by sending `getheaders` even if a block was received already (but was marked stale).",
      "created_at" : "2022-03-19T13:29:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1073010413",
      "id" : 1073010413,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII584_9Nbt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1073010413/reactions"
      },
      "updated_at" : "2022-03-19T13:29:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1073010413",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r830484846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830484846"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure this is a good var name. This specific PR has nothing to do with valid scripts for example.",
      "commit_id" : "b4d108e7a71e69c0c5a82ebc3ce7f7abfd7dd83f",
      "created_at" : "2022-03-19T13:35:37Z",
      "diff_hunk" : "@@ -614,7 +614,7 @@ class PeerManagerImpl final : public PeerManager\n      * and in best equivalent proof of work) than the best header chain we know\n      * about and we fully-validated them at some point.\n      */\n-    bool BlockRequestAllowed(const CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool BlockRequestAllowed(const CBlockIndex* pindex, bool check_valid_scripts = true) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r830484846",
      "id" : 830484846,
      "line" : 617,
      "node_id" : "PRRC_kwDOABII584xgDFu",
      "original_commit_id" : "3a112657530f09e62b96c2575cbb5284461606b3",
      "original_line" : 617,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 915003480,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830484846/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-19T13:35:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830484846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r830489678"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830489678"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems like a good refactor candidate, as these conditions are hard to follow and review.",
      "commit_id" : "b4d108e7a71e69c0c5a82ebc3ce7f7abfd7dd83f",
      "created_at" : "2022-03-19T14:23:48Z",
      "diff_hunk" : "@@ -1451,12 +1451,12 @@ bool PeerManagerImpl::MaybePunishNodeForTx(NodeId nodeid, const TxValidationStat\n     return false;\n }\n \n-bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex)\n+bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex, bool check_valid_scripts)\n {\n     AssertLockHeld(cs_main);\n     if (m_chainman.ActiveChain().Contains(pindex)) return true;\n-    return pindex->IsValid(BLOCK_VALID_SCRIPTS) && (pindexBestHeader != nullptr) &&\n-           (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() < STALE_RELAY_AGE_LIMIT) &&\n+    return (!check_valid_scripts || pindex->IsValid(BLOCK_VALID_SCRIPTS)) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r830489678",
      "id" : 830489678,
      "line" : 1458,
      "node_id" : "PRRC_kwDOABII584xgERO",
      "original_commit_id" : "3a112657530f09e62b96c2575cbb5284461606b3",
      "original_line" : 1458,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 915007116,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830489678/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-19T14:23:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830489678",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r830489913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830489913"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Here and below, we would benefit from explaining why it's fine to `getheaders` if we have a parent, but it is a stale block",
      "commit_id" : "b4d108e7a71e69c0c5a82ebc3ce7f7abfd7dd83f",
      "created_at" : "2022-03-19T14:25:33Z",
      "diff_hunk" : "@@ -2129,7 +2129,8 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n         //   don't connect before giving DoS points\n         // - Once a headers message is received that is valid and does connect,\n         //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock);\n+        if ((!prev_header_index || !BlockRequestAllowed(prev_header_index, false)) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r830489913",
      "id" : 830489913,
      "line" : 2133,
      "node_id" : "PRRC_kwDOABII584xgEU5",
      "original_commit_id" : "3a112657530f09e62b96c2575cbb5284461606b3",
      "original_line" : 2133,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 31,
      "pull_request_review_id" : 915007247,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830489913/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-19T14:25:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830489913",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r831128364"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831128364"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point, i added a refactor commit that also adds some comments.",
      "commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "created_at" : "2022-03-21T13:49:40Z",
      "diff_hunk" : "@@ -1451,12 +1451,12 @@ bool PeerManagerImpl::MaybePunishNodeForTx(NodeId nodeid, const TxValidationStat\n     return false;\n }\n \n-bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex)\n+bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex, bool check_valid_scripts)\n {\n     AssertLockHeld(cs_main);\n     if (m_chainman.ActiveChain().Contains(pindex)) return true;\n-    return pindex->IsValid(BLOCK_VALID_SCRIPTS) && (pindexBestHeader != nullptr) &&\n-           (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() < STALE_RELAY_AGE_LIMIT) &&\n+    return (!check_valid_scripts || pindex->IsValid(BLOCK_VALID_SCRIPTS)) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r831128364",
      "id" : 831128364,
      "in_reply_to_id" : 830489678,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584xigMs",
      "original_commit_id" : "3a112657530f09e62b96c2575cbb5284461606b3",
      "original_line" : 1458,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 915772756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831128364/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-21T13:49:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831128364",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r831130729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831130729"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I will actually think about this some more because i am not sure if there are no side effects to requesting headers that we already have in our index.",
      "commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "created_at" : "2022-03-21T13:51:57Z",
      "diff_hunk" : "@@ -2129,7 +2129,8 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n         //   don't connect before giving DoS points\n         // - Once a headers message is received that is valid and does connect,\n         //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock);\n+        if ((!prev_header_index || !BlockRequestAllowed(prev_header_index, false)) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r831130729",
      "id" : 831130729,
      "in_reply_to_id" : 830489913,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584xigxp",
      "original_commit_id" : "3a112657530f09e62b96c2575cbb5284461606b3",
      "original_line" : 2133,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 915776369,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831130729/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-21T13:51:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831130729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you @naumenkogs for the review!\r\n\r\n> does it require proof-of-work for this attack?\r\n\r\nIt does not, the header that the attacker uses can be completely invalid. The proof-of-work check happens later on in `ChainstateManager::ProcessNewBlockHeaders`. The test i included also uses headers that do not have any proof-of-work on them.",
      "created_at" : "2022-03-21T13:59:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1073932160",
      "id" : 1073932160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585AAueA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1073932160/reactions"
      },
      "updated_at" : "2022-03-21T13:59:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1073932160",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844818488"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844818488"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    bool BlockRequestAllowed(const CBlockIndex* pindex, const bool allow_potentially_invalid_headers = false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n```",
      "commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "created_at" : "2022-04-07T07:41:07Z",
      "diff_hunk" : "@@ -614,7 +614,7 @@ class PeerManagerImpl final : public PeerManager\n      * and in best equivalent proof of work) than the best header chain we know\n      * about and we fully-validated them at some point.\n      */\n-    bool BlockRequestAllowed(const CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool BlockRequestAllowed(const CBlockIndex* pindex, bool allow_potentially_invalid_headers = false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844818488",
      "id" : 844818488,
      "line" : 617,
      "node_id" : "PRRC_kwDOABII584yWug4",
      "original_commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "original_line" : 617,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 933756078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844818488/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-07T07:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844818488",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844818766"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844818766"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\nbool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex, const bool allow_potentially_invalid_headers)\r\n```",
      "commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "created_at" : "2022-04-07T07:41:26Z",
      "diff_hunk" : "@@ -1451,13 +1451,38 @@ bool PeerManagerImpl::MaybePunishNodeForTx(NodeId nodeid, const TxValidationStat\n     return false;\n }\n \n-bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex)\n+bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex, bool allow_potentially_invalid_headers)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844818766",
      "id" : 844818766,
      "line" : 1454,
      "node_id" : "PRRC_kwDOABII584yWulO",
      "original_commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "original_line" : 1454,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 14,
      "pull_request_review_id" : 933756078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844818766/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-07T07:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844818766",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844821753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844821753"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "As mentioned in the PR review club, the motivation for introducing `allow_potentially_invalid_headers` isn't clear from the PR or commit.",
      "commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "created_at" : "2022-04-07T07:44:48Z",
      "diff_hunk" : "@@ -1451,13 +1451,38 @@ bool PeerManagerImpl::MaybePunishNodeForTx(NodeId nodeid, const TxValidationStat\n     return false;\n }\n \n-bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex)\n+bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex, bool allow_potentially_invalid_headers)\n {\n     AssertLockHeld(cs_main);\n-    if (m_chainman.ActiveChain().Contains(pindex)) return true;\n-    return pindex->IsValid(BLOCK_VALID_SCRIPTS) && (pindexBestHeader != nullptr) &&\n-           (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() < STALE_RELAY_AGE_LIMIT) &&\n-           (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, m_chainparams.GetConsensus()) < STALE_RELAY_AGE_LIMIT);\n+\n+    if (!m_chainman.ActiveChain().Contains(pindex)) {\n+        // This is a stale block and we restrict access to them under certain\n+        // conditions to avoid leaking a fingerprint.\n+\n+        if (!allow_potentially_invalid_headers) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844821753",
      "id" : 844821753,
      "line" : 1462,
      "node_id" : "PRRC_kwDOABII584yWvT5",
      "original_commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "original_line" : 1462,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 26,
      "pull_request_review_id" : 933756078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844821753/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-07T10:28:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844821753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844974612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844974612"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        if ((!prev_header_index || !BlockRequestAllowed(prev_header_index, /*allow_potentially_invalid_headers=*/true)) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\r\n```\r\nAnywhere you are adding / touching named args, please use the [style from the developer docs](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c-named-arguments).",
      "commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "created_at" : "2022-04-07T10:27:10Z",
      "diff_hunk" : "@@ -2129,7 +2154,8 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n         //   don't connect before giving DoS points\n         // - Once a headers message is received that is valid and does connect,\n         //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock);\n+        if ((!prev_header_index || !BlockRequestAllowed(prev_header_index, /* allow_potentially_invalid_headers= */ true)) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844974612",
      "id" : 844974612,
      "line" : 2158,
      "node_id" : "PRRC_kwDOABII584yXUoU",
      "original_commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "original_line" : 2158,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 59,
      "pull_request_review_id" : 934838825,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844974612/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-07T10:27:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844974612",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r849710370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849710370"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Here and above you might add a `LogPrint` notifying a non-allowed header has been denied of request, like the others callsites of `BlockRequestAllowed` (\"ignoring request from peer=%i for old blocks that isn't in the main chain\"). Nice to monitor eventual fingerprinting attacks attempts or other anomalies.",
      "commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "created_at" : "2022-04-13T17:06:00Z",
      "diff_hunk" : "@@ -3505,7 +3531,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n         LOCK(cs_main);\n \n-        if (!m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock)) {\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock);\n+        if (!prev_header_index || !BlockRequestAllowed(prev_header_index, /* allow_potentially_invalid_headers= */ true)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r849710370",
      "id" : 849710370,
      "line" : 3535,
      "node_id" : "PRRC_kwDOABII584ypY0i",
      "original_commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "original_line" : 3535,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 69,
      "pull_request_review_id" : 941295811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849710370/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T17:07:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849710370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks everyone for the review so far! I am working on addressing all your feedback.\r\nI will mark this as a draft for now and rework my approach because currently this messes with large reorgs in some instances. I am working on a functional test for these scenarios which i might PR separately as none of the current tests caught this.\r\n\r\n@ariard Good point bringing up BIP157 requests but luckily we already handle them safely, see: https://github.com/bitcoin/bitcoin/blob/b69fd5eaa99f84b62a49d7c7f48d8cee1227592a/src/net_processing.cpp#L2437",
      "created_at" : "2022-04-14T16:13:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1099354920",
      "id" : 1099354920,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585BhtMo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099354920/reactions"
      },
      "updated_at" : "2022-04-14T16:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099354920",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-04-20T11:23:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1103820508",
      "id" : 1103820508,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585Byvbc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103820508/reactions"
      },
      "updated_at" : "2022-04-20T11:23:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103820508",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-04-24T13:36:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1107843661",
      "id" : 1107843661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585CCFpN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107843661/reactions"
      },
      "updated_at" : "2022-04-24T13:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107843661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r859689379"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859689379"
         }
      },
      "author_association" : "MEMBER",
      "body" : "With the new approach the log message reflects whether the previous block existed or if the peer was not allowed to know about it (potential fingerprint).",
      "commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "created_at" : "2022-04-27T11:37:33Z",
      "diff_hunk" : "@@ -3505,7 +3531,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n         LOCK(cs_main);\n \n-        if (!m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock)) {\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock);\n+        if (!prev_header_index || !BlockRequestAllowed(prev_header_index, /* allow_potentially_invalid_headers= */ true)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r859689379",
      "id" : 859689379,
      "in_reply_to_id" : 849710370,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zPdGj",
      "original_commit_id" : "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "original_line" : 3535,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 954749411,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859689379/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-27T11:37:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859689379",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I updated this PR with the new approach (see commits and new PR description) and itâs now ready for review again. Most of the review comments did not apply anymore so i marked them as resolved.\r\n\r\nThe previous approach can be found on [this](https://github.com/dergoegge/bitcoin/tree/2022-03-header-fingerprinting-v1) branch.\r\nThe test for the reorg issue i [mentioned](https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1099354920) before can be found [here](https://github.com/dergoegge/bitcoin/commits/2022-04-large-reorg-test).",
      "created_at" : "2022-04-27T11:41:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1110900017",
      "id" : 1110900017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585CNv0x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110900017/reactions"
      },
      "updated_at" : "2022-04-27T11:41:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110900017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863637321"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863637321"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This function could be introduced in commit 0fdd0eb66a85189f2c32c33defb4322fd2a914dd (*[net processing] Prevent fingerprinting when receiving header*), rather than the previous commit.\r\n",
      "commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "created_at" : "2022-05-03T10:09:32Z",
      "diff_hunk" : "@@ -640,6 +652,9 @@ class PeerManagerImpl final : public PeerManager\n     void UpdateBlockAvailability(NodeId nodeid, const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     bool CanDirectFetch() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    void UpdateKnownChainTips(NodeId node_id, const CBlockIndex& new_index);\n+    bool IsIndexOnKnownChain(NodeId node_id, const CBlockIndex& index);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863637321",
      "id" : 863637321,
      "line" : 656,
      "node_id" : "PRRC_kwDOABII584zeg9J",
      "original_commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "original_line" : 656,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 24,
      "pull_request_review_id" : 960165091,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863637321/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-03T10:18:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863637321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863638047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863638047"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It seems wrong to set a validation state in net_processing - these should be set in validation and acted on by the client. I think here you could just call `Misbehaving()` directly.",
      "commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "created_at" : "2022-05-03T10:10:45Z",
      "diff_hunk" : "@@ -2158,34 +2221,36 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock);\n+        if (!prev_header_index || !IsIndexOnKnownChain(pfrom.GetId(), *prev_header_index)) {\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));\n-            LogPrint(BCLog::NET, \"received header %s: missing prev block %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n+            LogPrint(BCLog::NET, \"received header %s: %s: %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n                      headers[0].GetHash().ToString(),\n+                     prev_header_index ? \"we should not leak the existence of the previous block\" : \"missing prev block\",\n                      headers[0].hashPrevBlock.ToString(),\n                      m_chainman.m_best_header->nHeight,\n                      pfrom.GetId(), nodestate->nUnconnectingHeaders);\n-            // Set hashLastUnknownBlock for this peer, so that if we\n-            // eventually get the headers - even from a different peer -\n-            // we can use this peer to download.\n-            UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n \n-            if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n-                Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+            if (nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+                nodestate->nUnconnectingHeaders++;\n+\n+                // Set hashLastUnknownBlock for this peer, so that if we\n+                // eventually get the headers - even from a different peer -\n+                // we can use this peer to download.\n+                UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n+\n+                if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n+                    Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+                }\n+            } else {\n+                BlockValidationState state;\n+                state.Invalid(BlockValidationResult::BLOCK_MISSING_PREV, \"prev-blk-not-found\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863638047",
      "id" : 863638047,
      "line" : 2252,
      "node_id" : "PRRC_kwDOABII584zehIf",
      "original_commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "original_line" : 2252,
      "original_position" : 134,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 134,
      "pull_request_review_id" : 960165091,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863638047/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-03T10:18:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863638047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863638631"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863638631"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Did you look at implementing this logic in validation? Carrying out logic on chain tips and ancestors seems like a job for validation rather than net_processing.",
      "commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "created_at" : "2022-05-03T10:11:43Z",
      "diff_hunk" : "@@ -1068,6 +1083,54 @@ void PeerManagerImpl::UpdateBlockAvailability(NodeId nodeid, const uint256 &hash\n     }\n }\n \n+void PeerManagerImpl::UpdateKnownChainTips(NodeId node_id, const CBlockIndex& new_index)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863638631",
      "id" : 863638631,
      "line" : 1086,
      "node_id" : "PRRC_kwDOABII584zehRn",
      "original_commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "original_line" : 1086,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 33,
      "pull_request_review_id" : 960165091,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863638631/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-03T10:18:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863638631",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863639865"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863639865"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it be better to track chain tips per-network rather than per-peer? Is it a privacy leak if one peer on a network can determine that the node received a stale block header from a different peer on the same network?",
      "commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "created_at" : "2022-05-03T10:13:46Z",
      "diff_hunk" : "@@ -324,6 +324,18 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    struct CompareCBlockIndexRef {\n+        bool operator()(const CBlockIndex& a, const CBlockIndex& b) const { return &a < &b; }\n+    };\n+    /** Protects m_known_chain_tips */\n+    Mutex m_known_chain_tips_mutex;\n+    /**\n+     * Chain tips that this peer knows we have because they send them to us.\n+     * Limited to the number of chain tips in our global block index.\n+     */\n+    std::set<std::reference_wrapper<const CBlockIndex>, CompareCBlockIndexRef>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863639865",
      "id" : 863639865,
      "line" : 336,
      "node_id" : "PRRC_kwDOABII584zehk5",
      "original_commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "original_line" : 336,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 13,
      "pull_request_review_id" : 960165091,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863639865/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-03T10:18:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863639865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @jnewbery !\r\n\r\n> As an alternative approach, did you consider pruning stale tips from the block index once they're more than a certain age (eg a month)?\r\n\r\nI did and that would squash this class of fingerprinting once and for all but I decided not pursue this idea because we pass around `CBlockIndex` pointers in a lot of places and I was worried that we invalidate pointers by erasing them from the block index while some other component still holds a reference to them. It seems to me that the assumption \"nothing ever gets deleted from the block index\" is one of the reasons why we pass around `CBlockIndex` pointers so much and I did not want to mess with that assumption.\r\n\r\n> Or perhaps just making them unavailable from outside validation if no peer has informed you about them for some period of time.\r\n\r\nWill take a look into going more in this direction.",
      "created_at" : "2022-05-09T16:16:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1121305345",
      "id" : 1121305345,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585C1cMB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121305345/reactions"
      },
      "updated_at" : "2022-05-09T16:16:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121305345",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r868191984"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868191984"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You are right, per-network would be enough, no need to keep this around for every peer. That would probably also require less changes to the tests.",
      "commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "created_at" : "2022-05-09T16:20:06Z",
      "diff_hunk" : "@@ -324,6 +324,18 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    struct CompareCBlockIndexRef {\n+        bool operator()(const CBlockIndex& a, const CBlockIndex& b) const { return &a < &b; }\n+    };\n+    /** Protects m_known_chain_tips */\n+    Mutex m_known_chain_tips_mutex;\n+    /**\n+     * Chain tips that this peer knows we have because they send them to us.\n+     * Limited to the number of chain tips in our global block index.\n+     */\n+    std::set<std::reference_wrapper<const CBlockIndex>, CompareCBlockIndexRef>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r868191984",
      "id" : 868191984,
      "in_reply_to_id" : 863639865,
      "line" : 336,
      "node_id" : "PRRC_kwDOABII584zv47w",
      "original_commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "original_line" : 336,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 13,
      "pull_request_review_id" : 966448200,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868191984/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-09T16:20:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868191984",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-05-13T07:39:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1125749966",
      "id" : 1125749966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585DGZTO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1125749966/reactions"
      },
      "updated_at" : "2022-05-13T07:39:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1125749966",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874888665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874888665"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for the suggestion, I moved this into validation",
      "commit_id" : "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "created_at" : "2022-05-17T14:26:35Z",
      "diff_hunk" : "@@ -1068,6 +1083,54 @@ void PeerManagerImpl::UpdateBlockAvailability(NodeId nodeid, const uint256 &hash\n     }\n }\n \n+void PeerManagerImpl::UpdateKnownChainTips(NodeId node_id, const CBlockIndex& new_index)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874888665",
      "id" : 874888665,
      "in_reply_to_id" : 863638631,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840Jb3Z",
      "original_commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "original_line" : 1086,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 975578891,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874888665/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-17T14:26:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874888665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and addressed @jnewbery's review.\r\n\r\n* We now keep track of one chain tip set per network instead of one per peer\r\n* The chain tip set logic has moved to `validation.h/cpp`",
      "created_at" : "2022-05-17T14:47:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1128965795",
      "id" : 1128965795,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585DSqaj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1128965795/reactions"
      },
      "updated_at" : "2022-05-17T14:47:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1128965795",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874930208"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874930208"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    if (m_best_header->GetAncestor(index->nHeight) == index) return true;\r\n```\r\n\r\nnit: Is this needed?",
      "commit_id" : "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "created_at" : "2022-05-17T14:57:53Z",
      "diff_hunk" : "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index || m_best_header == index) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874930208",
      "id" : 874930208,
      "line" : 5234,
      "node_id" : "PRRC_kwDOABII5840JmAg",
      "original_commit_id" : "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "original_line" : 5234,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 11,
      "pull_request_review_id" : 975638189,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874930208/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-17T15:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874930208",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874932201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874932201"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        const CBlockIndex& tip_index{*Assert(m_blockman.LookupBlockIndex(tip_hash))};\r\n```\r\n\r\nOtherwise you might be running into UB in production.",
      "commit_id" : "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "created_at" : "2022-05-17T14:59:26Z",
      "diff_hunk" : "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index || m_best_header == index) return true;\n+    if (ActiveChain().Contains(index)) return true;\n+\n+    return false;\n+}\n+\n+bool ChainstateManager::IsBlockInChainTipSet(const uint256& blockhash, const std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    // `index` is in the chain tip set if one the tips has `index` as an ancestor.\n+    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+        const CBlockIndex& tip_index{*Assume(m_blockman.LookupBlockIndex(tip_hash))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874932201",
      "id" : 874932201,
      "line" : 5249,
      "node_id" : "PRRC_kwDOABII5840Jmfp",
      "original_commit_id" : "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "original_line" : 5249,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 26,
      "pull_request_review_id" : 975638189,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874932201/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-17T15:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874932201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874932847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874932847"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same",
      "commit_id" : "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "created_at" : "2022-05-17T14:59:54Z",
      "diff_hunk" : "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index || m_best_header == index) return true;\n+    if (ActiveChain().Contains(index)) return true;\n+\n+    return false;\n+}\n+\n+bool ChainstateManager::IsBlockInChainTipSet(const uint256& blockhash, const std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    // `index` is in the chain tip set if one the tips has `index` as an ancestor.\n+    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+        const CBlockIndex& tip_index{*Assume(m_blockman.LookupBlockIndex(tip_hash))};\n+        return index == &tip_index || tip_index.GetAncestor(index->nHeight) == index;\n+    });\n+}\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* new_index{m_blockman.LookupBlockIndex(new_blockhash)};\n+    if (!new_index) return;\n+\n+    const auto& last_tip_it = std::find_if(chain_tips.cbegin(), chain_tips.cend(), [&new_index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+        const CBlockIndex& tip_index{*Assume(m_blockman.LookupBlockIndex(tip_hash))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874932847",
      "id" : 874932847,
      "line" : 5262,
      "node_id" : "PRRC_kwDOABII5840Jmpv",
      "original_commit_id" : "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "original_line" : 5262,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 39,
      "pull_request_review_id" : 975638189,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874932847/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-17T15:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874932847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874935034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874935034"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is peer unused?",
      "commit_id" : "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "created_at" : "2022-05-17T15:01:43Z",
      "diff_hunk" : "@@ -2585,7 +2608,12 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n void PeerManagerImpl::ProcessBlock(CNode& node, const std::shared_ptr<const CBlock>& block, bool force_processing)\n {\n     bool new_block{false};\n-    m_chainman.ProcessNewBlock(block, force_processing, &new_block);\n+    if (m_chainman.ProcessNewBlock(block, force_processing, &new_block)) {\n+        const PeerRef peer{Assume(GetPeerRef(node.GetId()))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874935034",
      "id" : 874935034,
      "line" : 2612,
      "node_id" : "PRRC_kwDOABII5840JnL6",
      "original_commit_id" : "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "original_line" : 2612,
      "original_position" : 112,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 112,
      "pull_request_review_id" : 975638189,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874935034/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-17T15:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874935034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @MarcoFalke! I took all your suggestions.",
      "created_at" : "2022-05-17T16:32:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1129080369",
      "id" : 1129080369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585DTGYx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1129080369/reactions"
      },
      "updated_at" : "2022-05-17T16:32:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1129080369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875660418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875660418"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Does it mean that the attack will be still possible for a tor-only node with one bind=onion?",
      "commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "created_at" : "2022-05-18T09:11:33Z",
      "diff_hunk" : "@@ -324,6 +324,18 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    struct CompareCBlockIndexRef {\n+        bool operator()(const CBlockIndex& a, const CBlockIndex& b) const { return &a < &b; }\n+    };\n+    /** Protects m_known_chain_tips */\n+    Mutex m_known_chain_tips_mutex;\n+    /**\n+     * Chain tips that this peer knows we have because they send them to us.\n+     * Limited to the number of chain tips in our global block index.\n+     */\n+    std::set<std::reference_wrapper<const CBlockIndex>, CompareCBlockIndexRef>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875660418",
      "id" : 875660418,
      "in_reply_to_id" : 863639865,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840MYSC",
      "original_commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "original_line" : 336,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 976620068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875660418/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-18T09:11:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875660418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875857841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875857841"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(Doesn't necessarily need to be done in this PR)\r\n\r\n`GetDeterministicRandomizer()` doesn't need to be a member of `CConnman` since it's a stateless util function. It could be moved to src/random.cpp. Then, `GetUniqueNetworkID()` wouldn't need to take a `CConnman&` argument.",
      "commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "created_at" : "2022-05-18T12:54:39Z",
      "diff_hunk" : "@@ -267,6 +267,15 @@ std::optional<CAddress> GetLocalAddrForPeer(CNode *pnode)\n     return std::nullopt;\n }\n \n+uint64_t GetUniqueNetworkID(const CConnman& connman, const CNode& node)\n+{\n+    auto local_socket_bytes = node.addrBind.GetAddrBytes();\n+    return connman.GetDeterministicRandomizer(RANDOMIZER_ID_UNIQUE_NETWORK_ID)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875857841",
      "id" : 875857841,
      "line" : 273,
      "node_id" : "PRRC_kwDOABII5840NIex",
      "original_commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "original_line" : 273,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 16,
      "pull_request_review_id" : 976906677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875857841/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-18T14:18:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875857841",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875872793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875872793"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think performance is critical here, but it seems more efficient to pass over chain_tips once and do both the ancestor and descendant check on the same pass. Is there a reason you chose not to do that?",
      "commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "created_at" : "2022-05-18T13:06:31Z",
      "diff_hunk" : "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;\n+    if (ActiveChain().Contains(index)) return true;\n+\n+    return false;\n+}\n+\n+bool ChainstateManager::IsBlockInChainTipSet(const uint256& blockhash, const std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    // `index` is in the chain tip set if one the tips has `index` as an ancestor.\n+    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+        const CBlockIndex& tip_index{*Assert(m_blockman.LookupBlockIndex(tip_hash))};\n+        return tip_index.GetAncestor(index->nHeight) == index;\n+    });\n+}\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* new_index{m_blockman.LookupBlockIndex(new_blockhash)};\n+    if (!new_index) return;\n+\n+    const auto& last_tip_it = std::find_if(chain_tips.cbegin(), chain_tips.cend(), [&new_index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875872793",
      "id" : 875872793,
      "line" : 5261,
      "node_id" : "PRRC_kwDOABII5840NMIZ",
      "original_commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "original_line" : 5261,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 38,
      "pull_request_review_id" : 976906677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875872793/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-18T14:18:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875872793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875874050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875874050"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe name this `GetChainTipSetForPeerNetwork()`?",
      "commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "created_at" : "2022-05-18T13:07:42Z",
      "diff_hunk" : "@@ -621,6 +621,17 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);\n+\n+    /** Get the chain tip set for pfrom's network. */\n+    std::set<uint256>& GetChainTipSetForPeer(CNode& pfrom) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875874050",
      "id" : 875874050,
      "line" : 633,
      "node_id" : "PRRC_kwDOABII5840NMcC",
      "original_commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "original_line" : 633,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 13,
      "pull_request_review_id" : 976906677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875874050/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-18T14:18:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875874050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875878840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875878840"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps:\r\n\r\n```suggestion\r\n    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\r\n```\r\n\r\nsince `blockman` in the lambda is a local variable, not a member variable.",
      "commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "created_at" : "2022-05-18T13:11:55Z",
      "diff_hunk" : "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;\n+    if (ActiveChain().Contains(index)) return true;\n+\n+    return false;\n+}\n+\n+bool ChainstateManager::IsBlockInChainTipSet(const uint256& blockhash, const std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    // `index` is in the chain tip set if one the tips has `index` as an ancestor.\n+    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875878840",
      "id" : 875878840,
      "line" : 5248,
      "node_id" : "PRRC_kwDOABII5840NNm4",
      "original_commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "original_line" : 5248,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 25,
      "pull_request_review_id" : 976906677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875878840/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-18T14:18:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875878840",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875944415"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875944415"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I understand that this is here to maintain existing behaviour. I think in a future PR we could remove this special casing and always handle this with the nUnconnectingHeaders method, even if nCount == MAX_BLOCKS_TO_ANNOUNCE",
      "commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "created_at" : "2022-05-18T14:07:02Z",
      "diff_hunk" : "@@ -2159,34 +2175,38 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock);\n+        bool prev_block_on_known_chain = prev_header_index &&\n+                                         (m_chainman.IsBlockInMainOrBestChain(prev_header_index->GetBlockHash()) ||\n+                                          m_chainman.IsBlockInChainTipSet(prev_header_index->GetBlockHash(), GetChainTipSetForPeer(pfrom)));\n+        if (!prev_block_on_known_chain) {\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));\n-            LogPrint(BCLog::NET, \"received header %s: missing prev block %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n+            LogPrint(BCLog::NET, \"received header %s: %s: %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n                      headers[0].GetHash().ToString(),\n+                     prev_header_index ? \"we should not leak the existence of the previous block\" : \"missing prev block\",\n                      headers[0].hashPrevBlock.ToString(),\n                      m_chainman.m_best_header->nHeight,\n                      pfrom.GetId(), nodestate->nUnconnectingHeaders);\n-            // Set hashLastUnknownBlock for this peer, so that if we\n-            // eventually get the headers - even from a different peer -\n-            // we can use this peer to download.\n-            UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n \n-            if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n-                Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+            if (nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+                nodestate->nUnconnectingHeaders++;\n+\n+                // Set hashLastUnknownBlock for this peer, so that if we\n+                // eventually get the headers - even from a different peer -\n+                // we can use this peer to download.\n+                UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n+\n+                if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n+                    Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+                }\n+            } else {\n+                // Same as MaybePunishNodeForBlock for BlockValidationResult::BLOCK_MISSING_PREV\n+                Misbehaving(pfrom.GetId(), 10, \"invalid header received\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875944415",
      "id" : 875944415,
      "line" : 2209,
      "node_id" : "PRRC_kwDOABII5840Ndnf",
      "original_commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "original_line" : 2209,
      "original_position" : 83,
      "original_start_line" : 2207,
      "path" : "src/net_processing.cpp",
      "position" : 83,
      "pull_request_review_id" : 976906677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875944415/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2207,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-18T14:18:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875944415",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875955684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875955684"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe this should be factored into its own function, instead of repeated twice.\r\n\r\nIn general, I think we should look at all calls to `LookupBlockIndex()` and check whether they result in externally observable behaviour changes, and consider changing those `LookupBlockIndex()` calls to use this function.",
      "commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "created_at" : "2022-05-18T14:16:29Z",
      "diff_hunk" : "@@ -2159,34 +2175,38 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock);\n+        bool prev_block_on_known_chain = prev_header_index &&\n+                                         (m_chainman.IsBlockInMainOrBestChain(prev_header_index->GetBlockHash()) ||\n+                                          m_chainman.IsBlockInChainTipSet(prev_header_index->GetBlockHash(), GetChainTipSetForPeer(pfrom)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875955684",
      "id" : 875955684,
      "line" : 2186,
      "node_id" : "PRRC_kwDOABII5840NgXk",
      "original_commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "original_line" : 2186,
      "original_position" : 53,
      "original_start_line" : 2183,
      "path" : "src/net_processing.cpp",
      "position" : 53,
      "pull_request_review_id" : 976906677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875955684/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2183,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-18T14:18:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875955684",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876867479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876867479"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`GetDeterministicRandomizer()` does make use of `nSeed0` and `nSeed1` to construct the hasher but I think we could also just be using a `CSipHasher(0, 0)` here, since these IDs don't need to be unique per node. I left it as is to maintain current behavior.",
      "commit_id" : "d8f3f3785c432e41d0d9b7c98255aba5ad46b999",
      "created_at" : "2022-05-19T10:03:50Z",
      "diff_hunk" : "@@ -267,6 +267,15 @@ std::optional<CAddress> GetLocalAddrForPeer(CNode *pnode)\n     return std::nullopt;\n }\n \n+uint64_t GetUniqueNetworkID(const CConnman& connman, const CNode& node)\n+{\n+    auto local_socket_bytes = node.addrBind.GetAddrBytes();\n+    return connman.GetDeterministicRandomizer(RANDOMIZER_ID_UNIQUE_NETWORK_ID)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876867479",
      "id" : 876867479,
      "in_reply_to_id" : 875857841,
      "line" : 273,
      "node_id" : "PRRC_kwDOABII5840Q--X",
      "original_commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "original_line" : 273,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 16,
      "pull_request_review_id" : 978308207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876867479/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-19T10:03:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876867479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876867902"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876867902"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No reason, changed this to be done in one pass.",
      "commit_id" : "d8f3f3785c432e41d0d9b7c98255aba5ad46b999",
      "created_at" : "2022-05-19T10:04:18Z",
      "diff_hunk" : "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;\n+    if (ActiveChain().Contains(index)) return true;\n+\n+    return false;\n+}\n+\n+bool ChainstateManager::IsBlockInChainTipSet(const uint256& blockhash, const std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    // `index` is in the chain tip set if one the tips has `index` as an ancestor.\n+    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+        const CBlockIndex& tip_index{*Assert(m_blockman.LookupBlockIndex(tip_hash))};\n+        return tip_index.GetAncestor(index->nHeight) == index;\n+    });\n+}\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* new_index{m_blockman.LookupBlockIndex(new_blockhash)};\n+    if (!new_index) return;\n+\n+    const auto& last_tip_it = std::find_if(chain_tips.cbegin(), chain_tips.cend(), [&new_index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876867902",
      "id" : 876867902,
      "in_reply_to_id" : 875872793,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840Q_E-",
      "original_commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "original_line" : 5261,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 978308815,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876867902/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-19T10:04:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876867902",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876874036"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876874036"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agreed, but wanted to leave this for a future PR.",
      "commit_id" : "d8f3f3785c432e41d0d9b7c98255aba5ad46b999",
      "created_at" : "2022-05-19T10:10:41Z",
      "diff_hunk" : "@@ -2159,34 +2175,38 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock);\n+        bool prev_block_on_known_chain = prev_header_index &&\n+                                         (m_chainman.IsBlockInMainOrBestChain(prev_header_index->GetBlockHash()) ||\n+                                          m_chainman.IsBlockInChainTipSet(prev_header_index->GetBlockHash(), GetChainTipSetForPeer(pfrom)));\n+        if (!prev_block_on_known_chain) {\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));\n-            LogPrint(BCLog::NET, \"received header %s: missing prev block %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n+            LogPrint(BCLog::NET, \"received header %s: %s: %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n                      headers[0].GetHash().ToString(),\n+                     prev_header_index ? \"we should not leak the existence of the previous block\" : \"missing prev block\",\n                      headers[0].hashPrevBlock.ToString(),\n                      m_chainman.m_best_header->nHeight,\n                      pfrom.GetId(), nodestate->nUnconnectingHeaders);\n-            // Set hashLastUnknownBlock for this peer, so that if we\n-            // eventually get the headers - even from a different peer -\n-            // we can use this peer to download.\n-            UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n \n-            if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n-                Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+            if (nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+                nodestate->nUnconnectingHeaders++;\n+\n+                // Set hashLastUnknownBlock for this peer, so that if we\n+                // eventually get the headers - even from a different peer -\n+                // we can use this peer to download.\n+                UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n+\n+                if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n+                    Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+                }\n+            } else {\n+                // Same as MaybePunishNodeForBlock for BlockValidationResult::BLOCK_MISSING_PREV\n+                Misbehaving(pfrom.GetId(), 10, \"invalid header received\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876874036",
      "id" : 876874036,
      "in_reply_to_id" : 875944415,
      "line" : 2229,
      "node_id" : "PRRC_kwDOABII5840RAk0",
      "original_commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "original_line" : 2229,
      "original_position" : 83,
      "original_start_line" : 2207,
      "path" : "src/net_processing.cpp",
      "position" : 124,
      "pull_request_review_id" : 978316976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876874036/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2227,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-19T10:10:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876874036",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876875509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876875509"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Put this into its own function `LookupBlockIndexForPeer` and replaced two more uses of `LookupBlockIndex()` that allowed for the same type of fingerprinting.",
      "commit_id" : "d8f3f3785c432e41d0d9b7c98255aba5ad46b999",
      "created_at" : "2022-05-19T10:12:20Z",
      "diff_hunk" : "@@ -2159,34 +2175,38 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock);\n+        bool prev_block_on_known_chain = prev_header_index &&\n+                                         (m_chainman.IsBlockInMainOrBestChain(prev_header_index->GetBlockHash()) ||\n+                                          m_chainman.IsBlockInChainTipSet(prev_header_index->GetBlockHash(), GetChainTipSetForPeer(pfrom)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876875509",
      "id" : 876875509,
      "in_reply_to_id" : 875955684,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840RA71",
      "original_commit_id" : "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "original_line" : 2186,
      "original_position" : 53,
      "original_start_line" : 2183,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 978319008,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876875509/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-19T10:12:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876875509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @jnewbery for the review and for pointing out to me that the same fingerprinting issue exists for blocktxn requests. I added an additional commit for that as well as one more location (receiving invs for blocks). \r\n\r\nI would encourage reviewers to have a look at all uses of  `LookupBlockIndex()` to see if there are more places that allow for this type of fingerprinting. Any use of `LookupBlockIndex()` that results in externally observable behavior changes should be amended.",
      "created_at" : "2022-05-19T10:17:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1131509058",
      "id" : 1131509058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585DcXVC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1131509058/reactions"
      },
      "updated_at" : "2022-05-19T10:17:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1131509058",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876882602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876882602"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could you elaborate how you think the attack would be possible in that case?",
      "commit_id" : "d8f3f3785c432e41d0d9b7c98255aba5ad46b999",
      "created_at" : "2022-05-19T10:20:27Z",
      "diff_hunk" : "@@ -324,6 +324,18 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    struct CompareCBlockIndexRef {\n+        bool operator()(const CBlockIndex& a, const CBlockIndex& b) const { return &a < &b; }\n+    };\n+    /** Protects m_known_chain_tips */\n+    Mutex m_known_chain_tips_mutex;\n+    /**\n+     * Chain tips that this peer knows we have because they send them to us.\n+     * Limited to the number of chain tips in our global block index.\n+     */\n+    std::set<std::reference_wrapper<const CBlockIndex>, CompareCBlockIndexRef>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876882602",
      "id" : 876882602,
      "in_reply_to_id" : 863639865,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840RCqq",
      "original_commit_id" : "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "original_line" : 336,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 978329030,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876882602/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-19T10:20:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876882602",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-05-20T17:53:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1133168753",
      "id" : 1133168753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585Dishx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1133168753/reactions"
      },
      "updated_at" : "2022-05-20T17:53:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1133168753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879162372"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879162372"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    const CBlockIndex* LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\r\n```\r\n\r\npfrom is the old hungarian-style naming where p stood for \"pointer to\".\r\n\r\n(same for the other new functions)",
      "commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "created_at" : "2022-05-23T08:28:16Z",
      "diff_hunk" : "@@ -655,6 +655,26 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);\n+\n+    /** Get the chain tip set for pfrom's network. */\n+    std::set<uint256>& GetChainTipSetForPeerNetwork(const CNode& pfrom) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /**\n+     * Lookup a block index for a peer in a privacy preserving manner.\n+     *\n+     * The block index will only be returned if it exists in our global index\n+     * and if the peer is allowed to know about it.\n+     */\n+    const CBlockIndex* LookupBlockIndexForPeer(const CNode& pfrom, const uint256& hash)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879162372",
      "id" : 879162372,
      "line" : 675,
      "node_id" : "PRRC_kwDOABII5840ZvQE",
      "original_commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "original_line" : 675,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 21,
      "pull_request_review_id" : 981333790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879162372/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-23T09:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879162372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879219198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879219198"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This log can now be misleading if we receive a block INV for a block we already have, but the peer shouldn't know about, since it'll say \"new\".",
      "commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "created_at" : "2022-05-23T09:25:24Z",
      "diff_hunk" : "@@ -3110,7 +3156,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n+                const bool fAlreadyHave = AlreadyHaveBlock(pfrom, inv.hash);\n                 LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879219198",
      "id" : 879219198,
      "line" : 3160,
      "node_id" : "PRRC_kwDOABII5840Z9H-",
      "original_commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "original_line" : 3160,
      "original_position" : 156,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 156,
      "pull_request_review_id" : 981333790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879219198/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-23T09:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879219198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879219764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879219764"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should we just get rid of this function and inline this single line in the only place that `AlreadyHaveBlock()` is called?",
      "commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "created_at" : "2022-05-23T09:25:56Z",
      "diff_hunk" : "@@ -1815,9 +1853,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n     return m_recent_rejects.contains(hash) || m_mempool.exists(gtxid);\n }\n \n-bool PeerManagerImpl::AlreadyHaveBlock(const uint256& block_hash)\n+bool PeerManagerImpl::AlreadyHaveBlock(const CNode& pfrom, const uint256& block_hash)\n {\n-    return m_chainman.m_blockman.LookupBlockIndex(block_hash) != nullptr;\n+    return LookupBlockIndexForPeer(pfrom, block_hash) != nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879219764",
      "id" : 879219764,
      "line" : 1858,
      "node_id" : "PRRC_kwDOABII5840Z9Q0",
      "original_commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "original_line" : 1858,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 69,
      "pull_request_review_id" : 981333790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879219764/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-23T09:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879219764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879633236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879633236"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "How could one have used `BLOCKTXN` for fingerprinting considering that we'd not serve data for blocks with a height difference of <10 to our tip (`MAX_BLOCKTXN_DEPTH`) anyway?",
      "commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "created_at" : "2022-05-23T16:01:00Z",
      "diff_hunk" : "@@ -3305,7 +3305,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n             LOCK(cs_main);\n \n-            const CBlockIndex* pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n+            const CBlockIndex* pindex{LookupBlockIndexForPeer(pfrom, req.blockhash)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879633236",
      "id" : 879633236,
      "line" : 3308,
      "node_id" : "PRRC_kwDOABII5840biNU",
      "original_commit_id" : "da1240c742076e7ee9885849cbbef44f5714b00e",
      "original_line" : 3308,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 982021779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879633236/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-23T16:07:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879633236",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r881526668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881526668"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good that you made me double check, because this can actually not be used for fingerprinting but for a different reason than the one you mentioned.\r\n\r\nIf the requested block is older than `MAX_BLOCKTXN_DEPTH` blocks, we treat it as a normal `getdata` request for that block see: https://github.com/bitcoin/bitcoin/blob/8c721fff3a007db613b22464b40fe7cd6b1ead80/src/net_processing.cpp#L3278-L3287\r\n\r\nSo *i thought* the fingerprint would be:\r\nIf the block exists in the nodes index, it will respond with `blocktxn` or `block` depending on the height.\r\nIf the block does not exist, it won't respond at all.\r\n\r\nHowever, when we process block requests (`ProcessGetBlockData()`) we check for non main chain requests using `BlockRequestAllowed()`, so `GETBLOCKTXN` can not be abused for fingerprinting.\r\nhttps://github.com/bitcoin/bitcoin/blob/8c721fff3a007db613b22464b40fe7cd6b1ead80/src/net_processing.cpp#L1933-L1936\r\n\r\nI will remove the commit.",
      "commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "created_at" : "2022-05-25T11:11:32Z",
      "diff_hunk" : "@@ -3305,7 +3305,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n             LOCK(cs_main);\n \n-            const CBlockIndex* pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n+            const CBlockIndex* pindex{LookupBlockIndexForPeer(pfrom, req.blockhash)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r881526668",
      "id" : 881526668,
      "in_reply_to_id" : 879633236,
      "line" : 3308,
      "node_id" : "PRRC_kwDOABII5840iweM",
      "original_commit_id" : "da1240c742076e7ee9885849cbbef44f5714b00e",
      "original_line" : 3308,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 984632823,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881526668/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-25T11:11:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881526668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r881597258"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881597258"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@mzumsande and I discussed this yesterday and we came to the same conclusion - that this could be used to determine what stale blocks the peer has that are older than 10 blocks but less than 30 days old. That's not a fingerprint attack.\r\n\r\nI think that we can probably just remove the whole logic below \"If an older block is requested...\":\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/b4f686952a60bbadc7ed2250651d0d6af0959f4d/src/net_processing.cpp#L3278-L3289)\r\n\r\nand exit early if the block is deeper than 10 deep.\r\n\r\nThe rationale of using outbound bandwidth as DoS mitigation doesn't seem very good to me, and if we return early because the block is older than 10 deep, then we don't have an expensive disk read (we just look up the block index in the in-memory BlockMap and then return immediately). I think that can be done in a follow-up PR.",
      "commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "created_at" : "2022-05-25T12:34:01Z",
      "diff_hunk" : "@@ -3305,7 +3305,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n             LOCK(cs_main);\n \n-            const CBlockIndex* pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n+            const CBlockIndex* pindex{LookupBlockIndexForPeer(pfrom, req.blockhash)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r881597258",
      "id" : 881597258,
      "in_reply_to_id" : 879633236,
      "line" : 3308,
      "node_id" : "PRRC_kwDOABII5840jBtK",
      "original_commit_id" : "da1240c742076e7ee9885849cbbef44f5714b00e",
      "original_line" : 3308,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 984731553,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881597258/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-25T12:34:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881597258",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@mzumsande The problem with the one-month limit was that it would reject headers that connect to an old fork chain that is longer than 2000 (`MAX_HEADERS_RESULTS`) blocks.\r\nExample:\r\n![block-index(2)](https://user-images.githubusercontent.com/8077169/170252908-772c7ae3-137d-49f6-a2de-7a51920ca3e6.png)\r\nWith the \"one month limit\" approach, if block x is older than one month we reject any headers that build on top of x and re-request the 2000 headers that connect to c, so we can't reorg to the chain of block x if needed.\r\nWith the tip set approach we would also reject and re-request but when the re-requested headers arrive we add the tip of those to the tip set for that network, so further headers that connect to that tip would be not be rejected.\r\n\r\nIf a node restarts and then receives headers that connect to an old fork it would re-download the entire fork and update the tip set accordingly to allow for forks of arbitrary length.",
      "created_at" : "2022-05-25T17:15:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1137582437",
      "id" : 1137582437,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585DziFl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1137582437/reactions"
      },
      "updated_at" : "2022-05-25T17:15:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1137582437",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The problem with the one-month limit was that it would reject headers that connect to an old fork chain that is longer than 2000 (`MAX_HEADERS_RESULTS`) blocks.\r\n\r\nThanks a lot for the explanation, that wasn't clear to me at all! Maybe also link this explanation in the OP so that it becomes clear why you chose the tip set approach over simpler alternatives (that wouldn't work with large reorgs).",
      "created_at" : "2022-05-26T10:14:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1138377193",
      "id" : 1138377193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
      "node_id" : "IC_kwDOABII585D2kHp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138377193/reactions"
      },
      "updated_at" : "2022-05-26T10:14:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138377193",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884724454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884724454"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed it to \"maybe new\", is that better?\r\n\r\nIn this location we are not able to tell from the result of `LookupBlockIndexForPeer` whether the index did not exist or if the peer should not know about it. I could add logging `LookupBlockIndexForPeer`, what do you think about that?",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-30T11:26:22Z",
      "diff_hunk" : "@@ -3110,7 +3156,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n+                const bool fAlreadyHave = AlreadyHaveBlock(pfrom, inv.hash);\n                 LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884724454",
      "id" : 884724454,
      "in_reply_to_id" : 879219198,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840u9Lm",
      "original_commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "original_line" : 3160,
      "original_position" : 156,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 989204898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884724454/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:26:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884724454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884724915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884724915"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Inlined the call to `LookupBlockIndexForPeer`.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-30T11:26:58Z",
      "diff_hunk" : "@@ -1815,9 +1853,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n     return m_recent_rejects.contains(hash) || m_mempool.exists(gtxid);\n }\n \n-bool PeerManagerImpl::AlreadyHaveBlock(const uint256& block_hash)\n+bool PeerManagerImpl::AlreadyHaveBlock(const CNode& pfrom, const uint256& block_hash)\n {\n-    return m_chainman.m_blockman.LookupBlockIndex(block_hash) != nullptr;\n+    return LookupBlockIndexForPeer(pfrom, block_hash) != nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884724915",
      "id" : 884724915,
      "in_reply_to_id" : 879219764,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840u9Sz",
      "original_commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "original_line" : 1858,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 989205572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884724915/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:26:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884724915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884870667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884870667"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                const bool fAlreadyHave{LookupBlockIndexForPeer(pfrom, inv.hash) != nullpt};\r\n```",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-30T14:10:15Z",
      "diff_hunk" : "@@ -3110,8 +3151,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n-                LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\n+                const bool fAlreadyHave = LookupBlockIndexForPeer(pfrom, inv.hash) != nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884870667",
      "id" : 884870667,
      "line" : 3154,
      "node_id" : "PRRC_kwDOABII5840vg4L",
      "original_commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "original_line" : 3154,
      "original_position" : 156,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 156,
      "pull_request_review_id" : 989409348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884870667/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T14:12:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884870667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884893351"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884893351"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Changed it to \"maybe new\", is that better?\r\n\r\nThat seems sufficient here.\r\n\r\n> I could add logging LookupBlockIndexForPeer, what do you think about that?\r\n\r\n`LookupBlockIndexForPeer()` is a utility function which is called from several places, so I think that might be a bit noisy.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-30T14:35:06Z",
      "diff_hunk" : "@@ -3110,7 +3156,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n+                const bool fAlreadyHave = AlreadyHaveBlock(pfrom, inv.hash);\n                 LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884893351",
      "id" : 884893351,
      "in_reply_to_id" : 879219198,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840vman",
      "original_commit_id" : "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "original_line" : 3160,
      "original_position" : 156,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 989440646,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884893351/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T14:35:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884893351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885383393"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885383393"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like this data structure is append-only for each new connection?",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-31T08:57:48Z",
      "diff_hunk" : "@@ -655,6 +655,27 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885383393",
      "id" : 885383393,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII5840xeDh",
      "original_commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "original_line" : 664,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 10,
      "pull_request_review_id" : 990087625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885383393/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T08:57:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885383393",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885444582"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885444582"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It is append only (just like the block index) but not every new connection will add something to it. If a connection from a new network is made, then a new `std::set<uint256>` is added to the map for that network. The `std::set<uint256>` itself is limited to the number of tips in the block index.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-31T09:58:12Z",
      "diff_hunk" : "@@ -655,6 +655,27 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885444582",
      "id" : 885444582,
      "in_reply_to_id" : 885383393,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII5840xs_m",
      "original_commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "original_line" : 664,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 10,
      "pull_request_review_id" : 990172068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885444582/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T09:58:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885444582",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885461034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885461034"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I am mostly asking because I am worried about nodes running OOM after they cycled through connections for a few months",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-31T10:16:21Z",
      "diff_hunk" : "@@ -655,6 +655,27 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885461034",
      "id" : 885461034,
      "in_reply_to_id" : 885383393,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII5840xxAq",
      "original_commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "original_line" : 664,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 10,
      "pull_request_review_id" : 990195238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885461034/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T10:16:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885461034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885529317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885529317"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I had that same worry when writing this code but OOM errors should not be possible unless there is a bug in my implementation.\r\n\r\nThe logic for adding an entry to the `m_chain_tip_sets` map is the same logic that is used for the addr cache, so it can have at most as many entries as the addr cache (ie one for each network/bound address).\r\n\r\nThe chain tips sets are only modified through `ChainstateManager::UpdateChainTipSet` and an entry can only be added to the set if it already exists in the block index. See: https://github.com/dergoegge/bitcoin/blob/0f816ff2e60c5e440543ebb738db29bd285facb0/src/validation.cpp#L5259-L5260\r\nIf the new entry has one of the tips in the tip set as an ancestor then the existing tip is replaced, so there will never be more tips in each tip set than there are tips in the global index.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-31T11:38:19Z",
      "diff_hunk" : "@@ -655,6 +655,27 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885529317",
      "id" : 885529317,
      "in_reply_to_id" : 885383393,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII5840yBrl",
      "original_commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "original_line" : 664,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 10,
      "pull_request_review_id" : 990292117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885529317/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T11:49:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885529317",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885591993"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885591993"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Looks like this data structure is append-only for each new connection?\r\n\r\n@MarcoFalke note that this map is keyed by the unique network id, i.e. a combination of the peer's network and the local bound address/port. For most nodes, there is only one unique network id (ipv4 with a single bound local address), but for nodes running tor/i2p/etc or with multiple -bind addresses, there may be a handful.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-31T12:44:52Z",
      "diff_hunk" : "@@ -655,6 +655,27 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885591993",
      "id" : 885591993,
      "in_reply_to_id" : 885383393,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII5840yQ-5",
      "original_commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "original_line" : 664,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 10,
      "pull_request_review_id" : 990381620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885591993/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T12:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885591993",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885706555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885706555"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Logically, I think this line should be in `UpdatedBlockTip()`?  `ProcessNewBlock()` success does not imply that the new block was accepted as a tip, just that it passed enough checks to be stored to disk.\r\n\r\nThis is probably harmless because of the checks in `UpdateChainTipSet()` to ensure that we're only adding appropriate things anyway, but someone reading the code in the future might wonder why something that operates on chain tips is here and not in `UpdatedBlockTip()`.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-31T14:23:05Z",
      "diff_hunk" : "@@ -2626,7 +2645,11 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n void PeerManagerImpl::ProcessBlock(CNode& node, const std::shared_ptr<const CBlock>& block, bool force_processing)\n {\n     bool new_block{false};\n-    m_chainman.ProcessNewBlock(block, force_processing, &new_block);\n+    if (m_chainman.ProcessNewBlock(block, force_processing, &new_block)) {\n+        LOCK(cs_main);\n+        m_chainman.UpdateChainTipSet(block->GetHash(), GetChainTipSetForPeerNetwork(node));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885706555",
      "id" : 885706555,
      "line" : 2668,
      "node_id" : "PRRC_kwDOABII5840ys87",
      "original_commit_id" : "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "original_line" : 2650,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 47,
      "pull_request_review_id" : 990551171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885706555/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T15:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885706555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885728130"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885728130"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Rather than check `m_best_header`, I think we can permit lookup of any block header that has at least as much work as our tip.  There may be multiple chain tips that have more work than our active tip, and there's not much reason to prefer one to the others.  Using `m_best_header` is implicitly relying on proof-of-work as an our anti-DoS measure, and so we can generalize that to any chain with more work than our tip.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-31T14:41:04Z",
      "diff_hunk" : "@@ -5225,6 +5225,33 @@ ChainstateManager::~ChainstateManager()\n     }\n }\n \n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885728130",
      "id" : 885728130,
      "line" : 5235,
      "node_id" : "PRRC_kwDOABII5840yyOC",
      "original_commit_id" : "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "original_line" : 5235,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 11,
      "pull_request_review_id" : 990551171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885728130/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T15:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885728130",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885763133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885763133"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we add the criteria that a block is observable by a peer if it is an ancestor of `pindexBestKnownBlock` for the peer that is giving it to us, then I think we can go back to keeping the `BlockRequestAllowed()` rule that I believe was originally in this PR, so that old blocks that are off the main chain are generally unobservable.\r\n\r\nThis should allow us to process a large reorg from a peer while providing better fingerprinting protection, by not allowing any blocks that are sufficiently old and off the main chain from being observable by anyone (other than peer that is in the middle of giving such a chain to us).  In particular this prevents fingerprinting a node over time -- how useful that is, if we are using the same network address anyway is admittedly not very clear to me(!), but it just seems like an easier heuristic to understand that we never allow old blocks that are off the main chain to be observable.\r\n\r\nIf we did that, then I'm not sure we need any kind of per-network map for evaluating observability; the rule could be that an entry in our block index is observable by a given peer if:\r\n1) it is on the main chain, or\r\n2) it has at last as much work as our tip, or\r\n3) it forks off the main chain recently (ie the `BlockRequestAllowed` test), or\r\n4) it is an ancestor of the peer's `pindexBestKnownBlock`\r\n\r\nThis seems to be sufficient for anti-fingerprinting while still allowing headers sync.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-31T15:11:26Z",
      "diff_hunk" : "@@ -1809,6 +1818,19 @@ std::set<uint256>& PeerManagerImpl::GetChainTipSetForPeerNetwork(const CNode& no\n     return m_chain_tip_sets.emplace(GetUniqueNetworkID(m_connman, node), std::set<uint256>()).first->second;\n }\n \n+const CBlockIndex* PeerManagerImpl::LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\n+{\n+    const CBlockIndex* index{m_chainman.m_blockman.LookupBlockIndex(hash)};\n+    if (!index) return nullptr;\n+\n+    if (m_chainman.IsBlockInMainOrBestChain(hash) ||\n+        m_chainman.IsBlockInChainTipSet(hash, GetChainTipSetForPeerNetwork(node))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885763133",
      "id" : 885763133,
      "line" : 1826,
      "node_id" : "PRRC_kwDOABII5840y6w9",
      "original_commit_id" : "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "original_line" : 1827,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 26,
      "pull_request_review_id" : 990551171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885763133/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T15:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885763133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885995834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885995834"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree that using `BlockRequestAllowed` for this would be better as it comes with less complexity than what is in this PR. In practice, it would probably also always work out since we don't really expect large reorgs (1000s of blocks). However, I don't see how using `pindexBestKnownBlock` would solve the issues with that approach. `pindexBestKnownBlock` is of type `const CBlockIndex*`, so it can only point to something that already exists in our block index. We have to accept a header from a peer for us to set `pindexBestKnownBlock`.\r\n\r\nThe description in [this gist](https://gist.github.com/dergoegge/e8748c00ffe20b31108c95d88ba0ac73) should make it clear what the actual problem was. It is quite the edge case but I don't know how to get around it without keeping track of which chain tip a peer is allowed to build on. In the gist's example, `pindexBestKnownBlock` would still be set to block \"z\" for the peer that is sending us headers building on block \"x\", so the ancestor check for it does not seem to work here.\r\n\r\n> In particular this prevents fingerprinting a node over time \r\n\r\nWe could also reset the chain tip set once per month (or every n blocks) to achieve this.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-31T18:22:48Z",
      "diff_hunk" : "@@ -1809,6 +1818,19 @@ std::set<uint256>& PeerManagerImpl::GetChainTipSetForPeerNetwork(const CNode& no\n     return m_chain_tip_sets.emplace(GetUniqueNetworkID(m_connman, node), std::set<uint256>()).first->second;\n }\n \n+const CBlockIndex* PeerManagerImpl::LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\n+{\n+    const CBlockIndex* index{m_chainman.m_blockman.LookupBlockIndex(hash)};\n+    if (!index) return nullptr;\n+\n+    if (m_chainman.IsBlockInMainOrBestChain(hash) ||\n+        m_chainman.IsBlockInChainTipSet(hash, GetChainTipSetForPeerNetwork(node))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885995834",
      "id" : 885995834,
      "in_reply_to_id" : 885763133,
      "line" : 1826,
      "node_id" : "PRRC_kwDOABII5840zzk6",
      "original_commit_id" : "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "original_line" : 1827,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 26,
      "pull_request_review_id" : 990957943,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885995834/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T18:22:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885995834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r886012370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886012370"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah right, if the peer's best known block has more work than the last header we receive from them when we're downloading headers towards their new tip, then we won't reset it until we get to a header that has more work.  So you're right, what I wrote doesn't work.\r\n\r\nI think we could still get the job done with just a small amount of per-peer state.  If we stored the last locator we sent a peer in a getheaders message, then in theory we should permit observability of any header referenced in the locator by the peer that we sent the message to.  The downside to trying that now is that currently we don't limit the number of simultaneous in-flight getheaders messages, so it is slightly messy to keep track of (potentially) multiple locators.  But given that we currently generate our locators as being ancestors of some last header, perhaps it would be enough to essentially keep a set of chain tips per peer that represent the last header of some outstanding getheaders message, and then remove from that set after some timeout or after a getheaders response comes in that builds off such a tip?\r\n\r\nTypically you'd expect the set to be empty or have one entry in it, but if somehow you triggered multiple outstanding getheaders messages, you'd be able to deal with it.  (I actually have a branch I'm working on that would try to prevent sending multiple getheaders simultaneously to a peer, perhaps we can discuss offline sometime.)\r\n\r\nIf the approach I'm suggesting is too complex for now, I also think it would be ok to proceed along the lines of what you have, which seems conceptually to be a strict improvement, and we could revisit this logic down the road.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-05-31T18:38:30Z",
      "diff_hunk" : "@@ -1809,6 +1818,19 @@ std::set<uint256>& PeerManagerImpl::GetChainTipSetForPeerNetwork(const CNode& no\n     return m_chain_tip_sets.emplace(GetUniqueNetworkID(m_connman, node), std::set<uint256>()).first->second;\n }\n \n+const CBlockIndex* PeerManagerImpl::LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\n+{\n+    const CBlockIndex* index{m_chainman.m_blockman.LookupBlockIndex(hash)};\n+    if (!index) return nullptr;\n+\n+    if (m_chainman.IsBlockInMainOrBestChain(hash) ||\n+        m_chainman.IsBlockInChainTipSet(hash, GetChainTipSetForPeerNetwork(node))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r886012370",
      "id" : 886012370,
      "in_reply_to_id" : 885763133,
      "line" : 1826,
      "node_id" : "PRRC_kwDOABII5840z3nS",
      "original_commit_id" : "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "original_line" : 1827,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 26,
      "pull_request_review_id" : 990980121,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886012370/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T18:38:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886012370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888794337"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888794337"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This sounds good to me, however I am not sure if it should replace the `m_best_header` ancestor check or if it should be added as a third check.\r\n\r\nAncestors of `m_best_header` (or any header that has more work than the active tip) could have less work than the active tip and therefore simply doing the \"more work\" check would lead to `IsBlockInMainOrBestChain` returning false for them. Doing the ancestor check for all headers that have more work than the tip would be ideal but that does not seem easily doable atm.\r\n\r\nMaybe we should use `BlockRequestAllowed` instead and get rid of `IsBlockInMainOrBestChain`. What do you think of that?",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T09:44:28Z",
      "diff_hunk" : "@@ -5225,6 +5225,33 @@ ChainstateManager::~ChainstateManager()\n     }\n }\n \n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888794337",
      "id" : 888794337,
      "in_reply_to_id" : 885728130,
      "line" : 5235,
      "node_id" : "PRRC_kwDOABII5840-ezh",
      "original_commit_id" : "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "original_line" : 5235,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 11,
      "pull_request_review_id" : 994696964,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888794337/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T09:44:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888794337",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888813940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888813940"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`UpdatedBlockTip()` does not convey any information about the origin (the peer that sent us the block) of the new tip which makes it impossible to update the tip set without storing that information separately. `mapBlockSource` would work for that, if we wouldn't remove elements from it in `BlockChecked`.\r\n\r\nA slight improvement could be to move the `UpdateChainTipSet()` call a couple lines down into `if(new_block)`?\r\n\r\nThere are also two more calls to `UpdateChainTipSet()` (when receiving headers and compact blocks) that could not be moved into `UpdatedBlockTip()`, since `UpdatedBlockTip()` only fires for full blocks but we need to update the tip set if we only receive headers as well.\r\n\r\n",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T10:11:40Z",
      "diff_hunk" : "@@ -2626,7 +2645,11 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n void PeerManagerImpl::ProcessBlock(CNode& node, const std::shared_ptr<const CBlock>& block, bool force_processing)\n {\n     bool new_block{false};\n-    m_chainman.ProcessNewBlock(block, force_processing, &new_block);\n+    if (m_chainman.ProcessNewBlock(block, force_processing, &new_block)) {\n+        LOCK(cs_main);\n+        m_chainman.UpdateChainTipSet(block->GetHash(), GetChainTipSetForPeerNetwork(node));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888813940",
      "id" : 888813940,
      "in_reply_to_id" : 885706555,
      "line" : 2668,
      "node_id" : "PRRC_kwDOABII5840-jl0",
      "original_commit_id" : "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "original_line" : 2650,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 47,
      "pull_request_review_id" : 994723325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888813940/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T10:11:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888813940",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888901612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888901612"
         }
      },
      "author_association" : "MEMBER",
      "body" : ">  perhaps it would be enough to essentially keep a set of chain tips per peer that represent the last header of some outstanding getheaders message\r\n\r\nI like this idea and maybe some of the current logic in this PR could be reused for that (mainly the chain tip set logic). But its not just headers that allowed for this fingerprinting, there are two more uses of `LookupBlockindex` that are problematic. i.e. when receiving invs for blocks and receiving compact blocks, see [here](https://github.com/bitcoin/bitcoin/blob/2cf8c2caea90d9a3c314ba5f88bb76b3b5273d62/src/net_processing.cpp#L3113-L3124) and [here](https://github.com/bitcoin/bitcoin/blob/2cf8c2caea90d9a3c314ba5f88bb76b3b5273d62/src/net_processing.cpp#L3601).\r\n\r\n> If the approach I'm suggesting is too complex for now, I also think it would be ok to proceed along the lines of what you have, which seems conceptually to be a strict improvement, and we could revisit this logic down the road.\r\n\r\nYea, i would prefer keeping it as is and maybe revisit later on if we find an even better solution. ",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T12:34:21Z",
      "diff_hunk" : "@@ -1809,6 +1818,19 @@ std::set<uint256>& PeerManagerImpl::GetChainTipSetForPeerNetwork(const CNode& no\n     return m_chain_tip_sets.emplace(GetUniqueNetworkID(m_connman, node), std::set<uint256>()).first->second;\n }\n \n+const CBlockIndex* PeerManagerImpl::LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\n+{\n+    const CBlockIndex* index{m_chainman.m_blockman.LookupBlockIndex(hash)};\n+    if (!index) return nullptr;\n+\n+    if (m_chainman.IsBlockInMainOrBestChain(hash) ||\n+        m_chainman.IsBlockInChainTipSet(hash, GetChainTipSetForPeerNetwork(node))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888901612",
      "id" : 888901612,
      "in_reply_to_id" : 885763133,
      "line" : 1826,
      "node_id" : "PRRC_kwDOABII5840-4_s",
      "original_commit_id" : "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "original_line" : 1827,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 26,
      "pull_request_review_id" : 994849550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888901612/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T12:34:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888901612",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888925363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888925363"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Yea, i would prefer keeping it as is and maybe revisit later on if we find an even better solution.\r\n\r\nAgreed, the more I think about this the more I'm concluding that the improvements I'm thinking of would be much easier if we got to a place where we've improved the way we send getheaders messages (so that we don't have more than one in flight to a peer).  I think that would help with the situations where we're in the middle of headers sync and somehow receive an INV or a compact block, and have to reason about whether the header in question should be observable.  (The easiest answer, I think, is that if we're in the middle of headers sync we shouldn't be issuing a new getheaders in the first place!)\r\n\r\nI guess the only downside is that I do think the per-network visibility rules introduced here may not be necessary in the future, but I think that's okay on the whole even if it turned out to be the case, as it would still be an improvement for now.  I'll try to focus the remainder of my review on this particular approach!  Thanks for the discussion.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T13:04:53Z",
      "diff_hunk" : "@@ -1809,6 +1818,19 @@ std::set<uint256>& PeerManagerImpl::GetChainTipSetForPeerNetwork(const CNode& no\n     return m_chain_tip_sets.emplace(GetUniqueNetworkID(m_connman, node), std::set<uint256>()).first->second;\n }\n \n+const CBlockIndex* PeerManagerImpl::LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\n+{\n+    const CBlockIndex* index{m_chainman.m_blockman.LookupBlockIndex(hash)};\n+    if (!index) return nullptr;\n+\n+    if (m_chainman.IsBlockInMainOrBestChain(hash) ||\n+        m_chainman.IsBlockInChainTipSet(hash, GetChainTipSetForPeerNetwork(node))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888925363",
      "id" : 888925363,
      "in_reply_to_id" : 885763133,
      "line" : 1826,
      "node_id" : "PRRC_kwDOABII5840--yz",
      "original_commit_id" : "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "original_line" : 1827,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 26,
      "pull_request_review_id" : 994886696,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888925363/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T13:04:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888925363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888960524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888960524"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is this function in `ChainstateManager`, and why are we passing in hashes rather than `const CBlockIndex* ` objects?  Operating on existing `const CBlockIndex*` entries (ie to find ancestors and look at values like the height) is permitted without holding `cs_main`, so nothing in here strikes me as needing to be in `validation.cpp`.  \r\n\r\nInstead I think we could just make this part of `net_processing`'s `PeerManagerImpl`, which makes sense to me as this is logic in support of something that doesn't need to be viewable outside of our net processing code.\r\n\r\nAlso the `chain_tips` set could be a set of pointers, rather than a set of uint256's, which is slightly better.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T13:45:42Z",
      "diff_hunk" : "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888960524",
      "id" : 888960524,
      "line" : 5255,
      "node_id" : "PRRC_kwDOABII5840_HYM",
      "original_commit_id" : "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "original_line" : 5228,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 994936772,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888960524/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T14:30:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888960524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888963248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888963248"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It may be better to not guard this by `cs_main`, to avoid unnecessary lock contention.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T13:48:50Z",
      "diff_hunk" : "@@ -655,6 +655,18 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888963248",
      "id" : 888963248,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII5840_ICw",
      "original_commit_id" : "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "original_line" : 664,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 10,
      "pull_request_review_id" : 994936772,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888963248/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T14:30:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888963248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888966079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888966079"
         }
      },
      "author_association" : "MEMBER",
      "body" : "On reflection, perhaps the best thing is to leave this as-is and just add a comment mentioning that while this blockhash may not be a chain tip, it's possible that a new header was added and so we invoke `UpdateChainTipSet` anyway to ensure that the header would be observable by the peer if a chain were to be built on top of it (and ancestors of existing tips are filtered anyway).",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T13:52:05Z",
      "diff_hunk" : "@@ -2626,7 +2645,11 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n void PeerManagerImpl::ProcessBlock(CNode& node, const std::shared_ptr<const CBlock>& block, bool force_processing)\n {\n     bool new_block{false};\n-    m_chainman.ProcessNewBlock(block, force_processing, &new_block);\n+    if (m_chainman.ProcessNewBlock(block, force_processing, &new_block)) {\n+        LOCK(cs_main);\n+        m_chainman.UpdateChainTipSet(block->GetHash(), GetChainTipSetForPeerNetwork(node));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888966079",
      "id" : 888966079,
      "in_reply_to_id" : 885706555,
      "line" : 2668,
      "node_id" : "PRRC_kwDOABII5840_Iu_",
      "original_commit_id" : "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "original_line" : 2650,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 47,
      "pull_request_review_id" : 994936772,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888966079/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T14:30:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888966079",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888969003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888969003"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Similar to my other comment, I think this function makes more sense in `net_processing.cpp`.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T13:55:23Z",
      "diff_hunk" : "@@ -5225,6 +5225,33 @@ ChainstateManager::~ChainstateManager()\n     }\n }\n \n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888969003",
      "id" : 888969003,
      "line" : 5228,
      "node_id" : "PRRC_kwDOABII5840_Jcr",
      "original_commit_id" : "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "original_line" : 5228,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 4,
      "pull_request_review_id" : 994936772,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888969003/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T14:30:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888969003",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888975716"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888975716"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since this `getheaders` message uses `m_best_header` for the locator, it's possible that before we get the response, that `m_best_header` might change to be a different chain tip (if we learn of a more work headers chain from another peer in between).\r\n\r\nIn that situation, we might get a response from our peer that would appear to be trying to observe a header that is not permitted, and thus trigger another `getheaders` message, which would be unfortunate.\r\n\r\nI think to avoid this, we need to explicitly add the chain tip we're building a locator from to the chain tip set for a peer network whenever we send out a getheaders. (This would cover the cases where we send a getheaders based on our active chain tip as well, in the event that we reorged away from it.)",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T14:02:52Z",
      "diff_hunk" : "@@ -2217,34 +2239,36 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        if (!LookupBlockIndexForPeer(pfrom, headers.front().hashPrevBlock)) {\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888975716",
      "id" : 888975716,
      "line" : 2242,
      "node_id" : "PRRC_kwDOABII5840_LFk",
      "original_commit_id" : "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "original_line" : 2248,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 57,
      "pull_request_review_id" : 994936772,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888975716/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T14:30:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888975716",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888982320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888982320"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Gating the logic below only on whether the header lookup succeeds means, in particular, that if a peer sends us a full headers message that doesn't connect to our block index, then we'll issue a getheaders message in response to try again.  While we also will assign DoS points, this is a behavior change that I'm not sure is necessary?  In the event a peer is giving us full headers that don't connect, they are likely broken, and going into an infinite loop of 2000 headers being dumped at us would be unfortunate (ie if it was with a peer that had the noban permission set).\r\n\r\nI think it would be better to only request more headers if it looks like a BIP 130 unconnecting headers situation, and otherwise just assign DoS points.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T14:10:37Z",
      "diff_hunk" : "@@ -2217,34 +2239,36 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        if (!LookupBlockIndexForPeer(pfrom, headers.front().hashPrevBlock)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888982320",
      "id" : 888982320,
      "line" : 2241,
      "node_id" : "PRRC_kwDOABII5840_Msw",
      "original_commit_id" : "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "original_line" : 2247,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 56,
      "pull_request_review_id" : 994936772,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888982320/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T14:30:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888982320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888996110"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888996110"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was thinking about why we have this function, and I think it's for two reasons:\r\n1) We may have used our current active chain or m_best_header in generating a locator that went out in a getheaders message to this peer.\r\n2) We want the common case of lookups into a high-work chain (ie where proof-of-work is used to prevent inexpensive fingerprinting) to work wherever possible, without an extra round trip.\r\n\r\nFor case 1), I mentioned elsewhere that I think we need to explicitly insert (or otherwise track) the chain tips we send in a locator into the peer's network's chain tip set, or else we could get a failure to process a response if we reorg in between (or if m_best_header updates to an alternate fork).\r\n\r\nFor case 2), I think we want to generally be permissive for anything that would be hard for an attacker to use to cheaply fingerprint us, but if we get everything else right then we shouldn't need to catch every case.  For instance I think if there's some high-work header that no one on our particular network has given us and that we haven't used in a locator, that there's no reason we need to allow it to be observable immediately (though of course there's also no harm in making it observable).\r\n\r\nTo that end, I think this code is fine as-is (perhaps a comment could be added  \r\nto further explain the thinking here).  If we wanted to make slight improvements, we could consider things like looking at the work on the header, and if it has more work than our tip we can make it observable, or we could go further and track all chain tips that have more work than our tip (not just the one cached in m_best_header) and compare against their ancestors, etc.  However, none of that seems necessary to me right now for reasonably efficient performance.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T14:25:33Z",
      "diff_hunk" : "@@ -5225,6 +5225,33 @@ ChainstateManager::~ChainstateManager()\n     }\n }\n \n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888996110",
      "id" : 888996110,
      "in_reply_to_id" : 885728130,
      "line" : 5235,
      "node_id" : "PRRC_kwDOABII5840_QEO",
      "original_commit_id" : "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "original_line" : 5235,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 11,
      "pull_request_review_id" : 994936772,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888996110/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T14:30:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888996110",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889011430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889011430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it'd be much better if net processing wasn't holding pointers into validation's internal data. We're moving in a direction where the validation engine is more modularized and isolated from the rest of the application (eg see https://github.com/bitcoin/bitcoin/issues/24303), so we should be reducing the places where other components hold pointers into validation's data.\r\n\r\nI think it might make sense eventually for validation to prune out stale block headers from the block index that are older than a certain age. That's not currently possible because although the ChainstateManager owns the CBlockIndex objects (through BlockManager.m_block_index), other components may be holding raw pointers to that data.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T14:42:44Z",
      "diff_hunk" : "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889011430",
      "id" : 889011430,
      "in_reply_to_id" : 888960524,
      "line" : 5255,
      "node_id" : "PRRC_kwDOABII5840_Tzm",
      "original_commit_id" : "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "original_line" : 5228,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 995012275,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889011430/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T14:42:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889011430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889022409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889022409"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this logic makes sense here -- I don't think we'll be removing the concept of what a CBlockIndex is from net_processing, certainly not anytime soon and probably not ever, particularly with regards to the fundamental data structure of what a headers chain is, and the idea of what proof-of-work is (which is used implicitly as anti-DoS in many places, and likely more in the future).\r\n\r\nSo I'd say that operations that exist only on CBlockIndex objects don't need to be tied to validation, as this interface is exposed to our whole codebase right now.\r\n\r\nTo your point about pruning, it doesn't seem plausible to me to even consider pruning until we do a lot more work on what parts of the block index are exposed, and in particular, to allow net_processing to communicate to the hypothetical block index pruner which block index entries shouldn't be pruned (because they may be needed in a headers sync, for example).  That is so far away that trying to design for that now seems impractical, and in the meantime we would be introducing additional code complexity in logic (like in this PR) where we don't take advantage of the fact that these entries persist once inserted -- which in turn raises questions around whether headers sync is guaranteed to work if a header were to be pruned from the index in the middle of that process.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T14:55:18Z",
      "diff_hunk" : "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889022409",
      "id" : 889022409,
      "in_reply_to_id" : 888960524,
      "line" : 5255,
      "node_id" : "PRRC_kwDOABII5840_WfJ",
      "original_commit_id" : "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "original_line" : 5228,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 995027847,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889022409/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T14:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889022409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889065592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889065592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we're just going to fundamentally disagree on this point. An object should never hold a raw pointer to another component's internal data. It's unsafe and leads to all kinds of data corruption, use-after-free, etc bugs.\r\n\r\nI understand that Bitcoin Core has historically used lots of raw pointers to memory not owned by the object holding the pointer, and that many examples still exist. I don't think that's a good reason to add another instance. Projects accumulate technical debt by thousands of incremental changes. We should always try to avoid adding more unsafe code, unless there's a very very good reason to go in the other direction.\r\n\r\nTo your point on code complexity, that's also subjective. I've reviewed both versions of this PR (with the logic in net_processing and validation), and this version seems no more complex to me. In fact, keeping data as private as possible within components and defining interfaces to access the minimal information seems to me to reduce complexity over the long run.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T15:45:11Z",
      "diff_hunk" : "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889065592",
      "id" : 889065592,
      "in_reply_to_id" : 888960524,
      "line" : 5255,
      "node_id" : "PRRC_kwDOABII5840_hB4",
      "original_commit_id" : "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "original_line" : 5228,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 995089433,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889065592/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T15:45:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889065592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889223368"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889223368"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you're right that we're going to disagree, but for a topic like this -- of where in our code base it is permitted to access `CBlockIndex*` objects and their member functions, and where it's permitted to use and store these objects while not holding a lock -- the project needs to make a decision about what our architecture looks like, and arrive at a common understanding (even if some might disagree on what the optimal architecture would be).  So towards that end, I will try to explain further why I think it's illogical to use general arguments around \"holding raw pointers to another component's data\" as a reason to have this code live in validation specifically for the functions introduced in this PR.\r\n\r\nThese functions -- `UpdateChainTipSet()`, `IsBlockInMainOrBestChain()`, and `IsBlockInChainTipSet()` -- seem to do the following:\r\n1) look up block index entries in our blockmanager\r\n2) look up our current chain tip (ActiveChain.Tip())\r\n3) look up m_best_header (the most-work header we know of)\r\n4) invoke public functions on block index entries (namely, `GetAncestor()`)\r\n\r\nOther than the block index and ActiveChain.Tip(), no chainstate-specific state is accessed and (importantly!) no consensus validation of any sort is performed in these functions.  These functions do not change any state inside of validation either.\r\n\r\nSo to argue that these functions do not belong in `net_processing`, I think you'd have to argue that some of those operations should be private to the validation code.  It is difficult for me to see for which of those that should be the case, because I don't think `net_processing` would work at all without being able to look at the current tip (and see how much work it has, compared to the work of other headers a peer might be announcing), or look up block index entries, or know what the most work headers chain is (really this is a value that only exists for net_processing in the first place, so that we can save time when performing headers sync on startup).  I'd add that the public functions of `CBlockIndex` would seem to exist precisely so that they could be invoked by other modules (otherwise they would not be public).\r\n\r\nSo the only remaining point that I think you are making which we could consider is whether caching CBlockIndex pointers after lookup and using them without holding `cs_main` is harmful.  If that were possibly the case, then our validation interface callbacks -- which pass `const CBlockIndex*` arguments without holding `cs_main` -- would be broken.  All of the places in our code where we look up a block index entry and then release `cs_main` and continue to operate on it -- including in code touched by this PR (see `ProcessHeadersMessage`) -- would also be broken.  Never mind the countless other places in at least `net_processing` where we cache pointers to block index entries, such as in `CNodeState`.\r\n\r\nComing back to the particular functions introduced here: the data structures passed around to these functions (the sets of chain tips that are being processed) are not even a validation data structure.  They are created in this PR and are owned by `net_processing`.  The semantics of what goes in them is specified by net_processing.  Having checks on them happen in validation is moving `net_processing` logic into validation -- a layer violation.\r\n\r\nIn summary, this general philosophical claim that using CBlockIndex* pointers in `net_processing` is dangerous strikes me as unhelpful and out of sync with how our code is designed.  And it's hard for me to see what operations these particular functions do that we don't want `net_processing` to be able to do generally, while it also seems like adding a `net_processing` specific function to validation is leaking implementation specifics outside their natural scope.",
      "commit_id" : "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "created_at" : "2022-06-03T18:22:57Z",
      "diff_hunk" : "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889223368",
      "id" : 889223368,
      "in_reply_to_id" : 888960524,
      "line" : 5255,
      "node_id" : "PRRC_kwDOABII5841AHjI",
      "original_commit_id" : "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "original_line" : 5228,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 995307628,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889223368/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-03T18:22:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889223368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
