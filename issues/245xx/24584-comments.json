[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828016527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828016527"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This assumes that `OUTPUT_TYPES` is sorted by age? Maybe add a comment there to ensure this doesn't break?\r\n\r\nAlso, this is the wrong indentation? Maybe run clang-format?",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T13:35:04Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+\tfor (const OutputType& type : OUTPUT_TYPES) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828016527",
      "id" : 828016527,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584xWoeP",
      "original_commit_id" : "312d9347b3e5e611ab28c1307d73345576dc4d7d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 911639998,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828016527/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-16T13:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828016527",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think an argument against this change is that any privacy leaking tx could very well be a coin-join between two wallets that use different output types. Though, I don't think any such coin-join software exists today, so until then it probably makes sense to use inputs of a single type. \r\n\r\nI agree, until mixed inputs in transactions are more common, this change should improve user privacy.\r\n\r\n> https://github.com/bitcoin/bitcoin/pull/24362#pullrequestreview-909069657 mentions that legacy inputs could preferably be used during low-fee periods to reduce the fees paid by the user. Though, if https://github.com/bitcoin/bitcoin/pull/24362 is merged, then it would probably not be worth it to optimize for fees.\r\n\r\nI prefer this approach over #24362 in order to keep the privacy benefits of matching change output addresses for all address types. I also see this as a small first step, where we can optimize for fees in a later PR if it is deemed useful/worth it. ",
      "created_at" : "2022-03-16T13:59:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1069161907",
      "id" : 1069161907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII584_uh2z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069161907/reactions"
      },
      "updated_at" : "2022-03-16T13:59:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069161907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828065439"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828065439"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good catch, fixed the formatting! also added a comment re: output_types",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T14:19:48Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+\tfor (const OutputType& type : OUTPUT_TYPES) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828065439",
      "id" : 828065439,
      "in_reply_to_id" : 828016527,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584xW0af",
      "original_commit_id" : "312d9347b3e5e611ab28c1307d73345576dc4d7d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 911711048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828065439/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-16T14:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828065439",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Very exciting, I'm glad you're working on this. I was just discussing this idea with people yesterday.\r\n\r\nA couple comments on the approach described in the OP:\r\n- I noticed that you suggest preferring the spending of older types and compare it to spending newer types preferentially. While I do agree that the old types are the ones we'd want to get rid off rather, I am not sure this would lead to the optimal outcome. I would suggest running coin selection for each of the OutputGroup sets in parallel and then choosing the input set per the waste metric. Due to how the waste metric works, I'd expect this to lead to the older larger output types getting preferentially spent at lower feerates (and in the current feerate environment, usually first). What are your thoughts on that?\r\n- Regarding splitting the OutputGroups: since each OutputGroup will only have one type, you could just get the available set once and subdivide it from there to run the coin selection in parallel. Would that perhaps be easier?\r\n- CoinSelection is pretty fast, with the exception of Knapsack, so running it on subsets of the UTXO pool shouldn't be a huge issue, running it on all subsets in parallel may be even faster than running it on the whole UTXO pool once since the complexity of each subset would be much smaller.\r\n\r\nCeterum censeo Knapsackinem esse delendam.",
      "created_at" : "2022-03-16T14:20:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1069182464",
      "id" : 1069182464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII584_um4A",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069182464/reactions"
      },
      "updated_at" : "2022-03-16T14:20:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069182464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "force pushed to fix clang-formatting and add comments per @MarcoFalke 's suggestion. can be verified with `git range-diff master f900010 fdf1fa5`",
      "created_at" : "2022-03-16T14:20:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1069183242",
      "id" : 1069183242,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII584_unEK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069183242/reactions"
      },
      "updated_at" : "2022-03-16T14:30:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069183242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828078777"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828078777"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe also mention the places that require it (CreateTransactionInternal), so that when those go away, the comment can go away, too?",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T14:31:27Z",
      "diff_hunk" : "@@ -22,6 +22,7 @@ enum class OutputType {\n     BECH32M,\n };\n \n+// Keep output types sorted by age, with older types first",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828078777",
      "id" : 828078777,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584xW3q5",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 25,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/outputtype.h",
      "position" : 4,
      "pull_request_review_id" : 911730230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828078777/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-16T18:41:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828078777",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828302619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828302619"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In b32b52c3e7360ecb30e1a46dfa06669bc4fcd4b3 \"wallet: avoid mixing ouput types in coin selection\"\r\n\r\nThis is not guaranteed to be true. We could have a P2SH multisig and that would be `LEGACY`.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T18:00:35Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828302619",
      "id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xXuUb",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 912059789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828302619/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T18:07:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828302619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828330729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828330729"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "is there a cleaner way to go map a `COutput` to an `OutputType`? adding lots of if/else checks to go from a `TxoutType` to an `OutputType` seems clunky to me",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T18:36:10Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828330729",
      "id" : 828330729,
      "in_reply_to_id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xX1Lp",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 912098744,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828330729/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T18:36:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828330729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828335217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828335217"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is there any need to map to output type? Why not use `TxoutType` directly?",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T18:41:36Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828335217",
      "id" : 828335217,
      "in_reply_to_id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xX2Rx",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 911730230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828335217/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T18:41:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828335217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828337242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828337242"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Is there any need to map to output type? Why not use `TxoutType` directly?\r\n\r\nYes, `P2SH_SEGWIT` is distinct from other P2SH which would be legacy.\r\n\r\n> is there a cleaner way to go map a `COutput` to an `OutputType`? adding lots of if/else checks to go from a `TxoutType` to an `OutputType` seems clunky to me\r\n\r\nI don't think there exists one yet.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T18:44:03Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828337242",
      "id" : 828337242,
      "in_reply_to_id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xX2xa",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 912107577,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828337242/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T18:44:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828337242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828343513"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828343513"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I mean multisig P2SH should not be mixed with legacy either? Mapping to `OutputType` can't fix this. In fact it will probably break anyway when the wallet can spend segwit v2 outputs.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T18:51:46Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828343513",
      "id" : 828343513,
      "in_reply_to_id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xX4TZ",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 912116249,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828343513/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T18:51:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828343513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I would suggest running coin selection for each of the OutputGroup sets in parallel and then choosing the input set per the waste metric. Due to how the waste metric works, I'd expect this to lead to the older larger output types getting preferentially spent at lower feerates (and in the current feerate environment, usually first). What are your thoughts on that?\r\n\r\nThis makes a lot of sense. By running coin selection on each OutputGroup set you are preserving privacy by avoiding mixing the inputs, but also still choosing the best spend w.r.t to fees. Running them in parallel (as opposed to sequentially) also helps speed things up (which you also mentioned).\r\n\r\nI'll work on refactoring to implement this.\r\n\r\n",
      "created_at" : "2022-03-16T18:52:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1069474564",
      "id" : 1069474564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII584_vuME",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069474564/reactions"
      },
      "updated_at" : "2022-03-16T18:52:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069474564",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828357408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828357408"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We could perhaps amend `availableCoins` to just return the outputs grouped by type already. E.g. `availableCoins` could be a struct with a vector for each an output type, and a member `all` that returns the four vectors concatenated.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T19:08:56Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;\n+            } else if (type == TxoutType::PUBKEYHASH) {\n+                output_type = OutputType::LEGACY;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828357408",
      "id" : 828357408,
      "line" : 200,
      "node_id" : "PRRC_kwDOABII584xX7sg",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 200,
      "original_position" : 24,
      "original_start_line" : 189,
      "path" : "src/wallet/spend.cpp",
      "position" : 24,
      "pull_request_review_id" : 912136611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828357408/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 189,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T20:28:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828357408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828409065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828409065"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's unlikely that multisig things would actually be mixed with single key things, but I think it would be incorrect to group P2SH with p2sh-segwit. Conceivably, the same multisig could have been p2sh, then upgraded to p2sh-segwit, and then to bech32. In that case, it would still be legacy, p2sh-segwit, and bech32.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T20:16:34Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828409065",
      "id" : 828409065,
      "in_reply_to_id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xYITp",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 912209235,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828409065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T20:16:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828409065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24699](https://github.com/bitcoin/bitcoin/pull/24699) (wallet: Improve AvailableCoins performance by reducing duplicated operations by achow101)\n* [#24661](https://github.com/bitcoin/bitcoin/pull/24661) (refactor: Use clang-tidy syntax for C++ named arguments by fanquake)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-03-17T19:22:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1071243869",
      "id" : 1071243869,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII584_2eJd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1071243869/reactions"
      },
      "updated_at" : "2022-03-29T16:28:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1071243869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r830424080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830424080"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This assumes there is a strict preference for newer UTXO types. Rather, it should try to prefer using UTXOs that are not the user's preferred address type(s).",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-19T01:44:05Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+        // This takes advantange of the fact that OUTPUT_TYPES is already sorted by age (LEGACY, P2SH, BECH32, BECH32M)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r830424080",
      "id" : 830424080,
      "line" : 790,
      "node_id" : "PRRC_kwDOABII584xf0QQ",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 52,
      "pull_request_review_id" : 914956407,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830424080/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-19T01:44:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830424080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-22T07:05:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1074807912",
      "id" : 1074807912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585AEERo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1074807912/reactions"
      },
      "updated_at" : "2022-03-22T07:05:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1074807912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r832436604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832436604"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the amended approach is now that it would pick the input set with the best waste metric score from all SelectionResults of running coin selection on the separate output types.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-22T17:22:43Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+        // This takes advantange of the fact that OUTPUT_TYPES is already sorted by age (LEGACY, P2SH, BECH32, BECH32M)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r832436604",
      "id" : 832436604,
      "in_reply_to_id" : 830424080,
      "line" : 790,
      "node_id" : "PRRC_kwDOABII584xnfl8",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 52,
      "pull_request_review_id" : 917608420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832436604/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-22T17:22:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832436604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r832440386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832440386"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "sorry, forgot to respond to this! yes, rather than rely on a forced ordering of old to new, I'm implementing @Xekyo 's suggestion of running coin selection on each output group and then picking the solution with the best waste metric. If no solution is found, then run coin selection over all coins (current behavior).",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-22T17:26:32Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+        // This takes advantange of the fact that OUTPUT_TYPES is already sorted by age (LEGACY, P2SH, BECH32, BECH32M)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r832440386",
      "id" : 832440386,
      "in_reply_to_id" : 830424080,
      "line" : 790,
      "node_id" : "PRRC_kwDOABII584xnghC",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 52,
      "pull_request_review_id" : 917613804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832440386/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-22T17:26:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832440386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836366695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836366695"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done! ",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T12:20:24Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;\n+            } else if (type == TxoutType::PUBKEYHASH) {\n+                output_type = OutputType::LEGACY;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836366695",
      "id" : 836366695,
      "in_reply_to_id" : 828357408,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x2fFn",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 200,
      "original_position" : 24,
      "original_start_line" : 189,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 923057173,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836366695/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T12:20:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836366695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836367260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836367260"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've updated it now to not force an ordering on OutputType.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T12:21:08Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+        // This takes advantange of the fact that OUTPUT_TYPES is already sorted by age (LEGACY, P2SH, BECH32, BECH32M)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836367260",
      "id" : 836367260,
      "in_reply_to_id" : 830424080,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x2fOc",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 923058023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836367260/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T12:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836367260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836371561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836371561"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "removed, now that it is not dependent on ordering",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T12:25:59Z",
      "diff_hunk" : "@@ -22,6 +22,7 @@ enum class OutputType {\n     BECH32M,\n };\n \n+// Keep output types sorted by age, with older types first",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836371561",
      "id" : 836371561,
      "in_reply_to_id" : 828078777,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x2gRp",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 25,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/outputtype.h",
      "position" : null,
      "pull_request_review_id" : 923064239,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836371561/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T12:25:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836371561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836394171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836394171"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> This is not guaranteed to be true. We could have a P2SH multisig and that would be `LEGACY`.\r\n\r\nso if a `P2SH_SEWGIT` and a `P2SH` multisig were spent together, when the UTXO is later spent it would reveal that some inputs were legacy multisig and others p2sh-segwit? \r\n\r\nAs an alternative, would it be better to map `WITNESS_V0_SCRIPTHASH` to `P2SH` and map `SCRIPTHASH` and `PUBKEYHASH` to `LEGACY`?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T12:50:53Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836394171",
      "id" : 836394171,
      "in_reply_to_id" : 828302619,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x2ly7",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 923096287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836394171/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T12:50:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836394171",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836525661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836525661"
         }
      },
      "author_association" : "MEMBER",
      "body" : "By the time we get determining the output type, we already know that the output either belongs to the wallet, or is watch only. Thus we can do additional solver invocations for scripthash with the redeemScript in order to figure out the true type.\r\n\r\nFor watch only outputs, we may not be able to do that because not all of the scripts will necessarily be available. However we could still use solving data provided in `coinControl` to try to determine that.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T14:55:26Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836525661",
      "id" : 836525661,
      "in_reply_to_id" : 828302619,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x3F5d",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 923287227,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836525661/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T14:55:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836525661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836535681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836535681"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks for pointing me in the right direction! I'll take a stab at implementing this",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T15:04:39Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836535681",
      "id" : 836535681,
      "in_reply_to_id" : 828302619,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x3IWB",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 923301676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836535681/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T15:04:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836535681",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836601796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836601796"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Review note: I first thought that the `self.generate(self.nodes[1], 1)` here would of course confirm all of the above transactions, but this obviously only happens after all three transactions get built, which means that unconfirmed change UTXOs could have been used in construction of the latter.\r\n\r\nNote to author: This may point to an underlying problem. Since the UTXO pools divided by type are much smaller, the backoff steps allowing for unconfirmed change to be used may come into play much more often. Then, since the waste metric does not yet account for the unconfirmed inputs, we may spend unconfirmed UTXOs more often. This in turn may cause a problem especially if the follow-up transaction is aiming for a higher feerate than the transaction that created the unconfirmed input, at least while https://github.com/bitcoin/bitcoin/issues/15553 remains unsolved. ",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T16:07:45Z",
      "diff_hunk" : "@@ -36,9 +36,9 @@ def run_test(self):\n \n         self.generate(self.nodes[1], COINBASE_MATURITY)\n         balance = alice.getbalance()\n-        txA = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txB = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txC = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txA = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txB = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txC = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n         self.sync_mempools()\n         self.generate(self.nodes[1], 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836601796",
      "id" : 836601796,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII584x3YfE",
      "original_commit_id" : "e556ee628e97b10bc4f4d82036c9758d4e14d298",
      "original_line" : 43,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/wallet_abandonconflict.py",
      "position" : 11,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836601796/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836601796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836686905"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836686905"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's not clear to me why this change is being made. There don't seem to be any checks or asserts referring to the UTXO pool of `nodes[0]`, and wouldn't all the coinbase outputs and change outputs be of the same type?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T17:41:07Z",
      "diff_hunk" : "@@ -293,7 +293,7 @@ def test_getbalances_used(self):\n \n         # send multiple transactions, reusing one address\n         for _ in range(101):\n-            self.nodes[0].sendtoaddress(new_addr, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836686905",
      "id" : 836686905,
      "line" : 296,
      "node_id" : "PRRC_kwDOABII584x3tQ5",
      "original_commit_id" : "eaaece5598c713e4698c379dfbceefac4be44992",
      "original_line" : 296,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : 4,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836686905/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836686905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836690832"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836690832"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why does this `reserve(â¦)` not include `Other.size()`?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T17:44:05Z",
      "diff_hunk" : "@@ -81,11 +81,34 @@ TxSize CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *walle\n     return CalculateMaximumSignedTxSize(tx, wallet, txouts, coin_control);\n }\n \n-void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const CCoinControl* coinControl, const CAmount& nMinimumAmount, const CAmount& nMaximumAmount, const CAmount& nMinimumSumAmount, const uint64_t nMaximumCount)\n+uint64_t AvailableCoins::size() {\n+    return Bech32m.size() + Bech32.size() + P2SH.size() + Legacy.size() + Other.size();\n+}\n+\n+std::vector<COutput> AvailableCoins::all() {\n+    std::vector<COutput> all;\n+    all.reserve(Bech32m.size() + Bech32.size() + P2SH.size() + Legacy.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836690832",
      "id" : 836690832,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII584x3uOQ",
      "original_commit_id" : "4c634ea19220d6d1f4647e553909b5e0dfd1910e",
      "original_line" : 90,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 11,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836690832/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836690832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836696846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836696846"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe call this `return_value_unused`.\r\n\r\nIt's not obvious what this `dummy` is and why it's needed. I take it that it's a return value for the script solver to put the actual solution components in, and we don't care about it here because we only want to learn the type. Perhaps you could add a comment here to elucidate that for future reviewers.\r\n",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T17:51:32Z",
      "diff_hunk" : "@@ -189,7 +212,26 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n             bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n \n-            vCoins.emplace_back(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836696846",
      "id" : 836696846,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII584x3vsO",
      "original_commit_id" : "4c634ea19220d6d1f4647e553909b5e0dfd1910e",
      "original_line" : 216,
      "original_position" : 43,
      "original_start_line" : 215,
      "path" : "src/wallet/spend.cpp",
      "position" : 43,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836696846/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 215,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836696846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836700177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836700177"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Commit message in \"wallet: run coin selection by OutputType\" 49d802f25cac9390fb715b0bd4051c5e592365e3 is missing a word in the first sentence of the body.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T17:55:46Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836700177",
      "id" : 836700177,
      "line" : 816,
      "node_id" : "PRRC_kwDOABII584x3wgR",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 816,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 1,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836700177/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836700177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836705322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836705322"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wouldn't the `best_result` necessarily already have a waste score since we do that above already?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:02:14Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result1->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result1);\n+    };\n+    if (auto result2{SelectCoins(wallet, availableCoins.P2SH, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result2->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result2);\n+    };\n+    if (auto result3{SelectCoins(wallet, availableCoins.Bech32, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result3->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result3);\n+    };\n+    if (auto result4{SelectCoins(wallet, availableCoins.Bech32m, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result4->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result4);\n+    };\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    std::optional<SelectionResult> result = [&] {\n+        if (results.size() == 0) {\n+            if (auto result5{SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+                result5->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+                return result5;\n+            }\n+            return std::optional<SelectionResult>();\n+        };\n+        std::optional<SelectionResult> best_result = *std::min_element(results.begin(), results.end());\n+        best_result->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836705322",
      "id" : 836705322,
      "line" : 850,
      "node_id" : "PRRC_kwDOABII584x3xwq",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 850,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 38,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836705322/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836705322",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836706638"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836706638"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why `resultâ` instead of `result_legacy`, `result_p2sh`, â¦?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:03:55Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836706638",
      "id" : 836706638,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII584x3yFO",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 822,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 10,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836706638/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836706638",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836709314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836709314"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm a bit surprised that we need to post-process all the `SelectionResults` when they get returned with `ComputeAndSetWaste(â¦)`. It would feel more natural, that each coin selection algorithm automatically calculates the waste and returns it in the `SelectionResults` if the feerate is known (which is obvious from `coin_control`, I think. \r\n\r\nAlso, if we do need it, you could just collect all the results and then run it once for each result at the end of this block.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:07:37Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result1->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836709314",
      "id" : 836709314,
      "line" : 823,
      "node_id" : "PRRC_kwDOABII584x3yvC",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 823,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 11,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836709314/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836709314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836711238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836711238"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Shouldn't this `return std::nullopt;` if there is no solution?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:10:10Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result1->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result1);\n+    };\n+    if (auto result2{SelectCoins(wallet, availableCoins.P2SH, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result2->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result2);\n+    };\n+    if (auto result3{SelectCoins(wallet, availableCoins.Bech32, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result3->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result3);\n+    };\n+    if (auto result4{SelectCoins(wallet, availableCoins.Bech32m, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result4->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result4);\n+    };\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    std::optional<SelectionResult> result = [&] {\n+        if (results.size() == 0) {\n+            if (auto result5{SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+                result5->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+                return result5;\n+            }\n+            return std::optional<SelectionResult>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836711238",
      "id" : 836711238,
      "line" : 847,
      "node_id" : "PRRC_kwDOABII584x3zNG",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 847,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 35,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836711238/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836711238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836712042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836712042"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why even number them at all, they could all just be `result` since it's a local variable?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:11:11Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836712042",
      "id" : 836712042,
      "in_reply_to_id" : 836706638,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII584x3zZq",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 822,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 10,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836712042/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836712042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836719593"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836719593"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Perhaps call these `is_â¦`, i.e. `is_bech32_address(â¦)`, because you're testing the input object for a property and returning a boolean.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:19:01Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import assert_equal\n+\n+\n+def get_change_output(tx, addr):\n+    \"\"\"Get change address from transaction.\"\"\"\n+    return [\n+        vout['scriptPubKey']['address']\n+        for vout in tx['vout']\n+        if vout['scriptPubKey']['address'] != addr\n+    ][0]\n+\n+\n+def get_input_addresses(node, tx):\n+    \"\"\"Get all input addresses for a given transaction.\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    addresses = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        addresses.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    return addresses\n+\n+\n+def bech32_address(node, addr):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836719593",
      "id" : 836719593,
      "line" : 57,
      "node_id" : "PRRC_kwDOABII584x31Pp",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 57,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 57,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836719593/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836719593",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836726166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836726166"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm wondering whether there is a misunderstanding here. It's not that certain types are strictly preferred at the corresponding feerate categories, but that larger input scripts will simply affect the waste score more due to their size in either direction due to their larger transaction weight. This in turn leads to a higher waste score for _the same count of_ legacy inputs at high feerates vs more efficient types, and a more negative waste score at low feerates. Obviously, this would cause one specific type to always win if you always have the same count of inputs among the options, but wouldn't necessarily hold true if the input sets could have varying input counts.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:27:37Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import assert_equal\n+\n+\n+def get_change_output(tx, addr):\n+    \"\"\"Get change address from transaction.\"\"\"\n+    return [\n+        vout['scriptPubKey']['address']\n+        for vout in tx['vout']\n+        if vout['scriptPubKey']['address'] != addr\n+    ][0]\n+\n+\n+def get_input_addresses(node, tx):\n+    \"\"\"Get all input addresses for a given transaction.\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    addresses = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        addresses.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    return addresses\n+\n+\n+def bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        not addr_info['isscript'] and\n+        addr_info['iswitness'] and addr_info['witness_version'] == 0\n+    )\n+\n+\n+def p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness'] and\n+        addr_info['script'] == 'witness_v0_keyhash'\n+    )\n+\n+\n+def legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_case_one(self, A, B):\n+        self.log.debug(\n+            \"Pay Bob's P2SH address, creating a P2SH change UTXO for Alice\"\n+        )\n+        p2sh_addr = B.getnewaddress()\n+        tx1 = A.sendtoaddress(p2sh_addr, 5)\n+        change = get_change_output(A.getrawtransaction(tx1, True), p2sh_addr)\n+        assert p2sh_address(A, change)\n+\n+        self.generate(B, 1)\n+\n+        self.log.debug(\n+            \"Pay Bob's P2SH address, verify P2SH UTXO from previous Tx is used\"\n+        )\n+        tx2 = A.sendtoaddress(address=B.getnewaddress(), amount=5, fee_rate=1)\n+        input_addrs = get_input_addresses(A, tx2)\n+        assert_equal(len(input_addrs), 1)\n+        assert_equal(change, input_addrs[0])\n+\n+        self.generate(B, 1)\n+        self.log.debug(\n+            \"Make the same payment again, with a higher feerate. \"\n+            \"Check that Alice's wallet prefers bech32 UTXOs.\"\n+        )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836726166",
      "id" : 836726166,
      "line" : 125,
      "node_id" : "PRRC_kwDOABII584x322W",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 125,
      "original_position" : 125,
      "original_start_line" : 122,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 125,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836726166/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 122,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836726166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836733063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836733063"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What is the starting situation of the nodes. Are they both empty? Is Alice or Bob the default node that has the previous block rewards? Do they both have funds? Are the funds all of one type, or mixed?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:36:46Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import assert_equal\n+\n+\n+def get_change_output(tx, addr):\n+    \"\"\"Get change address from transaction.\"\"\"\n+    return [\n+        vout['scriptPubKey']['address']\n+        for vout in tx['vout']\n+        if vout['scriptPubKey']['address'] != addr\n+    ][0]\n+\n+\n+def get_input_addresses(node, tx):\n+    \"\"\"Get all input addresses for a given transaction.\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    addresses = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        addresses.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    return addresses\n+\n+\n+def bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        not addr_info['isscript'] and\n+        addr_info['iswitness'] and addr_info['witness_version'] == 0\n+    )\n+\n+\n+def p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness'] and\n+        addr_info['script'] == 'witness_v0_keyhash'\n+    )\n+\n+\n+def legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_case_one(self, A, B):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836733063",
      "id" : 836733063,
      "line" : 102,
      "node_id" : "PRRC_kwDOABII584x34iH",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 102,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 102,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836733063/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836733063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836736105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836736105"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It feels that these tests are more focused on the cost efficiency of the input sets than validating that input sets of only one type are produced.\r\n\r\nâ¢ Could you perhaps provide a bit more information on the initial setup of the wallets' UTXO pools?\r\nâ¢ From what I gather, most of these tests end up using a single input to fund their transactions. A single input transaction will always have the same type for all inputs. :grin: Given that I understood that right, it would be more convincing if the wallets had to select from a number of UTXOs of various values and types, and needed to pick multiple UTXOs to create the input set, while you then showed that we consistently pick input sets with multiple inputs of the same type. I also feel that the inputs being of the same type would be the more important aspect of this PR rather than which type of inputs gets chosen exactly, although showing that the solution with the lower waste was picked would certainly be an appreciated secondary test scenario.\r\nâ¢ The way these tests are implemented right now, they may be a bit too tightly coupled to the exact behavior of the coin selection algorithms we currently use, but I am hoping to change the composition of coin selection algorithms in the near term. This would be another reason why I'd prefer if the test were implemented more generically \"all input have the same type\" vs \"exactly this type of inputs gets chosen\". :)",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:39:21Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836736105",
      "id" : 836736105,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584x35Rp",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 25,
      "original_position" : 25,
      "original_start_line" : 17,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 25,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836736105/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 17,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836736105",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r837326312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837326312"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "interesting, is it by design that the waste metric does not consider unconfirmed change? a few ideas to address this:\r\n\r\n1) have the waste metric also consider unconfirmed change\r\n2) consider things like unconfirmed inputs when comparing solutions\r\n\r\nfor example, if solution A is to spend all confirmed inputs with a waste metric of X and solution B spends unconfirmed change with a waste metric of Y, prefer solution A even if X > Y.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-29T10:41:07Z",
      "diff_hunk" : "@@ -36,9 +36,9 @@ def run_test(self):\n \n         self.generate(self.nodes[1], COINBASE_MATURITY)\n         balance = alice.getbalance()\n-        txA = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txB = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txC = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txA = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txB = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txC = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n         self.sync_mempools()\n         self.generate(self.nodes[1], 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r837326312",
      "id" : 837326312,
      "in_reply_to_id" : 836601796,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII584x6JXo",
      "original_commit_id" : "e556ee628e97b10bc4f4d82036c9758d4e14d298",
      "original_line" : 43,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/wallet_abandonconflict.py",
      "position" : 11,
      "pull_request_review_id" : 924406228,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837326312/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-29T10:41:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837326312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838507157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507157"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "this is related to your earlier comment (https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836601796) regarding unconfirmed UTXOs being spent more often. In this test, after the first tx is sent, the next 100 txs build a chain where the unconfirmed change is being spent, eventually hitting the mempool chain limit of 25 and causing an error. By explicitly setting `fee_rate=1`, `nodes[0]` starts spending its confirmed coinbase UTXOs instead.\r\n\r\nThis also demonstrates your earlier point that this change is causing unconfirmed outputs to be spent more often",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T12:53:18Z",
      "diff_hunk" : "@@ -293,7 +293,7 @@ def test_getbalances_used(self):\n \n         # send multiple transactions, reusing one address\n         for _ in range(101):\n-            self.nodes[0].sendtoaddress(new_addr, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838507157",
      "id" : 838507157,
      "in_reply_to_id" : 836686905,
      "line" : 296,
      "node_id" : "PRRC_kwDOABII584x-pqV",
      "original_commit_id" : "eaaece5598c713e4698c379dfbceefac4be44992",
      "original_line" : 296,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : 4,
      "pull_request_review_id" : 926067154,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507157/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T12:53:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838507751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507751"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good catch, it should include `Other.size()`",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T12:53:53Z",
      "diff_hunk" : "@@ -81,11 +81,34 @@ TxSize CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *walle\n     return CalculateMaximumSignedTxSize(tx, wallet, txouts, coin_control);\n }\n \n-void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const CCoinControl* coinControl, const CAmount& nMinimumAmount, const CAmount& nMaximumAmount, const CAmount& nMinimumSumAmount, const uint64_t nMaximumCount)\n+uint64_t AvailableCoins::size() {\n+    return Bech32m.size() + Bech32.size() + P2SH.size() + Legacy.size() + Other.size();\n+}\n+\n+std::vector<COutput> AvailableCoins::all() {\n+    std::vector<COutput> all;\n+    all.reserve(Bech32m.size() + Bech32.size() + P2SH.size() + Legacy.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838507751",
      "id" : 838507751,
      "in_reply_to_id" : 836690832,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII584x-pzn",
      "original_commit_id" : "4c634ea19220d6d1f4647e553909b5e0dfd1910e",
      "original_line" : 90,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 11,
      "pull_request_review_id" : 926067979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507751/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T12:53:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507751",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838509498"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838509498"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "you're right, they can all be named `result` and I think that's better than having individual names for each run (`result_legacy`, `result_p2sh`, etc)",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T12:55:30Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838509498",
      "id" : 838509498,
      "in_reply_to_id" : 836706638,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII584x-qO6",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 822,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 10,
      "pull_request_review_id" : 926070412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838509498/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T12:55:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838509498",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838512077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838512077"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think we are on the same page, it's just my wording in the comments isn't correct. Initially, I wrote the comments for when I was strictly preferring older types to newer types. I'll update these comments to be more accurate.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T12:57:40Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import assert_equal\n+\n+\n+def get_change_output(tx, addr):\n+    \"\"\"Get change address from transaction.\"\"\"\n+    return [\n+        vout['scriptPubKey']['address']\n+        for vout in tx['vout']\n+        if vout['scriptPubKey']['address'] != addr\n+    ][0]\n+\n+\n+def get_input_addresses(node, tx):\n+    \"\"\"Get all input addresses for a given transaction.\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    addresses = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        addresses.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    return addresses\n+\n+\n+def bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        not addr_info['isscript'] and\n+        addr_info['iswitness'] and addr_info['witness_version'] == 0\n+    )\n+\n+\n+def p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness'] and\n+        addr_info['script'] == 'witness_v0_keyhash'\n+    )\n+\n+\n+def legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_case_one(self, A, B):\n+        self.log.debug(\n+            \"Pay Bob's P2SH address, creating a P2SH change UTXO for Alice\"\n+        )\n+        p2sh_addr = B.getnewaddress()\n+        tx1 = A.sendtoaddress(p2sh_addr, 5)\n+        change = get_change_output(A.getrawtransaction(tx1, True), p2sh_addr)\n+        assert p2sh_address(A, change)\n+\n+        self.generate(B, 1)\n+\n+        self.log.debug(\n+            \"Pay Bob's P2SH address, verify P2SH UTXO from previous Tx is used\"\n+        )\n+        tx2 = A.sendtoaddress(address=B.getnewaddress(), amount=5, fee_rate=1)\n+        input_addrs = get_input_addresses(A, tx2)\n+        assert_equal(len(input_addrs), 1)\n+        assert_equal(change, input_addrs[0])\n+\n+        self.generate(B, 1)\n+        self.log.debug(\n+            \"Make the same payment again, with a higher feerate. \"\n+            \"Check that Alice's wallet prefers bech32 UTXOs.\"\n+        )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838512077",
      "id" : 838512077,
      "in_reply_to_id" : 836726166,
      "line" : 125,
      "node_id" : "PRRC_kwDOABII584x-q3N",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 125,
      "original_position" : 125,
      "original_start_line" : 122,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 125,
      "pull_request_review_id" : 926073903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838512077/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 122,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-30T12:57:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838512077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838514332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838514332"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good point, both nodes are starting with a clean chain (`setup_clean_chain = True`), and then node A mines 100 blocks in `run_test`.\r\n\r\nMuch better would be to explain this at the beginning of the test so it's clear what the respective UTXO sets for each node are.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T12:59:53Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import assert_equal\n+\n+\n+def get_change_output(tx, addr):\n+    \"\"\"Get change address from transaction.\"\"\"\n+    return [\n+        vout['scriptPubKey']['address']\n+        for vout in tx['vout']\n+        if vout['scriptPubKey']['address'] != addr\n+    ][0]\n+\n+\n+def get_input_addresses(node, tx):\n+    \"\"\"Get all input addresses for a given transaction.\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    addresses = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        addresses.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    return addresses\n+\n+\n+def bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        not addr_info['isscript'] and\n+        addr_info['iswitness'] and addr_info['witness_version'] == 0\n+    )\n+\n+\n+def p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness'] and\n+        addr_info['script'] == 'witness_v0_keyhash'\n+    )\n+\n+\n+def legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_case_one(self, A, B):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838514332",
      "id" : 838514332,
      "in_reply_to_id" : 836733063,
      "line" : 102,
      "node_id" : "PRRC_kwDOABII584x-rac",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 102,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 102,
      "pull_request_review_id" : 926077187,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838514332/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T12:59:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838514332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838518664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838518664"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Great points. I'll refactor the test to:\r\n\r\n* Document the initial setup for each node\r\n* Start with a larger, mixed UTXO set\r\n* Be less brittle w.r.t to coin selection\r\n\r\nLooking at the test again, I think I am trying to test for some things that would be better to test for in a unit test. Ideally, this test should create large UTXO sets for each node, spend back and forth at different fee rates and to different address types. The assertions should check that all inputs are of the same OutputType and finally test a scenario where the wallet can fund from any single OutputType and is forced to mix OutputTypes to fund the transaction",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T13:04:12Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838518664",
      "id" : 838518664,
      "in_reply_to_id" : 836736105,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584x-seI",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 25,
      "original_position" : 25,
      "original_start_line" : 17,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 25,
      "pull_request_review_id" : 926083579,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838518664/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 17,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-30T13:04:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838518664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks for the review, @glozow !\r\n\r\n> Approach-wise, did you consider adding output type to `CoinEligibilityFilter` instead, and trying selection for each output type within `AttemptSelection()`? This way you try to do selection for every output type for confirmed UTXOs only, before you try unconfirmed.\r\n\r\nThis is how I wrote the code initially (by adding `OutputType` to `CoinEligibilityFilter`) but abandoned it in favor of separating the `OutputTypes` into different vectors during `GetAvailableCoins` and then running coin selection on each vector separately and comparing the results.\r\n\r\n> Another possibility is adding the logic for preferring confirmed over unconfirmed UTXOs to `SelectionResult` and editing the `operator<` to account for it.\r\n\r\nI like this idea. I think it keeps the logic a little cleaner.\r\n",
      "created_at" : "2022-03-30T13:17:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1083129149",
      "id" : 1083129149,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585Ajz09",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083129149/reactions"
      },
      "updated_at" : "2022-03-30T13:17:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083129149",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "based on feedback so far (thanks, everyone!), I think next steps are:\r\n\r\n* Better break out `P2SH`, vs lumping all `P2SH` with `P2SH_SEGWIT`\r\n* Account for unconfirmed txs being preferred when picking the \"best\" solution\r\n* Refactor functional tests to be less tightly coupled to coin selection and better documented\r\n* Potentially move some tests out of functional into unit tests",
      "created_at" : "2022-03-30T13:24:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1083136704",
      "id" : 1083136704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585Aj1rA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083136704/reactions"
      },
      "updated_at" : "2022-03-30T13:24:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083136704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838666794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838666794"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No, Bitcoin Core ignoring the feerate of parent transactions when using unconfirmed inputs is a bug, but one that turned out more difficult to fix than anticipated. I have started a branch (https://github.com/Xekyo/bitcoin/tree/ancestor-aware-funding) which I intend to push forward in collaboration with @glozow. We were stuck by not being able to get information on unconfirmed parent transactions in the wallet yet, and this should now be resolved by a node:wallet interface that provides mining scores which @glozow came up with.\r\n\r\nThen, the intended goal is that we'd automatically add sufficient fees to elevate the mining score for both the new and the ancestor transactions to the target feerate and account for these additional fees in the waste metric.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T15:14:23Z",
      "diff_hunk" : "@@ -36,9 +36,9 @@ def run_test(self):\n \n         self.generate(self.nodes[1], COINBASE_MATURITY)\n         balance = alice.getbalance()\n-        txA = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txB = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txC = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txA = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txB = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txC = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n         self.sync_mempools()\n         self.generate(self.nodes[1], 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838666794",
      "id" : 838666794,
      "in_reply_to_id" : 836601796,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII584x_Qoq",
      "original_commit_id" : "e556ee628e97b10bc4f4d82036c9758d4e14d298",
      "original_line" : 43,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/wallet_abandonconflict.py",
      "position" : 11,
      "pull_request_review_id" : 926297888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838666794/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T15:16:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838666794",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> based on feedback so far (thanks, everyone!), I think next steps are:\r\n> \r\n>     * Better break out `P2SH`, vs lumping all `P2SH` with `P2SH_SEGWIT`\r\n>     * Account for unconfirmed txs being preferred when picking the \"best\" solution\r\n>     * Refactor functional tests to be less tightly coupled to coin selection and better documented\r\n>     * Potentially move some tests out of functional into unit tests\r\n\r\nSounds good, assuming that you mean to prefer confirmed inputs rather than unconfirmed.",
      "created_at" : "2022-03-30T15:17:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1083270926",
      "id" : 1083270926,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585AkWcO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083270926/reactions"
      },
      "updated_at" : "2022-03-30T15:17:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083270926",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-04-04T09:37:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1087333778",
      "id" : 1087333778,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585Az2WS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087333778/reactions"
      },
      "updated_at" : "2022-04-04T09:37:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087333778",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r844973583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844973583"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    if (auto result2{SelectCoins(wallet, availableCoins.P2SH, /*nTargetValue=*/selection_target, coin_control, coin_selection_params)}) {\r\n```\r\n\r\nAnywhere you are adding /touching named args, please use the [style from the developer docs](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c-named-arguments).",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-04-07T10:25:58Z",
      "diff_hunk" : "@@ -773,11 +814,42 @@ static bool CreateTransactionInternal(\n     CAmount selection_target = recipients_sum + not_input_fees;\n \n     // Get available coins\n-    std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n+    AvailableCoins availableCoins;\n+    GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result1->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result1);\n+    };\n+    if (auto result2{SelectCoins(wallet, availableCoins.P2SH, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r844973583",
      "id" : 844973583,
      "line" : 826,
      "node_id" : "PRRC_kwDOABII584yXUYP",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 826,
      "original_position" : 123,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 123,
      "pull_request_review_id" : 934837483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844973583/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-07T10:25:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844973583",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
