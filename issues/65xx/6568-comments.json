[
   {
      "body" : "ECDH addresses have been previously discussed in the Dark Wallet \"stealth address\" scheme.  I'm not a super big fan of that scheme which has never been completely specified.\r\n\r\nIt results in addresses which are more than 2x larger than our current ones, largely so it can support a secure delegated scanning mode.  But, of course, the scanning delegation totally undermines the privacy of the system.  Adam Back and I spent some amount of time exploring fancier crypto to try to repair the scanning damage, but short of ought switching to pairing based signatures (which are slow to verify) we don't really have a way to fix the delegation.\r\n\r\nBut the ECDH code in libsecp256k1 can scan something like 40,000 transactions per second on a fast desktop. With that in mind, we could instead forget about delegation. \r\n\r\nI was contemplating a scheme for a future elements update called \"Donation addresses\" which would give you a stealth like ephemeral address which is as short as (or shorter) than a current Bitcoin address. But you couldn't securely delegate the scanning: someone who could scan for your payments could spend the coins.  This might be a worthwhile trade-off.\r\n \r\n\r\n",
      "created_at" : "2015-08-18T09:56:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132150599",
      "id" : 132150599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T09:56:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132150599",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I'm not entirely clear what you mean by \"private transaction submission tool\", could you elaborate please?\r\n\r\nAlso as I suspect there will be those reading this who may not be aware of the confident transactions suggestion, link for their reference: https://people.xiph.org/~greg/confidential_values.txt",
      "created_at" : "2015-08-18T09:57:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132151065",
      "id" : 132151065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T09:57:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132151065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3513077?v=3",
         "events_url" : "https://api.github.com/users/rnicoll/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rnicoll/followers",
         "following_url" : "https://api.github.com/users/rnicoll/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rnicoll/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rnicoll",
         "id" : 3513077,
         "login" : "rnicoll",
         "organizations_url" : "https://api.github.com/users/rnicoll/orgs",
         "received_events_url" : "https://api.github.com/users/rnicoll/received_events",
         "repos_url" : "https://api.github.com/users/rnicoll/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rnicoll/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rnicoll"
      }
   },
   {
      "body" : "There are more advanced cryptographic privacy schemes which have been proposed. \r\n\r\nFor example, there is my Confidential Transactions scheme (https://people.xiph.org/~greg/confidential_values.txt)  which is running in elements alpha sidechain (https://github.com/ElementsProject/elements).  In that sidechain CT is implemented as a major change to the transaction format, so it would be a hard fork to apply it directly.\r\n\r\nBut it's actually possible to implement CT as a soft fork, though ... more than a little kludge. Ignoring how ugly that might or might not be for a moment--\r\n\r\nWhat performance envelope do we think needs to be achieved for something like this to deploy it in Bitcoin?\r\n\r\nMaybe it would be helpful if I made a brief table that laid out the performance implications very clearly?\r\n\r\nThere are other schemes which could be considered, for example Zero Cash, but it's less clear how to soft fork deploy them (except e.g. via the extension block concept). Again, it's unclear how we can go about reasoning on the acceptable trade-offs in this space.",
      "created_at" : "2015-08-18T09:59:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132151792",
      "id" : 132151792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T10:30:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132151792",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@rnicoll  0.11 added a feature to suppress the local broadcast of transactions by the wallet.  The idea is that a daemon could run along side your Bitcoin Core and submit your transactions via a high latency privacy network, or the like.  If widely used this would greatly discourage the common practice of running spy nodes that suck up everyone's connection slots watching for TX broadcasts.",
      "created_at" : "2015-08-18T10:04:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132153414",
      "id" : 132153414,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T10:04:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132153414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell These are very important issues at the network consensus level and is an issue of high priority at the enterprise and institutional level.\r\n\r\nIn the meantime, regarding the ability to avoid spy nodes there is already a process in place using features from other available wallets which shrinks the attack surface to something very manageable and controllable. (1) craft the offline transaction with Armory using a full Bitcoin Core node so there is no leakage of any information to a third-party when looking up address balances and (2) privately (TOR, etc.) submit the signed transaction through https://blockchain.info/pushtx (using the 'Copy Raw Tx HEX' feature in Armory).",
      "created_at" : "2015-08-18T13:04:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132199478",
      "id" : 132199478,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T13:04:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132199478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4149214?v=3",
         "events_url" : "https://api.github.com/users/sunnankar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sunnankar/followers",
         "following_url" : "https://api.github.com/users/sunnankar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sunnankar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sunnankar",
         "id" : 4149214,
         "login" : "sunnankar",
         "organizations_url" : "https://api.github.com/users/sunnankar/orgs",
         "received_events_url" : "https://api.github.com/users/sunnankar/received_events",
         "repos_url" : "https://api.github.com/users/sunnankar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sunnankar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sunnankar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sunnankar"
      }
   },
   {
      "body" : "@sunnankar that is in armory and tor though. We need solutions for this in core not in armory or by use of Tor. It MUST be a prerogative that \"normal\" people aren't being spied on per-say.  ",
      "created_at" : "2015-08-18T13:55:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132216304",
      "id" : 132216304,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T13:55:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132216304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7454206?v=3",
         "events_url" : "https://api.github.com/users/akstunt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/akstunt/followers",
         "following_url" : "https://api.github.com/users/akstunt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/akstunt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/akstunt",
         "id" : 7454206,
         "login" : "akstunt",
         "organizations_url" : "https://api.github.com/users/akstunt/orgs",
         "received_events_url" : "https://api.github.com/users/akstunt/received_events",
         "repos_url" : "https://api.github.com/users/akstunt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/akstunt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/akstunt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/akstunt"
      }
   },
   {
      "body" : "@gmaxwell If you haven't already, please take a look at how Vertcoin has implemented stealth addresses in their reference client.  They have a \"stealth addresses\" tab with a \"new\" button on the bottom, along with a \"import stealth address transactions\" button.  This eliminates the need to be constantly scanning for stealth transactions, so there is zero performance hit for non-stealth users.  If you are using stealth addresses, you just hit the scan button from time to time when you're expecting something.\r\n\r\nI agree that centralized delegation is no good, but I feel like people who would use stealth addresses would be just fine running a full node, or they would accept the security compromise that comes from verifying from an SPV wallet.  Maybe if bitcoind allowed for some obelisk style verification commands, then SPV clients could ask the nodes themselves to scan as needed.",
      "created_at" : "2015-08-18T14:10:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132222504",
      "id" : 132222504,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T14:10:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132222504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/76767?v=3",
         "events_url" : "https://api.github.com/users/pierce403/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierce403/followers",
         "following_url" : "https://api.github.com/users/pierce403/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierce403/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierce403",
         "id" : 76767,
         "login" : "pierce403",
         "organizations_url" : "https://api.github.com/users/pierce403/orgs",
         "received_events_url" : "https://api.github.com/users/pierce403/received_events",
         "repos_url" : "https://api.github.com/users/pierce403/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierce403/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierce403/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierce403"
      }
   },
   {
      "body" : "In this context the impact of hub and spoke networks on fungibility and vice versa the necessity of fungibility for an actually decentralized hub and spoke system should be considered.\r\n\r\nHubs need liquidity.\r\n\r\nAnonymously run hubs might also function as mixing services for anonymous liquidity providers.\r\n\r\nPolicy makers might impose strict rules on hubs and consequently on users of non-complying hubs if lack of fungibility reveals their use. This could lead to the centralization many see as a danger with the lightning network.\r\n\r\nIf hubs work as mixes they will pay incentives resulting in zero or even slightly negative transaction fees.",
      "created_at" : "2015-08-18T14:12:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132223219",
      "id" : 132223219,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T16:10:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132223219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/96378?v=3",
         "events_url" : "https://api.github.com/users/Giszmo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Giszmo/followers",
         "following_url" : "https://api.github.com/users/Giszmo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Giszmo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Giszmo",
         "id" : 96378,
         "login" : "Giszmo",
         "organizations_url" : "https://api.github.com/users/Giszmo/orgs",
         "received_events_url" : "https://api.github.com/users/Giszmo/received_events",
         "repos_url" : "https://api.github.com/users/Giszmo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Giszmo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Giszmo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Giszmo"
      }
   },
   {
      "body" : "I think the ideal implementation of ECDH would be by offloading secret exchange to a peripheral network. Probably BitMessage at this point. It has multiple implementations and is probably one of the more supported networks for messaging. That said, if I'm remembering right it *itself* still requires the addition of ECDH to messaging for further privacy. I'm not sure that's a huge new feature to add.\r\n\r\nYou would send the information needed to redeem the transaction along with the transaction ID directly to the payee over this channel. It's simple and doesn't result in appending any information to transactions that could result in further censorship. It's possible that the addition of the OP_RETURN data itself could result in the closing of accounts at major exchanges, which would generally negate the usefulness of all of this. In this scheme, there is also no blockchain scanning because users communicate directly.\r\n\r\nCoinJoin may be a dead end because of its voluntary nature and the fact that it will be so easily open to manipulation so long as the channels to enter a CoinJoin transaction are public. Programs with involuntary inclusion of inputs in spending seem superior (e.g. ring signatures with \"key image\" inclusion), although I doubt we'll see an inclusion of that with a Bitcoin soft fork.",
      "created_at" : "2015-08-18T14:23:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132228900",
      "id" : 132228900,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T21:24:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132228900",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10604806?v=3",
         "events_url" : "https://api.github.com/users/cjepson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cjepson/followers",
         "following_url" : "https://api.github.com/users/cjepson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cjepson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cjepson",
         "id" : 10604806,
         "login" : "cjepson",
         "organizations_url" : "https://api.github.com/users/cjepson/orgs",
         "received_events_url" : "https://api.github.com/users/cjepson/received_events",
         "repos_url" : "https://api.github.com/users/cjepson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cjepson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cjepson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cjepson"
      }
   },
   {
      "body" : "I would like you to consider my cut-and-choose+random-subset-test method for creating range proofs when you think of adding confidential transactions to Bitcoin. \r\nI blame myself for not publishing this proof in a clear separate proposal for you to check. I will publish it separately soon. It has very similar properties as borromean signatures (a big larger proofs, I think). It has the benefit of being much simpler, and easily allows 64-bit of numeric ranges without doing floating point encoding.",
      "created_at" : "2015-08-18T14:33:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132232740",
      "id" : 132232740,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T14:33:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132232740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1752347?v=3",
         "events_url" : "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
         "followers_url" : "https://api.github.com/users/SergioDemianLerner/followers",
         "following_url" : "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
         "gists_url" : "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/SergioDemianLerner",
         "id" : 1752347,
         "login" : "SergioDemianLerner",
         "organizations_url" : "https://api.github.com/users/SergioDemianLerner/orgs",
         "received_events_url" : "https://api.github.com/users/SergioDemianLerner/received_events",
         "repos_url" : "https://api.github.com/users/SergioDemianLerner/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/SergioDemianLerner/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/SergioDemianLerner"
      }
   },
   {
      "body" : "> ECDH addresses have been previously discussed in the Dark Wallet \"stealth address\" scheme. I'm not a super big fan of that scheme which has never been completely specified.\r\n> \r\n> It results in addresses which are more than 2x larger than our current ones, largely so it can support a secure delegated scanning mode. But, of course, the scanning delegation totally undermines the privacy of the system.\r\n\r\nHave you reviewed BIP47 Reusable Payment Codes #159? By using notification transactions, clients do not need to outsource finding payment addresses to scanning delegates.",
      "created_at" : "2015-08-18T14:47:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132237084",
      "id" : 132237084,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T14:47:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132237084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7227529?v=3",
         "events_url" : "https://api.github.com/users/kristovatlas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristovatlas/followers",
         "following_url" : "https://api.github.com/users/kristovatlas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristovatlas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristovatlas",
         "id" : 7227529,
         "login" : "kristovatlas",
         "organizations_url" : "https://api.github.com/users/kristovatlas/orgs",
         "received_events_url" : "https://api.github.com/users/kristovatlas/received_events",
         "repos_url" : "https://api.github.com/users/kristovatlas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristovatlas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristovatlas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristovatlas"
      }
   },
   {
      "body" : "@cjepson CoinJoin is actively used by [JoinMarket](https://github.com/chris-belcher/joinmarket), which already supports sending [directly from the core wallet](https://github.com/chris-belcher/joinmarket/blob/master/sendpayment.py#L121-L123). There are several issues preventing JoinMarket from inclusion in Bitcoin Core (such as the \"pit\" being an IRC channel, part of the project's relative youth), but it's worth noting that this approach is far from \"dead end\".",
      "created_at" : "2015-08-18T15:10:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132244037",
      "id" : 132244037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T15:18:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132244037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94171?v=3",
         "events_url" : "https://api.github.com/users/adlai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adlai/followers",
         "following_url" : "https://api.github.com/users/adlai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adlai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adlai",
         "id" : 94171,
         "login" : "adlai",
         "organizations_url" : "https://api.github.com/users/adlai/orgs",
         "received_events_url" : "https://api.github.com/users/adlai/received_events",
         "repos_url" : "https://api.github.com/users/adlai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adlai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adlai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adlai"
      }
   },
   {
      "body" : "@adlai The problem with CoinJoin is the difficulty in ensuring most or all of the participants are not malicious. If you have 4 inputs and 3 of them are an attacker in a CoinJoin, then the attacker knows which input and output you own. This gives the illusion of privacy, which may be worse. As with all of the input mixing methods, including ring signatures with ZKPs to prevent double spending, there is the possibility of sybil attack which makes them less attractive as privacy solutions.",
      "created_at" : "2015-08-18T15:30:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132251159",
      "id" : 132251159,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T15:30:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132251159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10604806?v=3",
         "events_url" : "https://api.github.com/users/cjepson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cjepson/followers",
         "following_url" : "https://api.github.com/users/cjepson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cjepson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cjepson",
         "id" : 10604806,
         "login" : "cjepson",
         "organizations_url" : "https://api.github.com/users/cjepson/orgs",
         "received_events_url" : "https://api.github.com/users/cjepson/received_events",
         "repos_url" : "https://api.github.com/users/cjepson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cjepson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cjepson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cjepson"
      }
   },
   {
      "body" : "The problems with privacy tools are of the \"not a bug; feature!\" variety, as they dispel the illusion of magic invisibility cloaks, revealing instead a market for anonymity set membership. (This discussion may be more appropriately continued in #3226)",
      "created_at" : "2015-08-18T15:37:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132253000",
      "id" : 132253000,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T15:38:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132253000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94171?v=3",
         "events_url" : "https://api.github.com/users/adlai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adlai/followers",
         "following_url" : "https://api.github.com/users/adlai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adlai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adlai",
         "id" : 94171,
         "login" : "adlai",
         "organizations_url" : "https://api.github.com/users/adlai/orgs",
         "received_events_url" : "https://api.github.com/users/adlai/received_events",
         "repos_url" : "https://api.github.com/users/adlai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adlai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adlai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adlai"
      }
   },
   {
      "body" : "@cjepson I don't think that criticism is still relevant. Chaumian blinding in theory can help \"blind\" CoinJoin. But in fact, CoinShuffle already exists for this purpose, and is simple to implement.\r\n\r\nEdit: Oops, I didn't read the post correctly.",
      "created_at" : "2015-08-18T17:31:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132289509",
      "id" : 132289509,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T21:08:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132289509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7227529?v=3",
         "events_url" : "https://api.github.com/users/kristovatlas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristovatlas/followers",
         "following_url" : "https://api.github.com/users/kristovatlas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristovatlas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristovatlas",
         "id" : 7227529,
         "login" : "kristovatlas",
         "organizations_url" : "https://api.github.com/users/kristovatlas/orgs",
         "received_events_url" : "https://api.github.com/users/kristovatlas/received_events",
         "repos_url" : "https://api.github.com/users/kristovatlas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristovatlas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristovatlas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristovatlas"
      }
   },
   {
      "body" : "I've got some more privacy-related issues for you:\r\n\"Clients leak IPs if they are recipients of a transaction\": https://github.com/bitcoin/bitcoin/issues/3828\r\n\"Implement nested multi-paper backup\" (the \"nested\" is the privacy, or rather stealth, part) https://github.com/bitcoin/bitcoin/issues/3212",
      "created_at" : "2015-08-18T20:22:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132339491",
      "id" : 132339491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T20:22:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132339491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2364130?v=3",
         "events_url" : "https://api.github.com/users/leo-bogert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leo-bogert/followers",
         "following_url" : "https://api.github.com/users/leo-bogert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leo-bogert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leo-bogert",
         "id" : 2364130,
         "login" : "leo-bogert",
         "organizations_url" : "https://api.github.com/users/leo-bogert/orgs",
         "received_events_url" : "https://api.github.com/users/leo-bogert/received_events",
         "repos_url" : "https://api.github.com/users/leo-bogert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leo-bogert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leo-bogert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leo-bogert"
      }
   },
   {
      "body" : "Another interesting way to achieve privacy is using ring signatures like in the CryptoNote protocol (I'm surprised this hasn't been mentioned already).",
      "created_at" : "2015-08-18T20:57:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132348456",
      "id" : 132348456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T20:57:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132348456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/752237?v=3",
         "events_url" : "https://api.github.com/users/Midar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Midar/followers",
         "following_url" : "https://api.github.com/users/Midar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Midar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Midar",
         "id" : 752237,
         "login" : "Midar",
         "organizations_url" : "https://api.github.com/users/Midar/orgs",
         "received_events_url" : "https://api.github.com/users/Midar/received_events",
         "repos_url" : "https://api.github.com/users/Midar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Midar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Midar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Midar"
      }
   },
   {
      "body" : "@kristovatlas CoinShuffle doesn't solve the Sybil attack as far as I'm aware.  If you own all the other outputs of the CoinShuffle except for that of a single external participant, you still know that the remaining output you don't own belongs to the single participant.\r\n\r\nSybil attacks on input mixing were investigated classically by Monero:\r\nhttps://lab.getmonero.org/pubs/MRL-0001.pdf\r\n\r\nI'm not sure how Chaumian style blinding helps either, but maybe I haven't thought hard enough about it. It just lets a third party sign for spending the output without knowing what the output is.",
      "created_at" : "2015-08-18T21:04:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132350335",
      "id" : 132350335,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T21:08:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132350335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10604806?v=3",
         "events_url" : "https://api.github.com/users/cjepson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cjepson/followers",
         "following_url" : "https://api.github.com/users/cjepson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cjepson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cjepson",
         "id" : 10604806,
         "login" : "cjepson",
         "organizations_url" : "https://api.github.com/users/cjepson/orgs",
         "received_events_url" : "https://api.github.com/users/cjepson/received_events",
         "repos_url" : "https://api.github.com/users/cjepson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cjepson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cjepson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cjepson"
      }
   },
   {
      "body" : "@cjepson: You're right, my bad. I didn't read your post correctly. Sybil attacks are hard. Joinmarket potentially places incentives to reduce Sybil attackers overall % of the network, but I haven't seen any economic analysis of that yet.",
      "created_at" : "2015-08-18T21:09:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132352473",
      "id" : 132352473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T21:09:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132352473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7227529?v=3",
         "events_url" : "https://api.github.com/users/kristovatlas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristovatlas/followers",
         "following_url" : "https://api.github.com/users/kristovatlas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristovatlas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristovatlas",
         "id" : 7227529,
         "login" : "kristovatlas",
         "organizations_url" : "https://api.github.com/users/kristovatlas/orgs",
         "received_events_url" : "https://api.github.com/users/kristovatlas/received_events",
         "repos_url" : "https://api.github.com/users/kristovatlas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristovatlas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristovatlas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristovatlas"
      }
   },
   {
      "body" : "ECDH as i understand it have a very similar result as generating unique addresses for every receiving payment, i don't see how it is any privacy improvement. When you spend the coins received by the  ECDH method you still have the same problems of today, the recipient knows where the coins came from etc.\r\n\r\nFor the short term something already known and recognized should start being implemented as of today, so many years have passed and the promised privacy of bitcoin is still a myth. Built-in CoinJoin in the Core wallet should be good enough for now while something better is studied for the long term, but should be enabled by default in the wallet to avoid discrimination against its users if the mehtod happens to be detectable in the blockchain.",
      "created_at" : "2015-08-19T14:42:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132623579",
      "id" : 132623579,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-19T14:48:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132623579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13870845?v=3",
         "events_url" : "https://api.github.com/users/SpaceBitz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/SpaceBitz/followers",
         "following_url" : "https://api.github.com/users/SpaceBitz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/SpaceBitz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/SpaceBitz",
         "id" : 13870845,
         "login" : "SpaceBitz",
         "organizations_url" : "https://api.github.com/users/SpaceBitz/orgs",
         "received_events_url" : "https://api.github.com/users/SpaceBitz/received_events",
         "repos_url" : "https://api.github.com/users/SpaceBitz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/SpaceBitz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/SpaceBitz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/SpaceBitz"
      }
   }
]
