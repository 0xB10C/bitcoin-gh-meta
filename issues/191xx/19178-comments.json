[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r438999307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438999307"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems like `Lock` will try to acquire indefinitely by default (I'm looking at [these docs](https://docs.python.org/3/library/threading.html#threading.Lock.acquire)).\r\nI tried out some re-acquiring behavior with this code and it hangs forever as expected... Just in case someone like me does some dumb deadlocky stuff, would it be a good idea to make `mininode_lock` use something like`lock.acquire(timeout=60)` and/or `if lock.locked(): raise_assertion_error`?",
      "commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "created_at" : "2020-06-11T18:48:55Z",
      "diff_hunk" : "@@ -492,7 +492,7 @@ def test_function():\n # P2PConnection acquires this lock whenever delivering a message to a P2PInterface.\n # This lock should be acquired in the thread running the test logic to synchronize\n # access to any data shared with the P2PInterface or P2PConnection.\n-mininode_lock = threading.RLock()\n+mininode_lock = threading.Lock()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r438999307",
      "id" : 438999307,
      "line" : 495,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5OTMwNw==",
      "original_commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "original_line" : 495,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 5,
      "pull_request_review_id" : 429193828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-11T19:34:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438999307",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r438999876"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438999876"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good catch, I think this was from Amiti + me both adding it in separate PRs.",
      "commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "created_at" : "2020-06-11T18:50:01Z",
      "diff_hunk" : "@@ -658,8 +658,6 @@ def on_inv(self, message):\n                 # save txid\n                 self.tx_invs_received[i.hash] += 1\n \n-        super().on_inv(message)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r438999876",
      "id" : 438999876,
      "line" : 661,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5OTg3Ng==",
      "original_commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "original_line" : 661,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 13,
      "pull_request_review_id" : 429193828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-11T19:34:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438999876",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r439020734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439020734"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Actually I have a question because I'm not 100% sure how the test_runner works - does it allot a certain amount of time for each test? It looks like it would run infinitely? How would it affect Travis if 1 test is in deadlock?",
      "commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "created_at" : "2020-06-11T19:31:02Z",
      "diff_hunk" : "@@ -492,7 +492,7 @@ def test_function():\n # P2PConnection acquires this lock whenever delivering a message to a P2PInterface.\n # This lock should be acquired in the thread running the test logic to synchronize\n # access to any data shared with the P2PInterface or P2PConnection.\n-mininode_lock = threading.RLock()\n+mininode_lock = threading.Lock()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r439020734",
      "id" : 439020734,
      "in_reply_to_id" : 438999307,
      "line" : 495,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAyMDczNA==",
      "original_commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "original_line" : 495,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 5,
      "pull_request_review_id" : 429193828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-11T19:34:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439020734",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r439052922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439052922"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Travis is running our ci system, which calls the test_runner helper:\r\n\r\n```sh\r\n  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib ${TEST_RUNNER_ENV} test/functional/test_runner.py --ci $MAKEJOBS --tmpdirprefix \"${BASE_SCRATCH_DIR}/test_runner/\" --ansi --combinedlogslen=4000 ${TEST_RUNNER_EXTRA} --quiet --failfast\r\n```\r\n\r\nIf a test takes a long time, it will show up in the log as `Remaining jobs: [foo_bar.py]`.\r\n\r\nIf a test never finished, the virtual machine that the ci system runs on will eventually reboot and mark the run as failed.",
      "commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "created_at" : "2020-06-11T20:27:24Z",
      "diff_hunk" : "@@ -492,7 +492,7 @@ def test_function():\n # P2PConnection acquires this lock whenever delivering a message to a P2PInterface.\n # This lock should be acquired in the thread running the test logic to synchronize\n # access to any data shared with the P2PInterface or P2PConnection.\n-mininode_lock = threading.RLock()\n+mininode_lock = threading.Lock()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r439052922",
      "id" : 439052922,
      "in_reply_to_id" : 438999307,
      "line" : 495,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1MjkyMg==",
      "original_commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "original_line" : 495,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 5,
      "pull_request_review_id" : 429265357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-11T20:27:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439052922",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r439097140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439097140"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> would it be a good idea to make mininode_lock use something likelock.acquire(timeout=60) and/or if lock.locked(): raise_assertion_error\r\n\r\nWe use the `with <lock>:` syntax everywhere, which doesn't allow a `blocking` or `timeout` argument. I don't think there's a way to set a default time on a lock.\r\n\r\nI think if you did accidentally introduce a deadlock, you'd figure it out pretty easily. If your script was hanging, I think the best way would be to implement some way to attach pdb to the running process (eg https://stackoverflow.com/a/25329467/933705 or https://stackoverflow.com/a/147114/933705) and then inspect the stack trace.\r\n\r\n(in fact, I think this would be generally useful, so perhaps someone should implement it :slightly_smiling_face: )",
      "commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "created_at" : "2020-06-11T22:04:06Z",
      "diff_hunk" : "@@ -492,7 +492,7 @@ def test_function():\n # P2PConnection acquires this lock whenever delivering a message to a P2PInterface.\n # This lock should be acquired in the thread running the test logic to synchronize\n # access to any data shared with the P2PInterface or P2PConnection.\n-mininode_lock = threading.RLock()\n+mininode_lock = threading.Lock()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r439097140",
      "id" : 439097140,
      "in_reply_to_id" : 438999307,
      "line" : 495,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NzE0MA==",
      "original_commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "original_line" : 495,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 5,
      "pull_request_review_id" : 429324863,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-11T22:04:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439097140",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I wonder if we should actually change the Lock to be a Conditional Variable: https://docs.python.org/3/library/threading.html#condition-objects. A lot of what we do with the lock is polling for changes on objects, so having a notify() function that wakes the blocked thread could be much nicer.",
      "created_at" : "2020-06-11T22:06:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19178#issuecomment-642955199",
      "id" : 642955199,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19178",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Mjk1NTE5OQ==",
      "updated_at" : "2020-06-11T22:06:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642955199",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Seems like a good first step for future cleanups. (e.g. making the lock a private member and then replacing the polling loops with cvs)",
      "created_at" : "2020-06-11T22:31:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19178#issuecomment-642963705",
      "id" : 642963705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19178",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Mjk2MzcwNQ==",
      "updated_at" : "2020-06-11T22:31:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642963705",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r439132241"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439132241"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok this makes sense, thanks! I was worried I could accidentally stall Travis hahaha. Having some debugging help sounds useful, let me go look for a someone...",
      "commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "created_at" : "2020-06-11T23:57:07Z",
      "diff_hunk" : "@@ -492,7 +492,7 @@ def test_function():\n # P2PConnection acquires this lock whenever delivering a message to a P2PInterface.\n # This lock should be acquired in the thread running the test logic to synchronize\n # access to any data shared with the P2PInterface or P2PConnection.\n-mininode_lock = threading.RLock()\n+mininode_lock = threading.Lock()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r439132241",
      "id" : 439132241,
      "in_reply_to_id" : 438999307,
      "line" : 495,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEzMjI0MQ==",
      "original_commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "original_line" : 495,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 5,
      "pull_request_review_id" : 429371260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-11T23:57:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439132241",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r440351564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440351564"
         }
      },
      "author_association" : "NONE",
      "body" : "I'm a bit confused on why `get_invs` needs to grab the lock, but `on_inv` doesn't? I understand that in the case of `wait_for_broadcast`, `self.wait_until` already acquires the lock, but I just wanted to confirm that `on_inv` already expects to be holding the lock on call.",
      "commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "created_at" : "2020-06-15T18:01:37Z",
      "diff_hunk" : "@@ -658,8 +658,6 @@ def on_inv(self, message):\n                 # save txid\n                 self.tx_invs_received[i.hash] += 1\n \n-        super().on_inv(message)\n-\n     def get_invs(self):\n         with mininode_lock:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19178#discussion_r440351564",
      "id" : 440351564,
      "line" : 662,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1MTU2NA==",
      "original_commit_id" : "62068381a3b9c065d81300be79abba7aecfdb41b",
      "original_line" : 662,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 16,
      "pull_request_review_id" : 430873240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19178",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-15T18:07:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440351564",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13020431?v=4",
         "events_url" : "https://api.github.com/users/gillichu/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gillichu/followers",
         "following_url" : "https://api.github.com/users/gillichu/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gillichu/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gillichu",
         "id" : 13020431,
         "login" : "gillichu",
         "node_id" : "MDQ6VXNlcjEzMDIwNDMx",
         "organizations_url" : "https://api.github.com/users/gillichu/orgs",
         "received_events_url" : "https://api.github.com/users/gillichu/received_events",
         "repos_url" : "https://api.github.com/users/gillichu/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gillichu/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gillichu/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gillichu"
      }
   }
]
