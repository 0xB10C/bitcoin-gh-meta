[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Notice: this is just one possible fix. Other possible fixes are:\r\n\r\n1. Reverse the other access path, so we always have the order as `m_cached_tip_mutex`, `cs_main`. I think this would require bigger changes.\r\n\r\n2. Ditch `m_cached_tip_mutex` and protect `ClientModel::m_cached_tip_blocks` by `cs_main`. Adding more stuff under the protection of `cs_main` would in general reduce concurrency. Maybe not in this particular case if we are always holding `cs_main` anyway when we try to access `ClientModel::m_cached_tip_blocks`. Do we?\r\n\r\ncc @furszy",
      "created_at" : "2020-06-01T12:58:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19132#issuecomment-636846505",
      "id" : 636846505,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19132",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjg0NjUwNQ==",
      "updated_at" : "2020-06-01T12:58:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636846505",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19132#discussion_r433224459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19132"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433224459"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    tip = m_node.getBestBlockHash(); // Will lock `cs_main` (and release it). This is needed to be done early to not violate the implicit lock order cs_main -> m_cached_tip_mutex\r\n```\r\n\r\nI think the comment about the lock order can be combined with this comment?",
      "commit_id" : "367c8a6df7b201fa35e2b49fcd4d7134de6548a8",
      "created_at" : "2020-06-01T13:11:22Z",
      "diff_hunk" : "@@ -116,9 +116,22 @@ int ClientModel::getNumBlocks() const\n \n uint256 ClientModel::getBestBlockHash()\n {\n+    // Lock order must be: first `cs_main`, then `m_cached_tip_mutex`.\n+\n+    uint256 tip{WITH_LOCK(m_cached_tip_mutex, return m_cached_tip_blocks)};\n+\n+    if (!tip.IsNull()) {\n+        return tip;\n+    }\n+\n+    tip = m_node.getBestBlockHash(); // Will lock `cs_main` (and release it).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19132#discussion_r433224459",
      "id" : 433224459,
      "line" : 127,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIyNDQ1OQ==",
      "original_commit_id" : "367c8a6df7b201fa35e2b49fcd4d7134de6548a8",
      "original_line" : 127,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/qt/clientmodel.cpp",
      "position" : 12,
      "pull_request_review_id" : 421829797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19132",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-01T13:11:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433224459",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19132#discussion_r433227346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19132"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433227346"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If the requirement to check `IsNull` twice is dropped, then I think this whole function can be written shorter in just 4 lines of code:\r\n\r\n```cpp\r\n     uint256 tip{WITH_LOCK(m_cached_tip_mutex, return m_cached_tip_blocks)};\r\n     if (!tip.IsNull()) return tip;\r\n\r\n     tip = m_node.getBestBlockHash(); // Will lock `cs_main` (and release it). This is needed to be done early to not violate the implicit lock order cs_main -> m_cached_tip_mutex\r\n\r\n     return WITH_LOCK(m_cached_tip_mutex, return m_cached_tip_blocks = tip);",
      "commit_id" : "367c8a6df7b201fa35e2b49fcd4d7134de6548a8",
      "created_at" : "2020-06-01T13:17:01Z",
      "diff_hunk" : "@@ -116,9 +116,22 @@ int ClientModel::getNumBlocks() const\n \n uint256 ClientModel::getBestBlockHash()\n {\n+    // Lock order must be: first `cs_main`, then `m_cached_tip_mutex`.\n+\n+    uint256 tip{WITH_LOCK(m_cached_tip_mutex, return m_cached_tip_blocks)};\n+\n+    if (!tip.IsNull()) {\n+        return tip;\n+    }\n+\n+    tip = m_node.getBestBlockHash(); // Will lock `cs_main` (and release it).\n+\n     LOCK(m_cached_tip_mutex);\n+    // We checked that `m_cached_tip_blocks` is not null above, but then we\n+    // released the mutex `m_cached_tip_mutex`, so it could have changed in the\n+    // meantime. Thus, check again.\n     if (m_cached_tip_blocks.IsNull()) {\n-        m_cached_tip_blocks = m_node.getBestBlockHash();\n+        m_cached_tip_blocks = tip;\n     }\n     return m_cached_tip_blocks;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19132#discussion_r433227346",
      "id" : 433227346,
      "line" : 136,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIyNzM0Ng==",
      "original_commit_id" : "367c8a6df7b201fa35e2b49fcd4d7134de6548a8",
      "original_line" : 136,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/qt/clientmodel.cpp",
      "position" : 22,
      "pull_request_review_id" : 421833688,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19132",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-01T13:17:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433227346",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
