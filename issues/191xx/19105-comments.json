[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19105#discussion_r433820249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19105"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433820249"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "To simplify the code, one could just use [Fermat's little theorem](https://en.wikipedia.org/wiki/Fermat%27s_little_theorem) here to calculate the modular inverse. The drawback is that it's much slower than the extended Euclidean algorithm, calculating the modinv of a random 3072-bit number takes approx. 100-150ms on my machine, which is at least 1 order of magnitude slower. Not sure if that's an issue and in the case of tests whether performance or readability is more important :-)\r\n\r\n```suggestion\r\ndef modinv(a, n):\r\n    \"\"\"Compute the modular inverse of a prime modulo n using Fermat's little theorem.\"\"\"\r\n    return pow(a, n-2, n)\r\n```",
      "commit_id" : "53282c77225c4afb512c884f72c88f595136db27",
      "created_at" : "2020-06-02T11:57:14Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+# Copyright (c) 2020 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Native Python MuHash3072 implementation.\"\"\"\n+\n+import hashlib\n+\n+def modinv(a, n):\n+    \"\"\"Compute the modular inverse of a modulo n.\"\"\"\n+    t1, t2 = 0, 1\n+    r1, r2 = n, a\n+    while r2 != 0:\n+        q = r1 // r2\n+        t1, t2 = t2, t1 - q * t2\n+        r1, r2 = r2, r1 - q * r2\n+    if r1 > 1:\n+        return None\n+    if t1 < 0:\n+        t1 += n\n+    return t1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19105#discussion_r433820249",
      "id" : 433820249,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgyMDI0OQ==",
      "original_commit_id" : "fc6f2bd3376bc7442992ceb6b5f2c8e8a805f018",
      "original_line" : 20,
      "original_position" : 20,
      "original_start_line" : 8,
      "path" : "test/functional/test_framework/muhash.py",
      "position" : 20,
      "pull_request_review_id" : 422602841,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19105",
      "side" : "RIGHT",
      "start_line" : 8,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-02T20:21:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433820249",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19105#discussion_r434155051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19105"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434155051"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I see your point, however, given how often these tests run on people's machines and in the CI environment, performance does matter quite a bit. But I think it's a great question to discuss during the PR review club next week :)",
      "commit_id" : "53282c77225c4afb512c884f72c88f595136db27",
      "created_at" : "2020-06-02T20:25:43Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+# Copyright (c) 2020 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Native Python MuHash3072 implementation.\"\"\"\n+\n+import hashlib\n+\n+def modinv(a, n):\n+    \"\"\"Compute the modular inverse of a modulo n.\"\"\"\n+    t1, t2 = 0, 1\n+    r1, r2 = n, a\n+    while r2 != 0:\n+        q = r1 // r2\n+        t1, t2 = t2, t1 - q * t2\n+        r1, r2 = r2, r1 - q * r2\n+    if r1 > 1:\n+        return None\n+    if t1 < 0:\n+        t1 += n\n+    return t1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19105#discussion_r434155051",
      "id" : 434155051,
      "in_reply_to_id" : 433820249,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1NTA1MQ==",
      "original_commit_id" : "fc6f2bd3376bc7442992ceb6b5f2c8e8a805f018",
      "original_line" : 20,
      "original_position" : 20,
      "original_start_line" : 8,
      "path" : "test/functional/test_framework/muhash.py",
      "position" : 20,
      "pull_request_review_id" : 423031205,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19105",
      "side" : "RIGHT",
      "start_line" : 8,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-02T20:25:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434155051",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Added a super simple test that reimplements the C++ impl unit test in Python. I am working on more exhaustive tests for the next PR in this series.",
      "created_at" : "2020-06-02T20:29:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19105#issuecomment-637788531",
      "id" : 637788531,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19105",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNzc4ODUzMQ==",
      "updated_at" : "2020-06-02T20:29:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/637788531",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19105#discussion_r434210798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19105"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434210798"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also, if comprehension is a concern, I suspect that people who are familiar with modular inverses will generally understand both the euclidean and the fermat approach; and to people who aren't familiar with it both will look like black magic.",
      "commit_id" : "53282c77225c4afb512c884f72c88f595136db27",
      "created_at" : "2020-06-02T22:31:20Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+# Copyright (c) 2020 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Native Python MuHash3072 implementation.\"\"\"\n+\n+import hashlib\n+\n+def modinv(a, n):\n+    \"\"\"Compute the modular inverse of a modulo n.\"\"\"\n+    t1, t2 = 0, 1\n+    r1, r2 = n, a\n+    while r2 != 0:\n+        q = r1 // r2\n+        t1, t2 = t2, t1 - q * t2\n+        r1, r2 = r2, r1 - q * r2\n+    if r1 > 1:\n+        return None\n+    if t1 < 0:\n+        t1 += n\n+    return t1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19105#discussion_r434210798",
      "id" : 434210798,
      "in_reply_to_id" : 433820249,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxMDc5OA==",
      "original_commit_id" : "fc6f2bd3376bc7442992ceb6b5f2c8e8a805f018",
      "original_line" : 20,
      "original_position" : 20,
      "original_start_line" : 8,
      "path" : "test/functional/test_framework/muhash.py",
      "position" : 20,
      "pull_request_review_id" : 423101289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19105",
      "side" : "RIGHT",
      "start_line" : 8,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-02T22:31:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434210798",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19105#discussion_r434546037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19105"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434546037"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@fjahr @sipa: Fair enough! By the way, Python 3.8 introduced support for negative exponents in the modulo (three argument) `pow()` (see https://bugs.python.org/issue36027, https://github.com/python/cpython/pull/13266), internally calculating the modular inverse via the extended Euclidean algorithm. I.e. somewhere in the future it could be just a very simple:\r\n`return pow(a, -1, n)`",
      "commit_id" : "53282c77225c4afb512c884f72c88f595136db27",
      "created_at" : "2020-06-03T12:57:36Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+# Copyright (c) 2020 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Native Python MuHash3072 implementation.\"\"\"\n+\n+import hashlib\n+\n+def modinv(a, n):\n+    \"\"\"Compute the modular inverse of a modulo n.\"\"\"\n+    t1, t2 = 0, 1\n+    r1, r2 = n, a\n+    while r2 != 0:\n+        q = r1 // r2\n+        t1, t2 = t2, t1 - q * t2\n+        r1, r2 = r2, r1 - q * r2\n+    if r1 > 1:\n+        return None\n+    if t1 < 0:\n+        t1 += n\n+    return t1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19105#discussion_r434546037",
      "id" : 434546037,
      "in_reply_to_id" : 433820249,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0NjAzNw==",
      "original_commit_id" : "fc6f2bd3376bc7442992ceb6b5f2c8e8a805f018",
      "original_line" : 20,
      "original_position" : 20,
      "original_start_line" : 8,
      "path" : "test/functional/test_framework/muhash.py",
      "position" : 20,
      "pull_request_review_id" : 423524324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19105",
      "side" : "RIGHT",
      "start_line" : 8,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-03T12:57:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434546037",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19145 (Add hash_type options for gettxoutsetinfo by fjahr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-06-06T02:03:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19105#issuecomment-639955477",
      "id" : 639955477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19105",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTk1NTQ3Nw==",
      "updated_at" : "2020-06-06T02:03:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639955477",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
