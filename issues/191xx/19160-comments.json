[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20012 (rpc: Remove duplicate name and argNames from CRPCCommand by MarcoFalke)\n* #19471 (util: Make default arg values more specific by hebasto)\n* #19425 (refactor: Get rid of more redundant chain methods by ryanofsky)\n* #18980 (build: Decouple clientversion.cpp from the git repo by hebasto)\n* #16365 (Log RPC parameters (arguments) if -debug=rpcparams by LarryRuane)\n* #15936 (Unify bitcoin-qt and bitcoind persistent settings by ryanofsky)\n* #15719 (Wallet passive startup by ryanofsky)\n* #10443 (Add fee_est tool for debugging fee estimation code by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-06-04T00:27:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-638529365",
      "id" : 638529365,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODUyOTM2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T08:51:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638529365",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated d38f790138089b2956207b5e98b74e1e0e116c5c -> 99562989e749e002c07d3cda1f95a5781160b187 ([`pr/ipc-echo.1`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.1) -> [`pr/ipc-echo.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.1..pr/ipc-echo.2)) fixing missing include causing build failures https://travis-ci.org/github/bitcoin/bitcoin/jobs/694309633#L2311\r\nUpdated 99562989e749e002c07d3cda1f95a5781160b187 -> 885f0d104141f0f157f05c02c9e4fb4c2f5c6d57 ([`pr/ipc-echo.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.2) -> [`pr/ipc-echo.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.2..pr/ipc-echo.3)) to fix missing include error https://travis-ci.org/github/bitcoin/bitcoin/jobs/694434815#L2574\r\nRebased 885f0d104141f0f157f05c02c9e4fb4c2f5c6d57 -> 52192725a3ec1f814cf40049de45efffc226cd5b ([`pr/ipc-echo.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.3) -> [`pr/ipc-echo.4`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-echo.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-echo.3-rebase..pr/ipc-echo.4)) due to conflict with #19176 and reducing Init class dependencies",
      "created_at" : "2020-06-05T13:41:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-639486920",
      "id" : 639486920,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTQ4NjkyMA==",
      "updated_at" : "2020-06-11T03:54:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639486920",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-06-09T21:48:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-641600105",
      "id" : 641600105,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MTYwMDEwNQ==",
      "updated_at" : "2020-06-09T21:48:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/641600105",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-06-11T09:41:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-642536017",
      "id" : 642536017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjUzNjAxNw==",
      "updated_at" : "2020-06-11T09:41:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642536017",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440489253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440489253"
         }
      },
      "author_association" : "MEMBER",
      "body" : "b12041f\r\n\r\nAFAICT, `addCloseHook` stacks new hook as prefix to previous added one, thus call order is reverse than registering order ?",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-06-15T22:50:15Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_BASE_H\n+#define BITCOIN_INTERFACES_BASE_H\n+\n+#include <cassert>\n+#include <memory>\n+\n+namespace interfaces {\n+\n+class Base;\n+\n+//! Close hook.\n+class CloseHook\n+{\n+public:\n+    virtual ~CloseHook() {}\n+\n+    //! Handle interface being closed or destroyed.\n+    virtual void onClose(Base& interface) {}\n+\n+    std::unique_ptr<CloseHook> m_next_hook;\n+};\n+\n+//! Close hook that encapsulate and deletes a moveable object.\n+template <typename T>\n+class Deleter : public CloseHook\n+{\n+public:\n+    explicit Deleter(T&& value) : m_value(std::move(value)) {}\n+    void onClose(Base& interface) override { T(std::move(m_value)); }\n+    T m_value;\n+};\n+\n+//! Base class for interfaces.\n+class Base\n+{\n+public:\n+    //! Destructor, calls close hooks.\n+    virtual ~Base();\n+\n+    // Call close hooks without waiting for destructor.\n+    void close();\n+\n+    //! Add close hook.\n+    void addCloseHook(std::unique_ptr<CloseHook> close_hook);\n+\n+    std::unique_ptr<CloseHook> m_close_hook;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440489253",
      "id" : 440489253,
      "line" : 51,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4OTI1Mw==",
      "original_commit_id" : "b12041f74de234ad45083be8f86ae714dd5bdfae",
      "original_line" : 51,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/interfaces/base.h",
      "position" : 51,
      "pull_request_review_id" : 431045015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440489253",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440490694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440490694"
         }
      },
      "author_association" : "MEMBER",
      "body" : "643d602\r\n\r\n`LocalInit` isn't really meaningful as a name IMO, if understands well it must implemented both by parent and child processes, but methods called will diverge ? `IPCWrapper` , `IPCSupervisor`, `IPCAccess`, ... ?",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-06-15T22:54:58Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Interface allowing multiprocess code to create other interfaces on startup.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+};\n+\n+//! Specialization of Init for current process.\n+class LocalInit : public Init",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440490694",
      "id" : 440490694,
      "line" : 70,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5MDY5NA==",
      "original_commit_id" : "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "original_line" : 70,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : 70,
      "pull_request_review_id" : 431045015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440490694",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440491394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440491394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "643d602\r\n\r\nDocument `-ipcfd` usage ?",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-06-15T22:57:00Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/ipc.h>\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+#include <util/memory.h>\n+#include <util/strencodings.h>\n+\n+#include <iostream>\n+#include <mp/util.h>\n+#include <tinyformat.h>\n+\n+namespace interfaces {\n+namespace {\n+class IpcProcessImpl : public IpcProcess\n+{\n+public:\n+    IpcProcessImpl(int argc, char* argv[], const char* exe_name, IpcProtocol& protocol)\n+        : m_argc(argc), m_argv(argv), m_exe_name(exe_name), m_protocol(protocol)\n+    {\n+    }\n+    int spawn(const std::string& new_exe_name, int& pid) override\n+    {\n+        return mp::SpawnProcess(pid, [&](int fd) {\n+            fs::path path = m_argc > 0 ? m_argv[0] : \"\";\n+            path.remove_filename();\n+            path.append(new_exe_name);\n+            return std::vector<std::string>{path.string(), \"-ipcfd\", strprintf(\"%i\", fd)};\n+        });\n+    }\n+    int wait(int pid) override { return mp::WaitProcess(pid); }\n+    bool serve(int& exit_status) override\n+    {\n+        if (m_argc != 3 || strcmp(m_argv[1], \"-ipcfd\") != 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440491394",
      "id" : 440491394,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5MTM5NA==",
      "original_commit_id" : "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "original_line" : 40,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/interfaces/ipc.cpp",
      "position" : 40,
      "pull_request_review_id" : 431045015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440491394",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440493321"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440493321"
         }
      },
      "author_association" : "MEMBER",
      "body" : "643d602\r\n\r\nMaybe the connection flow between parent and child process could be documented, what should be the order between parent serve, parent connect, child serve, child connect ? in `echoipc` demonstration, I don't see `serve` being called and thus that's a bit confusing with regards to documentation.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-06-15T23:03:09Z",
      "diff_hunk" : "@@ -0,0 +1,87 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_IPC_H\n+#define BITCOIN_INTERFACES_IPC_H\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+\n+#include <memory>\n+\n+namespace interfaces {\n+//! IPC process interface for spawning bitcoin processes and serving requests\n+//! in processes that have been spawned.\n+//!\n+//! There will different implementations of this interface depending on the\n+//! platform (e.g. unix, windows).\n+class IpcProcess\n+{\n+public:\n+    virtual ~IpcProcess() = default;\n+\n+    //! Spawn process and return socket file descriptor for communicating with\n+    //! it.\n+    virtual int spawn(const std::string& new_exe_name, int& pid) = 0;\n+\n+    //! Wait for spawned process to exit and return exit code.\n+    virtual int wait(int pid) = 0;\n+\n+    //! Serve request if current process is a spawned subprocess. Blocks until\n+    //! socket for communicating with the parent process is disconnected.\n+    virtual bool serve(int& exit_status) = 0;\n+};\n+\n+//! IPC protocol interface for calling IPC methods over sockets.\n+//!\n+//! There may be different implementations of this interface for different IPC\n+//! protocols (e.g. Cap'n Proto, gRPC, JSON-RPC, or custom protocols).\n+//!\n+//! An implementation of this interface needs to provide an `interface::Init`\n+//! object that translates method calls into requests sent over a socket, and it\n+//! needs to implement a handler that translates requests received over a socket\n+//! into method calls on a provided `interface::Init` object.\n+class IpcProtocol\n+{\n+public:\n+    virtual ~IpcProtocol() = default;\n+\n+    //! Return Init interface that forwards requests over given socket descriptor.\n+    //! Socket communication is handled on a background thread.\n+    //!\n+    //! @note It could be potentially useful in the future to add\n+    //! std::function<void()> on_disconnect callback argument here. But there\n+    //! isn't an immediate need, because the protocol implementation can clean\n+    //! up its own state (calling ProxyServer destructors, etc) on disconnect,\n+    //! and any client calls will just throw IpcException errors after a\n+    //! disconnect.\n+    virtual std::unique_ptr<Init> connect(int fd) = 0;\n+\n+    //! Handle requests on provided socket descriptor. Socket communication is\n+    //! handled on the current thread. This blocks until the client closes the socket.\n+    //!\n+    //! @note: If this method is called, it needs be called before connect()\n+    //! because for ease of implementation it's inflexible and always runs the\n+    //! event loop in the foreground thread. It can share its event loop with\n+    //! connect() but can't share an event loop that was created by connect().\n+    //! This isn't really a problem because serve() is only called by spawned",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440493321",
      "id" : 440493321,
      "line" : 68,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5MzMyMQ==",
      "original_commit_id" : "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/interfaces/ipc.h",
      "position" : 68,
      "pull_request_review_id" : 431045015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440493321",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440506337"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440506337"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440493321\r\n\r\n> [643d602](https://github.com/bitcoin/bitcoin/commit/643d602b3fcb3eac22a2962cff1a0b7019bfebb0)\r\n> \r\n> Maybe the connection flow between parent and child process could be documented, what should be the order between parent serve, parent connect, child serve, child connect ? in `echoipc` demonstration, I don't see `serve` being called and thus that's a bit confusing with regards to documentation.\r\n\r\nThanks for the review! I'll address the other comments, but just in case there is any question about `serve()` it's called in `main()` here in the `bitcoin-node` executable:\r\n\r\nhttps://github.com/ryanofsky/bitcoin/blob/pr/ipc-echo.4/src/bitcoind.cpp#L178-L185\r\n\r\nand here in the `bitcoin-wallet` executable:\r\n\r\nhttps://github.com/ryanofsky/bitcoin/blob/pr/ipc.113/src/bitcoin-wallet.cpp#L80-L88\r\n\r\nIf we wanted to have a separate `bitcoin-echo` executable, it could have a `main()` function just like those examples. I didn't want to have a separate `bitcoin-echo` executable though, just because I thought it'd be confusing to have a kind of pointless `bitcoin-echo` program installed along with `bitcoin-gui` `bitcoin-node` and `bitcoin-wallet`, so I just put the echo functionality inside `bitcoin-node`.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-06-15T23:45:35Z",
      "diff_hunk" : "@@ -0,0 +1,87 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_IPC_H\n+#define BITCOIN_INTERFACES_IPC_H\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+\n+#include <memory>\n+\n+namespace interfaces {\n+//! IPC process interface for spawning bitcoin processes and serving requests\n+//! in processes that have been spawned.\n+//!\n+//! There will different implementations of this interface depending on the\n+//! platform (e.g. unix, windows).\n+class IpcProcess\n+{\n+public:\n+    virtual ~IpcProcess() = default;\n+\n+    //! Spawn process and return socket file descriptor for communicating with\n+    //! it.\n+    virtual int spawn(const std::string& new_exe_name, int& pid) = 0;\n+\n+    //! Wait for spawned process to exit and return exit code.\n+    virtual int wait(int pid) = 0;\n+\n+    //! Serve request if current process is a spawned subprocess. Blocks until\n+    //! socket for communicating with the parent process is disconnected.\n+    virtual bool serve(int& exit_status) = 0;\n+};\n+\n+//! IPC protocol interface for calling IPC methods over sockets.\n+//!\n+//! There may be different implementations of this interface for different IPC\n+//! protocols (e.g. Cap'n Proto, gRPC, JSON-RPC, or custom protocols).\n+//!\n+//! An implementation of this interface needs to provide an `interface::Init`\n+//! object that translates method calls into requests sent over a socket, and it\n+//! needs to implement a handler that translates requests received over a socket\n+//! into method calls on a provided `interface::Init` object.\n+class IpcProtocol\n+{\n+public:\n+    virtual ~IpcProtocol() = default;\n+\n+    //! Return Init interface that forwards requests over given socket descriptor.\n+    //! Socket communication is handled on a background thread.\n+    //!\n+    //! @note It could be potentially useful in the future to add\n+    //! std::function<void()> on_disconnect callback argument here. But there\n+    //! isn't an immediate need, because the protocol implementation can clean\n+    //! up its own state (calling ProxyServer destructors, etc) on disconnect,\n+    //! and any client calls will just throw IpcException errors after a\n+    //! disconnect.\n+    virtual std::unique_ptr<Init> connect(int fd) = 0;\n+\n+    //! Handle requests on provided socket descriptor. Socket communication is\n+    //! handled on the current thread. This blocks until the client closes the socket.\n+    //!\n+    //! @note: If this method is called, it needs be called before connect()\n+    //! because for ease of implementation it's inflexible and always runs the\n+    //! event loop in the foreground thread. It can share its event loop with\n+    //! connect() but can't share an event loop that was created by connect().\n+    //! This isn't really a problem because serve() is only called by spawned",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440506337",
      "id" : 440506337,
      "in_reply_to_id" : 440493321,
      "line" : 68,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUwNjMzNw==",
      "original_commit_id" : "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/interfaces/ipc.h",
      "position" : 68,
      "pull_request_review_id" : 431065375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440506337",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447135719"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447135719"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440489253\r\n\r\n> [b12041f](https://github.com/bitcoin/bitcoin/commit/b12041f74de234ad45083be8f86ae714dd5bdfae)\r\n> \r\n> AFAICT, `addCloseHook` stacks new hook as prefix to previous added one, thus call order is reverse than registering order ?\r\n\r\nAdded comment, this is analogous to how when multiple variables are declared in a scope, the later variables are destroyed first so destructors can depend on the earlier variables not being destroyed yet. Here later close hooks can rely on earlier close hooks not being called yet.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-06-29T17:29:38Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_BASE_H\n+#define BITCOIN_INTERFACES_BASE_H\n+\n+#include <cassert>\n+#include <memory>\n+\n+namespace interfaces {\n+\n+class Base;\n+\n+//! Close hook.\n+class CloseHook\n+{\n+public:\n+    virtual ~CloseHook() {}\n+\n+    //! Handle interface being closed or destroyed.\n+    virtual void onClose(Base& interface) {}\n+\n+    std::unique_ptr<CloseHook> m_next_hook;\n+};\n+\n+//! Close hook that encapsulate and deletes a moveable object.\n+template <typename T>\n+class Deleter : public CloseHook\n+{\n+public:\n+    explicit Deleter(T&& value) : m_value(std::move(value)) {}\n+    void onClose(Base& interface) override { T(std::move(m_value)); }\n+    T m_value;\n+};\n+\n+//! Base class for interfaces.\n+class Base\n+{\n+public:\n+    //! Destructor, calls close hooks.\n+    virtual ~Base();\n+\n+    // Call close hooks without waiting for destructor.\n+    void close();\n+\n+    //! Add close hook.\n+    void addCloseHook(std::unique_ptr<CloseHook> close_hook);\n+\n+    std::unique_ptr<CloseHook> m_close_hook;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447135719",
      "id" : 447135719,
      "in_reply_to_id" : 440489253,
      "line" : 51,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNTcxOQ==",
      "original_commit_id" : "b12041f74de234ad45083be8f86ae714dd5bdfae",
      "original_line" : 51,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/interfaces/base.h",
      "position" : 51,
      "pull_request_review_id" : 439356048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447135719",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447136167"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136167"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440490694\r\n\r\n> [643d602](https://github.com/bitcoin/bitcoin/commit/643d602b3fcb3eac22a2962cff1a0b7019bfebb0)\r\n> \r\n> `LocalInit` isn't really meaningful as a name IMO, if understands well it must implemented both by parent and child processes, but methods called will diverge ? `IPCWrapper` , `IPCSupervisor`, `IPCAccess`, ... ?\r\n\r\nI removed LocalInit SpawnProcess method and made it a standalone method to avoid confusion here and added comments describing Init and LocalInit classes. Init interface is just an initial interface exposed by a remote process when you spawn or connect to it. You call Init interface methods to get access to other interfaces. LocalInit is a specialization of Init for the local process. It gives access to the same Init methods, but can also provide local information like the current NodeContext pointer and current executable name.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-06-29T17:30:19Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Interface allowing multiprocess code to create other interfaces on startup.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+};\n+\n+//! Specialization of Init for current process.\n+class LocalInit : public Init",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447136167",
      "id" : 447136167,
      "in_reply_to_id" : 440490694,
      "line" : 70,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNjE2Nw==",
      "original_commit_id" : "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "original_line" : 70,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : 70,
      "pull_request_review_id" : 439356048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136167",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447136270"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136270"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440491394\r\n\r\n> [643d602](https://github.com/bitcoin/bitcoin/commit/643d602b3fcb3eac22a2962cff1a0b7019bfebb0)\r\n> \r\n> Document `-ipcfd` usage ?\r\n\r\nAdded comment here. It might be good to add to `-help` output too, but I can't easily use ArgsManager::AddArg without losing \"Invalid parameter -ipcfd\" checking, and I don't think there are any uses for `-ipcfd` that wouldn't go through IpcProcess::spawn, where it's just an implementation detail.\r\n",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-06-29T17:30:29Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/ipc.h>\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+#include <util/memory.h>\n+#include <util/strencodings.h>\n+\n+#include <iostream>\n+#include <mp/util.h>\n+#include <tinyformat.h>\n+\n+namespace interfaces {\n+namespace {\n+class IpcProcessImpl : public IpcProcess\n+{\n+public:\n+    IpcProcessImpl(int argc, char* argv[], const char* exe_name, IpcProtocol& protocol)\n+        : m_argc(argc), m_argv(argv), m_exe_name(exe_name), m_protocol(protocol)\n+    {\n+    }\n+    int spawn(const std::string& new_exe_name, int& pid) override\n+    {\n+        return mp::SpawnProcess(pid, [&](int fd) {\n+            fs::path path = m_argc > 0 ? m_argv[0] : \"\";\n+            path.remove_filename();\n+            path.append(new_exe_name);\n+            return std::vector<std::string>{path.string(), \"-ipcfd\", strprintf(\"%i\", fd)};\n+        });\n+    }\n+    int wait(int pid) override { return mp::WaitProcess(pid); }\n+    bool serve(int& exit_status) override\n+    {\n+        if (m_argc != 3 || strcmp(m_argv[1], \"-ipcfd\") != 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447136270",
      "id" : 447136270,
      "in_reply_to_id" : 440491394,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNjI3MA==",
      "original_commit_id" : "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "original_line" : 40,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/interfaces/ipc.cpp",
      "position" : 40,
      "pull_request_review_id" : 439356048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136270",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447136782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136782"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r440493321\r\n\r\n> [643d602](https://github.com/bitcoin/bitcoin/commit/643d602b3fcb3eac22a2962cff1a0b7019bfebb0)\r\n> \r\n> Maybe the connection flow between parent and child process could be documented, what should be the order between parent serve, parent connect, child serve, child connect ? in `echoipc` demonstration, I don't see `serve` being called and thus that's a bit confusing with regards to documentation.\r\n\r\nGood idea, added a description of this to the Init interface comment.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-06-29T17:31:16Z",
      "diff_hunk" : "@@ -0,0 +1,87 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_IPC_H\n+#define BITCOIN_INTERFACES_IPC_H\n+\n+#include <fs.h>\n+#include <interfaces/init.h>\n+\n+#include <memory>\n+\n+namespace interfaces {\n+//! IPC process interface for spawning bitcoin processes and serving requests\n+//! in processes that have been spawned.\n+//!\n+//! There will different implementations of this interface depending on the\n+//! platform (e.g. unix, windows).\n+class IpcProcess\n+{\n+public:\n+    virtual ~IpcProcess() = default;\n+\n+    //! Spawn process and return socket file descriptor for communicating with\n+    //! it.\n+    virtual int spawn(const std::string& new_exe_name, int& pid) = 0;\n+\n+    //! Wait for spawned process to exit and return exit code.\n+    virtual int wait(int pid) = 0;\n+\n+    //! Serve request if current process is a spawned subprocess. Blocks until\n+    //! socket for communicating with the parent process is disconnected.\n+    virtual bool serve(int& exit_status) = 0;\n+};\n+\n+//! IPC protocol interface for calling IPC methods over sockets.\n+//!\n+//! There may be different implementations of this interface for different IPC\n+//! protocols (e.g. Cap'n Proto, gRPC, JSON-RPC, or custom protocols).\n+//!\n+//! An implementation of this interface needs to provide an `interface::Init`\n+//! object that translates method calls into requests sent over a socket, and it\n+//! needs to implement a handler that translates requests received over a socket\n+//! into method calls on a provided `interface::Init` object.\n+class IpcProtocol\n+{\n+public:\n+    virtual ~IpcProtocol() = default;\n+\n+    //! Return Init interface that forwards requests over given socket descriptor.\n+    //! Socket communication is handled on a background thread.\n+    //!\n+    //! @note It could be potentially useful in the future to add\n+    //! std::function<void()> on_disconnect callback argument here. But there\n+    //! isn't an immediate need, because the protocol implementation can clean\n+    //! up its own state (calling ProxyServer destructors, etc) on disconnect,\n+    //! and any client calls will just throw IpcException errors after a\n+    //! disconnect.\n+    virtual std::unique_ptr<Init> connect(int fd) = 0;\n+\n+    //! Handle requests on provided socket descriptor. Socket communication is\n+    //! handled on the current thread. This blocks until the client closes the socket.\n+    //!\n+    //! @note: If this method is called, it needs be called before connect()\n+    //! because for ease of implementation it's inflexible and always runs the\n+    //! event loop in the foreground thread. It can share its event loop with\n+    //! connect() but can't share an event loop that was created by connect().\n+    //! This isn't really a problem because serve() is only called by spawned",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r447136782",
      "id" : 447136782,
      "in_reply_to_id" : 440493321,
      "line" : 68,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNjc4Mg==",
      "original_commit_id" : "643d602b3fcb3eac22a2962cff1a0b7019bfebb0",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/interfaces/ipc.h",
      "position" : 68,
      "pull_request_review_id" : 439356048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447136782",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-07-14T15:42:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-658254562",
      "id" : 658254562,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODI1NDU2Mg==",
      "updated_at" : "2020-07-14T15:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658254562",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465326990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465326990"
         }
      },
      "author_association" : "MEMBER",
      "body" : "FYI, the logs I get, are they the ones you expect ?\r\n\r\n```\r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client first request from current thread, constructing waiter                                                                                  \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client send Init.construct$Params (threadMap = <external capability>)                                                                          \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client recv Init.construct$Results (threadMap = <external capability>)                                                                         \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client send Init.makeEcho$Params (context = (thread = <external capability>, callbackThread = <external capability>))                          \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client recv Init.makeEcho$Results (result = <external capability>)                                                                             \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client send Echo.echo$Params (context = (thread = <external capability>, callbackThread = <external capability>), echo = \"hello_russ\")         \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client recv Echo.echo$Results (result = \"hello_russ\")                                                                                          \r\n2020-08-04T20:58:04Z\r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client destroy N2mp11ProxyClientIN10interfaces5capnp8messages4EchoEEE                                                                          \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client send Echo.destroy$Params (context = (thread = <external capability>, callbackThread = <external capability>))                           \r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client recv Echo.destroy$Results ()\r\n2020-08-04T20:58:04Z\r\n2020-08-04T20:58:04Z {bitcoin-node-12666/b-httpworker.0-12684} IPC client destroy N2mp11ProxyClientIN10interfaces5capnp8messages4InitEEE                                                                          \r\n2020-08-04T20:58:04Z bitcoin-node pid 12889 exited with status 0\r\n```",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-04T20:59:33Z",
      "diff_hunk" : "@@ -15,7 +15,7 @@ Specific next steps after [#10102](https://github.com/bitcoin/bitcoin/pull/10102\n \n ## Debugging\n \n-After [#10102](https://github.com/bitcoin/bitcoin/pull/10102), the `-debug=ipc` command line option can be used to see requests and responses between processes.\n+The `-debug=ipc` command line option can be used to see requests and responses between processes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465326990",
      "id" : 465326990,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyNjk5MA==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 18,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/multiprocess.md",
      "position" : null,
      "pull_request_review_id" : 461170607,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465326990",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465331663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465331663"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shoud the threading model part of the documentation ? AFAICT I can tell you're doing mention to background/foreground threads around `IpcProtocol` documentation. Isn't this dependent of `IpcProtocolImpl` internals ? AFAII, e.g, the client process is going to call interfaces (like `Chain::getHeight`) with overriden virtual methods sending calls to remote server process ? On the client-side, is flow execution blocked until remote answer back ?",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-04T21:09:03Z",
      "diff_hunk" : "@@ -15,7 +15,7 @@ Specific next steps after [#10102](https://github.com/bitcoin/bitcoin/pull/10102\n \n ## Debugging\n \n-After [#10102](https://github.com/bitcoin/bitcoin/pull/10102), the `-debug=ipc` command line option can be used to see requests and responses between processes.\n+The `-debug=ipc` command line option can be used to see requests and responses between processes.\n \n ## Installation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465331663",
      "id" : 465331663,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMTY2Mw==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 20,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "doc/multiprocess.md",
      "position" : 7,
      "pull_request_review_id" : 461170607,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465331663",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465337715"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465337715"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why does `LocalInit` take a `node()` method ? How is it used ? A `bitcoin-wallet` will never have such context ?",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-04T21:21:47Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or\n+//!    destroy the Init interface and shut down the process.\n+//!\n+//! When connecting to an existing process, the steps are similar to spawning a\n+//! new process, except a domain socket is created instead of a socketpair, and\n+//! destroying an Init interface doesn't end the process, since there can be\n+//! multiple connections.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+};\n+\n+//! Specialization of the Init interface for the local process. Container for\n+//! IpcProcess and IpcProtocol objects and current process information.\n+class LocalInit : public Init\n+{\n+public:\n+    LocalInit(const char* exe_name, const char* log_suffix);\n+    ~LocalInit() override;\n+    virtual NodeContext& node();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465337715",
      "id" : 465337715,
      "line" : 81,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzNzcxNQ==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 81,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : 81,
      "pull_request_review_id" : 461170607,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465337715",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465338335"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465338335"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The documentation you wrote down in review club notes (\"The Init interface is similar to other cross-process C++ interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and interfaces::ChainClient, providing virtual methods that can be called from other processes....\") is describing well design goal of `Init` IMO. Maybe just pick it up ?",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-04T21:23:10Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465338335",
      "id" : 465338335,
      "line" : 22,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzODMzNQ==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 22,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : 22,
      "pull_request_review_id" : 461170607,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465338335",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465339166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465339166"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IIRC a socketpair has a default and only-one domain (AF_UNIX), you mean a new connection is free to pick up its domain as there is no the default parent-child socketpair ready to use ?",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-04T21:24:59Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or\n+//!    destroy the Init interface and shut down the process.\n+//!\n+//! When connecting to an existing process, the steps are similar to spawning a\n+//! new process, except a domain socket is created instead of a socketpair, and",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465339166",
      "id" : 465339166,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTE2Ng==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 43,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : null,
      "pull_request_review_id" : 461170607,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465339166",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465341411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465341411"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's unclear who is the \"it\" here calling Init interface methods, still the spawned subprocess ? Or do you mean the spawned subprocess has the option to shutdown itself ?",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-04T21:29:56Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465341411",
      "id" : 465341411,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MTQxMQ==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 39,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : null,
      "pull_request_review_id" : 461170607,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465341411",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465342296"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465342296"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think `init.h` is actually introduced in next commit. Also document `echo.h` if it's a long-standing debug interface ?",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-04T21:32:00Z",
      "diff_hunk" : "@@ -14,4 +14,6 @@ The following interfaces are defined here:\n \n * [`Init`](init.h) â used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n \n+* [`Base`](base.h) â base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465342296",
      "id" : 465342296,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MjI5Ng==",
      "original_commit_id" : "352a5564e64c63a1962830f7c524841d4b8bf380",
      "original_line" : 17,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/interfaces/README.md",
      "position" : null,
      "pull_request_review_id" : 461170607,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465342296",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465707859"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465707859"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n#include <interfaces/base.h>\r\n```",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-05T12:59:17Z",
      "diff_hunk" : "@@ -5,6 +5,8 @@\n #ifndef BITCOIN_INTERFACES_CHAIN_H\n #define BITCOIN_INTERFACES_CHAIN_H\n \n+#include <interfaces/wallet.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465707859",
      "id" : 465707859,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwNzg1OQ==",
      "original_commit_id" : "352a5564e64c63a1962830f7c524841d4b8bf380",
      "original_line" : 8,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 461638136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465707859",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465708950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465708950"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "And also `base.h` is added here, so update commit number on it as well?",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-05T13:00:58Z",
      "diff_hunk" : "@@ -14,4 +14,6 @@ The following interfaces are defined here:\n \n * [`Init`](init.h) â used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n \n+* [`Base`](base.h) â base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465708950",
      "id" : 465708950,
      "in_reply_to_id" : 465342296,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwODk1MA==",
      "original_commit_id" : "352a5564e64c63a1962830f7c524841d4b8bf380",
      "original_line" : 17,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/interfaces/README.md",
      "position" : null,
      "pull_request_review_id" : 461638136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465708950",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465746629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465746629"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This one could be a little more explicit I think?\r\n\r\n```suggestion\r\n//! Close hook that encapsulate a function to be called on close.\r\n```",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-05T13:58:36Z",
      "diff_hunk" : "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/init.h>\n+\n+#include <interfaces/ipc.h>\n+#include <interfaces/node.h>\n+#include <logging.h>\n+#include <util/memory.h>\n+\n+namespace interfaces {\n+namespace {\n+//! Close hook that encapsulate and deletes a moveable object.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465746629",
      "id" : 465746629,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0NjYyOQ==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 15,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/interfaces/init.cpp",
      "position" : null,
      "pull_request_review_id" : 461638136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465746629",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465760342"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465760342"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added in 19160?",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-05T14:17:29Z",
      "diff_hunk" : "@@ -14,4 +14,6 @@ The following interfaces are defined here:\n \n * [`Init`](init.h) â used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n \n+* [`Base`](base.h) â base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465760342",
      "id" : 465760342,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2MDM0Mg==",
      "original_commit_id" : "0602f87a085c733f1da38b3b82210c81ef018fd5",
      "original_line" : 17,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/interfaces/README.md",
      "position" : null,
      "pull_request_review_id" : 461709262,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465760342",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465770957"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465770957"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n\r\n        self.log.info(\"test echoipc (testing spawned process in multiprocess built)\")\r\n```",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-05T14:31:45Z",
      "diff_hunk" : "@@ -61,6 +61,7 @@ def run_test(self):\n         node.logging(include=['qt'])\n         assert_equal(node.logging()['qt'], True)\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465770957",
      "id" : 465770957,
      "line" : 63,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3MDk1Nw==",
      "original_commit_id" : "0602f87a085c733f1da38b3b82210c81ef018fd5",
      "original_line" : 63,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "test/functional/rpc_misc.py",
      "position" : 3,
      "pull_request_review_id" : 461638136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465770957",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-07T08:05:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-670389246",
      "id" : 670389246,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDM4OTI0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T08:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670389246",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468112768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468112768"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465342296\r\n\r\n> I think `init.h` is actually introduced in next commit. Also document `echo.h` if it's a long-standing debug interface ?\r\n\r\n> And also `base.h` is added here, so update commit number on it as well?\r\n\r\nThanks, changed",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-10T18:58:15Z",
      "diff_hunk" : "@@ -14,4 +14,6 @@ The following interfaces are defined here:\n \n * [`Init`](init.h) â used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n \n+* [`Base`](base.h) â base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468112768",
      "id" : 468112768,
      "in_reply_to_id" : 465342296,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMjc2OA==",
      "original_commit_id" : "352a5564e64c63a1962830f7c524841d4b8bf380",
      "original_line" : 17,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/interfaces/README.md",
      "position" : null,
      "pull_request_review_id" : 464492390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468112768",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113037"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465707859\r\n\r\n> #include <interfaces/base.h>\r\n\r\nThanks, switched",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-10T18:58:49Z",
      "diff_hunk" : "@@ -5,6 +5,8 @@\n #ifndef BITCOIN_INTERFACES_CHAIN_H\n #define BITCOIN_INTERFACES_CHAIN_H\n \n+#include <interfaces/wallet.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113037",
      "id" : 468113037,
      "in_reply_to_id" : 465707859,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzAzNw==",
      "original_commit_id" : "352a5564e64c63a1962830f7c524841d4b8bf380",
      "original_line" : 8,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 464492390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113037",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113333"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465326990\r\n\r\n> FYI, the logs I get, are they the ones you expect ?\r\n\r\nYes, those show the requests being sent, received, and responded to.\r\n",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-10T18:59:18Z",
      "diff_hunk" : "@@ -15,7 +15,7 @@ Specific next steps after [#10102](https://github.com/bitcoin/bitcoin/pull/10102\n \n ## Debugging\n \n-After [#10102](https://github.com/bitcoin/bitcoin/pull/10102), the `-debug=ipc` command line option can be used to see requests and responses between processes.\n+The `-debug=ipc` command line option can be used to see requests and responses between processes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113333",
      "id" : 468113333,
      "in_reply_to_id" : 465326990,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzMzMw==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 18,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/multiprocess.md",
      "position" : null,
      "pull_request_review_id" : 464492390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113333",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113393"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113393"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465331663\r\n\r\n> Shoud the threading model part of the documentation ?\r\n\r\nSure, I added a mention of the 1:1 threading model here, linking to the libmultiprocess library.\r\n\r\n> AFAICT I can tell you're doing mention to background/foreground threads around `IpcProtocol` documentation. Isn't this dependent of `IpcProtocolImpl` internals ?\r\n\r\nYes, the threading requirements come from bitcoin code, and the way it uses locks and callbacks, so they would be the same even if `IpcProtocolImpl` used a completely different protocol or implementation. There is some documentation about the libmultiprocess implementation in [proxy.capnp's `ThreadMap`, `Thread` and `Context`](https://github.com/chaincodelabs/libmultiprocess/blob/9f5b8355649aca94b4b529d89ba439aa3b2f9642/include/mp/proxy.capnp#L39-L61) descriptions.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-10T18:59:26Z",
      "diff_hunk" : "@@ -15,7 +15,7 @@ Specific next steps after [#10102](https://github.com/bitcoin/bitcoin/pull/10102\n \n ## Debugging\n \n-After [#10102](https://github.com/bitcoin/bitcoin/pull/10102), the `-debug=ipc` command line option can be used to see requests and responses between processes.\n+The `-debug=ipc` command line option can be used to see requests and responses between processes.\n \n ## Installation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113393",
      "id" : 468113393,
      "in_reply_to_id" : 465331663,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzM5Mw==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 20,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "doc/multiprocess.md",
      "position" : 7,
      "pull_request_review_id" : 464492390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113393",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113445"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113445"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465746629\r\n\r\n> This one could be a little more explicit I think?\r\n\r\nThanks, updated",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-10T18:59:34Z",
      "diff_hunk" : "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/init.h>\n+\n+#include <interfaces/ipc.h>\n+#include <interfaces/node.h>\n+#include <logging.h>\n+#include <util/memory.h>\n+\n+namespace interfaces {\n+namespace {\n+//! Close hook that encapsulate and deletes a moveable object.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113445",
      "id" : 468113445,
      "in_reply_to_id" : 465746629,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzQ0NQ==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 15,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/interfaces/init.cpp",
      "position" : null,
      "pull_request_review_id" : 464492390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113445",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113523"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465338335\r\n\r\n> The documentation you wrote down in review club notes (\"The Init interface is similar to other cross-process C++ interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and interfaces::ChainClient, providing virtual methods that can be called from other processes....\") is describing well design goal of `Init` IMO. Maybe just pick it up ?\r\n\r\nThanks, added.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-10T18:59:41Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113523",
      "id" : 468113523,
      "in_reply_to_id" : 465338335,
      "line" : 22,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzUyMw==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 22,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : 22,
      "pull_request_review_id" : 464492390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113523",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113577"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465341411\r\n\r\n> It's unclear who is the \"it\" here calling Init interface methods, still the spawned subprocess ? Or do you mean the spawned subprocess has the option to shutdown itself ?\r\n\r\nThanks, replaced \"it\" with \"spawned process\" and clarified it shuts down when then connection is closed.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-10T18:59:48Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113577",
      "id" : 468113577,
      "in_reply_to_id" : 465341411,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzU3Nw==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 39,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : null,
      "pull_request_review_id" : 464492390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113577",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113710"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113710"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465337715\r\n\r\n> Why does `LocalInit` take a `node()` method ? How is it used ? A `bitcoin-wallet` will never have such context ?\r\n\r\nAdded comment. This is called one place in [`AppInit()`](https://github.com/ryanofsky/bitcoin/blob/0602f87a085c733f1da38b3b82210c81ef018fd5/src/bitcoind.cpp#L48) in bitcoind, bitcoin-qt, and bitcoin-node processes that run node code. It is not called in bitcoin-wallet or bitcoin-gui processes that don't run node code. There will be a WalletContext returning method too but it's not needed in this PR because bitcoin-wallet tool doesn't currently do anything that requires a wallet context.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-10T19:00:00Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or\n+//!    destroy the Init interface and shut down the process.\n+//!\n+//! When connecting to an existing process, the steps are similar to spawning a\n+//! new process, except a domain socket is created instead of a socketpair, and\n+//! destroying an Init interface doesn't end the process, since there can be\n+//! multiple connections.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+};\n+\n+//! Specialization of the Init interface for the local process. Container for\n+//! IpcProcess and IpcProtocol objects and current process information.\n+class LocalInit : public Init\n+{\n+public:\n+    LocalInit(const char* exe_name, const char* log_suffix);\n+    ~LocalInit() override;\n+    virtual NodeContext& node();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113710",
      "id" : 468113710,
      "in_reply_to_id" : 465337715,
      "line" : 81,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzcxMA==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 81,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : 81,
      "pull_request_review_id" : 464492390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113710",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113946"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465770957\r\n\r\n> self.log.info(\"test echoipc (testing spawned process in multiprocess built)\")\r\n\r\nThanks, added",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-10T19:00:27Z",
      "diff_hunk" : "@@ -61,6 +61,7 @@ def run_test(self):\n         node.logging(include=['qt'])\n         assert_equal(node.logging()['qt'], True)\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468113946",
      "id" : 468113946,
      "in_reply_to_id" : 465770957,
      "line" : 63,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMzk0Ng==",
      "original_commit_id" : "0602f87a085c733f1da38b3b82210c81ef018fd5",
      "original_line" : 63,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "test/functional/rpc_misc.py",
      "position" : 3,
      "pull_request_review_id" : 464492390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468113946",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468256850"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468256850"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465339166\r\n\r\n> IIRC a socketpair has a default and only-one domain (AF_UNIX), you mean a new connection is free to pick up its domain as there is no the default parent-child socketpair ready to use ?\r\n\r\nThanks, replaced domain socket with just socket. I didn't realize socketpairsÂ could have domains.\r\n",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-11T00:23:56Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine whether it is a spawned process and what socketpair file\n+//!    descriptor it should use. It calls IpcProtocol::serve() to handle\n+//!    incoming requests from the socketpair and call Init interface methods, or\n+//!    destroy the Init interface and shut down the process.\n+//!\n+//! When connecting to an existing process, the steps are similar to spawning a\n+//! new process, except a domain socket is created instead of a socketpair, and",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468256850",
      "id" : 468256850,
      "in_reply_to_id" : 465339166,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1Njg1MA==",
      "original_commit_id" : "aa4d626db1628d5e29572eccfd7fa2d99edeeb60",
      "original_line" : 43,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : null,
      "pull_request_review_id" : 464670866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468256850",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468257307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468257307"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19160#discussion_r465760342\r\n\r\n> Added in 19160?\r\n\r\nThanks, there were some earlier comments about this too. Switched",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-08-11T00:25:35Z",
      "diff_hunk" : "@@ -14,4 +14,6 @@ The following interfaces are defined here:\n \n * [`Init`](init.h) â used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n \n+* [`Base`](base.h) â base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r468257307",
      "id" : 468257307,
      "in_reply_to_id" : 465760342,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1NzMwNw==",
      "original_commit_id" : "0602f87a085c733f1da38b3b82210c81ef018fd5",
      "original_line" : 17,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/interfaces/README.md",
      "position" : null,
      "pull_request_review_id" : 464671339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T10:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468257307",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-14T08:49:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-673966257",
      "id" : 673966257,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Mzk2NjI1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-14T08:49:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673966257",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-20T15:15:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-677728083",
      "id" : 677728083,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NzcyODA4Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T15:15:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677728083",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-31T10:17:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-683693265",
      "id" : 683693265,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzY5MzI2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-31T10:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683693265",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-09-23T07:49:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-697196474",
      "id" : 697196474,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzE5NjQ3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T07:49:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697196474",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, deserves review.",
      "created_at" : "2020-09-26T19:58:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-699541179",
      "id" : 699541179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5OTU0MTE3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-26T19:58:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/699541179",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-09-29T12:50:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#issuecomment-700680735",
      "id" : 700680735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDY4MDczNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T12:50:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700680735",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505737310"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505737310"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this comment can be improved: \r\n\r\n* \"Init interface providing access to other interfaces\", this should underscores access is provided across process boundaries\r\n* \"providing virtual methods that can be called from other processes\", AFAIU, this is confusing as interfaces::Init provides both process control method (e.g `makeEchoIpc()`, in the future `makeWallet`) and an interface `IpcProtocol` wrapping a libmultiprocess `ProxyClient/ProxyServer`. I would be better to document that both control and data exchange functions are supported by interfaces::Init\r\n\r\nOverall, I still think `Init`/`LocalInit` are loosely-defining names. The names doesn't indicate what is initiated nor who is local and remote. `IPCSupervisor`/`IPCWrapper` as suggested would be better.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-10-15T18:03:05Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every processâinterfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! processâinterfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505737310",
      "id" : 505737310,
      "line" : 38,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczNzMxMA==",
      "original_commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "original_line" : 38,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : 38,
      "pull_request_review_id" : 509636941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-15T18:42:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505737310",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505753193"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505753193"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think an in-depth walk-through needs to be documented somewhere for actual and future reviewers.\r\n\r\nAn example would be :\r\n1. Bitcoin GUI process is started, in `src/qt/bitcoin.cpp`, it initializes its own interface `LocalInit` from `src/interfaces/init_bitcoin-gui.cpp`\r\n2. From this `LocalInit` interface, it calls `makeNode()`, which trigger a child `bitcoin-node` spawning through `IpcProcess.spawn`. It also register hook cleaning through `base.addCloseHook`\r\n3. From this `LocalInit` interface, it calls `connect`, which start a new thread `capnp-loop` with a libmultiprocess `mp::EventLoop`\r\n4. Bitcoin Node is started with `-ipcfd` passing a socketpair for communications, it initializes its own interface `LocalInit` from `src/interfaces/init_bitcoin-node.cpp`\r\n5. From this `LocalInit` interface, it calls `serve()` to start servicing Bitcoin GUI on its owned interface `Chain`. This is achieved through the abstract interface `IpcProtocol` which is currently Cap'n Proto (`MakeCapnpProtocol`)\r\n6. When Bitcoin GUI request a `Chain` method like `hasBlocks`, this is redirected to `mp::ProxyClient`\r\n7. From its own `capnp-loop` thread embedding a `mp::ProxyServer`, Bitcoin Node internal methods are called to fulfill the request\r\n\r\nOkay it's likely a fuzzy walkthrough but this reflects my understanding right now.\r\n\r\nWhat do you think about joining an ASCII art ? I can write one, but I don't know if graphical representation documentation has been favored by Core though it may be helpful for architecture-level stuff.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-10-15T18:25:35Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every processâinterfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! processâinterfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine that it is a spawned process and what socketpair file\n+//!    descriptor it should use. The spawned process then calls\n+//!    IpcProtocol::serve() to handle incoming requests from the socketpair and\n+//!    invoke Init interface methods and eventually shut down and destroy the\n+//!    Init interface when the connection is closed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505753193",
      "id" : 505753193,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc1MzE5Mw==",
      "original_commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "original_line" : 55,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : 55,
      "pull_request_review_id" : 509636941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-15T18:46:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505753193",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505754792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505754792"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you could add a temporary comment hinting this interface as the future location of `makeNode`, `makeWalletClient`, etc, it's more helpful for reviewers to understand what it would look like after #10102.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-10-15T18:28:23Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_INIT_H\n+#define BITCOIN_INTERFACES_INIT_H\n+\n+#include <fs.h>\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+struct NodeContext;\n+\n+namespace interfaces {\n+class Base;\n+class Echo;\n+class IpcProcess;\n+class IpcProtocol;\n+\n+//! Init interface providing access to other interfaces. The Init interface is\n+//! the interface first exposed when a process spawns or connects to another\n+//! process.\n+//!\n+//! The interfaces::Init interface is similar to other cross-process C++\n+//! interfaces like interfaces::Node, interfaces::Wallet, interfaces::Chain and\n+//! interfaces::ChainClient, providing virtual methods that can be called from\n+//! other processes. What makes it special is that unlike other interfaces which\n+//! are not implemented by every processâinterfaces::Node is only implemented by\n+//! the node process and interfaces::Wallet is only implemented by the wallet\n+//! processâinterfaces::Init is implemented by every process that supports being\n+//! spawned, and it is the initial interface returned by the\n+//! IpcProtocol::connect(fd) method, allowing the parent process to control the\n+//! child process after the connection is established. The interfaces::Init\n+//! interface has methods that allow the parent process to get access to every\n+//! interface supported by the child process, and when the parent process frees\n+//! the interfaces::Init object, the child process shuts down.\n+//!\n+//! When spawning a new process, the steps are:\n+//!\n+//! 1. Client process calls IpcProcess::spawn(), which spawns a new process and\n+//!    returns a socketpair file descriptor for communicating with it.\n+//! 2. Client process calls IpcProtocol::connect() passing the socketpair\n+//!    descriptor, which returns a client Init proxy object calling remote Init\n+//!    interface methods.\n+//! 3. Client process calls client Init proxy object methods to make new client\n+//!    proxy objects calling other remote interfaces. It can also destroy the\n+//!    Init object to shut down the spawned process.\n+//! 4. Spawned process calls IpcProcess::serve(), to read command line arguments\n+//!    and determine that it is a spawned process and what socketpair file\n+//!    descriptor it should use. The spawned process then calls\n+//!    IpcProtocol::serve() to handle incoming requests from the socketpair and\n+//!    invoke Init interface methods and eventually shut down and destroy the\n+//!    Init interface when the connection is closed.\n+//!\n+//! When connecting to an existing process, the steps are similar to spawning a\n+//! new process, except a socket is created instead of a socketpair, and\n+//! destroying an Init interface doesn't end the process, since there can be\n+//! multiple connections.\n+class Init\n+{\n+public:\n+    virtual ~Init() = default;\n+    virtual std::unique_ptr<Echo> makeEcho() = 0;\n+};\n+\n+//! Specialization of the Init interface for the local process. Container for\n+//! IpcProcess and IpcProtocol objects and current process information.\n+class LocalInit : public Init\n+{\n+public:\n+    LocalInit(const char* exe_name, const char* log_suffix);\n+    ~LocalInit() override;\n+    std::unique_ptr<Echo> makeEcho() override;\n+    //! Make echo implementation for `echoipc` test RPC. Spawn new process if\n+    //! supported.\n+    virtual std::unique_ptr<Echo> makeEchoIpc();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505754792",
      "id" : 505754792,
      "line" : 78,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc1NDc5Mg==",
      "original_commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "original_line" : 78,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/interfaces/init.h",
      "position" : 78,
      "pull_request_review_id" : 509636941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-15T18:42:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505754792",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505757544"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505757544"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It would be great to extend the README with a new section explaining how someone would add a new `IpcProtocol` implementation. As of right now `src/interfaces/capnp/init.capnp` is pretty empty which makes it hard to understand for reviewers without looking first on #10102 branch.\r\n\r\nPurely reading libmultiprocess README, I didn't grasp at first than one `IpcProtocol` must define a `ProxyClient`/ProxyServer` pair for each supported interface.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-10-15T18:33:05Z",
      "diff_hunk" : "@@ -12,6 +12,8 @@ The following interfaces are defined here:\n \n * [`Handler`](handler.h) â returned by `handleEvent` methods on interfaces above and used to manage lifetimes of event handlers.\n \n-* [`Init`](init.h) â used by multiprocess code to access interfaces above on startup. Added in [#10102](https://github.com/bitcoin/bitcoin/pull/10102).\n+* [`Init`](init.h) â used by multiprocess code to access interfaces above on startup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).\n+\n+* [`Base`](base.h) â base interface class used by multiprocess code for bookkeeping and cleanup. Added in [#19160](https://github.com/bitcoin/bitcoin/pull/19160).\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505757544",
      "id" : 505757544,
      "line" : 18,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc1NzU0NA==",
      "original_commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "original_line" : 18,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/interfaces/README.md",
      "position" : 8,
      "pull_request_review_id" : 509636941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-15T18:42:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505757544",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505772152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505772152"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Might be worth logging the `pid` on launch as well.",
      "commit_id" : "e99129343d137410827ec7c26ae48a995e0cf1f8",
      "created_at" : "2020-10-15T18:59:13Z",
      "diff_hunk" : "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/init.h>\n+\n+#include <interfaces/ipc.h>\n+#include <interfaces/node.h>\n+#include <logging.h>\n+#include <util/memory.h>\n+\n+namespace interfaces {\n+namespace {\n+//! Close hook that encapsulates a function to be called on close.\n+class CloseFn : public CloseHook\n+{\n+public:\n+    explicit CloseFn(std::function<void()> fn) : m_fn(std::move(fn)) {}\n+    void onClose(Base& interface) override { m_fn(); }\n+    std::function<void()> m_fn;\n+};\n+} // namespace\n+\n+LocalInit::LocalInit(const char* exe_name, const char* log_suffix) : m_exe_name(exe_name), m_log_suffix(log_suffix) {}\n+LocalInit::~LocalInit() {}\n+NodeContext& LocalInit::node()\n+{\n+    throw std::logic_error(\"Node accessor function called from non-node binary (gui, wallet, or test program)\");\n+}\n+\n+void SpawnProcess(IpcProcess& process,\n+    IpcProtocol& protocol,\n+    const std::string& new_exe_name,\n+    const MakeClientFn& make_client)\n+{\n+    int pid;\n+    int fd = process.spawn(new_exe_name, pid);\n+    std::unique_ptr<Init> init = protocol.connect(fd);\n+    Base& base = make_client(*init);\n+    base.addCloseHook(MakeUnique<CloseFn>([&process, new_exe_name, pid] {\n+        int status = process.wait(pid);\n+        LogPrint(::BCLog::IPC, \"%s pid %i exited with status %i\\n\", new_exe_name, pid, status);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19160#discussion_r505772152",
      "id" : 505772152,
      "line" : 45,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3MjE1Mg==",
      "original_commit_id" : "2f521b2c24dd390c5d8a5cfd59dfebd0b40cbfff",
      "original_line" : 42,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/interfaces/init.cpp",
      "position" : 45,
      "pull_request_review_id" : 509680684,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-15T19:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505772152",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
