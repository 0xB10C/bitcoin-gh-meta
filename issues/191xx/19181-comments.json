[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19181#discussion_r436160721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19181"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436160721"
         }
      },
      "author_association" : "NONE",
      "body" : "binding 1103717 to a name would make the code more readable, as the name documents the purpose of the number.",
      "commit_id" : "722700ad36a1b4fcdce7e7c69b4181c9e3fcb368",
      "created_at" : "2020-06-05T20:56:55Z",
      "diff_hunk" : "@@ -0,0 +1,324 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/muhash.h>\n+\n+#include <crypto/chacha20.h>\n+#include <crypto/common.h>\n+\n+#include <assert.h>\n+#include <stdio.h>\n+\n+#include <limits>\n+\n+namespace {\n+\n+/** Extract the lowest limb of [c0,c1,c2] into n, and left shift the number by 1 limb. */\n+#define extract3(c0,c1,c2,n) { \\\n+    (n) = c0; \\\n+    c0 = c1; \\\n+    c1 = c2; \\\n+    c2 = 0; \\\n+}\n+\n+/** Extract the lowest limb of [c0,c1] into n, and left shift the number by 1 limb. */\n+#define extract2(c0,c1,n) { \\\n+    (n) = c0; \\\n+    c0 = c1; \\\n+    c1 = 0; \\\n+}\n+\n+#if defined(__amd64__) || defined(__x86_64__)\n+\n+/** [c0,c1] = a * b */\n+#define mul(c0,c1,a,b) { \\\n+    __asm__ (\"mulq %3\" : \"=d\"(c1), \"=a\"(c0) : \"a\"(a), \"g\"(b) : \"cc\"); \\\n+}\n+\n+/** [c0,c1,c2] += a * b */\n+#define muladd3(c0,c1,c2,a,b) { \\\n+    uint64_t tl, th; \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl), \"=d\"(th) : \"a\"(a), \"g\"(b) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"a\"(tl), \"d\"(th) : \"cc\"); \\\n+}\n+\n+/** [c0,c1,c2] += 2 * a * b */\n+#define muldbladd3(c0,c1,c2,a,b) { \\\n+    uint64_t tl, th; \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl), \"=d\"(th) : \"a\"(a), \"g\"(b) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"a\"(tl), \"d\"(th) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"a\"(tl), \"d\"(th) : \"cc\"); \\\n+}\n+\n+/* [c0,c1,c2] += n * [d0,d1,d2]. c0 is initially 0 */\n+#define mulnadd3(c0,c1,c2,d0,d1,d2,n) { \\\n+    uint64_t tl1, th1, tl2, th2, tl3; \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl1), \"=d\"(th1) : \"a\"(d0), \"r\"((Num3072::limb_type)n) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"g\"(tl1), \"g\"(th1) : \"cc\"); \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl2), \"=d\"(th2) : \"a\"(d1), \"r\"((Num3072::limb_type)n) : \"cc\"); \\\n+    __asm__ (\"addq %2,%0; adcq %3,%1\" : \"+r\"(c1), \"+r\"(c2) : \"g\"(tl2), \"g\"(th2) : \"cc\"); \\\n+    __asm__ (\"imulq %2,%1,%0\" : \"=r\"(tl3) : \"g\"(d2), \"i\"(n) : \"cc\"); \\\n+    __asm__ (\"addq %1,%0\" : \"+r\"(c2) : \"g\"(tl3) : \"cc\"); \\\n+}\n+\n+/* [c0,c1] *= n */\n+#define muln2(c0,c1,n) { \\\n+    uint64_t th; \\\n+    __asm__ (\"mulq %2\" : \"+a\"(c0), \"=d\"(th) : \"r\"((Num3072::limb_type)n) : \"cc\"); \\\n+    __asm__ (\"imul %1,%0,%0\" : \"+r\"(c1) : \"i\"(n) : \"cc\"); \\\n+    __asm__ (\"addq %1,%0\" : \"+r\"(c1) : \"g\"(th) : \"cc\"); \\\n+}\n+\n+/** [c0,c1] += a */\n+#define add2(c0,c1,a) { \\\n+    __asm__ (\"add %2,%0; adc $0,%1\" : \"+r\"(c0), \"+r\"(c1) : \"r\"(a) : \"cc\"); \\\n+}\n+\n+#else\n+\n+/** [c0,c1] = a * b */\n+#define mul(c0,c1,a,b) { \\\n+    Num3072::double_limb_type t = (Num3072::double_limb_type)a * b; \\\n+    c2 = 0; \\\n+    c1 = t >> Num3072::LIMB_SIZE; \\\n+    c0 = t; \\\n+}\n+\n+/* [c0,c1,c2] += n * [d0,d1,d2]. c2 is 0 initially */\n+#define mulnadd3(c0,c1,c2,d0,d1,d2,n) { \\\n+    Num3072::double_limb_type t = (Num3072::double_limb_type)d0 * n + c0; \\\n+    c0 = t; \\\n+    t >>= Num3072::LIMB_SIZE; \\\n+    t += (Num3072::double_limb_type)d1 * n + c1; \\\n+    c1 = t; \\\n+    t >>= Num3072::LIMB_SIZE; \\\n+    c2 = t + d2 * n; \\\n+}\n+\n+/* [c0,c1] *= n */\n+#define muln2(c0,c1,n) { \\\n+    Num3072::double_limb_type t = (Num3072::double_limb_type)c0 * n; \\\n+    c0 = t; \\\n+    t >>= Num3072::LIMB_SIZE; \\\n+    t += (Num3072::double_limb_type)c1 * n; \\\n+    c1 = t; \\\n+    t >>= Num3072::LIMB_SIZE; \\\n+}\n+\n+/** [c0,c1,c2] += a * b */\n+#define muladd3(c0,c1,c2,a,b) { \\\n+    Num3072::limb_type tl, th; \\\n+    { \\\n+        Num3072::double_limb_type t = (Num3072::double_limb_type)a * b; \\\n+        th = t >> Num3072::LIMB_SIZE; \\\n+        tl = t; \\\n+    } \\\n+    c0 += tl; \\\n+    th += (c0 < tl) ? 1 : 0; \\\n+    c1 += th; \\\n+    c2 += (c1 < th) ? 1 : 0; \\\n+}\n+\n+/** [c0,c1,c2] += 2 * a * b */\n+#define muldbladd3(c0,c1,c2,a,b) { \\\n+    Num3072::limb_type tl, th; \\\n+    { \\\n+        Num3072::double_limb_type t = (Num3072::double_limb_type)a * b; \\\n+        th = t >> Num3072::LIMB_SIZE; \\\n+        tl = t; \\\n+    } \\\n+    c0 += tl; \\\n+    Num3072::limb_type tt = th + ((c0 < tl) ? 1 : 0); \\\n+    c1 += tt; \\\n+    c2 += (c1 < tt) ? 1 : 0; \\\n+    c0 += tl; \\\n+    th += (c0 < tl) ? 1 : 0; \\\n+    c1 += th; \\\n+    c2 += (c1 < th) ? 1 : 0; \\\n+}\n+\n+/** [c0,c1] += a */\n+#define add2(c0,c1,a) { \\\n+    c0 += (a); \\\n+    c1 += (c0 < (a)) ? 1 : 0; \\\n+}\n+\n+#endif\n+\n+bool IsOverflow(const Num3072* d)\n+{\n+    for (int i = 1; i < Num3072::LIMBS - 1; ++i) {\n+        if (d->limbs[i] != std::numeric_limits<Num3072::limb_type>::max()) return false;\n+    }\n+    if (d->limbs[0] <= std::numeric_limits<Num3072::limb_type>::max() - 1103717) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19181#discussion_r436160721",
      "id" : 436160721,
      "line" : 154,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MDcyMQ==",
      "original_commit_id" : "722700ad36a1b4fcdce7e7c69b4181c9e3fcb368",
      "original_line" : 154,
      "original_position" : 154,
      "original_start_line" : null,
      "path" : "src/crypto/muhash.cpp",
      "position" : 154,
      "pull_request_review_id" : 425620874,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19181",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T20:56:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436160721",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/284023?v=4",
         "events_url" : "https://api.github.com/users/ysangkok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ysangkok/followers",
         "following_url" : "https://api.github.com/users/ysangkok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ysangkok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ysangkok",
         "id" : 284023,
         "login" : "ysangkok",
         "node_id" : "MDQ6VXNlcjI4NDAyMw==",
         "organizations_url" : "https://api.github.com/users/ysangkok/orgs",
         "received_events_url" : "https://api.github.com/users/ysangkok/received_events",
         "repos_url" : "https://api.github.com/users/ysangkok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ysangkok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ysangkok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ysangkok"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19181#discussion_r436161282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19181"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436161282"
         }
      },
      "author_association" : "NONE",
      "body" : "comment wrong, or at least inconsistent with other version",
      "commit_id" : "722700ad36a1b4fcdce7e7c69b4181c9e3fcb368",
      "created_at" : "2020-06-05T20:58:16Z",
      "diff_hunk" : "@@ -0,0 +1,324 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/muhash.h>\n+\n+#include <crypto/chacha20.h>\n+#include <crypto/common.h>\n+\n+#include <assert.h>\n+#include <stdio.h>\n+\n+#include <limits>\n+\n+namespace {\n+\n+/** Extract the lowest limb of [c0,c1,c2] into n, and left shift the number by 1 limb. */\n+#define extract3(c0,c1,c2,n) { \\\n+    (n) = c0; \\\n+    c0 = c1; \\\n+    c1 = c2; \\\n+    c2 = 0; \\\n+}\n+\n+/** Extract the lowest limb of [c0,c1] into n, and left shift the number by 1 limb. */\n+#define extract2(c0,c1,n) { \\\n+    (n) = c0; \\\n+    c0 = c1; \\\n+    c1 = 0; \\\n+}\n+\n+#if defined(__amd64__) || defined(__x86_64__)\n+\n+/** [c0,c1] = a * b */\n+#define mul(c0,c1,a,b) { \\\n+    __asm__ (\"mulq %3\" : \"=d\"(c1), \"=a\"(c0) : \"a\"(a), \"g\"(b) : \"cc\"); \\\n+}\n+\n+/** [c0,c1,c2] += a * b */\n+#define muladd3(c0,c1,c2,a,b) { \\\n+    uint64_t tl, th; \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl), \"=d\"(th) : \"a\"(a), \"g\"(b) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"a\"(tl), \"d\"(th) : \"cc\"); \\\n+}\n+\n+/** [c0,c1,c2] += 2 * a * b */\n+#define muldbladd3(c0,c1,c2,a,b) { \\\n+    uint64_t tl, th; \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl), \"=d\"(th) : \"a\"(a), \"g\"(b) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"a\"(tl), \"d\"(th) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"a\"(tl), \"d\"(th) : \"cc\"); \\\n+}\n+\n+/* [c0,c1,c2] += n * [d0,d1,d2]. c0 is initially 0 */\n+#define mulnadd3(c0,c1,c2,d0,d1,d2,n) { \\\n+    uint64_t tl1, th1, tl2, th2, tl3; \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl1), \"=d\"(th1) : \"a\"(d0), \"r\"((Num3072::limb_type)n) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"g\"(tl1), \"g\"(th1) : \"cc\"); \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl2), \"=d\"(th2) : \"a\"(d1), \"r\"((Num3072::limb_type)n) : \"cc\"); \\\n+    __asm__ (\"addq %2,%0; adcq %3,%1\" : \"+r\"(c1), \"+r\"(c2) : \"g\"(tl2), \"g\"(th2) : \"cc\"); \\\n+    __asm__ (\"imulq %2,%1,%0\" : \"=r\"(tl3) : \"g\"(d2), \"i\"(n) : \"cc\"); \\\n+    __asm__ (\"addq %1,%0\" : \"+r\"(c2) : \"g\"(tl3) : \"cc\"); \\\n+}\n+\n+/* [c0,c1] *= n */\n+#define muln2(c0,c1,n) { \\\n+    uint64_t th; \\\n+    __asm__ (\"mulq %2\" : \"+a\"(c0), \"=d\"(th) : \"r\"((Num3072::limb_type)n) : \"cc\"); \\\n+    __asm__ (\"imul %1,%0,%0\" : \"+r\"(c1) : \"i\"(n) : \"cc\"); \\\n+    __asm__ (\"addq %1,%0\" : \"+r\"(c1) : \"g\"(th) : \"cc\"); \\\n+}\n+\n+/** [c0,c1] += a */\n+#define add2(c0,c1,a) { \\\n+    __asm__ (\"add %2,%0; adc $0,%1\" : \"+r\"(c0), \"+r\"(c1) : \"r\"(a) : \"cc\"); \\\n+}\n+\n+#else\n+\n+/** [c0,c1] = a * b */\n+#define mul(c0,c1,a,b) { \\\n+    Num3072::double_limb_type t = (Num3072::double_limb_type)a * b; \\\n+    c2 = 0; \\\n+    c1 = t >> Num3072::LIMB_SIZE; \\\n+    c0 = t; \\\n+}\n+\n+/* [c0,c1,c2] += n * [d0,d1,d2]. c2 is 0 initially */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19181#discussion_r436161282",
      "id" : 436161282,
      "line" : 88,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MTI4Mg==",
      "original_commit_id" : "722700ad36a1b4fcdce7e7c69b4181c9e3fcb368",
      "original_line" : 88,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/crypto/muhash.cpp",
      "position" : 88,
      "pull_request_review_id" : 425621595,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19181",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T20:58:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436161282",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/284023?v=4",
         "events_url" : "https://api.github.com/users/ysangkok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ysangkok/followers",
         "following_url" : "https://api.github.com/users/ysangkok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ysangkok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ysangkok",
         "id" : 284023,
         "login" : "ysangkok",
         "node_id" : "MDQ6VXNlcjI4NDAyMw==",
         "organizations_url" : "https://api.github.com/users/ysangkok/orgs",
         "received_events_url" : "https://api.github.com/users/ysangkok/received_events",
         "repos_url" : "https://api.github.com/users/ysangkok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ysangkok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ysangkok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ysangkok"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19181#discussion_r436162768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19181"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436162768"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The other one is wrong (c0 is incremented, but c2 is only assigned to, so it's c2 that's treated as 0 on input).",
      "commit_id" : "722700ad36a1b4fcdce7e7c69b4181c9e3fcb368",
      "created_at" : "2020-06-05T21:02:12Z",
      "diff_hunk" : "@@ -0,0 +1,324 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/muhash.h>\n+\n+#include <crypto/chacha20.h>\n+#include <crypto/common.h>\n+\n+#include <assert.h>\n+#include <stdio.h>\n+\n+#include <limits>\n+\n+namespace {\n+\n+/** Extract the lowest limb of [c0,c1,c2] into n, and left shift the number by 1 limb. */\n+#define extract3(c0,c1,c2,n) { \\\n+    (n) = c0; \\\n+    c0 = c1; \\\n+    c1 = c2; \\\n+    c2 = 0; \\\n+}\n+\n+/** Extract the lowest limb of [c0,c1] into n, and left shift the number by 1 limb. */\n+#define extract2(c0,c1,n) { \\\n+    (n) = c0; \\\n+    c0 = c1; \\\n+    c1 = 0; \\\n+}\n+\n+#if defined(__amd64__) || defined(__x86_64__)\n+\n+/** [c0,c1] = a * b */\n+#define mul(c0,c1,a,b) { \\\n+    __asm__ (\"mulq %3\" : \"=d\"(c1), \"=a\"(c0) : \"a\"(a), \"g\"(b) : \"cc\"); \\\n+}\n+\n+/** [c0,c1,c2] += a * b */\n+#define muladd3(c0,c1,c2,a,b) { \\\n+    uint64_t tl, th; \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl), \"=d\"(th) : \"a\"(a), \"g\"(b) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"a\"(tl), \"d\"(th) : \"cc\"); \\\n+}\n+\n+/** [c0,c1,c2] += 2 * a * b */\n+#define muldbladd3(c0,c1,c2,a,b) { \\\n+    uint64_t tl, th; \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl), \"=d\"(th) : \"a\"(a), \"g\"(b) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"a\"(tl), \"d\"(th) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"a\"(tl), \"d\"(th) : \"cc\"); \\\n+}\n+\n+/* [c0,c1,c2] += n * [d0,d1,d2]. c0 is initially 0 */\n+#define mulnadd3(c0,c1,c2,d0,d1,d2,n) { \\\n+    uint64_t tl1, th1, tl2, th2, tl3; \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl1), \"=d\"(th1) : \"a\"(d0), \"r\"((Num3072::limb_type)n) : \"cc\"); \\\n+    __asm__ (\"addq %3,%0; adcq %4,%1; adcq $0,%2\" : \"+r\"(c0), \"+r\"(c1), \"+r\"(c2) : \"g\"(tl1), \"g\"(th1) : \"cc\"); \\\n+    __asm__ (\"mulq %3\" : \"=a\"(tl2), \"=d\"(th2) : \"a\"(d1), \"r\"((Num3072::limb_type)n) : \"cc\"); \\\n+    __asm__ (\"addq %2,%0; adcq %3,%1\" : \"+r\"(c1), \"+r\"(c2) : \"g\"(tl2), \"g\"(th2) : \"cc\"); \\\n+    __asm__ (\"imulq %2,%1,%0\" : \"=r\"(tl3) : \"g\"(d2), \"i\"(n) : \"cc\"); \\\n+    __asm__ (\"addq %1,%0\" : \"+r\"(c2) : \"g\"(tl3) : \"cc\"); \\\n+}\n+\n+/* [c0,c1] *= n */\n+#define muln2(c0,c1,n) { \\\n+    uint64_t th; \\\n+    __asm__ (\"mulq %2\" : \"+a\"(c0), \"=d\"(th) : \"r\"((Num3072::limb_type)n) : \"cc\"); \\\n+    __asm__ (\"imul %1,%0,%0\" : \"+r\"(c1) : \"i\"(n) : \"cc\"); \\\n+    __asm__ (\"addq %1,%0\" : \"+r\"(c1) : \"g\"(th) : \"cc\"); \\\n+}\n+\n+/** [c0,c1] += a */\n+#define add2(c0,c1,a) { \\\n+    __asm__ (\"add %2,%0; adc $0,%1\" : \"+r\"(c0), \"+r\"(c1) : \"r\"(a) : \"cc\"); \\\n+}\n+\n+#else\n+\n+/** [c0,c1] = a * b */\n+#define mul(c0,c1,a,b) { \\\n+    Num3072::double_limb_type t = (Num3072::double_limb_type)a * b; \\\n+    c2 = 0; \\\n+    c1 = t >> Num3072::LIMB_SIZE; \\\n+    c0 = t; \\\n+}\n+\n+/* [c0,c1,c2] += n * [d0,d1,d2]. c2 is 0 initially */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19181#discussion_r436162768",
      "id" : 436162768,
      "in_reply_to_id" : 436161282,
      "line" : 88,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2Mjc2OA==",
      "original_commit_id" : "722700ad36a1b4fcdce7e7c69b4181c9e3fcb368",
      "original_line" : 88,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/crypto/muhash.cpp",
      "position" : 88,
      "pull_request_review_id" : 425623539,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19181",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-05T21:02:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436162768",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
