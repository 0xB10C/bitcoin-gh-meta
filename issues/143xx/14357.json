{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "**Alternative 1: Relative seek (SEEK_CUR) behaviour**\r\n\r\nAdd support for negative relative seeks in `VectorReader::seek` (already assumed by tests).\r\n\r\nBefore this change the test `streams_vector_reader` triggered an unintended unsigned integer wraparound.\r\n\r\n**Alternative 2: Absolute seek (SEEK_SET) behaviour**\r\n\r\nAlternatively should this be fixed by having `VectorReader::seek ` take an absolute offset from the beginning instead? Thus changing the test from `reader.seek(-6)` (relative: like `SEEK_CUR`) to `reader.seek(0)` (absolute: like `SEEK_SET`).\r\n\r\nThe patch would be:\r\n\r\n```diff\r\nindex dc20f7a9d..2b48907a9 100644\r\n--- a/src/streams.h\r\n+++ b/src/streams.h\r\n@@ -206,7 +206,7 @@ public:\r\n\r\n     void seek(size_t n)\r\n     {\r\n-        m_pos += n;\r\n+        m_pos = n;\r\n         if (m_pos > m_data.size()) {\r\n             throw std::ios_base::failure(\"VectorReader::seek(): end of data\");\r\n         }\r\ndiff --git a/src/test/streams_tests.cpp b/src/test/streams_tests.cpp\r\nindex 26cf74830..cef00c045 100644\r\n--- a/src/test/streams_tests.cpp\r\n+++ b/src/test/streams_tests.cpp\r\n@@ -102,7 +102,7 @@ BOOST_AUTO_TEST_CASE(streams_vector_reader)\r\n     BOOST_CHECK_THROW(reader >> d, std::ios_base::failure);\r\n\r\n     // Read a 4 bytes as a signed int from the beginning of the buffer.\r\n-    reader.seek(-6);\r\n+    reader.seek(0);\r\n     reader >> d;\r\n     BOOST_CHECK_EQUAL(d, 67370753); // 1,255,3,4 in little-endian base-256\r\n     BOOST_CHECK_EQUAL(reader.size(), 2);\r\n```\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14357/comments",
   "created_at" : "2018-09-30T14:22:20Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14357/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/14357",
   "id" : 365228563,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14357/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MjE5MjA3MzAy",
   "number" : 14357,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/14357.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14357",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/14357.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14357"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "streams: Fix broken VectorReader::seek(n) and/or streams_vector_reader test",
   "updated_at" : "2018-10-01T12:14:40Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14357",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
