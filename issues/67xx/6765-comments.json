[
   {
      "body" : "A patch: http://gtf.org/garzik/bitcoin/patch.univalue_get_int\r\n",
      "created_at" : "2015-10-06T01:43:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-145719718",
      "id" : 145719718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "updated_at" : "2015-10-06T01:43:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145719718",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "How does json_spirit handle out of range integeres?\r\nI'd say there is only one sane way to handle it: reject the input?\r\n```\r\n9999999999 = 0x2 540b e3ff\r\n```\r\nYeah, that screams \"too big for 32 bit signed integer\" to me.",
      "created_at" : "2015-10-07T07:28:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146100704",
      "id" : 146100704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "updated_at" : "2015-10-07T19:37:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146100704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "static_cast will just *truncate* the number to 32 bit, NACK on that\r\n\r\nWe should however document the new behavior.",
      "created_at" : "2015-10-07T07:31:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146101116",
      "id" : 146101116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "updated_at" : "2015-10-07T07:38:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146101116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Agree with @laanwj. What about if UniValue would throw an exception in case of a detected out-of-range int?",
      "created_at" : "2015-10-07T07:53:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146104906",
      "id" : 146104906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "updated_at" : "2015-10-07T07:53:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146104906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli That's what it does now, and is tested behavior. And the attached patch disables it.",
      "created_at" : "2015-10-07T08:16:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146110645",
      "id" : 146110645,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "updated_at" : "2015-10-07T08:16:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146110645",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj The patch precisely mimics json_spirit behavior, thus restoring the old RPC interface behavior.\r\n\r\nThe user (@gmaxwell) complained about the exception being thrown, as that causes a trickle down impact of making a previously-working RPC call now not work.\r\n\r\nIf we are to keep the new behavior, which _is cleaner and more type specific_, every .get_int() must be audited.\r\n\r\nIn theory the current get_int() call inside the RPC function is wrong, and an audit will fix that and any others.\r\n",
      "created_at" : "2015-10-07T23:26:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146364753",
      "id" : 146364753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "updated_at" : "2015-10-07T23:26:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146364753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "The old situation was clearly wrong to me - large numbers should not be silently ignored, let alone silently ANDed with `0xffffffff`.\r\n\r\nThis was a much larger risk than just rejecting the value. @gmaxwell was lucky that his arbitrary big value mapped to another large number in 32 bit integers. It could just as well have mapped to 1, or even -1 instead. The result would be much more \"WTF\" than a 'number too large' error.\r\n\r\nThe error signals a clear wrong input. Yes, this may mean people have to change cases where this happens in their interface, but this may help them isolate pesky hidden bugs. \r\n\r\nThe new behavior is more strict but not *wrong* in any way. Working around it by restoring the previous broken behavior is not acceptable to me. If this means auditing uses of get_int, that is what should be done (although as said, any 'failure scenario' here is preferable to silently chopping off numbers).",
      "created_at" : "2015-10-08T01:43:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146390395",
      "id" : 146390395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "updated_at" : "2015-10-08T01:44:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146390395",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "NACK on restoring the broken behaviour.\r\nAgreed with @laanwj that just because it might break an existing API, doesn't mean we should revert [the behaviour].\r\n\r\n@jgarzik if you feel strongly,  maybe it should be noted in a README/CHANGELOG?\r\n\r\nThis [xkcd](https://imgs.xkcd.com/comics/workflow.png) comes to mind.",
      "created_at" : "2015-10-08T01:49:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146390909",
      "id" : 146390909,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "updated_at" : "2015-10-08T01:49:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146390909",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   }
]
