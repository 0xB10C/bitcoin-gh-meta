[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Note that the test methods `last_block_equals()` and `last_header_equals()` are still needed for checking that the concerned message _didn't_ arrive within a certain time window:\r\nhttps://github.com/bitcoin/bitcoin/blob/72affcb16cad45bd9e08ca163b2147fd01b84b70/test/functional/p2p_fingerprint.py#L123-L131\r\nUnfortunately I couldn't figure out how to use the `wait_for_{block,header}` functions for that -- using something like\r\n\r\n```\r\nassert_raises(AssertionError, lambda: node0.wait_for_block(stale_hash, timeout=3))\r\n```\r\nworks, but still prints out the assertion error, clogging up the log:\r\n```\r\n2020-09-30T15:00:20.316000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_hh8usu8u\r\n2020-09-30T15:00:27.134000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: ''''\r\n        def test_function():\r\n            if check_connected:\r\n                assert self.is_connected\r\n            return test_function_in()\r\n'''\r\n2020-09-30T15:00:30.150000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: ''''\r\n        def test_function():\r\n            if check_connected:\r\n                assert self.is_connected\r\n            return test_function_in()\r\n'''\r\n2020-09-30T15:00:30.252000Z TestFramework (INFO): Stopping nodes\r\n2020-09-30T15:00:30.354000Z TestFramework (INFO): Cleaning up /tmp/bitcoin_func_test_hh8usu8u on exit\r\n2020-09-30T15:00:30.355000Z TestFramework (INFO): Tests successful\r\n```",
      "created_at" : "2020-09-30T15:01:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20047#issuecomment-701448360",
      "id" : 701448360,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20047",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMTQ0ODM2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-30T15:04:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/701448360",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK 136d96b7.\r\n\r\nMaybe we should inline the two methods `last_block_equals` and `last_header_equals` because they are only used with a negation currently.\r\nThat means the test would still pass if for some reason `node.last_message.get(\"block\")` is falsey. What should be tested in the `assert not self.last_block_equals()` is that the last message's block was available but the hash didn't match.",
      "created_at" : "2020-10-04T10:20:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20047#issuecomment-703234004",
      "id" : 703234004,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20047",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMzIzNDAwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-04T10:20:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703234004",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008879?v=4",
         "events_url" : "https://api.github.com/users/guggero/events{/privacy}",
         "followers_url" : "https://api.github.com/users/guggero/followers",
         "following_url" : "https://api.github.com/users/guggero/following{/other_user}",
         "gists_url" : "https://api.github.com/users/guggero/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/guggero",
         "id" : 1008879,
         "login" : "guggero",
         "node_id" : "MDQ6VXNlcjEwMDg4Nzk=",
         "organizations_url" : "https://api.github.com/users/guggero/orgs",
         "received_events_url" : "https://api.github.com/users/guggero/received_events",
         "repos_url" : "https://api.github.com/users/guggero/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/guggero/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/guggero/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/guggero"
      }
   }
]
