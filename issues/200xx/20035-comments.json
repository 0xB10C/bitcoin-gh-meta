[
   {
      "author_association" : "MEMBER",
      "body" : "Too sad that teaching the compiler to warn about this would make the code massively verbose, but maybe it is worth a shot now that this is the second time this year?\r\n\r\n\r\n<!--\r\n==2844273== Thread 24 b-msghand:\r\n==2844273== Conditional jump or move depends on uninitialised value(s)\r\n==2844273==    at 0x5335DD: WarningBitsConditionChecker::Condition(CBlockIndex const*, Consensus::Params const&) const (validation.cpp:1860)\r\n==2844273==    by 0x54A4B1: AbstractThresholdConditionChecker::GetStateFor(CBlockIndex const*, Consensus::Params const&, std::map<CBlockIndex const*, ThresholdState, std::less<CBlockIndex const*>, std::allocator<std::pair<CBlockIndex const* const, ThresholdState> > >&) const (versionbits.cpp:70)\r\n==2844273==    by 0x50CE03: UpdateTip(CTxMemPool&, CBlockIndex const*, CChainParams const&) (validation.cpp:2458)\r\n==2844273==    by 0x50E39C: CChainState::ConnectTip(BlockValidationState&, CChainParams const&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (validation.cpp:2647)\r\n==2844273==    by 0x50F82A: CChainState::ActivateBestChainStep(BlockValidationState&, CChainParams const&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (validation.cpp:2779)\r\n==2844273==    by 0x511B03: CChainState::ActivateBestChain(BlockValidationState&, CChainParams const&, std::shared_ptr<CBlock const>) (validation.cpp:2906)\r\n==2844273==    by 0x51C13E: ChainstateManager::ProcessNewBlock(CChainParams const&, std::shared_ptr<CBlock const>, bool, bool*) (validation.cpp:3862)\r\n==2844273==    by 0x3241C4: PeerManager::ProcessMessage(CNode&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CDataStream&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::atomic<bool> const&) (net_processing.cpp:3506)\r\n==2844273==    by 0x3324E4: PeerManager::ProcessMessages(CNode*, std::atomic<bool>&) (net_processing.cpp:3894)\r\n==2844273==    by 0x333C7A: non-virtual thunk to PeerManager::ProcessMessages(CNode*, std::atomic<bool>&) (list.tcc:0)\r\n==2844273==    by 0x2F5A43: CConnman::ThreadMessageHandler() (net.cpp:2125)\r\n==2844273==    by 0x30B97D: __invoke_impl<void, void (CConnman::*&)(), CConnman *&> (invoke.h:73)\r\n==2844273==    by 0x30B97D: __invoke<void (CConnman::*&)(), CConnman *&> (invoke.h:95)\r\n==2844273==    by 0x30B97D: __call<void, 0> (functional:416)\r\n==2844273==    by 0x30B97D: operator()<, void> (functional:499)\r\n==2844273==    by 0x30B97D: __invoke_impl<void, std::_Bind<void (CConnman::*(CConnman *))()> &> (invoke.h:60)\r\n==2844273==    by 0x30B97D: __invoke_r<void, std::_Bind<void (CConnman::*(CConnman *))()> &> (invoke.h:110)\r\n==2844273==    by 0x30B97D: std::_Function_handler<void (), std::_Bind<void (CConnman::*(CConnman*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:291)\r\n==2844273== \r\n",
      "created_at" : "2020-09-29T12:41:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20035#issuecomment-700675784",
      "id" : 700675784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20035",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDY3NTc4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T12:43:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700675784",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nThe parameters `BIP16Exception` and `BIP34Hash` are also not initialized for Signet?",
      "created_at" : "2020-09-29T12:54:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20035#issuecomment-700683117",
      "id" : 700683117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20035",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDY4MzExNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T12:54:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700683117",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "unit256 are default initialized to all-zeros",
      "created_at" : "2020-09-29T13:01:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20035#issuecomment-700686646",
      "id" : 700686646,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20035",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDY4NjY0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T13:01:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700686646",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> unit256 are default initialized to all-zeros\r\n\r\n\r\nRight, in those case there is no uninitialized read.\r\n\r\nStill, looking at mainnet, testnet and regtest, without exception _all_ parameters (i.e. all 22 fields of `struct Params`) are explicitely initialized -- hence I think for signet and all future *nets the same should be done. Both for consistency and do avoid such uninitialized read errors in the feature. The following params are not set for signet, i.e. uninitialized or default initialized:\r\n* `MinBIP9WarningHeight` (fixed in this PR)\r\n* `nMinimumChainWork`\r\n* `defaultAssumeValid`\r\n* `BIP16Exception`\r\n* `BIP34Hash`\r\n\r\n",
      "created_at" : "2020-09-29T13:24:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20035#issuecomment-700700349",
      "id" : 700700349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20035",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDcwMDM0OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T13:24:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700700349",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Nice catch! How did you find this one?\r\n\r\nIt's always a bit sad to see unitialized reads enter our code base without being caught automatically at CI stage by either dynamic analysis (MSAN or Valgrind) or static analysis :(",
      "created_at" : "2020-09-29T19:47:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20035#issuecomment-700946845",
      "id" : 700946845,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20035",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDk0Njg0NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T19:50:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700946845",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The UUM takes place in `WarningBitsConditionChecker::Condition` which is executed in the message handler thread:\r\n\r\n```\r\n$ valgrind --exit-on-first-error=yes --track-origins=yes --suppressions=contrib/valgrind.supp src/bitcoind -signet\r\nâ¦\r\n==9443== Thread 23 b-msghand:\r\n==9443== Conditional jump or move depends on uninitialised value(s)\r\n==9443==    at 0x6F3E65: WarningBitsConditionChecker::Condition(CBlockIndex const*, Consensus::Params const&) const (validation.cpp:1862)\r\n==9443==    by 0x744269: AbstractThresholdConditionChecker::GetStateFor(CBlockIndex const*, Consensus::Params const&, std::map<CBlockIndex const*, ThresholdState, std::less<CBlockIndex const*>, std::allocator<std::pair<CBlockIndex const* const, ThresholdState> > >&) const (versionbits.cpp:70)\r\n==9443==    by 0x6D77FA: UpdateTip(CTxMemPool&, CBlockIndex const*, CChainParams const&) (validation.cpp:2458)\r\n==9443==    by 0x6D8B64: CChainState::ConnectTip(BlockValidationState&, CChainParams const&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (validation.cpp:2649)\r\n==9443==    by 0x6D9712: CChainState::ActivateBestChainStep(BlockValidationState&, CChainParams const&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (validation.cpp:2781)\r\n==9443==    by 0x6D9E8F: CChainState::ActivateBestChain(BlockValidationState&, CChainParams const&, std::shared_ptr<CBlock const>) (validation.cpp:2908)\r\n==9443==    by 0x6E089E: ChainstateManager::ProcessNewBlock(CChainParams const&, std::shared_ptr<CBlock const>, bool, bool*) (validation.cpp:3864)\r\n==9443==    by 0x3FADD3: PeerManager::ProcessMessage(CNode&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CDataStream&, std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::atomic<bool> const&) (net_processing.cpp:3506)\r\n==9443==    by 0x3FDA75: PeerManager::ProcessMessages(CNode*, std::atomic<bool>&) (net_processing.cpp:3864)\r\n==9443==    by 0x390065: CConnman::ThreadMessageHandler() (net.cpp:2155)\r\n==9443==    by 0x3E018D: void std::__invoke_impl<void, void (CConnman::*&)(), CConnman*&>(std::__invoke_memfun_deref, void (CConnman::*&)(), CConnman*&) (invoke.h:73)\r\n==9443==    by 0x3DB61C: std::__invoke_result<void (CConnman::*&)(), CConnman*&>::type std::__invoke<void (CConnman::*&)(), CConnman*&>(void (CConnman::*&)(), CConnman*&) (invoke.h:95)\r\n==9443==  Uninitialised value was created by a heap allocation\r\n==9443==    at 0x4C3052A: operator new(unsigned long) (vg_replace_malloc.c:342)\r\n==9443==    by 0xA1C134: CreateChainParams(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (chainparams.cpp:495)\r\n==9443==    by 0xA1C31B: SelectParams(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (chainparams.cpp:505)\r\n==9443==    by 0x30ABB6: AppInit(int, char**) (bitcoind.cpp:82)\r\n==9443==    by 0x30B53E: main (bitcoind.cpp:172)\r\n```",
      "created_at" : "2020-09-30T04:32:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20035#issuecomment-701150491",
      "id" : 701150491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20035",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMTE1MDQ5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-30T04:32:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/701150491",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Unfortunately it seems like this UUM is not triggered by the code paths exercised by `feature_signet.py`. Covering the triggering code path in the functional test would be nice as part of this fix :)\r\n\r\n```\r\n$ test/functional/test_runner.py --valgrind --timeout-factor=0 feature_signet\r\n\r\nTEST              | STATUS    | DURATION\r\n\r\nfeature_signet.py | â Passed  | 151 s\r\n\r\nALL               | â Passed  | 151 s (accumulated) \r\nRuntime: 151 s\r\n```",
      "created_at" : "2020-09-30T04:39:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20035#issuecomment-701151899",
      "id" : 701151899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20035",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMTE1MTg5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-30T04:39:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/701151899",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pushed some non-bugfix changes",
      "created_at" : "2020-09-30T12:53:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20035#issuecomment-701370891",
      "id" : 701370891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20035",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMTM3MDg5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-30T12:53:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/701370891",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
