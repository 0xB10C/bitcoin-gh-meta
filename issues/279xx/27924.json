{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "fabed982ad9143cddaca8346f6b4c243dd84e0c4 re-enabled the assert `assert(banmap == banmap_read)` in `banman`:\r\n```cpp\r\nban_man.DumpBanlist();\r\nSetMockTime(ConsumeTime(fuzzed_data_provider));\r\nbanmap_t banmap;\r\nban_man.GetBanned(banmap);\r\nBanMan ban_man_read{banlist_file, /* client_interface */ nullptr, /* default_ban_time */ 0};\r\nbanmap_t banmap_read;\r\nban_man_read.GetBanned(banmap_read);\r\nassert(banmap == banmap_read);\r\n```\r\n\r\nHowever, my server crashed because of it. Debugging it I could realize the problem is the function `LookupSubnet`. \r\n\r\nDuring the execution that caused the crash, the banman has been filled with the following subnets:\r\n```sh\r\n2e:6f6e:696f:6ef3:a080:b18d:5d5d:5d00%2038004089/121\r\n191:b491:7979:7979:7979:7979:79ff:ff80%2037980897/121\r\n207:fc26:b9ce:7aae:798b:5f2d:1d39:4380%2038004089/121\r\n676:c962:7962:b787:b392:fed8:7058:c500%2038004089/121\r\n...\r\n```\r\n\r\nAfter dumping it (`DumpBanlist`), we initialize a `BanMan` reading same file:\r\n```cpp\r\nBanMan ban_man_read{banlist_file, /* client_interface */ nullptr, /* default_ban_time */ 0};\r\nbanmap_t banmap_read;\r\nban_man_read.GetBanned(banmap_read);\r\n```\r\nHowever, when we initialize a `BanMan` it will - at some point - call `BanMapFromJson`.\r\n\r\nTaking a look at `BanMapFromJson`, I noticed we have:\r\n```cpp\r\nif (!LookupSubNet(subnet_str, subnet)) {\r\n    LogPrintf(\"Dropping entry with unparseable address or subnet (%s) from ban list\\n\", subnet_str);\r\n    continue;\r\n}\r\n```\r\nCalling `LookupSubNet`, for example, with `2e:6f6e:696f:6ef3:a080:b18d:5d5d:5d00%2038004089/121`, will return true, but the subnet will be `676:c962:7962:b787:b392:fed8:7058:c500%31097/121` making the assertion `assert(banmap == banmap_read)` to fail.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27924/comments",
   "created_at" : "2023-06-20T22:00:20Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27924/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/27924",
   "id" : 1766261858,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27924/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585pRwRi",
   "number" : 27924,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27924/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27924/timeline",
   "title" : "fuzz: banman, Assertion `banmap == banmap_read' failed",
   "updated_at" : "2023-06-20T22:00:46Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27924",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
      "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
      "followers_url" : "https://api.github.com/users/brunoerg/followers",
      "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/brunoerg",
      "id" : 19480819,
      "login" : "brunoerg",
      "node_id" : "MDQ6VXNlcjE5NDgwODE5",
      "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
      "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
      "repos_url" : "https://api.github.com/users/brunoerg/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/brunoerg"
   }
}
