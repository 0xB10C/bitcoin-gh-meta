[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [sipa](https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1638767118), [achow101](https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1639007336) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-06-29T10:36:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1612837789",
      "id" : 1612837789,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585gIfOd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1612837789/reactions"
      },
      "updated_at" : "2023-07-17T23:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1612837789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27997#discussion_r1246889477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27997"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246889477"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In d4d3fcc16ccae4755604bb3a9a6a45542b231dcc \"miniscript: treat all unsatisfiable miniscripts as insane\"\r\n\r\nSince this is only used negated, I think it would be better to make this `IsSatisfiable`\r\n\r\n```suggestion\r\n    bool IsSatisfiable() const { return GetStackSize().has_value(); }\r\n```",
      "commit_id" : "d4a2dba86ab7d8b314c529dd86b4743e3b761aea",
      "created_at" : "2023-06-29T16:44:54Z",
      "diff_hunk" : "@@ -1161,6 +1161,9 @@ struct Node {\n         return true;\n     }\n \n+    //! Whether no satisfaction exists for this node.\n+    bool IsNotSatisfiable() const { return !GetStackSize(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#discussion_r1246889477",
      "id" : 1246889477,
      "line" : 1165,
      "node_id" : "PRRC_kwDOABII585KUgYF",
      "original_commit_id" : "d4d3fcc16ccae4755604bb3a9a6a45542b231dcc",
      "original_line" : 1165,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 36,
      "pull_request_review_id" : 1505714911,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27997",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246889477/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-29T16:44:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246889477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is on purpose, because:\n1. Whether a script is satisfiable depends on the material available, whereas we can tell whether a script will never be satisfiable.\n2. `IsSatisfiable` already exists and implements the above (needs to be told what challenges are available).\n\nSo to avoid the confusion i opted for the negative. But i could make it `MayBeSatisfiable` if that's clearer?\n-------- Original Message --------\nOn Jun 29, 2023, 6:45 PM, Andrew Chow wrote:\n\n> @achow101 commented on this pull request.\n>\n> ---------------------------------------------------------------\n>\n> In [src/script/miniscript.h](https://github.com/bitcoin/bitcoin/pull/27997#discussion_r1246889477):\n>\n>> @@ -1161,6 +1161,9 @@ struct Node {\n>          return true;\n>      }\n>\n> +    //! Whether no satisfaction exists for this node.\n> +    bool IsNotSatisfiable() const { return !GetStackSize(); }\n>\n> In [d4d3fcc](https://github.com/bitcoin/bitcoin/commit/d4d3fcc16ccae4755604bb3a9a6a45542b231dcc) \"miniscript: treat all unsatisfiable miniscripts as insane\"\n>\n> Since this is only used negated, I think it would be better to make this IsSatisfiable\n>\n> â¬ï¸ Suggested change\n>\n> -    bool IsNotSatisfiable() const { return !GetStackSize(); }\n> +    bool IsSatisfiable() const { return GetStackSize().has_value(); }\n>\n> â\n> Reply to this email directly, [view it on GitHub](https://github.com/bitcoin/bitcoin/pull/27997#pullrequestreview-1505714911), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/AFLK3FYWFPJOUPCFUJFX6KTXNWWJJANCNFSM6AAAAAAZYKJZQE).\n> You are receiving this because you authored the thread.Message ID: ***@***.***>",
      "created_at" : "2023-06-29T17:01:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1613538377",
      "id" : 1613538377,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585gLKRJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613538377/reactions"
      },
      "updated_at" : "2023-06-29T17:01:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613538377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "0 is sane according to https://github.com/rust-bitcoin/rust-miniscript/blob/master/src/miniscript/analyzable.rs#L66\r\n\r\nIf we are going to change the definition can we please have some reference document somewhere about what \"sane\" actually means?",
      "created_at" : "2023-06-29T18:35:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1613616505",
      "id" : 1613616505,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585gLdV5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613616505/reactions"
      },
      "updated_at" : "2023-06-29T18:35:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613616505",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1351933?v=4",
         "events_url" : "https://api.github.com/users/apoelstra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/apoelstra/followers",
         "following_url" : "https://api.github.com/users/apoelstra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/apoelstra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/apoelstra",
         "id" : 1351933,
         "login" : "apoelstra",
         "node_id" : "MDQ6VXNlcjEzNTE5MzM=",
         "organizations_url" : "https://api.github.com/users/apoelstra/orgs",
         "received_events_url" : "https://api.github.com/users/apoelstra/received_events",
         "repos_url" : "https://api.github.com/users/apoelstra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/apoelstra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/apoelstra"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "So I think the definition for \"sane\" that we want is \"does the apparent policy of this miniscript match its actual semantics\". If you drop all wrappers and naively replace all fragments with their corresponding policy, is that guaranteed to match the policy of the actual script?\r\n\r\nArguably, this is the case for \"0\", despite not having any keys, because its apparent policy is that it's never spendable, and that is also what it actually implements. Of course, we could expand the definition and explicitly treat lack of keys as automatically non-sane, but it seems more correct to instead say that only spendable miniscripts need key to be sane.",
      "created_at" : "2023-06-29T19:33:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1613689759",
      "id" : 1613689759,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585gLvOf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613689759/reactions"
      },
      "updated_at" : "2023-06-29T19:33:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613689759",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sure, i'll just move the check for satifiability to the descriptor parsing logic.\n\nJust one comment on the definition of \"sane\".\n> I think the definition for \"sane\" that we want is \"does the apparent policy of this miniscript match its actual semantics\" - if you drop all wrappers and naively replace all fragments with their corresponding policy, is that guaranteed to match the policy of the actual script.\n\nIt's not what we have at the moment though? For instance `older(4)` meets this criterion but isn't \"sane\" because it does not have the `s` property.\nIt seems to me what you describe is checking that all satisfactions are within limits and there is no timelock mixes, but without the requirement for a signature?\n-------- Original Message --------\nOn Jun 29, 2023, 9:33 PM, Pieter Wuille wrote:\n\n> So I think the definition for \"sane\" that we want is \"does the apparent policy of this miniscript match its actual semantics\" - if you drop all wrappers and naively replace all fragments with their corresponding policy, is that guaranteed to match the policy of the actual script.\n>\n> Arguably, this is the case for \"0\", despite not having any keys, because its apparent policy is that it's never spendable, and that is also what it actually implements. Of course, we could expand the definition and explicitly treat lack of keys as automatically non-sane, but it seems more correct to instead say that only spendable miniscripts need key to be sane.\n>\n> â\n> Reply to this email directly, [view it on GitHub](https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1613689759), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/AFLK3F42KMQI6O73AHTU2FDXNXKBLANCNFSM6AAAAAAZYKJZQE).\n> You are receiving this because you authored the thread.Message ID: ***@***.***>",
      "created_at" : "2023-06-30T11:57:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1614549683",
      "id" : 1614549683,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585gPBKz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1614549683/reactions"
      },
      "updated_at" : "2023-06-30T11:57:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1614549683",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The requirement for a signature actually stems from the same question, though it's not as exact.\r\n\r\nIf a script can be satisfied without signatures, it means there may be no signatures at all in the whole transaction or input, and thus nothing that actually commits to the nLockTime or nSequence values respectively, and so an attacker could just modify those values without invalidating anything.",
      "created_at" : "2023-06-30T15:29:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1614821612",
      "id" : 1614821612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585gQDjs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1614821612/reactions"
      },
      "updated_at" : "2023-06-30T15:29:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1614821612",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I know, my point is the definition as spelled out before would still hold (anybody would be able to spend it but the \"apparent policy of this miniscript match its actual semantics\"). What i was trying to get at is that the rationale for requiring sane miniscripts to contain a signature check isn't to make the actual semantics match the apparent policy, but that it's unusable otherwise. And it's the same for unsatisfiable miniscripts.\r\n\r\nAnyways, i was just nitpicking. I pushed an update to leave intact the definition of `IsSane` in Miniscript but instead check we don't parse unsatisfiable miniscripts in the descriptors. Added a functional test in a separate commit to easily check it fails on master.",
      "created_at" : "2023-07-01T12:43:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1615891160",
      "id" : 1615891160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585gUIrY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1615891160/reactions"
      },
      "updated_at" : "2023-07-01T12:43:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1615891160",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> What i was trying to get at is that the rationale for requiring sane miniscripts to contain a signature check isn't to make the actual semantics match the apparent policy, but that it's unusable otherwise\r\n\r\nNo, the rationale was definitely about transaction malleability, and about transactions being spendable in surprising ways. Transactions *not* being spendable, given a policy which indicates non-spendability, has never been something we've tried to prevent or even thought much about.\r\n\r\nI'd be fine changing our definitions or rationale, and I agree that it'd be sensible to forbid top-level unspendable policies in a wallet, but their semantics are exactly what it says on the tin, so this would be a change in the way that we've been thinking about these things.",
      "created_at" : "2023-07-01T16:27:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1615982610",
      "id" : 1615982610,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585gUfAS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1615982610/reactions"
      },
      "updated_at" : "2023-07-01T16:27:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1615982610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1351933?v=4",
         "events_url" : "https://api.github.com/users/apoelstra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/apoelstra/followers",
         "following_url" : "https://api.github.com/users/apoelstra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/apoelstra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/apoelstra",
         "id" : 1351933,
         "login" : "apoelstra",
         "node_id" : "MDQ6VXNlcjEzNTE5MzM=",
         "organizations_url" : "https://api.github.com/users/apoelstra/orgs",
         "received_events_url" : "https://api.github.com/users/apoelstra/received_events",
         "repos_url" : "https://api.github.com/users/apoelstra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/apoelstra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/apoelstra"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> No, the rationale was definitely about transaction malleability\r\n\r\nMalleability is orthogonal. I was responding to the definition given above of \"does the apparent policy of this miniscript match its actual semantics\". An `older(42)` script can well be malleated, its apparent policy will match its semantics.\r\n\r\nBut anyways, let's switch to ##miniscript if we want to continue discussing this? It's not what this PR is implementing anymore.",
      "created_at" : "2023-07-17T16:53:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1638517435",
      "id" : 1638517435,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585hqcq7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638517435/reactions"
      },
      "updated_at" : "2023-07-17T16:53:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638517435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK c7db88af71b3204171f33399aa4f33b40a4f7cd9\r\n\r\nLonger term, and not for this PR, I think it would make sense to make a clearer separation between \"miniscripts (and descriptors in general) which have undesirable properties so they shouldn't be importable without warning\", and \"miniscripts that are so deficient we cannot reason about them at all\". For example, if one has a malleable (or non-IsSane(), for certain reasons) miniscript, it'd be a bad idea to import it, as assessment of its properties may be wrong. However, it may still be worth signing for if one happens to have coins encumbered by such a miniscript despite those reasons.",
      "created_at" : "2023-07-17T19:45:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1638767118",
      "id" : 1638767118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585hrZoO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638767118/reactions"
      },
      "updated_at" : "2023-07-17T19:45:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638767118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK c7db88af71b3204171f33399aa4f33b40a4f7cd9",
      "created_at" : "2023-07-17T23:06:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1639007336",
      "id" : 1639007336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585hsURo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1639007336/reactions"
      },
      "updated_at" : "2023-07-17T23:06:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1639007336",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I forgot also checking this when parsing from Script..\r\n\r\nEDIT: actually i don't think we need it since we don't let users import a descriptor from Script. And it's always better to parse a Miniscript in some utilities (such as `decodescript`), even though unspendable, than to display the raw Script.",
      "created_at" : "2023-07-20T13:04:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27997#issuecomment-1643890926",
      "id" : 1643890926,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
      "node_id" : "IC_kwDOABII585h-8ju",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643890926/reactions"
      },
      "updated_at" : "2023-07-20T13:28:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643890926",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   }
]
