{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "`m_nodes` in `CConnman` is always empty in connman target (since we don't call `CreateNodeFromAcceptedSocket`/`OpenNetworkConnection` for an obvious reason). Because of this, the calls for `DisconnectNode`, `FindNode`, `ForEachNode`, `GetNodeStats` and many other ones seems to be \"useless\". That's the reason we're not getting coverage (at all) for many of these covered functions (See: https://marcofalke.github.io/b-c-cov/fuzz.coverage/src/net.cpp.gcov.html).\r\n\r\nI suppose we could use `ConnmanTestMsg` here and then we can use `AddTestNode`, not sure whether it's the best approach:\r\n```diff\r\ndiff --git a/src/test/fuzz/connman.cpp b/src/test/fuzz/connma\r\nn.cpp\r\nindex f81658b83..607a91488 100644\r\n--- a/src/test/fuzz/connman.cpp\r\n+++ b/src/test/fuzz/connman.cpp\r\n@@ -32,7 +32,7 @@ FUZZ_TARGET_INIT(connman, initialize_connman)\r\n {\r\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\r\n     SetMockTime(ConsumeTime(fuzzed_data_provider));\r\n-    CConnman connman{fuzzed_data_provider.ConsumeIntegral<uint64_t>(),\r\n+    ConnmanTestMsg connman{fuzzed_data_provider.ConsumeIntegral<uint64_t>(),\r\n                      fuzzed_data_provider.ConsumeIntegral<uint64_t>(),\r\n                      *g_setup->m_node.addrman,\r\n                      *g_setup->m_node.netgroupman,\r\n@@ -41,6 +41,15 @@ FUZZ_TARGET_INIT(connman, initialize_connman)\r\n     CNode random_node = ConsumeNode(fuzzed_data_provider);\r\n     CSubNet random_subnet;\r\n     std::string random_string;\r\n+\r\n+    {\r\n+        LOCK(NetEventsInterface::g_msgproc_mutex);\r\n+        for (int i = 0; i < 100; i++) {\r\n+            CNode& p2p_node = *ConsumeNodeAsUniquePtr(fuzzed_data_provider).release();\r\n+            connman.AddTestNode(p2p_node);\r\n+        }\r\n+    }\r\n+\r\n     LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\r\n         CallOneOf(\r\n             fuzzed_data_provider,\r\n@@ -128,4 +137,6 @@ FUZZ_TARGET_INIT(connman, initialize_connman)\r\n     (void)connman.GetTotalBytesSent();\r\n     (void)connman.GetTryNewOutboundPeer();\r\n     (void)connman.GetUseAddrmanOutgoing();\r\n+\r\n+    connman.ClearTestNodes();\r\n }\r\n```\r\n\r\n",
   "closed_at" : "2023-07-31T10:43:48Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27980/comments",
   "created_at" : "2023-06-26T19:52:00Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27980/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/27980",
   "id" : 1775484693,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27980/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585p078V",
   "number" : 27980,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27980/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : "completed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27980/timeline",
   "title" : "fuzz: connman, `m_nodes` is always empty",
   "updated_at" : "2023-07-31T10:43:49Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27980",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
      "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
      "followers_url" : "https://api.github.com/users/brunoerg/followers",
      "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/brunoerg",
      "id" : 19480819,
      "login" : "brunoerg",
      "node_id" : "MDQ6VXNlcjE5NDgwODE5",
      "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
      "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
      "repos_url" : "https://api.github.com/users/brunoerg/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/brunoerg"
   }
}
