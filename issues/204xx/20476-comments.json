[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20476#discussion_r532467597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20476"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532467597"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/emfd_create/memfd_create",
      "commit_id" : "afc20c234fb995f8baaf68fef57e4ebaacf2c070",
      "created_at" : "2020-11-30T09:50:40Z",
      "diff_hunk" : "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Test script for symbol-check.py\n+'''\n+import subprocess\n+import unittest\n+\n+def call_symbol_check(cc, source, executable, options):\n+    subprocess.run([cc,source,'-o',executable] + options, check=True)\n+    p = subprocess.run(['./contrib/devtools/symbol-check.py',executable], stdout=subprocess.PIPE, universal_newlines=True)\n+    return (p.returncode, p.stdout.rstrip())\n+\n+def get_machine(cc):\n+    p = subprocess.run([cc,'-dumpmachine'], stdout=subprocess.PIPE, universal_newlines=True)\n+    return p.stdout.rstrip()\n+\n+class TestSymbolChecks(unittest.TestCase):\n+    def test_ELF(self):\n+        source = 'test1.c'\n+        executable = 'test1'\n+        cc = 'gcc'\n+\n+        # there's no way to do this test for RISC-V at the moment; bionic's libc is 2.27\n+        # and we allow all symbols from 2.27.\n+        if 'riscv' in get_machine(cc):\n+            self.skipTest(\"test not available for RISC-V\")\n+\n+        # emfd_create was introduced in GLIBC 2.27, so is newer than the upper limit of",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20476#discussion_r532467597",
      "id" : 532467597,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ2NzU5Nw==",
      "original_commit_id" : "afc20c234fb995f8baaf68fef57e4ebaacf2c070",
      "original_line" : 31,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "contrib/devtools/test-symbol-check.py",
      "position" : 31,
      "pull_request_review_id" : 540746442,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20476",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-30T09:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532467597",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
