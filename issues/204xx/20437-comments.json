[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK 892e7ddbd6f85653ee775c34f07b146c6f3b628e",
      "created_at" : "2020-11-26T19:23:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20437#issuecomment-734451151",
      "id" : 734451151,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20437",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDQ1MTE1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-26T19:28:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734451151",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Why pick a time that won't ever be hit in practice? Why pick a time that makes it impossible to go back in time?",
      "created_at" : "2020-11-27T14:03:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20437#issuecomment-734849980",
      "id" : 734849980,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20437",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDg0OTk4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T14:03:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734849980",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n\r\nI choose `SetMockTime(1)` because `SetMockTime(0)` is a no-op, and it seemed to me that `SetMockTime(1)` is commonly use in `src/test/`:\r\n\r\n```\r\n$ git grep SetMockTime \"src/test/\" | sed 's/^.*: *//g' | grep ^SetMockTime | sort | uniq -c | sort -rn\r\n      5 SetMockTime(0);\r\n      3 SetMockTime(2);\r\n      3 SetMockTime(1);\r\n      1 SetMockTime(nStartTime); // Overrides future calls to GetTime()\r\n      1 SetMockTime(nStartTime+24*60);\r\n      1 SetMockTime(nStartTime+21*60);\r\n      1 SetMockTime(GetTime() + 3 * chainparams.GetConsensus().nPowTargetSpacing + 1);\r\n      1 SetMockTime(ConsumeTime(fuzzed_data_provider));\r\n      1 SetMockTime(42);\r\n      1 SetMockTime(111);\r\n```\r\n\r\nI see your point about using a constant that is more realistic (higher) and allows for going back in time. It seems like you had a number in mind: give me your suggested constant and I'll happily use it :)",
      "created_at" : "2020-11-27T14:25:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20437#issuecomment-734859430",
      "id" : 734859430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20437",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDg1OTQzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T14:26:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734859430",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
