[
   {
      "author_association" : "MEMBER",
      "body" : "I think something is wrong if such a large value is passed in the first place. But the code change looks correct to me anyhow.",
      "created_at" : "2020-11-19T15:28:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#issuecomment-730450623",
      "id" : 730450623,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20406",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMDQ1MDYyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-19T15:28:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/730450623",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj I agree it should be rare, but there is at least one real world scenario where such an extreme value can be passed without it being a bug in the call site. In `PrioritiseTransaction` we call `FormatMoney(nFeeDelta)` on fee deltas. Fee deltas are allowed to be outside of the normal `MoneyRange(â¦)` as pointed out by luke-jr in another PR.\r\n\r\nAFAICT we don't put a lower or upper bound on fee deltas (besides being `CAmount` of course), so I thought it was safest to define `FormatMoney` and `ValueFromAmount` for the entire `CAmount` including the `std::numeric_limits<CAmount>::min()` corner case :)\r\n\r\nSome additional context: https://github.com/bitcoin/bitcoin/pull/20383#discussion_r523250890 :)",
      "created_at" : "2020-11-19T16:05:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#issuecomment-730474951",
      "id" : 730474951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20406",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMDQ3NDk1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-19T16:08:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/730474951",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r527423204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527423204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It kind of feels weird to me how quotient and remainder are treated as positive/negative separately here. It's only ever possible for either both of them to be positive (defining positive as >=0), or both of them to be negative, right? Depending on `amount`'s sign.\r\n\r\n(also maybe we need a compile time assertion that COIN is `>1` or we're back in the same place :laughing: )",
      "commit_id" : "61e6c03370d85422d63eff07ccfd1bd61cb4b2b3",
      "created_at" : "2020-11-20T05:42:52Z",
      "diff_hunk" : "@@ -17,12 +17,16 @@\n \n UniValue ValueFromAmount(const CAmount& amount)\n {\n-    bool sign = amount < 0;\n-    int64_t n_abs = (sign ? -amount : amount);\n-    int64_t quotient = n_abs / COIN;\n-    int64_t remainder = n_abs % COIN;\n+    int64_t quotient = amount / COIN;\n+    if (quotient < 0) {\n+        quotient = -quotient;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r527423204",
      "id" : 527423204,
      "line" : 22,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQyMzIwNA==",
      "original_commit_id" : "61e6c03370d85422d63eff07ccfd1bd61cb4b2b3",
      "original_line" : 22,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/core_write.cpp",
      "position" : 10,
      "pull_request_review_id" : 535129391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-20T05:48:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527423204",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I wasn't able to find a test that covered the negative COIN value scenarios.\r\nWouldn't It would make sense to test those scenarios since they show up on a basic truth table?\r\n\r\n###  n % COIN\r\n\r\n```  \r\n n %  COIN -->   1  \r\n n % -COIN -->   1  \r\n-n %  COIN -->  -1  \r\n-n % -COIN -->  -1  \r\n\r\n```",
      "created_at" : "2020-11-20T06:45:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#issuecomment-730921161",
      "id" : 730921161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20406",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMDkyMTE2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-20T06:45:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/730921161",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   }
]
