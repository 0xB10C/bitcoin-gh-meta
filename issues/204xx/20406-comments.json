[
   {
      "author_association" : "MEMBER",
      "body" : "I think something is wrong if such a large value is passed in the first place. But the code change looks correct to me anyhow.",
      "created_at" : "2020-11-19T15:28:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#issuecomment-730450623",
      "id" : 730450623,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20406",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMDQ1MDYyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-19T15:28:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/730450623",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj I agree it should be rare, but there is at least one real world scenario where such an extreme value can be passed without it being a bug at the call site. In `PrioritiseTransaction` we call `FormatMoney(nFeeDelta)` on fee deltas. Fee deltas are allowed to be outside of the normal `MoneyRange(â¦)` as pointed out by luke-jr in another PR.\r\n\r\nAFAICT we don't put a lower or upper bound on fee deltas (besides being `CAmount` of course), so I thought it was safest to define `FormatMoney` and `ValueFromAmount` for the entire `CAmount` including the `std::numeric_limits<CAmount>::min()` corner case :)\r\n\r\nSome additional context: https://github.com/bitcoin/bitcoin/pull/20383#discussion_r523250890 :)",
      "created_at" : "2020-11-19T16:05:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#issuecomment-730474951",
      "id" : 730474951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20406",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMDQ3NDk1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-23T15:52:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/730474951",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r527423204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527423204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It kind of feels weird to me how quotient and remainder are treated as positive/negative separately here. It's only ever possible for either both of them to be positive (defining positive as >=0), or both of them to be negative, right? Depending on `amount`'s sign.\r\n\r\n(also maybe we need a compile time assertion that COIN is `>1` or we're back in the same place :laughing: )",
      "commit_id" : "8d9979e04afdb081d923f79b581586330968ff56",
      "created_at" : "2020-11-20T05:42:52Z",
      "diff_hunk" : "@@ -17,12 +17,16 @@\n \n UniValue ValueFromAmount(const CAmount& amount)\n {\n-    bool sign = amount < 0;\n-    int64_t n_abs = (sign ? -amount : amount);\n-    int64_t quotient = n_abs / COIN;\n-    int64_t remainder = n_abs % COIN;\n+    int64_t quotient = amount / COIN;\n+    if (quotient < 0) {\n+        quotient = -quotient;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r527423204",
      "id" : 527423204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQyMzIwNA==",
      "original_commit_id" : "61e6c03370d85422d63eff07ccfd1bd61cb4b2b3",
      "original_line" : 22,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/core_write.cpp",
      "position" : null,
      "pull_request_review_id" : 535129391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-23T10:48:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527423204",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I wasn't able to find a test that covered the negative COIN value scenarios.\r\nWouldn't It would make sense to test those scenarios since they show up on a basic truth table?\r\n\r\n###  n % COIN\r\n\r\n```  \r\n n %  COIN -->   1  \r\n n % -COIN -->   1  \r\n-n %  COIN -->  -1  \r\n-n % -COIN -->  -1  \r\n\r\n```",
      "created_at" : "2020-11-20T06:45:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#issuecomment-730921161",
      "id" : 730921161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20406",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMDkyMTE2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-20T06:45:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/730921161",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r527608526"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527608526"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Couldn't this just call FormatMoney?\r\n```suggestion\r\n    return UniValue(UniValue::VNUM, FormatMoney(amount));\r\n```",
      "commit_id" : "8d9979e04afdb081d923f79b581586330968ff56",
      "created_at" : "2020-11-20T10:47:55Z",
      "diff_hunk" : "@@ -17,12 +17,16 @@\n \n UniValue ValueFromAmount(const CAmount& amount)\n {\n-    bool sign = amount < 0;\n-    int64_t n_abs = (sign ? -amount : amount);\n-    int64_t quotient = n_abs / COIN;\n-    int64_t remainder = n_abs % COIN;\n+    int64_t quotient = amount / COIN;\n+    if (quotient < 0) {\n+        quotient = -quotient;\n+    }\n+    int64_t remainder = amount % COIN;\n+    if (remainder < 0) {\n+        remainder = -remainder;\n+    }\n     return UniValue(UniValue::VNUM,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r527608526",
      "id" : 527608526,
      "line" : 27,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYwODUyNg==",
      "original_commit_id" : "61e6c03370d85422d63eff07ccfd1bd61cb4b2b3",
      "original_line" : 27,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_write.cpp",
      "position" : 21,
      "pull_request_review_id" : 535320471,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-23T10:48:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527608526",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r527983691"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527983691"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good points. Feedback addressed!",
      "commit_id" : "8d9979e04afdb081d923f79b581586330968ff56",
      "created_at" : "2020-11-20T21:36:07Z",
      "diff_hunk" : "@@ -17,12 +17,16 @@\n \n UniValue ValueFromAmount(const CAmount& amount)\n {\n-    bool sign = amount < 0;\n-    int64_t n_abs = (sign ? -amount : amount);\n-    int64_t quotient = n_abs / COIN;\n-    int64_t remainder = n_abs % COIN;\n+    int64_t quotient = amount / COIN;\n+    if (quotient < 0) {\n+        quotient = -quotient;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r527983691",
      "id" : 527983691,
      "in_reply_to_id" : 527423204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk4MzY5MQ==",
      "original_commit_id" : "61e6c03370d85422d63eff07ccfd1bd61cb4b2b3",
      "original_line" : 22,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/core_write.cpp",
      "position" : null,
      "pull_request_review_id" : 535793136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-23T10:48:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527983691",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r527984988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527984988"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point. The only difference between them is that `FormatMoney` chops off some trailing zeroes (`\"0.01\"` instead of `\"0.01000000\"`) to make the output more human-friendly. That should be OK also for JSON consumption. Now calling `FormatMoney`.",
      "commit_id" : "8d9979e04afdb081d923f79b581586330968ff56",
      "created_at" : "2020-11-20T21:39:05Z",
      "diff_hunk" : "@@ -17,12 +17,16 @@\n \n UniValue ValueFromAmount(const CAmount& amount)\n {\n-    bool sign = amount < 0;\n-    int64_t n_abs = (sign ? -amount : amount);\n-    int64_t quotient = n_abs / COIN;\n-    int64_t remainder = n_abs % COIN;\n+    int64_t quotient = amount / COIN;\n+    if (quotient < 0) {\n+        quotient = -quotient;\n+    }\n+    int64_t remainder = amount % COIN;\n+    if (remainder < 0) {\n+        remainder = -remainder;\n+    }\n     return UniValue(UniValue::VNUM,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r527984988",
      "id" : 527984988,
      "in_reply_to_id" : 527608526,
      "line" : 27,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk4NDk4OA==",
      "original_commit_id" : "61e6c03370d85422d63eff07ccfd1bd61cb4b2b3",
      "original_line" : 27,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_write.cpp",
      "position" : 21,
      "pull_request_review_id" : 535794768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-23T10:48:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527984988",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@RandyMcMillan I'm not sure I can think of a scenario when the constant `COIN` would be `<= 0` but I've added a `static_assert` to make the assumption of `COIN > 0` crystal clear for readers of the code :)",
      "created_at" : "2020-11-20T22:00:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#issuecomment-731429339",
      "id" : 731429339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20406",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMTQyOTMzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-20T22:00:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731429339",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks - I was just thinking thru different scenarios for testing. Negative moduli aren't something that comes up very often. :) ",
      "created_at" : "2020-11-20T22:12:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#issuecomment-731433810",
      "id" : 731433810,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20406",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMTQzMzgxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-20T22:12:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731433810",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r528013586"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528013586"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, turns out we have quite a few assumptions about the exact number of trailing zeroes in the tests that read `test/util/data/*.json`. Reverting to the previous version!",
      "commit_id" : "8d9979e04afdb081d923f79b581586330968ff56",
      "created_at" : "2020-11-20T22:55:45Z",
      "diff_hunk" : "@@ -17,12 +17,16 @@\n \n UniValue ValueFromAmount(const CAmount& amount)\n {\n-    bool sign = amount < 0;\n-    int64_t n_abs = (sign ? -amount : amount);\n-    int64_t quotient = n_abs / COIN;\n-    int64_t remainder = n_abs % COIN;\n+    int64_t quotient = amount / COIN;\n+    if (quotient < 0) {\n+        quotient = -quotient;\n+    }\n+    int64_t remainder = amount % COIN;\n+    if (remainder < 0) {\n+        remainder = -remainder;\n+    }\n     return UniValue(UniValue::VNUM,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r528013586",
      "id" : 528013586,
      "in_reply_to_id" : 527608526,
      "line" : 27,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAxMzU4Ng==",
      "original_commit_id" : "61e6c03370d85422d63eff07ccfd1bd61cb4b2b3",
      "original_line" : 27,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_write.cpp",
      "position" : 21,
      "pull_request_review_id" : 535829759,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-23T10:48:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528013586",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18772 (rpc: calculate fees in getblock using BlockUndo data by robot-visions)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-11-21T04:29:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#issuecomment-731506963",
      "id" : 731506963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20406",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMTUwNjk2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-21T04:29:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731506963",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r528568865"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528568865"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, many clients assume the number of zeros is equal to the subdivision. This is why we don't use the human-readable function for the JSON formatting.",
      "commit_id" : "8d9979e04afdb081d923f79b581586330968ff56",
      "created_at" : "2020-11-23T09:33:29Z",
      "diff_hunk" : "@@ -17,12 +17,16 @@\n \n UniValue ValueFromAmount(const CAmount& amount)\n {\n-    bool sign = amount < 0;\n-    int64_t n_abs = (sign ? -amount : amount);\n-    int64_t quotient = n_abs / COIN;\n-    int64_t remainder = n_abs % COIN;\n+    int64_t quotient = amount / COIN;\n+    if (quotient < 0) {\n+        quotient = -quotient;\n+    }\n+    int64_t remainder = amount % COIN;\n+    if (remainder < 0) {\n+        remainder = -remainder;\n+    }\n     return UniValue(UniValue::VNUM,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r528568865",
      "id" : 528568865,
      "in_reply_to_id" : 527608526,
      "line" : 27,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2ODg2NQ==",
      "original_commit_id" : "61e6c03370d85422d63eff07ccfd1bd61cb4b2b3",
      "original_line" : 27,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/core_write.cpp",
      "position" : 21,
      "pull_request_review_id" : 536297808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-23T10:48:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528568865",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r528569247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528569247"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't this be `> 1` not `> 0`? If COIN=1, the same undefined behavior is back.",
      "commit_id" : "8d9979e04afdb081d923f79b581586330968ff56",
      "created_at" : "2020-11-23T09:34:11Z",
      "diff_hunk" : "@@ -13,9 +13,13 @@ std::string FormatMoney(const CAmount& n)\n {\n     // Note: not using straight sprintf here because we do NOT want\n     // localized number formatting.\n-    int64_t n_abs = (n > 0 ? n : -n);\n-    int64_t quotient = n_abs/COIN;\n-    int64_t remainder = n_abs%COIN;\n+    static_assert(COIN > 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r528569247",
      "id" : 528569247,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2OTI0Nw==",
      "original_commit_id" : "681e92ccef36f8c8b88e98868831b065158157ab",
      "original_line" : 16,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/util/moneystr.cpp",
      "position" : null,
      "pull_request_review_id" : 536298332,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-23T10:48:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528569247",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r528614423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528614423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Now asserting `COIN > 1` :)",
      "commit_id" : "8d9979e04afdb081d923f79b581586330968ff56",
      "created_at" : "2020-11-23T10:48:58Z",
      "diff_hunk" : "@@ -13,9 +13,13 @@ std::string FormatMoney(const CAmount& n)\n {\n     // Note: not using straight sprintf here because we do NOT want\n     // localized number formatting.\n-    int64_t n_abs = (n > 0 ? n : -n);\n-    int64_t quotient = n_abs/COIN;\n-    int64_t remainder = n_abs%COIN;\n+    static_assert(COIN > 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#discussion_r528614423",
      "id" : 528614423,
      "in_reply_to_id" : 528569247,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxNDQyMw==",
      "original_commit_id" : "681e92ccef36f8c8b88e98868831b065158157ab",
      "original_line" : 16,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/util/moneystr.cpp",
      "position" : null,
      "pull_request_review_id" : 536356731,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20406",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-23T10:48:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528614423",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks. Code review ACK 8d9979e04afdb081d923f79b581586330968ff56",
      "created_at" : "2020-11-23T15:12:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20406#issuecomment-732223294",
      "id" : 732223294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20406",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMjIyMzI5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-23T15:12:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/732223294",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
