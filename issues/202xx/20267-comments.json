[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20362 (test: Implicitly sync after generate* to preempt races and intermittent test failures by MarcoFalke)\n* #20275 (wallet: List SQLite wallets in non-SQLite builds by ryanofsky)\n* #20206 (wallet, refactor: Include headers instead of function declarations by hebasto)\n* #20201 (build: pkg-config related cleanup by hebasto)\n* #20196 (net: fix GetListenPort() to derive the proper port by vasild)\n* #20172 (rpc, net: Expose connections_onion_only in getnetworkinfo RPC output by hebasto)\n* #19137 (wallettool: Add dump and createfromdump commands by achow101)\n* #18608 (refactor: Remove CAddressBookData::destdata by ryanofsky)\n* #16546 (External signer support - Wallet Box edition by Sjors)\n* #15068 (Install icon & .desktop file to XDG data by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-10-30T01:15:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-719111613",
      "id" : 719111613,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTExMTYxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-17T21:05:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719111613",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515261141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515261141"
         }
      },
      "author_association" : "NONE",
      "body" : "I'm having trouble figuring out the logic here. Is there a more clear and concise way to determine `descriptors`?",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T17:28:54Z",
      "diff_hunk" : "@@ -808,3 +833,23 @@ def is_wallet_tool_compiled(self):\n     def is_zmq_compiled(self):\n         \"\"\"Checks whether the zmq module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_ZMQ\")\n+\n+    def is_sqlite_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def is_bdb_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_BDB\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:\n+            descriptors = True\n+        elif self.is_bdb_compiled() and not self.is_sqlite_compiled() and descriptors:\n+            descriptors = False\n+        return descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515261141",
      "id" : 515261141,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2MTE0MQ==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 860,
      "original_position" : 83,
      "original_start_line" : 850,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515261141",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515262567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515262567"
         }
      },
      "author_association" : "NONE",
      "body" : "Are you able to use `self. get_use_descriptors()` here? To me it seems like logic might be getting duplicated",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T17:30:44Z",
      "diff_hunk" : "@@ -767,8 +777,23 @@ def skip_if_no_bitcoind_zmq(self):\n \n     def skip_if_no_wallet(self):\n         \"\"\"Skip the running test if wallet has not been compiled.\"\"\"\n+        self.requires_wallet = True\n         if not self.is_wallet_compiled():\n             raise SkipTest(\"wallet has not been compiled.\")\n+        if self.options.descriptors:\n+            self.skip_if_no_sqlite()\n+        else:\n+            self.skip_if_no_bdb()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515262567",
      "id" : 515262567,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2MjU2Nw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 792,
      "original_position" : 46,
      "original_start_line" : 783,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515262567",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515268074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515268074"
         }
      },
      "author_association" : "NONE",
      "body" : "nit: in places like these would  `err_code = -4 if self.options.descriptors else -1` be easier to follow?",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T17:35:11Z",
      "diff_hunk" : "@@ -101,20 +101,31 @@ def wallet_file(name):\n         #   sub/w5     - to verify relative wallet path is created correctly\n         #   extern/w6  - to verify absolute wallet path is created correctly\n         #   w7_symlink - to verify symlinked wallet path is initialized correctly\n-        #   w8         - to verify existing wallet file is loaded correctly\n+        #   w8         - to verify existing wallet file is loaded correctly. Not tested for SQLite wallets as this is a deprecated BDB behavior.\n         #   ''         - to verify default wallet file is created correctly\n-        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', self.default_wallet_name]\n+        to_create = ['w1', 'w2', 'w3', 'w', 'sub/w5', 'w7_symlink']\n+        in_wallet_dir = to_create.copy() # Wallets in the wallet dir\n+        in_wallet_dir.append('w7') # w7 is not loaded or created, but will be listed by listwalletdir because w7_symlink\n+        to_create.append(os.path.join(self.options.tmpdir, 'extern/w6')) # External, not in the wallet dir, so we need to avoid adding it to in_wallet_dir\n+        to_load = [self.default_wallet_name]\n+        if not self.options.descriptors:\n+            to_load.append('w8')\n+        wallet_names = to_create + to_load # Wallet names loaded in the wallet\n+        in_wallet_dir += to_load # The loaded wallets are also in the wallet dir\n         self.start_node(0)\n-        for wallet_name in wallet_names[:-2]:\n-            self.nodes[0].createwallet(wallet_name, descriptors=False)\n-        for wallet_name in wallet_names[-2:]:\n+        for wallet_name in to_create:\n+            self.nodes[0].createwallet(wallet_name)\n+        for wallet_name in to_load:\n             self.nodes[0].loadwallet(wallet_name)\n-        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), [self.default_wallet_name, os.path.join('sub', 'w5'), 'w', 'w1', 'w2', 'w3', 'w7', 'w7_symlink', 'w8'])\n+        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), sorted(in_wallet_dir))\n \n         assert_equal(set(node.listwallets()), set(wallet_names))\n \n         # should raise rpc error if wallet path can't be created\n-        assert_raises_rpc_error(-1, \"boost::filesystem::create_directory:\", self.nodes[0].createwallet, \"w8/bad\", descriptors=False)\n+        err_code = -1\n+        if self.options.descriptors:\n+            err_code = -4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515268074",
      "id" : 515268074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2ODA3NA==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 127,
      "original_position" : 45,
      "original_start_line" : 125,
      "path" : "test/functional/wallet_multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515268074",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515274175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515274175"
         }
      },
      "author_association" : "NONE",
      "body" : "It seems like usually you're doing: `#ifdef USE_BDB ... #elif USE_SQLITE`, but here you're doing  `#ifdef USE_BDB ... #ifdef USE_SQLITE`\r\n\r\nShould this be consistent, or does it matter? I'm guessing `USE_BDB` and `USE_SQLITE` can never both be set?",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T17:44:14Z",
      "diff_hunk" : "@@ -1011,9 +1013,11 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n \n     Optional<DatabaseFormat> format;\n     if (exists) {\n+#ifdef USE_BDB\n         if (ExistsBerkeleyDatabase(path)) {\n             format = DatabaseFormat::BERKELEY;\n         }\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515274175",
      "id" : 515274175,
      "line" : 1021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3NDE3NQ==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 1021,
      "original_position" : 19,
      "original_start_line" : 1016,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 19,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 1016,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515274175",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515275934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515275934"
         }
      },
      "author_association" : "NONE",
      "body" : "same, should it be `#elif USE_SQLITE` here?",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T17:46:52Z",
      "diff_hunk" : "@@ -14,7 +14,9 @@\n #include <util/system.h>\n #include <util/time.h>\n #include <util/translation.h>\n+#ifdef USE_BDB\n #include <wallet/bdb.h>\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515275934",
      "id" : 515275934,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3NTkzNA==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 20,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 7,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515275934",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515277183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515277183"
         }
      },
      "author_association" : "NONE",
      "body" : "Can this be condensed to a one-liner: `check_wallet_filelock(self.is_sqlite_compiled())`",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T17:49:07Z",
      "diff_hunk" : "@@ -27,11 +27,20 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error(extra_args=['-datadir={}'.format(self.nodes[0].datadir), '-noserver'], expected_msg=expected_msg)\n \n         if self.is_wallet_compiled():\n-            self.nodes[0].createwallet(self.default_wallet_name)\n-            wallet_dir = os.path.join(datadir, 'wallets')\n-            self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n-            expected_msg = \"Error: Error initializing wallet database environment\"\n-            self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+            def check_wallet_filelock(descriptors):\n+                self.nodes[0].createwallet(wallet_name=self.default_wallet_name, descriptors=descriptors)\n+                wallet_dir = os.path.join(datadir, 'wallets')\n+                self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n+                if descriptors:\n+                    expected_msg = \"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+                else:\n+                    expected_msg = \"Error: Error initializing wallet database environment\"\n+                self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+\n+            if self.is_bdb_compiled():\n+                check_wallet_filelock(False)\n+            if self.is_sqlite_compiled():\n+                check_wallet_filelock(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515277183",
      "id" : 515277183,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3NzE4Mw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 46,
      "original_position" : 22,
      "original_start_line" : 40,
      "path" : "test/functional/feature_filelock.py",
      "position" : 32,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 43,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515277183",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303197"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303197"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, `get_use_descriptors()` is used to switch between legacy and descriptors for the tests where the type is not explicitly being set. This is different from the wallet tests (that will call this `skip_if_no_wallet()`) which are testing specific descriptor and legacy behavior.",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T18:34:47Z",
      "diff_hunk" : "@@ -767,8 +777,23 @@ def skip_if_no_bitcoind_zmq(self):\n \n     def skip_if_no_wallet(self):\n         \"\"\"Skip the running test if wallet has not been compiled.\"\"\"\n+        self.requires_wallet = True\n         if not self.is_wallet_compiled():\n             raise SkipTest(\"wallet has not been compiled.\")\n+        if self.options.descriptors:\n+            self.skip_if_no_sqlite()\n+        else:\n+            self.skip_if_no_bdb()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303197",
      "id" : 515303197,
      "in_reply_to_id" : 515262567,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzE5Nw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 792,
      "original_position" : 46,
      "original_start_line" : 783,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 520937226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303197",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303762"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not really.\r\n\r\nThe purpose of this function is to enable or disable features depending on whether support is compiled and the current settings, for those tests where the descriptors setting is not important to the test and only need to just work.",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T18:35:49Z",
      "diff_hunk" : "@@ -808,3 +833,23 @@ def is_wallet_tool_compiled(self):\n     def is_zmq_compiled(self):\n         \"\"\"Checks whether the zmq module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_ZMQ\")\n+\n+    def is_sqlite_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def is_bdb_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_BDB\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:\n+            descriptors = True\n+        elif self.is_bdb_compiled() and not self.is_sqlite_compiled() and descriptors:\n+            descriptors = False\n+        return descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303762",
      "id" : 515303762,
      "in_reply_to_id" : 515261141,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzc2Mg==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 860,
      "original_position" : 83,
      "original_start_line" : 850,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 520937940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303762",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515305897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515305897"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, it's supposed to `#ifdef ... #ifdef` because both `USE_BDB` and `USE_SQLITE` can both be set, and in fact, is the default.\r\n\r\nThe instances where `#ifdef...#elif` is used is only because one wallet type must be defaulted to, and for now, we default to BDB.",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T18:40:16Z",
      "diff_hunk" : "@@ -1011,9 +1013,11 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n \n     Optional<DatabaseFormat> format;\n     if (exists) {\n+#ifdef USE_BDB\n         if (ExistsBerkeleyDatabase(path)) {\n             format = DatabaseFormat::BERKELEY;\n         }\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515305897",
      "id" : 515305897,
      "in_reply_to_id" : 515274175,
      "line" : 1021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNTg5Nw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 1021,
      "original_position" : 19,
      "original_start_line" : 1016,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 19,
      "pull_request_review_id" : 520940887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 1016,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515305897",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306142"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306142"
         }
      },
      "author_association" : "MEMBER",
      "body" : "When both are compiled, we want to test both cases.",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T18:40:49Z",
      "diff_hunk" : "@@ -27,11 +27,20 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error(extra_args=['-datadir={}'.format(self.nodes[0].datadir), '-noserver'], expected_msg=expected_msg)\n \n         if self.is_wallet_compiled():\n-            self.nodes[0].createwallet(self.default_wallet_name)\n-            wallet_dir = os.path.join(datadir, 'wallets')\n-            self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n-            expected_msg = \"Error: Error initializing wallet database environment\"\n-            self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+            def check_wallet_filelock(descriptors):\n+                self.nodes[0].createwallet(wallet_name=self.default_wallet_name, descriptors=descriptors)\n+                wallet_dir = os.path.join(datadir, 'wallets')\n+                self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n+                if descriptors:\n+                    expected_msg = \"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+                else:\n+                    expected_msg = \"Error: Error initializing wallet database environment\"\n+                self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+\n+            if self.is_bdb_compiled():\n+                check_wallet_filelock(False)\n+            if self.is_sqlite_compiled():\n+                check_wallet_filelock(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306142",
      "id" : 515306142,
      "in_reply_to_id" : 515277183,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNjE0Mg==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 46,
      "original_position" : 22,
      "original_start_line" : 40,
      "path" : "test/functional/feature_filelock.py",
      "position" : 32,
      "pull_request_review_id" : 520941204,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 43,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306142",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306249"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, if both are compiled, then we need both headers.",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T18:41:04Z",
      "diff_hunk" : "@@ -14,7 +14,9 @@\n #include <util/system.h>\n #include <util/time.h>\n #include <util/translation.h>\n+#ifdef USE_BDB\n #include <wallet/bdb.h>\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306249",
      "id" : 515306249,
      "in_reply_to_id" : 515275934,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNjI0OQ==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 20,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 7,
      "pull_request_review_id" : 520941356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306249",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306633"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306633"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in upstream PR #18788",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-10-30T18:41:49Z",
      "diff_hunk" : "@@ -101,20 +101,31 @@ def wallet_file(name):\n         #   sub/w5     - to verify relative wallet path is created correctly\n         #   extern/w6  - to verify absolute wallet path is created correctly\n         #   w7_symlink - to verify symlinked wallet path is initialized correctly\n-        #   w8         - to verify existing wallet file is loaded correctly\n+        #   w8         - to verify existing wallet file is loaded correctly. Not tested for SQLite wallets as this is a deprecated BDB behavior.\n         #   ''         - to verify default wallet file is created correctly\n-        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', self.default_wallet_name]\n+        to_create = ['w1', 'w2', 'w3', 'w', 'sub/w5', 'w7_symlink']\n+        in_wallet_dir = to_create.copy() # Wallets in the wallet dir\n+        in_wallet_dir.append('w7') # w7 is not loaded or created, but will be listed by listwalletdir because w7_symlink\n+        to_create.append(os.path.join(self.options.tmpdir, 'extern/w6')) # External, not in the wallet dir, so we need to avoid adding it to in_wallet_dir\n+        to_load = [self.default_wallet_name]\n+        if not self.options.descriptors:\n+            to_load.append('w8')\n+        wallet_names = to_create + to_load # Wallet names loaded in the wallet\n+        in_wallet_dir += to_load # The loaded wallets are also in the wallet dir\n         self.start_node(0)\n-        for wallet_name in wallet_names[:-2]:\n-            self.nodes[0].createwallet(wallet_name, descriptors=False)\n-        for wallet_name in wallet_names[-2:]:\n+        for wallet_name in to_create:\n+            self.nodes[0].createwallet(wallet_name)\n+        for wallet_name in to_load:\n             self.nodes[0].loadwallet(wallet_name)\n-        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), [self.default_wallet_name, os.path.join('sub', 'w5'), 'w', 'w1', 'w2', 'w3', 'w7', 'w7_symlink', 'w8'])\n+        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), sorted(in_wallet_dir))\n \n         assert_equal(set(node.listwallets()), set(wallet_names))\n \n         # should raise rpc error if wallet path can't be created\n-        assert_raises_rpc_error(-1, \"boost::filesystem::create_directory:\", self.nodes[0].createwallet, \"w8/bad\", descriptors=False)\n+        err_code = -1\n+        if self.options.descriptors:\n+            err_code = -4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306633",
      "id" : 515306633,
      "in_reply_to_id" : 515268074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNjYzMw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 127,
      "original_position" : 45,
      "original_start_line" : 125,
      "path" : "test/functional/wallet_multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 520941797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306633",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\nlibbitcoin_wallet.lib(wallet_walletutil.obj) : error LNK2001: unresolved external symbol \"bool __cdecl ExistsSQLiteDatabase(class boost::filesystem::path const &)\" (?ExistsSQLiteDatabase@@YA_NAEBVpath@filesystem@boost@@@Z) [C:\\projects\\bitcoin\\build_msvc\\bench_bitcoin\\bench_bitcoin.vcxproj]\r\n```\r\n\r\n```\r\nThe subject line of commit hash 8ea48f202d800895abea798385ac0e67f7f3034d is followed by a non-empty line. Subject lines should always be followed by a blank line.\r\n\r\n^---- failure generated from test/lint/lint-git-commit-check.sh",
      "created_at" : "2020-11-04T07:52:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721570837",
      "id" : 721570837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTU3MDgzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T07:52:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721570837",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the linter error.\r\n\r\nI'm not sure what is causing the appveyor failure, nor how to fix it.",
      "created_at" : "2020-11-04T17:36:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721873303",
      "id" : 721873303,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTg3MzMwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T17:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721873303",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm not sure what is causing the appveyor failure, nor how to fix it.\r\n\r\nI dug up the old link https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/36097732 and the link errors for unresolved symbols just come from removing wallet/bdb.cpp and wallet/salvage.cpp from original libbitcoin_wallet_a_SOURCES setting in Makefile.am. You might need to add these explicitly to build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in. Example of how to do this: 9eaeb7fb8d4ab0d4493849e6c17e314fd75fea9c",
      "created_at" : "2020-11-04T18:21:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721895698",
      "id" : 721895698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTg5NTY5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T18:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721895698",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Example of how to do this: [9eaeb7f](https://github.com/bitcoin/bitcoin/commit/9eaeb7fb8d4ab0d4493849e6c17e314fd75fea9c)\r\n\r\nBetter simpler example: 0660119ac372c2863d14060ac1bc9bc243771f94",
      "created_at" : "2020-11-04T18:23:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721897050",
      "id" : 721897050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTg5NzA1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T18:23:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721897050",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > I'm not sure what is causing the appveyor failure, nor how to fix it.\r\n> \r\n> I dug up the old link https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/36097732 and the link errors for unresolved symbols just come from removing wallet/bdb.cpp and wallet/salvage.cpp from original libbitcoin_wallet_a_SOURCES setting in Makefile.am. You might need to add these explicitly to build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in. Example of how to do this: [9eaeb7f](https://github.com/bitcoin/bitcoin/commit/9eaeb7fb8d4ab0d4493849e6c17e314fd75fea9c)\r\n\r\nI think I've fixed it in the upstream PR #20202",
      "created_at" : "2020-11-04T18:52:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721910807",
      "id" : 721910807,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTkxMDgwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T18:54:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721910807",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518397745"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518397745"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Do not compile BDB things when USE_BDB is defined\" (0cbff9303729dddaad781a4d285c141a86053687)\r\n\r\nI doubt it matters, but for consistency with the enable wallet option, it might make sense to add these arguments `argsman.AddHiddenArgs` when use_bdb is disabled, so configuation files specifying these options aren't rejected",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-05T22:04:46Z",
      "diff_hunk" : "@@ -69,9 +71,12 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n #endif\n     argsman.AddArg(\"-walletrbf\", strprintf(\"Send transactions with full-RBF opt-in enabled (RPC only, default: %u)\", DEFAULT_WALLET_RBF), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n \n+#ifdef USE_BDB",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518397745",
      "id" : 518397745,
      "line" : 74,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM5Nzc0NQ==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 74,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/init.cpp",
      "position" : 14,
      "pull_request_review_id" : 524708979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518397745",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518413477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518413477"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Do not compile BDB things when USE_BDB is defined\" (0cbff9303729dddaad781a4d285c141a86053687)\r\n\r\nIn `MakeDatabase`:\r\n\r\n- It doesn't seem ideal to return null with success status and no error message if bdb isn't available.\r\n- It also doesn't seem ideal to assert false above if sqlite isn't available.\r\n- It also puts an unnecessary burden on callers that don't care which database backend is used to have to write code figuring out on their own what backends are available before calling this function. (Code added above in wallet_tests.cpp is an example).\r\n\r\nAll of this seems easy to fix. Would suggest:\r\n\r\n```c++\r\n    // If format not specified or detected, choose default format based on what\r\n    // is available, and prefer BDB over SQLite.\r\n    if (!format) {\r\n#ifdef USE_SQLITE\r\n        format = DatabaseFormat::SQLITE;\r\n#endif\r\n#ifdef USE_BDB\r\n        format = DatabaseFormat::BDB;\r\n#endif\r\n    }\r\n\r\n    if (format == DatabaseFormat::SQLITE) {\r\n#ifdef USE_SQLITE\r\n        return MakeSQLiteDatabase(path, options, status, error);\r\n#endif\r\n        error = Untranslated(strprintf(\"Failed to open database path '%s'. Build does not support SQLite database format.\", path.string()));\r\n        status = DatabaseStatus::FAILED_BAD_FORMAT;\r\n        return nullptr;\r\n    }\r\n\r\n#ifdef USE_BDB\r\n    return MakeBerkeleyDatabase(path, options, status, error);\r\n#endif\r\n    error = Untranslated(strprintf(\"Failed to open database path '%s'. Build does not support Berkeley DB database format.\", path.string()));\r\n    status = DatabaseStatus::FAILED_BAD_FORMAT;\r\n    return nullptr;\r\n```",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-05T22:39:41Z",
      "diff_hunk" : "@@ -1059,8 +1063,11 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n #else\n     assert(format != DatabaseFormat::SQLITE);\n #endif\n-\n+#ifdef USE_BDB\n     return MakeBerkeleyDatabase(path, options, status, error);\n+#else\n+    return nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518413477",
      "id" : 518413477,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQxMzQ3Nw==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 1069,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 524708979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518413477",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518415945"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518415945"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Do not compile BDB things when USE_BDB is defined\" (0cbff9303729dddaad781a4d285c141a86053687)\r\n\r\nThis new code can be deleted with the suggested change to `MakeDatabase` above. The `MakeDatabase` function can figure out what formats are available without putting the burden on callers.",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-05T22:45:23Z",
      "diff_hunk" : "@@ -41,6 +41,11 @@ static std::shared_ptr<CWallet> TestLoadWallet(interfaces::Chain& chain)\n     DatabaseStatus status;\n     bilingual_str error;\n     std::vector<bilingual_str> warnings;\n+#ifdef USE_BDB",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518415945",
      "id" : 518415945,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQxNTk0NQ==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 44,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 524708979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518415945",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518420893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518420893"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add a helper to determine whether descriptors should be used\" (d97e22f5244cb913ef84953309a3eaee07f54c1c)\r\n\r\nI haven't looked yet at how this function is used, but it seem dangerous if it will be used to silently override `--descriptors` or `--legacy-wallet` options that were specified. This would be bad because it would give the impression that requested tests passed when in reality they were never run, and different tests were done instead. A safer alternative would set `self.option.descriptors` to `None` when no option is passed, `True` when `--descriptors` is passed, and `False` when `--legacy` is passed. Then logic like the following would be used to determine how to run tests:\r\n\r\n```python\r\ndescriptors = self.option.descriptors\r\nif descriptor is None:\r\n    # Current default is to use legacy instead of descriptor wallets unless bdb is unavailable\r\n    descriptors = not self.is_bdb_compiled()\r\nif descriptors and not self.is_sqlite_compiled():\r\n    raise SkipTest(\"sqlite has not been compiled.\")\r\nif not descriptors and not self.is_bdb_compiled():\r\n    raise SkipTest(\"bdb has not been compiled.\")\r\nreturn descriptors\r\n```",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-05T22:57:58Z",
      "diff_hunk" : "@@ -824,3 +824,15 @@ def is_zmq_compiled(self):\n     def is_sqlite_compiled(self):\n         \"\"\"Checks whether the wallet module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518420893",
      "id" : 518420893,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyMDg5Mw==",
      "original_commit_id" : "d97e22f5244cb913ef84953309a3eaee07f54c1c",
      "original_line" : 834,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 524708979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518420893",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in upstream #20202 ",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-06T18:37:18Z",
      "diff_hunk" : "@@ -69,9 +71,12 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n #endif\n     argsman.AddArg(\"-walletrbf\", strprintf(\"Send transactions with full-RBF opt-in enabled (RPC only, default: %u)\", DEFAULT_WALLET_RBF), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n \n+#ifdef USE_BDB",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934010",
      "id" : 518934010,
      "in_reply_to_id" : 518397745,
      "line" : 74,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkzNDAxMA==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 74,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/init.cpp",
      "position" : 14,
      "pull_request_review_id" : 525400863,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934010",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934067"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in upstream #20202 ",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-06T18:37:22Z",
      "diff_hunk" : "@@ -1059,8 +1063,11 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n #else\n     assert(format != DatabaseFormat::SQLITE);\n #endif\n-\n+#ifdef USE_BDB\n     return MakeBerkeleyDatabase(path, options, status, error);\n+#else\n+    return nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934067",
      "id" : 518934067,
      "in_reply_to_id" : 518413477,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkzNDA2Nw==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 1069,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 525400910,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934067",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934105"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in upstream #20202 ",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-06T18:37:27Z",
      "diff_hunk" : "@@ -41,6 +41,11 @@ static std::shared_ptr<CWallet> TestLoadWallet(interfaces::Chain& chain)\n     DatabaseStatus status;\n     bilingual_str error;\n     std::vector<bilingual_str> warnings;\n+#ifdef USE_BDB",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934105",
      "id" : 518934105,
      "in_reply_to_id" : 518415945,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkzNDEwNQ==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 44,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 525400962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-06T21:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934105",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r519014238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519014238"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This isn't used to skip tests.\r\n\r\nI've made a change that somewhat incorporates what you suggest.",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-06T21:29:03Z",
      "diff_hunk" : "@@ -824,3 +824,15 @@ def is_zmq_compiled(self):\n     def is_sqlite_compiled(self):\n         \"\"\"Checks whether the wallet module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r519014238",
      "id" : 519014238,
      "in_reply_to_id" : 518420893,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxNDIzOA==",
      "original_commit_id" : "d97e22f5244cb913ef84953309a3eaee07f54c1c",
      "original_line" : 834,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 525506046,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-06T21:29:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519014238",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Changed to automatically switch to using descriptor wallets if BDB is not compiled and `--legacy-wallet` is not compiled. This requires that several tests have `--legacy-wallet` be added in `test_runner.py`. Additionally, this broke `wallet_send.py` so those tests have to be updated to work with descriptor wallets. `wallet_upgradewallet.py` also had to be restricted to just a legacy wallet test.\r\n\r\nDoing this switching means that we won't skip a bunch of tests when BDB is not compiled. It also makes it possible to test all of our tests with both wallet types.",
      "created_at" : "2020-11-06T21:30:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-723308687",
      "id" : 723308687,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMzMwODY4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-06T21:31:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723308687",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523007716"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523007716"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should we be adding this for 0.21?",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-13T15:04:35Z",
      "diff_hunk" : "@@ -38,6 +38,12 @@\n /* Define to 1 to enable wallet functions */\n #define ENABLE_WALLET 1\n \n+/* Define to 1 to enable BDB wallet */\n+#define USE_BDB 1\n+\n+/* Define to 1 to enable SQLite wallet */\n+#define USE_SQLITE 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523007716",
      "id" : 523007716,
      "line" : 45,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAwNzcxNg==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 45,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "build_msvc/bitcoin_config.h",
      "position" : 8,
      "pull_request_review_id" : 530137014,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-13T15:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523007716",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523014805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523014805"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Should we be adding this for 0.21?\r\n\r\nNo opinion (seems fine, not necessary), but `#define USE_SQLITE 1` is part of base PR #20202. @achow101, PR description could be clearer and say ***This is based on #20202.*** or something along those lines since it seems like I'm not the only person to not realize this PR contains changes from another PR",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-13T15:15:21Z",
      "diff_hunk" : "@@ -38,6 +38,12 @@\n /* Define to 1 to enable wallet functions */\n #define ENABLE_WALLET 1\n \n+/* Define to 1 to enable BDB wallet */\n+#define USE_BDB 1\n+\n+/* Define to 1 to enable SQLite wallet */\n+#define USE_SQLITE 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523014805",
      "id" : 523014805,
      "in_reply_to_id" : 523007716,
      "line" : 45,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAxNDgwNQ==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 45,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "build_msvc/bitcoin_config.h",
      "position" : 8,
      "pull_request_review_id" : 530146324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-13T15:15:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523014805",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523015180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523015180"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this another bugfix we should put in 0.21?",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-13T15:15:52Z",
      "diff_hunk" : "@@ -27,6 +28,7 @@ bool RecoverDatabaseFile(const fs::path& file_path, bilingual_str& error, std::v\n     DatabaseStatus status;\n     options.require_existing = true;\n     options.verify = false;\n+    options.require_format = DatabaseFormat::BERKELEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523015180",
      "id" : 523015180,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAxNTE4MA==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 31,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/salvage.cpp",
      "position" : 12,
      "pull_request_review_id" : 530146739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-13T15:15:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523015180",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523079050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523079050"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's not strictly necessary. Other stuff later like trying to actually open the wallet file if it isn't BDB will still fail and we won't do anything to the file. It will just have a slightly worse error message.",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-13T16:55:22Z",
      "diff_hunk" : "@@ -27,6 +28,7 @@ bool RecoverDatabaseFile(const fs::path& file_path, bilingual_str& error, std::v\n     DatabaseStatus status;\n     options.require_existing = true;\n     options.verify = false;\n+    options.require_format = DatabaseFormat::BERKELEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523079050",
      "id" : 523079050,
      "in_reply_to_id" : 523015180,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3OTA1MA==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 31,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/salvage.cpp",
      "position" : 12,
      "pull_request_review_id" : 530230316,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-13T16:55:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523079050",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523229115"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523229115"
         }
      },
      "author_association" : "NONE",
      "body" : "@mjdietzx , you can use [Quine-McCluskey](https://github.com/ysangkok/py-kmap/blob/master/newqm.py) to derive a minimal function:\r\n\r\n```\r\n>>> from newqm import QM\r\n>>> qm = QM(['A','B','C'])\r\n>>> def aj(a,b,c): # a is self.options.descriptors, b is bdb, c is sqlite compilation\r\n...      descriptors = a\r\n...      if not b and c and not a:\r\n...          descriptors = True\r\n...      elif b and not c and a:\r\n...          descriptors = False\r\n...      return descriptors\r\n... \r\n>>> from itertools import product\r\n>>> values = [idx for (idx,x) in enumerate(product([False,True], repeat=3)) if aj(*x)]\r\n>>> qm.get_function(qm.solve(values,[])[1])\r\n'(((NOT B) AND C) OR (A AND (NOT B)) OR (A AND C))'\r\n```\r\n\r\nIf we color each conjunctive element separately, you can see which elements of the truth table it covers: https://imgur.com/vOVyQP8\r\n\r\nExpanded out using the original bindings:\r\n\r\n```\r\noption_set = self.options.descriptors\r\nbdb = self.is_bdb_compiled()\r\nsqlite = self.is_sqlite_compiled()\r\n\r\nreturn ((NOT bdb) AND sqlite) \\\r\n  OR (option_set AND (NOT bdb)) \\\r\n  OR (option_set AND sqlite)\r\n```\r\n\r\n",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-13T20:59:00Z",
      "diff_hunk" : "@@ -808,3 +833,23 @@ def is_wallet_tool_compiled(self):\n     def is_zmq_compiled(self):\n         \"\"\"Checks whether the zmq module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_ZMQ\")\n+\n+    def is_sqlite_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def is_bdb_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_BDB\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:\n+            descriptors = True\n+        elif self.is_bdb_compiled() and not self.is_sqlite_compiled() and descriptors:\n+            descriptors = False\n+        return descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523229115",
      "id" : 523229115,
      "in_reply_to_id" : 515261141,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIyOTExNQ==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 860,
      "original_position" : 83,
      "original_start_line" : 850,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 530411447,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-13T20:59:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523229115",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/284023?v=4",
         "events_url" : "https://api.github.com/users/ysangkok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ysangkok/followers",
         "following_url" : "https://api.github.com/users/ysangkok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ysangkok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ysangkok",
         "id" : 284023,
         "login" : "ysangkok",
         "node_id" : "MDQ6VXNlcjI4NDAyMw==",
         "organizations_url" : "https://api.github.com/users/ysangkok/orgs",
         "received_events_url" : "https://api.github.com/users/ysangkok/received_events",
         "repos_url" : "https://api.github.com/users/ysangkok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ysangkok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ysangkok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ysangkok"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523247602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523247602"
         }
      },
      "author_association" : "NONE",
      "body" : "the sentence makes it sound like it is optional because the wallet can be disabled. wouldn't it be better to say \"Optional. Needed to open legacy wallets.\"",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-13T21:42:47Z",
      "diff_hunk" : "@@ -41,7 +41,7 @@ Optional dependencies:\n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n  miniupnpc   | UPnP Support     | Firewall-jumping support\n- libdb4.8    | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+ libdb4.8    | Berkeley DB      | Optional, wallet storage (only needed when wallet enabled)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523247602",
      "id" : 523247602,
      "line" : 44,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0NzYwMg==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 44,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/build-unix.md",
      "position" : 5,
      "pull_request_review_id" : 530434202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-13T21:42:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523247602",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/284023?v=4",
         "events_url" : "https://api.github.com/users/ysangkok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ysangkok/followers",
         "following_url" : "https://api.github.com/users/ysangkok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ysangkok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ysangkok",
         "id" : 284023,
         "login" : "ysangkok",
         "node_id" : "MDQ6VXNlcjI4NDAyMw==",
         "organizations_url" : "https://api.github.com/users/ysangkok/orgs",
         "received_events_url" : "https://api.github.com/users/ysangkok/received_events",
         "repos_url" : "https://api.github.com/users/ysangkok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ysangkok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ysangkok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ysangkok"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523269815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523269815"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Probably shouldn't use the word \"legacy\" (at least user-facing) while it isn't actually legacy yet.",
      "commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "created_at" : "2020-11-13T22:39:59Z",
      "diff_hunk" : "@@ -41,7 +41,7 @@ Optional dependencies:\n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n  miniupnpc   | UPnP Support     | Firewall-jumping support\n- libdb4.8    | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+ libdb4.8    | Berkeley DB      | Optional, wallet storage (only needed when wallet enabled)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523269815",
      "id" : 523269815,
      "in_reply_to_id" : 523247602,
      "line" : 44,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2OTgxNQ==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 44,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/build-unix.md",
      "position" : 5,
      "pull_request_review_id" : 530461938,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-13T22:39:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523269815",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-11-17T14:02:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-728948085",
      "id" : 728948085,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyODk0ODA4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-17T14:02:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728948085",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-11-18T10:59:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-729603215",
      "id" : 729603215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyOTYwMzIxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-18T10:59:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729603215",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
