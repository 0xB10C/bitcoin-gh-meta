[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20275 (wallet: List SQLite wallets in non-SQLite builds by ryanofsky)\n* #20243 (rpc, wallet: Expose wallet id in getwalletinfo RPC output by hebasto)\n* #20206 (wallet, refactor: Include headers instead of function declarations by hebasto)\n* #20205 (wallet: Properly support a wallet id by achow101)\n* #20201 (build: pkg-config related cleanup by hebasto)\n* #19833 (wallet: Avoid locking cs_wallet recursively by promag)\n* #19602 (wallet: Migrate legacy wallets to descriptor wallets by achow101)\n* #19137 (wallettool: Add dump and createfromdump commands by achow101)\n* #18608 (refactor: Remove CAddressBookData::destdata by ryanofsky)\n* #18077 (net: Add NAT-PMP port forwarding support by hebasto)\n* #16546 (External signer support - Wallet Box edition by Sjors)\n* #15068 (Install icon & .desktop file to XDG data by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-10-30T01:15:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-719111613",
      "id" : 719111613,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTExMTYxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T00:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719111613",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515261141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515261141"
         }
      },
      "author_association" : "NONE",
      "body" : "I'm having trouble figuring out the logic here. Is there a more clear and concise way to determine `descriptors`?",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T17:28:54Z",
      "diff_hunk" : "@@ -808,3 +833,23 @@ def is_wallet_tool_compiled(self):\n     def is_zmq_compiled(self):\n         \"\"\"Checks whether the zmq module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_ZMQ\")\n+\n+    def is_sqlite_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def is_bdb_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_BDB\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:\n+            descriptors = True\n+        elif self.is_bdb_compiled() and not self.is_sqlite_compiled() and descriptors:\n+            descriptors = False\n+        return descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515261141",
      "id" : 515261141,
      "line" : 855,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2MTE0MQ==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 855,
      "original_position" : 83,
      "original_start_line" : 850,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 83,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 850,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515261141",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515262567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515262567"
         }
      },
      "author_association" : "NONE",
      "body" : "Are you able to use `self. get_use_descriptors()` here? To me it seems like logic might be getting duplicated",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T17:30:44Z",
      "diff_hunk" : "@@ -767,8 +777,23 @@ def skip_if_no_bitcoind_zmq(self):\n \n     def skip_if_no_wallet(self):\n         \"\"\"Skip the running test if wallet has not been compiled.\"\"\"\n+        self.requires_wallet = True\n         if not self.is_wallet_compiled():\n             raise SkipTest(\"wallet has not been compiled.\")\n+        if self.options.descriptors:\n+            self.skip_if_no_sqlite()\n+        else:\n+            self.skip_if_no_bdb()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515262567",
      "id" : 515262567,
      "line" : 786,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2MjU2Nw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 786,
      "original_position" : 46,
      "original_start_line" : 783,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 46,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 783,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515262567",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515268074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515268074"
         }
      },
      "author_association" : "NONE",
      "body" : "nit: in places like these would  `err_code = -4 if self.options.descriptors else -1` be easier to follow?",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T17:35:11Z",
      "diff_hunk" : "@@ -101,20 +101,31 @@ def wallet_file(name):\n         #   sub/w5     - to verify relative wallet path is created correctly\n         #   extern/w6  - to verify absolute wallet path is created correctly\n         #   w7_symlink - to verify symlinked wallet path is initialized correctly\n-        #   w8         - to verify existing wallet file is loaded correctly\n+        #   w8         - to verify existing wallet file is loaded correctly. Not tested for SQLite wallets as this is a deprecated BDB behavior.\n         #   ''         - to verify default wallet file is created correctly\n-        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', self.default_wallet_name]\n+        to_create = ['w1', 'w2', 'w3', 'w', 'sub/w5', 'w7_symlink']\n+        in_wallet_dir = to_create.copy() # Wallets in the wallet dir\n+        in_wallet_dir.append('w7') # w7 is not loaded or created, but will be listed by listwalletdir because w7_symlink\n+        to_create.append(os.path.join(self.options.tmpdir, 'extern/w6')) # External, not in the wallet dir, so we need to avoid adding it to in_wallet_dir\n+        to_load = [self.default_wallet_name]\n+        if not self.options.descriptors:\n+            to_load.append('w8')\n+        wallet_names = to_create + to_load # Wallet names loaded in the wallet\n+        in_wallet_dir += to_load # The loaded wallets are also in the wallet dir\n         self.start_node(0)\n-        for wallet_name in wallet_names[:-2]:\n-            self.nodes[0].createwallet(wallet_name, descriptors=False)\n-        for wallet_name in wallet_names[-2:]:\n+        for wallet_name in to_create:\n+            self.nodes[0].createwallet(wallet_name)\n+        for wallet_name in to_load:\n             self.nodes[0].loadwallet(wallet_name)\n-        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), [self.default_wallet_name, os.path.join('sub', 'w5'), 'w', 'w1', 'w2', 'w3', 'w7', 'w7_symlink', 'w8'])\n+        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), sorted(in_wallet_dir))\n \n         assert_equal(set(node.listwallets()), set(wallet_names))\n \n         # should raise rpc error if wallet path can't be created\n-        assert_raises_rpc_error(-1, \"boost::filesystem::create_directory:\", self.nodes[0].createwallet, \"w8/bad\", descriptors=False)\n+        err_code = -1\n+        if self.options.descriptors:\n+            err_code = -4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515268074",
      "id" : 515268074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2ODA3NA==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 127,
      "original_position" : 45,
      "original_start_line" : 125,
      "path" : "test/functional/wallet_multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515268074",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515274175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515274175"
         }
      },
      "author_association" : "NONE",
      "body" : "It seems like usually you're doing: `#ifdef USE_BDB ... #elif USE_SQLITE`, but here you're doing  `#ifdef USE_BDB ... #ifdef USE_SQLITE`\r\n\r\nShould this be consistent, or does it matter? I'm guessing `USE_BDB` and `USE_SQLITE` can never both be set?",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T17:44:14Z",
      "diff_hunk" : "@@ -1011,9 +1013,11 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n \n     Optional<DatabaseFormat> format;\n     if (exists) {\n+#ifdef USE_BDB\n         if (ExistsBerkeleyDatabase(path)) {\n             format = DatabaseFormat::BERKELEY;\n         }\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515274175",
      "id" : 515274175,
      "line" : 1021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3NDE3NQ==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 1021,
      "original_position" : 19,
      "original_start_line" : 1016,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 19,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 1016,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515274175",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515275934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515275934"
         }
      },
      "author_association" : "NONE",
      "body" : "same, should it be `#elif USE_SQLITE` here?",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T17:46:52Z",
      "diff_hunk" : "@@ -14,7 +14,9 @@\n #include <util/system.h>\n #include <util/time.h>\n #include <util/translation.h>\n+#ifdef USE_BDB\n #include <wallet/bdb.h>\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515275934",
      "id" : 515275934,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3NTkzNA==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 20,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 7,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515275934",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515277183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515277183"
         }
      },
      "author_association" : "NONE",
      "body" : "Can this be condensed to a one-liner: `check_wallet_filelock(self.is_sqlite_compiled())`",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T17:49:07Z",
      "diff_hunk" : "@@ -27,11 +27,20 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error(extra_args=['-datadir={}'.format(self.nodes[0].datadir), '-noserver'], expected_msg=expected_msg)\n \n         if self.is_wallet_compiled():\n-            self.nodes[0].createwallet(self.default_wallet_name)\n-            wallet_dir = os.path.join(datadir, 'wallets')\n-            self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n-            expected_msg = \"Error: Error initializing wallet database environment\"\n-            self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+            def check_wallet_filelock(descriptors):\n+                self.nodes[0].createwallet(wallet_name=self.default_wallet_name, descriptors=descriptors)\n+                wallet_dir = os.path.join(datadir, 'wallets')\n+                self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n+                if descriptors:\n+                    expected_msg = \"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+                else:\n+                    expected_msg = \"Error: Error initializing wallet database environment\"\n+                self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+\n+            if self.is_bdb_compiled():\n+                check_wallet_filelock(False)\n+            if self.is_sqlite_compiled():\n+                check_wallet_filelock(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515277183",
      "id" : 515277183,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3NzE4Mw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 46,
      "original_position" : 22,
      "original_start_line" : 40,
      "path" : "test/functional/feature_filelock.py",
      "position" : 32,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 43,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515277183",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303197"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303197"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, `get_use_descriptors()` is used to switch between legacy and descriptors for the tests where the type is not explicitly being set. This is different from the wallet tests (that will call this `skip_if_no_wallet()`) which are testing specific descriptor and legacy behavior.",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T18:34:47Z",
      "diff_hunk" : "@@ -767,8 +777,23 @@ def skip_if_no_bitcoind_zmq(self):\n \n     def skip_if_no_wallet(self):\n         \"\"\"Skip the running test if wallet has not been compiled.\"\"\"\n+        self.requires_wallet = True\n         if not self.is_wallet_compiled():\n             raise SkipTest(\"wallet has not been compiled.\")\n+        if self.options.descriptors:\n+            self.skip_if_no_sqlite()\n+        else:\n+            self.skip_if_no_bdb()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303197",
      "id" : 515303197,
      "in_reply_to_id" : 515262567,
      "line" : 786,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzE5Nw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 786,
      "original_position" : 46,
      "original_start_line" : 783,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 46,
      "pull_request_review_id" : 520937226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 783,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303197",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303762"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not really.\r\n\r\nThe purpose of this function is to enable or disable features depending on whether support is compiled and the current settings, for those tests where the descriptors setting is not important to the test and only need to just work.",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T18:35:49Z",
      "diff_hunk" : "@@ -808,3 +833,23 @@ def is_wallet_tool_compiled(self):\n     def is_zmq_compiled(self):\n         \"\"\"Checks whether the zmq module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_ZMQ\")\n+\n+    def is_sqlite_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def is_bdb_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_BDB\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:\n+            descriptors = True\n+        elif self.is_bdb_compiled() and not self.is_sqlite_compiled() and descriptors:\n+            descriptors = False\n+        return descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303762",
      "id" : 515303762,
      "in_reply_to_id" : 515261141,
      "line" : 855,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzc2Mg==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 855,
      "original_position" : 83,
      "original_start_line" : 850,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 83,
      "pull_request_review_id" : 520937940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 850,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303762",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515305897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515305897"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, it's supposed to `#ifdef ... #ifdef` because both `USE_BDB` and `USE_SQLITE` can both be set, and in fact, is the default.\r\n\r\nThe instances where `#ifdef...#elif` is used is only because one wallet type must be defaulted to, and for now, we default to BDB.",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T18:40:16Z",
      "diff_hunk" : "@@ -1011,9 +1013,11 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n \n     Optional<DatabaseFormat> format;\n     if (exists) {\n+#ifdef USE_BDB\n         if (ExistsBerkeleyDatabase(path)) {\n             format = DatabaseFormat::BERKELEY;\n         }\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515305897",
      "id" : 515305897,
      "in_reply_to_id" : 515274175,
      "line" : 1021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNTg5Nw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 1021,
      "original_position" : 19,
      "original_start_line" : 1016,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 19,
      "pull_request_review_id" : 520940887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 1016,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515305897",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306142"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306142"
         }
      },
      "author_association" : "MEMBER",
      "body" : "When both are compiled, we want to test both cases.",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T18:40:49Z",
      "diff_hunk" : "@@ -27,11 +27,20 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error(extra_args=['-datadir={}'.format(self.nodes[0].datadir), '-noserver'], expected_msg=expected_msg)\n \n         if self.is_wallet_compiled():\n-            self.nodes[0].createwallet(self.default_wallet_name)\n-            wallet_dir = os.path.join(datadir, 'wallets')\n-            self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n-            expected_msg = \"Error: Error initializing wallet database environment\"\n-            self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+            def check_wallet_filelock(descriptors):\n+                self.nodes[0].createwallet(wallet_name=self.default_wallet_name, descriptors=descriptors)\n+                wallet_dir = os.path.join(datadir, 'wallets')\n+                self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n+                if descriptors:\n+                    expected_msg = \"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+                else:\n+                    expected_msg = \"Error: Error initializing wallet database environment\"\n+                self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+\n+            if self.is_bdb_compiled():\n+                check_wallet_filelock(False)\n+            if self.is_sqlite_compiled():\n+                check_wallet_filelock(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306142",
      "id" : 515306142,
      "in_reply_to_id" : 515277183,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNjE0Mg==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 46,
      "original_position" : 22,
      "original_start_line" : 40,
      "path" : "test/functional/feature_filelock.py",
      "position" : 32,
      "pull_request_review_id" : 520941204,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 43,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306142",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306249"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, if both are compiled, then we need both headers.",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T18:41:04Z",
      "diff_hunk" : "@@ -14,7 +14,9 @@\n #include <util/system.h>\n #include <util/time.h>\n #include <util/translation.h>\n+#ifdef USE_BDB\n #include <wallet/bdb.h>\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306249",
      "id" : 515306249,
      "in_reply_to_id" : 515275934,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNjI0OQ==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 20,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 7,
      "pull_request_review_id" : 520941356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306249",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306633"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306633"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in upstream PR #18788",
      "commit_id" : "a9400867a7a554ab2ea7bfe3d333238e39a224ea",
      "created_at" : "2020-10-30T18:41:49Z",
      "diff_hunk" : "@@ -101,20 +101,31 @@ def wallet_file(name):\n         #   sub/w5     - to verify relative wallet path is created correctly\n         #   extern/w6  - to verify absolute wallet path is created correctly\n         #   w7_symlink - to verify symlinked wallet path is initialized correctly\n-        #   w8         - to verify existing wallet file is loaded correctly\n+        #   w8         - to verify existing wallet file is loaded correctly. Not tested for SQLite wallets as this is a deprecated BDB behavior.\n         #   ''         - to verify default wallet file is created correctly\n-        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', self.default_wallet_name]\n+        to_create = ['w1', 'w2', 'w3', 'w', 'sub/w5', 'w7_symlink']\n+        in_wallet_dir = to_create.copy() # Wallets in the wallet dir\n+        in_wallet_dir.append('w7') # w7 is not loaded or created, but will be listed by listwalletdir because w7_symlink\n+        to_create.append(os.path.join(self.options.tmpdir, 'extern/w6')) # External, not in the wallet dir, so we need to avoid adding it to in_wallet_dir\n+        to_load = [self.default_wallet_name]\n+        if not self.options.descriptors:\n+            to_load.append('w8')\n+        wallet_names = to_create + to_load # Wallet names loaded in the wallet\n+        in_wallet_dir += to_load # The loaded wallets are also in the wallet dir\n         self.start_node(0)\n-        for wallet_name in wallet_names[:-2]:\n-            self.nodes[0].createwallet(wallet_name, descriptors=False)\n-        for wallet_name in wallet_names[-2:]:\n+        for wallet_name in to_create:\n+            self.nodes[0].createwallet(wallet_name)\n+        for wallet_name in to_load:\n             self.nodes[0].loadwallet(wallet_name)\n-        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), [self.default_wallet_name, os.path.join('sub', 'w5'), 'w', 'w1', 'w2', 'w3', 'w7', 'w7_symlink', 'w8'])\n+        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), sorted(in_wallet_dir))\n \n         assert_equal(set(node.listwallets()), set(wallet_names))\n \n         # should raise rpc error if wallet path can't be created\n-        assert_raises_rpc_error(-1, \"boost::filesystem::create_directory:\", self.nodes[0].createwallet, \"w8/bad\", descriptors=False)\n+        err_code = -1\n+        if self.options.descriptors:\n+            err_code = -4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306633",
      "id" : 515306633,
      "in_reply_to_id" : 515268074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNjYzMw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 127,
      "original_position" : 45,
      "original_start_line" : 125,
      "path" : "test/functional/wallet_multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 520941797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-30T18:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306633",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\nlibbitcoin_wallet.lib(wallet_walletutil.obj) : error LNK2001: unresolved external symbol \"bool __cdecl ExistsSQLiteDatabase(class boost::filesystem::path const &)\" (?ExistsSQLiteDatabase@@YA_NAEBVpath@filesystem@boost@@@Z) [C:\\projects\\bitcoin\\build_msvc\\bench_bitcoin\\bench_bitcoin.vcxproj]\r\n```\r\n\r\n```\r\nThe subject line of commit hash 8ea48f202d800895abea798385ac0e67f7f3034d is followed by a non-empty line. Subject lines should always be followed by a blank line.\r\n\r\n^---- failure generated from test/lint/lint-git-commit-check.sh",
      "created_at" : "2020-11-04T07:52:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721570837",
      "id" : 721570837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTU3MDgzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T07:52:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721570837",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the linter error.\r\n\r\nI'm not sure what is causing the appveyor failure, nor how to fix it.",
      "created_at" : "2020-11-04T17:36:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721873303",
      "id" : 721873303,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTg3MzMwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T17:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721873303",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]
