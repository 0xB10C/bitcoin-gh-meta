[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20272#discussion_r515215137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20272"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515215137"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The wallet shouldn't know and care about validation locks. Also, this only silences a warning, it won't and can't ever be checked upstream in the call graph",
      "commit_id" : "7def9855a97ab6b142c90dd60f9ca0bb756dec36",
      "created_at" : "2020-10-30T16:15:39Z",
      "diff_hunk" : "@@ -2878,7 +2895,8 @@ static RPCHelpMan listunspent()\n             + HelpExampleCli(\"listunspent\", \"6 9999999 '[]' true '{ \\\"minimumAmount\\\": 0.005 }'\")\n             + HelpExampleRpc(\"listunspent\", \"6, 9999999, [] , true, { \\\"minimumAmount\\\": 0.005 } \")\n                 },\n-        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request)\n+            EXCLUSIVE_LOCKS_REQUIRED(!cs_main) -> UniValue",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20272#discussion_r515215137",
      "id" : 515215137,
      "line" : 2899,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxNTEzNw==",
      "original_commit_id" : "7def9855a97ab6b142c90dd60f9ca0bb756dec36",
      "original_line" : 2899,
      "original_position" : 176,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 176,
      "pull_request_review_id" : 520824413,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20272",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T16:16:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515215137",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If those warnings are not fixed, then the thread safety annotations are pretty useless. Why? Because right now:\r\n\r\n1. The build is broken with `--enable-werror`, so people with recent clang cannot use that.\r\n\r\n2. Without `--enable-werror` it will compile but will produce 33 thread safety warnings. If a new one is introduced and they become 34 it will almost surely remain unnoticed.\r\n\r\nHere is a list of all warnings:\r\n```\r\n/home/vd/gh/bitcoin/bitcoin/src/net_processing.cpp:2724:13: warning: calling function 'ProcessGetData' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n            ProcessGetData(pfrom, *peer, m_chainparams, m_connman, m_mempool, interruptMsgProc);\r\n            ^\r\n/home/vd/gh/bitcoin/bitcoin/src/net_processing.cpp:3798:13: warning: calling function 'ProcessGetData' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n            ProcessGetData(*pfrom, *peer, m_chainparams, m_connman, m_mempool, interruptMsgProc);\r\n            ^\r\n2 warnings generated.\r\n/home/vd/gh/bitcoin/bitcoin/src/validationinterface.cpp:162:5: warning: calling function 'AssertLockNotHeldInternal<AnnotatedMixin<std::__1::recursive_mutex>>' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    AssertLockNotHeld(cs_main);\r\n    ^\r\n/home/vd/gh/bitcoin/bitcoin/src/sync.h:80:31: note: expanded from macro 'AssertLockNotHeld'\r\n#define AssertLockNotHeld(cs) AssertLockNotHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                              ^\r\n/home/vd/gh/bitcoin/bitcoin/src/validation.cpp:2861:5: warning: calling function 'AssertLockNotHeldInternal<AnnotatedMixin<std::__1::recursive_mutex>>' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    AssertLockNotHeld(cs_main);\r\n    ^\r\n/home/vd/gh/bitcoin/bitcoin/src/sync.h:80:31: note: expanded from macro 'AssertLockNotHeld'\r\n#define AssertLockNotHeld(cs) AssertLockNotHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                              ^\r\n/home/vd/gh/bitcoin/bitcoin/src/validation.cpp:2873:5: warning: calling function 'AssertLockNotHeldInternal<AnnotatedMixin<std::__1::recursive_mutex>>' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    AssertLockNotHeld(cs_main);\r\n    ^\r\n/home/vd/gh/bitcoin/bitcoin/src/sync.h:80:31: note: expanded from macro 'AssertLockNotHeld'\r\n#define AssertLockNotHeld(cs) AssertLockNotHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                              ^\r\n/home/vd/gh/bitcoin/bitcoin/src/validation.cpp:3714:5: warning: calling function 'AssertLockNotHeldInternal<AnnotatedMixin<std::__1::recursive_mutex>>' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    AssertLockNotHeld(cs_main);\r\n    ^\r\n/home/vd/gh/bitcoin/bitcoin/src/sync.h:80:31: note: expanded from macro 'AssertLockNotHeld'\r\n#define AssertLockNotHeld(cs) AssertLockNotHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                              ^\r\n/home/vd/gh/bitcoin/bitcoin/src/validation.cpp:3843:5: warning: calling function 'AssertLockNotHeldInternal<AnnotatedMixin<std::__1::recursive_mutex>>' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    AssertLockNotHeld(cs_main);\r\n    ^\r\n/home/vd/gh/bitcoin/bitcoin/src/sync.h:80:31: note: expanded from macro 'AssertLockNotHeld'\r\n#define AssertLockNotHeld(cs) AssertLockNotHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                              ^\r\n1 warning generated.\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/bdb.cpp:428:5: warning: calling function 'AssertLockNotHeldInternal<AnnotatedMixin<std::__1::recursive_mutex>>' requires negative capability '!cs_db' [-Wthread-safety-analysis]\r\n    AssertLockNotHeld(cs_db);\r\n    ^\r\n/home/vd/gh/bitcoin/bitcoin/src/sync.h:80:31: note: expanded from macro 'AssertLockNotHeld'\r\n#define AssertLockNotHeld(cs) AssertLockNotHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                              ^\r\n1 warning generated.\r\n4 warnings generated.\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcdump.cpp:746:12: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    wallet.BlockUntilSyncedToCurrentChain();\r\n           ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:478:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:557:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:718:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:757:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:798:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:838:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:908:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:1224:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:1267:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:1448:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:1566:12: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    wallet.BlockUntilSyncedToCurrentChain();\r\n           ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:1708:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:1782:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:1821:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:2172:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:2382:12: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    wallet.BlockUntilSyncedToCurrentChain();\r\n           ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:2458:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:2953:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:3051:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n/home/vd/gh/bitcoin/bitcoin/src/wallet/rpcwallet.cpp:3486:14: warning: calling function 'BlockUntilSyncedToCurrentChain' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    pwallet->BlockUntilSyncedToCurrentChain();\r\n             ^\r\n1 warning generated.\r\n20 warnings generated.\r\n/home/vd/gh/bitcoin/bitcoin/src/index/base.cpp:273:5: warning: calling function 'AssertLockNotHeldInternal<AnnotatedMixin<std::__1::recursive_mutex>>' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    AssertLockNotHeld(cs_main);\r\n    ^\r\n/home/vd/gh/bitcoin/bitcoin/src/sync.h:80:31: note: expanded from macro 'AssertLockNotHeld'\r\n#define AssertLockNotHeld(cs) AssertLockNotHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                              ^\r\n1 warning generated.\r\n/home/vd/gh/bitcoin/bitcoin/src/rpc/blockchain.cpp:121:5: warning: calling function 'AssertLockNotHeldInternal<AnnotatedMixin<std::__1::recursive_mutex>>' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    AssertLockNotHeld(cs_main); // For performance reasons\r\n    ^\r\n/home/vd/gh/bitcoin/bitcoin/src/sync.h:80:31: note: expanded from macro 'AssertLockNotHeld'\r\n#define AssertLockNotHeld(cs) AssertLockNotHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                              ^\r\n/home/vd/gh/bitcoin/bitcoin/src/rpc/blockchain.cpp:150:5: warning: calling function 'AssertLockNotHeldInternal<AnnotatedMixin<std::__1::recursive_mutex>>' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    AssertLockNotHeld(cs_main); // For performance reasons\r\n    ^\r\n/home/vd/gh/bitcoin/bitcoin/src/sync.h:80:31: note: expanded from macro 'AssertLockNotHeld'\r\n#define AssertLockNotHeld(cs) AssertLockNotHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                              ^\r\n2 warnings generated.\r\n/home/vd/gh/bitcoin/bitcoin/src/rpc/rawtransaction.cpp:864:5: warning: calling function 'AssertLockNotHeldInternal<AnnotatedMixin<std::__1::recursive_mutex>>' requires negative capability '!cs_main' [-Wthread-safety-analysis]\r\n    AssertLockNotHeld(cs_main);\r\n    ^\r\n/home/vd/gh/bitcoin/bitcoin/src/sync.h:80:31: note: expanded from macro 'AssertLockNotHeld'\r\n#define AssertLockNotHeld(cs) AssertLockNotHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                              ^\r\n1 warning generated.\r\n```",
      "created_at" : "2020-10-30T16:50:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719668677",
      "id" : 719668677,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20272",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTY2ODY3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-30T16:50:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719668677",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "[Clang 12 documentation](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#negative-capabilities):\r\n> Negative requirements are an experimental feature which is off by default, because it will produce many warnings in existing code. It can be enabled by passing `-Wthread-safety-negative`.\r\n\r\nIs `-Wthread-safety-negative` on by default in Clang 12 for you?",
      "created_at" : "2020-10-30T16:52:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719669860",
      "id" : 719669860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20272",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTY2OTg2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-30T16:54:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719669860",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20272#discussion_r515237942"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20272"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515237942"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would `NO_THREAD_SAFETY_ANALYSIS` be better?\r\n\r\nThe purpose of this PR is to only silence the warnings.",
      "commit_id" : "7def9855a97ab6b142c90dd60f9ca0bb756dec36",
      "created_at" : "2020-10-30T16:52:52Z",
      "diff_hunk" : "@@ -2878,7 +2895,8 @@ static RPCHelpMan listunspent()\n             + HelpExampleCli(\"listunspent\", \"6 9999999 '[]' true '{ \\\"minimumAmount\\\": 0.005 }'\")\n             + HelpExampleRpc(\"listunspent\", \"6, 9999999, [] , true, { \\\"minimumAmount\\\": 0.005 } \")\n                 },\n-        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request)\n+            EXCLUSIVE_LOCKS_REQUIRED(!cs_main) -> UniValue",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20272#discussion_r515237942",
      "id" : 515237942,
      "in_reply_to_id" : 515215137,
      "line" : 2899,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNzk0Mg==",
      "original_commit_id" : "7def9855a97ab6b142c90dd60f9ca0bb756dec36",
      "original_line" : 2899,
      "original_position" : 176,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 176,
      "pull_request_review_id" : 520854870,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20272",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T16:52:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515237942",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "My assumption when I merged the negative annotations was that `-Wthread-safety-negative` is turned off. If clang 12 enables that, it should be disabled explicitly.",
      "created_at" : "2020-10-30T16:58:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719673099",
      "id" : 719673099,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20272",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTY3MzA5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-30T16:58:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719673099",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The warnings above end in `... [-Wthread-safety-analysis]` which means that they are due to `-Wthread-safety-analysis`, not due to `-Wthread-safety-negative`. `-Wno-thread-safety-negative` does not silence them.\r\n\r\nThe current clang version I am using is `llvm-devel-12.0.d20201027` (that is the name of the FreeBSD package). The previous one `llvm-devel-12.0.d20200925` does not produce the warnings. So they are indeed due to some recent change in Clang 12.",
      "created_at" : "2020-10-30T17:23:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719687750",
      "id" : 719687750,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20272",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTY4Nzc1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-30T17:23:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719687750",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20250 (Bugfix: RPC/Wallet: Make BTC/kB and sat/B fee modes work sanely by luke-jr)\n* #20220 (wallet, rpc: explicit fee rate follow-ups for 0.21 by jonatack)\n* #20017 (rpc: Add RPCContext by promag)\n* #19983 (Drop some TSan suppressions by hebasto)\n* #19982 (test: Fix inconsistent lock order in wallet_tests/CreateWalletFromFile by hebasto)\n* #19064 (refactor: Cleanup thread ctor calls by hebasto)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n* #15719 (Wallet passive startup by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-10-31T00:04:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719851172",
      "id" : 719851172,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20272",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTg1MTE3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-31T00:04:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719851172",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
