[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nIn 606622195fdf6a1fb6adc41d1091ce2ae7501125 commit message:\r\n> \"Remove circular dependencies between wallet translation units\"\r\n\r\nWhat are those dependencies?",
      "created_at" : "2020-10-30T21:34:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-719810438",
      "id" : 719810438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTgxMDQzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-30T21:34:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719810438",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> What are those dependencies?\r\n\r\nOh, I think I need to drop that comment. The dependency I was thinking of was `walletutil.cpp` depending on `bdb.cpp` for `ExistsBerkeleyDatabase`, and `bdb.cpp` depending on `walletutil.cpp` for `SplitWalletPath`. And I thought there were others. But actually `SplitWalletPath` is in `db.cpp` not `walletutil.cpp`, and now I don't think there are other dependencies.",
      "created_at" : "2020-10-30T21:47:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-719815071",
      "id" : 719815071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTgxNTA3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-30T21:47:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719815071",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20267 (Disable and fix tests for when BDB is not compiled by achow101)\n* #20206 (wallet, refactor: Include headers instead of function declarations by hebasto)\n* #20202 (wallet: Make BDB support optional by achow101)\n* #18836 (wallet: upgradewallet fixes and additional tests by achow101)\n* #18095 (Fix crashes and infinite loop in ListWalletDir() by uhliksk)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-10-30T23:58:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-719849943",
      "id" : 719849943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTg0OTk0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-02T21:43:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719849943",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515641690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515641690"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9d1fd52952cb6a944e7de4dd7fca241e3341894b\r\n\r\nAs a next step it would be nice to refactor this and `MakeWalletDatabase` to avoid duplicate code. Something like:\r\n```cpp\r\nDatabaseStatus CheckWalletDatabase(const fs::path& path);\r\nDatabaseStatus CheckWalletDatabase(const std::string& name)\r\n{\r\n    return CheckWalletDatabase(fs::absolute(name, GetWalletDir()));\r\n}\r\n```\r\nWhich would be called in both places.",
      "commit_id" : "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
      "created_at" : "2020-11-01T16:23:34Z",
      "diff_hunk" : "@@ -34,10 +27,10 @@ std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n         const fs::path path = it->path().string().substr(offset);\n \n         if (it->status().type() == fs::directory_file &&\n-            (ExistsBerkeleyDatabase(it->path()) || ExistsSQLiteDatabase(it->path()))) {\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515641690",
      "id" : 515641690,
      "line" : 30,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0MTY5MA==",
      "original_commit_id" : "9d1fd52952cb6a944e7de4dd7fca241e3341894b",
      "original_line" : 30,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : 30,
      "pull_request_review_id" : 521239205,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-01T16:23:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515641690",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515672776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515672776"
         }
      },
      "author_association" : "NONE",
      "body" : "Is it worth breaking this into a function so `IsSQLiteFile` can re-use this as well? With `minSize` is as parameter",
      "commit_id" : "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
      "created_at" : "2020-11-01T21:13:44Z",
      "diff_hunk" : "@@ -3,23 +3,125 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparams.h>\n #include <fs.h>\n+#include <logging.h>\n #include <wallet/db.h>\n \n #include <string>\n \n-void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::string& database_filename)\n+std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n {\n-    if (fs::is_regular_file(wallet_path)) {\n+    const size_t offset = wallet_dir.string().size() + 1;\n+    std::vector<fs::path> paths;\n+    boost::system::error_code ec;\n+\n+    for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n+        if (ec) {\n+            LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n+            continue;\n+        }\n+\n+        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+        const fs::path path = it->path().string().substr(offset);\n+\n+        if (it->status().type() == fs::directory_file &&\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {\n+            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+            paths.emplace_back(path);\n+        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBDBFile(it->path())) {\n+            if (it->path().filename() == \"wallet.dat\") {\n+                // Found top-level wallet.dat btree file, add top level directory \"\"\n+                // as a wallet.\n+                paths.emplace_back();\n+            } else {\n+                // Found top-level btree file not called wallet.dat. Current bitcoin\n+                // software will never create these files but will allow them to be\n+                // opened in a shared database environment for backwards compatibility.\n+                // Add it to the list of available wallets.\n+                paths.emplace_back(path);\n+            }\n+        }\n+    }\n+\n+    return paths;\n+}\n+\n+fs::path BDBDataFile(const fs::path& path)\n+{\n+    if (fs::is_regular_file(path)) {\n         // Special case for backwards compatibility: if wallet path points to an\n         // existing file, treat it as the path to a BDB data file in a parent\n         // directory that also contains BDB log files.\n-        env_directory = wallet_path.parent_path();\n-        database_filename = wallet_path.filename().string();\n+        return path;\n     } else {\n         // Normal case: Interpret wallet path as a directory path containing\n         // data and log files.\n-        env_directory = wallet_path;\n-        database_filename = \"wallet.dat\";\n+        return path / \"wallet.dat\";\n     }\n }\n+\n+fs::path SQLiteDataFile(const fs::path& path)\n+{\n+    return path / \"wallet.dat\";\n+}\n+\n+bool IsBDBFile(const fs::path& path)\n+{\n+    if (!fs::exists(path)) return false;\n+\n+    // A Berkeley DB Btree file has at least 4K.\n+    // This check also prevents opening lock files.\n+    boost::system::error_code ec;\n+    auto size = fs::file_size(path, ec);\n+    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), path.string());\n+    if (size < 4096) return false;\n+\n+    fsbridge::ifstream file(path, std::ios::binary);\n+    if (!file.is_open()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515672776",
      "id" : 515672776,
      "line" : 82,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3Mjc3Ng==",
      "original_commit_id" : "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
      "original_line" : 82,
      "original_position" : 86,
      "original_start_line" : 72,
      "path" : "src/wallet/db.cpp",
      "position" : 86,
      "pull_request_review_id" : 521261730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
      "side" : "RIGHT",
      "start_line" : 72,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-01T21:13:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515672776",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515673173"
         }
      },
      "author_association" : "NONE",
      "body" : "Is this check necessary?",
      "commit_id" : "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
      "created_at" : "2020-11-01T21:17:40Z",
      "diff_hunk" : "@@ -3,23 +3,125 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparams.h>\n #include <fs.h>\n+#include <logging.h>\n #include <wallet/db.h>\n \n #include <string>\n \n-void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::string& database_filename)\n+std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n {\n-    if (fs::is_regular_file(wallet_path)) {\n+    const size_t offset = wallet_dir.string().size() + 1;\n+    std::vector<fs::path> paths;\n+    boost::system::error_code ec;\n+\n+    for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n+        if (ec) {\n+            LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n+            continue;\n+        }\n+\n+        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+        const fs::path path = it->path().string().substr(offset);\n+\n+        if (it->status().type() == fs::directory_file &&\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {\n+            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+            paths.emplace_back(path);\n+        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBDBFile(it->path())) {\n+            if (it->path().filename() == \"wallet.dat\") {\n+                // Found top-level wallet.dat btree file, add top level directory \"\"\n+                // as a wallet.\n+                paths.emplace_back();\n+            } else {\n+                // Found top-level btree file not called wallet.dat. Current bitcoin\n+                // software will never create these files but will allow them to be\n+                // opened in a shared database environment for backwards compatibility.\n+                // Add it to the list of available wallets.\n+                paths.emplace_back(path);\n+            }\n+        }\n+    }\n+\n+    return paths;\n+}\n+\n+fs::path BDBDataFile(const fs::path& path)\n+{\n+    if (fs::is_regular_file(path)) {\n         // Special case for backwards compatibility: if wallet path points to an\n         // existing file, treat it as the path to a BDB data file in a parent\n         // directory that also contains BDB log files.\n-        env_directory = wallet_path.parent_path();\n-        database_filename = wallet_path.filename().string();\n+        return path;\n     } else {\n         // Normal case: Interpret wallet path as a directory path containing\n         // data and log files.\n-        env_directory = wallet_path;\n-        database_filename = \"wallet.dat\";\n+        return path / \"wallet.dat\";\n     }\n }\n+\n+fs::path SQLiteDataFile(const fs::path& path)\n+{\n+    return path / \"wallet.dat\";\n+}\n+\n+bool IsBDBFile(const fs::path& path)\n+{\n+    if (!fs::exists(path)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673173",
      "id" : 515673173,
      "line" : 72,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3MzE3Mw==",
      "original_commit_id" : "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
      "original_line" : 72,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : 76,
      "pull_request_review_id" : 521262102,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-01T21:17:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515673173",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515673267"
         }
      },
      "author_association" : "NONE",
      "body" : "Do you need to close the file?",
      "commit_id" : "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
      "created_at" : "2020-11-01T21:18:49Z",
      "diff_hunk" : "@@ -3,23 +3,125 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparams.h>\n #include <fs.h>\n+#include <logging.h>\n #include <wallet/db.h>\n \n #include <string>\n \n-void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::string& database_filename)\n+std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n {\n-    if (fs::is_regular_file(wallet_path)) {\n+    const size_t offset = wallet_dir.string().size() + 1;\n+    std::vector<fs::path> paths;\n+    boost::system::error_code ec;\n+\n+    for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n+        if (ec) {\n+            LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n+            continue;\n+        }\n+\n+        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+        const fs::path path = it->path().string().substr(offset);\n+\n+        if (it->status().type() == fs::directory_file &&\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {\n+            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+            paths.emplace_back(path);\n+        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBDBFile(it->path())) {\n+            if (it->path().filename() == \"wallet.dat\") {\n+                // Found top-level wallet.dat btree file, add top level directory \"\"\n+                // as a wallet.\n+                paths.emplace_back();\n+            } else {\n+                // Found top-level btree file not called wallet.dat. Current bitcoin\n+                // software will never create these files but will allow them to be\n+                // opened in a shared database environment for backwards compatibility.\n+                // Add it to the list of available wallets.\n+                paths.emplace_back(path);\n+            }\n+        }\n+    }\n+\n+    return paths;\n+}\n+\n+fs::path BDBDataFile(const fs::path& path)\n+{\n+    if (fs::is_regular_file(path)) {\n         // Special case for backwards compatibility: if wallet path points to an\n         // existing file, treat it as the path to a BDB data file in a parent\n         // directory that also contains BDB log files.\n-        env_directory = wallet_path.parent_path();\n-        database_filename = wallet_path.filename().string();\n+        return path;\n     } else {\n         // Normal case: Interpret wallet path as a directory path containing\n         // data and log files.\n-        env_directory = wallet_path;\n-        database_filename = \"wallet.dat\";\n+        return path / \"wallet.dat\";\n     }\n }\n+\n+fs::path SQLiteDataFile(const fs::path& path)\n+{\n+    return path / \"wallet.dat\";\n+}\n+\n+bool IsBDBFile(const fs::path& path)\n+{\n+    if (!fs::exists(path)) return false;\n+\n+    // A Berkeley DB Btree file has at least 4K.\n+    // This check also prevents opening lock files.\n+    boost::system::error_code ec;\n+    auto size = fs::file_size(path, ec);\n+    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), path.string());\n+    if (size < 4096) return false;\n+\n+    fsbridge::ifstream file(path, std::ios::binary);\n+    if (!file.is_open()) return false;\n+\n+    file.seekg(12, std::ios::beg); // Magic bytes start at offset 12\n+    uint32_t data = 0;\n+    file.read((char*) &data, sizeof(data)); // Read 4 bytes of file to compare against magic",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673267",
      "id" : 515673267,
      "line" : 86,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3MzI2Nw==",
      "original_commit_id" : "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
      "original_line" : 86,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/wallet/db.cpp",
      "position" : 90,
      "pull_request_review_id" : 521262207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-01T21:18:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515673267",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@mjdietzx your questions about the IsBDBFile are good but I think not directly relevant to this PR, which is just moving the IsBDBFile function from one file to another, not changing it at all.\r\n\r\nViewing individual commits https://github.com/bitcoin/bitcoin/pull/20275/commits/ may be clearer than viewing the consolidated diff. Any case, I'll try follow up with answers soon.",
      "created_at" : "2020-11-01T22:46:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720163756",
      "id" : 720163756,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMDE2Mzc1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-01T22:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720163756",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-11-01T22:56:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720164864",
      "id" : 720164864,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMDE2NDg2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-01T22:56:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720164864",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
      "created_at" : "2020-11-02T16:59:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720598128",
      "id" : 720598128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMDU5ODEyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-02T16:59:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720598128",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK e21dc6c05c02a0da18b9af2c0eb1d7996c378541. Tested `listwalletdir` and `loadwallet` with a wallet in `walletdir` and with an external wallet.\r\n\r\nStartup fails if any wallets `-wallet` or settings.json is sqlite.",
      "created_at" : "2020-11-02T18:23:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720644915",
      "id" : 720644915,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMDY0NDkxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-02T18:23:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720644915",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is this for 0.21?",
      "created_at" : "2020-11-04T15:05:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-721785786",
      "id" : 721785786,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTc4NTc4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T15:05:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721785786",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Is this for 0.21?\r\n\r\nI'm not requesting it. I see this mostly as a code cleanup. For users, the only ones who would be affected would be those compiling from scratch and disabling sqlite, or maybe those using gentoo or nixos type packages with build customizations. The effect for these users at worst would be some confusion seeing incomplete wallet listings, or seeing scarier \"Data is not in recognized format\" error in place of \"Build does not support SQLite database format\"",
      "created_at" : "2020-11-04T17:01:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-721853805",
      "id" : 721853805,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTg1MzgwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T17:01:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721853805",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> or seeing scarier \"Data is not in recognized format\"\r\n\r\nThe same error would also happen if the the user attempts to open sqlite wallet with previous versions.",
      "created_at" : "2020-11-04T22:54:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-722018320",
      "id" : 722018320,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMjAxODMyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T22:54:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722018320",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
