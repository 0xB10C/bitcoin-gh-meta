[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20221 (net: compat.h related cleanup by hebasto)\n* #19509 (Per-Peer Message Capture by troygiorshev)\n* #18077 (net: Add NAT-PMP port forwarding support by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-11-03T17:47:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20295#issuecomment-721281373",
      "id" : 721281373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTI4MTM3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-03T17:47:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721281373",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@Sjors Please note that I'm very new to C++ and I'm here only to learn.\r\n\r\nConcept AKN, IMO can also be useful if the user need info about a pruned block.\r\n\r\nNot sure if `getblockfrompeer` should persist the block, maybe just print it. For consistency the interface of `getblock` (verbosity 0, 1, 2) could be reused.\r\nMaybe `getblockfrompeer` could just be a flag of `getblock`.\r\n\r\nAlso, IMO `GetBlockChecked` should notify the user to use `getblockfrompeer` for block that are not on disk.\r\n\r\n**Check if the node is connected**\r\nChecking for connectivity could be done with `connman->GetNodeCount` as in [mining.cpp](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/mining.cpp#L666).\r\n\r\n**Mark the block as in flight**\r\nInstead of mark the block as in flight and persist the block, I would add 2 fields to the public interface of `CNode` the first to notify `ProcessMessage` that a block with a certain hash is  expected, the second to check (in a loop) for the requested block.\r\n\r\n",
      "created_at" : "2020-11-06T18:20:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20295#issuecomment-723228594",
      "id" : 723228594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMzIyODU5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-06T18:20:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723228594",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6207037?v=4",
         "events_url" : "https://api.github.com/users/Fi3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Fi3/followers",
         "following_url" : "https://api.github.com/users/Fi3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Fi3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Fi3",
         "id" : 6207037,
         "login" : "Fi3",
         "node_id" : "MDQ6VXNlcjYyMDcwMzc=",
         "organizations_url" : "https://api.github.com/users/Fi3/orgs",
         "received_events_url" : "https://api.github.com/users/Fi3/received_events",
         "repos_url" : "https://api.github.com/users/Fi3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Fi3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Fi3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Fi3"
      }
   }
]
