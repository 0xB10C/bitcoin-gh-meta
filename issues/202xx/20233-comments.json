[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20233#discussion_r511200283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511200283"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: other cases line break after banman",
      "commit_id" : "3260674b381bc7d46a73775536e7caaab2480ea2",
      "created_at" : "2020-10-23T23:50:50Z",
      "diff_hunk" : "@@ -172,7 +172,9 @@ TestingSetup::TestingSetup(const std::string& chainName, const std::vector<const\n \n     m_node.banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n     m_node.connman = MakeUnique<CConnman>(0x1337, 0x1337, *m_node.addrman); // Deterministic randomness for tests.\n-    m_node.peerman = MakeUnique<PeerManager>(chainparams, *m_node.connman, m_node.banman.get(), *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n+    m_node.peerman = MakeUnique<PeerManager>(chainparams, *m_node.connman, *m_node.addrman,\n+                                             m_node.banman.get(), *m_node.scheduler, *m_node.chainman,\n+                                             *m_node.mempool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#discussion_r511200283",
      "id" : 511200283,
      "line" : 177,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTIwMDI4Mw==",
      "original_commit_id" : "b155d8aeda0775275aa184ba6080fc32c5395de9",
      "original_line" : 177,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : 26,
      "pull_request_review_id" : 516115087,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20233",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-25T10:00:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511200283",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20228 (addrman: Make addrman a top-level component by jnewbery)\n* #20217 (net: Remove g_relay_txes by jnewbery)\n* #20187 (Addrman: test-before-evict bugfix and improvements for block-relay-only peers by sdaftuar)\n* #20158 (tree-wide: De-globalize ChainstateManager by dongcarl)\n* #18766 (Disable fee estimation in blocksonly mode (by removing the fee estimates global) by darosior)\n* #18731 (refactor: Make CCheckQueue RAII-styled by hebasto)\n* #18354 (Use shared pointers only in validation interface by bvbfan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-10-24T08:59:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-715884174",
      "id" : 715884174,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNTg4NDE3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-02T21:58:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/715884174",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nShould we run with `-checkaddrman` in at least one of the Travis jobs?",
      "created_at" : "2020-10-24T09:03:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-715884692",
      "id" : 715884692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNTg4NDY5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-24T15:37:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/715884692",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Should we run with -checkaddrman in at least one of the Traivs jobs?\r\n\r\n`-checkaddrman` is enabled by default for regtest, so is on for all Travis jobs (although our functional tests probably don't exercise addrman very much)",
      "created_at" : "2020-10-24T10:28:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-715894659",
      "id" : 715894659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNTg5NDY1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-24T10:28:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/715894659",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The consistency check fails on one of the unit tests. I've converted this PR to draft status while I work out why it's failing.",
      "created_at" : "2020-10-24T17:11:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-716008503",
      "id" : 716008503,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjAwODUwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-25T09:32:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716008503",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> `-checkaddrman` is enabled by default for regtest, so is on for all Travis jobs (although our functional tests probably don't exercise addrman very much)\r\n\r\nOh, I missed the \"by default on regtest\" in the PR description. Sorry about that :)\r\n\r\nDefaulting to sanity checking in regtest makes perfect sense! Even more Concept ACK :)",
      "created_at" : "2020-10-24T21:56:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-716060484",
      "id" : 716060484,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjA2MDQ4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-24T21:56:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716060484",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've fixed the failing unit tests.",
      "created_at" : "2020-10-25T10:00:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-716121546",
      "id" : 716121546,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjEyMTU0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-25T10:00:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716121546",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This makes some of the functional tests run very slowly. I'll do some comparisons and maybe disable consistency checks on the slowest tests.",
      "created_at" : "2020-10-25T14:47:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-716160060",
      "id" : 716160060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjE2MDA2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-25T14:47:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716160060",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Marking as draft until #20228 is merged.",
      "created_at" : "2020-10-26T12:02:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-716503063",
      "id" : 716503063,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjUwMzA2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-26T12:02:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716503063",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20233#discussion_r514380030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514380030"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't it matters where the line break is, as long as the line isn't too long.",
      "commit_id" : "3260674b381bc7d46a73775536e7caaab2480ea2",
      "created_at" : "2020-10-29T16:06:07Z",
      "diff_hunk" : "@@ -172,7 +172,9 @@ TestingSetup::TestingSetup(const std::string& chainName, const std::vector<const\n \n     m_node.banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n     m_node.connman = MakeUnique<CConnman>(0x1337, 0x1337, *m_node.addrman); // Deterministic randomness for tests.\n-    m_node.peerman = MakeUnique<PeerManager>(chainparams, *m_node.connman, m_node.banman.get(), *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n+    m_node.peerman = MakeUnique<PeerManager>(chainparams, *m_node.connman, *m_node.addrman,\n+                                             m_node.banman.get(), *m_node.scheduler, *m_node.chainman,\n+                                             *m_node.mempool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#discussion_r514380030",
      "id" : 514380030,
      "in_reply_to_id" : 511200283,
      "line" : 177,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM4MDAzMA==",
      "original_commit_id" : "b155d8aeda0775275aa184ba6080fc32c5395de9",
      "original_line" : 177,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : 26,
      "pull_request_review_id" : 519830824,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20233",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-29T16:06:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514380030",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems to make rpc_net and p2p_getaddr_caching tests run extremely slowly:\r\n\r\n    rpc_net.py                                       | â Passed  | 1372 s\r\n    p2p_getaddr_caching.py                           | â Passed  | 1367 s\r\n\r\nI don't think there's any need for this to be based on #20228 -- passing a \"check_addrman\" from init to CConnman seems to work fine, see https://github.com/ajtowns/bitcoin/commits/202101-addrman-check eg.\r\n\r\nMore generally, I'm not sure that these consistency checks are that useful to enable at runtime/CI rather than just using them as an aid when making changes to addrman internals.",
      "created_at" : "2021-01-06T02:57:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-755044221",
      "id" : 755044221,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NTA0NDIyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-06T02:57:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/755044221",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This seems to make rpc_net and p2p_getaddr_caching tests run extremely slowly.\r\n\r\nYes, see my comment at https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-716160060. I was planning on addressing that after 20228 was merged, probably by disabling the checks for those tests, or perhaps by changing the consistency check configuration to be a ratio, like the mempool consistency checks:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/68196a891056f98c1df0debacf09fb2ea4682a43/src/txmempool.h#L491\r\n\r\n> I don't think there's any need for this to be based on #20228 -- passing a \"check_addrman\" from init to CConnman seems to work fine, see ajtowns/bitcoin@202101-addrman-check (commits) eg.\r\n\r\nSure, we could continue to pass function calls and (now) ctor parameters through CConnman, but I don't see why that is desirable. Connman _uses_ addrman, but there's no reason for it to _have_ an addrman. Addrman is also used by peerman and the RPCs. Connman's resposibility is to open and maintain connections. Storing and maintaining our map of accessible nodes on the network is a separate  responsibility.\r\n\r\nThere was also some discussion here: http://www.erisian.com.au/bitcoin-core-dev/log-2020-12-16.html#l-585 about being able to manage addrman more directly. Again, in that case it'd be easier if RPC directly held a handle to the addrman instead of passing messages through connman.\r\n\r\n> More generally, I'm not sure that these consistency checks are that useful to enable at runtime/CI rather than just using them as an aid when making changes to addrman internals.\r\n\r\nI think somewhere that they're definitely useful would be in fuzz testing, to ensure that there's no way to violate addrman's invariants. See the usage of txrequest's sanity check here:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/68196a891056f98c1df0debacf09fb2ea4682a43/src/test/fuzz/txrequest.cpp#L373\r\n\r\nwhich is called after every loop in the fuzz tester.",
      "created_at" : "2021-01-06T09:30:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-755188580",
      "id" : 755188580,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NTE4ODU4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-06T09:30:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/755188580",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Connman uses addrman, but there's no reason for it to have an addrman.\r\n\r\nThere's no point having addrman without a connman outside of unit tests (in which case the test can create an addrman directly), and connman uses addrman. That's enough reason for connman to be the thing that owns it, and for anything that wants it to access it via connman. I don't think there's anything you could do with `node.addrman` that you couldn't do equally well with `node.connman.GetAddrman()`.\r\n\r\nBut more importantly, it's easy to separate the two questions (should connman own the addrman instance and should debug_addrman be used more often) and judge them independently, so we should.\r\n\r\n> I think somewhere that they're definitely useful would be in fuzz testing, [...]\r\n\r\nYeah; I agree in principle. But while I think txrequest's checks are reasonably optimised to be run frequently with modest data sets, I think addrman's is very heavy weight and only really works for pretty small ones. Maybe it would make sense to have the automatic internal checks (`Good()` surrounds `Good_()` by invocations to `Check()`) only happen via compile-time changes so you can use them when debugging, but still have `Check_()` compiled unconditionally so that the fuzzer and unit tests call `Check()` themselves.\r\n\r\nAny idea how much this PR currently slows down the fuzzer? Doing the checks irregularly might be enough either way though -- perhaps especially if how irregular it is adjust dynamically (100% for the first x checks, 50% for the next x checks, etc?)\r\n\r\nHmm, actually, at least as it stands, perhaps addrman checks should be a regtest-only option, rather than a regtest-by-default option? Aren't those checks always too heavyweight to run when addrman is populated from mainnet/testnet?",
      "created_at" : "2021-01-07T06:24:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-755914044",
      "id" : 755914044,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NTkxNDA0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-07T06:24:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/755914044",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> But more importantly, it's easy to separate the two questions (should connman own the addrman instance and should debug_addrman be used more often) and judge them independently, so we should.\r\n\r\nThe aim of this PR is to add the ability to run internal consistency checks in addrman. If that can be done without adding more unnecessary coupling between components, then we should do that. There's no good reason that connman should be forwarding constructor parameters through to addrman, so I don't want to add that.\r\n\r\nThis design of both connman and peerman holding a handle to another component is exactly the same as we use for banman, with the added bonus that banman is internally an optional component (although there's no exposed configuration option to disable it). That design ensures very clean separation between components with no unexpected dependencies creeping in, and no boilerplate forwarding code in connman.\r\n\r\nChanging the constuctor parameters is changing the public interface of addrman, so there are two choices:\r\n\r\n1. keep it in connman and update connman's ctor interface, adding yet more coupling between components\r\n2. split out addrman and then add the ctor parameter\r\n\r\n(2) is more work now, but it's a net removal of boilerplate code (-24 in #20228), and is a better design for the long term.",
      "created_at" : "2021-01-07T09:55:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-756011974",
      "id" : 756011974,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NjAxMTk3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-07T09:55:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/756011974",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on master. I'm leaving this as draft since I still need to update it to disable addrman consistency checks for certain tests.",
      "created_at" : "2021-03-30T10:54:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20233#issuecomment-810124639",
      "id" : 810124639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20233",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMDEyNDYzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-30T10:54:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/810124639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
