[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515471968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515471968"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Pretty sure this is not the parent change. miniwallet should have two outputs at this point. One leftover coinbase and one change. Coin selection favors the largest output, so the coinbase one.\r\n\r\nI might be wrong, but I think it could make sense to check that the child tx really has parent_txid as ancestor via the mempool rpc",
      "commit_id" : "de4173bacd3a2ce6294515072cb725d5c1074cd8",
      "created_at" : "2020-10-31T08:21:41Z",
      "diff_hunk" : "@@ -27,54 +27,52 @@ class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        wallet = MiniWallet(node)\n+\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.\n+        wallet.generate(2)\n+        node.generate(100)\n \n         # Send a parent transaction that will expire.\n-        parent_address = node.getnewaddress()\n-        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+        parent_txid = wallet.send_self_transfer(from_node=node)['txid']\n \n         # Set the mocktime to the arrival time of the parent transaction.\n         entry_time = node.getmempoolentry(parent_txid)['time']\n         node.setmocktime(entry_time)\n \n-        # Create child transaction spending the parent transaction\n-        vout = find_vout_for_address(node, parent_txid, parent_address)\n-        inputs = [{'txid': parent_txid, 'vout': vout}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        child_raw = node.createrawtransaction(inputs, outputs)\n-        child_signed = node.signrawtransactionwithwallet(child_raw)['hex']\n-\n-        # Let half of the timeout elapse and broadcast the child transaction.\n-        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        # Let half of the timeout elapse.\n+        half_expiry_time = entry_time + 3600 * timeout // 2\n         node.setmocktime(half_expiry_time)\n-        child_txid = node.sendrawtransaction(child_signed)\n+\n+        # Broadcast the child transaction spending the parent transaction.\n+        parent_utxo = wallet.get_utxo()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515471968",
      "id" : 515471968,
      "line" : 52,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ3MTk2OA==",
      "original_commit_id" : "98796bba8f394c323a22afcfc6c474c5f0c81f7f",
      "original_line" : 52,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "test/functional/mempool_expiry.py",
      "position" : 51,
      "pull_request_review_id" : 521122396,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-31T10:32:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515471968",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515483272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515483272"
         }
      },
      "author_association" : "NONE",
      "body" : "I added an assertion verifying this to make it clear https://github.com/bitcoin/bitcoin/pull/20276/commits/de4173bacd3a2ce6294515072cb725d5c1074cd8.\r\n\r\nOriginally I had:\r\n```python\r\nparent_utxo = next(filter(lambda utxo: utxo['txid'] == parent_txid, wallet._utxos))\r\n```\r\n\r\nbut then I realized `get_utxo()` would do this for me: ```\"\"\"Return the last utxo. Can be used to get the change output immediately after a send_self_transfer\"\"\"``` ",
      "commit_id" : "de4173bacd3a2ce6294515072cb725d5c1074cd8",
      "created_at" : "2020-10-31T10:39:51Z",
      "diff_hunk" : "@@ -27,54 +27,52 @@ class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        wallet = MiniWallet(node)\n+\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.\n+        wallet.generate(2)\n+        node.generate(100)\n \n         # Send a parent transaction that will expire.\n-        parent_address = node.getnewaddress()\n-        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+        parent_txid = wallet.send_self_transfer(from_node=node)['txid']\n \n         # Set the mocktime to the arrival time of the parent transaction.\n         entry_time = node.getmempoolentry(parent_txid)['time']\n         node.setmocktime(entry_time)\n \n-        # Create child transaction spending the parent transaction\n-        vout = find_vout_for_address(node, parent_txid, parent_address)\n-        inputs = [{'txid': parent_txid, 'vout': vout}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        child_raw = node.createrawtransaction(inputs, outputs)\n-        child_signed = node.signrawtransactionwithwallet(child_raw)['hex']\n-\n-        # Let half of the timeout elapse and broadcast the child transaction.\n-        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        # Let half of the timeout elapse.\n+        half_expiry_time = entry_time + 3600 * timeout // 2\n         node.setmocktime(half_expiry_time)\n-        child_txid = node.sendrawtransaction(child_signed)\n+\n+        # Broadcast the child transaction spending the parent transaction.\n+        parent_utxo = wallet.get_utxo()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515483272",
      "id" : 515483272,
      "in_reply_to_id" : 515471968,
      "line" : 52,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ4MzI3Mg==",
      "original_commit_id" : "98796bba8f394c323a22afcfc6c474c5f0c81f7f",
      "original_line" : 52,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "test/functional/mempool_expiry.py",
      "position" : 51,
      "pull_request_review_id" : 521129683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-31T10:40:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515483272",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   }
]
