[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515471968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515471968"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Pretty sure this is not the parent change. miniwallet should have two outputs at this point. One leftover coinbase and one change. Coin selection favors the largest output, so the coinbase one.\r\n\r\nI might be wrong, but I think it could make sense to check that the child tx really has parent_txid as ancestor via the mempool rpc",
      "commit_id" : "ec66561d87881f54d64c8d633e267efe1b18b4ad",
      "created_at" : "2020-10-31T08:21:41Z",
      "diff_hunk" : "@@ -27,54 +27,52 @@ class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        wallet = MiniWallet(node)\n+\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.\n+        wallet.generate(2)\n+        node.generate(100)\n \n         # Send a parent transaction that will expire.\n-        parent_address = node.getnewaddress()\n-        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+        parent_txid = wallet.send_self_transfer(from_node=node)['txid']\n \n         # Set the mocktime to the arrival time of the parent transaction.\n         entry_time = node.getmempoolentry(parent_txid)['time']\n         node.setmocktime(entry_time)\n \n-        # Create child transaction spending the parent transaction\n-        vout = find_vout_for_address(node, parent_txid, parent_address)\n-        inputs = [{'txid': parent_txid, 'vout': vout}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        child_raw = node.createrawtransaction(inputs, outputs)\n-        child_signed = node.signrawtransactionwithwallet(child_raw)['hex']\n-\n-        # Let half of the timeout elapse and broadcast the child transaction.\n-        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        # Let half of the timeout elapse.\n+        half_expiry_time = entry_time + 3600 * timeout // 2\n         node.setmocktime(half_expiry_time)\n-        child_txid = node.sendrawtransaction(child_signed)\n+\n+        # Broadcast the child transaction spending the parent transaction.\n+        parent_utxo = wallet.get_utxo()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515471968",
      "id" : 515471968,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ3MTk2OA==",
      "original_commit_id" : "98796bba8f394c323a22afcfc6c474c5f0c81f7f",
      "original_line" : 52,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "test/functional/mempool_expiry.py",
      "position" : null,
      "pull_request_review_id" : 521122396,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-28T18:20:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515471968",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515483272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515483272"
         }
      },
      "author_association" : "NONE",
      "body" : "I added an assertion verifying this to make it clear https://github.com/bitcoin/bitcoin/pull/20276/commits/de4173bacd3a2ce6294515072cb725d5c1074cd8.\r\n\r\nOriginally I had:\r\n```python\r\nparent_utxo = next(filter(lambda utxo: utxo['txid'] == parent_txid, wallet._utxos))\r\n```\r\n\r\nbut then I realized `get_utxo()` would do this for me: ```\"\"\"Return the last utxo. Can be used to get the change output immediately after a send_self_transfer\"\"\"``` ",
      "commit_id" : "ec66561d87881f54d64c8d633e267efe1b18b4ad",
      "created_at" : "2020-10-31T10:39:51Z",
      "diff_hunk" : "@@ -27,54 +27,52 @@ class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        wallet = MiniWallet(node)\n+\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.\n+        wallet.generate(2)\n+        node.generate(100)\n \n         # Send a parent transaction that will expire.\n-        parent_address = node.getnewaddress()\n-        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+        parent_txid = wallet.send_self_transfer(from_node=node)['txid']\n \n         # Set the mocktime to the arrival time of the parent transaction.\n         entry_time = node.getmempoolentry(parent_txid)['time']\n         node.setmocktime(entry_time)\n \n-        # Create child transaction spending the parent transaction\n-        vout = find_vout_for_address(node, parent_txid, parent_address)\n-        inputs = [{'txid': parent_txid, 'vout': vout}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        child_raw = node.createrawtransaction(inputs, outputs)\n-        child_signed = node.signrawtransactionwithwallet(child_raw)['hex']\n-\n-        # Let half of the timeout elapse and broadcast the child transaction.\n-        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        # Let half of the timeout elapse.\n+        half_expiry_time = entry_time + 3600 * timeout // 2\n         node.setmocktime(half_expiry_time)\n-        child_txid = node.sendrawtransaction(child_signed)\n+\n+        # Broadcast the child transaction spending the parent transaction.\n+        parent_utxo = wallet.get_utxo()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515483272",
      "id" : 515483272,
      "in_reply_to_id" : 515471968,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ4MzI3Mg==",
      "original_commit_id" : "98796bba8f394c323a22afcfc6c474c5f0c81f7f",
      "original_line" : 52,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "test/functional/mempool_expiry.py",
      "position" : null,
      "pull_request_review_id" : 521129683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-28T18:20:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515483272",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515507542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515507542"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, sorry my bad in that case. Though, the mempool check would still make sense.",
      "commit_id" : "ec66561d87881f54d64c8d633e267efe1b18b4ad",
      "created_at" : "2020-10-31T15:22:47Z",
      "diff_hunk" : "@@ -27,54 +27,52 @@ class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        wallet = MiniWallet(node)\n+\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.\n+        wallet.generate(2)\n+        node.generate(100)\n \n         # Send a parent transaction that will expire.\n-        parent_address = node.getnewaddress()\n-        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+        parent_txid = wallet.send_self_transfer(from_node=node)['txid']\n \n         # Set the mocktime to the arrival time of the parent transaction.\n         entry_time = node.getmempoolentry(parent_txid)['time']\n         node.setmocktime(entry_time)\n \n-        # Create child transaction spending the parent transaction\n-        vout = find_vout_for_address(node, parent_txid, parent_address)\n-        inputs = [{'txid': parent_txid, 'vout': vout}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        child_raw = node.createrawtransaction(inputs, outputs)\n-        child_signed = node.signrawtransactionwithwallet(child_raw)['hex']\n-\n-        # Let half of the timeout elapse and broadcast the child transaction.\n-        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        # Let half of the timeout elapse.\n+        half_expiry_time = entry_time + 3600 * timeout // 2\n         node.setmocktime(half_expiry_time)\n-        child_txid = node.sendrawtransaction(child_signed)\n+\n+        # Broadcast the child transaction spending the parent transaction.\n+        parent_utxo = wallet.get_utxo()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515507542",
      "id" : 515507542,
      "in_reply_to_id" : 515471968,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwNzU0Mg==",
      "original_commit_id" : "98796bba8f394c323a22afcfc6c474c5f0c81f7f",
      "original_line" : 52,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "test/functional/mempool_expiry.py",
      "position" : null,
      "pull_request_review_id" : 521147141,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-28T18:20:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515507542",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@MarcoFalke not to beat this to death, but I added another test case in https://github.com/bitcoin/bitcoin/pull/20276/commits/71081df19a816b5c243a6bcccab9fb11888732fa. While convincing myself that I was using `miniWallet` properly, and not getting lucky with any passing tests, I wrote this and figured it was useful enough to include in the PR",
      "created_at" : "2020-10-31T17:36:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-719964483",
      "id" : 719964483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTk2NDQ4Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-31T17:36:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719964483",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Rebased and should be ready to merge",
      "created_at" : "2020-11-28T16:17:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-735251035",
      "id" : 735251035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNTI1MTAzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-28T16:17:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735251035",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r532085685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532085685"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I found this function name and doc string not to be super clear. `sync_mempool()` could be confused with something like `self.sync_all()`. If you happen to re-touch this then maybe something along the lines of the suggestion below would make it clearer.\r\n\r\n```suggestion\r\n    def trigger_mempool_expiry(self):\r\n        \"\"\"Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked when a new transaction is added to the mempool.\"\"\"\r\n```",
      "commit_id" : "ec66561d87881f54d64c8d633e267efe1b18b4ad",
      "created_at" : "2020-11-28T17:35:11Z",
      "diff_hunk" : "@@ -26,57 +26,62 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def sync_mempool(self):\n+        \"\"\"Expiry of mempool txs are only checked when a new tx is added to the mempool.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r532085685",
      "id" : 532085685,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA4NTY4NQ==",
      "original_commit_id" : "124c8ab5df85b606e00cfa666de6105e0620de00",
      "original_line" : 32,
      "original_position" : 32,
      "original_start_line" : 31,
      "path" : "test/functional/mempool_expiry.py",
      "position" : null,
      "pull_request_review_id" : 540406220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-28T18:20:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532085685",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r532090976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532090976"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks for the suggestion, I made this change and squashed it into the commit",
      "commit_id" : "ec66561d87881f54d64c8d633e267efe1b18b4ad",
      "created_at" : "2020-11-28T18:21:49Z",
      "diff_hunk" : "@@ -26,57 +26,62 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def sync_mempool(self):\n+        \"\"\"Expiry of mempool txs are only checked when a new tx is added to the mempool.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r532090976",
      "id" : 532090976,
      "in_reply_to_id" : 532085685,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5MDk3Ng==",
      "original_commit_id" : "124c8ab5df85b606e00cfa666de6105e0620de00",
      "original_line" : 32,
      "original_position" : 32,
      "original_start_line" : 31,
      "path" : "test/functional/mempool_expiry.py",
      "position" : null,
      "pull_request_review_id" : 540408879,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-11-28T18:21:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532090976",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK ec66561d87881f54d64c8d633e267efe1b18b4ad\r\n\r\nOnly changes are:\r\n- https://github.com/bitcoin/bitcoin/pull/20276#discussion_r532085685 addressed\r\n- formatting of long lines changed: removed line breaks (multiple lines -> one line)",
      "created_at" : "2020-11-28T22:10:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-735296850",
      "id" : 735296850,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNTI5Njg1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-28T22:10:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735296850",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "So since we don't use the wallet in mempool_expiry.py after this PR, does this close https://github.com/bitcoin/bitcoin/issues/19448? Also, since https://github.com/bitcoin/bitcoin/pull/19450 is described as a temp workaround would we revert it after this is merged? cc @hebasto \r\n\r\nCan someone explain why (only?) this test is triggering a data race though? Everything seems pretty simple so I'm confused why only this test would expose it. And I wonder if it's not a hint at an underlying problem?",
      "created_at" : "2020-12-01T20:46:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-736809643",
      "id" : 736809643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNjgwOTY0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-01T20:46:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736809643",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> So since we don't use the wallet in mempool_expiry.py after this PR, does this close #19448? Also, since #19450 is described as a temp workaround would we revert it after this is merged? cc @hebasto\r\n\r\nAs noted in #19448 OP other similar issues are reported: #19211 and #19417. I think we could just wait until Berkley DB will [no longer used](https://github.com/bitcoin/bitcoin/issues/20160) in Bitcoin Core.\r\n\r\n> Can someone explain why (only?) this test is triggering a data race though? Everything seems pretty simple so I'm confused why only this test would expose it. And I wonder if it's not a hint at an underlying problem?\r\n\r\nI believe something is wrong with Berkeley DB code, but did not check it myself.",
      "created_at" : "2020-12-01T21:16:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-736825467",
      "id" : 736825467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNjgyNTQ2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-01T21:16:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736825467",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
