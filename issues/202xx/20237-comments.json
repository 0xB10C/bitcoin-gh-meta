[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> This makes no sense now as there are hardly any\r\n\r\nThere are many nodes that have there onion v3 address linked to 8333 created in /etc/tor/torrc but probably won't tell and stay onlynet onion or don't enable service calls port 9051 and cant use the additional v3 support from 0.21 by auto creating onions anyway.\r\n\r\nBut since almost all old nodes versions can do connect and addnode with long v3 address since years, if thre Tor software is above Tor 0.3.2.2-alpha (October  2017 ),  it might be useful to have a short list core approved list they could add manual to there old nodes,\r\n\r\nAnd btw. why not add the Tor v3 addr from the known seeders ( if they have Tor nodes ) in the vseeds list, i.e. when the user selects onlynet=onion to make sure we don't seed by ADDR messages via Tor exit nodes and stay at least for virgin bootstrap in Tor, i somewhere posted a patch for `chainparms.cpp` but forgot where.\r\nThat way. nodes with 0.21 update would fast learn from the seeders ADDRv2 messages new v3 and stay in pure in Tor if they wish.\r\nIf u like i can dig for that?  \r\n\r\n``` Diff\r\ndiff --git a/src/chainparams.cpp b/src/chainparams.cpp\r\nindex ffd2076c9..4903e3bda 100644\r\n--- a/src/chainparams.cpp\r\n+++ b/src/chainparams.cpp\r\n@@ -10,6 +10,7 @@\r\n #include <tinyformat.h>\r\n #include <util/system.h>\r\n #include <util/strencodings.h>\r\n+#include <util/system.h>\r\n #include <versionbitsinfo.h>\r\n \r\n #include <assert.h>\r\n@@ -113,6 +114,7 @@ public:\r\n         // This is fine at runtime as we'll fall back to using them as an addrfetch if they don't support the\r\n         // service bits we want, but we should get them updated to support all service bits wanted by any\r\n         // release ASAP to avoid it where possible.\r\n+        if (gArgs.GetArg(\"-onlynet\", \"\") != \"onion\") {\r\n         vSeeds.emplace_back(\"seed.bitcoin.sipa.be\"); // Pieter Wuille, only supports x1, x5, x9, and xd\r\n         vSeeds.emplace_back(\"dnsseed.bluematt.me\"); // Matt Corallo, only supports x9\r\n         vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org\"); // Luke Dashjr\r\n@@ -122,6 +124,11 @@ public:\r\n         vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl\"); // Sjors Provoost\r\n         vSeeds.emplace_back(\"dnsseed.emzy.de\"); // Stephan Oeste\r\n         vSeeds.emplace_back(\"seed.bitcoin.wiz.biz\"); // Jason Maurice\r\n+        };\r\n+\r\n+        if (gArgs.GetArg(\"-onlynet\", \"\") == \"onion\") {\r\n+        vSeeds.emplace_back(\"seedersv3onionaddressasdasdasdasdad.onion:8333\"); // Add seeder onion v3 address\r\n+       // since we can not seed over Tor UDP DNS and call anyway the first node from the return +       // the exit socket  the exit Tor node give us for the FQDN of normal seeders, so why not call    \r\n+      //if onlynet=onion the Tor seeder node and gossip from ADDRv2 or ADDR,\r\n+        }\r\n \r\n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\r\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\r\n\r\n```",
      "created_at" : "2020-10-25T15:14:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20237#issuecomment-716164054",
      "id" : 716164054,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20237",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjE2NDA1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-25T16:10:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716164054",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   }
]
