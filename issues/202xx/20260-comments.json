[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think wallets should keep being directories. Few reasons:\r\n\r\n- Aesthetics, usability, and the road to ambiguity. People are used to file names having extensions, and directory names not having extensions. If you create wallet named \"My Wallet\" in the GUI, or run `bitcoin-cli createwallet \"My Wallet\"`, there's nothing unusual about seeing a directory called `\"My Wallet\"` in `<walletdir>`. If `\"My Wallet\"` is created as a file not a directory, then you have an unusual looking file with no extension. So then there is a reason to call `bitcoin-cli createwallet` with a name that looks more like a filename: `mywallet.dat`, `mywallet.db` `mywallet.wallet`. And then the GUI starts showing lists of wallets like `mywallet1.wallet` and `mywallet2.wallet` and RPC endpoints looks like `/wallet/mywallet1.wallet` and `/wallet/mywallet2.wallet`. And then to improve ergonomics, somebody writes a PR to strip extensions, so GUI is more user-friendly or so RPC endpoint names are less verbose. And then simple mapping of wallet name == RPC endpoint name == GUI display name is broken, so now there are multiple mappings, ambiguity, more confusion, and everything is more complicated and stupid.\r\n\r\n- Backup safety. The claim that \"Since SQLite does not have database environments it is not necessary to have these directories\" is ambiguous and not accurate as far as I know. The sqlite implementation does not require periodic flushing to consolidate log files, but that doesn't mean that sqlite doesn't create log files. If you create a `<walletname>` wallet, sqlite will create a `<walletname>.wallet-journal` file, so if you have a backup script that is periodically backing up the `<walletdir>/<walletname>` path, it can miss the journal file. If the backup script wants to include the journal file, it needs to know about wallet database layout. It is better if wallet is just a directory, so the backup script can back up the directory without having to care about database layout. If script wants to care about the layout, it can still do that and exclude things, but the simple non-invasive approach will include data instead of excluding it.\r\n\r\n- Future extensibility. It's nice if wallets are directories instead of files, so there is a place to add new files associated with the wallet. I have PRs that let wallets run as separate processes. These wallet processes will want to run RPC servers. These RPC servers will need a place to put cookie files. A logical place would be inside the wallet directory. Similarly with future per-wallet debug logs, per-wallet settings files, per-wallet socket endpoints. If you have wallet directory, there is a natural place to put all these things. Users and external tools will be able to locate all data associated with a wallet without having to make assumptions about layout.",
      "created_at" : "2020-10-28T22:55:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20260#issuecomment-718254715",
      "id" : 718254715,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20260",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxODI1NDcxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-28T22:55:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718254715",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
