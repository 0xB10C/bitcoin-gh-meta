[
   {
      "body" : "I like the concept of an external app working on `wallet.dat` files. I know several use cases where you have many `wallet.dat` files and with this, you can remove all the notes around the files you have to select between them.\r\n\r\nI can even imagine removing/deprecating `encryptwallet`, `walletpassphrasechange` and such from `bitcoind` afterwards.\r\n\r\nWe have to take care of proper file locking when working on the file when `bitcoind` is running at the same time.\r\n\r\nSome travis' hosts do not build (wallet/nowallet configs?).",
      "created_at" : "2016-09-17T08:15:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8745#issuecomment-247756809",
      "id" : 247756809,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8745",
      "updated_at" : "2016-09-17T08:15:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247756809",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "Yeah, why not. Concept ACK. This is conceptually similar to SQL database's external utilities for repair, management, etc.\r\nAlso I suppose when there needs to be a conversion tool between old and new formats, it would be part of this utility?\r\n\r\nFrom a deployment point of view I think we should keep this command-line only. Two Qt-using statically linked monster executables in the distribution is a bit too much, because of size concerns but also because e.g. MacOSX assumes a one-to-one mapping of GUI executables to applications.\r\n\r\n> We have to take care of proper file locking when working on the file when bitcoind is running at the same time.\r\n\r\nThis is indeed very important, it needs to be prevented (and tested) that it is impossible to fudge a database with this utility while bitcoind is running.\r\n",
      "created_at" : "2016-09-19T13:25:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8745#issuecomment-247992065",
      "id" : 247992065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8745",
      "updated_at" : "2016-09-19T13:28:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247992065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> Also I suppose when there needs to be a conversion tool between old and new formats, it would be part of this utility?\r\n\r\nYes. The whole -walletupgare (as well as salvage) could go into this tool.\r\n\r\n> From a deployment point of view I think we should keep this command-line only. Two Qt-using statically linked monster executables in the distribution is a bit too much, because of size concerns but also because e.g. MacOSX assumes a one-to-one mapping of GUI executables to applications.\r\n\r\nYes. The current Qt app could support similar functions, It doesn't need to be a separate App. Multiwallet support would help in this case.",
      "created_at" : "2016-09-20T07:34:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8745#issuecomment-248226130",
      "id" : 248226130,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8745",
      "updated_at" : "2016-09-20T07:34:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248226130",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   }
]
