[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on removing no-longer  needed abstraction. [Currently failing to compile](https://cirrus-ci.com/task/5067477362147328?command=ci#L2464):\r\n```bash\r\n  CXX      wallet/libbitcoin_wallet_a-coincontrol.o\r\nIn file included from /usr/include/c++/9/bits/move.h:55,\r\n                 from /usr/include/c++/9/bits/nested_exception.h:40,\r\n                 from /usr/include/c++/9/exception:144,\r\n                 from /usr/include/c++/9/new:40,\r\n                 from /usr/include/c++/9/any:37,\r\n                 from ./rpc/request.h:9,\r\n                 from ./rpc/server.h:10,\r\n                 from rpc/server.cpp:6:\r\n/usr/include/c++/9/type_traits: In instantiation of âstruct std::__and_<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â:\r\n/usr/include/c++/9/type_traits:150:27:   required from âconstexpr const bool std::__and_v<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â\r\n/usr/include/c++/9/any:192:27:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> = <missing>]â\r\n/usr/include/c++/9/type_traits:883:12:   required from âstruct std::is_constructible<JSONRPCRequest, const JSONRPCRequest&>â\r\n/usr/include/c++/9/type_traits:901:12:   required from âstruct std::__is_copy_constructible_impl<JSONRPCRequest, true>â\r\n/usr/include/c++/9/type_traits:907:12:   required from âstruct std::is_copy_constructible<JSONRPCRequest>â\r\n/usr/include/c++/9/type_traits:131:12:   required from âstruct std::__and_<std::is_copy_constructible<JSONRPCRequest>, std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >â\r\n/usr/include/c++/9/any:181:58:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous>, typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous> = <missing>; typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> = <missing>]â\r\nrpc/server.cpp:91:32:   required from here\r\n/usr/include/c++/9/type_traits:136:12: error: incomplete type âstd::is_copy_constructible<JSONRPCRequest>â used in nested name specifier\r\n  136 |     struct __and_<_B1, _B2, _B3, _Bn...>\r\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/usr/include/c++/9/type_traits: In instantiation of âconstexpr const bool std::__and_v<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â:\r\n/usr/include/c++/9/any:192:27:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> = <missing>]â\r\n/usr/include/c++/9/type_traits:883:12:   required from âstruct std::is_constructible<JSONRPCRequest, const JSONRPCRequest&>â\r\n/usr/include/c++/9/type_traits:901:12:   required from âstruct std::__is_copy_constructible_impl<JSONRPCRequest, true>â\r\n/usr/include/c++/9/type_traits:907:12:   required from âstruct std::is_copy_constructible<JSONRPCRequest>â\r\n/usr/include/c++/9/type_traits:131:12:   required from âstruct std::__and_<std::is_copy_constructible<JSONRPCRequest>, std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >â\r\n/usr/include/c++/9/any:181:58:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous>, typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous> = <missing>; typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> = <missing>]â\r\nrpc/server.cpp:91:32:   required from here\r\n/usr/include/c++/9/type_traits:150:27: error: âvalueâ is not a member of âstd::__and_<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â\r\n  150 |     inline constexpr bool __and_v = __and_<_Bn...>::value;\r\n      |                           ^~~~~~~\r\nmake[2]: *** [Makefile:8807: rpc/libbitcoin_server_a-server.o] Error 1\r\n```",
      "created_at" : "2021-03-05T02:49:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-791110639",
      "id" : 791110639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTExMDYzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-05T02:49:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791110639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
