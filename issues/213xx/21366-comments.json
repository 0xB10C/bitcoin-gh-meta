[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on removing no-longer  needed abstraction. [Currently failing to compile](https://cirrus-ci.com/task/5067477362147328?command=ci#L2464):\r\n```bash\r\n  CXX      wallet/libbitcoin_wallet_a-coincontrol.o\r\nIn file included from /usr/include/c++/9/bits/move.h:55,\r\n                 from /usr/include/c++/9/bits/nested_exception.h:40,\r\n                 from /usr/include/c++/9/exception:144,\r\n                 from /usr/include/c++/9/new:40,\r\n                 from /usr/include/c++/9/any:37,\r\n                 from ./rpc/request.h:9,\r\n                 from ./rpc/server.h:10,\r\n                 from rpc/server.cpp:6:\r\n/usr/include/c++/9/type_traits: In instantiation of âstruct std::__and_<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â:\r\n/usr/include/c++/9/type_traits:150:27:   required from âconstexpr const bool std::__and_v<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â\r\n/usr/include/c++/9/any:192:27:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> = <missing>]â\r\n/usr/include/c++/9/type_traits:883:12:   required from âstruct std::is_constructible<JSONRPCRequest, const JSONRPCRequest&>â\r\n/usr/include/c++/9/type_traits:901:12:   required from âstruct std::__is_copy_constructible_impl<JSONRPCRequest, true>â\r\n/usr/include/c++/9/type_traits:907:12:   required from âstruct std::is_copy_constructible<JSONRPCRequest>â\r\n/usr/include/c++/9/type_traits:131:12:   required from âstruct std::__and_<std::is_copy_constructible<JSONRPCRequest>, std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >â\r\n/usr/include/c++/9/any:181:58:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous>, typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous> = <missing>; typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> = <missing>]â\r\nrpc/server.cpp:91:32:   required from here\r\n/usr/include/c++/9/type_traits:136:12: error: incomplete type âstd::is_copy_constructible<JSONRPCRequest>â used in nested name specifier\r\n  136 |     struct __and_<_B1, _B2, _B3, _Bn...>\r\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/usr/include/c++/9/type_traits: In instantiation of âconstexpr const bool std::__and_v<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â:\r\n/usr/include/c++/9/any:192:27:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<__and_v<std::is_copy_constructible<_Tp>, std::__not_<std::is_constructible<_Tp, _ValueType&&> >, std::__not_<std::__is_in_place_type<_Tp> > >, bool>::type <anonymous> = <missing>]â\r\n/usr/include/c++/9/type_traits:883:12:   required from âstruct std::is_constructible<JSONRPCRequest, const JSONRPCRequest&>â\r\n/usr/include/c++/9/type_traits:901:12:   required from âstruct std::__is_copy_constructible_impl<JSONRPCRequest, true>â\r\n/usr/include/c++/9/type_traits:907:12:   required from âstruct std::is_copy_constructible<JSONRPCRequest>â\r\n/usr/include/c++/9/type_traits:131:12:   required from âstruct std::__and_<std::is_copy_constructible<JSONRPCRequest>, std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >â\r\n/usr/include/c++/9/any:181:58:   required by substitution of âtemplate<class _ValueType, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous>, typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> > std::any::any(_ValueType&&) [with _ValueType = const JSONRPCRequest&; _Tp = JSONRPCRequest; _Mgr = std::any::_Manager_external<JSONRPCRequest>; typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, _ValueType&&> >::value, bool>::type <anonymous> = <missing>; typename std::enable_if<(! std::__is_in_place_type<_Tp>::value), bool>::type <anonymous> = <missing>]â\r\nrpc/server.cpp:91:32:   required from here\r\n/usr/include/c++/9/type_traits:150:27: error: âvalueâ is not a member of âstd::__and_<std::is_copy_constructible<JSONRPCRequest>, std::__not_<std::is_constructible<JSONRPCRequest, const JSONRPCRequest&> >, std::__not_<std::__is_in_place_type<JSONRPCRequest> > >â\r\n  150 |     inline constexpr bool __and_v = __and_<_Bn...>::value;\r\n      |                           ^~~~~~~\r\nmake[2]: *** [Makefile:8807: rpc/libbitcoin_server_a-server.o] Error 1\r\n```",
      "created_at" : "2021-03-05T02:49:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-791110639",
      "id" : 791110639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTExMDYzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-05T02:49:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791110639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21331 (rpc: replace wallet raw pointers with references (#18592 rebased) by fanquake)\n* #21035 (Remove pointer cast in CRPCTable::dumpArgMap by ryanofsky)\n* #21007 (bitcoind: Add -daemonwait option to wait for initialization by laanwj)\n* #20286 (rpc: deprecate `addresses` and `reqSigs` from rpc outputs by mjdietzx)\n* #10102 ([experimental] Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-03-05T09:56:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-791310076",
      "id" : 791310076,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTMxMDA3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-05T09:56:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791310076",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Meh, there seems to be a problem with the (default) copy-constructor of `class JSONRPCRequest` that is invoked in `CRPCTable::help`:\r\n```\r\n... (..., const JSONRPCRequest& helpreq) {\r\n    ...\r\n    JSONRPCRequest jreq(helpreq);\r\n    ...\r\n}\r\n```\r\nNo idea why this compiles locally with clang11 and obviously also for the CI jobs for MacOS and ARM.",
      "created_at" : "2021-03-05T13:05:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-791407659",
      "id" : 791407659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTQwNzY1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-05T13:05:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791407659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588287531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588287531"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactor: replace util::Ref by std::any (C++17)\" (c6686a3a582670618b685e69bdfa2ba893b5ce92)\r\n\r\nThis change and other changes in this commit seems pretty obscure and verbose. It would be nice to define a helper function so these 7 lines could be just be replaced with:\r\n\r\n```c++\r\nconst NodeContext* node = util::AnyPtr<NodeContext>(context);\r\n```\r\n\r\nHelper could go in `util/system.h` and look like:\r\n\r\n```c++\r\ntemplate<typename T>\r\nT* AnyPtr(const std::any& any)\r\n{\r\n    try {\r\n        return std::any_cast<T*>(any);\r\n    } catch (const std::bad_any_cast&) {\r\n        return nullptr;\r\n    }\r\n}\r\n```\r\n\r\nAlso I think it would be better to just assign `context = &node` instead of `context = std::ref(node)`. I think the only reason you would use reference_wrappers instead of pointers is when you want non-nullable references, but std::any is inherently nullable so combining it with std::reference_wrapper just makes things complicated for no benefit.",
      "commit_id" : "659537886dba809ca2adfa26c92a117066deb5cc",
      "created_at" : "2021-03-05T13:15:01Z",
      "diff_hunk" : "@@ -94,9 +96,15 @@ static NodeContext* GetNodeContext(const util::Ref& context, HTTPRequest* req)\n  *                 context mempool is not found.\n  * @returns        Pointer to the mempool or nullptr if no mempool found.\n  */\n-static CTxMemPool* GetMemPool(const util::Ref& context, HTTPRequest* req)\n+static CTxMemPool* GetMemPool(const std::any& context, HTTPRequest* req)\n {\n-    NodeContext* node = context.Has<NodeContext>() ? &context.Get<NodeContext>() : nullptr;\n+    const NodeContext* node;\n+    try {\n+        NodeContext& node_context = std::any_cast<std::reference_wrapper<NodeContext>>(context);\n+        node = &node_context;\n+    } catch (const std::bad_any_cast&) {\n+        node = nullptr;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588287531",
      "id" : 588287531,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODI4NzUzMQ==",
      "original_commit_id" : "c6686a3a582670618b685e69bdfa2ba893b5ce92",
      "original_line" : 107,
      "original_position" : 51,
      "original_start_line" : 99,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 605127354,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2021-03-05T14:54:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588287531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588356462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588356462"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Both introducing a `std::any` access helper and using pointers instead of references are great ideas, thanks! Looks much cleaner now, with the clunky try/catch-construct deduplicated and hidden in util/system.h.",
      "commit_id" : "659537886dba809ca2adfa26c92a117066deb5cc",
      "created_at" : "2021-03-05T14:57:45Z",
      "diff_hunk" : "@@ -94,9 +96,15 @@ static NodeContext* GetNodeContext(const util::Ref& context, HTTPRequest* req)\n  *                 context mempool is not found.\n  * @returns        Pointer to the mempool or nullptr if no mempool found.\n  */\n-static CTxMemPool* GetMemPool(const util::Ref& context, HTTPRequest* req)\n+static CTxMemPool* GetMemPool(const std::any& context, HTTPRequest* req)\n {\n-    NodeContext* node = context.Has<NodeContext>() ? &context.Get<NodeContext>() : nullptr;\n+    const NodeContext* node;\n+    try {\n+        NodeContext& node_context = std::any_cast<std::reference_wrapper<NodeContext>>(context);\n+        node = &node_context;\n+    } catch (const std::bad_any_cast&) {\n+        node = nullptr;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588356462",
      "id" : 588356462,
      "in_reply_to_id" : 588287531,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODM1NjQ2Mg==",
      "original_commit_id" : "c6686a3a582670618b685e69bdfa2ba893b5ce92",
      "original_line" : 107,
      "original_position" : 51,
      "original_start_line" : 99,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 605296631,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2021-03-05T14:57:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588356462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed with suggestions by @ryanofsky (https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588287531): introduced a helper `AnyPtr` to access `std::any` contents and generally assigned pointers to std::any instances instead of references. Code looks much cleaner now.",
      "created_at" : "2021-03-05T14:59:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#issuecomment-791472457",
      "id" : 791472457,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21366",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTQ3MjQ1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-05T14:59:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791472457",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588895346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588895346"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactor: replace util::Ref by std::any (C++17)\" (feb55dde39e59a2709ecefff848a1d8eb9fe69ca)\r\n\r\nThere's a bug here and this change should be reverted. This line is supposed to create `jreq` as a copy of `helpreq` using the `JSONRPCRequest` copy constructor. Now it creates a new `jreq` request using the `helpreq` object as an embedded request context.\r\n\r\nI'm not sure if this is a new bug, or this bug was present previously (even previously `util::Ref` constructor might have take precedence over copy constructor), but passing `&helpreq` here is not intended.",
      "commit_id" : "659537886dba809ca2adfa26c92a117066deb5cc",
      "created_at" : "2021-03-06T15:34:42Z",
      "diff_hunk" : "@@ -87,7 +88,7 @@ std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest&\n         vCommands.push_back(make_pair(entry.second.front()->category + entry.first, entry.second.front()));\n     sort(vCommands.begin(), vCommands.end());\n \n-    JSONRPCRequest jreq(helpreq);\n+    JSONRPCRequest jreq(&helpreq);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588895346",
      "id" : 588895346,
      "line" : 91,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg5NTM0Ng==",
      "original_commit_id" : "feb55dde39e59a2709ecefff848a1d8eb9fe69ca",
      "original_line" : 91,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/rpc/server.cpp",
      "position" : 13,
      "pull_request_review_id" : 605765026,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-06T16:06:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588895346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588896097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588896097"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactor: replace util::Ref by std::any (C++17)\" (feb55dde39e59a2709ecefff848a1d8eb9fe69ca)\r\n\r\nThis turns out to be dangerous because in some cases like `JSONRPCRequest jreq(helpreq);` this constructor will take precedence over the copy constructor.\r\n\r\nWould suggest changing this only to accept pointer arguments so it won't be accidentally invoked trying to create a copy:\r\n\r\n```c++\r\ntemplate<typename T>\r\nexplicit JSONRPCRequest(T* context) : id(NullUniValue), params(NullUniValue), fHelp(false), context(context) {}\r\n```",
      "commit_id" : "659537886dba809ca2adfa26c92a117066deb5cc",
      "created_at" : "2021-03-06T15:41:00Z",
      "diff_hunk" : "@@ -38,14 +35,14 @@ class JSONRPCRequest\n     std::string URI;\n     std::string authUser;\n     std::string peerAddr;\n-    const util::Ref& context;\n+    const std::any& context;\n \n-    explicit JSONRPCRequest(const util::Ref& context) : id(NullUniValue), params(NullUniValue), fHelp(false), context(context) {}\n+    explicit JSONRPCRequest(const std::any& context) : id(NullUniValue), params(NullUniValue), fHelp(false), context(context) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21366#discussion_r588896097",
      "id" : 588896097,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg5NjA5Nw==",
      "original_commit_id" : "feb55dde39e59a2709ecefff848a1d8eb9fe69ca",
      "original_line" : 40,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/rpc/request.h",
      "position" : 24,
      "pull_request_review_id" : 605765026,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21366",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-06T16:06:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588896097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
