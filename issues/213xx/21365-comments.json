[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21415 (refactor: remove Optional & nullopt by fanquake)\n* #21330 (Deal with missing data in signature hashes more consistently by sipa)\n* #21329 (descriptor wallet: Cache last hardened xpub and use in normalized descriptors by achow101)\n* #21283 (Implement BIP 370 PSBTv2 by achow101)\n* #21279 (scripted-diff: Regenerate key_io data deterministically by MarcoFalke)\n* #21238 (A few descriptor improvements to prepare for Taproot support by sipa)\n* #21207 (MOVEONLY: CWallet transaction code out of wallet.cpp/.h by ryanofsky)\n* #21158 (lib: Add Taproot support to libconsensus by jrawsthorne)\n* #20861 (BIP 350: Implement Bech32m and use it for v1+ segwit addresses by sipa)\n* #16116 (Avoid unnecessary signing provider copies on descriptor expansion by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-03-04T23:19:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-791023366",
      "id" : 791023366,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTAyMzM2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T16:05:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791023366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-05T02:40:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-791104360",
      "id" : 791104360,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTEwNDM2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-05T02:40:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791104360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on top of #21246, renamed \"inner key\" everywhere in this PR to \"internal key\" as well, and added very basic PSBT support (you can have a watchonly tr(KEY) wallet now, and get it signed by an offline version that has the private key).",
      "created_at" : "2021-03-06T03:17:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-791851695",
      "id" : 791851695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTg1MTY5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-06T03:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791851695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK ð",
      "created_at" : "2021-03-07T18:34:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-792330093",
      "id" : 792330093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MjMzMDA5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-07T18:34:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792330093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "TBH, I find your \"must be specified in depth-first search order\" somewhat confusing.  As an alternative syntax I suggest simply using some notation for a binary or.  For example.\r\n\r\n*  `tr(KEY)`: only taproot output key known (or is it an internal pubkey with common NUMS tweak??)\r\n*  `tr(KEY,A)`: internal pubkey with a single script `A` at level 0.\r\n*  `tr(KEY,[A|B])`: internal pubkey with a two scripts, `A` and `B` at level 1.\r\n*  `tr(KEY.[[A|B]|C])`: internal pubkey with a two scripts, `A` and `B` at level 2, and a third script at level 1.\r\n*  `tr(KEY.[A|[B|C]])`: same as above except for `A` is at level 1 and `C` is at level 2 instead.\r\n*  `tr(KEY.[[B|C]|A])`: equal to the above descriptor.\r\n*  `tr(KEY.[[A|B]|[C|D]])`: internal pubkey with a four scripts, all at level 2.\r\n*  `tr(KEY.[[A|C]|[B|D]])`: same four scripts as above, again all at level 2 but now associated differently which makes for a different tweak.\r\n*  `tr(KEY.[A|[[B|C]|D]])`: same four scripts as above, but no longer all at the same level.\r\n\r\nMy claimed advantages are the implicitness of the depth, and clearer notation indicating how the scripts are associated amongst each other.\r\n\r\nThe notation above is just an example and don't care too much about the specific syntax.\r\n\r\n---\r\n\r\nOther things to include in the list of features to be added later, a MerkleRoot descriptor for fixed but unknown branches.\r\n\r\n",
      "created_at" : "2021-03-08T14:32:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-792794101",
      "id" : 792794101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5Mjc5NDEwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T14:39:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792794101",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21371712?v=4",
         "events_url" : "https://api.github.com/users/roconnor-blockstream/events{/privacy}",
         "followers_url" : "https://api.github.com/users/roconnor-blockstream/followers",
         "following_url" : "https://api.github.com/users/roconnor-blockstream/following{/other_user}",
         "gists_url" : "https://api.github.com/users/roconnor-blockstream/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/roconnor-blockstream",
         "id" : 21371712,
         "login" : "roconnor-blockstream",
         "node_id" : "MDQ6VXNlcjIxMzcxNzEy",
         "organizations_url" : "https://api.github.com/users/roconnor-blockstream/orgs",
         "received_events_url" : "https://api.github.com/users/roconnor-blockstream/received_events",
         "repos_url" : "https://api.github.com/users/roconnor-blockstream/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/roconnor-blockstream/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/roconnor-blockstream/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/roconnor-blockstream"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@roconnor-blockstream Yeah, I considered something like that, and am open to it. Both notations are equivalent in that you can fairly easily convert in both directions between them (counting bracing level in yours corresponds to the depth specified explicitly in mine, with leaves ultimately listed in the same order). The advantage I see to the current one is that I think it's a bit more readable, avoiding the need to go count braces to see relative depth of leaves. Yours is perhaps a bit easier to write (but maybe that's not something we really expect humans to do much for nontrivial cases).\r\n\r\nThere are many more variations possible. One extreme would be permitting arbitrary weights for every node, and have the descriptor expansion convert it to a Huffman tree. I'd prefer not to do this because it's adding information that can't be inferred back from the script tree it is converted to.",
      "created_at" : "2021-03-08T18:17:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-792966574",
      "id" : 792966574,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5Mjk2NjU3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792966574",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Right.  My concern with explicit levels is that it is so easy to violate the invariant that the sum of the weights has to add up to 1, and you cannot really splice together subexpressions to compose a descriptor from fragments without going through and globally adjusting all the levels to be sane.",
      "created_at" : "2021-03-08T18:25:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-792972451",
      "id" : 792972451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5Mjk3MjQ1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T18:25:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792972451",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21371712?v=4",
         "events_url" : "https://api.github.com/users/roconnor-blockstream/events{/privacy}",
         "followers_url" : "https://api.github.com/users/roconnor-blockstream/followers",
         "following_url" : "https://api.github.com/users/roconnor-blockstream/following{/other_user}",
         "gists_url" : "https://api.github.com/users/roconnor-blockstream/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/roconnor-blockstream",
         "id" : 21371712,
         "login" : "roconnor-blockstream",
         "node_id" : "MDQ6VXNlcjIxMzcxNzEy",
         "organizations_url" : "https://api.github.com/users/roconnor-blockstream/orgs",
         "received_events_url" : "https://api.github.com/users/roconnor-blockstream/received_events",
         "repos_url" : "https://api.github.com/users/roconnor-blockstream/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/roconnor-blockstream/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/roconnor-blockstream/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/roconnor-blockstream"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Additionally I understand that it is the case that checking that the weights add up to 1 is not a sufficient condition to check that a string is a well-formed descriptor as it doesn't imply that the arrangement is in some DFS order. Thus I argue that my proposed scheme is better because the well-formedness of the descriptor format is a relatively simple syntactic check (that would pass [LANGSEC](https://langsec.org/) scrutiny).",
      "created_at" : "2021-03-08T19:44:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793024177",
      "id" : 793024177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzAyNDE3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T19:44:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793024177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21371712?v=4",
         "events_url" : "https://api.github.com/users/roconnor-blockstream/events{/privacy}",
         "followers_url" : "https://api.github.com/users/roconnor-blockstream/followers",
         "following_url" : "https://api.github.com/users/roconnor-blockstream/following{/other_user}",
         "gists_url" : "https://api.github.com/users/roconnor-blockstream/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/roconnor-blockstream",
         "id" : 21371712,
         "login" : "roconnor-blockstream",
         "node_id" : "MDQ6VXNlcjIxMzcxNzEy",
         "organizations_url" : "https://api.github.com/users/roconnor-blockstream/orgs",
         "received_events_url" : "https://api.github.com/users/roconnor-blockstream/received_events",
         "repos_url" : "https://api.github.com/users/roconnor-blockstream/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/roconnor-blockstream/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/roconnor-blockstream/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/roconnor-blockstream"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "+1 @roconnor-blockstream  a bracketed version seems superior to me.\r\n\r\nSome BIP-level (assuming this would eventually become a BIP) thoughts on things that might be useful in a descriptor:\r\n\r\n1. it might make sense to have a node that's a Need-To-Know-Basis Subtree. N2KBS have some danger -- e.g., could be hiding a backdoor key -- but also can be used to simplify a descriptor for e.g. inter-operating with an Escrow service that you don't want to share the whole program with.\r\n2. I think with brackets it's also easier to attach a subtree modifier. E.g., we could spec the lexing to recognize `[a-zA-Z0-9_]*(` or something similar as a subtree modifier. E.g., `[A,B]` -> `huffman[A@p,B@q]`. \r\n\r\nThe advantage of having this baked in is great for readability -- often times you might want to express a tree as:\r\n\r\n[Thing that should happen most likely, in the unlikely event that doesn't happen, Other thing that could happen, other thing we might want to do in unlikely event]\r\n\r\nwhich would -- if depth order is required -- look like:\r\n\r\n [Thing that should happen most likely, Other thing that could happen, in the unlikely event that doesn't happen, other thing we might want to do in unlikely event]\r\n\r\nWhich reminds me of exception throwing where the error handling source code can be very far away from the source of the error (bad). \r\n\r\n(something like huffman does require that we also use a sorted Tree to select clauses lexicographically after probability).\r\n3. An annotation/tag interface that would allow you to do something like `[A#{escrow, alice, bob}, B#{alice, bob}]` which when 'blind_for(\"escrow\")' is called creates the `[A, N2KB]` descriptor.\r\n4. Maybe a more general way of inserting extended structured metadata that Core will store/pass along but might not understand for supporting things like 3...\r\n5. a `opaque[]` annotation, which compiles a subtree opaquely to any parent modifiers. This would be useful in contexts where a subtree might be known entirely already by another party and we want to preserve that structure\r\n",
      "created_at" : "2021-03-08T19:50:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793027851",
      "id" : 793027851,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzAyNzg1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T19:50:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793027851",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@JeremyRubin I agree that there is a potential use for omitted subtrees, but I don't think there is much of a difference between the two approaches there? In the current approach you'd just specify the Merkle root of the omitted subtree as a \"leaf\" at the depth that root exists at.\r\n\r\nAll the other things you mention seem to be things for a policy language that get compiled to descriptors rather than descriptors themselves. Descriptors are for encoding information potentially needed by signers; I can't imagine a need for information of that kind that applies a specific subtree (rather than applying to individual leaves, or to the entire tree).\r\n\r\nThat said, it's not hard to implement a nested-bracket approach; I'll try to implement that too so people can experiment with both.\r\n\r\nMy main reason for having a slight preference for the explicit depth style is that I think `tr(KEY,[A|[[B|C]|D]])` is much harder to interpret by a human than `tr(KEY,1:A,3:B,3:C,2:D)`. In the latter it's immediately clear that B and C are the least likely paths, and A is the most likely one, for example. I agree with the argument that it's harder to write, but I'm not sure that's a big problem; for nontrivial things I suspect they'll either be written once as a template, or generated from a higher-level specification.",
      "created_at" : "2021-03-08T20:01:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793035079",
      "id" : 793035079,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzAzNTA3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T20:01:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793035079",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it just depends on what descriptors are for v.s. what people end up using them for. Of that I am unsure, but it's worthwhile to note that this is a human readable format so presumably at some point a human may look at it or want to edit it.\r\n\r\nw.r.t. annotations for \"descriptor blinding\", I actually think this is somewhat relevant. One could imagine a scenario where a branch is used both as a pre-image for a has revelation and as a script. In that case, you might not want to reveal the entire tree to someone as it might give them the ability to spend from that branch as well. \r\n\r\nw.r.t. brackets or list, it might be interesting to make the descriptors a NEWICK format subset, which seems to be the most commonly used tree format (and is a bracket based format). Then you could dump descriptors into standard tree viewing software easily. I couldn't find a good reference for tree file formats using a list/depth approach.\r\n\r\nedit: w.r.t omitted subtrees, as noted, this was just some BIP-level feedback as we look to expanding what can go into a tr descriptor, less so comments on implementation.",
      "created_at" : "2021-03-08T20:49:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793066597",
      "id" : 793066597,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzA2NjU5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T20:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793066597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@JeremyRubin @roconnor-blockstream Added a commit to switch to \"tr(KEY,{S,{{S,S},S}})\" notation. I prefer {} over [] because the latter is already in use for key origin information.\r\n\r\n",
      "created_at" : "2021-03-09T02:55:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793300643",
      "id" : 793300643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzMwMDY0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-09T02:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793300643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks!\r\n\r\nIs there any reason not to use parens ()? NEWICK compatibility would be fun.",
      "created_at" : "2021-03-09T18:57:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-794307878",
      "id" : 794307878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NDMwNzg3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-09T18:57:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/794307878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590646545"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590646545"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "don't we need to trace what type we are in if it is a paren or a {? \r\n\r\nE.g., `(}` would pass here no?",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-09T19:12:11Z",
      "diff_hunk" : "@@ -34,11 +34,11 @@ Span<const char> Expr(Span<const char>& sp)\n     int level = 0;\n     auto it = sp.begin();\n     while (it != sp.end()) {\n-        if (*it == '(') {\n+        if (*it == '(' || *it == '{') {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590646545",
      "id" : 590646545,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDY0NjU0NQ==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 37,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/spanparsing.cpp",
      "position" : 5,
      "pull_request_review_id" : 607780648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590646545",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590647440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590647440"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That doesn't matter. This function is just for finding the end of the current expression. If that expression is unbalanced, the actual parsing code will fail.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-09T19:13:36Z",
      "diff_hunk" : "@@ -34,11 +34,11 @@ Span<const char> Expr(Span<const char>& sp)\n     int level = 0;\n     auto it = sp.begin();\n     while (it != sp.end()) {\n-        if (*it == '(') {\n+        if (*it == '(' || *it == '{') {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590647440",
      "id" : 590647440,
      "in_reply_to_id" : 590646545,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDY0NzQ0MA==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 37,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/spanparsing.cpp",
      "position" : 5,
      "pull_request_review_id" : 607783724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590647440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590692235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590692235"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see. \r\n\r\nbikeshed:\r\nI think something like this could be a little clearer:\r\n\r\n```c++\r\n// This function finds the end of the current expression and returns pair(expr_span, rest_span)\r\n// trailing comma is included in the expr_span, e.g.\r\n// `<expr A>,<expr B>` would return `<expr A>,` `<expr B>` \r\nstd::pair<Span<const char>, Span<const char>> Expr(const Span<const char>& sp)\r\n{\r\n    size_t left = 0;\r\n    size_t right = 0;\r\n    auto it = sp.begin();\r\n    while (it != sp.end()) {\r\n        switch (*it) {\r\n        case '(':\r\n        case '{':\r\n            ++left;\r\n            break;\r\n        case '}':\r\n        case ')':\r\n            ++right;\r\n            break;\r\n        }\r\n        bool balanced = right == left;\r\n        // completed a Expr by matching nonzero left/right\r\n        if (balanced && right > 0) break;\r\n        // we have a balanced term as a comma separated entity\r\n        if (balanced && *it == ',') break;\r\n        ++it;\r\n    }\r\n    return std::make_pair(sp.first(it-sp.begin), sp.subspan(it-sp.begin()));\r\n}\r\n```\r\n\r\nThat said it seem peculiar to me that `,` is left on the string -- maybe preferable to trim it here?",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-09T20:22:57Z",
      "diff_hunk" : "@@ -34,11 +34,11 @@ Span<const char> Expr(Span<const char>& sp)\n     int level = 0;\n     auto it = sp.begin();\n     while (it != sp.end()) {\n-        if (*it == '(') {\n+        if (*it == '(' || *it == '{') {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590692235",
      "id" : 590692235,
      "in_reply_to_id" : 590646545,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDY5MjIzNQ==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 37,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/spanparsing.cpp",
      "position" : 5,
      "pull_request_review_id" : 607928119,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590692235",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590696727"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590696727"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "you could directly emplace_back the subdesc and then nullcheck/return nullptr, rather than needing to std::move it.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-09T20:29:56Z",
      "diff_hunk" : "@@ -1143,36 +1143,46 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         ++key_exp_index;\n         std::vector<std::unique_ptr<DescriptorImpl>> subscripts;\n         std::vector<int> depths;\n-        while (expr.size()) {\n+        if (expr.size()) {\n+            std::vector<bool> counts; //!< whether we already had an expression at that depth\n             if (!Const(\",\", expr)) {\n                 error = strprintf(\"tr: expected ',', got '%c'\", expr[0]);\n                 return nullptr;\n             }\n-            auto sarg = Expr(expr);\n-            auto colon = std::find(sarg.begin(), sarg.end(), ':');\n-            if (colon == sarg.end()) {\n-                error = \"tr() requires scripts with 'depth:' prefix\";\n-                return nullptr;\n-            }\n-            uint32_t depth;\n-            if (!ParseUInt32(std::string(sarg.begin(), colon), &depth)) {\n-                error = \"depth is not numeric in tr()\";\n-                return nullptr;\n-            }\n-            if (depth > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n-                error = strprintf(\"depth is out of range in tr() (0 <= depth <= %i)\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n-                return nullptr;\n+            while (expr.size()) {\n+                if (Const(\"{\", expr)) {\n+                    counts.push_back(false);\n+                    if (counts.size() > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n+                        error = strprintf(\"tr() supports at most %i nesting levels\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n+                        return nullptr;\n+                    }\n+                    continue;\n+                }\n+                auto sarg = Expr(expr);\n+                auto subdesc = ParseScript(key_exp_index, sarg, ParseScriptContext::P2TR, out, error);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590696727",
      "id" : 590696727,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDY5NjcyNw==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 1162,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 607943215,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590696727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590700864"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590700864"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Behavior Note:\r\n\r\nI believe this would be more robust to go before the while loop -- it shouldn't come up, because we're in a binary tree maybe -- but it would be better to explicitly check:\r\n```c++\r\nif (counts.size() && counts.back() == false) \r\n```\r\nor something like\r\n```c++\r\nif (counts.size() && counts.back() <= 2)\r\n```\r\n\r\nif we want to limit how many terms in a nest are allowed.\r\n\r\nright now this invariant is implicitly checked by the order of the code and it is non-obvious to me.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-09T20:36:30Z",
      "diff_hunk" : "@@ -1143,36 +1143,46 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         ++key_exp_index;\n         std::vector<std::unique_ptr<DescriptorImpl>> subscripts;\n         std::vector<int> depths;\n-        while (expr.size()) {\n+        if (expr.size()) {\n+            std::vector<bool> counts; //!< whether we already had an expression at that depth\n             if (!Const(\",\", expr)) {\n                 error = strprintf(\"tr: expected ',', got '%c'\", expr[0]);\n                 return nullptr;\n             }\n-            auto sarg = Expr(expr);\n-            auto colon = std::find(sarg.begin(), sarg.end(), ':');\n-            if (colon == sarg.end()) {\n-                error = \"tr() requires scripts with 'depth:' prefix\";\n-                return nullptr;\n-            }\n-            uint32_t depth;\n-            if (!ParseUInt32(std::string(sarg.begin(), colon), &depth)) {\n-                error = \"depth is not numeric in tr()\";\n-                return nullptr;\n-            }\n-            if (depth > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n-                error = strprintf(\"depth is out of range in tr() (0 <= depth <= %i)\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n-                return nullptr;\n+            while (expr.size()) {\n+                if (Const(\"{\", expr)) {\n+                    counts.push_back(false);\n+                    if (counts.size() > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n+                        error = strprintf(\"tr() supports at most %i nesting levels\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n+                        return nullptr;\n+                    }\n+                    continue;\n+                }\n+                auto sarg = Expr(expr);\n+                auto subdesc = ParseScript(key_exp_index, sarg, ParseScriptContext::P2TR, out, error);\n+                if (!subdesc) return nullptr;\n+                depths.push_back(counts.size());\n+                subscripts.push_back(std::move(subdesc));\n+                while (counts.size() && counts.back()) {\n+                    if (!Const(\"}\", expr)) {\n+                        error = strprintf(\"tr(): expected '}' after script expression\");\n+                        return nullptr;\n+                    }\n+                    counts.pop_back();\n+                }\n+                if (counts.size()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590700864",
      "id" : 590700864,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDcwMDg2NA==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 1173,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 607957463,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590700864",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590707050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590707050"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "given that this is just iterating in order, it seems like we should be able to directly feed the TaprootBuilder from the tr parsing code and do away with the intermediate vectors?",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-09T20:46:40Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590707050",
      "id" : 590707050,
      "line" : 841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDcwNzA1MA==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 841,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 350,
      "pull_request_review_id" : 607980027,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590707050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590707883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590707883"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, unfortunately this happens at a different layers. TaprootBuilder can only be invoked with concrete keys; those don't exist yet at parsing time.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-09T20:47:54Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590707883",
      "id" : 590707883,
      "in_reply_to_id" : 590707050,
      "line" : 841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDcwNzg4Mw==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 841,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 350,
      "pull_request_review_id" : 607982761,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590707883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590710550"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590710550"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see :(\r\n\r\nI guess I'll mark it as a personal todo (no need to upset a working internal representation) to brainstorm if there's a more obvious way to represent the tree than the ordered depth annotations (even though it's equivalent and unambiguous, I still find it unintuitive)",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-09T20:52:03Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590710550",
      "id" : 590710550,
      "in_reply_to_id" : 590707050,
      "line" : 841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDcxMDU1MA==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 841,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 350,
      "pull_request_review_id" : 607991740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590710550",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590718707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590718707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I like linear data structures that don't need recursion to process, when unnecessary.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-09T21:05:25Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590718707",
      "id" : 590718707,
      "in_reply_to_id" : 590707050,
      "line" : 841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDcxODcwNw==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 841,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 350,
      "pull_request_review_id" : 608020754,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590718707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590870801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590870801"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, I agree with that 100%. What I was thinking was a vec<uint128> where each bit represents a left/right on the tree. That way you can do a de-duplicate check to make sure each node is only occupied once. Then the order of the vec itself is no longer significant; it should not need to be preserved because you can sort them by value (if I'm not wrong) to get the insertion order. Depth could be computed by looking at your nearest neighbor and computing the \"divergence\" (or by encoding an extra byte to make it explicit -- unclear what is best here). \r\n\r\nWith a sorted vec, this also enables some nicesties such as using std:: binary searches for O(log(n)) lookup by tree position.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-10T00:41:34Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590870801",
      "id" : 590870801,
      "in_reply_to_id" : 590707050,
      "line" : 841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDg3MDgwMQ==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 841,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 350,
      "pull_request_review_id" : 608235359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590870801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590889090"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590889090"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@roconnor-blockstream may also like that this format should be:\r\n1. concatenative, where concat has operations that are O(n)\r\n    - merge sort then either deduplicate check or run through and add an appropriate offset to branches\r\n 2.  \"normalizable\" (shifting things down to the smallest next number) and \"prefixable\" (adding a constant to all numbers to preserve structure.\r\n ",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-10T01:08:42Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590889090",
      "id" : 590889090,
      "in_reply_to_id" : 590707050,
      "line" : 841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDg4OTA5MA==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 841,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 350,
      "pull_request_review_id" : 608247096,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590889090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590892912"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590892912"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why do the properties of this internal, temporary, data structure that purely used during the construction of a scriptPubKey matter? It does what it is supposed to do. If we ever need other operations on it, something else can be considered.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-10T01:14:59Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590892912",
      "id" : 590892912,
      "in_reply_to_id" : 590707050,
      "line" : 841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDg5MjkxMg==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 841,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 350,
      "pull_request_review_id" : 608249733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590892912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r591123497"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591123497"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I find the code really hard to understand. Conceivably if we want people to review/audit it, a conceptually simpler representation & set of algorithms should be easier to understand? The above suggestion may or may not be it, but I haven't been able to fully work out how the algorithms this PR is currently using work even after staring at them for a bit.\r\n\r\nthe properties matter less.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-10T06:54:15Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r591123497",
      "id" : 591123497,
      "in_reply_to_id" : 590707050,
      "line" : 841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTEyMzQ5Nw==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 841,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 350,
      "pull_request_review_id" : 608380606,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591123497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r591138116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591138116"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'll try to add more comments.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-10T07:12:49Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r591138116",
      "id" : 591138116,
      "in_reply_to_id" : 590707050,
      "line" : 841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTEzODExNg==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 841,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 350,
      "pull_request_review_id" : 608390585,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591138116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592082640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592082640"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: in d5a0dce8fe40153b07ec6e882e8b1568b05e3905: we can use `std::make_unique` in new code.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-11T05:48:46Z",
      "diff_hunk" : "@@ -886,6 +936,13 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(uint32_t key_exp_index, const S\n                     error = \"Uncompressed keys are not allowed\";\n                     return nullptr;\n                 }\n+            } else if (data.size() == 32 && ctx == ParseScriptContext::P2TR) {\n+                unsigned char fullkey[33] = {0x02};\n+                std::copy(data.begin(), data.end(), fullkey + 1);\n+                pubkey.Set(std::begin(fullkey), std::end(fullkey));\n+                if (pubkey.IsFullyValid()) {\n+                    return MakeUnique<ConstPubkeyProvider>(key_exp_index, pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592082640",
      "id" : 592082640,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjA4MjY0MA==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 944,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 609412406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592082640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592738143"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592738143"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's how the current span-based parsing works. I think discussions about improvements to that are interesting but out of scope for this PR.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-11T21:34:35Z",
      "diff_hunk" : "@@ -34,11 +34,11 @@ Span<const char> Expr(Span<const char>& sp)\n     int level = 0;\n     auto it = sp.begin();\n     while (it != sp.end()) {\n-        if (*it == '(') {\n+        if (*it == '(' || *it == '{') {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592738143",
      "id" : 592738143,
      "in_reply_to_id" : 590646545,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjczODE0Mw==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 37,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/spanparsing.cpp",
      "position" : 5,
      "pull_request_review_id" : 610245177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592738143",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825162"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've restructured things a bit, and added a bunch of comments. Does this look better?",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-12T00:26:15Z",
      "diff_hunk" : "@@ -1143,36 +1143,46 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         ++key_exp_index;\n         std::vector<std::unique_ptr<DescriptorImpl>> subscripts;\n         std::vector<int> depths;\n-        while (expr.size()) {\n+        if (expr.size()) {\n+            std::vector<bool> counts; //!< whether we already had an expression at that depth\n             if (!Const(\",\", expr)) {\n                 error = strprintf(\"tr: expected ',', got '%c'\", expr[0]);\n                 return nullptr;\n             }\n-            auto sarg = Expr(expr);\n-            auto colon = std::find(sarg.begin(), sarg.end(), ':');\n-            if (colon == sarg.end()) {\n-                error = \"tr() requires scripts with 'depth:' prefix\";\n-                return nullptr;\n-            }\n-            uint32_t depth;\n-            if (!ParseUInt32(std::string(sarg.begin(), colon), &depth)) {\n-                error = \"depth is not numeric in tr()\";\n-                return nullptr;\n-            }\n-            if (depth > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n-                error = strprintf(\"depth is out of range in tr() (0 <= depth <= %i)\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n-                return nullptr;\n+            while (expr.size()) {\n+                if (Const(\"{\", expr)) {\n+                    counts.push_back(false);\n+                    if (counts.size() > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n+                        error = strprintf(\"tr() supports at most %i nesting levels\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n+                        return nullptr;\n+                    }\n+                    continue;\n+                }\n+                auto sarg = Expr(expr);\n+                auto subdesc = ParseScript(key_exp_index, sarg, ParseScriptContext::P2TR, out, error);\n+                if (!subdesc) return nullptr;\n+                depths.push_back(counts.size());\n+                subscripts.push_back(std::move(subdesc));\n+                while (counts.size() && counts.back()) {\n+                    if (!Const(\"}\", expr)) {\n+                        error = strprintf(\"tr(): expected '}' after script expression\");\n+                        return nullptr;\n+                    }\n+                    counts.pop_back();\n+                }\n+                if (counts.size()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825162",
      "id" : 592825162,
      "in_reply_to_id" : 590700864,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjgyNTE2Mg==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 1173,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 610354035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825332"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a big comment explaining the data structure in script/standard.h. WDYT?",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-12T00:26:42Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825332",
      "id" : 592825332,
      "in_reply_to_id" : 590707050,
      "line" : 841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjgyNTMzMg==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 841,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 350,
      "pull_request_review_id" : 610354234,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825367"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-12T00:26:48Z",
      "diff_hunk" : "@@ -886,6 +936,13 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(uint32_t key_exp_index, const S\n                     error = \"Uncompressed keys are not allowed\";\n                     return nullptr;\n                 }\n+            } else if (data.size() == 32 && ctx == ParseScriptContext::P2TR) {\n+                unsigned char fullkey[33] = {0x02};\n+                std::copy(data.begin(), data.end(), fullkey + 1);\n+                pubkey.Set(std::begin(fullkey), std::end(fullkey));\n+                if (pubkey.IsFullyValid()) {\n+                    return MakeUnique<ConstPubkeyProvider>(key_exp_index, pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825367",
      "id" : 592825367,
      "in_reply_to_id" : 592082640,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjgyNTM2Nw==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 944,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 610354279,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Switched to the `tr(KEY,{{S1,S2},{{...)` style descriptors.",
      "created_at" : "2021-03-12T00:27:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-797147204",
      "id" : 797147204,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzE0NzIwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T00:27:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797147204",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825770"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-12T00:27:43Z",
      "diff_hunk" : "@@ -1143,36 +1143,46 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         ++key_exp_index;\n         std::vector<std::unique_ptr<DescriptorImpl>> subscripts;\n         std::vector<int> depths;\n-        while (expr.size()) {\n+        if (expr.size()) {\n+            std::vector<bool> counts; //!< whether we already had an expression at that depth\n             if (!Const(\",\", expr)) {\n                 error = strprintf(\"tr: expected ',', got '%c'\", expr[0]);\n                 return nullptr;\n             }\n-            auto sarg = Expr(expr);\n-            auto colon = std::find(sarg.begin(), sarg.end(), ':');\n-            if (colon == sarg.end()) {\n-                error = \"tr() requires scripts with 'depth:' prefix\";\n-                return nullptr;\n-            }\n-            uint32_t depth;\n-            if (!ParseUInt32(std::string(sarg.begin(), colon), &depth)) {\n-                error = \"depth is not numeric in tr()\";\n-                return nullptr;\n-            }\n-            if (depth > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n-                error = strprintf(\"depth is out of range in tr() (0 <= depth <= %i)\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n-                return nullptr;\n+            while (expr.size()) {\n+                if (Const(\"{\", expr)) {\n+                    counts.push_back(false);\n+                    if (counts.size() > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n+                        error = strprintf(\"tr() supports at most %i nesting levels\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n+                        return nullptr;\n+                    }\n+                    continue;\n+                }\n+                auto sarg = Expr(expr);\n+                auto subdesc = ParseScript(key_exp_index, sarg, ParseScriptContext::P2TR, out, error);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825770",
      "id" : 592825770,
      "in_reply_to_id" : 590696727,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjgyNTc3MA==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 1162,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 610354693,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825770",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-12T07:41:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-797300395",
      "id" : 797300395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzMwMDM5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T07:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797300395",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Switched to the `tr(KEY,{{S1,S2},{{...)` style descriptors.\r\n\r\nCan you clarify this, maybe with a simple example, in the PR description or in [descriptors.md](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md)?",
      "created_at" : "2021-03-12T08:24:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-797321617",
      "id" : 797321617,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzMyMTYxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T08:24:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797321617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors Rebased, and\r\n\r\n> Can you clarify this, maybe with a simple example, in the PR description or in descriptors.md?\r\n\r\ndone.\r\n",
      "created_at" : "2021-03-12T09:23:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-797357641",
      "id" : 797357641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzM1NzY0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T09:23:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797357641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r593043201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593043201"
         }
      },
      "author_association" : "MEMBER",
      "body" : "So this means you can do, `tr(KEY,{A})`, `tr(KEY,{A,B})`, `tr(KEY,{A,{B,C}})`, etc? So a `TREE` must have two elements, unless it's at the top?\r\n\r\nMaybe also point out that some taproot features have yet to be implemented, so the only script you can put in a `TREE` element is `pk(KEY)`.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-12T09:49:27Z",
      "diff_hunk" : "@@ -80,12 +83,17 @@ Descriptors consist of several types of expressions. The top level expression is\n - Followed by the actual key, which is either:\n   - Hex encoded public keys (either 66 characters starting with `02` or `03` for a compressed pubkey, or 130 characters starting with `04` for an uncompressed pubkey).\n     - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+    - Inside `tr`, x-only pubkeys are also permitted (64 hex characters).\n   - [WIF](https://en.bitcoin.it/wiki/Wallet_import_format) encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n   - `xpub` encoded extended public key or `xprv` encoded extended private key (as defined in [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)).\n     - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n     - Optionally followed by a single `/*` or `/*'` final step to denote all (direct) unhardened or hardened children.\n     - The usage of hardened derivation steps requires providing the private key.\n \n+`TREE` expressions:\n+- any `SCRIPT` expression\n+- An open brace `{`, a `TREE` expression, a comma `,`, a `TREE` expression, and a closing brace `}`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r593043201",
      "id" : 593043201,
      "line" : 95,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzA0MzIwMQ==",
      "original_commit_id" : "ee7b9831ad2faefb49347f00053269a227423b23",
      "original_line" : 95,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : 49,
      "pull_request_review_id" : 610614777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593043201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r593313134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593313134"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, `{A}` is not a valid TREE. `A` is.\n\nSo you'd use `tr(KEY,A)` but `tr(KEY,{A,B})`. There is nothing special about the top level.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-12T16:46:05Z",
      "diff_hunk" : "@@ -80,12 +83,17 @@ Descriptors consist of several types of expressions. The top level expression is\n - Followed by the actual key, which is either:\n   - Hex encoded public keys (either 66 characters starting with `02` or `03` for a compressed pubkey, or 130 characters starting with `04` for an uncompressed pubkey).\n     - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+    - Inside `tr`, x-only pubkeys are also permitted (64 hex characters).\n   - [WIF](https://en.bitcoin.it/wiki/Wallet_import_format) encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n   - `xpub` encoded extended public key or `xprv` encoded extended private key (as defined in [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)).\n     - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n     - Optionally followed by a single `/*` or `/*'` final step to denote all (direct) unhardened or hardened children.\n     - The usage of hardened derivation steps requires providing the private key.\n \n+`TREE` expressions:\n+- any `SCRIPT` expression\n+- An open brace `{`, a `TREE` expression, a comma `,`, a `TREE` expression, and a closing brace `}`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r593313134",
      "id" : 593313134,
      "in_reply_to_id" : 593043201,
      "line" : 95,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMxMzEzNA==",
      "original_commit_id" : "ee7b9831ad2faefb49347f00053269a227423b23",
      "original_line" : 95,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : 49,
      "pull_request_review_id" : 610969991,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593313134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nðµï¸ @achow101 @harding have been requested to review this pull request as specified in the REVIEWERS file.",
      "created_at" : "2021-03-15T16:49:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-799573948",
      "id" : 799573948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5OTU3Mzk0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-15T16:49:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/799573948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594694587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594694587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit 8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8 \"Add tr() descriptor (derivation only, no signing)\"\r\n\r\nThis looks like the original syntax and not the syntax with the braces.\r\n\r\nSince this function is used as part of writing the descriptor to the wallet, any wallet containing a descriptor with scripts will currently have an invalid descriptor and cannot be loaded again.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-15T21:25:58Z",
      "diff_hunk" : "@@ -817,6 +827,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);\n+        }\n+        if (!builder.IsComplete()) return {};\n+        assert(keys.size() == 1);\n+        XOnlyPubKey xpk(keys[0]);\n+        if (!xpk.IsFullyValid()) return {};\n+        builder.Finalize(xpk);\n+        return Vector(GetScriptForDestination(builder.GetOutput()));\n+    }\n+    bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, bool priv, bool normalized, size_t&) const override\n+    {\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            ret += strprintf(\",%i:\", m_depths[pos]);\n+            std::string tmp;\n+            if (!m_subdescriptor_args[pos]->ToStringHelper(arg, tmp, priv, normalized)) return false;\n+            ret += std::move(tmp);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594694587",
      "id" : 594694587,
      "line" : 864,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY5NDU4Nw==",
      "original_commit_id" : "8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8",
      "original_line" : 864,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 373,
      "pull_request_review_id" : 612656927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594694587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594695684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594695684"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit 8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8 \"Add tr() descriptor (derivation only, no signing)\"\r\n\r\nI think it would be better to default `xonly = false` so that existing callers don't need to change, and this is kind of what is expected for this descriptor. Then nested taproot things can set `xonly` as they need.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-15T21:27:45Z",
      "diff_hunk" : "@@ -696,10 +696,20 @@ class RawDescriptor final : public DescriptorImpl\n /** A parsed pk(P) descriptor. */\n class PKDescriptor final : public DescriptorImpl\n {\n+private:\n+    const bool m_xonly;\n protected:\n-    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider&) const override { return Vector(GetScriptForRawPubKey(keys[0])); }\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider&) const override\n+    {\n+        if (m_xonly) {\n+            CScript script = CScript() << ToByteVector(XOnlyPubKey(keys[0])) << OP_CHECKSIG;\n+            return Vector(std::move(script));\n+        } else {\n+            return Vector(GetScriptForRawPubKey(keys[0]));\n+        }\n+    }\n public:\n-    PKDescriptor(std::unique_ptr<PubkeyProvider> prov) : DescriptorImpl(Vector(std::move(prov)), \"pk\") {}\n+    PKDescriptor(std::unique_ptr<PubkeyProvider> prov, bool xonly) : DescriptorImpl(Vector(std::move(prov)), \"pk\"), m_xonly(xonly) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594695684",
      "id" : 594695684,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY5NTY4NA==",
      "original_commit_id" : "8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8",
      "original_line" : 713,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 612656927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594695684",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594718159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594718159"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 1d3cc29fb86b614b76b4d97a5adab7f903fc3020 \"Construct and use PrecomputedTransactionData in PSBT signing\"\r\n\r\nWe should avoid iterating all of the PSBT inputs again when we are signing each input. Instead we should compute the `PrecomputedTransactionData` in the caller and pass that into `SignPSBTInput`.\r\n\r\nThis can be done in `CWallet::FillPSBT` where we are iterating the inputs anyways to get their previous txs from the wallet. We could be constructing the `PrecomputedTransactionData` at that time and then passing it into `FIllPSBT` which then passes it to `SignPSBTInput`.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-15T22:11:14Z",
      "diff_hunk" : "@@ -240,37 +240,51 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n     SignatureData sigdata;\n     input.FillSignatureData(sigdata);\n \n-    // Get UTXO\n+    // Get UTXOs\n     bool require_witness_sig = false;\n-    CTxOut utxo;\n-\n-    if (input.non_witness_utxo) {\n-        // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.\n-        COutPoint prevout = tx.vin[index].prevout;\n-        if (prevout.n >= input.non_witness_utxo->vout.size()) {\n-            return false;\n+    bool have_all_spent_outputs = true;\n+    std::vector<CTxOut> utxos(tx.vin.size());\n+    for (size_t idx = 0; idx < tx.vin.size(); ++idx) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594718159",
      "id" : 594718159,
      "line" : 247,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDcxODE1OQ==",
      "original_commit_id" : "1d3cc29fb86b614b76b4d97a5adab7f903fc3020",
      "original_line" : 247,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/psbt.cpp",
      "position" : 16,
      "pull_request_review_id" : 612656927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594718159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594882760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594882760"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice catch. Fixed, and added tests for roundtrippability of the descriptors.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-16T06:02:20Z",
      "diff_hunk" : "@@ -817,6 +827,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);\n+        }\n+        if (!builder.IsComplete()) return {};\n+        assert(keys.size() == 1);\n+        XOnlyPubKey xpk(keys[0]);\n+        if (!xpk.IsFullyValid()) return {};\n+        builder.Finalize(xpk);\n+        return Vector(GetScriptForDestination(builder.GetOutput()));\n+    }\n+    bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, bool priv, bool normalized, size_t&) const override\n+    {\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            ret += strprintf(\",%i:\", m_depths[pos]);\n+            std::string tmp;\n+            if (!m_subdescriptor_args[pos]->ToStringHelper(arg, tmp, priv, normalized)) return false;\n+            ret += std::move(tmp);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594882760",
      "id" : 594882760,
      "in_reply_to_id" : 594694587,
      "line" : 864,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDg4Mjc2MA==",
      "original_commit_id" : "8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8",
      "original_line" : 864,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 373,
      "pull_request_review_id" : 612876687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594882760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r595438349"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595438349"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "e231aa4daa7407dea3a236eac224d74715423c98",
      "created_at" : "2021-03-16T18:29:21Z",
      "diff_hunk" : "@@ -696,10 +696,20 @@ class RawDescriptor final : public DescriptorImpl\n /** A parsed pk(P) descriptor. */\n class PKDescriptor final : public DescriptorImpl\n {\n+private:\n+    const bool m_xonly;\n protected:\n-    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider&) const override { return Vector(GetScriptForRawPubKey(keys[0])); }\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider&) const override\n+    {\n+        if (m_xonly) {\n+            CScript script = CScript() << ToByteVector(XOnlyPubKey(keys[0])) << OP_CHECKSIG;\n+            return Vector(std::move(script));\n+        } else {\n+            return Vector(GetScriptForRawPubKey(keys[0]));\n+        }\n+    }\n public:\n-    PKDescriptor(std::unique_ptr<PubkeyProvider> prov) : DescriptorImpl(Vector(std::move(prov)), \"pk\") {}\n+    PKDescriptor(std::unique_ptr<PubkeyProvider> prov, bool xonly) : DescriptorImpl(Vector(std::move(prov)), \"pk\"), m_xonly(xonly) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r595438349",
      "id" : 595438349,
      "in_reply_to_id" : 594695684,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTQzODM0OQ==",
      "original_commit_id" : "8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8",
      "original_line" : 713,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 613593688,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:29:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595438349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
