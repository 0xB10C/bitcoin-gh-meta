[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22166 (Add support for inferring tr() descriptors by sipa)\n* #22156 (Allow tr() import to privkey wallets only when Taproot is active by achow101)\n* #21702 (Implement BIP-119 Validation (CheckTemplateVerify) by JeremyRubin)\n* #21576 (rpc: bumpfee signer support by Sjors)\n* #21283 (Implement BIP 370 PSBTv2 by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-03-04T23:19:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-791023366",
      "id" : 791023366,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTAyMzM2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-07T00:34:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791023366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-05T02:40:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-791104360",
      "id" : 791104360,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTEwNDM2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-05T02:40:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791104360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on top of #21246, renamed \"inner key\" everywhere in this PR to \"internal key\" as well, and added very basic PSBT support (you can have a watchonly tr(KEY) wallet now, and get it signed by an offline version that has the private key).",
      "created_at" : "2021-03-06T03:17:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-791851695",
      "id" : 791851695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTg1MTY5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-06T03:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791851695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK ð",
      "created_at" : "2021-03-07T18:34:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-792330093",
      "id" : 792330093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MjMzMDA5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-07T18:34:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792330093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "TBH, I find your \"must be specified in depth-first search order\" somewhat confusing.  As an alternative syntax I suggest simply using some notation for a binary or.  For example.\r\n\r\n*  `tr(KEY)`: only taproot output key known (or is it an internal pubkey with common NUMS tweak??)\r\n*  `tr(KEY,A)`: internal pubkey with a single script `A` at level 0.\r\n*  `tr(KEY,[A|B])`: internal pubkey with a two scripts, `A` and `B` at level 1.\r\n*  `tr(KEY.[[A|B]|C])`: internal pubkey with a two scripts, `A` and `B` at level 2, and a third script at level 1.\r\n*  `tr(KEY.[A|[B|C]])`: same as above except for `A` is at level 1 and `C` is at level 2 instead.\r\n*  `tr(KEY.[[B|C]|A])`: equal to the above descriptor.\r\n*  `tr(KEY.[[A|B]|[C|D]])`: internal pubkey with a four scripts, all at level 2.\r\n*  `tr(KEY.[[A|C]|[B|D]])`: same four scripts as above, again all at level 2 but now associated differently which makes for a different tweak.\r\n*  `tr(KEY.[A|[[B|C]|D]])`: same four scripts as above, but no longer all at the same level.\r\n\r\nMy claimed advantages are the implicitness of the depth, and clearer notation indicating how the scripts are associated amongst each other.\r\n\r\nThe notation above is just an example and don't care too much about the specific syntax.\r\n\r\n---\r\n\r\nOther things to include in the list of features to be added later, a MerkleRoot descriptor for fixed but unknown branches.\r\n\r\n",
      "created_at" : "2021-03-08T14:32:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-792794101",
      "id" : 792794101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5Mjc5NDEwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T14:39:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792794101",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21371712?v=4",
         "events_url" : "https://api.github.com/users/roconnor-blockstream/events{/privacy}",
         "followers_url" : "https://api.github.com/users/roconnor-blockstream/followers",
         "following_url" : "https://api.github.com/users/roconnor-blockstream/following{/other_user}",
         "gists_url" : "https://api.github.com/users/roconnor-blockstream/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/roconnor-blockstream",
         "id" : 21371712,
         "login" : "roconnor-blockstream",
         "node_id" : "MDQ6VXNlcjIxMzcxNzEy",
         "organizations_url" : "https://api.github.com/users/roconnor-blockstream/orgs",
         "received_events_url" : "https://api.github.com/users/roconnor-blockstream/received_events",
         "repos_url" : "https://api.github.com/users/roconnor-blockstream/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/roconnor-blockstream/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/roconnor-blockstream/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/roconnor-blockstream"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@roconnor-blockstream Yeah, I considered something like that, and am open to it. Both notations are equivalent in that you can fairly easily convert in both directions between them (counting bracing level in yours corresponds to the depth specified explicitly in mine, with leaves ultimately listed in the same order). The advantage I see to the current one is that I think it's a bit more readable, avoiding the need to go count braces to see relative depth of leaves. Yours is perhaps a bit easier to write (but maybe that's not something we really expect humans to do much for nontrivial cases).\r\n\r\nThere are many more variations possible. One extreme would be permitting arbitrary weights for every node, and have the descriptor expansion convert it to a Huffman tree. I'd prefer not to do this because it's adding information that can't be inferred back from the script tree it is converted to.",
      "created_at" : "2021-03-08T18:17:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-792966574",
      "id" : 792966574,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5Mjk2NjU3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T18:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792966574",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Right.  My concern with explicit levels is that it is so easy to violate the invariant that the sum of the weights has to add up to 1, and you cannot really splice together subexpressions to compose a descriptor from fragments without going through and globally adjusting all the levels to be sane.",
      "created_at" : "2021-03-08T18:25:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-792972451",
      "id" : 792972451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5Mjk3MjQ1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T18:25:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/792972451",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21371712?v=4",
         "events_url" : "https://api.github.com/users/roconnor-blockstream/events{/privacy}",
         "followers_url" : "https://api.github.com/users/roconnor-blockstream/followers",
         "following_url" : "https://api.github.com/users/roconnor-blockstream/following{/other_user}",
         "gists_url" : "https://api.github.com/users/roconnor-blockstream/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/roconnor-blockstream",
         "id" : 21371712,
         "login" : "roconnor-blockstream",
         "node_id" : "MDQ6VXNlcjIxMzcxNzEy",
         "organizations_url" : "https://api.github.com/users/roconnor-blockstream/orgs",
         "received_events_url" : "https://api.github.com/users/roconnor-blockstream/received_events",
         "repos_url" : "https://api.github.com/users/roconnor-blockstream/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/roconnor-blockstream/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/roconnor-blockstream/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/roconnor-blockstream"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Additionally I understand that it is the case that checking that the weights add up to 1 is not a sufficient condition to check that a string is a well-formed descriptor as it doesn't imply that the arrangement is in some DFS order. Thus I argue that my proposed scheme is better because the well-formedness of the descriptor format is a relatively simple syntactic check (that would pass [LANGSEC](https://langsec.org/) scrutiny).",
      "created_at" : "2021-03-08T19:44:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793024177",
      "id" : 793024177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzAyNDE3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T19:44:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793024177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21371712?v=4",
         "events_url" : "https://api.github.com/users/roconnor-blockstream/events{/privacy}",
         "followers_url" : "https://api.github.com/users/roconnor-blockstream/followers",
         "following_url" : "https://api.github.com/users/roconnor-blockstream/following{/other_user}",
         "gists_url" : "https://api.github.com/users/roconnor-blockstream/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/roconnor-blockstream",
         "id" : 21371712,
         "login" : "roconnor-blockstream",
         "node_id" : "MDQ6VXNlcjIxMzcxNzEy",
         "organizations_url" : "https://api.github.com/users/roconnor-blockstream/orgs",
         "received_events_url" : "https://api.github.com/users/roconnor-blockstream/received_events",
         "repos_url" : "https://api.github.com/users/roconnor-blockstream/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/roconnor-blockstream/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/roconnor-blockstream/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/roconnor-blockstream"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "+1 @roconnor-blockstream  a bracketed version seems superior to me.\r\n\r\nSome BIP-level (assuming this would eventually become a BIP) thoughts on things that might be useful in a descriptor:\r\n\r\n1. it might make sense to have a node that's a Need-To-Know-Basis Subtree. N2KBS have some danger -- e.g., could be hiding a backdoor key -- but also can be used to simplify a descriptor for e.g. inter-operating with an Escrow service that you don't want to share the whole program with.\r\n2. I think with brackets it's also easier to attach a subtree modifier. E.g., we could spec the lexing to recognize `[a-zA-Z0-9_]*(` or something similar as a subtree modifier. E.g., `[A,B]` -> `huffman[A@p,B@q]`. \r\n\r\nThe advantage of having this baked in is great for readability -- often times you might want to express a tree as:\r\n\r\n[Thing that should happen most likely, in the unlikely event that doesn't happen, Other thing that could happen, other thing we might want to do in unlikely event]\r\n\r\nwhich would -- if depth order is required -- look like:\r\n\r\n [Thing that should happen most likely, Other thing that could happen, in the unlikely event that doesn't happen, other thing we might want to do in unlikely event]\r\n\r\nWhich reminds me of exception throwing where the error handling source code can be very far away from the source of the error (bad). \r\n\r\n(something like huffman does require that we also use a sorted Tree to select clauses lexicographically after probability).\r\n3. An annotation/tag interface that would allow you to do something like `[A#{escrow, alice, bob}, B#{alice, bob}]` which when 'blind_for(\"escrow\")' is called creates the `[A, N2KB]` descriptor.\r\n4. Maybe a more general way of inserting extended structured metadata that Core will store/pass along but might not understand for supporting things like 3...\r\n5. a `opaque[]` annotation, which compiles a subtree opaquely to any parent modifiers. This would be useful in contexts where a subtree might be known entirely already by another party and we want to preserve that structure\r\n",
      "created_at" : "2021-03-08T19:50:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793027851",
      "id" : 793027851,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzAyNzg1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T19:50:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793027851",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@JeremyRubin I agree that there is a potential use for omitted subtrees, but I don't think there is much of a difference between the two approaches there? In the current approach you'd just specify the Merkle root of the omitted subtree as a \"leaf\" at the depth that root exists at.\r\n\r\nAll the other things you mention seem to be things for a policy language that get compiled to descriptors rather than descriptors themselves. Descriptors are for encoding information potentially needed by signers; I can't imagine a need for information of that kind that applies a specific subtree (rather than applying to individual leaves, or to the entire tree).\r\n\r\nThat said, it's not hard to implement a nested-bracket approach; I'll try to implement that too so people can experiment with both.\r\n\r\nMy main reason for having a slight preference for the explicit depth style is that I think `tr(KEY,[A|[[B|C]|D]])` is much harder to interpret by a human than `tr(KEY,1:A,3:B,3:C,2:D)`. In the latter it's immediately clear that B and C are the least likely paths, and A is the most likely one, for example. I agree with the argument that it's harder to write, but I'm not sure that's a big problem; for nontrivial things I suspect they'll either be written once as a template, or generated from a higher-level specification.",
      "created_at" : "2021-03-08T20:01:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793035079",
      "id" : 793035079,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzAzNTA3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T20:01:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793035079",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it just depends on what descriptors are for v.s. what people end up using them for. Of that I am unsure, but it's worthwhile to note that this is a human readable format so presumably at some point a human may look at it or want to edit it.\r\n\r\nw.r.t. annotations for \"descriptor blinding\", I actually think this is somewhat relevant. One could imagine a scenario where a branch is used both as a pre-image for a has revelation and as a script. In that case, you might not want to reveal the entire tree to someone as it might give them the ability to spend from that branch as well. \r\n\r\nw.r.t. brackets or list, it might be interesting to make the descriptors a NEWICK format subset, which seems to be the most commonly used tree format (and is a bracket based format). Then you could dump descriptors into standard tree viewing software easily. I couldn't find a good reference for tree file formats using a list/depth approach.\r\n\r\nedit: w.r.t omitted subtrees, as noted, this was just some BIP-level feedback as we look to expanding what can go into a tr descriptor, less so comments on implementation.",
      "created_at" : "2021-03-08T20:49:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793066597",
      "id" : 793066597,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzA2NjU5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-08T20:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793066597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@JeremyRubin @roconnor-blockstream Added a commit to switch to \"tr(KEY,{S,{{S,S},S}})\" notation. I prefer {} over [] because the latter is already in use for key origin information.\r\n\r\n",
      "created_at" : "2021-03-09T02:55:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793300643",
      "id" : 793300643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MzMwMDY0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-09T02:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793300643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks!\r\n\r\nIs there any reason not to use parens ()? NEWICK compatibility would be fun.",
      "created_at" : "2021-03-09T18:57:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-794307878",
      "id" : 794307878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NDMwNzg3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-09T18:57:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/794307878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590646545"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590646545"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "don't we need to trace what type we are in if it is a paren or a {? \r\n\r\nE.g., `(}` would pass here no?",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-09T19:12:11Z",
      "diff_hunk" : "@@ -34,11 +34,11 @@ Span<const char> Expr(Span<const char>& sp)\n     int level = 0;\n     auto it = sp.begin();\n     while (it != sp.end()) {\n-        if (*it == '(') {\n+        if (*it == '(' || *it == '{') {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590646545",
      "id" : 590646545,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDY0NjU0NQ==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 37,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/spanparsing.cpp",
      "position" : 5,
      "pull_request_review_id" : 607780648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590646545",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590647440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590647440"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That doesn't matter. This function is just for finding the end of the current expression. If that expression is unbalanced, the actual parsing code will fail.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-09T19:13:36Z",
      "diff_hunk" : "@@ -34,11 +34,11 @@ Span<const char> Expr(Span<const char>& sp)\n     int level = 0;\n     auto it = sp.begin();\n     while (it != sp.end()) {\n-        if (*it == '(') {\n+        if (*it == '(' || *it == '{') {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590647440",
      "id" : 590647440,
      "in_reply_to_id" : 590646545,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDY0NzQ0MA==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 37,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/spanparsing.cpp",
      "position" : 5,
      "pull_request_review_id" : 607783724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590647440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590692235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590692235"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see. \r\n\r\nbikeshed:\r\nI think something like this could be a little clearer:\r\n\r\n```c++\r\n// This function finds the end of the current expression and returns pair(expr_span, rest_span)\r\n// trailing comma is included in the expr_span, e.g.\r\n// `<expr A>,<expr B>` would return `<expr A>,` `<expr B>` \r\nstd::pair<Span<const char>, Span<const char>> Expr(const Span<const char>& sp)\r\n{\r\n    size_t left = 0;\r\n    size_t right = 0;\r\n    auto it = sp.begin();\r\n    while (it != sp.end()) {\r\n        switch (*it) {\r\n        case '(':\r\n        case '{':\r\n            ++left;\r\n            break;\r\n        case '}':\r\n        case ')':\r\n            ++right;\r\n            break;\r\n        }\r\n        bool balanced = right == left;\r\n        // completed a Expr by matching nonzero left/right\r\n        if (balanced && right > 0) break;\r\n        // we have a balanced term as a comma separated entity\r\n        if (balanced && *it == ',') break;\r\n        ++it;\r\n    }\r\n    return std::make_pair(sp.first(it-sp.begin), sp.subspan(it-sp.begin()));\r\n}\r\n```\r\n\r\nThat said it seem peculiar to me that `,` is left on the string -- maybe preferable to trim it here?",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-09T20:22:57Z",
      "diff_hunk" : "@@ -34,11 +34,11 @@ Span<const char> Expr(Span<const char>& sp)\n     int level = 0;\n     auto it = sp.begin();\n     while (it != sp.end()) {\n-        if (*it == '(') {\n+        if (*it == '(' || *it == '{') {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590692235",
      "id" : 590692235,
      "in_reply_to_id" : 590646545,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDY5MjIzNQ==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 37,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/spanparsing.cpp",
      "position" : 5,
      "pull_request_review_id" : 607928119,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590692235",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590696727"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590696727"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "you could directly emplace_back the subdesc and then nullcheck/return nullptr, rather than needing to std::move it.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-09T20:29:56Z",
      "diff_hunk" : "@@ -1143,36 +1143,46 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         ++key_exp_index;\n         std::vector<std::unique_ptr<DescriptorImpl>> subscripts;\n         std::vector<int> depths;\n-        while (expr.size()) {\n+        if (expr.size()) {\n+            std::vector<bool> counts; //!< whether we already had an expression at that depth\n             if (!Const(\",\", expr)) {\n                 error = strprintf(\"tr: expected ',', got '%c'\", expr[0]);\n                 return nullptr;\n             }\n-            auto sarg = Expr(expr);\n-            auto colon = std::find(sarg.begin(), sarg.end(), ':');\n-            if (colon == sarg.end()) {\n-                error = \"tr() requires scripts with 'depth:' prefix\";\n-                return nullptr;\n-            }\n-            uint32_t depth;\n-            if (!ParseUInt32(std::string(sarg.begin(), colon), &depth)) {\n-                error = \"depth is not numeric in tr()\";\n-                return nullptr;\n-            }\n-            if (depth > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n-                error = strprintf(\"depth is out of range in tr() (0 <= depth <= %i)\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n-                return nullptr;\n+            while (expr.size()) {\n+                if (Const(\"{\", expr)) {\n+                    counts.push_back(false);\n+                    if (counts.size() > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n+                        error = strprintf(\"tr() supports at most %i nesting levels\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n+                        return nullptr;\n+                    }\n+                    continue;\n+                }\n+                auto sarg = Expr(expr);\n+                auto subdesc = ParseScript(key_exp_index, sarg, ParseScriptContext::P2TR, out, error);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590696727",
      "id" : 590696727,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDY5NjcyNw==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 1162,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 607943215,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590696727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590700864"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590700864"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Behavior Note:\r\n\r\nI believe this would be more robust to go before the while loop -- it shouldn't come up, because we're in a binary tree maybe -- but it would be better to explicitly check:\r\n```c++\r\nif (counts.size() && counts.back() == false) \r\n```\r\nor something like\r\n```c++\r\nif (counts.size() && counts.back() <= 2)\r\n```\r\n\r\nif we want to limit how many terms in a nest are allowed.\r\n\r\nright now this invariant is implicitly checked by the order of the code and it is non-obvious to me.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-09T20:36:30Z",
      "diff_hunk" : "@@ -1143,36 +1143,46 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         ++key_exp_index;\n         std::vector<std::unique_ptr<DescriptorImpl>> subscripts;\n         std::vector<int> depths;\n-        while (expr.size()) {\n+        if (expr.size()) {\n+            std::vector<bool> counts; //!< whether we already had an expression at that depth\n             if (!Const(\",\", expr)) {\n                 error = strprintf(\"tr: expected ',', got '%c'\", expr[0]);\n                 return nullptr;\n             }\n-            auto sarg = Expr(expr);\n-            auto colon = std::find(sarg.begin(), sarg.end(), ':');\n-            if (colon == sarg.end()) {\n-                error = \"tr() requires scripts with 'depth:' prefix\";\n-                return nullptr;\n-            }\n-            uint32_t depth;\n-            if (!ParseUInt32(std::string(sarg.begin(), colon), &depth)) {\n-                error = \"depth is not numeric in tr()\";\n-                return nullptr;\n-            }\n-            if (depth > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n-                error = strprintf(\"depth is out of range in tr() (0 <= depth <= %i)\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n-                return nullptr;\n+            while (expr.size()) {\n+                if (Const(\"{\", expr)) {\n+                    counts.push_back(false);\n+                    if (counts.size() > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n+                        error = strprintf(\"tr() supports at most %i nesting levels\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n+                        return nullptr;\n+                    }\n+                    continue;\n+                }\n+                auto sarg = Expr(expr);\n+                auto subdesc = ParseScript(key_exp_index, sarg, ParseScriptContext::P2TR, out, error);\n+                if (!subdesc) return nullptr;\n+                depths.push_back(counts.size());\n+                subscripts.push_back(std::move(subdesc));\n+                while (counts.size() && counts.back()) {\n+                    if (!Const(\"}\", expr)) {\n+                        error = strprintf(\"tr(): expected '}' after script expression\");\n+                        return nullptr;\n+                    }\n+                    counts.pop_back();\n+                }\n+                if (counts.size()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590700864",
      "id" : 590700864,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDcwMDg2NA==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 1173,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 607957463,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590700864",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590707050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590707050"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "given that this is just iterating in order, it seems like we should be able to directly feed the TaprootBuilder from the tr parsing code and do away with the intermediate vectors?",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-09T20:46:40Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590707050",
      "id" : 590707050,
      "line" : 843,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDcwNzA1MA==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 843,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 356,
      "pull_request_review_id" : 607980027,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590707050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590707883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590707883"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, unfortunately this happens at a different layers. TaprootBuilder can only be invoked with concrete keys; those don't exist yet at parsing time.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-09T20:47:54Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590707883",
      "id" : 590707883,
      "in_reply_to_id" : 590707050,
      "line" : 843,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDcwNzg4Mw==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 843,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 356,
      "pull_request_review_id" : 607982761,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590707883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590710550"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590710550"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see :(\r\n\r\nI guess I'll mark it as a personal todo (no need to upset a working internal representation) to brainstorm if there's a more obvious way to represent the tree than the ordered depth annotations (even though it's equivalent and unambiguous, I still find it unintuitive)",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-09T20:52:03Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590710550",
      "id" : 590710550,
      "in_reply_to_id" : 590707050,
      "line" : 843,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDcxMDU1MA==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 843,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 356,
      "pull_request_review_id" : 607991740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590710550",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590718707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590718707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I like linear data structures that don't need recursion to process, when unnecessary.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-09T21:05:25Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590718707",
      "id" : 590718707,
      "in_reply_to_id" : 590707050,
      "line" : 843,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDcxODcwNw==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 843,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 356,
      "pull_request_review_id" : 608020754,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590718707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590870801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590870801"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, I agree with that 100%. What I was thinking was a vec<uint128> where each bit represents a left/right on the tree. That way you can do a de-duplicate check to make sure each node is only occupied once. Then the order of the vec itself is no longer significant; it should not need to be preserved because you can sort them by value (if I'm not wrong) to get the insertion order. Depth could be computed by looking at your nearest neighbor and computing the \"divergence\" (or by encoding an extra byte to make it explicit -- unclear what is best here). \r\n\r\nWith a sorted vec, this also enables some nicesties such as using std:: binary searches for O(log(n)) lookup by tree position.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-10T00:41:34Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590870801",
      "id" : 590870801,
      "in_reply_to_id" : 590707050,
      "line" : 843,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDg3MDgwMQ==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 843,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 356,
      "pull_request_review_id" : 608235359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590870801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590889090"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590889090"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@roconnor-blockstream may also like that this format should be:\r\n1. concatenative, where concat has operations that are O(n)\r\n    - merge sort then either deduplicate check or run through and add an appropriate offset to branches\r\n 2.  \"normalizable\" (shifting things down to the smallest next number) and \"prefixable\" (adding a constant to all numbers to preserve structure.\r\n ",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-10T01:08:42Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590889090",
      "id" : 590889090,
      "in_reply_to_id" : 590707050,
      "line" : 843,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDg4OTA5MA==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 843,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 356,
      "pull_request_review_id" : 608247096,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590889090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590892912"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590892912"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why do the properties of this internal, temporary, data structure that purely used during the construction of a scriptPubKey matter? It does what it is supposed to do. If we ever need other operations on it, something else can be considered.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-10T01:14:59Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r590892912",
      "id" : 590892912,
      "in_reply_to_id" : 590707050,
      "line" : 843,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDg5MjkxMg==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 843,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 356,
      "pull_request_review_id" : 608249733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590892912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r591123497"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591123497"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I find the code really hard to understand. Conceivably if we want people to review/audit it, a conceptually simpler representation & set of algorithms should be easier to understand? The above suggestion may or may not be it, but I haven't been able to fully work out how the algorithms this PR is currently using work even after staring at them for a bit.\r\n\r\nthe properties matter less.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-10T06:54:15Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r591123497",
      "id" : 591123497,
      "in_reply_to_id" : 590707050,
      "line" : 843,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTEyMzQ5Nw==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 843,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 356,
      "pull_request_review_id" : 608380606,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591123497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r591138116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591138116"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'll try to add more comments.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-10T07:12:49Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r591138116",
      "id" : 591138116,
      "in_reply_to_id" : 590707050,
      "line" : 843,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTEzODExNg==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 843,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 356,
      "pull_request_review_id" : 608390585,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591138116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592082640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592082640"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: in d5a0dce8fe40153b07ec6e882e8b1568b05e3905: we can use `std::make_unique` in new code.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-11T05:48:46Z",
      "diff_hunk" : "@@ -886,6 +936,13 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(uint32_t key_exp_index, const S\n                     error = \"Uncompressed keys are not allowed\";\n                     return nullptr;\n                 }\n+            } else if (data.size() == 32 && ctx == ParseScriptContext::P2TR) {\n+                unsigned char fullkey[33] = {0x02};\n+                std::copy(data.begin(), data.end(), fullkey + 1);\n+                pubkey.Set(std::begin(fullkey), std::end(fullkey));\n+                if (pubkey.IsFullyValid()) {\n+                    return MakeUnique<ConstPubkeyProvider>(key_exp_index, pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592082640",
      "id" : 592082640,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjA4MjY0MA==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 944,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 609412406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592082640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592738143"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592738143"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's how the current span-based parsing works. I think discussions about improvements to that are interesting but out of scope for this PR.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-11T21:34:35Z",
      "diff_hunk" : "@@ -34,11 +34,11 @@ Span<const char> Expr(Span<const char>& sp)\n     int level = 0;\n     auto it = sp.begin();\n     while (it != sp.end()) {\n-        if (*it == '(') {\n+        if (*it == '(' || *it == '{') {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592738143",
      "id" : 592738143,
      "in_reply_to_id" : 590646545,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjczODE0Mw==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 37,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/spanparsing.cpp",
      "position" : 5,
      "pull_request_review_id" : 610245177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592738143",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825162"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've restructured things a bit, and added a bunch of comments. Does this look better?",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-12T00:26:15Z",
      "diff_hunk" : "@@ -1143,36 +1143,46 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         ++key_exp_index;\n         std::vector<std::unique_ptr<DescriptorImpl>> subscripts;\n         std::vector<int> depths;\n-        while (expr.size()) {\n+        if (expr.size()) {\n+            std::vector<bool> counts; //!< whether we already had an expression at that depth\n             if (!Const(\",\", expr)) {\n                 error = strprintf(\"tr: expected ',', got '%c'\", expr[0]);\n                 return nullptr;\n             }\n-            auto sarg = Expr(expr);\n-            auto colon = std::find(sarg.begin(), sarg.end(), ':');\n-            if (colon == sarg.end()) {\n-                error = \"tr() requires scripts with 'depth:' prefix\";\n-                return nullptr;\n-            }\n-            uint32_t depth;\n-            if (!ParseUInt32(std::string(sarg.begin(), colon), &depth)) {\n-                error = \"depth is not numeric in tr()\";\n-                return nullptr;\n-            }\n-            if (depth > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n-                error = strprintf(\"depth is out of range in tr() (0 <= depth <= %i)\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n-                return nullptr;\n+            while (expr.size()) {\n+                if (Const(\"{\", expr)) {\n+                    counts.push_back(false);\n+                    if (counts.size() > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n+                        error = strprintf(\"tr() supports at most %i nesting levels\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n+                        return nullptr;\n+                    }\n+                    continue;\n+                }\n+                auto sarg = Expr(expr);\n+                auto subdesc = ParseScript(key_exp_index, sarg, ParseScriptContext::P2TR, out, error);\n+                if (!subdesc) return nullptr;\n+                depths.push_back(counts.size());\n+                subscripts.push_back(std::move(subdesc));\n+                while (counts.size() && counts.back()) {\n+                    if (!Const(\"}\", expr)) {\n+                        error = strprintf(\"tr(): expected '}' after script expression\");\n+                        return nullptr;\n+                    }\n+                    counts.pop_back();\n+                }\n+                if (counts.size()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825162",
      "id" : 592825162,
      "in_reply_to_id" : 590700864,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjgyNTE2Mg==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 1173,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 610354035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825332"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a big comment explaining the data structure in script/standard.h. WDYT?",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-12T00:26:42Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825332",
      "id" : 592825332,
      "in_reply_to_id" : 590707050,
      "line" : 843,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjgyNTMzMg==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 843,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 356,
      "pull_request_review_id" : 610354234,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825367"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-12T00:26:48Z",
      "diff_hunk" : "@@ -886,6 +936,13 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(uint32_t key_exp_index, const S\n                     error = \"Uncompressed keys are not allowed\";\n                     return nullptr;\n                 }\n+            } else if (data.size() == 32 && ctx == ParseScriptContext::P2TR) {\n+                unsigned char fullkey[33] = {0x02};\n+                std::copy(data.begin(), data.end(), fullkey + 1);\n+                pubkey.Set(std::begin(fullkey), std::end(fullkey));\n+                if (pubkey.IsFullyValid()) {\n+                    return MakeUnique<ConstPubkeyProvider>(key_exp_index, pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825367",
      "id" : 592825367,
      "in_reply_to_id" : 592082640,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjgyNTM2Nw==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 944,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 610354279,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Switched to the `tr(KEY,{{S1,S2},{{...)` style descriptors.",
      "created_at" : "2021-03-12T00:27:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-797147204",
      "id" : 797147204,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzE0NzIwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T00:27:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797147204",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825770"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-12T00:27:43Z",
      "diff_hunk" : "@@ -1143,36 +1143,46 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         ++key_exp_index;\n         std::vector<std::unique_ptr<DescriptorImpl>> subscripts;\n         std::vector<int> depths;\n-        while (expr.size()) {\n+        if (expr.size()) {\n+            std::vector<bool> counts; //!< whether we already had an expression at that depth\n             if (!Const(\",\", expr)) {\n                 error = strprintf(\"tr: expected ',', got '%c'\", expr[0]);\n                 return nullptr;\n             }\n-            auto sarg = Expr(expr);\n-            auto colon = std::find(sarg.begin(), sarg.end(), ':');\n-            if (colon == sarg.end()) {\n-                error = \"tr() requires scripts with 'depth:' prefix\";\n-                return nullptr;\n-            }\n-            uint32_t depth;\n-            if (!ParseUInt32(std::string(sarg.begin(), colon), &depth)) {\n-                error = \"depth is not numeric in tr()\";\n-                return nullptr;\n-            }\n-            if (depth > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n-                error = strprintf(\"depth is out of range in tr() (0 <= depth <= %i)\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n-                return nullptr;\n+            while (expr.size()) {\n+                if (Const(\"{\", expr)) {\n+                    counts.push_back(false);\n+                    if (counts.size() > TAPROOT_CONTROL_MAX_NODE_COUNT) {\n+                        error = strprintf(\"tr() supports at most %i nesting levels\", TAPROOT_CONTROL_MAX_NODE_COUNT);\n+                        return nullptr;\n+                    }\n+                    continue;\n+                }\n+                auto sarg = Expr(expr);\n+                auto subdesc = ParseScript(key_exp_index, sarg, ParseScriptContext::P2TR, out, error);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r592825770",
      "id" : 592825770,
      "in_reply_to_id" : 590696727,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjgyNTc3MA==",
      "original_commit_id" : "12bfa0b79e1997d55c0c9415ad000ac76eeba7b0",
      "original_line" : 1162,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 610354693,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592825770",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-12T07:41:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-797300395",
      "id" : 797300395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzMwMDM5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T07:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797300395",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Switched to the `tr(KEY,{{S1,S2},{{...)` style descriptors.\r\n\r\nCan you clarify this, maybe with a simple example, in the PR description or in [descriptors.md](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md)?",
      "created_at" : "2021-03-12T08:24:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-797321617",
      "id" : 797321617,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzMyMTYxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T08:24:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797321617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors Rebased, and\r\n\r\n> Can you clarify this, maybe with a simple example, in the PR description or in descriptors.md?\r\n\r\ndone.\r\n",
      "created_at" : "2021-03-12T09:23:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-797357641",
      "id" : 797357641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzM1NzY0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T09:23:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797357641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r593043201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593043201"
         }
      },
      "author_association" : "MEMBER",
      "body" : "So this means you can do, `tr(KEY,{A})`, `tr(KEY,{A,B})`, `tr(KEY,{A,{B,C}})`, etc? So a `TREE` must have two elements, unless it's at the top?\r\n\r\nMaybe also point out that some taproot features have yet to be implemented, so the only script you can put in a `TREE` element is `pk(KEY)`.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-12T09:49:27Z",
      "diff_hunk" : "@@ -80,12 +83,17 @@ Descriptors consist of several types of expressions. The top level expression is\n - Followed by the actual key, which is either:\n   - Hex encoded public keys (either 66 characters starting with `02` or `03` for a compressed pubkey, or 130 characters starting with `04` for an uncompressed pubkey).\n     - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+    - Inside `tr`, x-only pubkeys are also permitted (64 hex characters).\n   - [WIF](https://en.bitcoin.it/wiki/Wallet_import_format) encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n   - `xpub` encoded extended public key or `xprv` encoded extended private key (as defined in [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)).\n     - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n     - Optionally followed by a single `/*` or `/*'` final step to denote all (direct) unhardened or hardened children.\n     - The usage of hardened derivation steps requires providing the private key.\n \n+`TREE` expressions:\n+- any `SCRIPT` expression\n+- An open brace `{`, a `TREE` expression, a comma `,`, a `TREE` expression, and a closing brace `}`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r593043201",
      "id" : 593043201,
      "line" : 95,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzA0MzIwMQ==",
      "original_commit_id" : "ee7b9831ad2faefb49347f00053269a227423b23",
      "original_line" : 95,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : 49,
      "pull_request_review_id" : 610614777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593043201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r593313134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593313134"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, `{A}` is not a valid TREE. `A` is.\n\nSo you'd use `tr(KEY,A)` but `tr(KEY,{A,B})`. There is nothing special about the top level.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-12T16:46:05Z",
      "diff_hunk" : "@@ -80,12 +83,17 @@ Descriptors consist of several types of expressions. The top level expression is\n - Followed by the actual key, which is either:\n   - Hex encoded public keys (either 66 characters starting with `02` or `03` for a compressed pubkey, or 130 characters starting with `04` for an uncompressed pubkey).\n     - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+    - Inside `tr`, x-only pubkeys are also permitted (64 hex characters).\n   - [WIF](https://en.bitcoin.it/wiki/Wallet_import_format) encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n   - `xpub` encoded extended public key or `xprv` encoded extended private key (as defined in [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)).\n     - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n     - Optionally followed by a single `/*` or `/*'` final step to denote all (direct) unhardened or hardened children.\n     - The usage of hardened derivation steps requires providing the private key.\n \n+`TREE` expressions:\n+- any `SCRIPT` expression\n+- An open brace `{`, a `TREE` expression, a comma `,`, a `TREE` expression, and a closing brace `}`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r593313134",
      "id" : 593313134,
      "in_reply_to_id" : 593043201,
      "line" : 95,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzMxMzEzNA==",
      "original_commit_id" : "ee7b9831ad2faefb49347f00053269a227423b23",
      "original_line" : 95,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : 49,
      "pull_request_review_id" : 610969991,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593313134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nðµï¸ @achow101 @harding have been requested to review this pull request as specified in the REVIEWERS file.",
      "created_at" : "2021-03-15T16:49:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-799573948",
      "id" : 799573948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5OTU3Mzk0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-15T16:49:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/799573948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594694587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594694587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit 8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8 \"Add tr() descriptor (derivation only, no signing)\"\r\n\r\nThis looks like the original syntax and not the syntax with the braces.\r\n\r\nSince this function is used as part of writing the descriptor to the wallet, any wallet containing a descriptor with scripts will currently have an invalid descriptor and cannot be loaded again.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-15T21:25:58Z",
      "diff_hunk" : "@@ -817,6 +827,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);\n+        }\n+        if (!builder.IsComplete()) return {};\n+        assert(keys.size() == 1);\n+        XOnlyPubKey xpk(keys[0]);\n+        if (!xpk.IsFullyValid()) return {};\n+        builder.Finalize(xpk);\n+        return Vector(GetScriptForDestination(builder.GetOutput()));\n+    }\n+    bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, bool priv, bool normalized, size_t&) const override\n+    {\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            ret += strprintf(\",%i:\", m_depths[pos]);\n+            std::string tmp;\n+            if (!m_subdescriptor_args[pos]->ToStringHelper(arg, tmp, priv, normalized)) return false;\n+            ret += std::move(tmp);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594694587",
      "id" : 594694587,
      "line" : 866,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY5NDU4Nw==",
      "original_commit_id" : "8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8",
      "original_line" : 866,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 379,
      "pull_request_review_id" : 612656927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594694587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594695684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594695684"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit 8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8 \"Add tr() descriptor (derivation only, no signing)\"\r\n\r\nI think it would be better to default `xonly = false` so that existing callers don't need to change, and this is kind of what is expected for this descriptor. Then nested taproot things can set `xonly` as they need.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-15T21:27:45Z",
      "diff_hunk" : "@@ -696,10 +696,20 @@ class RawDescriptor final : public DescriptorImpl\n /** A parsed pk(P) descriptor. */\n class PKDescriptor final : public DescriptorImpl\n {\n+private:\n+    const bool m_xonly;\n protected:\n-    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider&) const override { return Vector(GetScriptForRawPubKey(keys[0])); }\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider&) const override\n+    {\n+        if (m_xonly) {\n+            CScript script = CScript() << ToByteVector(XOnlyPubKey(keys[0])) << OP_CHECKSIG;\n+            return Vector(std::move(script));\n+        } else {\n+            return Vector(GetScriptForRawPubKey(keys[0]));\n+        }\n+    }\n public:\n-    PKDescriptor(std::unique_ptr<PubkeyProvider> prov) : DescriptorImpl(Vector(std::move(prov)), \"pk\") {}\n+    PKDescriptor(std::unique_ptr<PubkeyProvider> prov, bool xonly) : DescriptorImpl(Vector(std::move(prov)), \"pk\"), m_xonly(xonly) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594695684",
      "id" : 594695684,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY5NTY4NA==",
      "original_commit_id" : "8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8",
      "original_line" : 713,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 612656927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594695684",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594718159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594718159"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 1d3cc29fb86b614b76b4d97a5adab7f903fc3020 \"Construct and use PrecomputedTransactionData in PSBT signing\"\r\n\r\nWe should avoid iterating all of the PSBT inputs again when we are signing each input. Instead we should compute the `PrecomputedTransactionData` in the caller and pass that into `SignPSBTInput`.\r\n\r\nThis can be done in `CWallet::FillPSBT` where we are iterating the inputs anyways to get their previous txs from the wallet. We could be constructing the `PrecomputedTransactionData` at that time and then passing it into `FIllPSBT` which then passes it to `SignPSBTInput`.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-15T22:11:14Z",
      "diff_hunk" : "@@ -240,37 +240,51 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n     SignatureData sigdata;\n     input.FillSignatureData(sigdata);\n \n-    // Get UTXO\n+    // Get UTXOs\n     bool require_witness_sig = false;\n-    CTxOut utxo;\n-\n-    if (input.non_witness_utxo) {\n-        // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.\n-        COutPoint prevout = tx.vin[index].prevout;\n-        if (prevout.n >= input.non_witness_utxo->vout.size()) {\n-            return false;\n+    bool have_all_spent_outputs = true;\n+    std::vector<CTxOut> utxos(tx.vin.size());\n+    for (size_t idx = 0; idx < tx.vin.size(); ++idx) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594718159",
      "id" : 594718159,
      "line" : 235,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDcxODE1OQ==",
      "original_commit_id" : "1d3cc29fb86b614b76b4d97a5adab7f903fc3020",
      "original_line" : 235,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/psbt.cpp",
      "position" : 10,
      "pull_request_review_id" : 612656927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594718159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594882760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594882760"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice catch. Fixed, and added tests for roundtrippability of the descriptors.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-16T06:02:20Z",
      "diff_hunk" : "@@ -817,6 +827,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);\n+        }\n+        if (!builder.IsComplete()) return {};\n+        assert(keys.size() == 1);\n+        XOnlyPubKey xpk(keys[0]);\n+        if (!xpk.IsFullyValid()) return {};\n+        builder.Finalize(xpk);\n+        return Vector(GetScriptForDestination(builder.GetOutput()));\n+    }\n+    bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, bool priv, bool normalized, size_t&) const override\n+    {\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            ret += strprintf(\",%i:\", m_depths[pos]);\n+            std::string tmp;\n+            if (!m_subdescriptor_args[pos]->ToStringHelper(arg, tmp, priv, normalized)) return false;\n+            ret += std::move(tmp);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r594882760",
      "id" : 594882760,
      "in_reply_to_id" : 594694587,
      "line" : 866,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDg4Mjc2MA==",
      "original_commit_id" : "8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8",
      "original_line" : 866,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 379,
      "pull_request_review_id" : 612876687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594882760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r595438349"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595438349"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-16T18:29:21Z",
      "diff_hunk" : "@@ -696,10 +696,20 @@ class RawDescriptor final : public DescriptorImpl\n /** A parsed pk(P) descriptor. */\n class PKDescriptor final : public DescriptorImpl\n {\n+private:\n+    const bool m_xonly;\n protected:\n-    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider&) const override { return Vector(GetScriptForRawPubKey(keys[0])); }\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider&) const override\n+    {\n+        if (m_xonly) {\n+            CScript script = CScript() << ToByteVector(XOnlyPubKey(keys[0])) << OP_CHECKSIG;\n+            return Vector(std::move(script));\n+        } else {\n+            return Vector(GetScriptForRawPubKey(keys[0]));\n+        }\n+    }\n public:\n-    PKDescriptor(std::unique_ptr<PubkeyProvider> prov) : DescriptorImpl(Vector(std::move(prov)), \"pk\") {}\n+    PKDescriptor(std::unique_ptr<PubkeyProvider> prov, bool xonly) : DescriptorImpl(Vector(std::move(prov)), \"pk\"), m_xonly(xonly) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r595438349",
      "id" : 595438349,
      "in_reply_to_id" : 594695684,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTQzODM0OQ==",
      "original_commit_id" : "8aaa61bfb7590e95eb7ca5106dfe3561f1c7a7c8",
      "original_line" : 713,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 613593688,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595438349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r595592405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595592405"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-03-16T22:48:03Z",
      "diff_hunk" : "@@ -240,37 +240,51 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n     SignatureData sigdata;\n     input.FillSignatureData(sigdata);\n \n-    // Get UTXO\n+    // Get UTXOs\n     bool require_witness_sig = false;\n-    CTxOut utxo;\n-\n-    if (input.non_witness_utxo) {\n-        // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.\n-        COutPoint prevout = tx.vin[index].prevout;\n-        if (prevout.n >= input.non_witness_utxo->vout.size()) {\n-            return false;\n+    bool have_all_spent_outputs = true;\n+    std::vector<CTxOut> utxos(tx.vin.size());\n+    for (size_t idx = 0; idx < tx.vin.size(); ++idx) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r595592405",
      "id" : 595592405,
      "in_reply_to_id" : 594718159,
      "line" : 235,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTU5MjQwNQ==",
      "original_commit_id" : "1d3cc29fb86b614b76b4d97a5adab7f903fc3020",
      "original_line" : 235,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/psbt.cpp",
      "position" : 10,
      "pull_request_review_id" : 613787179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T01:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595592405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-17T12:44:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-801052179",
      "id" : 801052179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMTA1MjE3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-17T12:44:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/801052179",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased.",
      "created_at" : "2021-03-30T01:20:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-809832324",
      "id" : 809832324,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwOTgzMjMyNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-30T01:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809832324",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I created a descriptor like so, to test scriptpath spending: `tr(tpub1/0/*,pk(tprv2/0/*))`. This way the wallet won't have private keys for the keypath spend (`tpub1`), so it has to use the script `pk(tprv2/0*)`.\r\n\r\nThis seems to work on Signet, but the transaction does not enter the mempool. `testmempoolaccept` complains `min relay fee not met`, so perhaps there's a fee calculation bug? Once I bump the fee it goes through.\r\n\r\nI used the GUI to create (and bump) the transactions. With a regular `tr(tpriv1/0/*)` descriptor wallet I don't see this problem.\r\n\r\nHere's the original raw transaction:\r\n```\r\n0200000000010114a5df5cf5084ea003c2f021c4e22846238a61c89894fa786e556395048ed40c0000000000fdffffff0292a0070000000000225120a287e30feacc24a25a9a3e689ad0107223cb247fb9a14880cddf3e62f1453a6420a1070000000000160014bf15b210d9f53e5c7b002fe904af042098706c3a03406c11b79f9a417f9702a6117e3bb170956ece09af6b584b2d92e1e0e5cfcad725250c91e29db77751af36970c0e5676622cfcf6fb1c81a316dfcd349b1ea59d412220d0586a7eba2e92a38f31ba8a7d82c05b9bb101bf3a649f205bd8e1df7c428b6eac21c07a35becbfeccf3ed5367ff117681497d040e6996eeae3dd21acb123e8525729d227b0000\r\n```",
      "created_at" : "2021-04-01T15:24:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-811983881",
      "id" : 811983881,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMTk4Mzg4MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-01T15:25:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/811983881",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors That's expected, and I don't really know how to deal with this. The problem is that we determine the fee for spending an output by using the dummy signer, but the dummy signer can't know which private keys will and won't be available. Since tr spending cost differs based on what is available, this will give an inaccurate result (it'll always just use the key path).\r\n\r\nA possibility is extending descriptors with markers to indicate that certain keys won't ever be available. It's good to point this out, but I think the scope will take us a bit too far for this PR.",
      "created_at" : "2021-04-01T17:05:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-812045689",
      "id" : 812045689,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMjA0NTY4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-01T17:10:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812045689",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is definitely a new can of worms that will need some thought, but I agree it can wait (if documented).\r\n\r\nThe main point of having leaves is to be able to spend when the main keypath key material isn't available. But we currently have no way of indicating that.\r\n\r\nI don't think descriptors are the right place for this. Let's say I have 3 hardware wallets. The keypath is a 3-of-3 musig, and the script(s) are 2-of-3. Normally I would sign with all 3 in order to save fees and preserve privacy. But after a minor boating accident I only have two. I wouldn't necessarily want to create a new wallet, so nothing about the descriptors changes.\r\n\r\nThe natural place to indicate which leaf to use is probably the send command (especially fun for the GUI...). From there on it should be straight forward to use the right dummies.",
      "created_at" : "2021-04-01T20:43:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-812161062",
      "id" : 812161062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMjE2MTA2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-01T20:44:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812161062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK ð ",
      "created_at" : "2021-04-02T11:43:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-812495291",
      "id" : 812495291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMjQ5NTI5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-02T11:43:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812495291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-04-13T03:55:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-818411903",
      "id" : 818411903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxODQxMTkwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-13T03:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/818411903",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "All prerequisites have been merged! Needs rebase.",
      "created_at" : "2021-04-20T16:52:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-823442160",
      "id" : 823442160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzQ0MjE2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T16:52:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823442160",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r618460734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618460734"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit b6f6c58ef7e64f699102beef063b3b9f91c71ecd:\r\n\r\nCould use `decltype(m_keydata)::size()` for self-documenting code?",
      "commit_id" : "a1178c0567d39a75a67cc98dee708a46b0ea8d9c",
      "created_at" : "2021-04-22T14:35:56Z",
      "diff_hunk" : "@@ -234,7 +240,14 @@ class XOnlyPubKey\n \n     const unsigned char& operator[](int pos) const { return *(m_keydata.begin() + pos); }\n     const unsigned char* data() const { return m_keydata.begin(); }\n-    size_t size() const { return m_keydata.size(); }\n+    static constexpr size_t size() { return uint256::size(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r618460734",
      "id" : 618460734,
      "line" : 272,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODQ2MDczNA==",
      "original_commit_id" : "b6f6c58ef7e64f699102beef063b3b9f91c71ecd",
      "original_line" : 243,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/pubkey.h",
      "position" : 60,
      "pull_request_review_id" : 642283487,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-22T14:45:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618460734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r624751898"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/624751898"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 3f6aad2d687b5435e93bf6c99cbe1cabc9c1ff16:\r\n\r\nProbably should be `tr(KEY)` instead of `tr(XKEY)`.",
      "commit_id" : "35650d456c68e6fde550adcf92aa09846316dfc0",
      "created_at" : "2021-05-02T20:39:12Z",
      "diff_hunk" : "@@ -54,20 +55,22 @@ Output descriptors currently support:\n - `pkh([d34db33f/44'/0'/0']xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL/1/*)` describes a set of P2PKH outputs, but additionally specifies that the specified xpub is a child of a master with fingerprint `d34db33f`, and derived using path `44'/0'/0'`.\n - `wsh(multi(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/0/0/*))` describes a set of *1-of-2* P2WSH multisig outputs where the first multisig key is the *1/0/`i`* child of the first specified xpub and the second multisig key is the *0/0/`i`* child of the second specified xpub, and `i` is any number in a configurable range (`0-1000` by default).\n - `wsh(sortedmulti(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/0/0/*))` describes a set of *1-of-2* P2WSH multisig outputs where one multisig key is the *1/0/`i`* child of the first specified xpub and the other multisig key is the *0/0/`i`* child of the second specified xpub, and `i` is any number in a configurable range (`0-1000` by default). The order of public keys in the resulting witnessScripts is determined by the lexicographic order of the public keys at that index.\n+- `tr(c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5,{pk(fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556),pk(e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)})` describes a P2TR output with the `c6...` x-only pubkey as internal key, and two script paths.\n \n ## Reference\n \n Descriptors consist of several types of expressions. The top level expression is either a `SCRIPT`, or `SCRIPT#CHECKSUM` where `CHECKSUM` is an 8-character alphanumeric descriptor checksum.\n \n `SCRIPT` expressions:\n - `sh(SCRIPT)` (top level only): P2SH embed the argument.\n-- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `wsh(SCRIPT)` (top level or inside `sh` only): P2WSH embed the argument.\n - `pk(KEY)` (anywhere): P2PK output for the given public key.\n-- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n-- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `pkh(KEY)` (not inside `tr`): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (top level or inside `sh` only): P2WPKH output for the given compressed pubkey.\n - `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)` and `pkh(KEY)`. If the key is compressed, it also includes `wpkh(KEY)` and `sh(wpkh(KEY))`.\n-- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n-- `sortedmulti(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script with keys sorted lexicographically in the resulting script.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (not inside `tr`): k-of-n multisig script.\n+- `sortedmulti(k,KEY_1,KEY_2,...,KEY_n)` (not inside `tr`): k-of-n multisig script with keys sorted lexicographically in the resulting script.\n+- `tr(XKEY)` or `tr(KEY,TREE)` (top level only): P2TR output with the specified key as internal key, and optionally a tree of script paths.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r624751898",
      "id" : 624751898,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDc1MTg5OA==",
      "original_commit_id" : "3f6aad2d687b5435e93bf6c99cbe1cabc9c1ff16",
      "original_line" : 73,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : null,
      "pull_request_review_id" : 649950125,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-02T22:53:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/624751898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r624793048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/624793048"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 474536660d:\r\n\r\nMay as well skip this `for` loop altogether if `force` is true, if I see that correctly.",
      "commit_id" : "35650d456c68e6fde550adcf92aa09846316dfc0",
      "created_at" : "2021-05-02T22:52:50Z",
      "diff_hunk" : "@@ -1431,8 +1431,8 @@ void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut>&& spent\n     }\n \n     // Determine which precomputation-impacting features this transaction uses.\n-    bool uses_bip143_segwit = false;\n-    bool uses_bip341_taproot = false;\n+    bool uses_bip143_segwit = force;\n+    bool uses_bip341_taproot = force;\n     for (size_t inpos = 0; inpos < txTo.vin.size(); ++inpos) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r624793048",
      "id" : 624793048,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDc5MzA0OA==",
      "original_commit_id" : "474536660d5d02869b20d8d731001ae738341e37",
      "original_line" : 1436,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 649950125,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-02T22:53:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/624793048",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637221548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637221548"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "35650d456c68e6fde550adcf92aa09846316dfc0",
      "created_at" : "2021-05-21T20:41:29Z",
      "diff_hunk" : "@@ -234,7 +240,14 @@ class XOnlyPubKey\n \n     const unsigned char& operator[](int pos) const { return *(m_keydata.begin() + pos); }\n     const unsigned char* data() const { return m_keydata.begin(); }\n-    size_t size() const { return m_keydata.size(); }\n+    static constexpr size_t size() { return uint256::size(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637221548",
      "id" : 637221548,
      "in_reply_to_id" : 618460734,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzIyMTU0OA==",
      "original_commit_id" : "b6f6c58ef7e64f699102beef063b3b9f91c71ecd",
      "original_line" : 243,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/pubkey.h",
      "position" : null,
      "pull_request_review_id" : 665873873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-21T20:41:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637221548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637221616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637221616"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "35650d456c68e6fde550adcf92aa09846316dfc0",
      "created_at" : "2021-05-21T20:41:37Z",
      "diff_hunk" : "@@ -54,20 +55,22 @@ Output descriptors currently support:\n - `pkh([d34db33f/44'/0'/0']xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL/1/*)` describes a set of P2PKH outputs, but additionally specifies that the specified xpub is a child of a master with fingerprint `d34db33f`, and derived using path `44'/0'/0'`.\n - `wsh(multi(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/0/0/*))` describes a set of *1-of-2* P2WSH multisig outputs where the first multisig key is the *1/0/`i`* child of the first specified xpub and the second multisig key is the *0/0/`i`* child of the second specified xpub, and `i` is any number in a configurable range (`0-1000` by default).\n - `wsh(sortedmulti(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/0/0/*))` describes a set of *1-of-2* P2WSH multisig outputs where one multisig key is the *1/0/`i`* child of the first specified xpub and the other multisig key is the *0/0/`i`* child of the second specified xpub, and `i` is any number in a configurable range (`0-1000` by default). The order of public keys in the resulting witnessScripts is determined by the lexicographic order of the public keys at that index.\n+- `tr(c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5,{pk(fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556),pk(e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)})` describes a P2TR output with the `c6...` x-only pubkey as internal key, and two script paths.\n \n ## Reference\n \n Descriptors consist of several types of expressions. The top level expression is either a `SCRIPT`, or `SCRIPT#CHECKSUM` where `CHECKSUM` is an 8-character alphanumeric descriptor checksum.\n \n `SCRIPT` expressions:\n - `sh(SCRIPT)` (top level only): P2SH embed the argument.\n-- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `wsh(SCRIPT)` (top level or inside `sh` only): P2WSH embed the argument.\n - `pk(KEY)` (anywhere): P2PK output for the given public key.\n-- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n-- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `pkh(KEY)` (not inside `tr`): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (top level or inside `sh` only): P2WPKH output for the given compressed pubkey.\n - `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)` and `pkh(KEY)`. If the key is compressed, it also includes `wpkh(KEY)` and `sh(wpkh(KEY))`.\n-- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n-- `sortedmulti(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script with keys sorted lexicographically in the resulting script.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (not inside `tr`): k-of-n multisig script.\n+- `sortedmulti(k,KEY_1,KEY_2,...,KEY_n)` (not inside `tr`): k-of-n multisig script with keys sorted lexicographically in the resulting script.\n+- `tr(XKEY)` or `tr(KEY,TREE)` (top level only): P2TR output with the specified key as internal key, and optionally a tree of script paths.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637221616",
      "id" : 637221616,
      "in_reply_to_id" : 624751898,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzIyMTYxNg==",
      "original_commit_id" : "3f6aad2d687b5435e93bf6c99cbe1cabc9c1ff16",
      "original_line" : 73,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "doc/descriptors.md",
      "position" : null,
      "pull_request_review_id" : 665873952,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-21T20:41:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637221616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637221704"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637221704"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "35650d456c68e6fde550adcf92aa09846316dfc0",
      "created_at" : "2021-05-21T20:41:46Z",
      "diff_hunk" : "@@ -1431,8 +1431,8 @@ void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut>&& spent\n     }\n \n     // Determine which precomputation-impacting features this transaction uses.\n-    bool uses_bip143_segwit = false;\n-    bool uses_bip341_taproot = false;\n+    bool uses_bip143_segwit = force;\n+    bool uses_bip341_taproot = force;\n     for (size_t inpos = 0; inpos < txTo.vin.size(); ++inpos) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637221704",
      "id" : 637221704,
      "in_reply_to_id" : 624793048,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzIyMTcwNA==",
      "original_commit_id" : "474536660d5d02869b20d8d731001ae738341e37",
      "original_line" : 1436,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 665874041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-21T20:41:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637221704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased, and addressed comments.",
      "created_at" : "2021-05-21T20:41:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-846248695",
      "id" : 846248695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NjI0ODY5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-21T20:41:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/846248695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\n node0 stderr bitcoin-node: script/interpreter.cpp:1714: virtual bool GenericTransactionSignatureChecker<CMutableTransaction>::CheckSchnorrSignature(Span<const unsigned char>, Span<const unsigned char>, SigVersion, const ScriptExecutionData &, ScriptError *) const [T = CMutableTransaction]: Assertion `this->txdata' failed. ",
      "created_at" : "2021-05-22T05:32:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-846353760",
      "id" : 846353760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NjM1Mzc2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-22T05:32:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/846353760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637407995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637407995"
         }
      },
      "author_association" : "MEMBER",
      "body" : "a2edabe43261ef2859742015a53c34ee8a5d1ee3  This along with the corresponding changes in `pubkey.h` might be worth a separate commit.",
      "commit_id" : "35650d456c68e6fde550adcf92aa09846316dfc0",
      "created_at" : "2021-05-22T14:04:31Z",
      "diff_hunk" : "@@ -75,7 +75,7 @@ class base_blob\n         return &m_data[WIDTH];\n     }\n \n-    unsigned int size() const\n+    static constexpr unsigned int size()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637407995",
      "id" : 637407995,
      "line" : 78,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzQwNzk5NQ==",
      "original_commit_id" : "a2edabe43261ef2859742015a53c34ee8a5d1ee3",
      "original_line" : 78,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/uint256.h",
      "position" : 5,
      "pull_request_review_id" : 666184590,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-22T18:52:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637407995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637408318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637408318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "a2edabe43261ef2859742015a53c34ee8a5d1ee3 shouldn't we keep `WitnessUnknown` at the end? That would also keep it consistent with the ordering in e.g. `descriptor.cpp`.",
      "commit_id" : "35650d456c68e6fde550adcf92aa09846316dfc0",
      "created_at" : "2021-05-22T14:07:58Z",
      "diff_hunk" : "@@ -142,11 +149,11 @@ struct WitnessUnknown\n  *  * ScriptHash: TxoutType::SCRIPTHASH destination (P2SH)\n  *  * WitnessV0ScriptHash: TxoutType::WITNESS_V0_SCRIPTHASH destination (P2WSH)\n  *  * WitnessV0KeyHash: TxoutType::WITNESS_V0_KEYHASH destination (P2WPKH)\n- *  * WitnessUnknown: TxoutType::WITNESS_UNKNOWN/WITNESS_V1_TAPROOT destination (P2W???)\n- *    (taproot outputs do not require their own type as long as no wallet support exists)\n+ *  * WitnessV1Taproot: TxoutType::WITNESS_V1_TAPROOT destination (P2TR)\n+ *  * WitnessUnknown: TxoutType::WITNESS_UNKNOWN destination (P2W???)\n  *  A CTxDestination is the internal data type encoded in a bitcoin address\n  */\n-using CTxDestination = std::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown>;\n+using CTxDestination = std::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown, WitnessV1Taproot>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637408318",
      "id" : 637408318,
      "line" : 156,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzQwODMxOA==",
      "original_commit_id" : "a2edabe43261ef2859742015a53c34ee8a5d1ee3",
      "original_line" : 156,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/script/standard.h",
      "position" : 32,
      "pull_request_review_id" : 666184590,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-22T18:52:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637408318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637409202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637409202"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This raises the question: why are we putting the witness version in `vSolutions`? That seems to have been copied from `WITNESS_UNKNOWN` handling, whereas we don't do it for SegWit v0.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/be4171679b8eab8205e04ff86140329bd67878a0/src/script/standard.cpp#L161-L174\r\n\r\nI don't see an explanation in e9a021d7e6a454d610a45cb9b3995f0d96a5fbb6 (I might have missed it in #19953's wall of text).",
      "commit_id" : "35650d456c68e6fde550adcf92aa09846316dfc0",
      "created_at" : "2021-05-22T14:15:19Z",
      "diff_hunk" : "@@ -242,8 +242,13 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n         addressRet = hash;\n         return true;\n     }\n-    case TxoutType::WITNESS_UNKNOWN:\n     case TxoutType::WITNESS_V1_TAPROOT: {\n+        WitnessV1Taproot tap;\n+        std::copy(vSolutions[1].begin(), vSolutions[1].end(), tap.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637409202",
      "id" : 637409202,
      "line" : 250,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzQwOTIwMg==",
      "original_commit_id" : "a2edabe43261ef2859742015a53c34ee8a5d1ee3",
      "original_line" : 247,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : 19,
      "pull_request_review_id" : 666184590,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-22T18:52:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637409202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637428638"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637428638"
         }
      },
      "author_association" : "MEMBER",
      "body" : "f86a68c0b1a6ed9e0c7e6f0ee81989a6129abe30: as an additional sanity check, you could generate the same same address in `feature_taproot.py`",
      "commit_id" : "35650d456c68e6fde550adcf92aa09846316dfc0",
      "created_at" : "2021-05-22T17:20:21Z",
      "diff_hunk" : "@@ -379,4 +381,70 @@ BOOST_AUTO_TEST_CASE(script_standard_GetScriptFor_)\n     BOOST_CHECK(result == expected);\n }\n \n+BOOST_AUTO_TEST_CASE(script_standard_taproot_builder)\n+{\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,1}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,0,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,0,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,0,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,1,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,1,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,1,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,2,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,2,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,2,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,0,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,0,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,0,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,1,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,1,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,1,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,2,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,2,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,2,2}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,0,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,0,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,0,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,1,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,1,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,1,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,2,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,2,1}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,2,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,2,2,3,4,5,6,7,8,9,10,11,12,14,14,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,31,31,31,31,31,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,128}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({128,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({129,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}), false);\n+\n+    XOnlyPubKey key_inner{ParseHex(\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\")};\n+    XOnlyPubKey key_1{ParseHex(\"c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5\")};\n+    XOnlyPubKey key_2{ParseHex(\"f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9\")};\n+    CScript script_1 = CScript() << ToByteVector(key_1) << OP_CHECKSIG;\n+    CScript script_2 = CScript() << ToByteVector(key_2) << OP_CHECKSIG;\n+    uint256 hash_3 = uint256S(\"31fe7061656bea2a36aa60a2f7ef940578049273746935d296426dc0afd86b68\");\n+\n+    TaprootBuilder builder;\n+    BOOST_CHECK(builder.IsValid() && builder.IsComplete());\n+    builder.Add(2, script_2, 0xc0);\n+    BOOST_CHECK(builder.IsValid() && !builder.IsComplete());\n+    builder.AddOmitted(2, hash_3);\n+    BOOST_CHECK(builder.IsValid() && !builder.IsComplete());\n+    builder.Add(1, script_1, 0xc0);\n+    BOOST_CHECK(builder.IsValid() && builder.IsComplete());\n+    builder.Finalize(key_inner);\n+    BOOST_CHECK(builder.IsValid() && builder.IsComplete());\n+    BOOST_CHECK_EQUAL(EncodeDestination(builder.GetOutput()), \"bc1pj6gaw944fy0xpmzzu45ugqde4rz7mqj5kj0tg8kmr5f0pjq8vnaqgynnge\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637428638",
      "id" : 637428638,
      "line" : 447,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzQyODYzOA==",
      "original_commit_id" : "f86a68c0b1a6ed9e0c7e6f0ee81989a6129abe30",
      "original_line" : 447,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/test/script_standard_tests.cpp",
      "position" : 80,
      "pull_request_review_id" : 666184590,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-22T18:52:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637428638",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637429207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637429207"
         }
      },
      "author_association" : "MEMBER",
      "body" : "f86a68c0b1a6ed9e0c7e6f0ee81989a6129abe30: note to other reviewers: this is used in d9d928198be28923d37434a924788b284a4e3760 to sanity check the descriptor parser (and made more sense to me after reviewing the {{A,B},C} parsing code).",
      "commit_id" : "35650d456c68e6fde550adcf92aa09846316dfc0",
      "created_at" : "2021-05-22T17:26:12Z",
      "diff_hunk" : "@@ -209,4 +209,82 @@ CScript GetScriptForRawPubKey(const CPubKey& pubkey);\n /** Generate a multisig script. */\n CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys);\n \n+/** Utility class to construct Taproot outputs from internal key and script tree. */\n+class TaprootBuilder\n+{\n+private:\n+    /** Information associated with a node in the Merkle tree. */\n+    struct NodeInfo\n+    {\n+        /** Merkle hash of this node. */\n+        uint256 hash;\n+    };\n+    /** Whether the builder is in a valid state so far. */\n+    bool m_valid = true;\n+\n+    /** The current state of the builder.\n+     *\n+     * For each level in the tree, one NodeInfo object may be present. m_branch[0]\n+     * is information about the root; further values are for deeper subtrees being\n+     * explored.\n+     *\n+     * For every right branch taken to reach the position we're currently\n+     * working in, there will be a (non-nullopt) entry in m_branch corresponding\n+     * to the left branch at that level.\n+     *\n+     * For example, imagine this tree:     - N0 -\n+     *                                    /      \\\n+     *                                   N1      N2\n+     *                                  /  \\    /  \\\n+     *                                 A    B  C   N3\n+     *                                            /  \\\n+     *                                           D    E\n+     *\n+     * Initially, m_branch is empty. After processing leaf A, it would become\n+     * {nullopt, nullopt, A}. When processing leaf B, an entry at level 2 already\n+     * exists, and it would thus be combined with it to produce a level 1 one,\n+     * resulting in {nullopt, N1}. Adding C and D takes us to {nullopt, N1, C}\n+     * and {nullopt, N1, C, D} respectively. When E is processed, it is combined\n+     * with D, and then C, and then N1, to produce the root, resulting in {N0}.\n+     *\n+     * This structure allows processing with just O(log n) overhead if the leaves\n+     * are computed on the fly.\n+     *\n+     * As an invariant, there can never be nullopt entries at the end. There can\n+     * also not be more than 128 entries (as that would mean more than 128 levels\n+     * in the tree). The depth of newly added entries will always be at least\n+     * equal to the current size of m_branch (otherwise it does not correspond\n+     * to a depth-first traversal of a tree). m_branch is only empty if no entries\n+     * have ever be processed. m_branch having length 1 corresponds to being done.\n+     */\n+    std::vector<std::optional<NodeInfo>> m_branch;\n+\n+    XOnlyPubKey m_internal_key;  //!< The internal key, set when finalizing.\n+    XOnlyPubKey m_output_key; //!< The output key, computed when finalizing. */\n+\n+    /** Combine information about a parent Merkle tree node from its child nodes. */\n+    static NodeInfo Combine(NodeInfo&& a, NodeInfo&& b);\n+    /** Insert information about a node at a certain depth, and propagate information up. */\n+    void Insert(NodeInfo&& node, int depth);\n+\n+public:\n+    /** Add a new script at a certain depth in the tree. Add() operations must be called\n+     *  in depth-first traversal order of binary tree. */\n+    TaprootBuilder& Add(int depth, const CScript& script, int leaf_version);\n+    /** Like Add(), but for a Merkle node with a given hash to the tree. */\n+    TaprootBuilder& AddOmitted(int depth, const uint256& hash);\n+    /** Finalize the construction. Can only be called when IsComplete() is true.\n+        internal_key.IsFullyValid() must be true. */\n+    TaprootBuilder& Finalize(const XOnlyPubKey& internal_key);\n+\n+    /** Return true if so far all input was valid. */\n+    bool IsValid() const { return m_valid; }\n+    /** Return whether there were either no leaves, or the leaves form a Huffman tree. */\n+    bool IsComplete() const { return m_valid && (m_branch.size() == 0 || (m_branch.size() == 1 && m_branch[0].has_value())); }\n+    /** Compute scriptPubKey (after Finalize()). */\n+    WitnessV1Taproot GetOutput();\n+    /** Check if a list of depths is legal (will lead to IsComplete()). */\n+    static bool ValidDepths(const std::vector<int>& depths);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637429207",
      "id" : 637429207,
      "line" : 312,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzQyOTIwNw==",
      "original_commit_id" : "f86a68c0b1a6ed9e0c7e6f0ee81989a6129abe30",
      "original_line" : 287,
      "original_position" : 79,
      "original_start_line" : null,
      "path" : "src/script/standard.h",
      "position" : 140,
      "pull_request_review_id" : 666184590,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-22T18:52:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637429207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637436352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637436352"
         }
      },
      "author_association" : "MEMBER",
      "body" : "f86a68c0b1a6ed9e0c7e6f0ee81989a6129abe30: what do you mean by \"if desired - leaf information\"?",
      "commit_id" : "35650d456c68e6fde550adcf92aa09846316dfc0",
      "created_at" : "2021-05-22T18:30:19Z",
      "diff_hunk" : "@@ -371,3 +374,99 @@ CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys)\n bool IsValidDestination(const CTxDestination& dest) {\n     return dest.index() != 0;\n }\n+\n+/*static*/ TaprootBuilder::NodeInfo TaprootBuilder::Combine(NodeInfo&& a, NodeInfo&& b)\n+{\n+    NodeInfo ret;\n+    /* Lexicographically sort a and b's hash, and compute parent hash. */\n+    if (a.hash < b.hash) {\n+        ret.hash = (CHashWriter(HASHER_TAPBRANCH) << a.hash << b.hash).GetSHA256();\n+    } else {\n+        ret.hash = (CHashWriter(HASHER_TAPBRANCH) << b.hash << a.hash).GetSHA256();\n+    }\n+    return ret;\n+}\n+\n+void TaprootBuilder::Insert(TaprootBuilder::NodeInfo&& node, int depth)\n+{\n+    assert(depth >= 0 && (size_t)depth <= TAPROOT_CONTROL_MAX_NODE_COUNT);\n+    /* We cannot insert a leaf at a lower depth while a deeper branch is unfinished. Doing\n+     * so would mean the Add() invocations do not correspond to a DFS traversal of a\n+     * binary tree. */\n+    if ((size_t)depth + 1 < m_branch.size()) {\n+        m_valid = false;\n+        return;\n+    }\n+    /* As long as an entry in the branch exists at the specified depth, combine it and propagate up.\n+     * The 'node' variable is overwritten here with the newly combined node. */\n+    while (m_valid && m_branch.size() > (size_t)depth && m_branch[depth].has_value()) {\n+        node = Combine(std::move(node), std::move(*m_branch[depth]));\n+        m_branch.pop_back();\n+        if (depth == 0) m_valid = false; /* Can't propagate further up than the root */\n+        --depth;\n+    }\n+    if (m_valid) {\n+        /* Make sure the branch is big enough to place the new node. */\n+        if (m_branch.size() <= (size_t)depth) m_branch.resize((size_t)depth + 1);\n+        assert(!m_branch[depth].has_value());\n+        m_branch[depth] = std::move(node);\n+    }\n+}\n+\n+/*static*/ bool TaprootBuilder::ValidDepths(const std::vector<int>& depths)\n+{\n+    std::vector<bool> branch;\n+    for (int depth : depths) {\n+        // This inner loop corresponds to effectively the same logic on branch\n+        // as what Insert() performs on the m_branch variable. Instead of\n+        // storing a NodeInfo object, just remember whether or not there is one\n+        // at that depth.\n+        if (depth < 0 || (size_t)depth > TAPROOT_CONTROL_MAX_NODE_COUNT) return false;\n+        if ((size_t)depth + 1 < branch.size()) return false;\n+        while (branch.size() > (size_t)depth && branch[depth]) {\n+            branch.pop_back();\n+            if (depth == 0) return false;\n+            --depth;\n+        }\n+        if (branch.size() <= (size_t)depth) branch.resize((size_t)depth + 1);\n+        assert(!branch[depth]);\n+        branch[depth] = true;\n+    }\n+    // And this check corresponds to the IsComplete() check on m_branch.\n+    return branch.size() == 0 || (branch.size() == 1 && branch[0]);\n+}\n+\n+TaprootBuilder& TaprootBuilder::Add(int depth, const CScript& script, int leaf_version)\n+{\n+    assert((leaf_version & ~TAPROOT_LEAF_MASK) == 0);\n+    if (!IsValid()) return *this;\n+    /* Construct NodeInfo object with leaf hash and - if desired - leaf information. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637436352",
      "id" : 637436352,
      "line" : 464,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzQzNjM1Mg==",
      "original_commit_id" : "f86a68c0b1a6ed9e0c7e6f0ee81989a6129abe30",
      "original_line" : 443,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : 130,
      "pull_request_review_id" : 666184590,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-22T18:52:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637436352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637638714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637638714"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, added commit \"Make XOnlyPubKey act like byte container\".\r\n",
      "commit_id" : "dcc5d64614b317b8c7a0bcb81ed16bf62da7128c",
      "created_at" : "2021-05-24T01:42:09Z",
      "diff_hunk" : "@@ -75,7 +75,7 @@ class base_blob\n         return &m_data[WIDTH];\n     }\n \n-    unsigned int size() const\n+    static constexpr unsigned int size()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637638714",
      "id" : 637638714,
      "in_reply_to_id" : 637407995,
      "line" : 78,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzYzODcxNA==",
      "original_commit_id" : "a2edabe43261ef2859742015a53c34ee8a5d1ee3",
      "original_line" : 78,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/uint256.h",
      "position" : 5,
      "pull_request_review_id" : 666338224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-24T01:42:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637638714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637638924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637638924"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I didn't do that because the descriptor code's `GetOutputType` depended on the exact order of elements in this variant. I've addressed that in a new commit \"Avoid dependence on CTxDestination index order\", and then implemented your suggestion of placing WitnessUnknown last.",
      "commit_id" : "dcc5d64614b317b8c7a0bcb81ed16bf62da7128c",
      "created_at" : "2021-05-24T01:43:12Z",
      "diff_hunk" : "@@ -142,11 +149,11 @@ struct WitnessUnknown\n  *  * ScriptHash: TxoutType::SCRIPTHASH destination (P2SH)\n  *  * WitnessV0ScriptHash: TxoutType::WITNESS_V0_SCRIPTHASH destination (P2WSH)\n  *  * WitnessV0KeyHash: TxoutType::WITNESS_V0_KEYHASH destination (P2WPKH)\n- *  * WitnessUnknown: TxoutType::WITNESS_UNKNOWN/WITNESS_V1_TAPROOT destination (P2W???)\n- *    (taproot outputs do not require their own type as long as no wallet support exists)\n+ *  * WitnessV1Taproot: TxoutType::WITNESS_V1_TAPROOT destination (P2TR)\n+ *  * WitnessUnknown: TxoutType::WITNESS_UNKNOWN destination (P2W???)\n  *  A CTxDestination is the internal data type encoded in a bitcoin address\n  */\n-using CTxDestination = std::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown>;\n+using CTxDestination = std::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown, WitnessV1Taproot>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637638924",
      "id" : 637638924,
      "in_reply_to_id" : 637408318,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzYzODkyNA==",
      "original_commit_id" : "a2edabe43261ef2859742015a53c34ee8a5d1ee3",
      "original_line" : 156,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/script/standard.h",
      "position" : null,
      "pull_request_review_id" : 666338481,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-24T01:43:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637638924",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637639453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637639453"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The explanation is just that this was easier, because while `TxoutType` did have a separation between unknown and taproot, CTxDestination did not. Making them both produce {version, program} as `vSolutions` was easier because it allowed handling them identically in `ExtractDestination`.\r\n\r\nI've addressed this by first changing the Solver output for taproot outputs to be just {program}, like P2WPKH/P2WSH, in a new commit \"c1445ee0d56e56d824bc79a0c9f1db26105ade1f\", and then used that in the later commits.",
      "commit_id" : "dcc5d64614b317b8c7a0bcb81ed16bf62da7128c",
      "created_at" : "2021-05-24T01:45:40Z",
      "diff_hunk" : "@@ -242,8 +242,13 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n         addressRet = hash;\n         return true;\n     }\n-    case TxoutType::WITNESS_UNKNOWN:\n     case TxoutType::WITNESS_V1_TAPROOT: {\n+        WitnessV1Taproot tap;\n+        std::copy(vSolutions[1].begin(), vSolutions[1].end(), tap.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637639453",
      "id" : 637639453,
      "in_reply_to_id" : 637409202,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzYzOTQ1Mw==",
      "original_commit_id" : "a2edabe43261ef2859742015a53c34ee8a5d1ee3",
      "original_line" : 247,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 666339062,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-24T01:45:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637639453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637639590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637639590"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That comment didn't make sense in the commit where it was in. I've moved it, and made it a bit clearer.",
      "commit_id" : "dcc5d64614b317b8c7a0bcb81ed16bf62da7128c",
      "created_at" : "2021-05-24T01:46:16Z",
      "diff_hunk" : "@@ -371,3 +374,99 @@ CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys)\n bool IsValidDestination(const CTxDestination& dest) {\n     return dest.index() != 0;\n }\n+\n+/*static*/ TaprootBuilder::NodeInfo TaprootBuilder::Combine(NodeInfo&& a, NodeInfo&& b)\n+{\n+    NodeInfo ret;\n+    /* Lexicographically sort a and b's hash, and compute parent hash. */\n+    if (a.hash < b.hash) {\n+        ret.hash = (CHashWriter(HASHER_TAPBRANCH) << a.hash << b.hash).GetSHA256();\n+    } else {\n+        ret.hash = (CHashWriter(HASHER_TAPBRANCH) << b.hash << a.hash).GetSHA256();\n+    }\n+    return ret;\n+}\n+\n+void TaprootBuilder::Insert(TaprootBuilder::NodeInfo&& node, int depth)\n+{\n+    assert(depth >= 0 && (size_t)depth <= TAPROOT_CONTROL_MAX_NODE_COUNT);\n+    /* We cannot insert a leaf at a lower depth while a deeper branch is unfinished. Doing\n+     * so would mean the Add() invocations do not correspond to a DFS traversal of a\n+     * binary tree. */\n+    if ((size_t)depth + 1 < m_branch.size()) {\n+        m_valid = false;\n+        return;\n+    }\n+    /* As long as an entry in the branch exists at the specified depth, combine it and propagate up.\n+     * The 'node' variable is overwritten here with the newly combined node. */\n+    while (m_valid && m_branch.size() > (size_t)depth && m_branch[depth].has_value()) {\n+        node = Combine(std::move(node), std::move(*m_branch[depth]));\n+        m_branch.pop_back();\n+        if (depth == 0) m_valid = false; /* Can't propagate further up than the root */\n+        --depth;\n+    }\n+    if (m_valid) {\n+        /* Make sure the branch is big enough to place the new node. */\n+        if (m_branch.size() <= (size_t)depth) m_branch.resize((size_t)depth + 1);\n+        assert(!m_branch[depth].has_value());\n+        m_branch[depth] = std::move(node);\n+    }\n+}\n+\n+/*static*/ bool TaprootBuilder::ValidDepths(const std::vector<int>& depths)\n+{\n+    std::vector<bool> branch;\n+    for (int depth : depths) {\n+        // This inner loop corresponds to effectively the same logic on branch\n+        // as what Insert() performs on the m_branch variable. Instead of\n+        // storing a NodeInfo object, just remember whether or not there is one\n+        // at that depth.\n+        if (depth < 0 || (size_t)depth > TAPROOT_CONTROL_MAX_NODE_COUNT) return false;\n+        if ((size_t)depth + 1 < branch.size()) return false;\n+        while (branch.size() > (size_t)depth && branch[depth]) {\n+            branch.pop_back();\n+            if (depth == 0) return false;\n+            --depth;\n+        }\n+        if (branch.size() <= (size_t)depth) branch.resize((size_t)depth + 1);\n+        assert(!branch[depth]);\n+        branch[depth] = true;\n+    }\n+    // And this check corresponds to the IsComplete() check on m_branch.\n+    return branch.size() == 0 || (branch.size() == 1 && branch[0]);\n+}\n+\n+TaprootBuilder& TaprootBuilder::Add(int depth, const CScript& script, int leaf_version)\n+{\n+    assert((leaf_version & ~TAPROOT_LEAF_MASK) == 0);\n+    if (!IsValid()) return *this;\n+    /* Construct NodeInfo object with leaf hash and - if desired - leaf information. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637639590",
      "id" : 637639590,
      "in_reply_to_id" : 637436352,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzYzOTU5MA==",
      "original_commit_id" : "f86a68c0b1a6ed9e0c7e6f0ee81989a6129abe30",
      "original_line" : 443,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 666339229,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-24T01:46:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637639590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637642539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637642539"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Marking this as resolved. Feel free to comment if the result still isn't clear.",
      "commit_id" : "dcc5d64614b317b8c7a0bcb81ed16bf62da7128c",
      "created_at" : "2021-05-24T01:58:34Z",
      "diff_hunk" : "@@ -829,6 +839,45 @@ class WSHDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed tr(...) descriptor. */\n+class TRDescriptor final : public DescriptorImpl\n+{\n+    std::vector<int> m_depths;\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        TaprootBuilder builder;\n+        assert(m_depths.size() == scripts.size());\n+        for (size_t pos = 0; pos < m_depths.size(); ++pos) {\n+            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r637642539",
      "id" : 637642539,
      "in_reply_to_id" : 590707050,
      "line" : 839,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzY0MjUzOQ==",
      "original_commit_id" : "d5a0dce8fe40153b07ec6e882e8b1568b05e3905",
      "original_line" : 839,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 121,
      "pull_request_review_id" : 666342518,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-24T01:58:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637642539",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the bug referred to [here](https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-846353760) by @MarcoFalke, and addressed most of @Sjors's comments.\r\n\r\nNote: if this is too much, it'd be totally reasonable to split this PR in two, splitting after \"Add tr() descriptor (derivation only, no signing)\". Everything up to there is preparation & descriptor derivation. Everything after is signing logic.",
      "created_at" : "2021-05-24T02:03:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-846681079",
      "id" : 846681079,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NjY4MTA3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-24T06:20:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/846681079",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Being able to make watch-only taproot wallet seems like a nice natural point to split this PR.\r\n\r\ntACK up to c08bb8badb8ab030590fe1bea160078785ecdafe\r\n\r\nIn order to test descriptors with script paths, without having signing code, it would be useful to expand `getaddressinfo` and have it show the TREE of scripts.",
      "created_at" : "2021-05-24T10:24:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-846945215",
      "id" : 846945215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0Njk0NTIxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-24T17:28:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/846945215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I split off the derivation part in #22051.",
      "created_at" : "2021-05-24T22:09:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-847383955",
      "id" : 847383955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NzM4Mzk1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-24T22:09:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847383955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-05-30T11:54:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-850987774",
      "id" : 850987774,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MDk4Nzc3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-30T11:54:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850987774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased after #22051 merge.",
      "created_at" : "2021-06-03T20:36:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-854161735",
      "id" : 854161735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1NDE2MTczNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-03T20:36:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/854161735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r645118943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645118943"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`wallet_taproot.py` already tests address derivation against the python implementation (which is also used by `feature_taproot.py`, so I think that's unnecessary.",
      "commit_id" : "056c3bcfe2d6eb49e8554abb5c0a7a7ce90a1943",
      "created_at" : "2021-06-03T20:54:28Z",
      "diff_hunk" : "@@ -379,4 +381,70 @@ BOOST_AUTO_TEST_CASE(script_standard_GetScriptFor_)\n     BOOST_CHECK(result == expected);\n }\n \n+BOOST_AUTO_TEST_CASE(script_standard_taproot_builder)\n+{\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,1}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,0,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,0,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,0,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,1,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,1,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,1,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,2,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,2,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({0,2,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,0,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,0,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,0,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,1,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,1,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,1,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,2,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,2,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({1,2,2}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,0,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,0,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,0,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,1,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,1,1}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,1,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,2,0}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,2,1}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,2,2}), false);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({2,2,2,3,4,5,6,7,8,9,10,11,12,14,14,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,31,31,31,31,31,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,128}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({128,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}), true);\n+    BOOST_CHECK_EQUAL(TaprootBuilder::ValidDepths({129,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1}), false);\n+\n+    XOnlyPubKey key_inner{ParseHex(\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\")};\n+    XOnlyPubKey key_1{ParseHex(\"c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5\")};\n+    XOnlyPubKey key_2{ParseHex(\"f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9\")};\n+    CScript script_1 = CScript() << ToByteVector(key_1) << OP_CHECKSIG;\n+    CScript script_2 = CScript() << ToByteVector(key_2) << OP_CHECKSIG;\n+    uint256 hash_3 = uint256S(\"31fe7061656bea2a36aa60a2f7ef940578049273746935d296426dc0afd86b68\");\n+\n+    TaprootBuilder builder;\n+    BOOST_CHECK(builder.IsValid() && builder.IsComplete());\n+    builder.Add(2, script_2, 0xc0);\n+    BOOST_CHECK(builder.IsValid() && !builder.IsComplete());\n+    builder.AddOmitted(2, hash_3);\n+    BOOST_CHECK(builder.IsValid() && !builder.IsComplete());\n+    builder.Add(1, script_1, 0xc0);\n+    BOOST_CHECK(builder.IsValid() && builder.IsComplete());\n+    builder.Finalize(key_inner);\n+    BOOST_CHECK(builder.IsValid() && builder.IsComplete());\n+    BOOST_CHECK_EQUAL(EncodeDestination(builder.GetOutput()), \"bc1pj6gaw944fy0xpmzzu45ugqde4rz7mqj5kj0tg8kmr5f0pjq8vnaqgynnge\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r645118943",
      "id" : 645118943,
      "in_reply_to_id" : 637428638,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTExODk0Mw==",
      "original_commit_id" : "f86a68c0b1a6ed9e0c7e6f0ee81989a6129abe30",
      "original_line" : 446,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/test/script_standard_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 675715298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-03T20:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645118943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646836512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646836512"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In e4c8ae471d38e878a69fa8099d75d447319f4037 \"Add TaprootSpendData data structure, equivalent to script map for P2[W]SH\"\r\n\r\nSince we are expecting that the `TaprootSpendData` being merged is for the same scriptPubKey, I think this should assert that the `internal_key` and `merkle_root` match if both have them.",
      "commit_id" : "056c3bcfe2d6eb49e8554abb5c0a7a7ce90a1943",
      "created_at" : "2021-06-07T18:18:36Z",
      "diff_hunk" : "@@ -386,6 +396,17 @@ bool IsValidDestination(const CTxDestination& dest) {\n     return ret;\n }\n \n+void TaprootSpendData::Merge(TaprootSpendData other)\n+{\n+    if (internal_key.IsNull() && !other.internal_key.IsNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646836512",
      "id" : 646836512,
      "line" : 401,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjgzNjUxMg==",
      "original_commit_id" : "e4c8ae471d38e878a69fa8099d75d447319f4037",
      "original_line" : 401,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : 23,
      "pull_request_review_id" : 677745838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-07T19:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646836512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646837025"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646837025"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In e4c8ae471d38e878a69fa8099d75d447319f4037 \"Add TaprootSpendData data structure, equivalent to script map for P2[W]SH\"\r\n\r\nShould this `merkle_root` be guarded with its own `if` instead being combined with the `internal_key`? It looks like in the current usage it doesn't matter, but perhaps in the future it might?",
      "commit_id" : "056c3bcfe2d6eb49e8554abb5c0a7a7ce90a1943",
      "created_at" : "2021-06-07T18:19:26Z",
      "diff_hunk" : "@@ -386,6 +396,17 @@ bool IsValidDestination(const CTxDestination& dest) {\n     return ret;\n }\n \n+void TaprootSpendData::Merge(TaprootSpendData other)\n+{\n+    if (internal_key.IsNull() && !other.internal_key.IsNull()) {\n+        internal_key = other.internal_key;\n+        merkle_root = other.merkle_root;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646837025",
      "id" : 646837025,
      "line" : 403,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjgzNzAyNQ==",
      "original_commit_id" : "e4c8ae471d38e878a69fa8099d75d447319f4037",
      "original_line" : 403,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : 25,
      "pull_request_review_id" : 677745838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-07T19:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646837025",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646839157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646839157"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In e4c8ae471d38e878a69fa8099d75d447319f4037 \"Add TaprootSpendData data structure, equivalent to script map for P2[W]SH\"\r\n\r\nnit:, extra `*/`\r\n\r\n```suggestion\r\n    bool m_parity;            //!< The tweak parity, computed when finalizing. */\r\n    bool m_parity;            //!< The tweak parity, computed when finalizing.\r\n````",
      "commit_id" : "056c3bcfe2d6eb49e8554abb5c0a7a7ce90a1943",
      "created_at" : "2021-06-07T18:22:55Z",
      "diff_hunk" : "@@ -261,6 +284,7 @@ class TaprootBuilder\n \n     XOnlyPubKey m_internal_key;  //!< The internal key, set when finalizing.\n     XOnlyPubKey m_output_key; //!< The output key, computed when finalizing. */\n+    bool m_parity;            //!< The tweak parity, computed when finalizing. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646839157",
      "id" : 646839157,
      "line" : 287,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjgzOTE1Nw==",
      "original_commit_id" : "e4c8ae471d38e878a69fa8099d75d447319f4037",
      "original_line" : 287,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/script/standard.h",
      "position" : 43,
      "pull_request_review_id" : 677745838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-07T19:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646839157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646849541"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646849541"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In ebf44e081ba0ef7b8810497dee47717bb661cbdb \"Add CKey::SignSchnorr function for BIP 340/341 signing\"\r\n\r\nWhy not compare the pubkey against the pubkeys specified in the BIP 340 test vectors?",
      "commit_id" : "056c3bcfe2d6eb49e8554abb5c0a7a7ce90a1943",
      "created_at" : "2021-06-07T18:39:23Z",
      "diff_hunk" : "@@ -302,4 +302,49 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(bip340_test_vectors_signing)\n+{\n+    static const std::vector<std::array<std::string, 4>> VECTORS = {\n+        {{\"0000000000000000000000000000000000000000000000000000000000000003\", \"0000000000000000000000000000000000000000000000000000000000000000\", \"0000000000000000000000000000000000000000000000000000000000000000\", \"E907831F80848D1069A5371B402410364BDF1C5F8307B0084C55F1CE2DCA821525F66A4A85EA8B71E482A74F382D2CE5EBEEE8FDB2172F477DF4900D310536C0\"}},\n+        {{\"B7E151628AED2A6ABF7158809CF4F3C762E7160F38B4DA56A784D9045190CFEF\", \"0000000000000000000000000000000000000000000000000000000000000001\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"6896BD60EEAE296DB48A229FF71DFE071BDE413E6D43F917DC8DCF8C78DE33418906D11AC976ABCCB20B091292BFF4EA897EFCB639EA871CFA95F6DE339E4B0A\"}},\n+        {{\"C90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B14E5C9\", \"C87AA53824B4D7AE2EB035A2B5BBBCCC080E76CDC6D1692C4B0B62D798E6D906\", \"7E2D58D8B3BCDF1ABADEC7829054F90DDA9805AAB56C77333024B9D0A508B75C\", \"5831AAEED7B44BB74E5EAB94BA9D4294C49BCF2A60728D8B4C200F50DD313C1BAB745879A5AD954A72C45A91C3A51D3C7ADEA98D82F8481E0E1E03674A6F3FB7\"}},\n+        {{\"0B432B2677937381AEF05BB02A66ECD012773062CF3FA2549E44F58ED2401710\", \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\", \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\", \"7EB0509757E246F19449885651611CB965ECC1A187DD51B64FDA1EDC9637D5EC97582B9CB13DB3933705B32BA982AF5AF25FD78881EBB32771FC5922EFC66EA3\"}},\n+    };\n+\n+    for (const auto& test : VECTORS) {\n+        auto sec = ParseHex(test[0]);\n+        auto aux = ParseHex(test[1]);\n+        uint256 aux256(aux);\n+        auto msg = ParseHex(test[2]);\n+        uint256 msg256(msg);\n+        auto sig = ParseHex(test[3]);\n+        unsigned char sig64[64];\n+\n+        // Run the untweaked test vectors above, comparing with exact expected signature.\n+        CKey key;\n+        key.Set(sec.begin(), sec.end(), true);\n+        XOnlyPubKey pubkey(key.GetPubKey());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646849541",
      "id" : 646849541,
      "line" : 326,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0Njg0OTU0MQ==",
      "original_commit_id" : "ebf44e081ba0ef7b8810497dee47717bb661cbdb",
      "original_line" : 326,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/test/key_tests.cpp",
      "position" : 25,
      "pull_request_review_id" : 677745838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-07T19:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646849541",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646859980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646859980"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 8d073d0afe285bd04542907428298d377f49c8f9 \"Construct and use PrecomputedTransactionData in PSBT signing\"\r\n\r\n`GetInputUTXO` does all of this already, so I think you can just use that instead of reimplementing the utxo fetching. If you need to do the hash checking, it would probably be worthwhile to implement that in `GetInputUTXO` too.",
      "commit_id" : "056c3bcfe2d6eb49e8554abb5c0a7a7ce90a1943",
      "created_at" : "2021-06-07T18:55:48Z",
      "diff_hunk" : "@@ -227,7 +227,41 @@ void UpdatePSBTOutput(const SigningProvider& provider, PartiallySignedTransactio\n     psbt_out.FromSignatureData(sigdata);\n }\n \n-bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index, int sighash, SignatureData* out_sigdata, bool use_dummy)\n+PrecomputedTransactionData PrecomputePSBTData(const PartiallySignedTransaction& psbt)\n+{\n+    const CMutableTransaction& tx = *psbt.tx;\n+    bool have_all_spent_outputs = true;\n+    std::vector<CTxOut> utxos(tx.vin.size());\n+    for (size_t idx = 0; idx < tx.vin.size(); ++idx) {\n+        if (psbt.inputs.size() <= idx) {\n+            have_all_spent_outputs = false;\n+            continue;\n+        }\n+        const PSBTInput& input = psbt.inputs[idx];\n+        if (input.non_witness_utxo) {\n+            // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.\n+            const COutPoint& prevout = tx.vin[idx].prevout;\n+            if (prevout.n < input.non_witness_utxo->vout.size() && input.non_witness_utxo->GetHash() == prevout.hash) {\n+                utxos[idx] = input.non_witness_utxo->vout[prevout.n];\n+                continue;\n+            }\n+        }\n+        if (!input.witness_utxo.IsNull()) {\n+            utxos[idx] = input.witness_utxo;\n+            continue;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646859980",
      "id" : 646859980,
      "line" : 252,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0Njg1OTk4MA==",
      "original_commit_id" : "8d073d0afe285bd04542907428298d377f49c8f9",
      "original_line" : 252,
      "original_position" : 27,
      "original_start_line" : 241,
      "path" : "src/psbt.cpp",
      "position" : 27,
      "pull_request_review_id" : 677745838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : 241,
      "start_side" : "RIGHT",
      "updated_at" : "2021-06-07T19:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646859980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646860636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646860636"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 8d073d0afe285bd04542907428298d377f49c8f9 \"Construct and use PrecomputedTransactionData in PSBT signing\"\r\n\r\nThis case shouldn't happen because every input in the tx must have a corresponding `PSBTInput`, even if it is empty. So I think this should be an assert as it would be a bug.",
      "commit_id" : "056c3bcfe2d6eb49e8554abb5c0a7a7ce90a1943",
      "created_at" : "2021-06-07T18:56:49Z",
      "diff_hunk" : "@@ -227,7 +227,41 @@ void UpdatePSBTOutput(const SigningProvider& provider, PartiallySignedTransactio\n     psbt_out.FromSignatureData(sigdata);\n }\n \n-bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index, int sighash, SignatureData* out_sigdata, bool use_dummy)\n+PrecomputedTransactionData PrecomputePSBTData(const PartiallySignedTransaction& psbt)\n+{\n+    const CMutableTransaction& tx = *psbt.tx;\n+    bool have_all_spent_outputs = true;\n+    std::vector<CTxOut> utxos(tx.vin.size());\n+    for (size_t idx = 0; idx < tx.vin.size(); ++idx) {\n+        if (psbt.inputs.size() <= idx) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646860636",
      "id" : 646860636,
      "line" : 236,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0Njg2MDYzNg==",
      "original_commit_id" : "8d073d0afe285bd04542907428298d377f49c8f9",
      "original_line" : 236,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/psbt.cpp",
      "position" : 11,
      "pull_request_review_id" : 677745838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-07T19:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646860636",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646873647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646873647"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In ea07a01b0cf7256304b17508debf74d94cccdac7 \"Basic Taproot signing logic in script/sign.cpp\"\r\n\r\nCan you explain what this is doing and why?",
      "commit_id" : "056c3bcfe2d6eb49e8554abb5c0a7a7ce90a1943",
      "created_at" : "2021-06-07T19:17:34Z",
      "diff_hunk" : "@@ -104,6 +152,85 @@ static bool CreateSig(const BaseSignatureCreator& creator, SignatureData& sigdat\n     return false;\n }\n \n+static bool CreateTaprootScriptSig(const BaseSignatureCreator& creator, SignatureData& sigdata, const SigningProvider& provider, std::vector<unsigned char>& sig_out, const XOnlyPubKey& pubkey, const uint256& leaf_hash, SigVersion sigversion)\n+{\n+    auto lookup_key = std::make_pair(pubkey, leaf_hash);\n+    auto it = sigdata.taproot_script_sigs.find(lookup_key);\n+    if (it != sigdata.taproot_script_sigs.end()) {\n+        sig_out = it->second;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#discussion_r646873647",
      "id" : 646873647,
      "line" : 164,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0Njg3MzY0Nw==",
      "original_commit_id" : "ea07a01b0cf7256304b17508debf74d94cccdac7",
      "original_line" : 161,
      "original_position" : 79,
      "original_start_line" : 157,
      "path" : "src/script/sign.cpp",
      "position" : 106,
      "pull_request_review_id" : 677745838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21365",
      "side" : "RIGHT",
      "start_line" : 160,
      "start_side" : "RIGHT",
      "updated_at" : "2021-06-07T19:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646873647",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Since #22166 uses \"Add TaprootSpendData data structure, equivalent to script map for P2[W]SH\" from here but with scripts as a multimap, in the interest of reducing future merge conflicts, I think this PR should use the same commit and use the multimap too. I expect that the change to using a multimap might cause some problems with the later commits in this PR.",
      "created_at" : "2021-06-07T19:38:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-856204356",
      "id" : 856204356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21365",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1NjIwNDM1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-07T19:38:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/856204356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]
