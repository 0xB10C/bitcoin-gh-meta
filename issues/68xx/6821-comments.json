[
   {
      "body" : "Thanks for trying to address this issue; I agree it is suboptimal that we could be in a situation where we're requesting the same headers from the same peer, multiple times.\r\n\r\nHowever, I believe that sending a getheaders when a new block is announced is currently the only protection a node has against having chosen a bad peer for its initial headers sync.  That is, if the peer a node chooses for initial headers sync never responds to the getheaders message, or never sends headers to get it caught up enough to start sending getheaders messages to other peers, the node will never sync up with the network.\r\n\r\nSo my initial reaction is that this is perhaps not the best approach.  I'd be inclined to solve this by trying to keep better per-node state (like time of last getheaders message to try avoiding multiple getheaders messages in flight to the same peer, and if a headers message comes back that doesn't include some announced block and isn't full then we could send another getheaders message, etc).  Definitely some edge cases here that need thought...",
      "created_at" : "2015-10-13T20:09:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6821#issuecomment-147837945",
      "id" : 147837945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6821",
      "updated_at" : "2015-10-13T20:09:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/147837945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "I thought about doing something like this per-node as well; but in that case, couldn't the peer still start one redundant \"getheaders request chain\" per peer when it receives inv messages?  This still seems like a lot of waste.\r\n\r\nI understand your point about selecting a bad peer, though.  My impression, however, is that this is only a related but otherwise independent issue; no?  In that case, wouldn't it make more sense to introduce a \"timeout\" after which the node chooses a different peer for requesting headers?  This would solve the issue at the root (and is somehow similar to the current protection with inv messages, except that it would be more predictable and less hackish).",
      "created_at" : "2015-10-14T05:18:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6821#issuecomment-147937469",
      "id" : 147937469,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6821",
      "updated_at" : "2015-10-14T05:18:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/147937469",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=3",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "body" : "I don't think there's agreement on this, and development seems to be stuck. @sdaftuar @domob1812 how to proceed here?",
      "created_at" : "2016-04-19T08:46:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6821#issuecomment-211804009",
      "id" : 211804009,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6821",
      "updated_at" : "2016-04-19T08:46:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/211804009",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
