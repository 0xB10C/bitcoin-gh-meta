[
   {
      "body" : "Yep I agree this would be good; I'll think about this for a bit and likely come back to you with a few questions...",
      "created_at" : "2015-04-08T13:52:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5982#issuecomment-90923398",
      "id" : 90923398,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5982",
      "updated_at" : "2015-04-08T13:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90923398",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "For negotiating headers versus inv's, I guess the method that occurs to me is to bump the protocol version number, is that what you had in mind?\r\n\r\nIt seems to me that the chief problem to solve is making sure that when we send headers to a peer, they will be accepted -- not rejected because of a missing prior header.  As I understand the code, none of the state we're currently keeping would tell us what headers a given peer has already seen.  The approach I'm working on now would be to start keeping track of the last header we've sent a peer, and combine that with pindexBestKnownBlock (best block that the peer has announced to us) to estimate our peer's best header.  Then, in the places where we currently inv a block, I'd send headers to the peer, the range of which I'd calculate by starting at the block being inv'ed, and walking back until I either get to the last header I've sent that peer (pindexLastHeaderSent), or pindexBestKnownBlock, or an ancestor of either (ie in the event of a reorg).\r\n\r\nAnd I was also thinking that in the event that either pindexBestKnownBlock & pindexLastHeaderSent are both NULL or that the above algorithm would generate a too-long headers chain (not sure what value to use here, maybe only be willing to send up to 8 or 16 headers or something?), I'd revert to just sending an inv, and letting the peer figure out what to do.  If we let that value be too large, then a node doing initial block download would be inundated with headers from all its peers if a block is announced during the download, which seems undesirable.  On the other hand, I want it to not be so small as to be useless during a reorg.\r\n\r\nAny thoughts on this approach?",
      "created_at" : "2015-04-10T23:49:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5982#issuecomment-91720559",
      "id" : 91720559,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5982",
      "updated_at" : "2015-04-10T23:49:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91720559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "You're going further than I imagined, nice :)\r\n\r\nSo, for the negotiation: either a protocol version bump, or sending some new and optional (thus otherwise ignored) message type to indicate being fine with being fed headers for block propagation. In either case, this probably requires a small BIP (like BIP 35 or BIP 61).\r\n\r\nI was just thinking about relaying whatever new block index entries become part of _our_ new best block chain (see the code touched by #5307, but send a headers message rather than an inv). Assuming peers actively try to synchronize with us, typically just sending our new best chain entries should suffice to let them keep up.\r\n\r\nTrying to figure out which headers they already have may help of course, but we should avoid trying to push headers to a node that is still in initial sync mode, as that would just slow them down.\r\n\r\nAlso, there is currently no infrastructure for avoiding duplication in headers announcement (while there is for inv messages). Perhaps the inv code should be reused/generalized. This may not be necessary if the handling logic is good enough to keep track of which headers a peer has.",
      "created_at" : "2015-04-11T10:05:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5982#issuecomment-91817153",
      "id" : 91817153,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5982",
      "updated_at" : "2015-04-11T10:05:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91817153",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
