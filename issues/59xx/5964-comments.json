[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27684977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27684977"
         }
      },
      "body" : "Does this work when the timestamp of the first item in the queue is in the past?",
      "commit_id" : "c7922acaad84e0573c508b785380b1c2ede94a6a",
      "created_at" : "2015-04-02T18:40:32Z",
      "diff_hunk" : "@@ -0,0 +1,87 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler()\n+{\n+}\n+\n+\n+boost::thread*\n+CScheduler::run()\n+{\n+    boost::thread* t = new boost::thread(boost::bind(&CScheduler::SchedulerLoop, this));\n+    return t;\n+}\n+\n+void\n+CScheduler::SchedulerLoop()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1)\n+    {\n+        if (taskQueue.empty())\n+        {\n+            // Wait until there is something to do.\n+            newTaskScheduled.wait(lock);\n+        }\n+        else\n+        {\n+            // Wait until either there is a new task, or until\n+            // the time of the first item on the queue:\n+            while (!taskQueue.empty() &&\n+                   newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27684977",
      "id" : 27684977,
      "original_commit_id" : "313bcd909d326985da92d515ec294eaa6f54b9a5",
      "original_position" : 42,
      "path" : "src/scheduler.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
      "updated_at" : "2015-04-03T15:53:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27684977",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685089"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685089"
         }
      },
      "body" : "Nit: coding style (braces on the same line).",
      "commit_id" : "c7922acaad84e0573c508b785380b1c2ede94a6a",
      "created_at" : "2015-04-02T18:41:32Z",
      "diff_hunk" : "@@ -0,0 +1,87 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler()\n+{\n+}\n+\n+\n+boost::thread*\n+CScheduler::run()\n+{\n+    boost::thread* t = new boost::thread(boost::bind(&CScheduler::SchedulerLoop, this));\n+    return t;\n+}\n+\n+void\n+CScheduler::SchedulerLoop()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1)\n+    {\n+        if (taskQueue.empty())\n+        {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685089",
      "id" : 27685089,
      "original_commit_id" : "313bcd909d326985da92d515ec294eaa6f54b9a5",
      "original_position" : 33,
      "path" : "src/scheduler.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
      "updated_at" : "2015-04-03T15:53:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685145"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685145"
         }
      },
      "body" : "Nit: notify_one should be enough (and slightly more efficient, if we'd ever have multiple runner threads).",
      "commit_id" : "c7922acaad84e0573c508b785380b1c2ede94a6a",
      "created_at" : "2015-04-02T18:42:08Z",
      "diff_hunk" : "@@ -0,0 +1,87 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler()\n+{\n+}\n+\n+\n+boost::thread*\n+CScheduler::run()\n+{\n+    boost::thread* t = new boost::thread(boost::bind(&CScheduler::SchedulerLoop, this));\n+    return t;\n+}\n+\n+void\n+CScheduler::SchedulerLoop()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1)\n+    {\n+        if (taskQueue.empty())\n+        {\n+            // Wait until there is something to do.\n+            newTaskScheduled.wait(lock);\n+        }\n+        else\n+        {\n+            // Wait until either there is a new task, or until\n+            // the time of the first item on the queue:\n+            while (!taskQueue.empty() &&\n+                   newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout)\n+            {\n+                // Keep waiting until timeout\n+            }\n+            if (taskQueue.empty()) continue;\n+\n+            Function f = taskQueue.begin()->second;\n+            taskQueue.erase(taskQueue.begin());\n+\n+            // Unlock before calling f, so it can reschedule itself or another task\n+            // without deadlocking:\n+            lock.unlock();\n+            f();\n+            lock.lock();\n+        }\n+    }\n+}\n+\n+void\n+CScheduler::schedule(CScheduler::Function f, boost::chrono::system_clock::time_point t)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+        taskQueue.insert(std::make_pair(t, f));\n+    }\n+    newTaskScheduled.notify_all();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685145",
      "id" : 27685145,
      "original_commit_id" : "313bcd909d326985da92d515ec294eaa6f54b9a5",
      "original_position" : 67,
      "path" : "src/scheduler.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
      "updated_at" : "2015-04-03T15:53:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685145",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "concept ACK\r\nCScheduler ACK\r\n\r\n* Yes, DumpAddresses thread is a prime candidate for this\r\n* Ditto ThreadFlushWalletDB\r\n* Disagree on ThreadImport -- ThreadImport is a prime candidate for something to be executed in a long running thread of its own.\r\n",
      "created_at" : "2015-04-02T18:44:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-89005975",
      "id" : 89005975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
      "updated_at" : "2015-04-02T18:44:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89005975",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685407"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685407"
         }
      },
      "body" : ".wait() may wake spuriously, so it's better to turn the surrounding if into a while loop. I believe that means you also won't have to deal with the queue-empty case in the loop below.",
      "commit_id" : "c7922acaad84e0573c508b785380b1c2ede94a6a",
      "created_at" : "2015-04-02T18:45:16Z",
      "diff_hunk" : "@@ -0,0 +1,87 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler()\n+{\n+}\n+\n+\n+boost::thread*\n+CScheduler::run()\n+{\n+    boost::thread* t = new boost::thread(boost::bind(&CScheduler::SchedulerLoop, this));\n+    return t;\n+}\n+\n+void\n+CScheduler::SchedulerLoop()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1)\n+    {\n+        if (taskQueue.empty())\n+        {\n+            // Wait until there is something to do.\n+            newTaskScheduled.wait(lock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685407",
      "id" : 27685407,
      "original_commit_id" : "313bcd909d326985da92d515ec294eaa6f54b9a5",
      "original_position" : 35,
      "path" : "src/scheduler.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
      "updated_at" : "2015-04-03T15:53:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685407",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685862"
         }
      },
      "body" : "Unsure about this, but leaving the thread running forever may cause destruction order issues if a task is running exactly at shutdown. A destructor that sets an 'exit' bool flag (which the scheduler thread checks), and waits for all scheduler threads to exit may be needed. ",
      "commit_id" : "c7922acaad84e0573c508b785380b1c2ede94a6a",
      "created_at" : "2015-04-02T18:50:14Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SCHEDULER_H\n+#define BITCOIN_SCHEDULER_H\n+\n+//\n+// NOTE:\n+// boost::thread / boost::function / boost::chrono should be ported to\n+// std::thread / std::function / std::chrono when we support C++11.\n+//\n+#include <boost/function.hpp>\n+#include <boost/chrono/chrono.hpp>\n+#include <boost/thread.hpp>\n+#include <map>\n+\n+//\n+// Simple class for background tasks that should be run\n+// periodically or once \"after a while\"\n+//\n+// Usage:\n+//\n+// CScheduler s;\n+// s.scheduleFromNow(doSomething, 11); // Assuming a: void doSomething() { }\n+// s.scheduleFromNow(boost::bind(Class::func, this, argument), 3);\n+// boost::thread* t = s.run();\n+//\n+// Thread lifetime management (interruption, joining, deletion) is left up to the caller.\n+//\n+class CScheduler\n+{\n+public:\n+    CScheduler();\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685862",
      "id" : 27685862,
      "original_commit_id" : "313bcd909d326985da92d515ec294eaa6f54b9a5",
      "original_position" : 35,
      "path" : "src/scheduler.h",
      "position" : 35,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
      "updated_at" : "2015-04-03T15:53:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Agree with @jgarzik; threadimport should not run in the scheduler, as it is expected to take up to hours - blocking several other operations. Wallet flushing is a good candidate.",
      "created_at" : "2015-04-02T18:54:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-89008405",
      "id" : 89008405,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
      "updated_at" : "2015-04-02T18:54:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89008405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27736643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27736643"
         }
      },
      "body" : "Thread lifetime managment is up to the caller. For Bitcoin, the thread is added to the main thread group, and all the threads are interrupted and joined before shutdown (see WaitForShutdown() in bitcoind.cpp or BitcoinCore::shutdown() in qt/bitcoin.cpp).\r\n\r\n",
      "commit_id" : "c7922acaad84e0573c508b785380b1c2ede94a6a",
      "created_at" : "2015-04-03T15:52:29Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SCHEDULER_H\n+#define BITCOIN_SCHEDULER_H\n+\n+//\n+// NOTE:\n+// boost::thread / boost::function / boost::chrono should be ported to\n+// std::thread / std::function / std::chrono when we support C++11.\n+//\n+#include <boost/function.hpp>\n+#include <boost/chrono/chrono.hpp>\n+#include <boost/thread.hpp>\n+#include <map>\n+\n+//\n+// Simple class for background tasks that should be run\n+// periodically or once \"after a while\"\n+//\n+// Usage:\n+//\n+// CScheduler s;\n+// s.scheduleFromNow(doSomething, 11); // Assuming a: void doSomething() { }\n+// s.scheduleFromNow(boost::bind(Class::func, this, argument), 3);\n+// boost::thread* t = s.run();\n+//\n+// Thread lifetime management (interruption, joining, deletion) is left up to the caller.\n+//\n+class CScheduler\n+{\n+public:\n+    CScheduler();\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27736643",
      "id" : 27736643,
      "original_commit_id" : "313bcd909d326985da92d515ec294eaa6f54b9a5",
      "original_position" : 35,
      "path" : "src/scheduler.h",
      "position" : 35,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
      "updated_at" : "2015-04-03T15:53:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27736643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "Fixed @sipa's nits, including running scheduler.cpp/.h through clang-format.\r\n\r\nAnd reverted the ThreadImport change, so it is it's own thread again.\r\n",
      "created_at" : "2015-04-03T15:55:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-89336206",
      "id" : 89336206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
      "updated_at" : "2015-04-03T15:55:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89336206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   }
]
