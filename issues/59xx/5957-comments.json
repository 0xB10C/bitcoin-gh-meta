[
   {
      "body" : "Nice.. I've wanted something like 'generate'  Passes quick-glance review.  Will test.\r\n",
      "created_at" : "2015-04-01T03:56:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-88342337",
      "id" : 88342337,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
      "updated_at" : "2015-04-01T03:56:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88342337",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "Travis failure\r\n```\r\nRunning testscript wallet.py...\r\nInitializing test directory /tmp/testFqH6I5\r\nMining blocks...\r\nJSONRPC error: value is type \r\n  File \"/home/travis/build/bitcoin/bitcoin/bitcoin-i686-pc-linux-gnu/qa/rpc-tests/test_framework.py\", line 117, in main\r\n    self.run_test()\r\n  File \"/home/travis/build/bitcoin/bitcoin/bitcoin-i686-pc-linux-gnu/qa/rpc-tests/wallet.py\", line 43, in run_test\r\n    self.nodes[0].generate(1)\r\n  File \"/home/travis/build/bitcoin/bitcoin/bitcoin-i686-pc-linux-gnu/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/authproxy.py\", line 126, in __call__\r\n    raise JSONRPCException(response['error'])\r\nCleaning up\r\nFailed\r\n```",
      "created_at" : "2015-04-01T07:32:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-88378557",
      "id" : 88378557,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
      "updated_at" : "2015-04-01T07:32:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88378557",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "body" : "@fanquake Fixed.",
      "created_at" : "2015-04-01T20:03:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-88615107",
      "id" : 88615107,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
      "updated_at" : "2015-04-01T20:03:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88615107",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27958516"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27958516"
         }
      },
      "body" : "We should probably change this at some point too to not update the mapArgs. Throughout the program we assume that mapArgs is read-only after initialization. This kind of r/w access would need proper locking around everything. No change needed for this pull but I'm just reminded of it.\r\n",
      "commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "created_at" : "2015-04-08T10:33:04Z",
      "diff_hunk" : "@@ -154,52 +190,9 @@ Value setgenerate(const Array& params, bool fHelp)\n             fGenerate = false;\n     }\n \n-    // -regtest mode: don't return until nGenProcLimit blocks are generated\n-    if (fGenerate && Params().MineBlocksOnDemand())\n-    {\n-        int nHeightStart = 0;\n-        int nHeightEnd = 0;\n-        int nHeight = 0;\n-        int nGenerate = (nGenProcLimit > 0 ? nGenProcLimit : 1);\n-        CReserveKey reservekey(pwalletMain);\n-\n-        {   // Don't keep cs_main locked\n-            LOCK(cs_main);\n-            nHeightStart = chainActive.Height();\n-            nHeight = nHeightStart;\n-            nHeightEnd = nHeightStart+nGenerate;\n-        }\n-        unsigned int nExtraNonce = 0;\n-        Array blockHashes;\n-        while (nHeight < nHeightEnd)\n-        {\n-            auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey));\n-            if (!pblocktemplate.get())\n-                throw JSONRPCError(RPC_INTERNAL_ERROR, \"Wallet keypool empty\");\n-            CBlock *pblock = &pblocktemplate->block;\n-            {\n-                LOCK(cs_main);\n-                IncrementExtraNonce(pblock, chainActive.Tip(), nExtraNonce);\n-            }\n-            while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus())) {\n-                // Yes, there is a chance every nonce could fail to satisfy the -regtest\n-                // target -- 1 in 2^(2^32). That ain't gonna happen.\n-                ++pblock->nNonce;\n-            }\n-            CValidationState state;\n-            if (!ProcessNewBlock(state, NULL, pblock))\n-                throw JSONRPCError(RPC_INTERNAL_ERROR, \"ProcessNewBlock, block not accepted\");\n-            ++nHeight;\n-            blockHashes.push_back(pblock->GetHash().GetHex());\n-        }\n-        return blockHashes;\n-    }\n-    else // Not -regtest: start generate thread, return immediately\n-    {\n-        mapArgs[\"-gen\"] = (fGenerate ? \"1\" : \"0\");\n-        mapArgs [\"-genproclimit\"] = itostr(nGenProcLimit);\n-        GenerateBitcoins(fGenerate, pwalletMain, nGenProcLimit);\n-    }\n+    mapArgs[\"-gen\"] = (fGenerate ? \"1\" : \"0\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27958516",
      "id" : 27958516,
      "original_commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "original_position" : 106,
      "path" : "src/rpcmining.cpp",
      "position" : 106,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
      "updated_at" : "2015-04-08T10:33:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27958516",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "This is obviously the right way to go, utACK",
      "created_at" : "2015-04-08T10:34:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-90875097",
      "id" : 90875097,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
      "updated_at" : "2015-04-08T10:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90875097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27985935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27985935"
         }
      },
      "body" : "Can't we directly return CheckProofOfWork() here instead of true and remove the later ```UintToArith256(hash) <= hashTarget``` check in ScanLoop() [which means you can also remove the uint256 *phash param in ScanHash()] ?\r\n",
      "commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "created_at" : "2015-04-08T16:19:29Z",
      "diff_hunk" : "@@ -365,45 +365,34 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n \n //\n // ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// The nonce is usually preserved between calls, but periodically the block is\n+// rebuilt and nNonce starts over at zero.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, uint256 *phash)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n-\n     while (true) {\n-        nNonce++;\n-\n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+        pblock->nNonce++;\n+        *phash = pblock->GetHash();\n \n         // Return the nonce if the hash has at least some zero bits,\n         // caller will check if it has enough to reach the target\n         if (((uint16_t*)phash)[15] == 0)\n             return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27985935",
      "id" : 27985935,
      "original_commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "original_position" : 50,
      "path" : "src/miner.cpp",
      "position" : 50,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
      "updated_at" : "2015-04-08T16:19:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27985935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27986007"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27986007"
         }
      },
      "body" : "Isn't this included here https://github.com/bitcoin/bitcoin/pull/5957/files#diff-4a59b408ad3778278c3aeffa7da33c3cR383   ?",
      "commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "created_at" : "2015-04-08T16:20:33Z",
      "diff_hunk" : "@@ -435,6 +424,56 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool static ScanLoop(CBlock *pblock, CBlockIndex *pindexPrev, CWallet *pwallet, CReserveKey& reservekey)\n+{\n+    UpdateTime(pblock, pindexPrev);\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n+\n+    uint256 hash;\n+    if (ScanHash(pblock, &hash)) {\n+        if (UintToArith256(hash) <= hashTarget) {\n+            // Found a solution\n+            SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+            LogPrintf(\"BitcoinMiner:\\n\");\n+            LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n+            ProcessBlockFound(pblock, *pwallet, reservekey);\n+            SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool MineBlock(CWallet *pwallet, uint256& hash)\n+{\n+    CReserveKey reservekey(pwallet);\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanLoop(pblock, pindexPrev, pwallet, reservekey)) {\n+                hash = pblock->GetHash();\n+                return true;\n+            }\n+            boost::this_thread::interruption_point();\n+            if (pblock->nNonce >= 0xffff0000)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27986007",
      "id" : 27986007,
      "original_commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "original_position" : 121,
      "path" : "src/miner.cpp",
      "position" : 121,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
      "updated_at" : "2015-04-08T16:20:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27986007",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27986025"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27986025"
         }
      },
      "body" : "Isn't this included here https://github.com/bitcoin/bitcoin/pull/5957/files#diff-4a59b408ad3778278c3aeffa7da33c3cR383   ?",
      "commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "created_at" : "2015-04-08T16:20:44Z",
      "diff_hunk" : "@@ -476,52 +515,23 @@ void static BitcoinMiner(CWallet *pwallet)\n             // Search\n             //\n             int64_t nStart = GetTime();\n-            arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n-            uint256 hash;\n-            uint32_t nNonce = 0;\n             while (true) {\n                 // Check if something found\n-                if (ScanHash(pblock, nNonce, &hash))\n-                {\n-                    if (UintToArith256(hash) <= hashTarget)\n-                    {\n-                        // Found a solution\n-                        pblock->nNonce = nNonce;\n-                        assert(hash == pblock->GetHash());\n-\n-                        SetThreadPriority(THREAD_PRIORITY_NORMAL);\n-                        LogPrintf(\"BitcoinMiner:\\n\");\n-                        LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n-                        ProcessBlockFound(pblock, *pwallet, reservekey);\n-                        SetThreadPriority(THREAD_PRIORITY_LOWEST);\n-\n-                        // In regression test mode, stop mining after a block is found.\n-                        if (Params().MineBlocksOnDemand())\n-                            throw boost::thread_interrupted();\n-\n-                        break;\n-                    }\n-                }\n+                if (ScanLoop(pblock, pindexPrev, pwallet, reservekey))\n+                    break;\n \n                 // Check for stop or if block needs to be rebuilt\n                 boost::this_thread::interruption_point();\n                 // Regtest mode doesn't require peers\n                 if (vNodes.empty() && Params().MiningRequiresPeers())\n                     break;\n-                if (nNonce >= 0xffff0000)\n+                if (pblock->nNonce >= 0xffff0000)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27986025",
      "id" : 27986025,
      "original_commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "original_position" : 181,
      "path" : "src/miner.cpp",
      "position" : 181,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
      "updated_at" : "2015-04-08T16:20:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27986025",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27987670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27987670"
         }
      },
      "body" : "Even without CheckProofOfWork, that check belongs inside ScanHash so you can save the hash parameter and the hash parameter and you can reuse the ```arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);``` instead of repeating the conversion every time ```((uint16_t*)phash)[15] == 0```. At that point, I'm not sure it's worth it to remove the optimization but I'm still not opposed to removing it.\r\nAnd of course it can be && in the condition rather than returning.",
      "commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "created_at" : "2015-04-08T16:36:37Z",
      "diff_hunk" : "@@ -365,45 +365,34 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n \n //\n // ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// The nonce is usually preserved between calls, but periodically the block is\n+// rebuilt and nNonce starts over at zero.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, uint256 *phash)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n-\n     while (true) {\n-        nNonce++;\n-\n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+        pblock->nNonce++;\n+        *phash = pblock->GetHash();\n \n         // Return the nonce if the hash has at least some zero bits,\n         // caller will check if it has enough to reach the target\n         if (((uint16_t*)phash)[15] == 0)\n             return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27987670",
      "id" : 27987670,
      "original_commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "original_position" : 50,
      "path" : "src/miner.cpp",
      "position" : 50,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
      "updated_at" : "2015-04-08T16:36:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27987670",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27996629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27996629"
         }
      },
      "body" : "This is about resetting the nonce if it's about to overflow. The other check is about occasionally interrupting the mining loop.",
      "commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "created_at" : "2015-04-08T18:09:36Z",
      "diff_hunk" : "@@ -435,6 +424,56 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool static ScanLoop(CBlock *pblock, CBlockIndex *pindexPrev, CWallet *pwallet, CReserveKey& reservekey)\n+{\n+    UpdateTime(pblock, pindexPrev);\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n+\n+    uint256 hash;\n+    if (ScanHash(pblock, &hash)) {\n+        if (UintToArith256(hash) <= hashTarget) {\n+            // Found a solution\n+            SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+            LogPrintf(\"BitcoinMiner:\\n\");\n+            LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n+            ProcessBlockFound(pblock, *pwallet, reservekey);\n+            SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool MineBlock(CWallet *pwallet, uint256& hash)\n+{\n+    CReserveKey reservekey(pwallet);\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanLoop(pblock, pindexPrev, pwallet, reservekey)) {\n+                hash = pblock->GetHash();\n+                return true;\n+            }\n+            boost::this_thread::interruption_point();\n+            if (pblock->nNonce >= 0xffff0000)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27996629",
      "id" : 27996629,
      "original_commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "original_position" : 121,
      "path" : "src/miner.cpp",
      "position" : 121,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
      "updated_at" : "2015-04-08T18:09:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27996629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27996954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27996954"
         }
      },
      "body" : "Yeah, just CheckProofOfWork would be fine, if we removed its error reporting (which imho we should in any case...), as now regtest mining beyond the first 2016 blocks prints 1000s of error messages to the log for each miner block as a result.",
      "commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "created_at" : "2015-04-08T18:12:42Z",
      "diff_hunk" : "@@ -365,45 +365,34 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n \n //\n // ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// The nonce is usually preserved between calls, but periodically the block is\n+// rebuilt and nNonce starts over at zero.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, uint256 *phash)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n-\n     while (true) {\n-        nNonce++;\n-\n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+        pblock->nNonce++;\n+        *phash = pblock->GetHash();\n \n         // Return the nonce if the hash has at least some zero bits,\n         // caller will check if it has enough to reach the target\n         if (((uint16_t*)phash)[15] == 0)\n             return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27996954",
      "id" : 27996954,
      "original_commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "original_position" : 50,
      "path" : "src/miner.cpp",
      "position" : 50,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
      "updated_at" : "2015-04-08T18:12:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27996954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27998129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27998129"
         }
      },
      "body" : "Agree.",
      "commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "created_at" : "2015-04-08T18:23:34Z",
      "diff_hunk" : "@@ -154,52 +190,9 @@ Value setgenerate(const Array& params, bool fHelp)\n             fGenerate = false;\n     }\n \n-    // -regtest mode: don't return until nGenProcLimit blocks are generated\n-    if (fGenerate && Params().MineBlocksOnDemand())\n-    {\n-        int nHeightStart = 0;\n-        int nHeightEnd = 0;\n-        int nHeight = 0;\n-        int nGenerate = (nGenProcLimit > 0 ? nGenProcLimit : 1);\n-        CReserveKey reservekey(pwalletMain);\n-\n-        {   // Don't keep cs_main locked\n-            LOCK(cs_main);\n-            nHeightStart = chainActive.Height();\n-            nHeight = nHeightStart;\n-            nHeightEnd = nHeightStart+nGenerate;\n-        }\n-        unsigned int nExtraNonce = 0;\n-        Array blockHashes;\n-        while (nHeight < nHeightEnd)\n-        {\n-            auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey));\n-            if (!pblocktemplate.get())\n-                throw JSONRPCError(RPC_INTERNAL_ERROR, \"Wallet keypool empty\");\n-            CBlock *pblock = &pblocktemplate->block;\n-            {\n-                LOCK(cs_main);\n-                IncrementExtraNonce(pblock, chainActive.Tip(), nExtraNonce);\n-            }\n-            while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus())) {\n-                // Yes, there is a chance every nonce could fail to satisfy the -regtest\n-                // target -- 1 in 2^(2^32). That ain't gonna happen.\n-                ++pblock->nNonce;\n-            }\n-            CValidationState state;\n-            if (!ProcessNewBlock(state, NULL, pblock))\n-                throw JSONRPCError(RPC_INTERNAL_ERROR, \"ProcessNewBlock, block not accepted\");\n-            ++nHeight;\n-            blockHashes.push_back(pblock->GetHash().GetHex());\n-        }\n-        return blockHashes;\n-    }\n-    else // Not -regtest: start generate thread, return immediately\n-    {\n-        mapArgs[\"-gen\"] = (fGenerate ? \"1\" : \"0\");\n-        mapArgs [\"-genproclimit\"] = itostr(nGenProcLimit);\n-        GenerateBitcoins(fGenerate, pwalletMain, nGenProcLimit);\n-    }\n+    mapArgs[\"-gen\"] = (fGenerate ? \"1\" : \"0\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27998129",
      "id" : 27998129,
      "original_commit_id" : "e2edf95cd3f43331843676e49a82830128a95050",
      "original_position" : 106,
      "path" : "src/rpcmining.cpp",
      "position" : 106,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
      "updated_at" : "2015-04-08T18:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27998129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
