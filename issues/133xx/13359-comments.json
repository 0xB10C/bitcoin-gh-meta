[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "How about using something like `typename std::enable_if<std::is_same<T, CTransaction>::value || std::is_same<T, CMutableTransaction>::value>::type` in place of `static_assert`? I haven't tested this but I think it could be defined as an abstract transaction template type and then used to restrain the type of each such template.\r\n\r\nExample use here: https://github.com/bitcoin/bitcoin/pull/13076/files#diff-4a0cb5ad5e93d187a1b065a99bbae143",
      "created_at" : "2018-06-01T12:28:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13359#issuecomment-393865419",
      "id" : 393865419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13359",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5Mzg2NTQxOQ==",
      "updated_at" : "2018-06-01T12:28:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/393865419",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   }
]
