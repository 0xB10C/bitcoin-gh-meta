[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26646](https://github.com/bitcoin/bitcoin/pull/26646) (validation, bugfix: provide more info in *MempoolAcceptResult by glozow)\n* [#25429](https://github.com/bitcoin/bitcoin/pull/25429) (refactor: Avoid UniValue copies by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-12-16T11:27:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1354593703",
      "id" : 1354593703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26711",
      "node_id" : "IC_kwDOABII585QvXWn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1354593703/reactions"
      },
      "updated_at" : "2023-01-06T21:56:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1354593703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-01-11T13:47:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1378778140",
      "id" : 1378778140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26711",
      "node_id" : "IC_kwDOABII585SLnwc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1378778140/reactions"
      },
      "updated_at" : "2023-01-11T13:47:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1378778140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072139558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072139558"
         }
      },
      "author_association" : "MEMBER",
      "body" : "cb065422e58be7558e6c2ad9eadfa885bb48c708\r\nLet's add an Assume checking `tx == package.end()`?",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-17T12:20:04Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072139558",
      "id" : 1072139558,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584_540m",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1251451996,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072139558/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-17T12:29:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072139558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072167416"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072167416"
         }
      },
      "author_association" : "MEMBER",
      "body" : "cb065422e58be7558e6c2ad9eadfa885bb48c708\r\n\r\nWhat you're saying in the commit message is true only for `TxValidationResult::TX_MEMPOOL_POLICY` or `TxValidationResult::TX_MISSING_INPUTS`? In other failures, we won't validate the child for the second time (because it would trigger quit_early)\r\n\r\nWhat's even worse than a mistake in the commit message, you won't be able to catch other kinds of failures here (because you don't set `quit_early` here), so you might do some extra work which should have been avoided otherwise, no?",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-17T12:49:10Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);\n+                // Unless we're quitting early, validate the child outside of this loop.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072167416",
      "id" : 1072167416,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584_5_n4",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1399,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 6,
      "pull_request_review_id" : 1251492911,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072167416/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-17T12:50:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072167416",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072204405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072204405"
         }
      },
      "author_association" : "MEMBER",
      "body" : "cb065422e58be7558e6c2ad9eadfa885bb48c708\r\n\r\nAfter this change it's impossible to hit `quit_early=false` and `txns_package_eval.empty()`, which was possible before.\r\nIt means that even if everything was either (valid, already in the mempool, or invalid due to a subset of failures) â you will force the checks again? (before this change, it could have terminated early)\r\n\r\nMaybe related [to the other comment i left](https://github.com/bitcoin/bitcoin/pull/26711/commits/cb065422e58be7558e6c2ad9eadfa885bb48c708#r1072167416).",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-17T13:25:21Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072204405",
      "id" : 1072204405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584_6Ip1",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1251548165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072204405/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-17T13:25:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072204405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1073438932"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073438932"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> After this change it's impossible to hit quit_early=false and txns_package_eval.empty(), which was possible before.\r\n\r\nRight, `quit_early=false && txns_package_eval.empty()` means everything so far has been valid or txid already in mempool.\r\n\r\n> It means that even if everything was either (valid, already in the mempool, or invalid due to a subset of failures) â you will force the checks again? (before this change, it could have terminated early)\r\n\r\nOk I will try to break down all the possibilities in this scenario. If we get to the child and `quit_early=false && txns_package_eval.empty()`, everything else has been valid, and we should validate the child. It doesn't matter if we do it inside or outside this loop, but it's better to only do it 1 time.\r\nThe child's result can be: valid, policy/missing inputs, or other failure. If txid already in mempool we would have already exited the loop.\r\n\r\nBefore the commit:\r\n- If valid: the tx was validated 1 time, inside the loop.\r\n- If policy/missing inputs: the tx was validated 2 times, both inside the loop and with `AcceptMultipleTransactions(txns_package_eval)` outside the loop.\r\n- If other failure: the tx was validated 1 time, inside the loop.\r\n\r\nRight after the loop, `quit_early || txns_package_eval.empty()` hits, but none of them terminated without validating the child. \r\n\r\nAfter the commit:\r\n- If valid: the tx is validated 1 time, outside the loop.\r\n- If policy/missing inputs: the tx is validated 1 time, outside the loop.\r\n- If other failure: the tx is validated 1 time, outside the loop.\r\n\r\nRight after the loop, `quit_early || txns_package_eval.empty()` does not hit. The tx is validated, and then the results returned. The function returns at a later line of code, but that doesn't mean more work was done.",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-18T11:53:24Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1073438932",
      "id" : 1073438932,
      "in_reply_to_id" : 1072204405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584_-2DU",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1253331561,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073438932/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-18T11:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073438932",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080563611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080563611"
         }
      },
      "author_association" : "MEMBER",
      "body" : "would help for reading clarity if nothing else, agreed",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-18T21:14:52Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080563611",
      "id" : 1080563611,
      "in_reply_to_id" : 1072139558,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AaBeb",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080563611/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080563611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080581849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080581849"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Rest of this comment seems appropriate elsewhere now that its put in its own subroutine.\r\n",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-18T21:37:49Z",
      "diff_hunk" : "@@ -15,21 +15,8 @@\n #include <numeric>\n #include <unordered_set>\n \n-bool CheckPackage(const Package& txns, PackageValidationState& state)\n+bool IsSorted(const Package& txns)\n {\n-    const unsigned int package_count = txns.size();\n-\n-    if (package_count > MAX_PACKAGE_COUNT) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n-    }\n-\n-    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n-                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n-    // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n-    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n-    }\n-\n     // Require the package to be sorted in order of dependency, i.e. parents appear before children.\n     // An unsorted package will fail anyway on missing-inputs, but it's better to quit earlier and",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080581849",
      "id" : 1080581849,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AaF7Z",
      "original_commit_id" : "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080581849/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080581849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080595370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080595370"
         }
      },
      "author_association" : "MEMBER",
      "body" : "While we're here: `CheckPackageWellFormed`",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-18T21:54:55Z",
      "diff_hunk" : "@@ -65,6 +56,26 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080595370",
      "id" : 1080595370,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AaJOq",
      "original_commit_id" : "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "original_line" : 59,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080595370/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080595370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080599515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080599515"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/so/to/",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-18T21:58:32Z",
      "diff_hunk" : "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080599515",
      "id" : 1080599515,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AaKPb",
      "original_commit_id" : "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "original_line" : 76,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080599515/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080599515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080602237"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080602237"
         }
      },
      "author_association" : "MEMBER",
      "body" : "when calling Txns()",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-18T22:00:46Z",
      "diff_hunk" : "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:\n+     * - there are no conflicts\n+     * - the number of transactions is reasonable (e.g. within MAX_PACKAGE_COUNT)\n+     */\n+    Packageifier(const Package& txns);\n+    /** Returns the transactions, in ascending order of number of in-package ancestors. */\n+    Package Txns() const { return txns; }\n+    /** Get the ancestor subpackage for a transaction. */\n+    std::vector<CTransactionRef> GetAncestorSet(const CTransactionRef& tx);\n+    /** From now on, exclude these transactions from GetAncestorSet(). */\n+    void Exclude(const CTransactionRef& transaction);\n+    /** Mark a transaction as \"banned.\" From now on, if this transaction is present in the ancestor\n+     * set, return an empty vector instead. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080602237",
      "id" : 1080602237,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AaK59",
      "original_commit_id" : "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "original_line" : 98,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080602237/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080602237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081158729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081158729"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thank you for this elaborate analysis!\r\n\r\nSo in `if valid` and `if other failure` cases, it's not just inside vs outside the loop, right?\r\nBecause \"outside the loop\" also means re-validating other transactions, not just the child (`AcceptMultipleTransactions` call).\r\n(Note that I'm look only at the first commit so far)",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-19T11:51:24Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081158729",
      "id" : 1081158729,
      "in_reply_to_id" : 1072204405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AcSxJ",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1261633680,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081158729/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T11:51:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081158729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081194260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081194260"
         }
      },
      "author_association" : "MEMBER",
      "body" : "879b55fa9da3688fb6b85e7f40f9778753a9102f\r\n\r\nAccording to this change, it should now be possible to hit `mempoolaccept_res.m_result_type == INVALID`, but only when [...].\r\n\r\nHowever, I don't see how the `AcceptPackageWrappingSingle` code change touches `mempoolaccept_res` at all. So it's unclear why the Assume is changed here.\r\n\r\n",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-19T12:24:51Z",
      "diff_hunk" : "@@ -1439,15 +1455,16 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     }\n     // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n     // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptMultipleTransactions(txns_package_eval, args);\n+    auto submission_result = AcceptPackageWrappingSingle(txns_package_eval);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n         Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n+        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID ||\n+               mempoolaccept_res.m_state.GetResult() == TxValidationResult::TX_MISSING_INPUTS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081194260",
      "id" : 1081194260,
      "line" : 1502,
      "node_id" : "PRRC_kwDOABII585AcbcU",
      "original_commit_id" : "879b55fa9da3688fb6b85e7f40f9778753a9102f",
      "original_line" : 1463,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 34,
      "pull_request_review_id" : 1261683617,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081194260/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T12:25:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081194260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081209483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081209483"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What I'm talking about seems to be fixed in the next commit 879b55fa9da3688fb6b85e7f40f9778753a9102f.\r\nIf my understanding is correct, I'd suggest mentioning this in the commit message.",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-19T12:41:23Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081209483",
      "id" : 1081209483,
      "in_reply_to_id" : 1072204405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AcfKL",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1261706834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081209483/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T12:41:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081209483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081549166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081549166"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n     * Expects that:\r\n```",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T16:51:07Z",
      "diff_hunk" : "@@ -59,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081549166",
      "id" : 1081549166,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AdyFu",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 86,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081549166/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081549166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081574207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081574207"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe we can get rid of `quit_early` and have Packagifier contain a `HasBan` function?",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:12:54Z",
      "diff_hunk" : "@@ -1363,14 +1371,29 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     // the new transactions. This ensures we don't double-count transaction counts and sizes when\n     // checking ancestor/descendant limits, or double-count transaction fees for fee-related policy.\n     ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+    const auto AcceptPackageWrappingSingle = [&](const std::vector<CTransactionRef>& subpackage)\n+        EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        AssertLockHeld(::cs_main);\n+        AssertLockHeld(m_pool.cs);\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapper;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapper.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapper, {{tx->GetWitnessHash(), single_res}});\n+    };\n+    Packageifier packageified(package);\n     // Results from individual validation. \"Nonfinal\" because if a transaction fails by itself but\n     // succeeds later (i.e. when evaluated with a fee-bumping child), the result changes (though not\n     // reflected in this map). If a transaction fails more than once, we want to return the first\n     // result, when it was considered on its own. So changes will only be from invalid -> valid.\n     std::map<uint256, MempoolAcceptResult> individual_results_nonfinal;\n     bool quit_early{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081574207",
      "id" : 1081574207,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ad4M_",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 1395,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081574207/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081574207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081588430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081588430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we change `GetAncestorSet` to an optional and store banned-ness, then we can use it to check if there is nothing left to be submitted directly by calling `txns_package_eval.empty()`.\r\n\r\n```suggestion\r\n    if (packageified.HasBan() || txns_package_eval.empty()) {\r\n```\r\n\r\nOr, if we keep GetAncestorSet as is, just do `txns_package_eval.empty()` only? It will be empty in both the cases where it has a banned input, or where all transactions have been excluded?\r\n\r\nThen we can just get rid of quit_early and don't need to track if we've banned anything?",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:20:49Z",
      "diff_hunk" : "@@ -1393,56 +1417,93 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             assert(iter != std::nullopt);\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n+            packageified.Exclude(tx);\n         } else {\n+            const auto subpackage = packageified.GetAncestorSet(tx);\n+            if (subpackage.empty()) {\n+                Assume(quit_early);\n+                // Quit early; this transaction depends on a \"banned\" tx (failed for a non-policy\n+                // and non-missing-inputs reason), so this transaction will be invalid due to\n+                // missing inputs.\n+                TxValidationState tx_state_quit_early;\n+                tx_state_quit_early.Invalid(TxValidationResult::TX_MISSING_INPUTS, \"bad-txns-inputs-missingorspent\");\n+                individual_results_nonfinal.emplace(wtxid, MempoolAcceptResult::Failure(tx_state_quit_early));\n+                continue;\n+            }\n+            if (wtxid == child->GetWitnessHash()) {\n+                // Unless we're quitting early (child would have exited already since this is an\n+                // ancestor package), validate the child outside of this loop.\n+                break;\n+            }\n             // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-            } else {\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage);\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map.\n+            for (const auto& subpackage_tx : subpackage) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // Note that it's possible for transactions to have been submitted to the mempool even\n+            // if subpackage_result.m_state.IsInvalid(). If IsValid(), fine to move on.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            // Another \"final\" validation result is if the tx failed for a non-policy reason.\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n+                    // Package validation policy only differs from individual policy in its evaluation\n+                    // of feerate. For example, if a transaction fails here due to violation of a\n+                    // consensus rule, the result will not change when it is submitted as part of a\n+                    // package. To minimize the amount of repeated work, unless the transaction fails\n+                    // due to feerate or missing inputs (its parent is a previous transaction in the\n+                    // package that failed due to feerate), don't run package validation. Note that this\n+                    // decision might not make sense if different types of packages are allowed in the\n+                    // future.  Continue individually validating the rest of the transactions, because\n+                    // some of them may still be valid.\n+                    quit_early = true;\n+                    package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                    individual_results_nonfinal.emplace(wtxid, single_res);\n+                    packageified.Ban(tx);\n+                }\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n-                txns_package_eval.push_back(tx);\n             }\n         }\n     }\n \n     // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n+    // already been submitted. Since this is an ancestor package, if the child is in, that means all\n+    // the other transactions in the package are as well. We check for the child by txid because\n+    // same-txid-different-witness is an acceptable case for deduplication in the loop above.\n+    if (quit_early || m_pool.exists(GenTxid::Txid(child->GetHash()))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081588430",
      "id" : 1081588430,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ad7rO",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 1487,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081588430/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:27:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081588430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081618834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081618834"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Going with `IsPackageWellFormed` to follow the `Is*` pattern, if that's ok",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:49:01Z",
      "diff_hunk" : "@@ -65,6 +56,26 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081618834",
      "id" : 1081618834,
      "in_reply_to_id" : 1080595370,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeDGS",
      "original_commit_id" : "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "original_line" : 59,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : null,
      "pull_request_review_id" : 1262313397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 1,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081618834/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:49:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081618834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081624953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081624953"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added in the commit message that, specifically if the failure is policy or missing inputs, it was validated twice. Thanks",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:54:18Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);\n+                // Unless we're quitting early, validate the child outside of this loop.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081624953",
      "id" : 1081624953,
      "in_reply_to_id" : 1072167416,
      "line" : 1424,
      "node_id" : "PRRC_kwDOABII585AeEl5",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1424,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 94,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081624953/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081624953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081625789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081625789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Only when calling `GetAncestorSet()`*, added comment that `Txns()` is unchanged.",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:55:01Z",
      "diff_hunk" : "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:\n+     * - there are no conflicts\n+     * - the number of transactions is reasonable (e.g. within MAX_PACKAGE_COUNT)\n+     */\n+    Packageifier(const Package& txns);\n+    /** Returns the transactions, in ascending order of number of in-package ancestors. */\n+    Package Txns() const { return txns; }\n+    /** Get the ancestor subpackage for a transaction. */\n+    std::vector<CTransactionRef> GetAncestorSet(const CTransactionRef& tx);\n+    /** From now on, exclude these transactions from GetAncestorSet(). */\n+    void Exclude(const CTransactionRef& transaction);\n+    /** Mark a transaction as \"banned.\" From now on, if this transaction is present in the ancestor\n+     * set, return an empty vector instead. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081625789",
      "id" : 1081625789,
      "in_reply_to_id" : 1080602237,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeEy9",
      "original_commit_id" : "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "original_line" : 98,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081625789/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081625789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081626065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081626065"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:55:16Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081626065",
      "id" : 1081626065,
      "in_reply_to_id" : 1072139558,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeE3R",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081626065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081626065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081627149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627149"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thank you yes, it makes more sense to switch the commits around. Switched their order and made the commit messages more descriptive",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:56:14Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081627149",
      "id" : 1081627149,
      "in_reply_to_id" : 1072204405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFIN",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627149/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:59:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627149",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081627681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627681"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops yes, I've removed this",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:56:36Z",
      "diff_hunk" : "@@ -1439,15 +1455,16 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     }\n     // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n     // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptMultipleTransactions(txns_package_eval, args);\n+    auto submission_result = AcceptPackageWrappingSingle(txns_package_eval);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n         Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n+        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID ||\n+               mempoolaccept_res.m_state.GetResult() == TxValidationResult::TX_MISSING_INPUTS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081627681",
      "id" : 1081627681,
      "in_reply_to_id" : 1081194260,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFQh",
      "original_commit_id" : "879b55fa9da3688fb6b85e7f40f9778753a9102f",
      "original_line" : 1463,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627681/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627681",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628019"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved back to `IsPackageWellFormed()`",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:56:52Z",
      "diff_hunk" : "@@ -15,21 +15,8 @@\n #include <numeric>\n #include <unordered_set>\n \n-bool CheckPackage(const Package& txns, PackageValidationState& state)\n+bool IsSorted(const Package& txns)\n {\n-    const unsigned int package_count = txns.size();\n-\n-    if (package_count > MAX_PACKAGE_COUNT) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n-    }\n-\n-    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n-                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n-    // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n-    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n-    }\n-\n     // Require the package to be sorted in order of dependency, i.e. parents appear before children.\n     // An unsorted package will fail anyway on missing-inputs, but it's better to quit earlier and",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628019",
      "id" : 1081628019,
      "in_reply_to_id" : 1080581849,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFVz",
      "original_commit_id" : "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628019/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628019",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628126"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:56:57Z",
      "diff_hunk" : "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628126",
      "id" : 1081628126,
      "in_reply_to_id" : 1080599515,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFXe",
      "original_commit_id" : "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "original_line" : 76,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628126/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628217"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:57:02Z",
      "diff_hunk" : "@@ -59,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628217",
      "id" : 1081628217,
      "in_reply_to_id" : 1081549166,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFY5",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 86,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628217/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081629094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081629094"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea, got rid of quit_early and exists(). Using txns_package_eval std::nullopt or empty",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:57:48Z",
      "diff_hunk" : "@@ -1393,56 +1417,93 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             assert(iter != std::nullopt);\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n+            packageified.Exclude(tx);\n         } else {\n+            const auto subpackage = packageified.GetAncestorSet(tx);\n+            if (subpackage.empty()) {\n+                Assume(quit_early);\n+                // Quit early; this transaction depends on a \"banned\" tx (failed for a non-policy\n+                // and non-missing-inputs reason), so this transaction will be invalid due to\n+                // missing inputs.\n+                TxValidationState tx_state_quit_early;\n+                tx_state_quit_early.Invalid(TxValidationResult::TX_MISSING_INPUTS, \"bad-txns-inputs-missingorspent\");\n+                individual_results_nonfinal.emplace(wtxid, MempoolAcceptResult::Failure(tx_state_quit_early));\n+                continue;\n+            }\n+            if (wtxid == child->GetWitnessHash()) {\n+                // Unless we're quitting early (child would have exited already since this is an\n+                // ancestor package), validate the child outside of this loop.\n+                break;\n+            }\n             // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-            } else {\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage);\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map.\n+            for (const auto& subpackage_tx : subpackage) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // Note that it's possible for transactions to have been submitted to the mempool even\n+            // if subpackage_result.m_state.IsInvalid(). If IsValid(), fine to move on.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            // Another \"final\" validation result is if the tx failed for a non-policy reason.\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n+                    // Package validation policy only differs from individual policy in its evaluation\n+                    // of feerate. For example, if a transaction fails here due to violation of a\n+                    // consensus rule, the result will not change when it is submitted as part of a\n+                    // package. To minimize the amount of repeated work, unless the transaction fails\n+                    // due to feerate or missing inputs (its parent is a previous transaction in the\n+                    // package that failed due to feerate), don't run package validation. Note that this\n+                    // decision might not make sense if different types of packages are allowed in the\n+                    // future.  Continue individually validating the rest of the transactions, because\n+                    // some of them may still be valid.\n+                    quit_early = true;\n+                    package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                    individual_results_nonfinal.emplace(wtxid, single_res);\n+                    packageified.Ban(tx);\n+                }\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n-                txns_package_eval.push_back(tx);\n             }\n         }\n     }\n \n     // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n+    // already been submitted. Since this is an ancestor package, if the child is in, that means all\n+    // the other transactions in the package are as well. We check for the child by txid because\n+    // same-txid-different-witness is an acceptable case for deduplication in the loop above.\n+    if (quit_early || m_pool.exists(GenTxid::Txid(child->GetHash()))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081629094",
      "id" : 1081629094,
      "in_reply_to_id" : 1081588430,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFmm",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 1487,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081629094/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081629094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081632204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081632204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(was able to get rid of quit_early without `HasBan()`)",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T18:00:28Z",
      "diff_hunk" : "@@ -1363,14 +1371,29 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     // the new transactions. This ensures we don't double-count transaction counts and sizes when\n     // checking ancestor/descendant limits, or double-count transaction fees for fee-related policy.\n     ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+    const auto AcceptPackageWrappingSingle = [&](const std::vector<CTransactionRef>& subpackage)\n+        EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        AssertLockHeld(::cs_main);\n+        AssertLockHeld(m_pool.cs);\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapper;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapper.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapper, {{tx->GetWitnessHash(), single_res}});\n+    };\n+    Packageifier packageified(package);\n     // Results from individual validation. \"Nonfinal\" because if a transaction fails by itself but\n     // succeeds later (i.e. when evaluated with a fee-bumping child), the result changes (though not\n     // reflected in this map). If a transaction fails more than once, we want to return the first\n     // result, when it was considered on its own. So changes will only be from invalid -> valid.\n     std::map<uint256, MempoolAcceptResult> individual_results_nonfinal;\n     bool quit_early{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081632204",
      "id" : 1081632204,
      "in_reply_to_id" : 1081574207,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeGXM",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 1395,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1262329505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081632204/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:00:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081632204",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082414267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082414267"
         }
      },
      "author_association" : "MEMBER",
      "body" : "036d2b07fb3ce404dd6787d8d0fe4e80c168fdf4\r\nThis `Assume` is orthogonal to the rest of the code changes (these changes don't touch `mempoolaccept_res`), so it's unclear why you remove it here.",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-20T11:57:39Z",
      "diff_hunk" : "@@ -1422,15 +1438,14 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     }\n     // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n     // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptMultipleTransactions(txns_package_eval, args);\n+    auto submission_result = AcceptPackageWrappingSingle(txns_package_eval);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n         Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082414267",
      "id" : 1082414267,
      "line" : 1429,
      "node_id" : "PRRC_kwDOABII585AhFS7",
      "original_commit_id" : "036d2b07fb3ce404dd6787d8d0fe4e80c168fdf4",
      "original_line" : 1429,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 32,
      "pull_request_review_id" : 1263465719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082414267/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T11:57:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082414267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082421842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082421842"
         }
      },
      "author_association" : "MEMBER",
      "body" : "4c4cea3856b1fa2a50de25847b19ae90c4263916\r\nnit: maybe it's better to use `HasConflicts`. Double-negation is harder to understand :)",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-20T12:03:44Z",
      "diff_hunk" : "@@ -65,6 +52,30 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)\n+{\n+    const unsigned int package_count = txns.size();\n+\n+    if (package_count > MAX_PACKAGE_COUNT) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n+    }\n+\n+    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n+                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n+    // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n+    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n+    }\n+\n+    // Require the package to be sorted in order of dependency, i.e. parents appear before children.\n+    // An unsorted package will fail anyway on missing-inputs, but it's better to quit earlier and\n+    // fail on something less ambiguous (missing-inputs could also be an orphan or trying to\n+    // spend nonexistent coins).\n+    if (!IsSorted(txns)) return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-sorted\");\n+    if (!HasNoConflicts(txns)) return state.Invalid(PackageValidationResult::PCKG_POLICY, \"conflict-in-package\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082421842",
      "id" : 1082421842,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII585AhHJS",
      "original_commit_id" : "4c4cea3856b1fa2a50de25847b19ae90c4263916",
      "original_line" : 75,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : 77,
      "pull_request_review_id" : 1263473012,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082421842/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T12:03:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082421842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082468542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082468542"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8764ecc566413b4974e030c596193e75ff39f746\r\nCan this result in an endless recursion, if txA spends txB and txB spends txA at the same time? Or possibly through txC.",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-20T12:37:29Z",
      "diff_hunk" : "@@ -92,3 +91,81 @@ bool IsChildWithParents(const Package& package)\n     return std::all_of(package.cbegin(), package.cend() - 1,\n                        [&input_txids](const auto& ptx) { return input_txids.count(ptx->GetHash()) > 0; });\n }\n+\n+// After calling visit() on a package tx, it's guaranteed to be in the ancestor_subsets map.\n+void Packageifier::visit(const CTransactionRef& curr_tx)\n+{\n+    const uint256& curr_txid = curr_tx->GetHash();\n+    if (ancestor_subsets.count(curr_txid) > 0) return;\n+    std::set<uint256> my_ancestors;\n+    my_ancestors.insert(curr_txid);\n+    for (const auto& input : curr_tx->vin) {\n+        auto parent_tx = txid_to_tx.find(input.prevout.hash);\n+        if (parent_tx == txid_to_tx.end()) continue;\n+        if (ancestor_subsets.count(parent_tx->first) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082468542",
      "id" : 1082468542,
      "line" : 105,
      "node_id" : "PRRC_kwDOABII585AhSi-",
      "original_commit_id" : "8764ecc566413b4974e030c596193e75ff39f746",
      "original_line" : 105,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : 32,
      "pull_request_review_id" : 1263514526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082468542/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T12:37:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082468542",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082492810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082492810"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8764ecc566413b4974e030c596193e75ff39f746\r\nThe comment is incorrect: nullopt is returned, not empty vector.",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-20T12:54:31Z",
      "diff_hunk" : "@@ -62,4 +65,39 @@ bool IsPackageWellFormed(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions to exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082492810",
      "id" : 1082492810,
      "line" : 78,
      "node_id" : "PRRC_kwDOABII585AhYeK",
      "original_commit_id" : "8764ecc566413b4974e030c596193e75ff39f746",
      "original_line" : 78,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : 26,
      "pull_request_review_id" : 1263535150,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082492810/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T12:54:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082492810",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   }
]
