{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "### Background\r\n\r\nThe primary method of relaying node addresses across the network is daily self-announcement and forwarding self-announcements of other nodes.\r\nTo rate-limit those, we relay them only to 1 or 2 peers (depending on whether the address is reachable for us).\r\nUnfortunately, in current implementation there is a chance of choosing SPV nodes, which, to the best of my knowledge, currently do not forward those announcements.\r\n\r\n### Discussion\r\n\r\nDuring the [meeting](http://www.erisian.com.au/bitcoin-core-dev/log-2019-10-17.html) (also see some discussion in the [PR 17163](https://github.com/bitcoin/bitcoin/pull/17163)) we reached a soft consensus that address relay participation should not be coupled to SPV/full node definition, but rather have an explicit flag (e.g. service flag).\r\nUntil thatâs getting resolved, Iâm suggesting a tiny patch that would not forward (they still can request and learn) these announcements to SPV nodes.\r\n\r\n### Analysis\r\n\r\nTo justify the change, I decided to measure how does this relay perform in different conditions (see my [script](https://github.com/naumenkogs/bitcoin_network_analysis/blob/master/addr_relay/forward_to_spv.py)).\r\nI measured how many nodes know about the new address relayed through this protocol (omitting batching <10 rule) within 360 âwavesâ of relay (which is roughly 3 hours).\r\n\r\nSo, according to my measurements, it does not affect the case where the address is reachable to everyone and we relay to 2 (unless there are really a lot of SPVs).\r\n\r\nLetâs see what if the address is reachable to 5% of the network (I guess pretty fair assumption for Onion addresses, for example).\r\n\r\n|  non-forwarding SPV nodes                                   | 1%  | 5%  | 10%  |\r\n|--|--|--|--|\r\n| Nodes knowing addr (before the change) | 87% | 29% | 0.1% |\r\n| Nodes knowing addr (after the change)  | 98% | 93% | 89%  |\r\n\r\n(Note that it does not reach 100% in the second case only due to the eventual loops in of that âstemâ of addr relay)\r\n\r\nIf you don't believe it's that bad, please make your own simulation to validate mine :)\r\n\r\nThese numbers can also be used to motivate the high-level change (a.k.a service bit).\r\n\r\n### Questions\r\n1. Would we make SPVs more vulnerable to addrman injections? Like, would it be easier for an attacker to fill their addrmans with malicious sybil nodes? (I guess we are already vulnerable it assuming some capabilities of an attacker, but would it be noticeably worse? EthanHeilman)\r\n2. Does the same apply to the old pruned nodes? (achow101 I think you mentioned that older nodes would also be excluded here). Should we forward these announcements to them, if this makes them noticeably more vulnerable?\r\n\r\nWe can forward it to these two groups IN ADDITION to forwarding to (1 or 2) peers, if there is a belief that this is might affect their privacy. The bandwidth overhead would be obviously very low.\r\n\r\n\r\n\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194/comments",
   "created_at" : "2019-10-18T20:15:17Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194",
   "id" : 509289288,
   "labels" : [
      {
         "color" : "006b75",
         "default" : false,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MzI5OTA3NDI5",
   "number" : 17194,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/17194.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/17194.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17194"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "p2p: Avoid forwarding ADDR messages to SPV nodes ",
   "updated_at" : "2019-10-18T20:20:54Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
      "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
      "followers_url" : "https://api.github.com/users/naumenkogs/followers",
      "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/naumenkogs",
      "id" : 7975071,
      "login" : "naumenkogs",
      "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
      "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
      "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
      "repos_url" : "https://api.github.com/users/naumenkogs/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/naumenkogs"
   }
}
