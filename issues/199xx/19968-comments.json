[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r495483350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495483350"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: I found these next 6 lines added complexity to something that was very clear thus far. Do you think the simpler formula makes it easier to reason about the size of the bloom filter?",
      "commit_id" : "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
      "created_at" : "2020-09-26T18:36:31Z",
      "diff_hunk" : "@@ -94,7 +94,26 @@ class CBloomFilter\n  * insert()'ed ... but may also return true for items that were not inserted.\n  *\n  * It needs around 1.8 bytes per element per factor 0.1 of false positive rate.\n- * (More accurately: 3/(log(256)*log(2)) * log(1/fpRate) * nElements bytes)\n+ * e.g. for 1000 elements, we'd need:\n+ *     ~1800 bytes for a false positive rate of 0.1\n+ *     ~3600 bytes for a false positive rate of 0.01\n+ *     ~5400 bytes for a false positive rate of 0.001\n+ *\n+ * This Python code calculates the exact filter size in bytes:\n+\n+import math\n+def filterbytes(nel, fprate):\n+    logfp = math.log(fprate)\n+    nhash = max(1, min(round(logfp/math.log(0.5)), 50))\n+    nfilbits = math.ceil(-1.0*nhash*(3*int((nel+1)/2)) / math.log(1.0 - math.exp(logfp / nhash)))\n+    return (nfilbits+63)/64*2*8\n+\n+ * If we make these assumptions:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r495483350",
      "id" : 495483350,
      "line" : 111,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MzM1MA==",
      "original_commit_id" : "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
      "original_line" : 111,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/bloom.h",
      "position" : 19,
      "pull_request_review_id" : 497023200,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-26T18:42:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495483350",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r495483506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495483506"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: Maybe add \"Lower tolerance for false positives increases the size of the bloom filter manifesting a trade-off between memory and compute (in the case of a false positive).\"",
      "commit_id" : "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
      "created_at" : "2020-09-26T18:38:40Z",
      "diff_hunk" : "@@ -94,7 +94,26 @@ class CBloomFilter\n  * insert()'ed ... but may also return true for items that were not inserted.\n  *\n  * It needs around 1.8 bytes per element per factor 0.1 of false positive rate.\n- * (More accurately: 3/(log(256)*log(2)) * log(1/fpRate) * nElements bytes)\n+ * e.g. for 1000 elements, we'd need:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r495483506",
      "id" : 495483506,
      "line" : 97,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MzUwNg==",
      "original_commit_id" : "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
      "original_line" : 97,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/bloom.h",
      "position" : 5,
      "pull_request_review_id" : 497023200,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-26T18:42:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495483506",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r497433612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497433612"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How does this render on doxygen? If it is markdown style you'd likely want to quote an inline script using triple-backquotes.\r\n\r\nTBH I'm not sure the python script adds much in the first place. Sometimes a simple but good-enough approximation is better for documentation purposes. Is this level of precision necessary?\r\n\r\n(edit: whoops, didn't mean to click the resolve conversation button)",
      "commit_id" : "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
      "created_at" : "2020-09-30T11:23:51Z",
      "diff_hunk" : "@@ -94,7 +94,26 @@ class CBloomFilter\n  * insert()'ed ... but may also return true for items that were not inserted.\n  *\n  * It needs around 1.8 bytes per element per factor 0.1 of false positive rate.\n- * (More accurately: 3/(log(256)*log(2)) * log(1/fpRate) * nElements bytes)\n+ * e.g. for 1000 elements, we'd need:\n+ *     ~1800 bytes for a false positive rate of 0.1\n+ *     ~3600 bytes for a false positive rate of 0.01\n+ *     ~5400 bytes for a false positive rate of 0.001\n+ *\n+ * This Python code calculates the exact filter size in bytes:\n+\n+import math\n+def filterbytes(nel, fprate):\n+    logfp = math.log(fprate)\n+    nhash = max(1, min(round(logfp/math.log(0.5)), 50))\n+    nfilbits = math.ceil(-1.0*nhash*(3*int((nel+1)/2)) / math.log(1.0 - math.exp(logfp / nhash)))\n+    return (nfilbits+63)/64*2*8\n+\n+ * If we make these assumptions:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r497433612",
      "id" : 497433612,
      "in_reply_to_id" : 495483350,
      "line" : 111,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMzYxMg==",
      "original_commit_id" : "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
      "original_line" : 111,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/bloom.h",
      "position" : 19,
      "pull_request_review_id" : 499328737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-30T11:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497433612",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
