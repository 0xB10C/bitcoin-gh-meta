[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2020-09-19T13:39:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#issuecomment-695214773",
      "id" : 695214773,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19937",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTIxNDc3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T23:03:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695214773",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Some examples:\r\n\r\n * Generate blocks indefinitely, at 10 minute intervals, paying block reward to the given address, using bitcoin-util to do multi-threaded proof-of-work: `$ ./contrib/signet/generate.py --cli='./bitcoin-cli' generate 10 --block-time=600 --address=\"tb1...\" --grind-cmd='./bitcoin-util grind'`\r\n * Generate 10 blocks, at 10 minute intervals, paying block reward to the given address, with timestamps starting at the genesis block, using single-threaded python code to do proof-of-work: `$ ./contrib/signet/generate.py --cli='./bitcoin-cli' generate 10 --block-time=600 --address=\"tb1...\" --backdate 0`\r\n * Generate blocks indefinitely at 30 minute intervals, but only if there hasn't been a block in the meantime, paying the reward for block height X to the X'th address from the given descriptor: `$ ./contrib/signet/generate.py --cli='./bitcoin-cli' generate -1 --block-time=1800 --descriptor=\"wpkh(...)#...\" --secondary`\r\n\r\nUsing a \"--block-time=600\" will get blocks exactly on 10 minute boundaries, with very little variation. You can alternatively use `--mining-time=20` to target spending an average of 20 seconds of cpu time per block, which should get a mainnet-like distribution of block times once difficulty has stabilised, assuming only one miner. \r\n\r\nYou can also generate blocks more manually by running:\r\n\r\n * `./bitcoin-cli -signet getblocktemplate '{\"rules\": [\"signet\",\"segwit\"]}' | ../contrib/signet/generate.py --cli='./bitcoin-cli' genpsbt --address=tb1...` -- to generate a psbt, encoding the signet txs and the raw block\r\n * `./bitcoin-cli -signet -stdin walletprocesspsbt` to sign the psbt from stdin, or some other method of signing a psbt\r\n * `../contrib/signet/generate.py solvepsbt --grind-cmd='./bitcoin-util grind' | ./bitcoin-cli -signet submitblock` to convert the signed psbt into a signet commitment and submit the block\r\n\r\nUsing the `--cli` option to specify `./bitcoin-cli -conf=/path/to/custom-signet.conf` and having `signet=1`, `signetchallenge` and a custom datadir all specified in the conf file is probably sensible.",
      "created_at" : "2020-09-21T22:48:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#issuecomment-696419619",
      "id" : 696419619,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19937",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NjQxOTYxOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-21T22:48:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/696419619",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492737367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492737367"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n# Copyright (c) 2020 The Bitcoin Core developers\r\n```\r\n\r\n:eyes: ",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-09-22T13:34:23Z",
      "diff_hunk" : "@@ -0,0 +1,422 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2010 ArtForz -- public domain half-a-node\n+# Copyright (c) 2012 Jeff Garzik\n+# Copyright (c) 2010-2020 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492737367",
      "id" : 492737367,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjczNzM2Nw==",
      "original_commit_id" : "e077aa7055e71f08a7d2cfbb29702832899fee04",
      "original_line" : 4,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "contrib/signet/generate.py",
      "position" : null,
      "pull_request_review_id" : 493464528,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492737367",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492742101"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492742101"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to not use our ArgsManager here, so that `-help` documentation will be created?",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-09-22T13:40:31Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <arith_uint256.h>\n+#include <clientversion.h>\n+#include <coins.h>\n+#include <consensus/consensus.h>\n+#include <core_io.h>\n+#include <key_io.h>\n+#include <policy/rbf.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <script/sign.h>\n+#include <script/signingprovider.h>\n+#include <univalue.h>\n+#include <util/moneystr.h>\n+#include <util/rbf.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+#include <util/system.h>\n+#include <util/translation.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdio.h>\n+#include <thread>\n+\n+#include <boost/algorithm/string.hpp>\n+\n+static const int CONTINUE_EXECUTION=-1;\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupBitcoinUtilArgs(ArgsManager &argsman)\n+{\n+    SetupHelpOptions(argsman);\n+\n+    SetupChainParamsBaseOptions(argsman);\n+}\n+\n+//\n+// This function returns either one of EXIT_ codes when it's expected to stop the process or\n+// CONTINUE_EXECUTION when it's expected to continue further.\n+//\n+static int AppInitUtil(int argc, char* argv[])\n+{\n+    //\n+    // Parameters\n+    //\n+    SetupBitcoinUtilArgs(gArgs);\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n+        return EXIT_FAILURE;\n+    }\n+\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        tfm::format(std::cerr, \"Error: %s\\n\", e.what());\n+        return EXIT_FAILURE;\n+    }\n+\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        // First part of help message is specific to this utility\n+        std::string strUsage = PACKAGE_NAME \" bitcoin-tx utility version \" + FormatFullVersion() + \"\\n\\n\" +\n+            \"Usage:  bitcoin-util [options] [commands]  Do stuff\\n\" +\n+            \"\\n\";\n+        strUsage += gArgs.GetHelpMessage();\n+\n+        tfm::format(std::cout, \"%s\", strUsage);\n+\n+        if (argc < 2) {\n+            tfm::format(std::cerr, \"Error: too few parameters\\n\");\n+            return EXIT_FAILURE;\n+        }\n+        return EXIT_SUCCESS;\n+    }\n+    return CONTINUE_EXECUTION;\n+}\n+\n+static void grind_task(uint32_t nBits, CBlockHeader& header_orig, uint32_t offset, uint32_t step, std::atomic<bool>& found)\n+{\n+    arith_uint256 target;\n+    bool neg, over;\n+    target.SetCompact(nBits, &neg, &over);\n+    if (target == 0 || neg || over) return;\n+    CBlockHeader header = header_orig; // working copy\n+    header.nNonce = offset;\n+\n+    uint32_t finish = std::numeric_limits<uint32_t>::max() - step;\n+    finish = finish - (finish % step) + offset;\n+\n+    while (!found && header.nNonce < finish) {\n+        const uint32_t next = (finish - header.nNonce < 5000*step) ? finish : header.nNonce + 5000*step;\n+        do {\n+            if (!(UintToArith256(header.GetHash()) > target)) {\n+                if (!found.exchange(true)) {\n+                    header_orig.nNonce = header.nNonce;\n+                }\n+                return;\n+            }\n+            header.nNonce += step;\n+        } while(header.nNonce != next);\n+    }\n+}\n+\n+static int Grind(int argc, char* argv[], std::string& strPrint)\n+{\n+    if (argc != 1) {\n+        strPrint = \"Must specify block header to grind\";\n+        return 1;\n+    }\n+\n+    CBlockHeader header;\n+    if (!DecodeHexBlockHeader(header, argv[0])) {\n+        strPrint = \"Could not decode block header\";\n+        return 1;\n+    }\n+\n+    uint32_t nBits = header.nBits;\n+    std::atomic<bool> found{false};\n+\n+    std::vector<std::thread> threads;\n+    int n_tasks = std::max(1u, std::thread::hardware_concurrency());\n+    for (int i = 0; i < n_tasks; ++i) {\n+        threads.emplace_back( grind_task, nBits, std::ref(header), i, n_tasks, std::ref(found) );\n+    }\n+    for (auto& t : threads) {\n+        t.join();\n+    }\n+    if (!found) {\n+        strPrint = \"Could not satisfy difficulty target\";\n+        return 1;\n+    }\n+\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    ss << header;\n+    strPrint = HexStr(ss);\n+    return 0;\n+}\n+\n+static int CommandLineUtil(int argc, char* argv[])\n+{\n+    if (argc <= 1) return 1;\n+\n+    std::string strPrint;\n+    int nRet = 0;\n+\n+    try {\n+        while (argc > 1 && IsSwitchChar(argv[1][0]) && (argv[1][1] != 0)) {\n+            --argc;\n+            ++argv;\n+        }\n+\n+        char* command = argv[1];\n+        if (strcmp(command, \"grind\") == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492742101",
      "id" : 492742101,
      "line" : 158,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0MjEwMQ==",
      "original_commit_id" : "e077aa7055e71f08a7d2cfbb29702832899fee04",
      "original_line" : 158,
      "original_position" : 163,
      "original_start_line" : null,
      "path" : "src/bitcoin-util.cpp",
      "position" : 158,
      "pull_request_review_id" : 493464528,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492742101",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492743007"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492743007"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        std::string strUsage = PACKAGE_NAME \" bitcoin-util utility version \" + FormatFullVersion() + \"\\n\\n\" +\r\n```",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-09-22T13:41:39Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <arith_uint256.h>\n+#include <clientversion.h>\n+#include <coins.h>\n+#include <consensus/consensus.h>\n+#include <core_io.h>\n+#include <key_io.h>\n+#include <policy/rbf.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <script/sign.h>\n+#include <script/signingprovider.h>\n+#include <univalue.h>\n+#include <util/moneystr.h>\n+#include <util/rbf.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+#include <util/system.h>\n+#include <util/translation.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdio.h>\n+#include <thread>\n+\n+#include <boost/algorithm/string.hpp>\n+\n+static const int CONTINUE_EXECUTION=-1;\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupBitcoinUtilArgs(ArgsManager &argsman)\n+{\n+    SetupHelpOptions(argsman);\n+\n+    SetupChainParamsBaseOptions(argsman);\n+}\n+\n+//\n+// This function returns either one of EXIT_ codes when it's expected to stop the process or\n+// CONTINUE_EXECUTION when it's expected to continue further.\n+//\n+static int AppInitUtil(int argc, char* argv[])\n+{\n+    //\n+    // Parameters\n+    //\n+    SetupBitcoinUtilArgs(gArgs);\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n+        return EXIT_FAILURE;\n+    }\n+\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        tfm::format(std::cerr, \"Error: %s\\n\", e.what());\n+        return EXIT_FAILURE;\n+    }\n+\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        // First part of help message is specific to this utility\n+        std::string strUsage = PACKAGE_NAME \" bitcoin-tx utility version \" + FormatFullVersion() + \"\\n\\n\" +",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492743007",
      "id" : 492743007,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0MzAwNw==",
      "original_commit_id" : "e077aa7055e71f08a7d2cfbb29702832899fee04",
      "original_line" : 72,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/bitcoin-util.cpp",
      "position" : null,
      "pull_request_review_id" : 493464528,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492743007",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492877166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492877166"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, think those are leftover from when the code from test_framework/messages.py etc was copied in rather than imported",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-09-22T16:33:27Z",
      "diff_hunk" : "@@ -0,0 +1,422 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2010 ArtForz -- public domain half-a-node\n+# Copyright (c) 2012 Jeff Garzik\n+# Copyright (c) 2010-2020 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492877166",
      "id" : 492877166,
      "in_reply_to_id" : 492737367,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg3NzE2Ng==",
      "original_commit_id" : "e077aa7055e71f08a7d2cfbb29702832899fee04",
      "original_line" : 4,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "contrib/signet/generate.py",
      "position" : null,
      "pull_request_review_id" : 493647779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492877166",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492877918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492877918"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think ArgsManager supports subcommands that have different suboptions?",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-09-22T16:34:37Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <arith_uint256.h>\n+#include <clientversion.h>\n+#include <coins.h>\n+#include <consensus/consensus.h>\n+#include <core_io.h>\n+#include <key_io.h>\n+#include <policy/rbf.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <script/sign.h>\n+#include <script/signingprovider.h>\n+#include <univalue.h>\n+#include <util/moneystr.h>\n+#include <util/rbf.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+#include <util/system.h>\n+#include <util/translation.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdio.h>\n+#include <thread>\n+\n+#include <boost/algorithm/string.hpp>\n+\n+static const int CONTINUE_EXECUTION=-1;\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupBitcoinUtilArgs(ArgsManager &argsman)\n+{\n+    SetupHelpOptions(argsman);\n+\n+    SetupChainParamsBaseOptions(argsman);\n+}\n+\n+//\n+// This function returns either one of EXIT_ codes when it's expected to stop the process or\n+// CONTINUE_EXECUTION when it's expected to continue further.\n+//\n+static int AppInitUtil(int argc, char* argv[])\n+{\n+    //\n+    // Parameters\n+    //\n+    SetupBitcoinUtilArgs(gArgs);\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n+        return EXIT_FAILURE;\n+    }\n+\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        tfm::format(std::cerr, \"Error: %s\\n\", e.what());\n+        return EXIT_FAILURE;\n+    }\n+\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        // First part of help message is specific to this utility\n+        std::string strUsage = PACKAGE_NAME \" bitcoin-tx utility version \" + FormatFullVersion() + \"\\n\\n\" +\n+            \"Usage:  bitcoin-util [options] [commands]  Do stuff\\n\" +\n+            \"\\n\";\n+        strUsage += gArgs.GetHelpMessage();\n+\n+        tfm::format(std::cout, \"%s\", strUsage);\n+\n+        if (argc < 2) {\n+            tfm::format(std::cerr, \"Error: too few parameters\\n\");\n+            return EXIT_FAILURE;\n+        }\n+        return EXIT_SUCCESS;\n+    }\n+    return CONTINUE_EXECUTION;\n+}\n+\n+static void grind_task(uint32_t nBits, CBlockHeader& header_orig, uint32_t offset, uint32_t step, std::atomic<bool>& found)\n+{\n+    arith_uint256 target;\n+    bool neg, over;\n+    target.SetCompact(nBits, &neg, &over);\n+    if (target == 0 || neg || over) return;\n+    CBlockHeader header = header_orig; // working copy\n+    header.nNonce = offset;\n+\n+    uint32_t finish = std::numeric_limits<uint32_t>::max() - step;\n+    finish = finish - (finish % step) + offset;\n+\n+    while (!found && header.nNonce < finish) {\n+        const uint32_t next = (finish - header.nNonce < 5000*step) ? finish : header.nNonce + 5000*step;\n+        do {\n+            if (!(UintToArith256(header.GetHash()) > target)) {\n+                if (!found.exchange(true)) {\n+                    header_orig.nNonce = header.nNonce;\n+                }\n+                return;\n+            }\n+            header.nNonce += step;\n+        } while(header.nNonce != next);\n+    }\n+}\n+\n+static int Grind(int argc, char* argv[], std::string& strPrint)\n+{\n+    if (argc != 1) {\n+        strPrint = \"Must specify block header to grind\";\n+        return 1;\n+    }\n+\n+    CBlockHeader header;\n+    if (!DecodeHexBlockHeader(header, argv[0])) {\n+        strPrint = \"Could not decode block header\";\n+        return 1;\n+    }\n+\n+    uint32_t nBits = header.nBits;\n+    std::atomic<bool> found{false};\n+\n+    std::vector<std::thread> threads;\n+    int n_tasks = std::max(1u, std::thread::hardware_concurrency());\n+    for (int i = 0; i < n_tasks; ++i) {\n+        threads.emplace_back( grind_task, nBits, std::ref(header), i, n_tasks, std::ref(found) );\n+    }\n+    for (auto& t : threads) {\n+        t.join();\n+    }\n+    if (!found) {\n+        strPrint = \"Could not satisfy difficulty target\";\n+        return 1;\n+    }\n+\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    ss << header;\n+    strPrint = HexStr(ss);\n+    return 0;\n+}\n+\n+static int CommandLineUtil(int argc, char* argv[])\n+{\n+    if (argc <= 1) return 1;\n+\n+    std::string strPrint;\n+    int nRet = 0;\n+\n+    try {\n+        while (argc > 1 && IsSwitchChar(argv[1][0]) && (argv[1][1] != 0)) {\n+            --argc;\n+            ++argv;\n+        }\n+\n+        char* command = argv[1];\n+        if (strcmp(command, \"grind\") == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492877918",
      "id" : 492877918,
      "in_reply_to_id" : 492742101,
      "line" : 158,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg3NzkxOA==",
      "original_commit_id" : "e077aa7055e71f08a7d2cfbb29702832899fee04",
      "original_line" : 158,
      "original_position" : 163,
      "original_start_line" : null,
      "path" : "src/bitcoin-util.cpp",
      "position" : 158,
      "pull_request_review_id" : 493648787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492877918",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492887446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492887446"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It would support `-grind=block_header_hex`. Is something else needed here that I am missing?",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-09-22T16:49:40Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <arith_uint256.h>\n+#include <clientversion.h>\n+#include <coins.h>\n+#include <consensus/consensus.h>\n+#include <core_io.h>\n+#include <key_io.h>\n+#include <policy/rbf.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <script/sign.h>\n+#include <script/signingprovider.h>\n+#include <univalue.h>\n+#include <util/moneystr.h>\n+#include <util/rbf.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+#include <util/system.h>\n+#include <util/translation.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdio.h>\n+#include <thread>\n+\n+#include <boost/algorithm/string.hpp>\n+\n+static const int CONTINUE_EXECUTION=-1;\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupBitcoinUtilArgs(ArgsManager &argsman)\n+{\n+    SetupHelpOptions(argsman);\n+\n+    SetupChainParamsBaseOptions(argsman);\n+}\n+\n+//\n+// This function returns either one of EXIT_ codes when it's expected to stop the process or\n+// CONTINUE_EXECUTION when it's expected to continue further.\n+//\n+static int AppInitUtil(int argc, char* argv[])\n+{\n+    //\n+    // Parameters\n+    //\n+    SetupBitcoinUtilArgs(gArgs);\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n+        return EXIT_FAILURE;\n+    }\n+\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        tfm::format(std::cerr, \"Error: %s\\n\", e.what());\n+        return EXIT_FAILURE;\n+    }\n+\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        // First part of help message is specific to this utility\n+        std::string strUsage = PACKAGE_NAME \" bitcoin-tx utility version \" + FormatFullVersion() + \"\\n\\n\" +\n+            \"Usage:  bitcoin-util [options] [commands]  Do stuff\\n\" +\n+            \"\\n\";\n+        strUsage += gArgs.GetHelpMessage();\n+\n+        tfm::format(std::cout, \"%s\", strUsage);\n+\n+        if (argc < 2) {\n+            tfm::format(std::cerr, \"Error: too few parameters\\n\");\n+            return EXIT_FAILURE;\n+        }\n+        return EXIT_SUCCESS;\n+    }\n+    return CONTINUE_EXECUTION;\n+}\n+\n+static void grind_task(uint32_t nBits, CBlockHeader& header_orig, uint32_t offset, uint32_t step, std::atomic<bool>& found)\n+{\n+    arith_uint256 target;\n+    bool neg, over;\n+    target.SetCompact(nBits, &neg, &over);\n+    if (target == 0 || neg || over) return;\n+    CBlockHeader header = header_orig; // working copy\n+    header.nNonce = offset;\n+\n+    uint32_t finish = std::numeric_limits<uint32_t>::max() - step;\n+    finish = finish - (finish % step) + offset;\n+\n+    while (!found && header.nNonce < finish) {\n+        const uint32_t next = (finish - header.nNonce < 5000*step) ? finish : header.nNonce + 5000*step;\n+        do {\n+            if (!(UintToArith256(header.GetHash()) > target)) {\n+                if (!found.exchange(true)) {\n+                    header_orig.nNonce = header.nNonce;\n+                }\n+                return;\n+            }\n+            header.nNonce += step;\n+        } while(header.nNonce != next);\n+    }\n+}\n+\n+static int Grind(int argc, char* argv[], std::string& strPrint)\n+{\n+    if (argc != 1) {\n+        strPrint = \"Must specify block header to grind\";\n+        return 1;\n+    }\n+\n+    CBlockHeader header;\n+    if (!DecodeHexBlockHeader(header, argv[0])) {\n+        strPrint = \"Could not decode block header\";\n+        return 1;\n+    }\n+\n+    uint32_t nBits = header.nBits;\n+    std::atomic<bool> found{false};\n+\n+    std::vector<std::thread> threads;\n+    int n_tasks = std::max(1u, std::thread::hardware_concurrency());\n+    for (int i = 0; i < n_tasks; ++i) {\n+        threads.emplace_back( grind_task, nBits, std::ref(header), i, n_tasks, std::ref(found) );\n+    }\n+    for (auto& t : threads) {\n+        t.join();\n+    }\n+    if (!found) {\n+        strPrint = \"Could not satisfy difficulty target\";\n+        return 1;\n+    }\n+\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    ss << header;\n+    strPrint = HexStr(ss);\n+    return 0;\n+}\n+\n+static int CommandLineUtil(int argc, char* argv[])\n+{\n+    if (argc <= 1) return 1;\n+\n+    std::string strPrint;\n+    int nRet = 0;\n+\n+    try {\n+        while (argc > 1 && IsSwitchChar(argv[1][0]) && (argv[1][1] != 0)) {\n+            --argc;\n+            ++argv;\n+        }\n+\n+        char* command = argv[1];\n+        if (strcmp(command, \"grind\") == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r492887446",
      "id" : 492887446,
      "in_reply_to_id" : 492742101,
      "line" : 158,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4NzQ0Ng==",
      "original_commit_id" : "e077aa7055e71f08a7d2cfbb29702832899fee04",
      "original_line" : 158,
      "original_position" : 163,
      "original_start_line" : null,
      "path" : "src/bitcoin-util.cpp",
      "position" : 158,
      "pull_request_review_id" : 493660820,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492887446",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think there's a risk in doing it over RPC; it's that it puts the wallet code in the middle of two mining codes bits (ie, generate a template, sign, grind proof of work). Merging mining and wallet code seemed a bit ugly, but keeping them distinct means you need a script to combine them for you, so it was easier to put everything in the script. Also seemed easier to add an RPC later if that makes sense, than to remove it if it doesn't make sense.",
      "created_at" : "2020-09-22T17:00:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#issuecomment-696851260",
      "id" : 696851260,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19937",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5Njg1MTI2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-22T17:00:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/696851260",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r497289193"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497289193"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is this needed, since there's already --with-util above? (Also, why util-util?)",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-09-30T07:12:38Z",
      "diff_hunk" : "@@ -560,6 +561,12 @@ AC_ARG_ENABLE([util-wallet],\n   [build_bitcoin_wallet=$enableval],\n   [build_bitcoin_wallet=$build_bitcoin_utils])\n \n+AC_ARG_ENABLE([util-util],\n+  [AS_HELP_STRING([--enable-util-util],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r497289193",
      "id" : 497289193,
      "line" : 565,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI4OTE5Mw==",
      "original_commit_id" : "a55abfe4259fbccf78be45ca2edcafb82cf11718",
      "original_line" : 565,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "configure.ac",
      "position" : 22,
      "pull_request_review_id" : 499142142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497289193",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r497294186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497294186"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`operator<=` exists, so using that seems more straightforward.",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-09-30T07:22:27Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <arith_uint256.h>\n+#include <clientversion.h>\n+#include <coins.h>\n+#include <consensus/consensus.h>\n+#include <core_io.h>\n+#include <key_io.h>\n+#include <policy/rbf.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <script/sign.h>\n+#include <script/signingprovider.h>\n+#include <univalue.h>\n+#include <util/moneystr.h>\n+#include <util/rbf.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+#include <util/system.h>\n+#include <util/translation.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdio.h>\n+#include <thread>\n+\n+#include <boost/algorithm/string.hpp>\n+\n+static const int CONTINUE_EXECUTION=-1;\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupBitcoinUtilArgs(ArgsManager &argsman)\n+{\n+    SetupHelpOptions(argsman);\n+\n+    SetupChainParamsBaseOptions(argsman);\n+}\n+\n+//\n+// This function returns either one of EXIT_ codes when it's expected to stop the process or\n+// CONTINUE_EXECUTION when it's expected to continue further.\n+//\n+static int AppInitUtil(int argc, char* argv[])\n+{\n+    //\n+    // Parameters\n+    //\n+    SetupBitcoinUtilArgs(gArgs);\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n+        return EXIT_FAILURE;\n+    }\n+\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        tfm::format(std::cerr, \"Error: %s\\n\", e.what());\n+        return EXIT_FAILURE;\n+    }\n+\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        // First part of help message is specific to this utility\n+        std::string strUsage = PACKAGE_NAME \" bitcoin-tx utility version \" + FormatFullVersion() + \"\\n\\n\" +\n+            \"Usage:  bitcoin-util [options] [commands]  Do stuff\\n\" +\n+            \"\\n\";\n+        strUsage += gArgs.GetHelpMessage();\n+\n+        tfm::format(std::cout, \"%s\", strUsage);\n+\n+        if (argc < 2) {\n+            tfm::format(std::cerr, \"Error: too few parameters\\n\");\n+            return EXIT_FAILURE;\n+        }\n+        return EXIT_SUCCESS;\n+    }\n+    return CONTINUE_EXECUTION;\n+}\n+\n+static void grind_task(uint32_t nBits, CBlockHeader& header_orig, uint32_t offset, uint32_t step, std::atomic<bool>& found)\n+{\n+    arith_uint256 target;\n+    bool neg, over;\n+    target.SetCompact(nBits, &neg, &over);\n+    if (target == 0 || neg || over) return;\n+    CBlockHeader header = header_orig; // working copy\n+    header.nNonce = offset;\n+\n+    uint32_t finish = std::numeric_limits<uint32_t>::max() - step;\n+    finish = finish - (finish % step) + offset;\n+\n+    while (!found && header.nNonce < finish) {\n+        const uint32_t next = (finish - header.nNonce < 5000*step) ? finish : header.nNonce + 5000*step;\n+        do {\n+            if (!(UintToArith256(header.GetHash()) > target)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r497294186",
      "id" : 497294186,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5NDE4Ng==",
      "original_commit_id" : "a55abfe4259fbccf78be45ca2edcafb82cf11718",
      "original_line" : 103,
      "original_position" : 103,
      "original_start_line" : null,
      "path" : "src/bitcoin-util.cpp",
      "position" : null,
      "pull_request_review_id" : 499142142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497294186",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r497300518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497300518"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wouldn't it be totally fine if these simply did exit(...) instead of the EXIT_/CONTINUE_ stuff?",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-09-30T07:34:08Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <arith_uint256.h>\n+#include <clientversion.h>\n+#include <coins.h>\n+#include <consensus/consensus.h>\n+#include <core_io.h>\n+#include <key_io.h>\n+#include <policy/rbf.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <script/sign.h>\n+#include <script/signingprovider.h>\n+#include <univalue.h>\n+#include <util/moneystr.h>\n+#include <util/rbf.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+#include <util/system.h>\n+#include <util/translation.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdio.h>\n+#include <thread>\n+\n+#include <boost/algorithm/string.hpp>\n+\n+static const int CONTINUE_EXECUTION=-1;\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupBitcoinUtilArgs(ArgsManager &argsman)\n+{\n+    SetupHelpOptions(argsman);\n+\n+    SetupChainParamsBaseOptions(argsman);\n+}\n+\n+//\n+// This function returns either one of EXIT_ codes when it's expected to stop the process or\n+// CONTINUE_EXECUTION when it's expected to continue further.\n+//\n+static int AppInitUtil(int argc, char* argv[])\n+{\n+    //\n+    // Parameters\n+    //\n+    SetupBitcoinUtilArgs(gArgs);\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n+        return EXIT_FAILURE;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r497300518",
      "id" : 497300518,
      "line" : 54,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMwMDUxOA==",
      "original_commit_id" : "a55abfe4259fbccf78be45ca2edcafb82cf11718",
      "original_line" : 54,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/bitcoin-util.cpp",
      "position" : 54,
      "pull_request_review_id" : 499142142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497300518",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r497471331"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497471331"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could cherry-pick the syle-changes from commit faf0a26711eed9264113463e56b988cf9fe549fd?",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-09-30T12:32:51Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <arith_uint256.h>\n+#include <clientversion.h>\n+#include <coins.h>\n+#include <consensus/consensus.h>\n+#include <core_io.h>\n+#include <key_io.h>\n+#include <policy/rbf.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <script/sign.h>\n+#include <script/signingprovider.h>\n+#include <univalue.h>\n+#include <util/moneystr.h>\n+#include <util/rbf.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+#include <util/system.h>\n+#include <util/translation.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdio.h>\n+#include <thread>\n+\n+#include <boost/algorithm/string.hpp>\n+\n+static const int CONTINUE_EXECUTION=-1;\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupBitcoinUtilArgs(ArgsManager &argsman)\n+{\n+    SetupHelpOptions(argsman);\n+\n+    SetupChainParamsBaseOptions(argsman);\n+}\n+\n+//\n+// This function returns either one of EXIT_ codes when it's expected to stop the process or\n+// CONTINUE_EXECUTION when it's expected to continue further.\n+//\n+static int AppInitUtil(int argc, char* argv[])\n+{\n+    //\n+    // Parameters\n+    //\n+    SetupBitcoinUtilArgs(gArgs);\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n+        return EXIT_FAILURE;\n+    }\n+\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r497471331",
      "id" : 497471331,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3MTMzMQ==",
      "original_commit_id" : "e077aa7055e71f08a7d2cfbb29702832899fee04",
      "original_line" : 62,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/bitcoin-util.cpp",
      "position" : null,
      "pull_request_review_id" : 499378286,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497471331",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I still have no idea how to run a custom signet on this PR's commit f4c6ec1deaf8cf4dbbbc2633886112ebdddb31dc (which has conflicts when I try to rebase it to master locally).\r\n\r\nThe [documentation at bitcoin.it](https://en.bitcoin.it/wiki/Signet#Custom_Signet) is out of date. Please help me so that I can test.",
      "created_at" : "2020-10-01T09:50:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#issuecomment-702022998",
      "id" : 702022998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19937",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjAyMjk5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T09:50:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702022998",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/244565?v=4",
         "events_url" : "https://api.github.com/users/jsarenik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jsarenik/followers",
         "following_url" : "https://api.github.com/users/jsarenik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jsarenik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jsarenik",
         "id" : 244565,
         "login" : "jsarenik",
         "node_id" : "MDQ6VXNlcjI0NDU2NQ==",
         "organizations_url" : "https://api.github.com/users/jsarenik/orgs",
         "received_events_url" : "https://api.github.com/users/jsarenik/received_events",
         "repos_url" : "https://api.github.com/users/jsarenik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jsarenik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jsarenik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jsarenik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jsarenik I've updated the running an issuer section of the docs. The rest are fine I think. Lemme know if not.",
      "created_at" : "2020-10-01T10:16:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#issuecomment-702036426",
      "id" : 702036426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19937",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjAzNjQyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T10:16:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702036426",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@kallewoof have a look at https://github.com/bitcoin/bitcoin/pull/15454 and add the `createwallet` lines to the doc please.",
      "created_at" : "2020-10-01T11:30:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#issuecomment-702071793",
      "id" : 702071793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19937",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjA3MTc5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T11:30:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702071793",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/244565?v=4",
         "events_url" : "https://api.github.com/users/jsarenik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jsarenik/followers",
         "following_url" : "https://api.github.com/users/jsarenik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jsarenik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jsarenik",
         "id" : 244565,
         "login" : "jsarenik",
         "node_id" : "MDQ6VXNlcjI0NDU2NQ==",
         "organizations_url" : "https://api.github.com/users/jsarenik/orgs",
         "received_events_url" : "https://api.github.com/users/jsarenik/received_events",
         "repos_url" : "https://api.github.com/users/jsarenik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jsarenik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jsarenik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jsarenik"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@kallewoof or start all `bitcoind` with `-wallet` command line argument.",
      "created_at" : "2020-10-01T11:55:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#issuecomment-702083358",
      "id" : 702083358,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19937",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjA4MzM1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T11:55:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702083358",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/244565?v=4",
         "events_url" : "https://api.github.com/users/jsarenik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jsarenik/followers",
         "following_url" : "https://api.github.com/users/jsarenik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jsarenik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jsarenik",
         "id" : 244565,
         "login" : "jsarenik",
         "node_id" : "MDQ6VXNlcjI0NDU2NQ==",
         "organizations_url" : "https://api.github.com/users/jsarenik/orgs",
         "received_events_url" : "https://api.github.com/users/jsarenik/received_events",
         "repos_url" : "https://api.github.com/users/jsarenik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jsarenik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jsarenik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jsarenik"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Or actually rather `-wallet=\"\"`",
      "created_at" : "2020-10-01T12:05:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#issuecomment-702088576",
      "id" : 702088576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19937",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjA4ODU3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T12:05:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702088576",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/244565?v=4",
         "events_url" : "https://api.github.com/users/jsarenik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jsarenik/followers",
         "following_url" : "https://api.github.com/users/jsarenik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jsarenik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jsarenik",
         "id" : 244565,
         "login" : "jsarenik",
         "node_id" : "MDQ6VXNlcjI0NDU2NQ==",
         "organizations_url" : "https://api.github.com/users/jsarenik/orgs",
         "received_events_url" : "https://api.github.com/users/jsarenik/received_events",
         "repos_url" : "https://api.github.com/users/jsarenik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jsarenik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jsarenik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jsarenik"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@kallewoof Maybe adding a new `bitcoin-cli createwallet` line after starting a `bitcoind` would be the best according to https://github.com/bitcoin/bitcoin/pull/20034 (because `-wallet=\"\"` may change behavior in next releases as far as I understood).",
      "created_at" : "2020-10-01T12:32:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#issuecomment-702102555",
      "id" : 702102555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19937",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjEwMjU1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T12:32:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702102555",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/244565?v=4",
         "events_url" : "https://api.github.com/users/jsarenik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jsarenik/followers",
         "following_url" : "https://api.github.com/users/jsarenik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jsarenik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jsarenik",
         "id" : 244565,
         "login" : "jsarenik",
         "node_id" : "MDQ6VXNlcjI0NDU2NQ==",
         "organizations_url" : "https://api.github.com/users/jsarenik/orgs",
         "received_events_url" : "https://api.github.com/users/jsarenik/received_events",
         "repos_url" : "https://api.github.com/users/jsarenik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jsarenik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jsarenik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jsarenik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r498424245"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498424245"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`--with-utils` gives the bitcoin-cli, bitcoin-tx, bitcoin-util, bitcoin-wallet utils; `--with-util-X` just gives bitcoin-X. Not really needed, (and util-util is certainly weird) but don't see any reason to be inconsistent.",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-10-01T18:01:49Z",
      "diff_hunk" : "@@ -560,6 +561,12 @@ AC_ARG_ENABLE([util-wallet],\n   [build_bitcoin_wallet=$enableval],\n   [build_bitcoin_wallet=$build_bitcoin_utils])\n \n+AC_ARG_ENABLE([util-util],\n+  [AS_HELP_STRING([--enable-util-util],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r498424245",
      "id" : 498424245,
      "in_reply_to_id" : 497289193,
      "line" : 565,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNDI0NQ==",
      "original_commit_id" : "a55abfe4259fbccf78be45ca2edcafb82cf11718",
      "original_line" : 565,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "configure.ac",
      "position" : 22,
      "pull_request_review_id" : 500593135,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498424245",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r498425839"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498425839"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Sure? It's just doing the same thing bitcoin-tx does.",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-10-01T18:05:04Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <arith_uint256.h>\n+#include <clientversion.h>\n+#include <coins.h>\n+#include <consensus/consensus.h>\n+#include <core_io.h>\n+#include <key_io.h>\n+#include <policy/rbf.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <script/sign.h>\n+#include <script/signingprovider.h>\n+#include <univalue.h>\n+#include <util/moneystr.h>\n+#include <util/rbf.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+#include <util/system.h>\n+#include <util/translation.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdio.h>\n+#include <thread>\n+\n+#include <boost/algorithm/string.hpp>\n+\n+static const int CONTINUE_EXECUTION=-1;\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupBitcoinUtilArgs(ArgsManager &argsman)\n+{\n+    SetupHelpOptions(argsman);\n+\n+    SetupChainParamsBaseOptions(argsman);\n+}\n+\n+//\n+// This function returns either one of EXIT_ codes when it's expected to stop the process or\n+// CONTINUE_EXECUTION when it's expected to continue further.\n+//\n+static int AppInitUtil(int argc, char* argv[])\n+{\n+    //\n+    // Parameters\n+    //\n+    SetupBitcoinUtilArgs(gArgs);\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n+        return EXIT_FAILURE;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r498425839",
      "id" : 498425839,
      "in_reply_to_id" : 497300518,
      "line" : 54,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNTgzOQ==",
      "original_commit_id" : "a55abfe4259fbccf78be45ca2edcafb82cf11718",
      "original_line" : 54,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/bitcoin-util.cpp",
      "position" : 54,
      "pull_request_review_id" : 500595480,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498425839",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r498431698"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498431698"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I was thinking it would make sense for `bitcoin-util` would have subcommands like git, each with their own different options (like `--amend` for `git commit` vs `--continue` for `git rebase`). `bitcoin-util grind` could have a `-jobs=8` argument specifying how many jobs to run in parallel, eg, which presumably wouldn't be appropriate elsewhere.",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-10-01T18:16:18Z",
      "diff_hunk" : "@@ -0,0 +1,222 @@\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <arith_uint256.h>\n+#include <clientversion.h>\n+#include <coins.h>\n+#include <consensus/consensus.h>\n+#include <core_io.h>\n+#include <key_io.h>\n+#include <policy/rbf.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <script/sign.h>\n+#include <script/signingprovider.h>\n+#include <univalue.h>\n+#include <util/moneystr.h>\n+#include <util/rbf.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+#include <util/system.h>\n+#include <util/translation.h>\n+\n+#include <functional>\n+#include <memory>\n+#include <stdio.h>\n+#include <thread>\n+\n+#include <boost/algorithm/string.hpp>\n+\n+static const int CONTINUE_EXECUTION=-1;\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupBitcoinUtilArgs(ArgsManager &argsman)\n+{\n+    SetupHelpOptions(argsman);\n+\n+    SetupChainParamsBaseOptions(argsman);\n+}\n+\n+//\n+// This function returns either one of EXIT_ codes when it's expected to stop the process or\n+// CONTINUE_EXECUTION when it's expected to continue further.\n+//\n+static int AppInitUtil(int argc, char* argv[])\n+{\n+    //\n+    // Parameters\n+    //\n+    SetupBitcoinUtilArgs(gArgs);\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n+        return EXIT_FAILURE;\n+    }\n+\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        tfm::format(std::cerr, \"Error: %s\\n\", e.what());\n+        return EXIT_FAILURE;\n+    }\n+\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        // First part of help message is specific to this utility\n+        std::string strUsage = PACKAGE_NAME \" bitcoin-tx utility version \" + FormatFullVersion() + \"\\n\\n\" +\n+            \"Usage:  bitcoin-util [options] [commands]  Do stuff\\n\" +\n+            \"\\n\";\n+        strUsage += gArgs.GetHelpMessage();\n+\n+        tfm::format(std::cout, \"%s\", strUsage);\n+\n+        if (argc < 2) {\n+            tfm::format(std::cerr, \"Error: too few parameters\\n\");\n+            return EXIT_FAILURE;\n+        }\n+        return EXIT_SUCCESS;\n+    }\n+    return CONTINUE_EXECUTION;\n+}\n+\n+static void grind_task(uint32_t nBits, CBlockHeader& header_orig, uint32_t offset, uint32_t step, std::atomic<bool>& found)\n+{\n+    arith_uint256 target;\n+    bool neg, over;\n+    target.SetCompact(nBits, &neg, &over);\n+    if (target == 0 || neg || over) return;\n+    CBlockHeader header = header_orig; // working copy\n+    header.nNonce = offset;\n+\n+    uint32_t finish = std::numeric_limits<uint32_t>::max() - step;\n+    finish = finish - (finish % step) + offset;\n+\n+    while (!found && header.nNonce < finish) {\n+        const uint32_t next = (finish - header.nNonce < 5000*step) ? finish : header.nNonce + 5000*step;\n+        do {\n+            if (!(UintToArith256(header.GetHash()) > target)) {\n+                if (!found.exchange(true)) {\n+                    header_orig.nNonce = header.nNonce;\n+                }\n+                return;\n+            }\n+            header.nNonce += step;\n+        } while(header.nNonce != next);\n+    }\n+}\n+\n+static int Grind(int argc, char* argv[], std::string& strPrint)\n+{\n+    if (argc != 1) {\n+        strPrint = \"Must specify block header to grind\";\n+        return 1;\n+    }\n+\n+    CBlockHeader header;\n+    if (!DecodeHexBlockHeader(header, argv[0])) {\n+        strPrint = \"Could not decode block header\";\n+        return 1;\n+    }\n+\n+    uint32_t nBits = header.nBits;\n+    std::atomic<bool> found{false};\n+\n+    std::vector<std::thread> threads;\n+    int n_tasks = std::max(1u, std::thread::hardware_concurrency());\n+    for (int i = 0; i < n_tasks; ++i) {\n+        threads.emplace_back( grind_task, nBits, std::ref(header), i, n_tasks, std::ref(found) );\n+    }\n+    for (auto& t : threads) {\n+        t.join();\n+    }\n+    if (!found) {\n+        strPrint = \"Could not satisfy difficulty target\";\n+        return 1;\n+    }\n+\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    ss << header;\n+    strPrint = HexStr(ss);\n+    return 0;\n+}\n+\n+static int CommandLineUtil(int argc, char* argv[])\n+{\n+    if (argc <= 1) return 1;\n+\n+    std::string strPrint;\n+    int nRet = 0;\n+\n+    try {\n+        while (argc > 1 && IsSwitchChar(argv[1][0]) && (argv[1][1] != 0)) {\n+            --argc;\n+            ++argv;\n+        }\n+\n+        char* command = argv[1];\n+        if (strcmp(command, \"grind\") == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r498431698",
      "id" : 498431698,
      "in_reply_to_id" : 492742101,
      "line" : 158,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzMTY5OA==",
      "original_commit_id" : "e077aa7055e71f08a7d2cfbb29702832899fee04",
      "original_line" : 158,
      "original_position" : 163,
      "original_start_line" : null,
      "path" : "src/bitcoin-util.cpp",
      "position" : 158,
      "pull_request_review_id" : 500603528,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-01T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498431698",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased, with the a bunch of the suggestions applied",
      "created_at" : "2020-10-01T18:47:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#issuecomment-702328725",
      "id" : 702328725,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19937",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjMyODcyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T18:47:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702328725",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r498591602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498591602"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry, maybe this should use `signetchallenge` to match the argument (here and below)?",
      "commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "created_at" : "2020-10-02T02:09:36Z",
      "diff_hunk" : "@@ -434,6 +435,9 @@ static RPCHelpMan getmininginfo()\n     obj.pushKV(\"networkhashps\",    getnetworkhashps().HandleRequest(request));\n     obj.pushKV(\"pooledtx\",         (uint64_t)mempool.size());\n     obj.pushKV(\"chain\",            Params().NetworkIDString());\n+    if (Params().GetConsensus().signet_blocks) {\n+        obj.pushKV(\"signet_challenge\",  HexStr(Params().GetConsensus().signet_challenge));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#discussion_r498591602",
      "id" : 498591602,
      "line" : 439,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU5MTYwMg==",
      "original_commit_id" : "f2ee4a95b3d9eac7b717f2ed4316dcb5df2d2795",
      "original_line" : 439,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : 15,
      "pull_request_review_id" : 500824117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-02T02:09:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498591602",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jsarenik Gave you edit privileges on the Bitcoin Wiki.",
      "created_at" : "2020-10-02T07:01:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19937#issuecomment-702563748",
      "id" : 702563748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19937",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjU2Mzc0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-02T07:01:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702563748",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   }
]
