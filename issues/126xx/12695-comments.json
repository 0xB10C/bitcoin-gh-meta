[
   {
      "author_association" : "MEMBER",
      "body" : "Good catch! Concept ACK\r\n\r\nJust wanted to add that I've noticed a lot of high quality contributions from you recently. Really nice to have you on board! Thanks for your contributions!",
      "created_at" : "2018-03-15T14:12:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-373389434",
      "id" : 373389434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-15T14:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373389434",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Question: do we want to have conditional logic based on GCC vs. Clang, or just do what's best for GCC (as long as it doesn't break Clang)? It seems like if we want to have the best symbols for both we need some additional logic here.\r\n\r\nGCC:\r\n * Recommends you use -Og\r\n * Says that -g3 includes macro definitions in the debug symbols (the only difference from -g2, which is the default when using -g)\r\n\r\nClang:\r\n * \"-O0 Means \"no optimization\": this level compiles the fastest and generates the most debuggable code\"\r\n * \"Note that Clang debug information works best at -O0.\"\r\n * \"-Og Like -O1. In future versions, this option might disable different optimizations in order to improve debuggability.\"\r\n * Option -g3 is not documented in the man page.\r\n\r\nSo it seems like \"-g -Og\" works on both compilers, but for Clang \"-g -O0\" is actually better.\r\n\r\nThe `$GCC` and `$GXX` variables are set if the compiler defines `__GNUC__`, which clang does. So those variables should never be used. To actually test for Clang you should check if `__clang__` or `__llvm__` are defined.\r\n",
      "created_at" : "2018-03-16T18:50:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-373810555",
      "id" : 373810555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-16T18:50:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373810555",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Also FYI later I plan to submit another PR for you to review to clean up the logic we have to start using more of the newer AX_* macros, most notably AX_APPEND_COMPILE_FLAGS which will clean up a lot of copy/paste logic we have when we check a flag and then append it.[1] I'm going to do that as another PR because I want to separate changes that affect logic (like this PR) with changes that are just cleanups.\r\n\r\n[1] https://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_append_compile_flags.m4",
      "created_at" : "2018-03-16T18:58:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-373813075",
      "id" : 373813075,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-16T18:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373813075",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Summary of recent commits:\r\n * 0014486f25cfc628d79939f55adb6e020fbf0173 changes you suggested\r\n * b59e74db3e013a3551ef8d2df889fe26ea2d0a3c make the summary at the end of configure show all the flags we're actually using\r\n * ed6066b055ca5d024738214a16c91be9cad5c54d proposed way for adding different flags in clang (not sure if you think adding this kind of logic is appropriate or not, just an idea)",
      "created_at" : "2018-03-16T19:30:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-373821394",
      "id" : 373821394,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-16T19:30:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373821394",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12695#discussion_r175902247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12695"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175902247"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This should be automatically detected where necessary (where it would otherwise be warning) if we turn warnings into errors by passing $CXXFLAG_WERROR as the last argument to AX_CHECK_PREPROC_FLAG.",
      "commit_id" : "2f043fd51f4ec2156609fccba967d1c77d6d5c4c",
      "created_at" : "2018-03-20T19:55:35Z",
      "diff_hunk" : "@@ -592,12 +607,15 @@ if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+  dnl -D_FORTIFY_SOURCE=1 and 2 incompatible with -O0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#discussion_r175902247",
      "id" : 175902247,
      "original_commit_id" : "ed6066b055ca5d024738214a16c91be9cad5c54d",
      "original_position" : 47,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 105511389,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12695",
      "updated_at" : "2018-03-20T23:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175902247",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice investigative work above! \r\n\r\nGenerally we don't want to make any assumptions about what compiler will be used, unless an option is known to directly conflict between common ones. I don't think that's the case here. The code also builds fine with msvc, and I'd hope that icc works as well.\r\n\r\nSo checks like this really don't make much sense because they're basically just hard-coded:\r\n```bash\r\nif test $CLANG -eq 1; then\r\n  AX_CHECK_COMPILE_FLAG([-O0],[[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -O0\"]],,[[$CXXFLAG_WERROR]])\r\n...\r\n```\r\nLet's try instead to come up with some universal checks that can be applied.\r\n\r\nA few more little things gleaned from glancing at the gcc/clang code:\r\n- gcc's -Og is also basically -O1, with a few things explicitly removed:\r\n   ```\r\n       { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fbranch_count_reg, NULL, 1 },\r\n       { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fmove_loop_invariants, NULL, 1 },\r\n       { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_pta, NULL, 1 },\r\n       { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fssa_phiopt, NULL, 1 },\r\n   ```\r\n- clang's -gX (other than -g1) are aliased to '-g', so, same behavior as gcc minus the macro definitions.\r\n\r\nFor the most part, debugging with -O0 is huge overkill due to all of the inlining, so it makes sense to me that gcc/clang chose -O1 as the starting point for debugging.\r\n\r\nI think we should use the flags that declare intent, as opposed to trying to guess about optimization levels. That way we benefit more from future compiler versions.\r\n\r\nSo my preference would be:\r\n- -Og with a fallback to -O1 if it doesn't work\r\n- -g3 with a fallback to -g if it doesn't work.\r\n\r\nWe could either nest the fallbacks in the original check's failure condition, or just set a variable if the original check fails, and try the fallback if it's false. My slight preference would be for the latter, just because it's more readable.",
      "created_at" : "2018-03-20T19:58:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-374736165",
      "id" : 374736165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-20T19:58:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374736165",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12695#discussion_r175918743"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12695"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175918743"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Clever, good idea.",
      "commit_id" : "2f043fd51f4ec2156609fccba967d1c77d6d5c4c",
      "created_at" : "2018-03-20T20:53:41Z",
      "diff_hunk" : "@@ -592,12 +607,15 @@ if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+  dnl -D_FORTIFY_SOURCE=1 and 2 incompatible with -O0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#discussion_r175918743",
      "id" : 175918743,
      "in_reply_to_id" : 175902247,
      "original_commit_id" : "ed6066b055ca5d024738214a16c91be9cad5c54d",
      "original_position" : 47,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 105531861,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12695",
      "updated_at" : "2018-03-20T23:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175918743",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Changes here:\r\n * Remove the GCC/Clang check\r\n * Try -Og, fall back to -O0\r\n * Try -g3, fall back to -g\r\n * Pass in debug/error flags when doing the _FORTIFY_SOURCE check\r\n\r\nThere's one other change here that I would like @luke-jr to review. In 9b4e03b27b04f6dc687409a13859d59bb7909d8f he added logic to first try to undefined the flag before setting it. Since we now pass in the debug/error flags, if the -D_FORTIFY_SOURCE=2 check fails I retry with the undefine change. This should mean that if you use --enable-werror the right thing will happen if just setting -D_FORTIFY_SOURCE=2 warns unless it's first undefined. I don't have a compiler that warns in this case, and I'd like Luke to check if he thinks this makes sense.\r\n\r\nAlso note that the _FORTIFY_SOURCE change is a lot less necessary in the first place now since the original error was related to -O0, and we're now preferring -Og (and the warning was a GCC thing in the first place). We could just drop the _FORTIFY_SOURCE change altogether since the logic is a bit confusing; that said, the new logic I added seems a little bit better.",
      "created_at" : "2018-03-20T21:35:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-374764927",
      "id" : 374764927,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-20T21:35:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374764927",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12695#discussion_r175944795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12695"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175944795"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd rather not reverse this logic as it now completely depends on -Werror working as intended. If some compiler fails to warn about the redefine, we'd get the wrong behavior here.\r\n\r\nWith the current logic, we always undefine and redefine as long as the options work individually.",
      "commit_id" : "2f043fd51f4ec2156609fccba967d1c77d6d5c4c",
      "created_at" : "2018-03-20T22:38:57Z",
      "diff_hunk" : "@@ -592,12 +601,16 @@ if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#discussion_r175944795",
      "id" : 175944795,
      "original_commit_id" : "6b94f6f379b18523ae33773bd69d1ebc7d9cc85f",
      "original_position" : 39,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 105562263,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12695",
      "updated_at" : "2018-03-20T23:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175944795",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks, looks good to me now other than the FORTIFY reversal.\r\n\r\n> Also note that the _FORTIFY_SOURCE change is a lot less necessary in the first place now since the original error was related to -O0, and we're now preferring -Og (and the warning was a GCC thing in the first place). We could just drop the _FORTIFY_SOURCE change altogether since the logic is a bit confusing; that said, the new logic I added seems a little bit better.\r\n\r\nBeing pedantic: The warning comes from glibc, it could potentially occur with any compiler.",
      "created_at" : "2018-03-20T22:42:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-374782218",
      "id" : 374782218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-20T22:42:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374782218",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12695#discussion_r175949177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12695"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175949177"
         }
      },
      "author_association" : "MEMBER",
      "body" : "OK, will undo this.",
      "commit_id" : "2f043fd51f4ec2156609fccba967d1c77d6d5c4c",
      "created_at" : "2018-03-20T23:01:52Z",
      "diff_hunk" : "@@ -592,12 +601,16 @@ if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#discussion_r175949177",
      "id" : 175949177,
      "in_reply_to_id" : 175944795,
      "original_commit_id" : "6b94f6f379b18523ae33773bd69d1ebc7d9cc85f",
      "original_position" : 39,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 105567311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12695",
      "updated_at" : "2018-03-20T23:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175949177",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reverted the change to _FORTIFY_SOURCE, now the only difference in that part of the file compared to master is that we pass in debug and error flags when making the check. If this looks OK I can squash the branch down.",
      "created_at" : "2018-03-20T23:06:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-374787359",
      "id" : 374787359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-20T23:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374787359",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hmm it appears the extra flags are supposed to be CPPFLAGS not CFLAGS/CXXFLAGS according to [the m4 macro](https://github.com/bitcoin/bitcoin/blob/master/build-aux/m4/ax_check_preproc_flag.m4). So maybe there's no point in passing in the flags at all there. Kind of a bummer since that means it doesn't catch the interaction with `-O0`.",
      "created_at" : "2018-03-20T23:08:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-374787939",
      "id" : 374787939,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-20T23:08:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374787939",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Removed the _FORTIFY_SOURCE changes altogether since the new check isn't effective. The only reason I wanted to change it in the first place was because it interacted poorly with -O0, and on the platforms that generates warnings on we no longer expect to see warnings.",
      "created_at" : "2018-03-20T23:15:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-374789385",
      "id" : 374789385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-20T23:15:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374789385",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "One more thing I might as well ask while we're making this change, since I touched this line of code anyway. At the top of `src/Makefile.am` we have:\r\n```\r\nAM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) $(GPROF_LDFLAGS)\r\n```\r\n\r\nWe don't set `LIBTOOL_LDFLAGS` anywhere, but we do set `LIBTOOL_APP_LDFLAGS` in `configure.ac` and then add to it `LDFLAGS` all over the place to executables we build. It seems like this was originally a typo and the original intention was to add `LIBTOOL_APP_LDFLAGS` to `AM_LDFLAGS`.\r\n\r\nThe current code works but we might want to fix this (perhaps in another PR).",
      "created_at" : "2018-03-20T23:31:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-374792521",
      "id" : 374792521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-20T23:31:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374792521",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Hmm it appears the extra flags are supposed to be CPPFLAGS not CFLAGS/CXXFLAGS according to the m4 macro\r\n\r\nNot sure what you mean by that. The flags passed in are appended to CPPFLAGS for the test, it doesn't matter how they're stored otherwise.\r\n\r\nI agree with just leaving it alone, though.",
      "created_at" : "2018-03-20T23:38:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-374793941",
      "id" : 374793941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-20T23:38:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374793941",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]
