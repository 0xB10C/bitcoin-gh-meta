[
   {
      "author_association" : "MEMBER",
      "body" : "Good catch! Concept ACK\r\n\r\nJust wanted to add that I've noticed a lot of high quality contributions from you recently. Really nice to have you on board! Thanks for your contributions!",
      "created_at" : "2018-03-15T14:12:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-373389434",
      "id" : 373389434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-15T14:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373389434",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Question: do we want to have conditional logic based on GCC vs. Clang, or just do what's best for GCC (as long as it doesn't break Clang)? It seems like if we want to have the best symbols for both we need some additional logic here.\r\n\r\nGCC:\r\n * Recommends you use -Og\r\n * Says that -g3 includes macro definitions in the debug symbols (the only difference from -g2, which is the default when using -g)\r\n\r\nClang:\r\n * \"-O0 Means \"no optimization\": this level compiles the fastest and generates the most debuggable code\"\r\n * \"Note that Clang debug information works best at -O0.\"\r\n * \"-Og Like -O1. In future versions, this option might disable different optimizations in order to improve debuggability.\"\r\n * Option -g3 is not documented in the man page.\r\n\r\nSo it seems like \"-g -Og\" works on both compilers, but for Clang \"-g -O0\" is actually better.\r\n\r\nThe `$GCC` and `$GXX` variables are set if the compiler defines `__GNUC__`, which clang does. So those variables should never be used. To actually test for Clang you should check if `__clang__` or `__llvm__` are defined.\r\n",
      "created_at" : "2018-03-16T18:50:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-373810555",
      "id" : 373810555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-16T18:50:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373810555",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Also FYI later I plan to submit another PR for you to review to clean up the logic we have to start using more of the newer AX_* macros, most notably AX_APPEND_COMPILE_FLAGS which will clean up a lot of copy/paste logic we have when we check a flag and then append it.[1] I'm going to do that as another PR because I want to separate changes that affect logic (like this PR) with changes that are just cleanups.\r\n\r\n[1] https://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_append_compile_flags.m4",
      "created_at" : "2018-03-16T18:58:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-373813075",
      "id" : 373813075,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-16T18:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373813075",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Summary of recent commits:\r\n * 0014486f25cfc628d79939f55adb6e020fbf0173 changes you suggested\r\n * b59e74db3e013a3551ef8d2df889fe26ea2d0a3c make the summary at the end of configure show all the flags we're actually using\r\n * ed6066b055ca5d024738214a16c91be9cad5c54d proposed way for adding different flags in clang (not sure if you think adding this kind of logic is appropriate or not, just an idea)",
      "created_at" : "2018-03-16T19:30:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-373821394",
      "id" : 373821394,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12695",
      "updated_at" : "2018-03-16T19:30:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373821394",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   }
]
