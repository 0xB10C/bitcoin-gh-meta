[
   {
      "author_association" : "MEMBER",
      "body" : "~~Both old and~~ new code LGTM.",
      "created_at" : "2018-11-16T09:41:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14734#issuecomment-439337521",
      "id" : 439337521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14734",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTMzNzUyMQ==",
      "updated_at" : "2018-11-16T10:40:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439337521",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Extremely nice find and another excellent contribution from you! Thanks! You're right that the sanitizers don't catch this class of UB. I think `tis-interpreter` is the only good tool catching this class of UB. May I ask how you found this issue?\r\n\r\nFrom what I can see we unconditionally hit this UB as part of startup no matter what parameters we pass to `bitcoind` :-\\\r\n\r\nWhy this is UB: Assuming `char foo[N];` then calculating `foo + n` is UB if `n` is not in the range `0 <= n <= N`. Calculating one past the end (`n=N`) is OK (but we may not dereference).",
      "created_at" : "2018-11-16T10:31:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14734#issuecomment-439351565",
      "id" : 439351565,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14734",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTM1MTU2NQ==",
      "updated_at" : "2018-11-16T10:35:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439351565",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag What is \"old code\" referring to? Don't you agree that the existing code in `master` invokes UB? :-)",
      "created_at" : "2018-11-16T10:36:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14734#issuecomment-439352867",
      "id" : 439352867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14734",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTM1Mjg2Nw==",
      "updated_at" : "2018-11-16T10:36:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439352867",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift TIL, it is UB unless one past the last element.\r\n\r\nutACK 0f459d8.",
      "created_at" : "2018-11-16T10:40:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14734#issuecomment-439354048",
      "id" : 439354048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14734",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTM1NDA0OA==",
      "updated_at" : "2018-11-16T10:40:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439354048",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kazcw how about this:\r\n```diff\r\ndiff --git a/src/uint256.cpp b/src/uint256.cpp\r\nindex d9da66803..e5cadfae5 100644\r\n--- a/src/uint256.cpp\r\n+++ b/src/uint256.cpp\r\n@@ -40,13 +40,12 @@ void base_blob<BITS>::SetHex(const char* psz)\r\n     const char* pbegin = psz;\r\n     while (::HexDigit(*psz) != -1)\r\n         psz++;\r\n-    psz--;\r\n     unsigned char* p1 = (unsigned char*)data;\r\n     unsigned char* pend = p1 + WIDTH;\r\n-    while (psz >= pbegin && p1 < pend) {\r\n-        *p1 = ::HexDigit(*psz--);\r\n-        if (psz >= pbegin) {\r\n-            *p1 |= ((unsigned char)::HexDigit(*psz--) << 4);\r\n+    while (psz > pbegin && p1 < pend) {\r\n+        *p1 = ::HexDigit(*--psz);\r\n+        if (psz > pbegin) {\r\n+            *p1 |= ((unsigned char)::HexDigit(*--psz) << 4);\r\n             p1++;\r\n         }\r\n     }\r\n```",
      "created_at" : "2018-11-16T11:09:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14734#issuecomment-439361248",
      "id" : 439361248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14734",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTM2MTI0OA==",
      "updated_at" : "2018-11-16T11:09:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439361248",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift Just reading code!\r\n\r\n@promag That would be the minimal change to fix the problem, but Satoshi wrote C++ like an old-school C hacker :laughing:. IMO indexing is a little clearer in a codebase that these days uses more modern idioms.",
      "created_at" : "2018-11-16T15:41:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14734#issuecomment-439433259",
      "id" : 439433259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14734",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTQzMzI1OQ==",
      "updated_at" : "2018-11-16T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439433259",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1047859?v=4",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "node_id" : "MDQ6VXNlcjEwNDc4NTk=",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kazcw Nice! Then keep on reading code please! :-)\r\n\r\nI've tried to launch a crusade against UB in Bitcoin Core. I even named the latest C-lightning release \"The Consensus Loving Nasal Daemon\" as a catchy slogan in this fight, so and I'm very happy to see your contributions! Keep 'em coming! :-)\r\n\r\nContext:\r\n* https://twitter.com/practicalswift/status/1051524615204470784\r\n* https://twitter.com/rusty_twit/status/1055965134428921856\r\n* https://github.com/ElementsProject/lightning/releases",
      "created_at" : "2018-11-16T17:01:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14734#issuecomment-439458877",
      "id" : 439458877,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14734",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTQ1ODg3Nw==",
      "updated_at" : "2018-11-16T17:01:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439458877",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke @laanwj What about adding a new label Ã¢ÂÂ say \"Undefined Behaviour\" Ã¢ÂÂ for UB pull requests and issues?\r\n\r\nFWIW I think the current use of the \"Refactoring\" label for UB PRs is problematic for a number of reasons:\r\n* UB PRs might be considered less important from a review attention perspective due to the refactoring label\r\n* The use of the refactoring label for UB might be interpreted as us downplaying the risks associated with UB\r\n* The \"Refactoring\" label is technically incorrect:\r\n  1. Code refactoring is defined as the process of restructuring existing computer code without changing its external behaviour. \r\n  2. Triggering undefined behaviour is defined as executing computer code whose behaviour is not prescribed by the language specification to which the code adheres, for the current state of the program.\r\n  3. Since undefined behaviour is a superset of external behaviour it follows that a PR fixing UB cannot technically be considered refactoring.\r\n\r\nSome open UB PR:s that need the suggested \"Undefined Behaviour\" label:\r\n* #14479: serialization: Don't invoke undefined behaviour when doing type punning\r\n* #14242: Avoid triggering undefined behaviour (`std::memset(nullptr, 0, 0)`) if an invalid string is passed to `DecodeSecret(...)`\r\n* #14239: Avoid dividing by zero (undefined behaviour) in `EstimateMedianVal` (policy)/`ConnectTip` (validation)/`CreateTransaction` (wallet)",
      "created_at" : "2018-11-16T17:44:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14734#issuecomment-439471320",
      "id" : 439471320,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14734",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTQ3MTMyMA==",
      "updated_at" : "2018-11-16T17:49:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439471320",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift While I am in favor of (slowly) moving the code to strictly comply with the C++ standard, I also think we should also be aware that there are differences between:\r\n* Technically UB, but not for any real platform\r\n* Technically UB, but well defined for all systems we support\r\n* Would be UB, but not in any reachable codepath\r\n* Any of the above that follows from a misunderstanding by developers/reviewers, resulting in a fragile codebase.\r\n* An actual issue that can have impact on production systems.\r\n\r\nI would argue that the first one or two are not a priority at all (still a good-to-have, but there are also code churn concerns), while the last few are increasingly more so. I don't think classifying them all under \"UB\" is a good idea - it would be overly dramatic for some things, and a wild understatement for others.\r\n\r\nBy this I don't want to discourage anyone from working towards improving the situation, but perhaps a \"crusade\" isn't the right approach.\r\n",
      "created_at" : "2018-11-16T18:05:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14734#issuecomment-439477521",
      "id" : 439477521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14734",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTQ3NzUyMQ==",
      "updated_at" : "2018-11-16T18:14:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439477521",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Mostly agree with @sipa.\r\n\r\nAlso, there is a label \"Bug\", which (I guess) could be used when there is an observable issue with the code. I.e. actual malfunction and not just a code style issue or random compiler warning. Generally, if you are unable to write a functional or unit test case that will fail on current master, I'd say applying the \"Refactoring\" label is just fine.\r\n\r\nWe only support gcc and clang as compilers and in most cases of UB they just do the right thing without having to rewrite the code. And given that this piece of code is around for as long as the code base existed and no one ever run into issues, it seems unlikely that things will suddenly break.",
      "created_at" : "2018-11-16T18:42:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14734#issuecomment-439487992",
      "id" : 439487992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14734",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTQ4Nzk5Mg==",
      "updated_at" : "2018-11-16T18:42:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439487992",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
