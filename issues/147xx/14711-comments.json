[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Though, I'd prefer if we first cleaned up the interface for ScanForWalletTransactions. I believe that right now it is relying on too much undefined behaviour that this refactoring could be meaningfully reviewed.",
      "created_at" : "2018-11-12T22:09:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-438045762",
      "id" : 438045762,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODA0NTc2Mg==",
      "updated_at" : "2018-11-12T22:09:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438045762",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> too much undefined behaviour that this refactoring could be meaningfully reviewed.\r\n\r\nAre you talking about a small part of this PR or the whole thing? Most of the changes here don't have anything to do with ScanForWalletTransactions. I could even drop the rescan changes and save them for a different PR if you are only worried about them.",
      "created_at" : "2018-11-12T22:34:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-438052117",
      "id" : 438052117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODA1MjExNw==",
      "updated_at" : "2018-11-12T22:34:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438052117",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nNice readability and robustness improvement",
      "created_at" : "2018-11-13T10:16:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-438211801",
      "id" : 438211801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODIxMTgwMQ==",
      "updated_at" : "2018-11-13T10:16:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438211801",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nWould be easier/safer to review if split up. Like Marco, IÃ¢ÂÂd like to see ScanFor improved first.",
      "created_at" : "2018-11-13T10:21:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-438213381",
      "id" : 438213381,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODIxMzM4MQ==",
      "updated_at" : "2018-11-13T10:21:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438213381",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14533](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14533.html) (wallet: ensure wallet files are not reused across chains by mrwhythat)\n* [#14380](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14380.html) (fix assert crash when specified change output spend size is unknown by instagibbs)\n* [#14358](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14358.html) ([logs] Fix a few log messages related to duration measurement by romanz)\n* [#13430](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13430.html) (use IsBlockPruned() where appropriate by kallewoof)\n* [#13076](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13076.html) (Fix ScanForWalletTransactions to return an enum indicating scan result: success / failure / user_abort by Empact)\n* [#9381](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9381.html) (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-11-13T15:20:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-438303753",
      "id" : 438303753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODMwMzc1Mw==",
      "updated_at" : "2018-11-14T01:44:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438303753",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233393592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233393592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not use `findPruned(rescan_height, *tip_height)`?",
      "commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "created_at" : "2018-11-14T10:37:11Z",
      "diff_hunk" : "@@ -4122,45 +4135,55 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n-    LockAnnotation lock(::cs_main); // Temporary, for FindForkInGlobalIndex below. Removed in upcoming commit.\n     auto locked_chain = chain.lock();\n     LOCK(walletInstance->cs_wallet);\n \n-    CBlockIndex *pindexRescan = chainActive.Genesis();\n+    int rescan_height = 0;\n     if (!gArgs.GetBoolArg(\"-rescan\", false))\n     {\n         WalletBatch batch(*walletInstance->database);\n         CBlockLocator locator;\n-        if (batch.ReadBestBlock(locator))\n-            pindexRescan = FindForkInGlobalIndex(chainActive, locator);\n+        if (batch.ReadBestBlock(locator)) {\n+            if (const Optional<int> fork_height = locked_chain->findLocatorFork(locator)) {\n+                rescan_height = *fork_height;\n+            }\n+        }\n     }\n \n-    walletInstance->m_last_block_processed = chainActive.Tip();\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    if (tip_height) {\n+        walletInstance->m_last_block_processed = locked_chain->getBlockHash(*tip_height);\n+    } else {\n+        walletInstance->m_last_block_processed.SetNull();\n+    }\n \n-    if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\n+    if (tip_height && *tip_height != rescan_height)\n     {\n         //We can't rescan beyond non-pruned blocks, stop and throw an error\n         //this might happen if a user uses an old wallet within a pruned node\n         // or if he ran -disablewallet for a longer time, then decided to re-enable\n         if (fPruneMode)\n         {\n-            CBlockIndex *block = chainActive.Tip();\n-            while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA) && block->pprev->nTx > 0 && pindexRescan != block)\n-                block = block->pprev;\n+            int block_height = *tip_height;\n+            while (block_height > 0 && locked_chain->haveBlockOnDisk(block_height - 1) && rescan_height != block_height) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233393592",
      "id" : 233393592,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzM5MzU5Mg==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 413,
      "path" : "src/wallet/wallet.cpp",
      "position" : 413,
      "pull_request_review_id" : 174793977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2018-11-14T10:50:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233393592",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233398045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233398045"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is where the earlier confusion arose, it is `stop_block` which is optional not `start_block`, so the comment is wrong, the names need to be switched",
      "commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "created_at" : "2018-11-14T10:50:04Z",
      "diff_hunk" : "@@ -1605,114 +1600,133 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n     // Find starting block. May be null if nCreateTime is greater than the\n     // highest blockchain timestamp, in which case there is nothing that needs\n     // to be scanned.\n-    CBlockIndex* startBlock = nullptr;\n+    uint256 start_block;\n     {\n         auto locked_chain = chain().lock();\n-        startBlock = chainActive.FindEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n-        WalletLogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, startBlock ? chainActive.Height() - startBlock->nHeight + 1 : 0);\n-    }\n-\n-    if (startBlock) {\n-        const CBlockIndex* const failedBlock = ScanForWalletTransactions(startBlock, nullptr, reserver, update);\n-        if (failedBlock) {\n-            return failedBlock->GetBlockTimeMax() + TIMESTAMP_WINDOW + 1;\n+        const Optional<int> start_height = locked_chain->findFirstBlockWithTime(startTime - TIMESTAMP_WINDOW);\n+        const Optional<int> tip_height = locked_chain->getHeight();\n+        WalletLogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, tip_height && start_height ? *tip_height - *start_height + 1 : 0);\n+        if (start_height) start_block = locked_chain->getBlockHash(*start_height);\n+    }\n+\n+    if (!start_block.IsNull()) {\n+        uint256 failed_block = ScanForWalletTransactions(start_block, {} /* stop block */, reserver, update);\n+        if (!failed_block.IsNull()) {\n+            int64_t time_max;\n+            if (!chain().findBlock(failed_block, nullptr /* block */, nullptr /* time */, &time_max)) {\n+                throw std::logic_error(\"ScanForWalletTransactions returned invalid block hash\");\n+            }\n+            return time_max + TIMESTAMP_WINDOW + 1;\n         }\n     }\n     return startTime;\n }\n \n /**\n- * Scan the block chain (starting in pindexStart) for transactions\n+ * Scan the block chain (starting in start_block) for transactions\n  * from or to us. If fUpdate is true, found transactions that already\n  * exist in the wallet will be updated.\n  *\n  * Returns null if scan was successful. Otherwise, if a complete rescan was not\n  * possible (due to pruning or corruption), returns pointer to the most recent\n  * block that could not be scanned.\n  *\n- * If pindexStop is not a nullptr, the scan will stop at the block-index\n- * defined by pindexStop\n+ * If stop_block is not null, the scan will stop at the block-index\n+ * defined by stop_block\n  *\n- * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * Caller needs to make sure stop_block (and the optional start_block) are on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233398045",
      "id" : 233398045,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzM5ODA0NQ==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 158,
      "path" : "src/wallet/wallet.cpp",
      "position" : 158,
      "pull_request_review_id" : 174793977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2018-11-14T10:50:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233398045",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233641224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233641224"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233393592\r\n\r\n> Why not use findPruned\r\n\r\nI used `haveBlockOnDisk` here because I was doing a very literal translation and `findPruned` doesn't have the `block->pprev->nTx > 0` condition. If can drop that condition or add it to `findPruned`, though, if it would be an improvement.",
      "commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "created_at" : "2018-11-14T22:13:46Z",
      "diff_hunk" : "@@ -4122,45 +4135,55 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n-    LockAnnotation lock(::cs_main); // Temporary, for FindForkInGlobalIndex below. Removed in upcoming commit.\n     auto locked_chain = chain.lock();\n     LOCK(walletInstance->cs_wallet);\n \n-    CBlockIndex *pindexRescan = chainActive.Genesis();\n+    int rescan_height = 0;\n     if (!gArgs.GetBoolArg(\"-rescan\", false))\n     {\n         WalletBatch batch(*walletInstance->database);\n         CBlockLocator locator;\n-        if (batch.ReadBestBlock(locator))\n-            pindexRescan = FindForkInGlobalIndex(chainActive, locator);\n+        if (batch.ReadBestBlock(locator)) {\n+            if (const Optional<int> fork_height = locked_chain->findLocatorFork(locator)) {\n+                rescan_height = *fork_height;\n+            }\n+        }\n     }\n \n-    walletInstance->m_last_block_processed = chainActive.Tip();\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    if (tip_height) {\n+        walletInstance->m_last_block_processed = locked_chain->getBlockHash(*tip_height);\n+    } else {\n+        walletInstance->m_last_block_processed.SetNull();\n+    }\n \n-    if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\n+    if (tip_height && *tip_height != rescan_height)\n     {\n         //We can't rescan beyond non-pruned blocks, stop and throw an error\n         //this might happen if a user uses an old wallet within a pruned node\n         // or if he ran -disablewallet for a longer time, then decided to re-enable\n         if (fPruneMode)\n         {\n-            CBlockIndex *block = chainActive.Tip();\n-            while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA) && block->pprev->nTx > 0 && pindexRescan != block)\n-                block = block->pprev;\n+            int block_height = *tip_height;\n+            while (block_height > 0 && locked_chain->haveBlockOnDisk(block_height - 1) && rescan_height != block_height) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233641224",
      "id" : 233641224,
      "in_reply_to_id" : 233393592,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzY0MTIyNA==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 413,
      "path" : "src/wallet/wallet.cpp",
      "position" : 413,
      "pull_request_review_id" : 175104977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2018-11-14T22:39:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233641224",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233644571"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233644571"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233398045\r\n\r\n> the names need to be switched\r\n\r\nGood catch. I'll probably just rewrite this comment if this isn't fixed by another of the rescan PRs first. This comment never made sense to me even when it was first added in https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156810727 / https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163063324.",
      "commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "created_at" : "2018-11-14T22:24:42Z",
      "diff_hunk" : "@@ -1605,114 +1600,133 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n     // Find starting block. May be null if nCreateTime is greater than the\n     // highest blockchain timestamp, in which case there is nothing that needs\n     // to be scanned.\n-    CBlockIndex* startBlock = nullptr;\n+    uint256 start_block;\n     {\n         auto locked_chain = chain().lock();\n-        startBlock = chainActive.FindEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n-        WalletLogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, startBlock ? chainActive.Height() - startBlock->nHeight + 1 : 0);\n-    }\n-\n-    if (startBlock) {\n-        const CBlockIndex* const failedBlock = ScanForWalletTransactions(startBlock, nullptr, reserver, update);\n-        if (failedBlock) {\n-            return failedBlock->GetBlockTimeMax() + TIMESTAMP_WINDOW + 1;\n+        const Optional<int> start_height = locked_chain->findFirstBlockWithTime(startTime - TIMESTAMP_WINDOW);\n+        const Optional<int> tip_height = locked_chain->getHeight();\n+        WalletLogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, tip_height && start_height ? *tip_height - *start_height + 1 : 0);\n+        if (start_height) start_block = locked_chain->getBlockHash(*start_height);\n+    }\n+\n+    if (!start_block.IsNull()) {\n+        uint256 failed_block = ScanForWalletTransactions(start_block, {} /* stop block */, reserver, update);\n+        if (!failed_block.IsNull()) {\n+            int64_t time_max;\n+            if (!chain().findBlock(failed_block, nullptr /* block */, nullptr /* time */, &time_max)) {\n+                throw std::logic_error(\"ScanForWalletTransactions returned invalid block hash\");\n+            }\n+            return time_max + TIMESTAMP_WINDOW + 1;\n         }\n     }\n     return startTime;\n }\n \n /**\n- * Scan the block chain (starting in pindexStart) for transactions\n+ * Scan the block chain (starting in start_block) for transactions\n  * from or to us. If fUpdate is true, found transactions that already\n  * exist in the wallet will be updated.\n  *\n  * Returns null if scan was successful. Otherwise, if a complete rescan was not\n  * possible (due to pruning or corruption), returns pointer to the most recent\n  * block that could not be scanned.\n  *\n- * If pindexStop is not a nullptr, the scan will stop at the block-index\n- * defined by pindexStop\n+ * If stop_block is not null, the scan will stop at the block-index\n+ * defined by stop_block\n  *\n- * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * Caller needs to make sure stop_block (and the optional start_block) are on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233644571",
      "id" : 233644571,
      "in_reply_to_id" : 233398045,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzY0NDU3MQ==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 158,
      "path" : "src/wallet/wallet.cpp",
      "position" : 158,
      "pull_request_review_id" : 175104977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2018-11-14T22:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233644571",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233662540"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233662540"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This sounds wrong, as if it wants to discard genesis block (`height == 0`). Only got it after seeing the return type `Optional<int>`. IMO `.contains(hash)` would be preferable.",
      "commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "created_at" : "2018-11-14T23:34:20Z",
      "diff_hunk" : "@@ -366,8 +366,7 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     if (merkleBlock.txn.ExtractMatches(vMatch, vIndex) == merkleBlock.header.hashMerkleRoot) {\n \n         auto locked_chain = pwallet->chain().lock();\n-        const CBlockIndex* pindex = LookupBlockIndex(merkleBlock.header.GetHash());\n-        if (!pindex || !chainActive.Contains(pindex)) {\n+        if (!locked_chain->getBlockHeight(merkleBlock.header.GetHash())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233662540",
      "id" : 233662540,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzY2MjU0MA==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 6,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 6,
      "pull_request_review_id" : 175131066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2018-11-15T00:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233662540",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233671425"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233671425"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Isn't this change conceptually different? Even though the chain is locked, this can be copied and used without the lock and therefore can \"point\" to other block if a reorg occurs. This wouldn't occur with `CBlockIndex`.\r\n\r\nLooks like you could either:\r\n - create `interfaces::BlockIndex`\r\n - replace `CBlockIndex*` with `uint256`.",
      "commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "created_at" : "2018-11-15T00:16:53Z",
      "diff_hunk" : "@@ -1526,24 +1529,18 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n     auto locked_chain = pwallet->chain().lock();\n     LOCK(pwallet->cs_wallet);\n \n-    const CBlockIndex* pindex = nullptr;    // Block index of the specified block or the common ancestor, if the block provided was in a deactivated chain.\n-    const CBlockIndex* paltindex = nullptr; // Block index of the specified block, even if it's in a deactivated chain.\n+    Optional<int> height;    // Height of the specified block or the common ancestor, if the block provided was in a deactivated chain.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233671425",
      "id" : 233671425,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzY3MTQyNQ==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 18,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 18,
      "pull_request_review_id" : 175131066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2018-11-15T10:55:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233671425",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
