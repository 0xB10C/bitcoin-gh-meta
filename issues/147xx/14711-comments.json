[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Though, I'd prefer if we first cleaned up the interface for ScanForWalletTransactions. I believe that right now it is relying on too much undefined behaviour that this refactoring could be meaningfully reviewed.",
      "created_at" : "2018-11-12T22:09:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-438045762",
      "id" : 438045762,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODA0NTc2Mg==",
      "updated_at" : "2018-11-12T22:09:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438045762",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> too much undefined behaviour that this refactoring could be meaningfully reviewed.\r\n\r\nAre you talking about a small part of this PR or the whole thing? Most of the changes here don't have anything to do with ScanForWalletTransactions. I could even drop the rescan changes and save them for a different PR if you are only worried about them.",
      "created_at" : "2018-11-12T22:34:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-438052117",
      "id" : 438052117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODA1MjExNw==",
      "updated_at" : "2018-11-12T22:34:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438052117",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nNice readability and robustness improvement",
      "created_at" : "2018-11-13T10:16:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-438211801",
      "id" : 438211801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODIxMTgwMQ==",
      "updated_at" : "2018-11-13T10:16:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438211801",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nWould be easier/safer to review if split up. Like Marco, IÃ¢ÂÂd like to see ScanFor improved first.",
      "created_at" : "2018-11-13T10:21:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-438213381",
      "id" : 438213381,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODIxMzM4MQ==",
      "updated_at" : "2018-11-13T10:21:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438213381",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15129](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15129.html) (rpc: Added ability to remove watch only addresses by benthecarman)\n* [#14942](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14942.html) (wallet: Return a ScanResult from CWallet::RescanFromTime by Empact)\n* [#14533](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14533.html) (wallet: ensure wallet files are not reused across chains by mrwhythat)\n* [#11652](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/11652.html) (Add missing locks: validation.cpp + related by practicalswift)\n* [#9381](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9381.html) (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-11-13T15:20:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-438303753",
      "id" : 438303753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODMwMzc1Mw==",
      "updated_at" : "2019-01-15T22:02:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438303753",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233393592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233393592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not use `findPruned(rescan_height, *tip_height)`?",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2018-11-14T10:37:11Z",
      "diff_hunk" : "@@ -4122,45 +4135,55 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n-    LockAnnotation lock(::cs_main); // Temporary, for FindForkInGlobalIndex below. Removed in upcoming commit.\n     auto locked_chain = chain.lock();\n     LOCK(walletInstance->cs_wallet);\n \n-    CBlockIndex *pindexRescan = chainActive.Genesis();\n+    int rescan_height = 0;\n     if (!gArgs.GetBoolArg(\"-rescan\", false))\n     {\n         WalletBatch batch(*walletInstance->database);\n         CBlockLocator locator;\n-        if (batch.ReadBestBlock(locator))\n-            pindexRescan = FindForkInGlobalIndex(chainActive, locator);\n+        if (batch.ReadBestBlock(locator)) {\n+            if (const Optional<int> fork_height = locked_chain->findLocatorFork(locator)) {\n+                rescan_height = *fork_height;\n+            }\n+        }\n     }\n \n-    walletInstance->m_last_block_processed = chainActive.Tip();\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    if (tip_height) {\n+        walletInstance->m_last_block_processed = locked_chain->getBlockHash(*tip_height);\n+    } else {\n+        walletInstance->m_last_block_processed.SetNull();\n+    }\n \n-    if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\n+    if (tip_height && *tip_height != rescan_height)\n     {\n         //We can't rescan beyond non-pruned blocks, stop and throw an error\n         //this might happen if a user uses an old wallet within a pruned node\n         // or if he ran -disablewallet for a longer time, then decided to re-enable\n         if (fPruneMode)\n         {\n-            CBlockIndex *block = chainActive.Tip();\n-            while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA) && block->pprev->nTx > 0 && pindexRescan != block)\n-                block = block->pprev;\n+            int block_height = *tip_height;\n+            while (block_height > 0 && locked_chain->haveBlockOnDisk(block_height - 1) && rescan_height != block_height) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233393592",
      "id" : 233393592,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzM5MzU5Mg==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 413,
      "path" : "src/wallet/wallet.cpp",
      "position" : 446,
      "pull_request_review_id" : 174793977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233393592",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233398045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233398045"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is where the earlier confusion arose, it is `stop_block` which is optional not `start_block`, so the comment is wrong, the names need to be switched",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2018-11-14T10:50:04Z",
      "diff_hunk" : "@@ -1605,114 +1600,133 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n     // Find starting block. May be null if nCreateTime is greater than the\n     // highest blockchain timestamp, in which case there is nothing that needs\n     // to be scanned.\n-    CBlockIndex* startBlock = nullptr;\n+    uint256 start_block;\n     {\n         auto locked_chain = chain().lock();\n-        startBlock = chainActive.FindEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n-        WalletLogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, startBlock ? chainActive.Height() - startBlock->nHeight + 1 : 0);\n-    }\n-\n-    if (startBlock) {\n-        const CBlockIndex* const failedBlock = ScanForWalletTransactions(startBlock, nullptr, reserver, update);\n-        if (failedBlock) {\n-            return failedBlock->GetBlockTimeMax() + TIMESTAMP_WINDOW + 1;\n+        const Optional<int> start_height = locked_chain->findFirstBlockWithTime(startTime - TIMESTAMP_WINDOW);\n+        const Optional<int> tip_height = locked_chain->getHeight();\n+        WalletLogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, tip_height && start_height ? *tip_height - *start_height + 1 : 0);\n+        if (start_height) start_block = locked_chain->getBlockHash(*start_height);\n+    }\n+\n+    if (!start_block.IsNull()) {\n+        uint256 failed_block = ScanForWalletTransactions(start_block, {} /* stop block */, reserver, update);\n+        if (!failed_block.IsNull()) {\n+            int64_t time_max;\n+            if (!chain().findBlock(failed_block, nullptr /* block */, nullptr /* time */, &time_max)) {\n+                throw std::logic_error(\"ScanForWalletTransactions returned invalid block hash\");\n+            }\n+            return time_max + TIMESTAMP_WINDOW + 1;\n         }\n     }\n     return startTime;\n }\n \n /**\n- * Scan the block chain (starting in pindexStart) for transactions\n+ * Scan the block chain (starting in start_block) for transactions\n  * from or to us. If fUpdate is true, found transactions that already\n  * exist in the wallet will be updated.\n  *\n  * Returns null if scan was successful. Otherwise, if a complete rescan was not\n  * possible (due to pruning or corruption), returns pointer to the most recent\n  * block that could not be scanned.\n  *\n- * If pindexStop is not a nullptr, the scan will stop at the block-index\n- * defined by pindexStop\n+ * If stop_block is not null, the scan will stop at the block-index\n+ * defined by stop_block\n  *\n- * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * Caller needs to make sure stop_block (and the optional start_block) are on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233398045",
      "id" : 233398045,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzM5ODA0NQ==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 158,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 174793977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233398045",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233641224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233641224"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233393592\r\n\r\n> Why not use findPruned\r\n\r\nI used `haveBlockOnDisk` here because I was doing a very literal translation and `findPruned` doesn't have the `block->pprev->nTx > 0` condition. If can drop that condition or add it to `findPruned`, though, if it would be an improvement.",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2018-11-14T22:13:46Z",
      "diff_hunk" : "@@ -4122,45 +4135,55 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n-    LockAnnotation lock(::cs_main); // Temporary, for FindForkInGlobalIndex below. Removed in upcoming commit.\n     auto locked_chain = chain.lock();\n     LOCK(walletInstance->cs_wallet);\n \n-    CBlockIndex *pindexRescan = chainActive.Genesis();\n+    int rescan_height = 0;\n     if (!gArgs.GetBoolArg(\"-rescan\", false))\n     {\n         WalletBatch batch(*walletInstance->database);\n         CBlockLocator locator;\n-        if (batch.ReadBestBlock(locator))\n-            pindexRescan = FindForkInGlobalIndex(chainActive, locator);\n+        if (batch.ReadBestBlock(locator)) {\n+            if (const Optional<int> fork_height = locked_chain->findLocatorFork(locator)) {\n+                rescan_height = *fork_height;\n+            }\n+        }\n     }\n \n-    walletInstance->m_last_block_processed = chainActive.Tip();\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    if (tip_height) {\n+        walletInstance->m_last_block_processed = locked_chain->getBlockHash(*tip_height);\n+    } else {\n+        walletInstance->m_last_block_processed.SetNull();\n+    }\n \n-    if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\n+    if (tip_height && *tip_height != rescan_height)\n     {\n         //We can't rescan beyond non-pruned blocks, stop and throw an error\n         //this might happen if a user uses an old wallet within a pruned node\n         // or if he ran -disablewallet for a longer time, then decided to re-enable\n         if (fPruneMode)\n         {\n-            CBlockIndex *block = chainActive.Tip();\n-            while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA) && block->pprev->nTx > 0 && pindexRescan != block)\n-                block = block->pprev;\n+            int block_height = *tip_height;\n+            while (block_height > 0 && locked_chain->haveBlockOnDisk(block_height - 1) && rescan_height != block_height) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233641224",
      "id" : 233641224,
      "in_reply_to_id" : 233393592,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzY0MTIyNA==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 413,
      "path" : "src/wallet/wallet.cpp",
      "position" : 446,
      "pull_request_review_id" : 175104977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233641224",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233644571"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233644571"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233398045\r\n\r\n> the names need to be switched\r\n\r\nGood catch. I'll probably just rewrite this comment if this isn't fixed by another of the rescan PRs first. This comment never made sense to me even when it was first added in https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156810727 / https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163063324.",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2018-11-14T22:24:42Z",
      "diff_hunk" : "@@ -1605,114 +1600,133 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n     // Find starting block. May be null if nCreateTime is greater than the\n     // highest blockchain timestamp, in which case there is nothing that needs\n     // to be scanned.\n-    CBlockIndex* startBlock = nullptr;\n+    uint256 start_block;\n     {\n         auto locked_chain = chain().lock();\n-        startBlock = chainActive.FindEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n-        WalletLogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, startBlock ? chainActive.Height() - startBlock->nHeight + 1 : 0);\n-    }\n-\n-    if (startBlock) {\n-        const CBlockIndex* const failedBlock = ScanForWalletTransactions(startBlock, nullptr, reserver, update);\n-        if (failedBlock) {\n-            return failedBlock->GetBlockTimeMax() + TIMESTAMP_WINDOW + 1;\n+        const Optional<int> start_height = locked_chain->findFirstBlockWithTime(startTime - TIMESTAMP_WINDOW);\n+        const Optional<int> tip_height = locked_chain->getHeight();\n+        WalletLogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, tip_height && start_height ? *tip_height - *start_height + 1 : 0);\n+        if (start_height) start_block = locked_chain->getBlockHash(*start_height);\n+    }\n+\n+    if (!start_block.IsNull()) {\n+        uint256 failed_block = ScanForWalletTransactions(start_block, {} /* stop block */, reserver, update);\n+        if (!failed_block.IsNull()) {\n+            int64_t time_max;\n+            if (!chain().findBlock(failed_block, nullptr /* block */, nullptr /* time */, &time_max)) {\n+                throw std::logic_error(\"ScanForWalletTransactions returned invalid block hash\");\n+            }\n+            return time_max + TIMESTAMP_WINDOW + 1;\n         }\n     }\n     return startTime;\n }\n \n /**\n- * Scan the block chain (starting in pindexStart) for transactions\n+ * Scan the block chain (starting in start_block) for transactions\n  * from or to us. If fUpdate is true, found transactions that already\n  * exist in the wallet will be updated.\n  *\n  * Returns null if scan was successful. Otherwise, if a complete rescan was not\n  * possible (due to pruning or corruption), returns pointer to the most recent\n  * block that could not be scanned.\n  *\n- * If pindexStop is not a nullptr, the scan will stop at the block-index\n- * defined by pindexStop\n+ * If stop_block is not null, the scan will stop at the block-index\n+ * defined by stop_block\n  *\n- * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * Caller needs to make sure stop_block (and the optional start_block) are on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233644571",
      "id" : 233644571,
      "in_reply_to_id" : 233398045,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzY0NDU3MQ==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 158,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 175104977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233644571",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233662540"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233662540"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This sounds wrong, as if it wants to discard genesis block (`height == 0`). Only got it after seeing the return type `Optional<int>`. IMO `.contains(hash)` would be preferable.",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2018-11-14T23:34:20Z",
      "diff_hunk" : "@@ -366,8 +366,7 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     if (merkleBlock.txn.ExtractMatches(vMatch, vIndex) == merkleBlock.header.hashMerkleRoot) {\n \n         auto locked_chain = pwallet->chain().lock();\n-        const CBlockIndex* pindex = LookupBlockIndex(merkleBlock.header.GetHash());\n-        if (!pindex || !chainActive.Contains(pindex)) {\n+        if (!locked_chain->getBlockHeight(merkleBlock.header.GetHash())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233662540",
      "id" : 233662540,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzY2MjU0MA==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 6,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 175131066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233662540",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233671425"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233671425"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Isn't this change conceptually different? Even though the chain is locked, this can be copied and used without the lock and therefore can \"point\" to other block if a reorg occurs. This wouldn't occur with `CBlockIndex`.\r\n\r\nLooks like you could either:\r\n - create `interfaces::BlockIndex`\r\n - replace `CBlockIndex*` with `uint256`.",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2018-11-15T00:16:53Z",
      "diff_hunk" : "@@ -1526,24 +1529,18 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n     auto locked_chain = pwallet->chain().lock();\n     LOCK(pwallet->cs_wallet);\n \n-    const CBlockIndex* pindex = nullptr;    // Block index of the specified block or the common ancestor, if the block provided was in a deactivated chain.\n-    const CBlockIndex* paltindex = nullptr; // Block index of the specified block, even if it's in a deactivated chain.\n+    Optional<int> height;    // Height of the specified block or the common ancestor, if the block provided was in a deactivated chain.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233671425",
      "id" : 233671425,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzY3MTQyNQ==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 18,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 18,
      "pull_request_review_id" : 175131066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233671425",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233941431"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233941431"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Haven't though about this too much, but maybe you could split out the changes in the wallet header that change the interface from taking a block index pointer to taking a block hash to a separate commit? Unless I am mistaken those type changes have the side effect of fixing the \"issue\" I tried to fix in #14712.",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2018-11-15T17:36:34Z",
      "diff_hunk" : "@@ -896,7 +893,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex *pindex, const std::vector<CTransactionRef>& vtxConflicted) override;\n     void BlockDisconnected(const std::shared_ptr<const CBlock>& pblock) override;\n     int64_t RescanFromTime(int64_t startTime, const WalletRescanReserver& reserver, bool update);\n-    CBlockIndex* ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver& reserver, bool fUpdate = false);\n+    uint256 ScanForWalletTransactions(const uint256& start_block, const uint256& stop_block, const WalletRescanReserver &reserver, bool fUpdate);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233941431",
      "id" : 233941431,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzk0MTQzMQ==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 54,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 175472354,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233941431",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-11-30T16:30:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-443259310",
      "id" : 443259310,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MzI1OTMxMA==",
      "updated_at" : "2018-11-30T16:30:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443259310",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r240875084"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240875084"
         }
      },
      "author_association" : "MEMBER",
      "body" : "doc-nit: height is not given (at least not directly)",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2018-12-12T03:54:07Z",
      "diff_hunk" : "@@ -38,6 +105,21 @@ class Chain\n     //! method is temporary and is only used in a few places to avoid changing\n     //! behavior while code is transitioned to use the Chain::Lock interface.\n     virtual std::unique_ptr<Lock> assumeLocked() = 0;\n+\n+    //! Return whether node has the block and optionally return block metadata\n+    //! or contents.\n+    //!\n+    //! If a block pointer is provided to retrieve the block contents, and the\n+    //! block exists but doesn't have data (for example due to pruning), the\n+    //! block will be empty and all fields set to null.\n+    virtual bool findBlock(const uint256& hash,\n+        CBlock* block = nullptr,\n+        int64_t* time = nullptr,\n+        int64_t* max_time = nullptr) = 0;\n+\n+    //! Estimate fraction of total transactions verified if blocks up to\n+    //! given height are verified.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r240875084",
      "id" : 240875084,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDg3NTA4NA==",
      "original_commit_id" : "5cad675a8e8beb0a97f95860a3017fd581bcc1e5",
      "original_position" : 103,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 184004303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240875084",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-12-12T05:35:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-446468141",
      "id" : 446468141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NjQ2ODE0MQ==",
      "updated_at" : "2018-12-12T05:35:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/446468141",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Strong Concept ACK\r\nPlans to review...",
      "created_at" : "2018-12-12T06:02:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-446473002",
      "id" : 446473002,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NjQ3MzAwMg==",
      "updated_at" : "2018-12-12T06:02:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/446473002",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-12-18T02:47:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-448077180",
      "id" : 448077180,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0ODA3NzE4MA==",
      "updated_at" : "2018-12-18T02:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/448077180",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky I went ahead and split this up into a few commits, found it easier to review. Built and ran tests on each commit. https://github.com/Empact/bitcoin/tree/pr/wchain2\r\n\r\n",
      "created_at" : "2019-01-08T08:34:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-452215750",
      "id" : 452215750,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MjIxNTc1MA==",
      "updated_at" : "2019-01-08T08:34:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452215750",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r245911708"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245911708"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I believe this belongs in `validation.h`, as `unordered_map` isn't used directly here.",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-08T08:36:06Z",
      "diff_hunk" : "@@ -4,18 +4,133 @@\n \n #include <interfaces/chain.h>\n \n+#include <chain.h>\n+#include <chainparams.h>\n+#include <primitives/block.h>\n #include <sync.h>\n+#include <uint256.h>\n #include <util/system.h>\n #include <validation.h>\n \n #include <memory>\n+#include <unordered_map>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r245911708",
      "id" : 245911708,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTkxMTcwOA==",
      "original_commit_id" : "939a400f3d632330e470c4b3e71ee822ae7be4c4",
      "original_position" : 13,
      "path" : "src/interfaces/chain.cpp",
      "position" : 13,
      "pull_request_review_id" : 190134483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245911708",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r245913597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245913597"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: none of the callers use more than one of the out args, so splitting this up would make the call sites simpler/clearer.",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-08T08:43:36Z",
      "diff_hunk" : "@@ -35,6 +150,34 @@ class ChainImpl : public Chain\n         return std::move(result);\n     }\n     std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r245913597",
      "id" : 245913597,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTkxMzU5Nw==",
      "original_commit_id" : "939a400f3d632330e470c4b3e71ee822ae7be4c4",
      "original_position" : 138,
      "path" : "src/interfaces/chain.cpp",
      "position" : 138,
      "pull_request_review_id" : 190136835,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245913597",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r245914117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245914117"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`stop_block` and `stopBlock` are confusingly similar.",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-08T08:45:46Z",
      "diff_hunk" : "@@ -3384,47 +3383,46 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n     }\n \n-    CBlockIndex *pindexStart = nullptr;\n-    CBlockIndex *pindexStop = nullptr;\n-    CBlockIndex *pChainTip = nullptr;\n+    int start_height = 0;\n+    Optional<int> stop_height;\n+    Optional<int> tip_height;\n+    uint256 start_block, stop_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        pindexStart = chainActive.Genesis();\n-        pChainTip = chainActive.Tip();\n+        tip_height = locked_chain->getHeight();\n+        stop_height = tip_height;\n \n         if (!request.params[0].isNull()) {\n-            pindexStart = chainActive[request.params[0].get_int()];\n-            if (!pindexStart) {\n+            start_height = request.params[0].get_int();\n+            if (start_height < 0 || !tip_height || start_height > *tip_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n             }\n         }\n \n         if (!request.params[1].isNull()) {\n-            pindexStop = chainActive[request.params[1].get_int()];\n-            if (!pindexStop) {\n+            stop_height = request.params[1].get_int();\n+            if (*stop_height < 0 || !tip_height || *stop_height > *tip_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n             }\n-            else if (pindexStop->nHeight < pindexStart->nHeight) {\n+            else if (*stop_height < start_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater than start_height\");\n             }\n         }\n-    }\n \n-    // We can't rescan beyond non-pruned blocks, stop and throw an error\n-    if (fPruneMode) {\n-        auto locked_chain = pwallet->chain().lock();\n-        CBlockIndex *block = pindexStop ? pindexStop : pChainTip;\n-        while (block && block->nHeight >= pindexStart->nHeight) {\n-            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n-                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n-            }\n-            block = block->pprev;\n+        // We can't rescan beyond non-pruned blocks, stop and throw an error\n+        if (locked_chain->findPruned(start_height, stop_height)) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+        }\n+\n+        if (tip_height) {\n+            start_block = locked_chain->getBlockHash(start_height);\n+            stop_block = locked_chain->getBlockHash(stop_height.value_or(*tip_height));\n         }\n     }\n \n-    const CBlockIndex *failed_block, *stopBlock;\n+    uint256 failed_block, stopBlock;\n     CWallet::ScanResult result =\n-        pwallet->ScanForWalletTransactions(pindexStart, pindexStop, reserver, failed_block, stopBlock, true);\n+        pwallet->ScanForWalletTransactions(start_block, stop_block, reserver, failed_block, stopBlock, true /* prune */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r245914117",
      "id" : 245914117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTkxNDExNw==",
      "original_commit_id" : "939a400f3d632330e470c4b3e71ee822ae7be4c4",
      "original_position" : 146,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 190137513,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245914117",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @Empact! I reset the PR to your branch.\r\n\r\n---\r\n\r\nRebased d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0 -> 5cad675a8e8beb0a97f95860a3017fd581bcc1e5 ([pr/wchain2.1](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.1) -> [pr/wchain2.2](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.2)) due to conflict with #14380\r\nRebased 5cad675a8e8beb0a97f95860a3017fd581bcc1e5 -> 591c2c85e928441bf1f5b1f58c132e72ad4eb185 ([pr/wchain2.2](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.2) -> [pr/wchain2.3](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.3)) due to conflict with #13076\r\nRebased 591c2c85e928441bf1f5b1f58c132e72ad4eb185 -> 939a400f3d632330e470c4b3e71ee822ae7be4c4 ([pr/wchain2.3](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.3) -> [pr/wchain2.4](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.4)) due to conflict with #14957\r\nSplit 939a400f3d632330e470c4b3e71ee822ae7be4c4 -> 7a8727256c99dfbf739448fc72082ec568e14056 ([pr/wchain2.4](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.4) -> [pr/wchain2.5](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.5)) resetting to [Empact:pr/wchain2](https://github.com/bitcoin/bitcoin/compare/master...Empact:pr/wchain2) (no diffs)\r\nRebased 7a8727256c99dfbf739448fc72082ec568e14056 -> ca76bcc917dbc53a1b639acbdbb5d2faf28bbc52 ([pr/wchain2.5](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.5) -> [pr/wchain2.6](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.6)) due to conflict with #15039",
      "created_at" : "2019-01-08T15:48:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-452346988",
      "id" : 452346988,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MjM0Njk4OA==",
      "updated_at" : "2019-01-10T16:59:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452346988",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246350751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246350751"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could be more clear with a comparison with `nullopt`",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-09T11:38:06Z",
      "diff_hunk" : "@@ -366,8 +366,7 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     if (merkleBlock.txn.ExtractMatches(vMatch, vIndex) == merkleBlock.header.hashMerkleRoot) {\n \n         auto locked_chain = pwallet->chain().lock();\n-        const CBlockIndex* pindex = LookupBlockIndex(merkleBlock.header.GetHash());\n-        if (!pindex || !chainActive.Contains(pindex)) {\n+        if (!locked_chain->getBlockHeight(merkleBlock.header.GetHash())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246350751",
      "id" : 246350751,
      "in_reply_to_id" : 233662540,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjM1MDc1MQ==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 6,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 190685645,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246350751",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-01-10T15:20:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-453132707",
      "id" : 453132707,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MzEzMjcwNw==",
      "updated_at" : "2019-01-10T15:20:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453132707",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246857325"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246857325"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/14711#discussion_r240875084\r\n\r\n> doc-nit: height is not given (at least not directly)\r\n\r\nThanks, fixed comment\r\n ",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-10T17:46:05Z",
      "diff_hunk" : "@@ -38,6 +105,21 @@ class Chain\n     //! method is temporary and is only used in a few places to avoid changing\n     //! behavior while code is transitioned to use the Chain::Lock interface.\n     virtual std::unique_ptr<Lock> assumeLocked() = 0;\n+\n+    //! Return whether node has the block and optionally return block metadata\n+    //! or contents.\n+    //!\n+    //! If a block pointer is provided to retrieve the block contents, and the\n+    //! block exists but doesn't have data (for example due to pruning), the\n+    //! block will be empty and all fields set to null.\n+    virtual bool findBlock(const uint256& hash,\n+        CBlock* block = nullptr,\n+        int64_t* time = nullptr,\n+        int64_t* max_time = nullptr) = 0;\n+\n+    //! Estimate fraction of total transactions verified if blocks up to\n+    //! given height are verified.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246857325",
      "id" : 246857325,
      "in_reply_to_id" : 240875084,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Njg1NzMyNQ==",
      "original_commit_id" : "5cad675a8e8beb0a97f95860a3017fd581bcc1e5",
      "original_position" : 103,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 191332905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246857325",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246857394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246857394"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233662540\r\n\r\n> Could be more clear with a comparison with nullopt\r\n\r\nTook suggestion",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-10T17:46:19Z",
      "diff_hunk" : "@@ -366,8 +366,7 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     if (merkleBlock.txn.ExtractMatches(vMatch, vIndex) == merkleBlock.header.hashMerkleRoot) {\n \n         auto locked_chain = pwallet->chain().lock();\n-        const CBlockIndex* pindex = LookupBlockIndex(merkleBlock.header.GetHash());\n-        if (!pindex || !chainActive.Contains(pindex)) {\n+        if (!locked_chain->getBlockHeight(merkleBlock.header.GetHash())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246857394",
      "id" : 246857394,
      "in_reply_to_id" : 233662540,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Njg1NzM5NA==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 6,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 191332905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246857394",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246857455"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246857455"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/14711#discussion_r233671425\r\n\r\n> Isn't this change conceptually different? \r\n\r\nI think so, a height is conceptually different from a block pointer.\r\n\r\n> Looks like you could either:\r\n\r\nWhen the chain is locked, a height uniquely identifies a block, so many `locked_chain` methods take height arguments. I think it would good to eliminate these calls entirely (https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-380101269) and not very useful to tweak data types and just hide the fact that the chain is locked.\r\n\r\nBut either way, I want the API to change in the future and become nicer, more minimal, and more useful over time. Right now the API just reflects how the wallet currently works, to keep changes to wallet code in this PR as minimal as possible.",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-10T17:46:30Z",
      "diff_hunk" : "@@ -1526,24 +1529,18 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n     auto locked_chain = pwallet->chain().lock();\n     LOCK(pwallet->cs_wallet);\n \n-    const CBlockIndex* pindex = nullptr;    // Block index of the specified block or the common ancestor, if the block provided was in a deactivated chain.\n-    const CBlockIndex* paltindex = nullptr; // Block index of the specified block, even if it's in a deactivated chain.\n+    Optional<int> height;    // Height of the specified block or the common ancestor, if the block provided was in a deactivated chain.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246857455",
      "id" : 246857455,
      "in_reply_to_id" : 233671425,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Njg1NzQ1NQ==",
      "original_commit_id" : "d568bdb15173dd8dd7bf95cb0bd9c9b55dbb97f0",
      "original_position" : 18,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 18,
      "pull_request_review_id" : 191332905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246857455",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246868198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246868198"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/14711#discussion_r245914117\r\n\r\n> stop_block and stopBlock are confusingly similar.\r\n\r\nAdded more renames",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-10T18:19:12Z",
      "diff_hunk" : "@@ -3384,47 +3383,46 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n     }\n \n-    CBlockIndex *pindexStart = nullptr;\n-    CBlockIndex *pindexStop = nullptr;\n-    CBlockIndex *pChainTip = nullptr;\n+    int start_height = 0;\n+    Optional<int> stop_height;\n+    Optional<int> tip_height;\n+    uint256 start_block, stop_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        pindexStart = chainActive.Genesis();\n-        pChainTip = chainActive.Tip();\n+        tip_height = locked_chain->getHeight();\n+        stop_height = tip_height;\n \n         if (!request.params[0].isNull()) {\n-            pindexStart = chainActive[request.params[0].get_int()];\n-            if (!pindexStart) {\n+            start_height = request.params[0].get_int();\n+            if (start_height < 0 || !tip_height || start_height > *tip_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n             }\n         }\n \n         if (!request.params[1].isNull()) {\n-            pindexStop = chainActive[request.params[1].get_int()];\n-            if (!pindexStop) {\n+            stop_height = request.params[1].get_int();\n+            if (*stop_height < 0 || !tip_height || *stop_height > *tip_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n             }\n-            else if (pindexStop->nHeight < pindexStart->nHeight) {\n+            else if (*stop_height < start_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater than start_height\");\n             }\n         }\n-    }\n \n-    // We can't rescan beyond non-pruned blocks, stop and throw an error\n-    if (fPruneMode) {\n-        auto locked_chain = pwallet->chain().lock();\n-        CBlockIndex *block = pindexStop ? pindexStop : pChainTip;\n-        while (block && block->nHeight >= pindexStart->nHeight) {\n-            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n-                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n-            }\n-            block = block->pprev;\n+        // We can't rescan beyond non-pruned blocks, stop and throw an error\n+        if (locked_chain->findPruned(start_height, stop_height)) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+        }\n+\n+        if (tip_height) {\n+            start_block = locked_chain->getBlockHash(start_height);\n+            stop_block = locked_chain->getBlockHash(stop_height.value_or(*tip_height));\n         }\n     }\n \n-    const CBlockIndex *failed_block, *stopBlock;\n+    uint256 failed_block, stopBlock;\n     CWallet::ScanResult result =\n-        pwallet->ScanForWalletTransactions(pindexStart, pindexStop, reserver, failed_block, stopBlock, true);\n+        pwallet->ScanForWalletTransactions(start_block, stop_block, reserver, failed_block, stopBlock, true /* prune */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246868198",
      "id" : 246868198,
      "in_reply_to_id" : 245914117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Njg2ODE5OA==",
      "original_commit_id" : "939a400f3d632330e470c4b3e71ee822ae7be4c4",
      "original_position" : 146,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 191332905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246868198",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246868236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246868236"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/14711#discussion_r245911708\r\n\r\n> nit: I believe this belongs in validation.h, as unordered_map isn't used directly here.\r\n\r\nThis was added by IWYU because unordered map methods are called here. In theory this allows `validation.h` to switch to forward declarations and drop its `unordered_map` include without this file having to change. I don't think [IWYU rationale](https://github.com/include-what-you-use/include-what-you-use/blob/master/docs/WhyIWYU.md) is completely airtight (particularly in this case where `validation.h` might change `mapBlockIndex` into a different type of map with the same methods), but I like the IWYU tool, and don't think its worth spending a lot of time to analyze its decisions absent a compelling reason.\r\n",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-10T18:19:18Z",
      "diff_hunk" : "@@ -4,18 +4,133 @@\n \n #include <interfaces/chain.h>\n \n+#include <chain.h>\n+#include <chainparams.h>\n+#include <primitives/block.h>\n #include <sync.h>\n+#include <uint256.h>\n #include <util/system.h>\n #include <validation.h>\n \n #include <memory>\n+#include <unordered_map>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246868236",
      "id" : 246868236,
      "in_reply_to_id" : 245911708,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Njg2ODIzNg==",
      "original_commit_id" : "939a400f3d632330e470c4b3e71ee822ae7be4c4",
      "original_position" : 13,
      "path" : "src/interfaces/chain.cpp",
      "position" : 13,
      "pull_request_review_id" : 191332905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246868236",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246868266"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246868266"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/14711#discussion_r245913597\r\n\r\n> nit: none of the callers use more than one of the out args, so splitting this up would make the call sites simpler/clearer.\r\n\r\nThere are many ways to design this API, and I just opted for one here that I thought would keep [`chain.h`](https://github.com/ryanofsky/bitcoin/blob/108a56aa073921250a4742524d7493e9233e0f5a/src/interfaces/chain.h#L126-L135) a little shorter and more organized, at the expense of being more verbose at call sites. If you have a specific alternative in mind and want to convince me or another reviewer that it's better, I'd be happy to adopt it here, or review a followup PR.",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-10T18:19:23Z",
      "diff_hunk" : "@@ -35,6 +150,34 @@ class ChainImpl : public Chain\n         return std::move(result);\n     }\n     std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r246868266",
      "id" : 246868266,
      "in_reply_to_id" : 245913597,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Njg2ODI2Ng==",
      "original_commit_id" : "939a400f3d632330e470c4b3e71ee822ae7be4c4",
      "original_position" : 138,
      "path" : "src/interfaces/chain.cpp",
      "position" : 138,
      "pull_request_review_id" : 191332905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T18:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246868266",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-01-15T17:25:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#issuecomment-454477585",
      "id" : 454477585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDQ3NzU4NQ==",
      "updated_at" : "2019-01-15T17:25:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454477585",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248028705"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248028705"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 13bc578ca9 Add height, depth, and hash methods to the Chain interface\r\n\r\n\r\nIt seems confusing to check for nullptr if when the block hash was found in the map, since the value should never be a nullptr? Anyway, a neat way to avoid that is by avoiding `::mapBlockIndex` and calling `LookupBlockIndex`?",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-15T19:19:48Z",
      "diff_hunk" : "@@ -4,18 +4,133 @@\n \n #include <interfaces/chain.h>\n \n+#include <chain.h>\n+#include <chainparams.h>\n+#include <primitives/block.h>\n #include <sync.h>\n+#include <uint256.h>\n #include <util/system.h>\n #include <validation.h>\n \n #include <memory>\n+#include <unordered_map>\n #include <utility>\n \n namespace interfaces {\n namespace {\n \n class LockImpl : public Chain::Lock\n {\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second && ::chainActive.Contains(it->second)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248028705",
      "id" : 248028705,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAyODcwNQ==",
      "original_commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "original_position" : 32,
      "path" : "src/interfaces/chain.cpp",
      "position" : 32,
      "pull_request_review_id" : 192819612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T20:59:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248028705",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248033837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248033837"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit in commit 13bc578ca9 Add height, depth, and hash methods to the Chain interface\r\n\r\n\r\n`height` is added and not used in this commit\r\n\r\n(Hunk should probably be moved to commit 22abf4a61a Add findFork and findBlock to the Chain interface)",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-15T19:34:26Z",
      "diff_hunk" : "@@ -1573,24 +1576,18 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n     auto locked_chain = pwallet->chain().lock();\n     LOCK(pwallet->cs_wallet);\n \n-    const CBlockIndex* pindex = nullptr;    // Block index of the specified block or the common ancestor, if the block provided was in a deactivated chain.\n-    const CBlockIndex* paltindex = nullptr; // Block index of the specified block, even if it's in a deactivated chain.\n+    Optional<int> height;    // Height of the specified block or the common ancestor, if the block provided was in a deactivated chain.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248033837",
      "id" : 248033837,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAzMzgzNw==",
      "original_commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "original_position" : 18,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 18,
      "pull_request_review_id" : 192819612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T20:59:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248033837",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248040457"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248040457"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 22abf4a61a Add findFork and findBlock to the Chain interface\r\n\r\nDoesn't check for nullptr here? Seems inconsistent with `getBlockHeight`. Anyway, a neat way to avoid that is by avoiding ::mapBlockIndex and calling LookupBlockIndex?",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-15T19:54:31Z",
      "diff_hunk" : "@@ -4,18 +4,133 @@\n \n #include <interfaces/chain.h>\n \n+#include <chain.h>\n+#include <chainparams.h>\n+#include <primitives/block.h>\n #include <sync.h>\n+#include <uint256.h>\n #include <util/system.h>\n #include <validation.h>\n \n #include <memory>\n+#include <unordered_map>\n #include <utility>\n \n namespace interfaces {\n namespace {\n \n class LockImpl : public Chain::Lock\n {\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second && ::chainActive.Contains(it->second)) {\n+            return it->second->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        assert(block != nullptr);\n+        return block->GetBlockHash();\n+    }\n+    int64_t getBlockTime(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        assert(block != nullptr);\n+        return block->GetBlockTime();\n+    }\n+    int64_t getBlockMedianTimePast(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        assert(block != nullptr);\n+        return block->GetMedianTimePast();\n+    }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && ((block->nStatus & BLOCK_HAVE_DATA) != 0) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if ((block->nStatus & BLOCK_HAVE_DATA) == 0) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248040457",
      "id" : 248040457,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODA0MDQ1Nw==",
      "original_commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "original_position" : 101,
      "path" : "src/interfaces/chain.cpp",
      "position" : 101,
      "pull_request_review_id" : 192819612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T20:59:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248040457",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248044123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248044123"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 22abf4a61a Add findFork and findBlock to the Chain interface\r\n\r\n\r\nSame here (use `LookupBlockIndex`)",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-15T20:06:09Z",
      "diff_hunk" : "@@ -35,6 +150,34 @@ class ChainImpl : public Chain\n         return std::move(result);\n     }\n     std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248044123",
      "id" : 248044123,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODA0NDEyMw==",
      "original_commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "original_position" : 147,
      "path" : "src/interfaces/chain.cpp",
      "position" : 147,
      "pull_request_review_id" : 192819612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T20:59:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248044123",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248051502"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248051502"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 22abf4a61a Add findFork and findBlock to the Chain interface\r\n\r\nAssuming that height can not be set makes no sense, since you moved the FindFork call to before the `!height` check. I'd prefer to write `*height` here.",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-15T20:31:05Z",
      "diff_hunk" : "@@ -1622,9 +1620,9 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n     // when a reorg'd block is requested, we also list any relevant transactions\n     // in the blocks of the chain that was detached\n     UniValue removed(UniValue::VARR);\n-    while (include_removed && paltindex && paltindex != pindex) {\n+    while (include_removed && altheight && *altheight > height.value_or(-1)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248051502",
      "id" : 248051502,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODA1MTUwMg==",
      "original_commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "original_position" : 58,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 58,
      "pull_request_review_id" : 192819612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T20:59:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248051502",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248051624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248051624"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 22abf4a Add findFork and findBlock to the Chain interface\r\n\r\nSame (I'd prefer to not check for height again, since that has already been done above as you moved the FindFork to before the height check.)",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-15T20:31:25Z",
      "diff_hunk" : "@@ -1607,7 +1604,8 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n \n     bool include_removed = (request.params[3].isNull() || request.params[3].get_bool());\n \n-    int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    int depth = tip_height && height ? (1 + *tip_height - *height) : -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248051624",
      "id" : 248051624,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODA1MTYyNA==",
      "original_commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "original_position" : 49,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 49,
      "pull_request_review_id" : 192819612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T20:59:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248051624",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248053404"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248053404"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 65861dff7c Convert CWallet::ScanForWalletTransactions and SyncTransaction to the new Chain apis\r\n\r\n\r\n`LookupBlockIndex` instead of access to the global mapBlockIndex?",
      "commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "created_at" : "2019-01-15T20:37:55Z",
      "diff_hunk" : "@@ -35,6 +150,34 @@ class ChainImpl : public Chain\n         return std::move(result);\n     }\n     std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14711#discussion_r248053404",
      "id" : 248053404,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODA1MzQwNA==",
      "original_commit_id" : "5bc30a5083507fbc10691c7c26683afe7e768c88",
      "original_position" : 164,
      "path" : "src/interfaces/chain.cpp",
      "position" : 164,
      "pull_request_review_id" : 192819612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
      "updated_at" : "2019-01-15T20:59:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248053404",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
