[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17319](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17319.html) (Tests: remove bignum module by jnewbery)\n* [#16902](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16902.html) (O(1) OP_IF/NOTIF/ELSE/ENDIF script implementation by sipa)\n* [#16653](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16653.html) (script: add simple signature support (checker/creator) by kallewoof)\n* [#16440](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16440.html) (BIP-322: Generic signed message format by kallewoof)\n* [#16411](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16411.html) (BIP-325: Signet support by kallewoof)\n* [#13533](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13533.html) ([tests] Reduced number of validations in tx_validationcache_tests by lucash-dev)\n* [#13062](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13062.html) (Make script interpreter independent from storage type CScript by sipa)\n* [#10729](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10729.html) (Wrap EvalScript in a ScriptExecution class by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-01-21T23:47:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#issuecomment-576940388",
      "id" : 576940388,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17977",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3Njk0MDM4OA==",
      "updated_at" : "2020-01-21T23:47:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/576940388",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369389626"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369389626"
         }
      },
      "author_association" : "NONE",
      "body" : "Slightly confusing name... `HashAgainSHA256`?\r\n\r\nI understand why it exists, and I can't think of a much better name... but having something in the name to denote we're hashing with SHA256 might make it a tiny bit more readable.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T06:35:06Z",
      "diff_hunk" : "@@ -1189,7 +1358,14 @@ uint256 GetPrevoutHash(const T& txTo)\n     for (const auto& txin : txTo.vin) {\n         ss << txin.prevout;\n     }\n-    return ss.GetHash();\n+    return ss.GetSHA256();\n+}\n+\n+uint256 HashAgain(const uint256& hash)\n+{\n+    uint256 result;\n+    CSHA256().Write(hash.begin(), 32).Finalize(result.begin());\n+    return result;\n }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369389626",
      "id" : 369389626,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM4OTYyNg==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 314,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 346369769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369389626",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/11246316?v=4",
         "events_url" : "https://api.github.com/users/junderw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/junderw/followers",
         "following_url" : "https://api.github.com/users/junderw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/junderw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/junderw",
         "id" : 11246316,
         "login" : "junderw",
         "node_id" : "MDQ6VXNlcjExMjQ2MzE2",
         "organizations_url" : "https://api.github.com/users/junderw/orgs",
         "received_events_url" : "https://api.github.com/users/junderw/received_events",
         "repos_url" : "https://api.github.com/users/junderw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/junderw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/junderw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/junderw"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369513725"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369513725"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`s/TESTDUMMY/TAPROOT/` here and in testnet (regtest is fine). Also think you want to set timeout to something less expired.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T11:45:32Z",
      "diff_hunk" : "@@ -83,6 +83,11 @@ class CMainParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n \n+        // Deployment of Taproot\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369513725",
      "id" : 369513725,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUxMzcyNQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 6,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 346527063,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369513725",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369593203"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369593203"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n    DEPLOYMENT_TAPROOT, // Deployment of BIP-340/BIP-341/BIP-342\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T14:31:49Z",
      "diff_hunk" : "@@ -14,6 +14,7 @@ namespace Consensus {\n enum DeploymentPos\n {\n     DEPLOYMENT_TESTDUMMY,\n+    DEPLOYMENT_TAPROOT, // Deployment of bip-taproot/bip-tapscript/bip-schnorr",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369593203",
      "id" : 369593203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5MzIwMw==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 4,
      "path" : "src/consensus/params.h",
      "position" : null,
      "pull_request_review_id" : 346630927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369593203",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369593612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369593612"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n/** Return a CHashWriter primed for computing BIP-340 compatible tagged hashes.\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T14:32:25Z",
      "diff_hunk" : "@@ -204,4 +218,12 @@ unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char\n \n void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char header, const unsigned char data[32], unsigned char output[64]);\n \n+/** Return a CHashWriter primed for computing bip-schnorr compatible tagged hashes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369593612",
      "id" : 369593612,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5MzYxMg==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 60,
      "path" : "src/hash.h",
      "position" : null,
      "pull_request_review_id" : 346630927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369593612",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369597072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369597072"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n * BIP-340\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T14:38:17Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#ifndef SECP256K1_SCHNORRSIG_H\n+#define SECP256K1_SCHNORRSIG_H\n+\n+#include \"secp256k1.h\"\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/** This module implements a variant of Schnorr signatures compliant with\n+ * BIP-schnorr",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369597072",
      "id" : 369597072,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5NzA3Mg==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 11,
      "path" : "src/secp256k1/include/secp256k1_schnorrsig.h",
      "position" : 11,
      "pull_request_review_id" : 346630927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369597072",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369601055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369601055"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n        \"\"\"Construct a BIP-340 compatible Schnorr signature with this key.\"\"\"\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T14:45:12Z",
      "diff_hunk" : "@@ -384,3 +453,33 @@ def sign_ecdsa(self, msg, low_s=True):\n         rb = r.to_bytes((r.bit_length() + 8) // 8, 'big')\n         sb = s.to_bytes((s.bit_length() + 8) // 8, 'big')\n         return b'\\x30' + bytes([4 + len(rb) + len(sb), 2, len(rb)]) + rb + bytes([2, len(sb)]) + sb\n+\n+    def sign_schnorr(self, msg):\n+        \"\"\"Construct a bip-schnorr compatible signature with this key.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369601055",
      "id" : 369601055,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwMTA1NQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 126,
      "path" : "test/functional/test_framework/key.py",
      "position" : null,
      "pull_request_review_id" : 346630927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369601055",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369601369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369601369"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n        kp = int.from_bytes(TaggedHash(\"BIP340Derive\", x.to_bytes(32, 'big') + msg), 'big') % SECP256K1_ORDER\r\n```\r\n\r\nNot sure if this breaks anything... :confused: ",
      "commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "created_at" : "2020-01-22T14:45:44Z",
      "diff_hunk" : "@@ -384,3 +453,33 @@ def sign_ecdsa(self, msg, low_s=True):\n         rb = r.to_bytes((r.bit_length() + 8) // 8, 'big')\n         sb = s.to_bytes((s.bit_length() + 8) // 8, 'big')\n         return b'\\x30' + bytes([4 + len(rb) + len(sb), 2, len(rb)]) + rb + bytes([2, len(sb)]) + sb\n+\n+    def sign_schnorr(self, msg):\n+        \"\"\"Construct a bip-schnorr compatible signature with this key.\"\"\"\n+        assert(self.valid)\n+        assert(self.compressed)\n+        assert(len(msg) == 32)\n+        x = self.secret\n+        pk = self.get_pubkey()\n+        if not pk.is_positive:\n+            x = SECP256K1_ORDER - x\n+        kp = int.from_bytes(TaggedHash(\"BIPSchnorrDerive\", x.to_bytes(32, 'big') + msg), 'big') % SECP256K1_ORDER",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369601369",
      "id" : 369601369,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwMTM2OQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 134,
      "path" : "test/functional/test_framework/key.py",
      "position" : 134,
      "pull_request_review_id" : 346630927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-22T14:48:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369601369",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369601564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369601564"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n        e = int.from_bytes(TaggedHash(\"BIP340\", R[0].to_bytes(32, 'big') + pk.get_xonly_bytes() + msg), 'big') % SECP256K1_ORDER\r\n```",
      "commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "created_at" : "2020-01-22T14:46:02Z",
      "diff_hunk" : "@@ -384,3 +453,33 @@ def sign_ecdsa(self, msg, low_s=True):\n         rb = r.to_bytes((r.bit_length() + 8) // 8, 'big')\n         sb = s.to_bytes((s.bit_length() + 8) // 8, 'big')\n         return b'\\x30' + bytes([4 + len(rb) + len(sb), 2, len(rb)]) + rb + bytes([2, len(sb)]) + sb\n+\n+    def sign_schnorr(self, msg):\n+        \"\"\"Construct a bip-schnorr compatible signature with this key.\"\"\"\n+        assert(self.valid)\n+        assert(self.compressed)\n+        assert(len(msg) == 32)\n+        x = self.secret\n+        pk = self.get_pubkey()\n+        if not pk.is_positive:\n+            x = SECP256K1_ORDER - x\n+        kp = int.from_bytes(TaggedHash(\"BIPSchnorrDerive\", x.to_bytes(32, 'big') + msg), 'big') % SECP256K1_ORDER\n+        assert(kp != 0)\n+        R = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, kp)]))\n+        k = kp if jacobi_symbol(R[1], SECP256K1_FIELD_SIZE) == 1 else SECP256K1_ORDER - kp\n+        e = int.from_bytes(TaggedHash(\"BIPSchnorr\", R[0].to_bytes(32, 'big') + pk.get_xonly_bytes() + msg), 'big') % SECP256K1_ORDER",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369601564",
      "id" : 369601564,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwMTU2NA==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 138,
      "path" : "test/functional/test_framework/key.py",
      "position" : 138,
      "pull_request_review_id" : 346630927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-22T14:48:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369601564",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369609545"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369609545"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n * (https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki).\r\n```\r\n\r\nThis link is broken until the [BIP PR](https://github.com/bitcoin/bips/pull/876/) is merged.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T14:58:35Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#ifndef SECP256K1_SCHNORRSIG_H\n+#define SECP256K1_SCHNORRSIG_H\n+\n+#include \"secp256k1.h\"\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/** This module implements a variant of Schnorr signatures compliant with\n+ * BIP-schnorr\n+ * (https://github.com/sipa/bips/blob/bip-schnorr/bip-schnorr.mediawiki).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369609545",
      "id" : 369609545,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwOTU0NQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 12,
      "path" : "src/secp256k1/include/secp256k1_schnorrsig.h",
      "position" : 12,
      "pull_request_review_id" : 346652110,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369609545",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369609932"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369609932"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bip340 is used\r\n```\r\n\r\nNot sure if this breaks anything? :confused: ",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T14:59:12Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#ifndef SECP256K1_SCHNORRSIG_H\n+#define SECP256K1_SCHNORRSIG_H\n+\n+#include \"secp256k1.h\"\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/** This module implements a variant of Schnorr signatures compliant with\n+ * BIP-schnorr\n+ * (https://github.com/sipa/bips/blob/bip-schnorr/bip-schnorr.mediawiki).\n+ */\n+\n+/** Opaque data structure that holds a parsed Schnorr signature.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is\n+ *  however guaranteed to be 64 bytes in size, and can be safely copied/moved.\n+ *  If you need to convert to a format suitable for storage, transmission, or\n+ *  comparison, use the `secp256k1_schnorrsig_serialize` and\n+ *  `secp256k1_schnorrsig_parse` functions.\n+ */\n+typedef struct {\n+    unsigned char data[64];\n+} secp256k1_schnorrsig;\n+\n+/** Serialize a Schnorr signature.\n+ *\n+ *  Returns: 1\n+ *  Args:    ctx: a secp256k1 context object\n+ *  Out:   out64: pointer to a 64-byte array to store the serialized signature\n+ *  In:      sig: pointer to the signature\n+ *\n+ *  See secp256k1_schnorrsig_parse for details about the encoding.\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_serialize(\n+    const secp256k1_context* ctx,\n+    unsigned char *out64,\n+    const secp256k1_schnorrsig* sig\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Parse a Schnorr signature.\n+ *\n+ *  Returns: 1 when the signature could be parsed, 0 otherwise.\n+ *  Args:    ctx: a secp256k1 context object\n+ *  Out:     sig: pointer to a signature object\n+ *  In:     in64: pointer to the 64-byte signature to be parsed\n+ *\n+ * The signature is serialized in the form R||s, where R is a 32-byte public\n+ * key (X coordinate only; the Y coordinate is considered to be the unique\n+ * Y coordinate satisfying the curve equation that is square)\n+ * and s is a 32-byte big-endian scalar.\n+ *\n+ * After the call, sig will always be initialized. If parsing failed or the\n+ * encoded numbers are out of range, signature validation with it is\n+ * guaranteed to fail for every message and public key.\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_parse(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig* sig,\n+    const unsigned char *in64\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Create a Schnorr signature.\n+ *\n+ * Returns 1 on success, 0 on failure.\n+ *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n+ *  Out:     sig: pointer to the returned signature (cannot be NULL)\n+ *  In:    msg32: the 32-byte message being signed (cannot be NULL)\n+ *        seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bipschnorr is used",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369609932",
      "id" : 369609932,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwOTkzMg==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 72,
      "path" : "src/secp256k1/include/secp256k1_schnorrsig.h",
      "position" : 72,
      "pull_request_review_id" : 346652110,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369609932",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369610163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369610163"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n * SHA256 to SHA256(\"BIP-340\")||SHA256(\"BIP-340\"). */\r\n```",
      "commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "created_at" : "2020-01-22T14:59:34Z",
      "diff_hunk" : "@@ -0,0 +1,358 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+/* Initializes SHA256 with fixed midstate. This midstate was computed by applying\n+ * SHA256 to SHA256(\"BIPSchnorr\")||SHA256(\"BIPSchnorr\"). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369610163",
      "id" : 369610163,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMDE2Mw==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 33,
      "path" : "src/secp256k1/src/modules/schnorrsig/main_impl.h",
      "position" : 33,
      "pull_request_review_id" : 346652110,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-22T15:01:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369610163",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369610577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369610577"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n        noncefp = secp256k1_nonce_function_bip-340;\r\n```\r\n\r\nNot sure if this breaks anything :confused: ",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T15:00:13Z",
      "diff_hunk" : "@@ -0,0 +1,358 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+/* Initializes SHA256 with fixed midstate. This midstate was computed by applying\n+ * SHA256 to SHA256(\"BIPSchnorr\")||SHA256(\"BIPSchnorr\"). */\n+static void secp256k1_schnorrsig_sha256_tagged(secp256k1_sha256 *sha) {\n+    secp256k1_sha256_initialize(sha);\n+    sha->s[0] = 0x048d9a59ul;\n+    sha->s[1] = 0xfe39fb05ul;\n+    sha->s[2] = 0x28479648ul;\n+    sha->s[3] = 0xe4a660f9ul;\n+    sha->s[4] = 0x814b9e66ul;\n+    sha->s[5] = 0x0469e801ul;\n+    sha->s[6] = 0x83909280ul;\n+    sha->s[7] = 0xb329e454ul;\n+    sha->bytes = 64;\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[32];\n+    unsigned char seckey_tmp[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369610577",
      "id" : 369610577,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMDU3Nw==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 67,
      "path" : "src/secp256k1/src/modules/schnorrsig/main_impl.h",
      "position" : 67,
      "pull_request_review_id" : 346652110,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369610577",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369610885"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369610885"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n    if (!noncefp(buf, msg32, seckey_tmp, (unsigned char *) \"BIP340Derive\", (void*)ndata, 0)) {\r\n```\r\nNot sure if this breaks anything :confused:",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T15:00:44Z",
      "diff_hunk" : "@@ -0,0 +1,358 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+/* Initializes SHA256 with fixed midstate. This midstate was computed by applying\n+ * SHA256 to SHA256(\"BIPSchnorr\")||SHA256(\"BIPSchnorr\"). */\n+static void secp256k1_schnorrsig_sha256_tagged(secp256k1_sha256 *sha) {\n+    secp256k1_sha256_initialize(sha);\n+    sha->s[0] = 0x048d9a59ul;\n+    sha->s[1] = 0xfe39fb05ul;\n+    sha->s[2] = 0x28479648ul;\n+    sha->s[3] = 0xe4a660f9ul;\n+    sha->s[4] = 0x814b9e66ul;\n+    sha->s[5] = 0x0469e801ul;\n+    sha->s[6] = 0x83909280ul;\n+    sha->s[7] = 0xb329e454ul;\n+    sha->bytes = 64;\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[32];\n+    unsigned char seckey_tmp[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;\n+    }\n+    secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (overflow || secp256k1_scalar_is_zero(&x)) {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pkj, &x);\n+    secp256k1_ge_set_gej(&pk, &pkj);\n+\n+    /* Because we are signing for a x-only pubkey, the secret key is negated\n+     * before signing if the point corresponding to the secret key does not\n+     * have a square Y. */\n+    if (!secp256k1_fe_is_quad_var(&pk.y)) {\n+        secp256k1_scalar_negate(&x, &x);\n+    }\n+\n+    secp256k1_scalar_get_b32(seckey_tmp, &x);\n+    if (!noncefp(buf, msg32, seckey_tmp, (unsigned char *) \"BIPSchnorrDerive\", (void*)ndata, 0)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369610885",
      "id" : 369610885,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMDg4NQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 87,
      "path" : "src/secp256k1/src/modules/schnorrsig/main_impl.h",
      "position" : 87,
      "pull_request_review_id" : 346652110,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369610885",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369611161"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369611161"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n        e = int.from_bytes(TaggedHash(\"BIP-340\", sig[0:32] + self.get_bytes()[1:33] + msg), 'big') % SECP256K1_ORDER\r\n```",
      "commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "created_at" : "2020-01-22T15:01:07Z",
      "diff_hunk" : "@@ -322,6 +353,40 @@ def verify_ecdsa(self, sig, msg, low_s=True):\n             return False\n         return True\n \n+    def verify_schnorr(self, sig, msg):\n+        assert(len(msg) == 32)\n+        assert(len(sig) == 64)\n+        assert(self.valid)\n+        assert(self.compressed)\n+        r = int.from_bytes(sig[0:32], 'big')\n+        if r >= SECP256K1_FIELD_SIZE:\n+            return False\n+        s = int.from_bytes(sig[32:64], 'big')\n+        if s >= SECP256K1_ORDER:\n+            return False\n+        e = int.from_bytes(TaggedHash(\"BIPSchnorr\", sig[0:32] + self.get_bytes()[1:33] + msg), 'big') % SECP256K1_ORDER",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369611161",
      "id" : 369611161,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMTE2MQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 83,
      "path" : "test/functional/test_framework/key.py",
      "position" : 83,
      "pull_request_review_id" : 346652110,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-22T15:02:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369611161",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369630927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369630927"
         }
      },
      "author_association" : "NONE",
      "body" : "Is there a name for this condition that can be explained with a function name or at least a comment?",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T15:32:38Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369630927",
      "id" : 369630927,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYzMDkyNw==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 10,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346679982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369630927",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1731?v=4",
         "events_url" : "https://api.github.com/users/skwp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skwp/followers",
         "following_url" : "https://api.github.com/users/skwp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skwp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skwp",
         "id" : 1731,
         "login" : "skwp",
         "node_id" : "MDQ6VXNlcjE3MzE=",
         "organizations_url" : "https://api.github.com/users/skwp/orgs",
         "received_events_url" : "https://api.github.com/users/skwp/received_events",
         "repos_url" : "https://api.github.com/users/skwp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skwp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skwp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skwp"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369632680"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369632680"
         }
      },
      "author_association" : "NONE",
      "body" : "why nested conditional here, but not nested above (line 240)?  both branches have \"stack_size >= 2\" as well. without understanding what any of this means, would it be clearer to write like this, removing the duplication and nesting?\r\n\r\n```\r\n// precondition for taproot (?)\r\nif (stack_size < 2) { return }\r\n\r\nif (!stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {\r\n// whatever this is\r\n\r\n} else if ((stack[stack_size - 1][0] & 0xfe) == 0xc0)) {\r\n// script path spend\r\n\r\n}\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T15:35:39Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {\n+                stack_size--; // Ignore annex\n+            }\n+            if (stack_size >= 2) {\n+                // Script path spend\n+                if ((stack[stack_size - 1][0] & 0xfe) == 0xc0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369632680",
      "id" : 369632680,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYzMjY4MA==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 15,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346682415,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369632680",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1731?v=4",
         "events_url" : "https://api.github.com/users/skwp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skwp/followers",
         "following_url" : "https://api.github.com/users/skwp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skwp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skwp",
         "id" : 1731,
         "login" : "skwp",
         "node_id" : "MDQ6VXNlcjE3MzE=",
         "organizations_url" : "https://api.github.com/users/skwp/orgs",
         "received_events_url" : "https://api.github.com/users/skwp/received_events",
         "repos_url" : "https://api.github.com/users/skwp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skwp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skwp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skwp"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369656551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369656551"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't see the problem, personally.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T16:13:54Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369656551",
      "id" : 369656551,
      "in_reply_to_id" : 369630927,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1NjU1MQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 10,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346713685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369656551",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MaxHillebrand A few overall comments:\r\n* I don't think all references to (bip-)taproot/tapscript/schnorr should be changed to the BIP numbers; in some cases maybe we should just drop the \"bip-\" prefix (e.g. I think talking about a \"taproot spend\" is more clear than \"bip341 spend\").\r\n* All changes in the src/secp256k1 directory should go to https://github.com/bitcoin-core/secp256k1/pull/558 instead (the src/secp256k1 is a git subtree imported from there).\r\n* The \"BIPSchnorr\" and \"BIPSchnorrDerive\" tagged hash tags are part of the spec, which I don't think should be changed.",
      "created_at" : "2020-01-22T17:25:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#issuecomment-577295396",
      "id" : 577295396,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17977",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NzI5NTM5Ng==",
      "updated_at" : "2020-01-22T17:25:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577295396",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369698012"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369698012"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@skwp I'll add some comments to clarify, but what you're suggesting would be incorrect.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T17:26:15Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {\n+                stack_size--; // Ignore annex\n+            }\n+            if (stack_size >= 2) {\n+                // Script path spend\n+                if ((stack[stack_size - 1][0] & 0xfe) == 0xc0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369698012",
      "id" : 369698012,
      "in_reply_to_id" : 369632680,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY5ODAxMg==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 15,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346767800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369698012",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks @sipa, I agree with your comments. \r\nI have deleted my suggestions to change the tagged hashes, the others are still open. Please ACK/NACK and commit what you think is correct.",
      "created_at" : "2020-01-22T17:34:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#issuecomment-577299155",
      "id" : 577299155,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17977",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NzI5OTE1NQ==",
      "updated_at" : "2020-01-22T17:34:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577299155",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369704810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369704810"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks @sipa. I'm not trying to nitpick, rather looking at ways to lower the barrier for reviewers and thus help get more eyes on things. I find that complex conditionals with lots of low level details can make bugs hard to spot and make it daunting for people new to the source to contribute. There might be good reason for the style employed throughout the code and we probably can't change everything overnight, but even things like magic numbers (0xfe?? 0xc0??) everywhere makes it really hard to reason about, imho. Seems like we can make the source easier to read as we go with named conditionals, constants, etc. ",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T17:39:38Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {\n+                stack_size--; // Ignore annex\n+            }\n+            if (stack_size >= 2) {\n+                // Script path spend\n+                if ((stack[stack_size - 1][0] & 0xfe) == 0xc0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369704810",
      "id" : 369704810,
      "in_reply_to_id" : 369632680,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcwNDgxMA==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 15,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346776320,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369704810",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1731?v=4",
         "events_url" : "https://api.github.com/users/skwp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skwp/followers",
         "following_url" : "https://api.github.com/users/skwp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skwp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skwp",
         "id" : 1731,
         "login" : "skwp",
         "node_id" : "MDQ6VXNlcjE3MzE=",
         "organizations_url" : "https://api.github.com/users/skwp/orgs",
         "received_events_url" : "https://api.github.com/users/skwp/received_events",
         "repos_url" : "https://api.github.com/users/skwp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skwp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skwp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skwp"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369708533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369708533"
         }
      },
      "author_association" : "NONE",
      "body" : "hey kalle, please see my comment below to pieter. I'm seeing if people are open to using a more consistent single level of abstraction to make the source easier to read.\r\n\r\ne.g. this can be evaluated by a newb (ignore if I got the concepts wrong, I'm trying to illustrate a more literate / single level of abstraction style as per http://principles-wiki.net/principles:single_level_of_abstraction)\r\n\r\n```\r\nif (payToTapRoot)\r\n  if annexOnStack\r\n    stack_size--; // ignore annex\r\n  else \r\n    if (OpWhateverOnStack)\r\n      checkWhateverConditionWithLoop\r\n    end\r\n```\r\n\r\nAgain I could have totally gotten the details wrong but if the program looked like that at a single level of abstraction, with magic numbers given names and conditionals given names, many more people could actually participate in the PR process and grok what's going on.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T17:47:18Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369708533",
      "id" : 369708533,
      "in_reply_to_id" : 369630927,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcwODUzMw==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 10,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346781045,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369708533",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1731?v=4",
         "events_url" : "https://api.github.com/users/skwp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skwp/followers",
         "following_url" : "https://api.github.com/users/skwp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skwp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skwp",
         "id" : 1731,
         "login" : "skwp",
         "node_id" : "MDQ6VXNlcjE3MzE=",
         "organizations_url" : "https://api.github.com/users/skwp/orgs",
         "received_events_url" : "https://api.github.com/users/skwp/received_events",
         "repos_url" : "https://api.github.com/users/skwp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skwp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skwp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skwp"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369711202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369711202"
         }
      },
      "author_association" : "NONE",
      "body" : "\r\nIn fact I see that these magic numbers are already given names elsewhere. Can we use them here? This is way more readable and expresses intent\r\n\r\n```\r\n(stack[stack_size - 1][0] & TAPROOT_LEAF_MASK) == TAPROOT_LEAF_TAPSCRIPT\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T17:52:38Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {\n+                stack_size--; // Ignore annex\n+            }\n+            if (stack_size >= 2) {\n+                // Script path spend\n+                if ((stack[stack_size - 1][0] & 0xfe) == 0xc0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369711202",
      "id" : 369711202,
      "in_reply_to_id" : 369632680,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcxMTIwMg==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 15,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346784383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369711202",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1731?v=4",
         "events_url" : "https://api.github.com/users/skwp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skwp/followers",
         "following_url" : "https://api.github.com/users/skwp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skwp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skwp",
         "id" : 1731,
         "login" : "skwp",
         "node_id" : "MDQ6VXNlcjE3MzE=",
         "organizations_url" : "https://api.github.com/users/skwp/orgs",
         "received_events_url" : "https://api.github.com/users/skwp/received_events",
         "repos_url" : "https://api.github.com/users/skwp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skwp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skwp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skwp"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369764799"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369764799"
         }
      },
      "author_association" : "NONE",
      "body" : "taghash is written twice. Is this intentional?",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T19:42:07Z",
      "diff_hunk" : "@@ -77,3 +78,12 @@ void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char he\n     num[3] = (nChild >>  0) & 0xFF;\n     CHMAC_SHA512(chainCode.begin(), chainCode.size()).Write(&header, 1).Write(data, 32).Write(num, 4).Finalize(output);\n }\n+\n+CHashWriter TaggedHash(const std::string& tag)\n+{\n+    CHashWriter writer(SER_GETHASH, 0);\n+    uint256 taghash;\n+    CSHA256().Write((unsigned char*)tag.data(), tag.size()).Finalize(taghash.begin());\n+    writer << taghash << taghash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369764799",
      "id" : 369764799,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NDc5OQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 18,
      "path" : "src/hash.cpp",
      "position" : 18,
      "pull_request_review_id" : 346852688,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369764799",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/60033096?v=4",
         "events_url" : "https://api.github.com/users/constcast-glitch/events{/privacy}",
         "followers_url" : "https://api.github.com/users/constcast-glitch/followers",
         "following_url" : "https://api.github.com/users/constcast-glitch/following{/other_user}",
         "gists_url" : "https://api.github.com/users/constcast-glitch/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/constcast-glitch",
         "id" : 60033096,
         "login" : "constcast-glitch",
         "node_id" : "MDQ6VXNlcjYwMDMzMDk2",
         "organizations_url" : "https://api.github.com/users/constcast-glitch/orgs",
         "received_events_url" : "https://api.github.com/users/constcast-glitch/received_events",
         "repos_url" : "https://api.github.com/users/constcast-glitch/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/constcast-glitch/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/constcast-glitch/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/constcast-glitch"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369766227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369766227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, please read the spec.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T19:45:02Z",
      "diff_hunk" : "@@ -77,3 +78,12 @@ void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char he\n     num[3] = (nChild >>  0) & 0xFF;\n     CHMAC_SHA512(chainCode.begin(), chainCode.size()).Write(&header, 1).Write(data, 32).Write(num, 4).Finalize(output);\n }\n+\n+CHashWriter TaggedHash(const std::string& tag)\n+{\n+    CHashWriter writer(SER_GETHASH, 0);\n+    uint256 taghash;\n+    CSHA256().Write((unsigned char*)tag.data(), tag.size()).Finalize(taghash.begin());\n+    writer << taghash << taghash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369766227",
      "id" : 369766227,
      "in_reply_to_id" : 369764799,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NjIyNw==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 18,
      "path" : "src/hash.cpp",
      "position" : 18,
      "pull_request_review_id" : 346854522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369766227",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369768378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369768378"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: `reinterpret_cast<unsigned char*>(const_cast<char*>(`?\r\n\r\nThe `const_cast` could be removed with C++17 and a switch to rvalue references.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T19:49:33Z",
      "diff_hunk" : "@@ -77,3 +78,12 @@ void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char he\n     num[3] = (nChild >>  0) & 0xFF;\n     CHMAC_SHA512(chainCode.begin(), chainCode.size()).Write(&header, 1).Write(data, 32).Write(num, 4).Finalize(output);\n }\n+\n+CHashWriter TaggedHash(const std::string& tag)\n+{\n+    CHashWriter writer(SER_GETHASH, 0);\n+    uint256 taghash;\n+    CSHA256().Write((unsigned char*)tag.data(), tag.size()).Finalize(taghash.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369768378",
      "id" : 369768378,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2ODM3OA==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 17,
      "path" : "src/hash.cpp",
      "position" : null,
      "pull_request_review_id" : 346857429,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369768378",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369778313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369778313"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This should just be `(const char*)tag.data`. We don't usually use C++ style casts for primitive types (they're all equivalent anyway, and the C++ style ones are very verbose).",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:11:10Z",
      "diff_hunk" : "@@ -77,3 +78,12 @@ void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char he\n     num[3] = (nChild >>  0) & 0xFF;\n     CHMAC_SHA512(chainCode.begin(), chainCode.size()).Write(&header, 1).Write(data, 32).Write(num, 4).Finalize(output);\n }\n+\n+CHashWriter TaggedHash(const std::string& tag)\n+{\n+    CHashWriter writer(SER_GETHASH, 0);\n+    uint256 taghash;\n+    CSHA256().Write((unsigned char*)tag.data(), tag.size()).Finalize(taghash.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369778313",
      "id" : 369778313,
      "in_reply_to_id" : 369768378,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3ODMxMw==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 17,
      "path" : "src/hash.cpp",
      "position" : null,
      "pull_request_review_id" : 346870366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369778313",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779079"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed into `SHA256Uint256`, and moved to hash.{h,cpp}.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:12:57Z",
      "diff_hunk" : "@@ -1189,7 +1358,14 @@ uint256 GetPrevoutHash(const T& txTo)\n     for (const auto& txin : txTo.vin) {\n         ss << txin.prevout;\n     }\n-    return ss.GetHash();\n+    return ss.GetSHA256();\n+}\n+\n+uint256 HashAgain(const uint256& hash)\n+{\n+    uint256 result;\n+    CSHA256().Write(hash.begin(), 32).Finalize(result.begin());\n+    return result;\n }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779079",
      "id" : 369779079,
      "in_reply_to_id" : 369389626,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3OTA3OQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 314,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 346871432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779079",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779340"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779340"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice catch, fixed. I don't know what \"less expired\" means; all dates in the past are equally expired.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:13:32Z",
      "diff_hunk" : "@@ -83,6 +83,11 @@ class CMainParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n \n+        // Deployment of Taproot\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779340",
      "id" : 369779340,
      "in_reply_to_id" : 369513725,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3OTM0MA==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 6,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 346871779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779340",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779414"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:13:41Z",
      "diff_hunk" : "@@ -14,6 +14,7 @@ namespace Consensus {\n enum DeploymentPos\n {\n     DEPLOYMENT_TESTDUMMY,\n+    DEPLOYMENT_TAPROOT, // Deployment of bip-taproot/bip-tapscript/bip-schnorr",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779414",
      "id" : 369779414,
      "in_reply_to_id" : 369593203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3OTQxNA==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 4,
      "path" : "src/consensus/params.h",
      "position" : null,
      "pull_request_review_id" : 346871873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779414",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779485"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:13:50Z",
      "diff_hunk" : "@@ -204,4 +218,12 @@ unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char\n \n void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char header, const unsigned char data[32], unsigned char output[64]);\n \n+/** Return a CHashWriter primed for computing bip-schnorr compatible tagged hashes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779485",
      "id" : 369779485,
      "in_reply_to_id" : 369593612,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3OTQ4NQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 60,
      "path" : "src/hash.h",
      "position" : null,
      "pull_request_review_id" : 346871950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779485",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779689"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This belongs in https://github.com/bitcoin-core/secp256k1/pull/558.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:14:18Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#ifndef SECP256K1_SCHNORRSIG_H\n+#define SECP256K1_SCHNORRSIG_H\n+\n+#include \"secp256k1.h\"\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/** This module implements a variant of Schnorr signatures compliant with\n+ * BIP-schnorr",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779689",
      "id" : 369779689,
      "in_reply_to_id" : 369597072,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3OTY4OQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 11,
      "path" : "src/secp256k1/include/secp256k1_schnorrsig.h",
      "position" : 11,
      "pull_request_review_id" : 346872218,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779689",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779758"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779758"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:14:28Z",
      "diff_hunk" : "@@ -384,3 +453,33 @@ def sign_ecdsa(self, msg, low_s=True):\n         rb = r.to_bytes((r.bit_length() + 8) // 8, 'big')\n         sb = s.to_bytes((s.bit_length() + 8) // 8, 'big')\n         return b'\\x30' + bytes([4 + len(rb) + len(sb), 2, len(rb)]) + rb + bytes([2, len(sb)]) + sb\n+\n+    def sign_schnorr(self, msg):\n+        \"\"\"Construct a bip-schnorr compatible signature with this key.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779758",
      "id" : 369779758,
      "in_reply_to_id" : 369601055,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3OTc1OA==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 126,
      "path" : "test/functional/test_framework/key.py",
      "position" : null,
      "pull_request_review_id" : 346872310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779758",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779870"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This belongs in https://github.com/bitcoin-core/secp256k1/pull/558.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:14:45Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#ifndef SECP256K1_SCHNORRSIG_H\n+#define SECP256K1_SCHNORRSIG_H\n+\n+#include \"secp256k1.h\"\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/** This module implements a variant of Schnorr signatures compliant with\n+ * BIP-schnorr\n+ * (https://github.com/sipa/bips/blob/bip-schnorr/bip-schnorr.mediawiki).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369779870",
      "id" : 369779870,
      "in_reply_to_id" : 369609545,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3OTg3MA==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 12,
      "path" : "src/secp256k1/include/secp256k1_schnorrsig.h",
      "position" : 12,
      "pull_request_review_id" : 346872452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369779870",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780016"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780016"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This belongs in https://github.com/bitcoin-core/secp256k1/pull/558.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:15:08Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#ifndef SECP256K1_SCHNORRSIG_H\n+#define SECP256K1_SCHNORRSIG_H\n+\n+#include \"secp256k1.h\"\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/** This module implements a variant of Schnorr signatures compliant with\n+ * BIP-schnorr\n+ * (https://github.com/sipa/bips/blob/bip-schnorr/bip-schnorr.mediawiki).\n+ */\n+\n+/** Opaque data structure that holds a parsed Schnorr signature.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is\n+ *  however guaranteed to be 64 bytes in size, and can be safely copied/moved.\n+ *  If you need to convert to a format suitable for storage, transmission, or\n+ *  comparison, use the `secp256k1_schnorrsig_serialize` and\n+ *  `secp256k1_schnorrsig_parse` functions.\n+ */\n+typedef struct {\n+    unsigned char data[64];\n+} secp256k1_schnorrsig;\n+\n+/** Serialize a Schnorr signature.\n+ *\n+ *  Returns: 1\n+ *  Args:    ctx: a secp256k1 context object\n+ *  Out:   out64: pointer to a 64-byte array to store the serialized signature\n+ *  In:      sig: pointer to the signature\n+ *\n+ *  See secp256k1_schnorrsig_parse for details about the encoding.\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_serialize(\n+    const secp256k1_context* ctx,\n+    unsigned char *out64,\n+    const secp256k1_schnorrsig* sig\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Parse a Schnorr signature.\n+ *\n+ *  Returns: 1 when the signature could be parsed, 0 otherwise.\n+ *  Args:    ctx: a secp256k1 context object\n+ *  Out:     sig: pointer to a signature object\n+ *  In:     in64: pointer to the 64-byte signature to be parsed\n+ *\n+ * The signature is serialized in the form R||s, where R is a 32-byte public\n+ * key (X coordinate only; the Y coordinate is considered to be the unique\n+ * Y coordinate satisfying the curve equation that is square)\n+ * and s is a 32-byte big-endian scalar.\n+ *\n+ * After the call, sig will always be initialized. If parsing failed or the\n+ * encoded numbers are out of range, signature validation with it is\n+ * guaranteed to fail for every message and public key.\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_parse(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig* sig,\n+    const unsigned char *in64\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Create a Schnorr signature.\n+ *\n+ * Returns 1 on success, 0 on failure.\n+ *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n+ *  Out:     sig: pointer to the returned signature (cannot be NULL)\n+ *  In:    msg32: the 32-byte message being signed (cannot be NULL)\n+ *        seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bipschnorr is used",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780016",
      "id" : 369780016,
      "in_reply_to_id" : 369609932,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MDAxNg==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 72,
      "path" : "src/secp256k1/include/secp256k1_schnorrsig.h",
      "position" : 72,
      "pull_request_review_id" : 346872658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780016",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780198"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This belongs in https://github.com/bitcoin-core/secp256k1/pull/558. Also, that would be invalid C code.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:15:30Z",
      "diff_hunk" : "@@ -0,0 +1,358 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+/* Initializes SHA256 with fixed midstate. This midstate was computed by applying\n+ * SHA256 to SHA256(\"BIPSchnorr\")||SHA256(\"BIPSchnorr\"). */\n+static void secp256k1_schnorrsig_sha256_tagged(secp256k1_sha256 *sha) {\n+    secp256k1_sha256_initialize(sha);\n+    sha->s[0] = 0x048d9a59ul;\n+    sha->s[1] = 0xfe39fb05ul;\n+    sha->s[2] = 0x28479648ul;\n+    sha->s[3] = 0xe4a660f9ul;\n+    sha->s[4] = 0x814b9e66ul;\n+    sha->s[5] = 0x0469e801ul;\n+    sha->s[6] = 0x83909280ul;\n+    sha->s[7] = 0xb329e454ul;\n+    sha->bytes = 64;\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[32];\n+    unsigned char seckey_tmp[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780198",
      "id" : 369780198,
      "in_reply_to_id" : 369610577,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MDE5OA==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 67,
      "path" : "src/secp256k1/src/modules/schnorrsig/main_impl.h",
      "position" : 67,
      "pull_request_review_id" : 346872915,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780198",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780376"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780376"
         }
      },
      "author_association" : "NONE",
      "body" : "Unify Taproot capitalization in comments.\r\n```suggestion\r\n    DEPLOYMENT_TAPROOT, // Deployment of Taproot (BIPs 340-342)\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:15:52Z",
      "diff_hunk" : "@@ -14,6 +14,7 @@ namespace Consensus {\n enum DeploymentPos\n {\n     DEPLOYMENT_TESTDUMMY,\n+    DEPLOYMENT_TAPROOT, // Deployment of taproot (BIPs 340-342)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780376",
      "id" : 369780376,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MDM3Ng==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 4,
      "path" : "src/consensus/params.h",
      "position" : null,
      "pull_request_review_id" : 346873146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780376",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780392"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changing that would violate the spec.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:15:54Z",
      "diff_hunk" : "@@ -0,0 +1,358 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+/* Initializes SHA256 with fixed midstate. This midstate was computed by applying\n+ * SHA256 to SHA256(\"BIPSchnorr\")||SHA256(\"BIPSchnorr\"). */\n+static void secp256k1_schnorrsig_sha256_tagged(secp256k1_sha256 *sha) {\n+    secp256k1_sha256_initialize(sha);\n+    sha->s[0] = 0x048d9a59ul;\n+    sha->s[1] = 0xfe39fb05ul;\n+    sha->s[2] = 0x28479648ul;\n+    sha->s[3] = 0xe4a660f9ul;\n+    sha->s[4] = 0x814b9e66ul;\n+    sha->s[5] = 0x0469e801ul;\n+    sha->s[6] = 0x83909280ul;\n+    sha->s[7] = 0xb329e454ul;\n+    sha->bytes = 64;\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[32];\n+    unsigned char seckey_tmp[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;\n+    }\n+    secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (overflow || secp256k1_scalar_is_zero(&x)) {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pkj, &x);\n+    secp256k1_ge_set_gej(&pk, &pkj);\n+\n+    /* Because we are signing for a x-only pubkey, the secret key is negated\n+     * before signing if the point corresponding to the secret key does not\n+     * have a square Y. */\n+    if (!secp256k1_fe_is_quad_var(&pk.y)) {\n+        secp256k1_scalar_negate(&x, &x);\n+    }\n+\n+    secp256k1_scalar_get_b32(seckey_tmp, &x);\n+    if (!noncefp(buf, msg32, seckey_tmp, (unsigned char *) \"BIPSchnorrDerive\", (void*)ndata, 0)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780392",
      "id" : 369780392,
      "in_reply_to_id" : 369610885,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MDM5Mg==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 87,
      "path" : "src/secp256k1/src/modules/schnorrsig/main_impl.h",
      "position" : 87,
      "pull_request_review_id" : 346873165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780392",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780523"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've added some comments. Better now?",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:16:09Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780523",
      "id" : 369780523,
      "in_reply_to_id" : 369630927,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MDUyMw==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 10,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346873333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780523",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780765"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780765"
         }
      },
      "author_association" : "NONE",
      "body" : "Unify Taproot capitalization in comments.\r\n```suggestion\r\n    // Making unknown Taproot leaf versions non-standard\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:16:37Z",
      "diff_hunk" : "@@ -114,32 +120,98 @@ enum\n     // Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts\n     //\n     SCRIPT_VERIFY_CONST_SCRIPTCODE = (1U << 16),\n+\n+    // Taproot validation\n+    //\n+    SCRIPT_VERIFY_TAPROOT = (1U << 17),\n+\n+    // Making unknown taproot leaf versions non-standard",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369780765",
      "id" : 369780765,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MDc2NQ==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 31,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 346873608,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369780765",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369781034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369781034"
         }
      },
      "author_association" : "NONE",
      "body" : "Unify Taproot capitalization in comments.\r\n\r\n```suggestion\r\n    // Taproot\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:17:15Z",
      "diff_hunk" : "@@ -138,6 +138,9 @@ const char* GetOpName(opcodetype opcode)\n     case OP_NOP9                   : return \"OP_NOP9\";\n     case OP_NOP10                  : return \"OP_NOP10\";\n \n+    // taproot",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369781034",
      "id" : 369781034,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MTAzNA==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 4,
      "path" : "src/script/script.cpp",
      "position" : null,
      "pull_request_review_id" : 346873945,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369781034",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369781217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369781217"
         }
      },
      "author_association" : "NONE",
      "body" : "Unify Taproot capitalization in comments.\r\n```suggestion\r\n    // Taproot\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:17:39Z",
      "diff_hunk" : "@@ -187,6 +198,9 @@ enum opcodetype\n     OP_NOP9 = 0xb8,\n     OP_NOP10 = 0xb9,\n \n+    // taproot",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369781217",
      "id" : 369781217,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MTIxNw==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 22,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 346874197,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369781217",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369781409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369781409"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed it to use the constants, that's obviously the better way.\r\n\r\nThe reason why the annex does not use a nested conditional is because it's a single `if` statement that tests the presence of the annex (as in: both conditions are needed to have an annex). The tapscript conditional is split up into the logical \"this is a script path spending\" condition and the \"this is a leaf version 0xc0 script\".",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:18:04Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {\n+                stack_size--; // Ignore annex\n+            }\n+            if (stack_size >= 2) {\n+                // Script path spend\n+                if ((stack[stack_size - 1][0] & 0xfe) == 0xc0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369781409",
      "id" : 369781409,
      "in_reply_to_id" : 369632680,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MTQwOQ==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 15,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346874459,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369781409",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369781835"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369781835"
         }
      },
      "author_association" : "NONE",
      "body" : "Unify Taproot capitalization in comments.\r\n```suggestion\r\n                # Don't use 32-byte v1 witness (used by Taproot)\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:18:59Z",
      "diff_hunk" : "@@ -1364,7 +1365,11 @@ def test_segwit_versions(self):\n         assert_equal(len(self.nodes[1].getrawmempool()), 0)\n         for version in list(range(OP_1, OP_16 + 1)) + [OP_0]:\n             # First try to spend to a future version segwit script_pubkey.\n-            script_pubkey = CScript([CScriptOp(version), witness_hash])\n+            if version == OP_1:\n+                # Don't use 32-byte v1 witness (used by taproot)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369781835",
      "id" : 369781835,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MTgzNQ==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 14,
      "path" : "test/functional/p2p_segwit.py",
      "position" : null,
      "pull_request_review_id" : 346874977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369781835",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369784302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369784302"
         }
      },
      "author_association" : "NONE",
      "body" : "Unify Taproot capitalization in comments.\r\n```suggestion\r\n# Test Taproot softfork.\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:24:19Z",
      "diff_hunk" : "@@ -0,0 +1,600 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+# Test taproot softfork.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369784302",
      "id" : 369784302,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NDMwMg==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 5,
      "path" : "test/functional/feature_taproot.py",
      "position" : null,
      "pull_request_review_id" : 346878131,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369784302",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369786605"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369786605"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Perhaps more readable if we avoid magic numbers with something like:\r\n```c++\r\nstatic_assert(SIGHASH_TAPOUTPUTMASK < SIGHASH_TAPINPUTMASK);\r\nif ((hash_type > SIGHASH_TAPOUTPUTMASK) && (hash_type <= SIGHASH_TAPINPUTMASK || hash_type > (SIGHASH_TAPINPUTMASK | SIGHASH_TAPOUTPUTMASK))) return false;\r\n```\r\n\r\nAlternatively, a comment could be helpful.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:29:59Z",
      "diff_hunk" : "@@ -1209,27 +1378,137 @@ uint256 GetOutputsHash(const T& txTo)\n     for (const auto& txout : txTo.vout) {\n         ss << txout;\n     }\n-    return ss.GetHash();\n+    return ss.GetSHA256();\n+}\n+\n+uint256 GetSpentAmountsHash(const std::vector<CTxOut>& outputs_spent)\n+{\n+    CHashWriter ss(SER_GETHASH, 0);\n+    for (const auto& txout : outputs_spent) {\n+        ss << txout.nValue;\n+    }\n+    return ss.GetSHA256();\n }\n \n } // namespace\n \n template <class T>\n-PrecomputedTransactionData::PrecomputedTransactionData(const T& txTo)\n+void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut> spent_outputs)\n {\n+    m_spent_outputs = std::move(spent_outputs);\n+\n+    if (ready) return;\n     // Cache is calculated only for transactions with witness\n     if (txTo.HasWitness()) {\n-        hashPrevouts = GetPrevoutHash(txTo);\n-        hashSequence = GetSequenceHash(txTo);\n-        hashOutputs = GetOutputsHash(txTo);\n+        m_prevouts_hash = GetPrevoutHash(txTo);\n+        hashPrevouts = SHA256Uint256(m_prevouts_hash);\n+        m_sequences_hash = GetSequenceHash(txTo);\n+        hashSequence = SHA256Uint256(m_sequences_hash);\n+        m_outputs_hash = GetOutputsHash(txTo);\n+        hashOutputs = SHA256Uint256(m_outputs_hash);\n         ready = true;\n+\n+        if (!m_spent_outputs.empty()) {\n+            m_amounts_spent_hash = GetSpentAmountsHash(m_spent_outputs);\n+            m_amounts_spent_ready = true;\n+        }\n     }\n }\n \n+template <class T>\n+PrecomputedTransactionData::PrecomputedTransactionData(const T& txTo)\n+{\n+    Init(txTo, {});\n+}\n+\n // explicit instantiation\n+template void PrecomputedTransactionData::Init(const CTransaction& txTo, std::vector<CTxOut> spent_outputs);\n+template void PrecomputedTransactionData::Init(const CMutableTransaction& txTo, std::vector<CTxOut> spent_outputs);\n template PrecomputedTransactionData::PrecomputedTransactionData(const CTransaction& txTo);\n template PrecomputedTransactionData::PrecomputedTransactionData(const CMutableTransaction& txTo);\n \n+static const CHashWriter HasherTapSighash = TaggedHash(\"TapSighash\");\n+static const CHashWriter HasherTapLeaf = TaggedHash(\"TapLeaf\");\n+static const CHashWriter HasherTapBranch = TaggedHash(\"TapBranch\");\n+static const CHashWriter HasherTapTweak = TaggedHash(\"TapTweak\");\n+\n+template<typename T>\n+bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata, const T& tx_to, const uint32_t in_pos, const uint8_t hash_type, const SigVersion sigversion, const PrecomputedTransactionData& cache)\n+{\n+    assert(in_pos < tx_to.vin.size());\n+    assert(sigversion == SigVersion::TAPROOT || sigversion == SigVersion::TAPSCRIPT);\n+    assert(cache.ready && cache.m_amounts_spent_ready);\n+\n+    CHashWriter ss = HasherTapSighash;\n+\n+    // Epoch\n+    uint8_t epoch = 0;\n+    ss << epoch;\n+\n+    // Hash type\n+    if ((hash_type > 3) && (hash_type < 0x81 || hash_type > 0x83)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369786605",
      "id" : 369786605,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NjYwNQ==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 396,
      "path" : "src/script/interpreter.cpp",
      "position" : 396,
      "pull_request_review_id" : 346881218,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369786605",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369786833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369786833"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: is it clearer to use or comment e.g. `WITNESS_V0`, and `TAPROOT` below?",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:30:32Z",
      "diff_hunk" : "@@ -1209,27 +1378,137 @@ uint256 GetOutputsHash(const T& txTo)\n     for (const auto& txout : txTo.vout) {\n         ss << txout;\n     }\n-    return ss.GetHash();\n+    return ss.GetSHA256();\n+}\n+\n+uint256 GetSpentAmountsHash(const std::vector<CTxOut>& outputs_spent)\n+{\n+    CHashWriter ss(SER_GETHASH, 0);\n+    for (const auto& txout : outputs_spent) {\n+        ss << txout.nValue;\n+    }\n+    return ss.GetSHA256();\n }\n \n } // namespace\n \n template <class T>\n-PrecomputedTransactionData::PrecomputedTransactionData(const T& txTo)\n+void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut> spent_outputs)\n {\n+    m_spent_outputs = std::move(spent_outputs);\n+\n+    if (ready) return;\n     // Cache is calculated only for transactions with witness\n     if (txTo.HasWitness()) {\n-        hashPrevouts = GetPrevoutHash(txTo);\n-        hashSequence = GetSequenceHash(txTo);\n-        hashOutputs = GetOutputsHash(txTo);\n+        m_prevouts_hash = GetPrevoutHash(txTo);\n+        hashPrevouts = SHA256Uint256(m_prevouts_hash);\n+        m_sequences_hash = GetSequenceHash(txTo);\n+        hashSequence = SHA256Uint256(m_sequences_hash);\n+        m_outputs_hash = GetOutputsHash(txTo);\n+        hashOutputs = SHA256Uint256(m_outputs_hash);\n         ready = true;\n+\n+        if (!m_spent_outputs.empty()) {\n+            m_amounts_spent_hash = GetSpentAmountsHash(m_spent_outputs);\n+            m_amounts_spent_ready = true;\n+        }\n     }\n }\n \n+template <class T>\n+PrecomputedTransactionData::PrecomputedTransactionData(const T& txTo)\n+{\n+    Init(txTo, {});\n+}\n+\n // explicit instantiation\n+template void PrecomputedTransactionData::Init(const CTransaction& txTo, std::vector<CTxOut> spent_outputs);\n+template void PrecomputedTransactionData::Init(const CMutableTransaction& txTo, std::vector<CTxOut> spent_outputs);\n template PrecomputedTransactionData::PrecomputedTransactionData(const CTransaction& txTo);\n template PrecomputedTransactionData::PrecomputedTransactionData(const CMutableTransaction& txTo);\n \n+static const CHashWriter HasherTapSighash = TaggedHash(\"TapSighash\");\n+static const CHashWriter HasherTapLeaf = TaggedHash(\"TapLeaf\");\n+static const CHashWriter HasherTapBranch = TaggedHash(\"TapBranch\");\n+static const CHashWriter HasherTapTweak = TaggedHash(\"TapTweak\");\n+\n+template<typename T>\n+bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata, const T& tx_to, const uint32_t in_pos, const uint8_t hash_type, const SigVersion sigversion, const PrecomputedTransactionData& cache)\n+{\n+    assert(in_pos < tx_to.vin.size());\n+    assert(sigversion == SigVersion::TAPROOT || sigversion == SigVersion::TAPSCRIPT);\n+    assert(cache.ready && cache.m_amounts_spent_ready);\n+\n+    CHashWriter ss = HasherTapSighash;\n+\n+    // Epoch\n+    uint8_t epoch = 0;\n+    ss << epoch;\n+\n+    // Hash type\n+    if ((hash_type > 3) && (hash_type < 0x81 || hash_type > 0x83)) return false;\n+    ss << hash_type;\n+    const uint8_t input_type = hash_type & SIGHASH_TAPINPUTMASK;\n+    const uint8_t output_type = hash_type & SIGHASH_TAPOUTPUTMASK;\n+\n+    // Transaction level data\n+    ss << tx_to.nVersion;\n+    ss << tx_to.nLockTime;\n+\n+    if (input_type == SIGHASH_TAPDEFAULT) {\n+        ss << cache.m_prevouts_hash;\n+        ss << cache.m_amounts_spent_hash;\n+        ss << cache.m_sequences_hash;\n+    }\n+    if (output_type == SIGHASH_TAPDEFAULT || output_type == SIGHASH_ALL) {\n+        ss << cache.m_outputs_hash;\n+    }\n+\n+    // Data about the input/prevout being spent\n+    const CScript& scriptPubKey = cache.m_spent_outputs[in_pos].scriptPubKey;\n+    uint8_t spend_type = 0;\n+    assert(execdata.m_annex_init);\n+    if (execdata.m_annex_present) {\n+        spend_type |= 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369786833",
      "id" : 369786833,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NjgzMw==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 419,
      "path" : "src/script/interpreter.cpp",
      "position" : 419,
      "pull_request_review_id" : 346881537,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369786833",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369791114"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369791114"
         }
      },
      "author_association" : "NONE",
      "body" : "I have suggested the changes [there](https://github.com/bitcoin-core/secp256k1/pull/558#pullrequestreview-346886721)",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:40:39Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#ifndef SECP256K1_SCHNORRSIG_H\n+#define SECP256K1_SCHNORRSIG_H\n+\n+#include \"secp256k1.h\"\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/** This module implements a variant of Schnorr signatures compliant with\n+ * BIP-schnorr\n+ * (https://github.com/sipa/bips/blob/bip-schnorr/bip-schnorr.mediawiki).\n+ */\n+\n+/** Opaque data structure that holds a parsed Schnorr signature.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is\n+ *  however guaranteed to be 64 bytes in size, and can be safely copied/moved.\n+ *  If you need to convert to a format suitable for storage, transmission, or\n+ *  comparison, use the `secp256k1_schnorrsig_serialize` and\n+ *  `secp256k1_schnorrsig_parse` functions.\n+ */\n+typedef struct {\n+    unsigned char data[64];\n+} secp256k1_schnorrsig;\n+\n+/** Serialize a Schnorr signature.\n+ *\n+ *  Returns: 1\n+ *  Args:    ctx: a secp256k1 context object\n+ *  Out:   out64: pointer to a 64-byte array to store the serialized signature\n+ *  In:      sig: pointer to the signature\n+ *\n+ *  See secp256k1_schnorrsig_parse for details about the encoding.\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_serialize(\n+    const secp256k1_context* ctx,\n+    unsigned char *out64,\n+    const secp256k1_schnorrsig* sig\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Parse a Schnorr signature.\n+ *\n+ *  Returns: 1 when the signature could be parsed, 0 otherwise.\n+ *  Args:    ctx: a secp256k1 context object\n+ *  Out:     sig: pointer to a signature object\n+ *  In:     in64: pointer to the 64-byte signature to be parsed\n+ *\n+ * The signature is serialized in the form R||s, where R is a 32-byte public\n+ * key (X coordinate only; the Y coordinate is considered to be the unique\n+ * Y coordinate satisfying the curve equation that is square)\n+ * and s is a 32-byte big-endian scalar.\n+ *\n+ * After the call, sig will always be initialized. If parsing failed or the\n+ * encoded numbers are out of range, signature validation with it is\n+ * guaranteed to fail for every message and public key.\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_parse(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig* sig,\n+    const unsigned char *in64\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Create a Schnorr signature.\n+ *\n+ * Returns 1 on success, 0 on failure.\n+ *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n+ *  Out:     sig: pointer to the returned signature (cannot be NULL)\n+ *  In:    msg32: the 32-byte message being signed (cannot be NULL)\n+ *        seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bipschnorr is used",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369791114",
      "id" : 369791114,
      "in_reply_to_id" : 369609932,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc5MTExNA==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 72,
      "path" : "src/secp256k1/include/secp256k1_schnorrsig.h",
      "position" : 72,
      "pull_request_review_id" : 346887117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369791114",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369791691"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369791691"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n                    // Leaf version 0xc0 (aka Tapscript, see BIP 342)\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:41:54Z",
      "diff_hunk" : "@@ -231,6 +231,31 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend (non-P2SH-wrapped, version 1, witness program size 32; see BIP 341)\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {\n+                stack_size--; // Ignore annex if present\n+            }\n+            if (stack_size >= 2) {\n+                // Script path spend (2 or more stack elements are removing optional annex)\n+                if ((stack[stack_size - 1][0] & TAPROOT_LEAF_MASK) == TAPROOT_LEAF_TAPSCRIPT) {\n+                    // Leaf version 0xc0 (aka tapscript, see BIP 342)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369791691",
      "id" : 369791691,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc5MTY5MQ==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 16,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346887828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369791691",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369791787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369791787"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n/** The maximum size of each witness stack item in a standard Tapscript */\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:42:10Z",
      "diff_hunk" : "@@ -40,6 +40,8 @@ static const bool DEFAULT_PERMIT_BAREMULTISIG = true;\n static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEMS = 100;\n /** The maximum size of each witness stack item in a standard P2WSH script */\n static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEM_SIZE = 80;\n+/** The maximum size of each witness stack item in a standard tapscript */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369791787",
      "id" : 369791787,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc5MTc4Nw==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 4,
      "path" : "src/policy/policy.h",
      "position" : null,
      "pull_request_review_id" : 346887828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369791787",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369791871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369791871"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n    // Making unknown public key versions in Tapscript non-standard\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:42:23Z",
      "diff_hunk" : "@@ -114,32 +120,98 @@ enum\n     // Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts\n     //\n     SCRIPT_VERIFY_CONST_SCRIPTCODE = (1U << 16),\n+\n+    // Taproot validation\n+    //\n+    SCRIPT_VERIFY_TAPROOT = (1U << 17),\n+\n+    // Making unknown taproot leaf versions non-standard\n+    //\n+    SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION = (1U << 18),\n+\n+    // Making the use of (unknown) annexes non-standard (currently no annexes are known)\n+    //\n+    SCRIPT_VERIFY_DISCOURAGE_UNKNOWN_ANNEX = (1U << 19),\n+\n+    // Making unknown OP_SUCCESS non-standard\n+    SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS = (1U << 20),\n+\n+    // Making unknown public key versions in tapscript non-standard",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369791871",
      "id" : 369791871,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc5MTg3MQ==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 42,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 346887828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369791871",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369792013"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369792013"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n// Validation weight per passing signature (Tapscript only).\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:42:46Z",
      "diff_hunk" : "@@ -44,6 +44,17 @@ static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20\n // SEQUENCE_FINAL).\n static const uint32_t LOCKTIME_MAX = 0xFFFFFFFFU;\n \n+// Tag for input annex. If there are at least two witness elements for a transaction input,\n+// and the first byte of the last element is 0x50, this last element is called annex, and\n+// has meanings independent of the script\n+static const unsigned int ANNEX_TAG = 0x50;\n+\n+// Validation weight per passing signature (tapscript only).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369792013",
      "id" : 369792013,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc5MjAxMw==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 9,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 346887828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369792013",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369792104"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369792104"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n// How much weight budget is added to the witness size (Tapscript only).\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:42:58Z",
      "diff_hunk" : "@@ -44,6 +44,17 @@ static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20\n // SEQUENCE_FINAL).\n static const uint32_t LOCKTIME_MAX = 0xFFFFFFFFU;\n \n+// Tag for input annex. If there are at least two witness elements for a transaction input,\n+// and the first byte of the last element is 0x50, this last element is called annex, and\n+// has meanings independent of the script\n+static const unsigned int ANNEX_TAG = 0x50;\n+\n+// Validation weight per passing signature (tapscript only).\n+static constexpr uint64_t VALIDATION_WEIGHT_PER_SIGOP_PASSED = 50;\n+\n+// How much weight budget is added to the witness size (tapscript only).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369792104",
      "id" : 369792104,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc5MjEwNA==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 12,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 346887828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369792104",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369792258"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369792258"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n# Tapscript\r\n```",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:43:20Z",
      "diff_hunk" : "@@ -223,11 +229,8 @@ def __new__(cls, n):\n OP_NOP9 = CScriptOp(0xb8)\n OP_NOP10 = CScriptOp(0xb9)\n \n-# template matching params\n-OP_SMALLINTEGER = CScriptOp(0xfa)\n-OP_PUBKEYS = CScriptOp(0xfb)\n-OP_PUBKEYHASH = CScriptOp(0xfd)\n-OP_PUBKEY = CScriptOp(0xfe)\n+# tapscript",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369792258",
      "id" : 369792258,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc5MjI1OA==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 32,
      "path" : "test/functional/test_framework/script.py",
      "position" : null,
      "pull_request_review_id" : 346887828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369792258",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30683012?v=4",
         "events_url" : "https://api.github.com/users/MaxHillebrand/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MaxHillebrand/followers",
         "following_url" : "https://api.github.com/users/MaxHillebrand/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MaxHillebrand/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MaxHillebrand",
         "id" : 30683012,
         "login" : "MaxHillebrand",
         "node_id" : "MDQ6VXNlcjMwNjgzMDEy",
         "organizations_url" : "https://api.github.com/users/MaxHillebrand/orgs",
         "received_events_url" : "https://api.github.com/users/MaxHillebrand/received_events",
         "repos_url" : "https://api.github.com/users/MaxHillebrand/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MaxHillebrand/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MaxHillebrand/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MaxHillebrand"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369798203"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369798203"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~~nit: `stack.back()`~~\r\n\r\nNeglected to examine the full context.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:56:18Z",
      "diff_hunk" : "@@ -231,6 +231,31 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend (non-P2SH-wrapped, version 1, witness program size 32; see BIP 341)\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369798203",
      "id" : 369798203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc5ODIwMw==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 10,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346896145,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369798203",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369798364"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369798364"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, that would be incorrect.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T20:56:38Z",
      "diff_hunk" : "@@ -231,6 +231,31 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend (non-P2SH-wrapped, version 1, witness program size 32; see BIP 341)\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369798364",
      "id" : 369798364,
      "in_reply_to_id" : 369798203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc5ODM2NA==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 10,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346896354,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369798364",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369804204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369804204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: how about `!= sizeof(((secp256k1_schnorrsig){0}).data)`, a `static_assert`, or similar?",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T21:08:52Z",
      "diff_hunk" : "@@ -166,6 +167,23 @@ static int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1\n     return 1;\n }\n \n+bool XOnlyPubKey::VerifySchnorr(const uint256 &hash, const std::vector<unsigned char>& sigbytes) const {\n+    if (sigbytes.size() != 64) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369804204",
      "id" : 369804204,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgwNDIwNA==",
      "original_commit_id" : "2c55acda1cba362b08e289d60fe77eb8baaeb17e",
      "original_position" : 13,
      "path" : "src/pubkey.cpp",
      "position" : 13,
      "pull_request_review_id" : 346903893,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369804204",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369805872"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369805872"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks definitely helps, though I would still love to see some vars extracted to named for readability and deduplication. I'm not gonna nitpick your code for style, I'm just a humble bitcoin pleb. But I do know what it's like to scale codebases to be friendly to onboarding new devs. I do think readability should be a concern if we want more devs in bitcoin. e.g. `stack[stack_size - 1]` is repeated all over the place. call it `top_of_stack` and so much more readable! ð¤·ââ ð ",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T21:12:15Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369805872",
      "id" : 369805872,
      "in_reply_to_id" : 369630927,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgwNTg3Mg==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 10,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346905955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369805872",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1731?v=4",
         "events_url" : "https://api.github.com/users/skwp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skwp/followers",
         "following_url" : "https://api.github.com/users/skwp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skwp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skwp",
         "id" : 1731,
         "login" : "skwp",
         "node_id" : "MDQ6VXNlcjE3MzE=",
         "organizations_url" : "https://api.github.com/users/skwp/orgs",
         "received_events_url" : "https://api.github.com/users/skwp/received_events",
         "repos_url" : "https://api.github.com/users/skwp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skwp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skwp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skwp"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369810334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369810334"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well the reason is that the `stack_size` variable changes, so a \"top_of_stack\" one would need to be updated, kinda defeating its meaning.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T21:22:27Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369810334",
      "id" : 369810334,
      "in_reply_to_id" : 369630927,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxMDMzNA==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 10,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 346911857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369810334",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369834460"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369834460"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: a `NONE_EXECUTED` constant would be expressive",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T22:15:55Z",
      "diff_hunk" : "@@ -293,19 +444,25 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n     CScript::const_iterator pbegincodehash = script.begin();\n     opcodetype opcode;\n     valtype vchPushValue;\n-    std::vector<bool> vfExec;\n+    ConditionStack vfExec;\n     std::vector<valtype> altstack;\n     set_error(serror, SCRIPT_ERR_UNKNOWN_ERROR);\n-    if (script.size() > MAX_SCRIPT_SIZE)\n+    if ((sigversion == SigVersion::BASE || sigversion == SigVersion::WITNESS_V0) && script.size() > MAX_SCRIPT_SIZE) {\n         return set_error(serror, SCRIPT_ERR_SCRIPT_SIZE);\n+    }\n+    if (sigversion == SigVersion::TAPSCRIPT && stack.size() > MAX_STACK_SIZE) {\n+        return set_error(serror, SCRIPT_ERR_STACK_SIZE);\n+    }\n     int nOpCount = 0;\n     bool fRequireMinimal = (flags & SCRIPT_VERIFY_MINIMALDATA) != 0;\n+    uint32_t opcode_pos = 0;\n+    execdata.m_codeseparator_pos = 0xFFFFFFFFUL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369834460",
      "id" : 369834460,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzNDQ2MA==",
      "original_commit_id" : "2c55acda1cba362b08e289d60fe77eb8baaeb17e",
      "original_position" : 178,
      "path" : "src/script/interpreter.cpp",
      "position" : 178,
      "pull_request_review_id" : 346942138,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369834460",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369849023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369849023"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In the end, all of this is probably personal taste but I think there is a reason why a lot of those magic numbers are just literals. This number will never need to change.\r\n `sizeof(((secp256k1_schnorrsig){0}).data)` just makes the code harder to read and review (because you need to look up the definition of `secp256k1_schnorrsig`, and it would be a little bit like having a constant `BITS_IN_UINT256 = 256`.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T22:50:55Z",
      "diff_hunk" : "@@ -166,6 +167,23 @@ static int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1\n     return 1;\n }\n \n+bool XOnlyPubKey::VerifySchnorr(const uint256 &hash, const std::vector<unsigned char>& sigbytes) const {\n+    if (sigbytes.size() != 64) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369849023",
      "id" : 369849023,
      "in_reply_to_id" : 369804204,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0OTAyMw==",
      "original_commit_id" : "2c55acda1cba362b08e289d60fe77eb8baaeb17e",
      "original_position" : 13,
      "path" : "src/pubkey.cpp",
      "position" : 13,
      "pull_request_review_id" : 346959975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369849023",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1071625?v=4",
         "events_url" : "https://api.github.com/users/real-or-random/events{/privacy}",
         "followers_url" : "https://api.github.com/users/real-or-random/followers",
         "following_url" : "https://api.github.com/users/real-or-random/following{/other_user}",
         "gists_url" : "https://api.github.com/users/real-or-random/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/real-or-random",
         "id" : 1071625,
         "login" : "real-or-random",
         "node_id" : "MDQ6VXNlcjEwNzE2MjU=",
         "organizations_url" : "https://api.github.com/users/real-or-random/orgs",
         "received_events_url" : "https://api.github.com/users/real-or-random/received_events",
         "repos_url" : "https://api.github.com/users/real-or-random/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/real-or-random/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/real-or-random/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/real-or-random"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369852128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369852128"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems weird to me. How can we verify a signature for a point which does not have a square Y? Such public keys are not defined in bip-schnorr.\r\n\r\nI think it'd be clearer to assert that the pubkey has a square Y before verifying. I'd also suggest adding a `get_xonly_pubkey()` method to `ECKey` so we can directly get the valid bip-schnorr pubkey.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T22:59:23Z",
      "diff_hunk" : "@@ -322,6 +353,40 @@ def verify_ecdsa(self, sig, msg, low_s=True):\n             return False\n         return True\n \n+    def verify_schnorr(self, sig, msg):\n+        assert(len(msg) == 32)\n+        assert(len(sig) == 64)\n+        assert(self.valid)\n+        assert(self.compressed)\n+        r = int.from_bytes(sig[0:32], 'big')\n+        if r >= SECP256K1_FIELD_SIZE:\n+            return False\n+        s = int.from_bytes(sig[32:64], 'big')\n+        if s >= SECP256K1_ORDER:\n+            return False\n+        e = int.from_bytes(TaggedHash(\"BIPSchnorr\", sig[0:32] + self.get_bytes()[1:33] + msg), 'big') % SECP256K1_ORDER\n+        if self.is_positive:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369852128",
      "id" : 369852128,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg1MjEyOA==",
      "original_commit_id" : "2c55acda1cba362b08e289d60fe77eb8baaeb17e",
      "original_position" : 84,
      "path" : "test/functional/test_framework/key.py",
      "position" : null,
      "pull_request_review_id" : 346963790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369852128",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369865203"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369865203"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> This seems weird to me. How can we verify a signature for a point which does not have a square Y? Such public keys are not defined in bip-schnorr.\r\n\r\nHm in fact it's different in yet another way. \r\n - The very pedantic version: bip-schnorr defines public keys to be byte arrays of length 32. \"square y\" does not make sense for byte arrays. \r\n - The less pedantic version: Even if you interpret the byte array as an integer, it's supposed to encode an x-coordinate only. \"square y\" does not make sense for an x-coordinate.\r\n\r\nSee also https://github.com/sipa/bips/blob/bip-schnorr/bip-schnorr/reference.py#L99\r\n\r\nIf we want to be compatible with the existing code here, I'm not sure what the best approach is. Maybe it makes more sense to accept a byte string, then parse it into a point and then use the existing code?\r\nedit: Well okay, I think in the end that's already happening in the code, but I think it will still be cleaner if the `verify_schnorr` function would not take points directly.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T23:39:29Z",
      "diff_hunk" : "@@ -322,6 +353,40 @@ def verify_ecdsa(self, sig, msg, low_s=True):\n             return False\n         return True\n \n+    def verify_schnorr(self, sig, msg):\n+        assert(len(msg) == 32)\n+        assert(len(sig) == 64)\n+        assert(self.valid)\n+        assert(self.compressed)\n+        r = int.from_bytes(sig[0:32], 'big')\n+        if r >= SECP256K1_FIELD_SIZE:\n+            return False\n+        s = int.from_bytes(sig[32:64], 'big')\n+        if s >= SECP256K1_ORDER:\n+            return False\n+        e = int.from_bytes(TaggedHash(\"BIPSchnorr\", sig[0:32] + self.get_bytes()[1:33] + msg), 'big') % SECP256K1_ORDER\n+        if self.is_positive:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369865203",
      "id" : 369865203,
      "in_reply_to_id" : 369852128,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg2NTIwMw==",
      "original_commit_id" : "2c55acda1cba362b08e289d60fe77eb8baaeb17e",
      "original_position" : 84,
      "path" : "test/functional/test_framework/key.py",
      "position" : null,
      "pull_request_review_id" : 346979617,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369865203",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1071625?v=4",
         "events_url" : "https://api.github.com/users/real-or-random/events{/privacy}",
         "followers_url" : "https://api.github.com/users/real-or-random/followers",
         "following_url" : "https://api.github.com/users/real-or-random/following{/other_user}",
         "gists_url" : "https://api.github.com/users/real-or-random/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/real-or-random",
         "id" : 1071625,
         "login" : "real-or-random",
         "node_id" : "MDQ6VXNlcjEwNzE2MjU=",
         "organizations_url" : "https://api.github.com/users/real-or-random/orgs",
         "received_events_url" : "https://api.github.com/users/real-or-random/received_events",
         "repos_url" : "https://api.github.com/users/real-or-random/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/real-or-random/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/real-or-random/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/real-or-random"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369866607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369866607"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The notion is that by tying one constant to a formal description, we can make explicit and enforced a connection that would otherwise be implicit and unenforced. IMO, that such a thing can't be violated is always better than that it won't be violated.\r\n\r\nThere are ways to do that without making the code markedly more complex, such as offloading it to a constant + `static_assert`.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-22T23:44:46Z",
      "diff_hunk" : "@@ -166,6 +167,23 @@ static int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1\n     return 1;\n }\n \n+bool XOnlyPubKey::VerifySchnorr(const uint256 &hash, const std::vector<unsigned char>& sigbytes) const {\n+    if (sigbytes.size() != 64) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369866607",
      "id" : 369866607,
      "in_reply_to_id" : 369804204,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg2NjYwNw==",
      "original_commit_id" : "2c55acda1cba362b08e289d60fe77eb8baaeb17e",
      "original_position" : 13,
      "path" : "src/pubkey.cpp",
      "position" : 13,
      "pull_request_review_id" : 346981391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369866607",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896427"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've changed this code quite a bit. What do you think?",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T01:42:47Z",
      "diff_hunk" : "@@ -231,6 +231,25 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896427",
      "id" : 369896427,
      "in_reply_to_id" : 369630927,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5NjQyNw==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 10,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 347017092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896427",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896642"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T01:43:31Z",
      "diff_hunk" : "@@ -14,6 +14,7 @@ namespace Consensus {\n enum DeploymentPos\n {\n     DEPLOYMENT_TESTDUMMY,\n+    DEPLOYMENT_TAPROOT, // Deployment of taproot (BIPs 340-342)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896642",
      "id" : 369896642,
      "in_reply_to_id" : 369780376,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5NjY0Mg==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 4,
      "path" : "src/consensus/params.h",
      "position" : null,
      "pull_request_review_id" : 347017315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896642",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896679"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T01:43:39Z",
      "diff_hunk" : "@@ -114,32 +120,98 @@ enum\n     // Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts\n     //\n     SCRIPT_VERIFY_CONST_SCRIPTCODE = (1U << 16),\n+\n+    // Taproot validation\n+    //\n+    SCRIPT_VERIFY_TAPROOT = (1U << 17),\n+\n+    // Making unknown taproot leaf versions non-standard",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896679",
      "id" : 369896679,
      "in_reply_to_id" : 369780765,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5NjY3OQ==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 31,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 347017353,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896679",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896713"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T01:43:46Z",
      "diff_hunk" : "@@ -138,6 +138,9 @@ const char* GetOpName(opcodetype opcode)\n     case OP_NOP9                   : return \"OP_NOP9\";\n     case OP_NOP10                  : return \"OP_NOP10\";\n \n+    // taproot",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896713",
      "id" : 369896713,
      "in_reply_to_id" : 369781034,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5NjcxMw==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 4,
      "path" : "src/script/script.cpp",
      "position" : null,
      "pull_request_review_id" : 347017399,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896713",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896841"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T01:44:15Z",
      "diff_hunk" : "@@ -187,6 +198,9 @@ enum opcodetype\n     OP_NOP9 = 0xb8,\n     OP_NOP10 = 0xb9,\n \n+    // taproot",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896841",
      "id" : 369896841,
      "in_reply_to_id" : 369781217,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5Njg0MQ==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 22,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 347017546,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896841",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T01:44:25Z",
      "diff_hunk" : "@@ -1364,7 +1365,11 @@ def test_segwit_versions(self):\n         assert_equal(len(self.nodes[1].getrawmempool()), 0)\n         for version in list(range(OP_1, OP_16 + 1)) + [OP_0]:\n             # First try to spend to a future version segwit script_pubkey.\n-            script_pubkey = CScript([CScriptOp(version), witness_hash])\n+            if version == OP_1:\n+                # Don't use 32-byte v1 witness (used by taproot)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369896888",
      "id" : 369896888,
      "in_reply_to_id" : 369781835,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5Njg4OA==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 14,
      "path" : "test/functional/p2p_segwit.py",
      "position" : null,
      "pull_request_review_id" : 347017604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369896888",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369897072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369897072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T01:44:56Z",
      "diff_hunk" : "@@ -0,0 +1,600 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+# Test taproot softfork.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369897072",
      "id" : 369897072,
      "in_reply_to_id" : 369784302,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5NzA3Mg==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 5,
      "path" : "test/functional/feature_taproot.py",
      "position" : null,
      "pull_request_review_id" : 347017814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369897072",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369897737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369897737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry, I meant it should expire in the future or the taproot deployment will fail to activate.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T01:47:16Z",
      "diff_hunk" : "@@ -83,6 +83,11 @@ class CMainParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n \n+        // Deployment of Taproot\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369897737",
      "id" : 369897737,
      "in_reply_to_id" : 369513725,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5NzczNw==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 6,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 347018496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369897737",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369898283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369898283"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This PR intentionally doesn't include mainnet activation; the values here are just a dummy. Apart from the fact that no activation time (or mechanism) has been established yet, that activation logic will likely be included in a different release than the validation logic (thus needing a separate PR anyway).",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T01:49:06Z",
      "diff_hunk" : "@@ -83,6 +83,11 @@ class CMainParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n \n+        // Deployment of Taproot\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369898283",
      "id" : 369898283,
      "in_reply_to_id" : 369513725,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5ODI4Mw==",
      "original_commit_id" : "1f499c5b67e9f42e90ac115b43b7c7aa9b44a75c",
      "original_position" : 6,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 347019063,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369898283",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910526"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910526"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T02:47:47Z",
      "diff_hunk" : "@@ -114,32 +120,98 @@ enum\n     // Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts\n     //\n     SCRIPT_VERIFY_CONST_SCRIPTCODE = (1U << 16),\n+\n+    // Taproot validation\n+    //\n+    SCRIPT_VERIFY_TAPROOT = (1U << 17),\n+\n+    // Making unknown taproot leaf versions non-standard\n+    //\n+    SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION = (1U << 18),\n+\n+    // Making the use of (unknown) annexes non-standard (currently no annexes are known)\n+    //\n+    SCRIPT_VERIFY_DISCOURAGE_UNKNOWN_ANNEX = (1U << 19),\n+\n+    // Making unknown OP_SUCCESS non-standard\n+    SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS = (1U << 20),\n+\n+    // Making unknown public key versions in tapscript non-standard",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910526",
      "id" : 369910526,
      "in_reply_to_id" : 369791871,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkxMDUyNg==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 42,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 347033160,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910526",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910547"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910547"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T02:47:57Z",
      "diff_hunk" : "@@ -40,6 +40,8 @@ static const bool DEFAULT_PERMIT_BAREMULTISIG = true;\n static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEMS = 100;\n /** The maximum size of each witness stack item in a standard P2WSH script */\n static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEM_SIZE = 80;\n+/** The maximum size of each witness stack item in a standard tapscript */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910547",
      "id" : 369910547,
      "in_reply_to_id" : 369791787,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkxMDU0Nw==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 4,
      "path" : "src/policy/policy.h",
      "position" : null,
      "pull_request_review_id" : 347033191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910547",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910572"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T02:48:06Z",
      "diff_hunk" : "@@ -231,6 +231,31 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check P2TR standard limits\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !prevScript.IsPayToScriptHash()) {\n+            // Taproot spend (non-P2SH-wrapped, version 1, witness program size 32; see BIP 341)\n+            const auto& stack = tx.vin[i].scriptWitness.stack;\n+            size_t stack_size = stack.size();\n+            if (stack_size >= 2 && !stack[stack_size - 1].empty() && stack[stack_size - 1][0] == ANNEX_TAG) {\n+                stack_size--; // Ignore annex if present\n+            }\n+            if (stack_size >= 2) {\n+                // Script path spend (2 or more stack elements are removing optional annex)\n+                if ((stack[stack_size - 1][0] & TAPROOT_LEAF_MASK) == TAPROOT_LEAF_TAPSCRIPT) {\n+                    // Leaf version 0xc0 (aka tapscript, see BIP 342)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910572",
      "id" : 369910572,
      "in_reply_to_id" : 369791691,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkxMDU3Mg==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 16,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 347033220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910572",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910604"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T02:48:15Z",
      "diff_hunk" : "@@ -44,6 +44,17 @@ static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20\n // SEQUENCE_FINAL).\n static const uint32_t LOCKTIME_MAX = 0xFFFFFFFFU;\n \n+// Tag for input annex. If there are at least two witness elements for a transaction input,\n+// and the first byte of the last element is 0x50, this last element is called annex, and\n+// has meanings independent of the script\n+static const unsigned int ANNEX_TAG = 0x50;\n+\n+// Validation weight per passing signature (tapscript only).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910604",
      "id" : 369910604,
      "in_reply_to_id" : 369792013,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkxMDYwNA==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 9,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 347033259,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910604",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910632"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T02:48:23Z",
      "diff_hunk" : "@@ -44,6 +44,17 @@ static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20\n // SEQUENCE_FINAL).\n static const uint32_t LOCKTIME_MAX = 0xFFFFFFFFU;\n \n+// Tag for input annex. If there are at least two witness elements for a transaction input,\n+// and the first byte of the last element is 0x50, this last element is called annex, and\n+// has meanings independent of the script\n+static const unsigned int ANNEX_TAG = 0x50;\n+\n+// Validation weight per passing signature (tapscript only).\n+static constexpr uint64_t VALIDATION_WEIGHT_PER_SIGOP_PASSED = 50;\n+\n+// How much weight budget is added to the witness size (tapscript only).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910632",
      "id" : 369910632,
      "in_reply_to_id" : 369792104,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkxMDYzMg==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 12,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 347033296,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910632",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910663"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T02:48:32Z",
      "diff_hunk" : "@@ -223,11 +229,8 @@ def __new__(cls, n):\n OP_NOP9 = CScriptOp(0xb8)\n OP_NOP10 = CScriptOp(0xb9)\n \n-# template matching params\n-OP_SMALLINTEGER = CScriptOp(0xfa)\n-OP_PUBKEYS = CScriptOp(0xfb)\n-OP_PUBKEYHASH = CScriptOp(0xfd)\n-OP_PUBKEY = CScriptOp(0xfe)\n+# tapscript",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369910663",
      "id" : 369910663,
      "in_reply_to_id" : 369792258,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkxMDY2Mw==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 32,
      "path" : "test/functional/test_framework/script.py",
      "position" : null,
      "pull_request_review_id" : 347033324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369910663",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369915231"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369915231"
         }
      },
      "author_association" : "NONE",
      "body" : "Btw, I wasn't planning to waste your time on this by suggesting to manually fix it up. You can just click apply suggestion on GitHub and it'll create a shared commit.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T03:13:58Z",
      "diff_hunk" : "@@ -14,6 +14,7 @@ namespace Consensus {\n enum DeploymentPos\n {\n     DEPLOYMENT_TESTDUMMY,\n+    DEPLOYMENT_TAPROOT, // Deployment of taproot (BIPs 340-342)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r369915231",
      "id" : 369915231,
      "in_reply_to_id" : 369780376,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkxNTIzMQ==",
      "original_commit_id" : "9f578bfcc7f0b63b50371f5ae046edf2e98fda5b",
      "original_position" : 4,
      "path" : "src/consensus/params.h",
      "position" : null,
      "pull_request_review_id" : 347038715,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T03:13:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369915231",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r370020828"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370020828"
         }
      },
      "author_association" : "NONE",
      "body" : "Use taproot instead of tap?\r\nSIGHASH_TAPROOT_DEFAULT\r\nTAPROOT like other instances, e.g. TAPROOT_PROGRAM_SIZE.\r\n\r\nAlso, SignatureHashTap() renamed to SignatureHashTaproot()?\r\nSimilar to VerifyTaprootCommitment.\r\n",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T09:51:59Z",
      "diff_hunk" : "@@ -24,6 +26,10 @@ enum\n     SIGHASH_NONE = 2,\n     SIGHASH_SINGLE = 3,\n     SIGHASH_ANYONECANPAY = 0x80,\n+\n+    SIGHASH_TAPDEFAULT = 0,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r370020828",
      "id" : 370020828,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyMDgyOA==",
      "original_commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "original_position" : 16,
      "path" : "src/script/interpreter.h",
      "position" : 16,
      "pull_request_review_id" : 347171002,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T09:52:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370020828",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/60021837?v=4",
         "events_url" : "https://api.github.com/users/v1048576/events{/privacy}",
         "followers_url" : "https://api.github.com/users/v1048576/followers",
         "following_url" : "https://api.github.com/users/v1048576/following{/other_user}",
         "gists_url" : "https://api.github.com/users/v1048576/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/v1048576",
         "id" : 60021837,
         "login" : "v1048576",
         "node_id" : "MDQ6VXNlcjYwMDIxODM3",
         "organizations_url" : "https://api.github.com/users/v1048576/orgs",
         "received_events_url" : "https://api.github.com/users/v1048576/received_events",
         "repos_url" : "https://api.github.com/users/v1048576/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/v1048576/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/v1048576/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/v1048576"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r370024599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370024599"
         }
      },
      "author_association" : "NONE",
      "body" : "Why not check against opcode defines? ",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T09:59:10Z",
      "diff_hunk" : "@@ -326,3 +329,11 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n     opcodeRet = static_cast<opcodetype>(opcode);\n     return true;\n }\n+\n+bool IsOpSuccess(const opcodetype& opcode)\n+{\n+    return (opcode == 0x50 || opcode == 0x62 || opcode == 0x89 ||",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r370024599",
      "id" : 370024599,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyNDU5OQ==",
      "original_commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "original_position" : 17,
      "path" : "src/script/script.cpp",
      "position" : 17,
      "pull_request_review_id" : 347175631,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T09:59:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370024599",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/60021837?v=4",
         "events_url" : "https://api.github.com/users/v1048576/events{/privacy}",
         "followers_url" : "https://api.github.com/users/v1048576/followers",
         "following_url" : "https://api.github.com/users/v1048576/following{/other_user}",
         "gists_url" : "https://api.github.com/users/v1048576/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/v1048576",
         "id" : 60021837,
         "login" : "v1048576",
         "node_id" : "MDQ6VXNlcjYwMDIxODM3",
         "organizations_url" : "https://api.github.com/users/v1048576/orgs",
         "received_events_url" : "https://api.github.com/users/v1048576/received_events",
         "repos_url" : "https://api.github.com/users/v1048576/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/v1048576/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/v1048576/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/v1048576"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r370142806"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370142806"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`verify_schnorr` has been updated to be a function that takes a pubkey (32-byte array) instead of being a method on `ECPubKey`.",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T14:18:32Z",
      "diff_hunk" : "@@ -322,6 +353,40 @@ def verify_ecdsa(self, sig, msg, low_s=True):\n             return False\n         return True\n \n+    def verify_schnorr(self, sig, msg):\n+        assert(len(msg) == 32)\n+        assert(len(sig) == 64)\n+        assert(self.valid)\n+        assert(self.compressed)\n+        r = int.from_bytes(sig[0:32], 'big')\n+        if r >= SECP256K1_FIELD_SIZE:\n+            return False\n+        s = int.from_bytes(sig[32:64], 'big')\n+        if s >= SECP256K1_ORDER:\n+            return False\n+        e = int.from_bytes(TaggedHash(\"BIPSchnorr\", sig[0:32] + self.get_bytes()[1:33] + msg), 'big') % SECP256K1_ORDER\n+        if self.is_positive:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r370142806",
      "id" : 370142806,
      "in_reply_to_id" : 369852128,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0MjgwNg==",
      "original_commit_id" : "2c55acda1cba362b08e289d60fe77eb8baaeb17e",
      "original_position" : 84,
      "path" : "test/functional/test_framework/key.py",
      "position" : null,
      "pull_request_review_id" : 347329335,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T14:18:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370142806",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r370147930"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370147930"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should these be updated to be BIP schnorr pubkeys (32-byte arrays)?",
      "commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "created_at" : "2020-01-23T14:27:05Z",
      "diff_hunk" : "@@ -0,0 +1,600 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+# Test Taproot softfork (BIPs 340-342)\n+\n+from test_framework.blocktools import create_coinbase, create_block, add_witness_commitment\n+from test_framework.messages import CTransaction, CTxIn, CTxOut, COutPoint, CTxInWitness\n+from test_framework.script import CScript, TaprootSignatureHash, taproot_construct, OP_0, OP_1, OP_CHECKSIG, OP_CHECKSIGVERIFY, OP_CHECKSIGADD, OP_IF, OP_CODESEPARATOR, OP_ELSE, OP_ENDIF, OP_DROP, LEAF_VERSION_TAPSCRIPT, SIGHASH_SINGLE, is_op_success, CScriptOp, OP_RETURN, OP_VERIF, OP_1NEGATE, OP_EQUAL, OP_SWAP, OP_CHECKMULTISIG, OP_CHECKMULTISIGVERIFY, OP_NOTIF, OP_2DROP, OP_NOT, OP_2DUP, OP_1SUB, OP_DUP, MAX_SCRIPT_ELEMENT_SIZE, LOCKTIME_THRESHOLD, ANNEX_TAG\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_rpc_error, hex_str_to_bytes\n+from test_framework.key import ECKey, SECP256K1_ORDER, verify_schnorr\n+from test_framework.address import program_to_witness\n+from collections import namedtuple\n+from io import BytesIO\n+import random\n+import struct\n+\n+EMPTYWITNESS_ERROR = \"non-mandatory-script-verify-flag (Witness program was passed an empty witness) (code 64)\"\n+INVALIDKEYPATHSIG_ERROR = \"non-mandatory-script-verify-flag (Invalid signature for Taproot key path spending) (code 64)\"\n+UNKNOWNWITNESS_ERROR = \"non-mandatory-script-verify-flag (Witness version reserved for soft-fork upgrades) (code 64)\"\n+\n+DUST_LIMIT = 600\n+MIN_FEE = 5000\n+\n+def tx_from_hex(hexstring):\n+    tx = CTransaction()\n+    f = BytesIO(hex_str_to_bytes(hexstring))\n+    tx.deserialize(f)\n+    return tx\n+\n+def get_taproot_bech32(info):\n+    if isinstance(info, tuple):\n+        info = info[0]\n+    return program_to_witness(1, info[2:])\n+\n+def random_op_success():\n+    ret = 0\n+    while (not is_op_success(ret)):\n+        ret = random.randint(0x50, 0xfe)\n+    return CScriptOp(ret)\n+\n+def random_unknown_leaf_ver(no_annex_tag=True):\n+    ret = LEAF_VERSION_TAPSCRIPT\n+    while (ret == LEAF_VERSION_TAPSCRIPT or (no_annex_tag and ret == (ANNEX_TAG & 0xfe))):\n+        ret = random.randrange(128) * 2\n+    return ret\n+\n+def random_bytes(n):\n+    return bytes(random.getrandbits(8) for i in range(n))\n+\n+def random_script(size, no_success = True):\n+    ret = bytes()\n+    while (len(ret) < size):\n+        remain = size - len(ret)\n+        opcode = random.randrange(256)\n+        while (no_success and is_op_success(opcode)):\n+            opcode = random.randrange(256)\n+        if opcode == 0 or opcode >= OP_1NEGATE:\n+            ret += bytes([opcode])\n+        elif opcode <= 75 and opcode <= remain - 1:\n+            ret += bytes([opcode]) + random_bytes(opcode)\n+        elif opcode == 76 and remain >= 2:\n+            pushsize = random.randint(0, min(0xff, remain - 2))\n+            ret += bytes([opcode]) + bytes([pushsize]) + random_bytes(pushsize)\n+        elif opcode == 77 and remain >= 3:\n+            pushsize = random.randint(0, min(0xffff, remain - 3))\n+            ret += bytes([opcode]) + struct.pack(b'<H', pushsize) + random_bytes(pushsize)\n+        elif opcode == 78 and remain >= 5:\n+            pushsize = random.randint(0, min(0xffffffff, remain - 5))\n+            ret += bytes([opcode]) + struct.pack(b'<I', pushsize) + random_bytes(pushsize)\n+    assert len(ret) == size\n+    return ret\n+\n+def random_invalid_push(size):\n+    assert size > 0\n+    ret = bytes()\n+    opcode = 78\n+    if size <= 75:\n+        opcode = random.randint(75, 78)\n+    elif size <= 255:\n+        opcode = random.randint(76, 78)\n+    elif size <= 0xffff:\n+        opcode = random.randint(77, 78)\n+    if opcode == 75:\n+        ret = bytes([size]) + random_bytes(size - 1)\n+    elif opcode == 76:\n+        ret = bytes([opcode]) + bytes([size]) + random_bytes(size - 2)\n+    elif opcode == 77:\n+        ret = bytes([opcode]) + struct.pack(b'<H', size) + random_bytes(max(0, size - 3))\n+    else:\n+        ret = bytes([opcode]) + struct.pack(b'<I', size) + random_bytes(max(0, size - 5))\n+    assert len(ret) >= size\n+    return ret[:size]\n+\n+def random_checksig_style(pubkey):\n+    opcode = random.choice([OP_CHECKSIG, OP_CHECKSIGVERIFY, OP_CHECKSIGADD])\n+    if (opcode == OP_CHECKSIGVERIFY):\n+        ret = CScript([pubkey, opcode, OP_1])\n+    elif (opcode == OP_CHECKSIGADD):\n+        num = random.choice([0, 0x7fffffff, -0x7fffffff])\n+        ret = CScript([num, pubkey, opcode, num+1, OP_EQUAL])\n+    else:\n+        ret = CScript([pubkey, opcode])\n+    return bytes(ret)\n+\n+def damage_bytes(b):\n+    return (int.from_bytes(b, 'big') ^ (1 << random.randrange(len(b)*8))).to_bytes(len(b), 'big')\n+\n+# Each spender is a tuple of:\n+# - A scriptPubKey (CScript)\n+# - An address for that scriptPubKey (string)\n+# - A comment describing the test (string)\n+# - Whether the spending (on itself) is expected to be standard (bool)\n+# - A witness stack-producing lambda taking as inputs:\n+#   - A transaction to sign (CTransaction)\n+#   - An input position (int)\n+#   - The spent UTXOs by this transaction (list of CTxOut)\n+#   - Whether to produce a valid spend (bool)\n+\n+Spender = namedtuple(\"Spender\", \"script,address,comment,is_standard,sat_function\")\n+\n+def spend_single_sig(tx, input_index, spent_utxos, info, key, annex=None, hashtype=0, prefix=None, suffix=None, script=None, pos=-1, damage=False):\n+    if prefix is None:\n+        prefix = []\n+    if suffix is None:\n+        suffix = []\n+\n+    ht = hashtype\n+\n+    damage_type = random.randrange(5) if damage else -1\n+    '''\n+    * 0. bit flip the sighash\n+    * 1. bit flip the signature\n+    * If the expected hashtype is 0:\n+    -- 2. append a 0 to the signature\n+    -- 3. append a random value of 1-255 to the signature\n+    * If the expected hashtype is not 0:\n+    -- 2. do not append hashtype to the signature\n+    -- 3. append a random incorrect value of 0-255 to the signature\n+    * 4. extra witness element\n+    '''\n+\n+    # Taproot key path spend: tweak key\n+    if script is None:\n+        pubkey = key.get_pubkey()\n+        if not pubkey.is_positive:\n+            key.negate()\n+        key = key.tweak_add(info[1])\n+        assert(key is not None)\n+    # Change SIGHASH_SINGLE into SIGHASH_ALL if no corresponding output\n+    if (ht & 3 == SIGHASH_SINGLE and input_index >= len(tx.vout)):\n+        ht ^= 2\n+    # Compute sighash\n+    if script:\n+        sighash = TaprootSignatureHash(tx, spent_utxos, ht, input_index, scriptpath = True, script = script, codeseparator_pos = pos, annex = annex)\n+    else:\n+        sighash = TaprootSignatureHash(tx, spent_utxos, ht, input_index, scriptpath = False, annex = annex)\n+    if damage_type == 0:\n+        sighash = damage_bytes(sighash)\n+    # Compute signature\n+    sig = key.sign_schnorr(sighash)\n+    if damage_type == 1:\n+        sig = damage_bytes(sig)\n+    if damage_type == 2:\n+        if ht == 0:\n+            sig += bytes([0])\n+    elif damage_type == 3:\n+        random_ht = ht\n+        while random_ht == ht:\n+            random_ht = random.randrange(256)\n+        sig += bytes([random_ht])\n+    elif ht > 0:\n+        sig += bytes([ht])\n+    # Construct witness\n+    ret = prefix + [sig] + suffix\n+    if script is not None:\n+        ret += [script, info[2][script]]\n+    if annex is not None:\n+        ret += [annex]\n+    if damage_type == 4:\n+        ret = [random_bytes(random.randrange(5))] + ret\n+    tx.wit.vtxinwit[input_index].scriptWitness.stack = ret\n+\n+def spend_alwaysvalid(tx, input_index, info, script, annex=None, damage=False):\n+    if isinstance(script, tuple):\n+        version, script = script\n+    ret = [script, info[2][script]]\n+    if damage:\n+        # With 50% chance, we bit flip the script (unless the script is an empty vector)\n+        # With 50% chance, we bit flip the control block\n+        if random.choice([True, False]) or len(ret[0]) == 0:\n+            # Annex is always required for leaf version 0x50\n+            # Unless the original version is 0x50, we couldn't convert it to 0x50 without using annex\n+            tmp = damage_bytes(ret[1])\n+            while annex is None and tmp[0] == ANNEX_TAG and ret[1][0] != ANNEX_TAG:\n+                tmp = damage_bytes(ret[1])\n+            ret[1] = tmp\n+        else:\n+            ret[0] = damage_bytes(ret[0])\n+    if annex is not None:\n+        ret += [annex]\n+    # Randomly add input witness\n+    if random.choice([True, False]):\n+        for i in range(random.randint(1, 10)):\n+            ret = [random_bytes(random.randint(0, MAX_SCRIPT_ELEMENT_SIZE*2))] + ret\n+    tx.wit.vtxinwit[input_index].scriptWitness.stack = ret\n+\n+def spender_sighash_mutation(spenders, info, comment, standard=True, **kwargs):\n+    spk = info[0]\n+    addr = get_taproot_bech32(info)\n+\n+    def fn(t, i, u, v):\n+        return spend_single_sig(t, i, u, damage=not v, info=info, **kwargs)\n+\n+    spenders.append(Spender(script=spk, address=addr, comment=comment, is_standard=standard, sat_function=fn))\n+\n+def spender_two_paths(spenders, info, comment, standard, success, failure):\n+    spk = info[0]\n+    addr = get_taproot_bech32(info)\n+\n+    def fn(t, i, u, v):\n+        return spend_single_sig(t, i, u, damage=False, info=info, **(success if v else failure))\n+\n+    spenders.append(Spender(script=spk, address=addr, comment=comment, is_standard=standard, sat_function=fn))\n+\n+def spender_alwaysvalid(spenders, info, comment, **kwargs):\n+    spk = info[0]\n+    addr = get_taproot_bech32(info)\n+\n+    def fn(t, i, u, v):\n+        return spend_alwaysvalid(t, i, damage=not v, info=info, **kwargs)\n+\n+    spenders.append(Spender(script=spk, address=addr, comment=comment, is_standard=False, sat_function=fn))\n+\n+def nested_script(script, depth):\n+    if depth == 0:\n+        return script\n+    return [nested_script(script, depth - 1), CScript([OP_RETURN])]\n+\n+UTXOData = namedtuple('UTXOData', 'input,output,spender')\n+\n+class TAPROOTTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-whitelist=127.0.0.1\", \"-acceptnonstdtxn=0\", \"-par=1\"]]\n+\n+    def block_submit(self, node, txs, msg, cb_pubkey=None, fees=0, witness=False, accept=False):\n+        block = create_block(self.tip, create_coinbase(self.lastblockheight + 1, pubkey=cb_pubkey, fees=fees), self.lastblocktime + 1)\n+        block.nVersion = 4\n+        for tx in txs:\n+            tx.rehash()\n+            block.vtx.append(tx)\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+        witness and add_witness_commitment(block)\n+        block.rehash()\n+        block.solve()\n+        node.submitblock(block.serialize(True).hex())\n+        if (accept):\n+            assert node.getbestblockhash() == block.hash, \"Failed to accept: \" + msg\n+            self.tip = block.sha256\n+            self.lastblockhash = block.hash\n+            self.lastblocktime += 1\n+            self.lastblockheight += 1\n+        else:\n+            assert node.getbestblockhash() == self.lastblockhash, \"Failed to reject: \" + msg\n+\n+    def test_spenders(self, spenders, input_counts):\n+        \"\"\"Run randomized tests with a number of \"spenders\".\n+\n+\n+        Each spender embodies a test; in a large randomized test, it is verified\n+        that toggling the valid argument to each lambda toggles the validity of\n+        the transaction. This is accomplished by constructing transactions consisting\n+        of all valid inputs, except one invalid one.\n+        \"\"\"\n+\n+        # Construct a UTXO to spend for each of the spenders\n+        self.nodes[0].generate(110)\n+        bal = self.nodes[0].getbalance() * 3 / (4*len(spenders))\n+        random.shuffle(spenders)\n+        num_spenders = len(spenders)\n+        utxos = []\n+        while len(spenders):\n+            # Create the necessary outputs in multiple transactions, as sPKs may be repeated (which sendmany does not support)\n+            outputs = {}\n+            new_spenders = []\n+            batch = []\n+            for spender in spenders:\n+                addr = spender.address\n+                if len(batch) == 100 or addr in outputs:\n+                    new_spenders.append(spender)\n+                else:\n+                    amount = random.randrange(int(bal * 95000000), int(bal * 105000000))\n+                    outputs[addr] = amount / 100000000\n+                    batch.append(spender)\n+            self.log.info(\"Constructing %i UTXOs for spending tests\" % len(batch))\n+            tx = tx_from_hex(self.nodes[0].getrawtransaction(self.nodes[0].sendmany(\"\", outputs)))\n+            tx.rehash()\n+            spenders = new_spenders\n+            random.shuffle(spenders)\n+\n+            # Map created UTXOs back to the spenders they were created for\n+            for n, out in enumerate(tx.vout):\n+                for spender in batch:\n+                    if out.scriptPubKey == spender.script:\n+                        utxos.append(UTXOData(input=COutPoint(tx.sha256, n), output=out, spender=spender))\n+                        break\n+        assert(len(utxos) == num_spenders)\n+        random.shuffle(utxos)\n+        self.nodes[0].generate(1)\n+\n+        # Construct a bunch of sPKs that send coins back to the host wallet\n+        self.log.info(\"Constructing 100 addresses for returning coins\")\n+        host_spks = []\n+        host_pubkeys = []\n+        for i in range(100):\n+            addr = self.nodes[0].getnewaddress(address_type=random.choice([\"legacy\", \"p2sh-segwit\", \"bech32\"]))\n+            info = self.nodes[0].getaddressinfo(addr)\n+            spk = hex_str_to_bytes(info['scriptPubKey'])\n+            host_spks.append(spk)\n+            host_pubkeys.append(hex_str_to_bytes(info['pubkey']))\n+\n+        # Pick random subsets of UTXOs to construct transactions with\n+        self.lastblockhash = self.nodes[0].getbestblockhash()\n+        self.tip = int(\"0x\" + self.lastblockhash, 0)\n+        block = self.nodes[0].getblock(self.lastblockhash)\n+        self.lastblockheight = block['height']\n+        self.lastblocktime = block['time']\n+        while len(utxos):\n+            tx = CTransaction()\n+            tx.nVersion = random.choice([1, 2, random.randint(-0x80000000,0x7fffffff)])\n+            min_sequence = (tx.nVersion != 1 and tx.nVersion != 0) * 0x80000000 # The minimum sequence number to disable relative locktime\n+            if random.choice([True, False]):\n+                tx.nLockTime = random.randrange(LOCKTIME_THRESHOLD, self.lastblocktime - 7200) # all absolute locktimes in the past\n+            else:\n+                tx.nLockTime = random.randrange(self.lastblockheight+1) # all block heights in the past\n+\n+            # Pick 1 to 4 UTXOs to construct transaction inputs\n+            acceptable_input_counts = [cnt for cnt in input_counts if cnt <= len(utxos)]\n+            while True:\n+                inputs = random.choice(acceptable_input_counts)\n+                remaining = len(utxos) - inputs\n+                if remaining == 0 or remaining >= max(input_counts) or remaining in input_counts:\n+                    break\n+            input_utxos = utxos[-inputs:]\n+            utxos = utxos[:-inputs]\n+            fee = random.randrange(MIN_FEE * 2, MIN_FEE * 4) # 10000-20000 sat fee\n+            in_value = sum(utxo.output.nValue for utxo in input_utxos) - fee\n+            tx.vin = [CTxIn(outpoint = input_utxos[i].input, nSequence = random.randint(min_sequence, 0xffffffff)) for i in range(inputs)]\n+            tx.wit.vtxinwit = [CTxInWitness() for i in range(inputs)]\n+            self.log.info(\"Test: %s\" % (\", \".join(utxo.spender.comment for utxo in input_utxos)))\n+\n+            # Add 1 to 4 outputs\n+            outputs = random.choice([1,2,3,4])\n+            assert in_value >= 0 and fee - outputs * DUST_LIMIT >= MIN_FEE\n+            for i in range(outputs):\n+                tx.vout.append(CTxOut())\n+                if in_value <= DUST_LIMIT:\n+                    tx.vout[-1].nValue = DUST_LIMIT\n+                elif i < outputs - 1:\n+                    tx.vout[-1].nValue = in_value\n+                else:\n+                    tx.vout[-1].nValue = random.randint(DUST_LIMIT, in_value)\n+                in_value -= tx.vout[-1].nValue\n+                tx.vout[-1].scriptPubKey = random.choice(host_spks)\n+            fee += in_value\n+            assert(fee >= 0)\n+\n+            # For each inputs, make it fail once; then succeed once\n+            for fail_input in range(inputs + 1):\n+                # Wipe scriptSig/witness\n+                for i in range(inputs):\n+                    tx.vin[i].scriptSig = CScript()\n+                    tx.wit.vtxinwit[i] = CTxInWitness()\n+                # Fill inputs/witnesses\n+                for i in range(inputs):\n+                    fn = input_utxos[i].spender.sat_function\n+                    fn(tx, i, [utxo.output for utxo in input_utxos], i != fail_input)\n+                # Submit to mempool to check standardness\n+                standard = fail_input == inputs and all(utxo.spender.is_standard for utxo in input_utxos) and tx.nVersion >= 1 and tx.nVersion <= 2\n+                if standard:\n+                    self.nodes[0].sendrawtransaction(tx.serialize().hex(), 0)\n+                    assert(self.nodes[0].getmempoolentry(tx.hash) is not None)\n+                else:\n+                    assert_raises_rpc_error(-26, None, self.nodes[0].sendrawtransaction, tx.serialize().hex(), 0)\n+                # Submit in a block\n+                tx.rehash()\n+                msg = ','.join(utxo.spender.comment + (\"*\" if n == fail_input else \"\") for n, utxo in enumerate(input_utxos))\n+                self.block_submit(self.nodes[0], [tx], msg, witness=True, accept=fail_input == inputs, cb_pubkey=random.choice(host_pubkeys), fees=fee)\n+\n+    def build_spenders(self):\n+        VALID_SIGHASHES = [0,1,2,3,0x81,0x82,0x83]\n+        spenders = []\n+\n+        for annex in [None, bytes([ANNEX_TAG]) + random_bytes(random.randrange(0, 250))]:\n+            standard = annex is None\n+            sec1, sec2 = ECKey(), ECKey()\n+            sec1.generate()\n+            sec2.generate()\n+            pub1, pub2 = sec1.get_pubkey(), sec2.get_pubkey()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17977#discussion_r370147930",
      "id" : 370147930,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0NzkzMA==",
      "original_commit_id" : "41acd620b5a0018b9ab5eb709ef54fafa8937324",
      "original_position" : 403,
      "path" : "test/functional/feature_taproot.py",
      "position" : 403,
      "pull_request_review_id" : 347336167,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17977",
      "updated_at" : "2020-01-23T14:27:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370147930",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
