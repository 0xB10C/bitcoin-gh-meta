[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-01-17T22:54:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-575826218",
      "id" : 575826218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTgyNjIxOA==",
      "updated_at" : "2020-01-17T22:54:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575826218",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17543](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17543.html) (wallet: undo conflicts properly in case of blocks disconnection by ariard)\n* [#17484](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17484.html) (wallet: add cached m_is_ibd to remove Chain::isInitialBlockDownload by ariard)\n* [#17261](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17261.html) (Make ScriptPubKeyMan an actual interface and the wallet to have multiple by achow101)\n* [#17208](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17208.html) (Make all tests pass UBSan without using any UBSan suppressions by practicalswift)\n* [#16528](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16528.html) ([WIP] Native Descriptor Wallets (take 2) by achow101)\n* [#16224](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16224.html) (gui: Bilingual GUI error messages by hebasto)\n* [#14942](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14942.html) (wallet: Make scan / abort status private to CWallet by Empact)\n* [#9381](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9381.html) (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-01-18T00:58:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-575848948",
      "id" : 575848948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTg0ODk0OA==",
      "updated_at" : "2020-01-23T19:42:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575848948",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369209911"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369209911"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "cfc9373\r\n\r\nIt just occurs to me than this assert and the one in GetLastBlockHeight (than I introduced in 5aacc3e) are unsafe if we don't have a Chain interface from which to query block height at wallet creation (CreateWalletFromFile) but that's something to keep in mind if in the future you can run the wallet without a chain.",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-21T19:52:45Z",
      "diff_hunk" : "@@ -1145,6 +1145,12 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n         assert(m_last_block_processed_height >= 0);\n         return m_last_block_processed_height;\n     };\n+    uint256 GetLastBlockHash() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet)\n+    {\n+        AssertLockHeld(cs_wallet);\n+        assert(m_last_block_processed_height >= 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369209911",
      "id" : 369209911,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIwOTkxMQ==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_position" : 7,
      "path" : "src/wallet/wallet.h",
      "position" : 16,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369209911",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369216493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369216493"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "cfc9373\r\n\r\nAs noted in commit, we may have asynchronicity between node and wallet w.r.t block processing. So returned block time may not be the one of last block height. To avoid this we may cache block time to fetch it when needed with `GetLastBlockTime`. It would also remove some `getBlockTime` (but not all last time I looked on).",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-21T20:06:18Z",
      "diff_hunk" : "@@ -330,13 +330,9 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n-        } else {\n-            num_blocks = -1;\n-            block_time = -1;\n-        }\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        block_time = -1;\n+        m_wallet->chain().findBlock(m_wallet->GetLastBlockHash(), nullptr, &block_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369216493",
      "id" : 369216493,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIxNjQ5Mw==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_position" : 13,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 22,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369216493",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369228377"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369228377"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "e399fb4\r\n\r\nPreviously, `getBlockHeight` would have return nullopt if `merkleBlock` have been out of chain. With this change, a height can be returned and ancestry asserted while node and walle tip being unsynchronized, so `merkleBlock` have been reorged out. IMO that's fine if rpc caller is aware than processing have been done with best-wallet-knowledge. ",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-21T20:33:36Z",
      "diff_hunk" : "@@ -359,8 +359,9 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     }\n \n     auto locked_chain = pwallet->chain().lock();\n-    Optional<int> height = locked_chain->getBlockHeight(merkleBlock.header.GetHash());\n-    if (height == nullopt) {\n+    LOCK(pwallet->cs_wallet);\n+    int height;\n+    if (!pwallet->chain().findAncestor(pwallet->GetLastBlockHash(), merkleBlock.header.GetHash(), &height)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369228377",
      "id" : 369228377,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIyODM3Nw==",
      "original_commit_id" : "e399fb49e81416267bb708075ab0a377cacf969d",
      "original_position" : 8,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369228377",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369229559"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369229559"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "673e0b6\r\n\r\nAnother candidate for `GetLastBlockTime`",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-21T20:36:17Z",
      "diff_hunk" : "@@ -789,9 +788,10 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     // produce output\n     file << strprintf(\"# Wallet dump created by Bitcoin %s\\n\", CLIENT_BUILD);\n     file << strprintf(\"# * Created on %s\\n\", FormatISO8601DateTime(GetTime()));\n-    const Optional<int> tip_height = locked_chain->getHeight();\n-    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height.get_value_or(-1), tip_height ? locked_chain->getBlockHash(*tip_height).ToString() : \"(missing block hash)\");\n-    file << strprintf(\"#   mined on %s\\n\", tip_height ? FormatISO8601DateTime(locked_chain->getBlockTime(*tip_height)) : \"(missing block time)\");\n+    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", pwallet->GetLastBlockHeight(), pwallet->GetLastBlockHash().ToString());\n+    int64_t block_time = 0;\n+    pwallet->chain().findBlock(pwallet->GetLastBlockHash(), nullptr, &block_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369229559",
      "id" : 369229559,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIyOTU1OQ==",
      "original_commit_id" : "673e0b6e7c9f671096f4056f9db69ec43d5b4a3b",
      "original_position" : 19,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 44,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369229559",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369234155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369234155"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "673e0b6\r\n\r\nI'm not sure about the commit message, IMO it's less accurate but on the whole make the rescan protection better by starting farther in the past. Anyway, being based on wallet tip or node tip should be safe given the range of TIMESTAMP_WINDOW",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-21T20:46:33Z",
      "diff_hunk" : "@@ -564,8 +564,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n-        nTimeBegin = tip_height ? locked_chain->getBlockTime(*tip_height) : 0;\n+        pwallet->chain().findBlock(pwallet->GetLastBlockHash(), nullptr, &nTimeBegin);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369234155",
      "id" : 369234155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIzNDE1NQ==",
      "original_commit_id" : "673e0b6e7c9f671096f4056f9db69ec43d5b4a3b",
      "original_position" : 6,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 31,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369234155",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369238043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369238043"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "1f4b604\r\n\r\nIf #17443 gets first + `GetLastBlockTime`, you may avoid to call `findBlock` here.",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-21T20:55:30Z",
      "diff_hunk" : "@@ -1364,20 +1364,13 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n         EnsureWalletIsUnlocked(pwallet);\n \n         // Verify all timestamps are present before importing any keys.\n-        const Optional<int> tip_height = locked_chain->getHeight();\n-        now = tip_height ? locked_chain->getBlockMedianTimePast(*tip_height) : 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369238043",
      "id" : 369238043,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIzODA0Mw==",
      "original_commit_id" : "1f4b60471730fb5961096fef286c1bd6ec2538b8",
      "original_position" : 5,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 54,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369238043",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262300"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> [cfc9373](https://github.com/bitcoin/bitcoin/commit/cfc9373305eed32cd27eb436b555b06bc470dcbf)\r\n> \r\n> As noted in commit, we may have asynchronicity between node and wallet w.r.t block processing. So returned block time may not be the one of last block height. To avoid this we may cache block time to fetch it when needed with `GetLastBlockTime`. It would also remove some `getBlockTime` (but not all last time I looked on).\r\n\r\nJust to be clear, height and time here should be in sync due to cs_wallet being held above. Could still cache the time though. Commit description is saying how the GUI display should be more up to date after this commit, because the transaction data and num blocks value will be in sync, instead of a higher num blocks being returned with older transaction data",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-21T21:51:22Z",
      "diff_hunk" : "@@ -330,13 +330,9 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n-        } else {\n-            num_blocks = -1;\n-            block_time = -1;\n-        }\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        block_time = -1;\n+        m_wallet->chain().findBlock(m_wallet->GetLastBlockHash(), nullptr, &block_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262300",
      "id" : 369262300,
      "in_reply_to_id" : 369216493,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2MjMwMA==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_position" : 13,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 22,
      "pull_request_review_id" : 346216892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262300",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262347"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262347"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> [cfc9373](https://github.com/bitcoin/bitcoin/commit/cfc9373305eed32cd27eb436b555b06bc470dcbf)\r\n> \r\n> It just occurs to me than this assert and the one in GetLastBlockHeight (than I introduced in [5aacc3e](https://github.com/bitcoin/bitcoin/commit/5aacc3eff15b9b5bdc951f1e274f00d581f63bce)) are unsafe if we don't have a Chain interface from which to query block height at wallet creation (CreateWalletFromFile) but that's something to keep in mind if in the future you can run the wallet without a chain.\r\n\r\nYes, I think these cases would only be hit when running wallet code offline with the `bitcoin-wallet` tool or something similar. But if we add more offline features more code will have to change to be flexible about missing data",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-21T21:51:28Z",
      "diff_hunk" : "@@ -1145,6 +1145,12 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n         assert(m_last_block_processed_height >= 0);\n         return m_last_block_processed_height;\n     };\n+    uint256 GetLastBlockHash() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet)\n+    {\n+        AssertLockHeld(cs_wallet);\n+        assert(m_last_block_processed_height >= 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262347",
      "id" : 369262347,
      "in_reply_to_id" : 369209911,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2MjM0Nw==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_position" : 7,
      "path" : "src/wallet/wallet.h",
      "position" : 16,
      "pull_request_review_id" : 346216892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262347",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262624"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369228377\r\n\r\n> [e399fb4](https://github.com/bitcoin/bitcoin/commit/e399fb49e81416267bb708075ab0a377cacf969d)\r\n> \r\n> Previously, `getBlockHeight` would have return nullopt if `merkleBlock` have been out of chain. With this change, a height can be returned and ancestry asserted while node and walle tip being unsynchronized, so `merkleBlock` have been reorged out. IMO that's fine if rpc caller is aware than processing have been done with best-wallet-knowledge.\r\n\r\nThanks, will add these details to the commit description. I think \"best-wallet-knowledge\" can really be the only safe assumption for calling wallet rpcs if we're going to let the wallet act asynchronously from the node",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-21T21:52:05Z",
      "diff_hunk" : "@@ -359,8 +359,9 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     }\n \n     auto locked_chain = pwallet->chain().lock();\n-    Optional<int> height = locked_chain->getBlockHeight(merkleBlock.header.GetHash());\n-    if (height == nullopt) {\n+    LOCK(pwallet->cs_wallet);\n+    int height;\n+    if (!pwallet->chain().findAncestor(pwallet->GetLastBlockHash(), merkleBlock.header.GetHash(), &height)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262624",
      "id" : 369262624,
      "in_reply_to_id" : 369228377,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2MjYyNA==",
      "original_commit_id" : "e399fb49e81416267bb708075ab0a377cacf969d",
      "original_position" : 8,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 346216892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262624",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369278492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369278492"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> [673e0b6](https://github.com/bitcoin/bitcoin/commit/673e0b6e7c9f671096f4056f9db69ec43d5b4a3b)\r\n> \r\n> I'm not sure about the commit message, IMO it's less accurate but on the whole make the rescan protection better by starting farther in the past. Anyway, being based on wallet tip or node tip should be safe given the range of TIMESTAMP_WINDOW\r\n\r\nHmm, I'm not sure when it would be less accurate. Are you thinking of a case?",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-21T22:30:03Z",
      "diff_hunk" : "@@ -564,8 +564,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n-        nTimeBegin = tip_height ? locked_chain->getBlockTime(*tip_height) : 0;\n+        pwallet->chain().findBlock(pwallet->GetLastBlockHash(), nullptr, &nTimeBegin);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369278492",
      "id" : 369278492,
      "in_reply_to_id" : 369234155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3ODQ5Mg==",
      "original_commit_id" : "673e0b6e7c9f671096f4056f9db69ec43d5b4a3b",
      "original_position" : 6,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 31,
      "pull_request_review_id" : 346216892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369278492",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Added 3 commits aeba8afaf5d12fd7b2552616f817712d4fc5062e -> 60e6595f5cfd266c14c48994b0bb4afb5bf7fcb3 ([`pr/unlock.2`](https://github.com/ryanofsky/bitcoin/commits/pr/unlock.2) -> [`pr/unlock.3`](https://github.com/ryanofsky/bitcoin/commits/pr/unlock.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/unlock.2...pr/unlock.3)) and removed PR draft status. \r\n\r\nI think this is basically done. Combined with #17443 it should remove all calls to `interfaces::Chain::Lock` methods after wallet loading (#15719 should clean up loading). I'm hoping this PR and #17443 can be merged before #16426 so #16426 can be a little smaller and change wallet behavior less.",
      "created_at" : "2020-01-22T22:32:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-577417495",
      "id" : 577417495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NzQxNzQ5NQ==",
      "updated_at" : "2020-01-22T22:32:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577417495",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r372726164"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372726164"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Even further than cs_wallet, we are still holding cs_main there through the chain lock. When we're going to remove locked_chain we may have asynchronicity due to to height being based on BlockConnected locked by cs_wallet and findBlock locked by cs_main ?",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-30T01:57:52Z",
      "diff_hunk" : "@@ -330,13 +330,9 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n-        } else {\n-            num_blocks = -1;\n-            block_time = -1;\n-        }\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        block_time = -1;\n+        m_wallet->chain().findBlock(m_wallet->GetLastBlockHash(), nullptr, &block_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r372726164",
      "id" : 372726164,
      "in_reply_to_id" : 369216493,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNjE2NA==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_position" : 13,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 22,
      "pull_request_review_id" : 350542553,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372726164",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r372727093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372727093"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369234155\r\n\r\nI think I meaned because we rely now on wallet last block hash instead of main tip and we may be late from one block, so in my opinion we are _less_ accurate from one block but we agree on rescan being safer. Nit interpretation, doesn't matter.",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-30T02:02:22Z",
      "diff_hunk" : "@@ -564,8 +564,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n-        nTimeBegin = tip_height ? locked_chain->getBlockTime(*tip_height) : 0;\n+        pwallet->chain().findBlock(pwallet->GetLastBlockHash(), nullptr, &nTimeBegin);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r372727093",
      "id" : 372727093,
      "in_reply_to_id" : 369234155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNzA5Mw==",
      "original_commit_id" : "673e0b6e7c9f671096f4056f9db69ec43d5b4a3b",
      "original_position" : 6,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 31,
      "pull_request_review_id" : 350543701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372727093",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks Russ, will review new changes soon.\r\n\r\n> I think it's probably a good idea. It would use some more memory though, and it's unclear if it the change would simplify this PR or not overlap much. I think it's probably something to try out separately.\r\n\r\nI've a branch doing it, I can try to rebase it on top of this one and squeeze a last one before #16426. ",
      "created_at" : "2020-01-30T02:06:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-580050909",
      "id" : 580050909,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDA1MDkwOQ==",
      "updated_at" : "2020-01-30T02:06:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580050909",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-01-30T06:07:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-580098152",
      "id" : 580098152,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDA5ODE1Mg==",
      "updated_at" : "2020-01-30T06:07:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580098152",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r373682174"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373682174"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369216493\r\n\r\n(Relevant commit is cfc9373305eed32cd27eb436b555b06bc470dcbf)\r\n\r\n> Even further than cs_wallet, we are still holding cs_main there through the chain lock. When we're going to remove locked_chain we may have asynchronicity due to to height being based on BlockConnected locked by cs_wallet and findBlock locked by cs_main ?\r\n\r\nThe GUI is asynchronous by design. It just needs to display internally consistent information within a transaction, and be able to determine if the information is fresh or out of date. The `num_blocks` height here returned to gui is used for that freshness check, so the new value set here should be better than the previous value for that. More ideally, though `num_blocks` will be replaced by a hash, which #17993 starts to do",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-31T20:58:03Z",
      "diff_hunk" : "@@ -330,13 +330,9 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n-        } else {\n-            num_blocks = -1;\n-            block_time = -1;\n-        }\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        block_time = -1;\n+        m_wallet->chain().findBlock(m_wallet->GetLastBlockHash(), nullptr, &block_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r373682174",
      "id" : 373682174,
      "in_reply_to_id" : 369216493,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MjE3NA==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_position" : 13,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 22,
      "pull_request_review_id" : 351773079,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373682174",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r373695152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373695152"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369234155\r\n\r\n> I think I meaned because we rely now on wallet last block hash instead of main tip and we may be late from one block, so in my opinion we are _less_ accurate from one block but we agree on rescan being safer. Nit interpretation, doesn't matter.\r\n\r\nI think in the case you are talking about the block height/hash/time values in the backup are now more accurate than before because cs_wallet is locked already. So the backup information make will be consistent with the wallet block tip, not the node block tip, in any cases where they are different",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-01-31T21:32:45Z",
      "diff_hunk" : "@@ -564,8 +564,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n-        nTimeBegin = tip_height ? locked_chain->getBlockTime(*tip_height) : 0;\n+        pwallet->chain().findBlock(pwallet->GetLastBlockHash(), nullptr, &nTimeBegin);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r373695152",
      "id" : 373695152,
      "in_reply_to_id" : 369234155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5NTE1Mg==",
      "original_commit_id" : "673e0b6e7c9f671096f4056f9db69ec43d5b4a3b",
      "original_position" : 6,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 31,
      "pull_request_review_id" : 351773079,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373695152",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377880523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377880523"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think `num_blocks` is even used. There's only one place that this interface function is called and it doesn't use the result. Can you just remove it?",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-11T20:29:58Z",
      "diff_hunk" : "@@ -389,7 +385,7 @@ class WalletImpl : public Wallet\n             return false;\n         }\n         balances = getBalances();\n-        num_blocks = locked_chain->getHeight().get_value_or(-1);\n+        num_blocks = m_wallet->GetLastBlockHeight();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377880523",
      "id" : 377880523,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg4MDUyMw==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_position" : 31,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 31,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377880523",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377892009"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377892009"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree that caching the last block time would make some of these commits easier.",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-11T20:53:53Z",
      "diff_hunk" : "@@ -1364,20 +1364,13 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n         EnsureWalletIsUnlocked(pwallet);\n \n         // Verify all timestamps are present before importing any keys.\n-        const Optional<int> tip_height = locked_chain->getHeight();\n-        now = tip_height ? locked_chain->getBlockMedianTimePast(*tip_height) : 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377892009",
      "id" : 377892009,
      "in_reply_to_id" : 369238043,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5MjAwOQ==",
      "original_commit_id" : "1f4b60471730fb5961096fef286c1bd6ec2538b8",
      "original_position" : 5,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 54,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377892009",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377949561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377949561"
         }
      },
      "author_association" : "MEMBER",
      "body" : "'specified blocks' is a bit vague. Can you be more precise about what `block_hash` `min_height` and `max_height` mean?",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-11T22:56:35Z",
      "diff_hunk" : "@@ -145,6 +164,9 @@ class Chain\n     //! the specified block hash are verified.\n     virtual double guessVerificationProgress(const uint256& block_hash) = 0;\n \n+    //! Return true if data is available for the specified blocks.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377949561",
      "id" : 377949561,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0OTU2MQ==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_position" : 68,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377949561",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952195"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377952195"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`GetLastBlockHeight()` can't return a `tip_height` that's < 0, so I think you can just remove `|| tip_height < 0 `",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-11T23:03:36Z",
      "diff_hunk" : "@@ -3546,22 +3545,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;\n+    uint256 start_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        LOCK(pwallet->cs_wallet);\n+        int tip_height = pwallet->GetLastBlockHeight();\n \n         if (!request.params[0].isNull()) {\n             start_height = request.params[0].get_int();\n-            if (start_height < 0 || !tip_height || start_height > *tip_height) {\n+            if (start_height < 0 || tip_height < 0 || start_height > tip_height) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952195",
      "id" : 377952195,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1MjE5NQ==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_position" : 48,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377952195",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377952847"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do you need to hold the wallet lock for this entire block? Does it make sense to call:\r\n\r\n```\r\nWITH_LOCK(pwallet->cs_wallet, pwallet->GetLastBlockHeight());\r\n```",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-11T23:05:16Z",
      "diff_hunk" : "@@ -3546,22 +3545,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;\n+    uint256 start_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        LOCK(pwallet->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952847",
      "id" : 377952847,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1Mjg0Nw==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_position" : 42,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 42,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377952847",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377953378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377953378"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Again, I think this is always true, so you can remove this conditional.",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-11T23:06:43Z",
      "diff_hunk" : "@@ -3570,25 +3570,17 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n \n         // We can't rescan beyond non-pruned blocks, stop and throw an error\n-        if (locked_chain->findPruned(start_height, stop_height)) {\n+        if (!pwallet->chain().hasBlocks(pwallet->GetLastBlockHash(), start_height, stop_height)) {\n             throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n         }\n \n-        if (tip_height) {\n-            start_block = locked_chain->getBlockHash(start_height);\n-            // If called with a stop_height, set the stop_height here to\n-            // trigger a rescan to that height.\n-            // If called without a stop height, leave stop_height as null here\n-            // so rescan continues to the tip (even if the tip advances during\n-            // rescan).\n-            if (stop_height) {\n-                stop_block = locked_chain->getBlockHash(*stop_height);\n-            }\n+        if (tip_height >= 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377953378",
      "id" : 377953378,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1MzM3OA==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_position" : 80,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377953378",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513140"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377949561\r\n\r\n> 'specified blocks' is a bit vague. Can you be more precise about what `block_hash` `min_height` and `max_height` mean?\r\n\r\nAdded description, also made min_height not `Optional` since nullopt was equivalent to 0",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-12T21:08:31Z",
      "diff_hunk" : "@@ -145,6 +164,9 @@ class Chain\n     //! the specified block hash are verified.\n     virtual double guessVerificationProgress(const uint256& block_hash) = 0;\n \n+    //! Return true if data is available for the specified blocks.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513140",
      "id" : 378513140,
      "in_reply_to_id" : 377949561,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxMzE0MA==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_position" : 68,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 357788103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:36:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513140",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513213"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513213"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377880523\r\n\r\n> I don't think `num_blocks` is even used. There's only one place that this interface function is called and it doesn't use the result. Can you just remove it?\r\n\r\nGood catch, and thanks for bringing it up, it is fixed in #18123",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-12T21:08:39Z",
      "diff_hunk" : "@@ -389,7 +385,7 @@ class WalletImpl : public Wallet\n             return false;\n         }\n         balances = getBalances();\n-        num_blocks = locked_chain->getHeight().get_value_or(-1);\n+        num_blocks = m_wallet->GetLastBlockHeight();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513213",
      "id" : 378513213,
      "in_reply_to_id" : 377880523,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxMzIxMw==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_position" : 31,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 31,
      "pull_request_review_id" : 357788103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:36:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513213",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513330"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513330"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952847\r\n\r\n> Do you need to hold the wallet lock for this entire block? Does it make sense to call:\r\n> \r\n> ```\r\n> WITH_LOCK(pwallet->cs_wallet, pwallet->GetLastBlockHeight());\r\n> ```\r\n\r\nThe lock is also needed for the GetLastBlockHash call in the `findAncestorByHeight` line below. This could do something cleverer to reduce locking, and I'm happy to make changes if there are suggestions, but moving the lock seemed like simplest change that would work.",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-12T21:08:55Z",
      "diff_hunk" : "@@ -3546,22 +3545,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;\n+    uint256 start_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        LOCK(pwallet->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513330",
      "id" : 378513330,
      "in_reply_to_id" : 377952847,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxMzMzMA==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_position" : 42,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 42,
      "pull_request_review_id" : 357788103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:36:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513330",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513684"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952195\r\n\r\n> `GetLastBlockHeight()` can't return a `tip_height` that's < 0, so I think you can just remove `|| tip_height < 0 `\r\n\r\nThanks updated",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-12T21:09:39Z",
      "diff_hunk" : "@@ -3546,22 +3545,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;\n+    uint256 start_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        LOCK(pwallet->cs_wallet);\n+        int tip_height = pwallet->GetLastBlockHeight();\n \n         if (!request.params[0].isNull()) {\n             start_height = request.params[0].get_int();\n-            if (start_height < 0 || !tip_height || start_height > *tip_height) {\n+            if (start_height < 0 || tip_height < 0 || start_height > tip_height) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513684",
      "id" : 378513684,
      "in_reply_to_id" : 377952195,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxMzY4NA==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_position" : 48,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 357788103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:36:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513684",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513892"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377953378\r\n\r\n> Again, I think this is always true, so you can remove this conditional.\r\n\r\nThanks, removed",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-12T21:10:09Z",
      "diff_hunk" : "@@ -3570,25 +3570,17 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n \n         // We can't rescan beyond non-pruned blocks, stop and throw an error\n-        if (locked_chain->findPruned(start_height, stop_height)) {\n+        if (!pwallet->chain().hasBlocks(pwallet->GetLastBlockHash(), start_height, stop_height)) {\n             throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n         }\n \n-        if (tip_height) {\n-            start_block = locked_chain->getBlockHash(start_height);\n-            // If called with a stop_height, set the stop_height here to\n-            // trigger a rescan to that height.\n-            // If called without a stop height, leave stop_height as null here\n-            // so rescan continues to the tip (even if the tip advances during\n-            // rescan).\n-            if (stop_height) {\n-                stop_block = locked_chain->getBlockHash(*stop_height);\n-            }\n+        if (tip_height >= 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513892",
      "id" : 378513892,
      "in_reply_to_id" : 377953378,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxMzg5Mg==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_position" : 80,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 357788103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T15:36:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513892",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379042572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379042572"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "e276b68\r\n\r\n\"If both blocks are on the same chain ancestor_height is the height of the oldest between them. Also return height of first block which may be the same than ancestor height.\"\r\n\r\nBut honestly would prefer parameterize `findFork` instead of yet-another-single use method like passing wallet tip hash to findFork (and if null, then use default chain tip).\r\n\r\nBy the way, is `findFork` still used after this change ?",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-13T18:32:30Z",
      "diff_hunk" : "@@ -133,12 +133,23 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Find ancestor of block at specified height and return its hash.\n+    virtual uint256 findAncestorByHeight(const uint256& block_hash, int ancestor_height) = 0;\n+\n     //! Return whether block descends from a specified ancestor, and\n     //! optionally return height of the ancestor.\n     virtual bool findAncestorByHash(const uint256& block_hash,\n         const uint256& ancestor_hash,\n         int* height = 0) = 0;\n \n+    //! Find most recent common ancestor between two blocks and optionally\n+    //! return its hash and/or height. Also return height of first block. Return\n+    //! nullopt if either block is unknown or there is no common ancestor.\n+    virtual Optional<int> findCommonAncestor(const uint256& block_hash1,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379042572",
      "id" : 379042572,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0MjU3Mg==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_position" : 16,
      "path" : "src/interfaces/chain.h",
      "position" : 57,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T22:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379042572",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379069325"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379069325"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "e276b68\r\n\r\nIf I understand issue linked in the commit message, let's say you call listsinceblock(genesis_hash, 100) with current_tip == 1100 (shouldn't matter referring to `chain_tip` or `wallet_tip`).\r\nTarget_confirm = 1100 + 1 - 100 = 1001.\r\nLastblock = blockhash(1001)\r\n\r\nNow while calling again listsinceblock(lastblock_hash, 100) with current_tip = 1100\r\ndepth = 1100 + 1 - 1001 = 100\r\nSo only transactions with depth < 100 are returned and not the ones with 100-conf as expected by `target_confirmations` (i.e transactions for block 1101, the \"100th\" from the main chain).\r\n\r\nIs this the behavior you're fixing by returning now the ancestor hash? Seems to me documentation is already marching code \"So you would generally use a target_confirmations of say 6, you will be continually re-notified of transactions until they've reached 6 confirmations plus any new ones\" but not sure if this what we really want..",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-13T19:24:13Z",
      "diff_hunk" : "@@ -1638,8 +1638,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n         --*altheight;\n     }\n \n-    int last_height = tip_height ? *tip_height + 1 - target_confirms : -1;\n-    uint256 lastblock = last_height >= 0 ? locked_chain->getBlockHash(last_height) : uint256();\n+    uint256 lastblock = pwallet->chain().findAncestorByHeight(pwallet->GetLastBlockHash(), pwallet->GetLastBlockHeight() + 1 - target_confirms);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379069325",
      "id" : 379069325,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2OTMyNQ==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_position" : 28,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 28,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T22:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379069325",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379070527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379070527"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "e276b68\r\n\r\nHeight of genesis block is 0 ? If so depth is -1 which I think isn't the behavior expected (already there before ?)",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-13T19:26:13Z",
      "diff_hunk" : "@@ -1605,8 +1606,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n \n     bool include_removed = (request.params[3].isNull() || request.params[3].get_bool());\n \n-    const Optional<int> tip_height = locked_chain->getHeight();\n-    int depth = tip_height && height ? (1 + *tip_height - *height) : -1;\n+    int depth = height ? pwallet->GetLastBlockHeight() + 1 - *height : -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379070527",
      "id" : 379070527,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MDUyNw==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_position" : 18,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 18,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T22:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379070527",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379075632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379075632"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "e276b68\r\n\r\nWhy not modify `getBlockHash` a bit to do a `LookupBlockIndex` instead of querying `ChainActive()` ? Every block in ChainActive needs a BlockIndex so second should be a superset and it shouldn't be an issue.\r\n\r\nIf caller care about block being in the active chain, it should call `findFork` just after.\r\n\r\n(Long-term, IMO wallet shouldn't have to deal with fork and just have a _linear view_ of the chain, only when `BlockDisconnected` is called, state would be rewind. It's should be caller responsibility to enforce tips consistency between it's different components)",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-13T19:35:51Z",
      "diff_hunk" : "@@ -133,12 +133,23 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Find ancestor of block at specified height and return its hash.\n+    virtual uint256 findAncestorByHeight(const uint256& block_hash, int ancestor_height) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379075632",
      "id" : 379075632,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NTYzMg==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_position" : 5,
      "path" : "src/interfaces/chain.h",
      "position" : 46,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T22:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379075632",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379123410"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379123410"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "6067b74\r\n\r\nI think you can move the existing `findFirstBlockWithTimeAndHeight` method of `Chain::Lock` and just avoid adding a new one, it still returns both block height & hash ",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-13T21:17:37Z",
      "diff_hunk" : "@@ -133,6 +133,13 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Return hash of first block in the chain with timestamp >= the given time\n+    //! and height >= than the given height, or nullopt if there is no block\n+    //! with a high enough timestamp and height. Also return the block height as\n+    //! an optional output parameter (to avoid the cost of a second lookup in\n+    //! case this information is needed.)\n+    virtual Optional<uint256> findFirstBlockWithTimeAndHeight(int64_t min_time, int min_height, int* height = nullptr) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379123410",
      "id" : 379123410,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyMzQxMA==",
      "original_commit_id" : "6067b74431169d54e2c3fd9141021f8caaf04461",
      "original_position" : 9,
      "path" : "src/interfaces/chain.h",
      "position" : 38,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T22:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379123410",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379133763"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379133763"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "6067b74\r\n\r\nJust to be sure but is `FindEarliestAtLeast` working as intended ? By passing `min_height=0` std::lower_bound is returning an iterator to the first element for which the comparison object return false, thus with the current comparison being `pBlock->GetBlockTimeMax() < blockparams.first || pBlock->nHeight < blockparams.second` it would return just after the genesis block  ?",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-13T21:40:19Z",
      "diff_hunk" : "@@ -259,6 +259,16 @@ class ChainImpl : public Chain\n         }\n         return true;\n     }\n+    Optional<uint256> findFirstBlockWithTimeAndHeight(int64_t min_time, int min_height, int* height = nullptr) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive().FindEarliestAtLeast(min_time, min_height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379133763",
      "id" : 379133763,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEzMzc2Mw==",
      "original_commit_id" : "6067b74431169d54e2c3fd9141021f8caaf04461",
      "original_position" : 7,
      "path" : "src/interfaces/chain.cpp",
      "position" : 67,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T22:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379133763",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379150008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379150008"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "9aa4b6b\r\n\r\nI find `findAncestorByHeight` unclear, here we may have `start_height` and `GetLastBlockHash` not pointing to same block. Behavior follows method documentation but why bother asking for the hash, query in ChainActive with the provided height ?\r\n\r\nHonestly here I would prefer to stick with `getBlockHash`, behavior is more straightforward.",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-13T22:15:44Z",
      "diff_hunk" : "@@ -3569,25 +3570,15 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n \n         // We can't rescan beyond non-pruned blocks, stop and throw an error\n-        if (locked_chain->findPruned(start_height, stop_height)) {\n+        if (!pwallet->chain().hasBlocks(pwallet->GetLastBlockHash(), start_height, stop_height)) {\n             throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n         }\n \n-        if (tip_height) {\n-            start_block = locked_chain->getBlockHash(start_height);\n-            // If called with a stop_height, set the stop_height here to\n-            // trigger a rescan to that height.\n-            // If called without a stop height, leave stop_height as null here\n-            // so rescan continues to the tip (even if the tip advances during\n-            // rescan).\n-            if (stop_height) {\n-                stop_block = locked_chain->getBlockHash(*stop_height);\n-            }\n-        }\n+        start_block = pwallet->chain().findAncestorByHeight(pwallet->GetLastBlockHash(), start_height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379150008",
      "id" : 379150008,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MDAwOA==",
      "original_commit_id" : "9aa4b6bb6fb5f44a943cd50cb46e0d80275060ce",
      "original_position" : 49,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 81,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T22:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379150008",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379151718"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379151718"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "9aa4b6b\r\n\r\nSame here, why `ScanForWalletTransactions` function to then add a call to get previously furnished information ? I would prefer to keep removed `getBlockHash` calls in `rescanblockchain`",
      "commit_id" : "1125fd92bd3ee6d44ab9f8118ac68c0f621c5a94",
      "created_at" : "2020-02-13T22:19:53Z",
      "diff_hunk" : "@@ -1649,7 +1649,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n         }\n         block_height = locked_chain->getBlockHeight(block_hash);\n         progress_begin = chain().guessVerificationProgress(block_hash);\n-        progress_end = chain().guessVerificationProgress(stop_block.IsNull() ? tip_hash : stop_block);\n+        progress_end = chain().guessVerificationProgress(max_height ? chain().findAncestorByHeight(tip_hash, *max_height) : tip_hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379151718",
      "id" : 379151718,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MTcxOA==",
      "original_commit_id" : "9aa4b6bb6fb5f44a943cd50cb46e0d80275060ce",
      "original_position" : 14,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "updated_at" : "2020-02-13T22:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379151718",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
