[
   {
      "author_association" : "MEMBER",
      "body" : "ACK 70e4706093fd7b08a32f9638dace178852a9d249\r\n\r\nFrom #16348:\r\n\r\n>Once we bump Qt to at least 5.10 these can be refactored to use the invokeMethod overload that allows connecting to lambdas or member pointers, which are compile checked.\r\n\r\nFrom #13478:\r\n\r\n> #### [Qt Versions](https://download.qt.io/official_releases/qt):\r\n> [5.12 (LTS)](https://doc.qt.io/qt-5.12/supported-platforms.html) Supported for 3 years post release.\r\n> [5.11](https://doc.qt.io/qt-5.11/supported-platforms.html) Supported until May 2019\r\n> [5.10](https://doc.qt.io/archives/qt-5.10/supported-platforms.html) Supported until Dec 2018 (Archived).\r\n> [5.9 (LTS)](https://doc.qt.io/qt-5.9/supported-platforms.html) Supported until May 31, 2020.\r\n> [5.6 (LTS)](https://doc.qt.io/qt-5.6/supported-platforms.html) Supported until Mar. 16, 2019 (will end around the same time as the `v0.18.0` release).\r\n> \r\n> Any other releases older than 5.10 are no longer supported (by Qt).\r\n> \r\n> Qt releases seem to be getting more frequent, and in some cases more aggressive about dropping support for OS versions. i.e macOS >`10.12` is required for Qt `5.12`.\r\n\r\nIt might be a good idea to bump the minimum version to 5.12 after the 0.20 branch-off. Alternatively we could duplicate the code with `#IF QT_VERSION >= 0x051000` with the modern syntax, so that the compiler will catch an accidental refactor bug like this.",
      "created_at" : "2020-01-19T10:36:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575990732",
      "id" : 575990732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17965",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTk5MDczMg==",
      "updated_at" : "2020-01-19T10:36:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575990732",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think we should fix `ThreadSafeMessageBox` instead. Note that if `modal == false` `Qt::QueuedConnection` is used and a pointer to the local `ret` is passed, which goes out of scope. So by the time slot `message` is called it dereferences an invalid pointer. Please correct me if I'm wrong.",
      "created_at" : "2020-01-19T10:55:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575992406",
      "id" : 575992406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17965",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTk5MjQwNg==",
      "updated_at" : "2020-01-19T10:55:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575992406",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think we should fix `ThreadSafeMessageBox` instead. Note that if `modal == false` `Qt::QueuedConnection` is used and a pointer to the local `ret` is passed, which goes out of scope. So by the time slot `message` is called it dereferences an invalid pointer. Please correct me if I'm wrong.\r\n\r\n`QMetaObject::invokeMethod()` passes 4 arguments to `BitcoinGUI::message()` with 3 parameters signature.",
      "created_at" : "2020-01-19T10:59:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575992733",
      "id" : 575992733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17965",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTk5MjczMw==",
      "updated_at" : "2020-01-19T10:59:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575992733",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@hebasto I mean that if we merge this then the problem above exists.",
      "created_at" : "2020-01-19T11:01:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575992927",
      "id" : 575992927,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17965",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTk5MjkyNw==",
      "updated_at" : "2020-01-19T11:01:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575992927",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag \r\n\r\n> Note that if `modal == false` `Qt::QueuedConnection` is used and a pointer to the local `ret` is passed, which goes out of scope. So by the time slot `message` is called it dereferences an invalid pointer.\r\n\r\nIndeed.",
      "created_at" : "2020-01-19T11:06:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575993301",
      "id" : 575993301,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17965",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTk5MzMwMQ==",
      "updated_at" : "2020-01-19T11:06:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575993301",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think we should fix `ThreadSafeMessageBox` instead.\r\n\r\nI found the only place where return value is used:\r\nhttps://github.com/bitcoin/bitcoin/blob/a654626f076a72416a3d354218d7107571d6caaf/src/init.cpp#L1614-L1617\r\n\r\nCould we replace our custom `ThreadSafeMessageBox` with standard `QMessageBox` here?",
      "created_at" : "2020-01-19T11:41:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575996195",
      "id" : 575996195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17965",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTk5NjE5NQ==",
      "updated_at" : "2020-01-19T11:46:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575996195",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
