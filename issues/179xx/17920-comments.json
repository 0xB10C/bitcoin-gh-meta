[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20470 (build: Replace genisoimage with xorriso by dongcarl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-01-13T23:47:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17920#issuecomment-573928920",
      "id" : 573928920,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17920",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MzkyODkyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-08T04:41:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/573928920",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17920#discussion_r366143926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17920"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366143926"
         }
      },
      "author_association" : "MEMBER",
      "body" : " I assume we no longer have to set `ZERO_AR_DATE` here because we're not using a libtool from cctools?\r\n\r\nFrom [libtool.c](https://opensource.apple.com/source/cctools/cctools-927.0.2/misc/libtool.c.auto.html):\r\n> all of these values are initialized to reasonable defaults for deterministic\r\narchives: archives that are consistent regardless of user, time, or umask\r\ndifferences. Ordinarily, these values and will be set to more specific\r\nones when building new archives, but that can be suppressed using the\r\n'-D' option or the ZERO_AR_DATE environment variable.",
      "commit_id" : "e61380a065d252b1b065bf71da03ce86bf30d436",
      "created_at" : "2020-01-14T04:02:54Z",
      "diff_hunk" : "@@ -0,0 +1,262 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Check that environment variables assumed to be set by the environment are set\n+echo \"Building for platform triple ${HOST:?not set} with reference timestamp ${SOURCE_DATE_EPOCH:?not set}...\"\n+echo \"At most ${MAX_JOBS:?not set} jobs will run at once...\"\n+\n+#####################\n+# Environment Setup #\n+#####################\n+\n+# The depends folder also serves as a base-prefix for depends packages for\n+# $HOSTs after successfully building.\n+BASEPREFIX=\"${PWD}/depends\"\n+\n+# Setup an output directory for our build\n+OUTDIR=\"${OUTDIR:-${PWD}/output}\"\n+[ -e \"$OUTDIR\" ] || mkdir -p \"$OUTDIR\"\n+\n+# Setup the directory where our Bitcoin Core build for HOST will occur\n+DISTSRC=\"${DISTSRC:-${PWD}/distsrc-${HOST}}\"\n+if [ -e \"$DISTSRC\" ]; then\n+    echo \"DISTSRC directory '${DISTSRC}' exists, probably because of previous builds... Aborting...\"\n+    exit 1\n+else\n+    mkdir -p \"$DISTSRC\"\n+fi\n+\n+# Given a package name and an output name, return the path of that output in our\n+# current guix environment\n+# store_path() {\n+#     grep --extended-regexp \"/[^-]{32}-${1}-[^-]+${2:+-${2}}\\\"\" \"${GUIX_ENVIRONMENT}/manifest\" \\\n+#         | head --lines=1 \\\n+#         | sed --expression='s|^[[:space:]]*\"||' \\\n+#               --expression='s|\"[[:space:]]*$||'\n+# }\n+store_path() {\n+    {\n+        grep --extended-regexp \"/[^-]{32}-${1}-[^-]+${2:+-${2}}\\\"\" \"${GUIX_ENVIRONMENT}/manifest\" || \\\n+        find /gnu/store/ -maxdepth 1 -type d | grep --extended-regexp \"[^-]{32}-${1}-[^-]+${2:+-${2}}$\"\n+    } | head --lines=1 \\\n+        | sed --expression='s|^[[:space:]]*\"||' \\\n+              --expression='s|\"[[:space:]]*$||'\n+}\n+\n+# export C_INCLUDE_PATH=\"$(store_path \"clang\")/lib/clang/6.0.1/include:$(store_path \"glibc\")/include:$(store_path \"linux-libre-headers\")/include\"\n+# export CPLUS_INCLUDE_PATH=\"$(store_path \"libstdc\\\\+\\\\+\")/include:$(store_path \"libstdc\\\\+\\\\+\")/include/backward:$(store_path \"clang\")/lib/clang/6.0.1/include:$(store_path \"glibc\")/include:$(store_path \"linux-libre-headers\")/include\"\n+# export C_INCLUDE_PATH=\"$(store_path \"linux-libre-headers\")/include\"\n+# export CPLUS_INCLUDE_PATH=\"$(store_path \"linux-libre-headers\")/include\"\n+# export CPATH=\"$(store_path \"libstdc\\\\+\\\\+\")/include:$(store_path \"libstdc\\\\+\\\\+\")/include/backward\"\n+# unset CPATH\n+# unset CMAKE_PREFIX_PATH\n+# export CPATH=\"$(store_path \"glibc\")/include:$(store_path \"linux-libre-headers\")/include\"\n+# export CPATH=\"${NATIVE_GCC}/include\"\n+\n+GLIBC=\"$(store_path glibc)\"\n+# GLIBC_STATIC=\"$(store_path glibc static)\"\n+KERNEL=\"$(store_path linux-libre-headers)\"\n+GCC=\"$(store_path gcc)\"\n+# GCC_LIBS=( \"${GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+# GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n+\n+# # Determine output paths to use in CROSS_* environment variables\n+# CROSS_GLIBC=\"$(store_path glibc-cross-${HOST})\"\n+# CROSS_GLIBC_STATIC=\"$(store_path glibc-cross-${HOST} static)\"\n+# CROSS_KERNEL=\"$(store_path linux-libre-headers-cross-${HOST})\"\n+# CROSS_GCC=\"$(store_path gcc-cross-${HOST})\"\n+# CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+# CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n+\n+# # Set environment variables to point Guix's cross-toolchain to the right\n+# # includes/libs for $HOST\n+# #\n+# # NOTE: CROSS_C_INCLUDE_PATH is missing ${CROSS_GCC_LIB}/include-fixed, because\n+# # the limits.h in it is missing a '#include_next <limits.h>'\n+# #\n+# export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n+# export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n+# export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib\"\n+\n+# Correct\n+export C_INCLUDE_PATH=\"${GLIBC}/include:${KERNEL}/include\"\n+export CPLUS_INCLUDE_PATH=\"${GCC}/include/c++:${GCC}/include/c++/x86_64-unknown-linux-gnu:${GCC}/include/c++/backward:${C_INCLUDE_PATH}\"\n+export OBJC_INCLUDE_PATH=\"${C_INCLUDE_PATH}\"\n+export CPATH=\"$(store_path util-linux)/include:$(store_path libcap)/include:$(store_path zlib)/include:$(store_path bzip2)/include\"\n+# export LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib\"\n+\n+\n+# IFS=':' read -ra PATHS <<< \"${C_INCLUDE_PATH}:${CPLUS_INCLUDE_PATH}:${CPATH}\"\n+# for p in \"${PATHS[@]}\"; do\n+#     if [ ! -d \"$p\" ]; then\n+#         echo \"'$p' doesn't exist or isn't a directory... Aborting...\"\n+#         exit 1\n+#     fi\n+# done\n+\n+# Disable Guix ld auto-rpath behavior\n+# export GUIX_LD_WRAPPER_DISABLE_RPATH=yes\n+\n+# Make /usr/bin if it doesn't exist\n+[ -e /usr/bin ] || mkdir -p /usr/bin\n+\n+# Symlink file and env to a conventional path\n+[ -e /usr/bin/file ] || ln -s --no-dereference \"$(command -v file)\" /usr/bin/file\n+[ -e /usr/bin/env ]  || ln -s --no-dereference \"$(command -v env)\"  /usr/bin/env\n+\n+# Determine the correct value for -Wl,--dynamic-linker for the current $HOST\n+# glibc_dynamic_linker=$(\n+#     case \"$HOST\" in\n+#         i686-linux-gnu)      echo /lib/ld-linux.so.2 ;;\n+#         x86_64-linux-gnu)    echo /lib64/ld-linux-x86-64.so.2 ;;\n+#         arm-linux-gnueabihf) echo /lib/ld-linux-armhf.so.3 ;;\n+#         aarch64-linux-gnu)   echo /lib/ld-linux-aarch64.so.1 ;;\n+#         riscv64-linux-gnu)   echo /lib/ld-linux-riscv64-lp64d.so.1 ;;\n+#         *)                   exit 1 ;;\n+#     esac\n+# )\n+\n+# Environment variables for determinism",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17920#discussion_r366143926",
      "id" : 366143926,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE0MzkyNg==",
      "original_commit_id" : "e61380a065d252b1b065bf71da03ce86bf30d436",
      "original_position" : 120,
      "path" : "contrib/guix/libexec/build-osx.sh",
      "position" : 120,
      "pull_request_review_id" : 342281059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17920",
      "updated_at" : "2020-01-14T04:08:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366143926",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17920#discussion_r366144729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17920"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366144729"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ð£ ",
      "commit_id" : "e61380a065d252b1b065bf71da03ce86bf30d436",
      "created_at" : "2020-01-14T04:08:16Z",
      "diff_hunk" : "@@ -63,6 +101,8 @@ for p in \"${PATHS[@]}\"; do\n     fi\n done\n \n+echo hee",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17920#discussion_r366144729",
      "id" : 366144729,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE0NDcyOQ==",
      "original_commit_id" : "e61380a065d252b1b065bf71da03ce86bf30d436",
      "original_position" : 89,
      "path" : "contrib/guix/libexec/build.sh",
      "position" : 89,
      "pull_request_review_id" : 342281059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17920",
      "updated_at" : "2020-01-14T04:08:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366144729",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Update: this is still being actively worked on. Current hurdle: some weird clang internal search path logic.",
      "created_at" : "2020-07-30T18:28:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17920#issuecomment-666584564",
      "id" : 666584564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17920",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjU4NDU2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T18:28:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666584564",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested 40ad76806b9f750d9c94675b3a136132bf1e6449. I (re)installed guix on an Ubuntu 20 machine and used `--no-substitutes` and `--bootstrap` to exercise my low time preference.\r\n\r\nThis did not go without hickups, e.g.:\r\n* `guix install glibc-locales` (as root, this would fail without substitutes) and configuring `GUIX_LOCPATH` (as guix user) is not particularly well documented upstream\r\n* during `guix-build.sh` the step `/gnu/store/36fgj9n3c8bmix2pd12kfaszi7bd5y7a-ghostscript-9.27.drv' failed` without too much actionable info. I tried dropping `--bootstrap`, but got the same error, so I ended up dropping `--no-substitutes` as well\r\n* noticed a warning: `Computing Guix derivation for 'x86_64-linux'...  WARNING: (guix build emacs-build-system): imported module (guix build utils) overrides core binding `delete'`\r\n\r\nNot sure what file is most useful to compare, but here's a few:\r\n\r\n```\r\n0aa66de467110bf45e7606d2696ea4417d4a94fdc59495646428c1ca05e2e744  distsrc-x86_64-linux-gnu/src/bitcoind\r\n2b75f3955337b0345c7b6e33ad83185bba06ea96f1aedc30b7894c20af4489ee  distsrc-x86_64-apple-darwin16/Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt\r\n```\r\n\r\nI can also still build and use depends on native macOS Big Sur. CI seems to struggle, maybe a spurious failure.\r\n\r\nYou may want to link to the macOS SDK extraction instructions (and that it needs to be untarred into depends/SDK's).\r\n\r\nYou may want to rebase (#20470) now that #20422 landed, since it changed `make deploy` (I just tried a rebase and it seems to behave at least on macOS itself).\r\n\r\nDoes this PR mean you can switch to the upstream GUIX repo? Or are there still patches? See https://github.com/bitcoin/bitcoin/pull/17595/commits/93439a71eda49fb69f1e82966a23a946733aa6fa",
      "created_at" : "2020-12-11T18:34:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17920#issuecomment-743355962",
      "id" : 743355962,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17920",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MzM1NTk2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-11T18:34:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743355962",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
