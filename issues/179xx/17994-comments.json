[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r370530478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370530478"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The last height, or the maximum height?",
      "commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "created_at" : "2020-01-24T09:05:55Z",
      "diff_hunk" : "@@ -1757,6 +1761,12 @@ static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationSt\n             return error(\"ConnectBlock(): FindUndoPos failed\");\n         if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n             return AbortNode(state, \"Failed to write undo data\");\n+        // rev files are written in block height order, whereas blk files are written as blocks come in (often out of order)\n+        // we want to flush the rev (undo) file once we've written the last block, which is indicated by the last height",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r370530478",
      "id" : 370530478,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzMDQ3OA==",
      "original_commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "original_position" : 37,
      "path" : "src/validation.cpp",
      "position" : 37,
      "pull_request_review_id" : 347820235,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994",
      "updated_at" : "2020-01-24T09:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370530478",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r370535220"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370535220"
         }
      },
      "author_association" : "MEMBER",
      "body" : "They are the same:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/28fbe68fdcac2a06f359b1e48555a3d23015c2b7/src/chain.h#L85-L86",
      "commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "created_at" : "2020-01-24T09:18:34Z",
      "diff_hunk" : "@@ -1757,6 +1761,12 @@ static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationSt\n             return error(\"ConnectBlock(): FindUndoPos failed\");\n         if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n             return AbortNode(state, \"Failed to write undo data\");\n+        // rev files are written in block height order, whereas blk files are written as blocks come in (often out of order)\n+        // we want to flush the rev (undo) file once we've written the last block, which is indicated by the last height",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r370535220",
      "id" : 370535220,
      "in_reply_to_id" : 370530478,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzNTIyMA==",
      "original_commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "original_position" : 37,
      "path" : "src/validation.cpp",
      "position" : 37,
      "pull_request_review_id" : 347826438,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994",
      "updated_at" : "2020-01-24T09:18:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370535220",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2020-01-24T10:03:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#issuecomment-578065964",
      "id" : 578065964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17994",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODA2NTk2NA==",
      "updated_at" : "2020-01-26T14:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578065964",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Synced two datadirs (master and this branch) to block 484516, which resulted in 995 rev files, master using 38277312 bytes, and this branch 35573680 bytes. The average wasted space per rev file comes out at 2717 bytes (~3kb), which is quite a bit lower than my assumptions (if it was completely random, it should be ~500kb per rev file).\r\n\r\nCopying blocks/rev* into a separate dir reveals a few kb lower for this branch -- 35570968 -- caused by the latest rev file having some pre-allocation. The same for the master datadir results in 36547408 bytes.\r\n\r\nNot sure why it's not higher, but still. I don't think a backport is even necessary, but fixing this bug and adding a one time sweep/finalize of all rev files is something that we should do.",
      "created_at" : "2020-01-26T11:38:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#issuecomment-578493533",
      "id" : 578493533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17994",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODQ5MzUzMw==",
      "updated_at" : "2020-01-26T11:38:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578493533",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK 48081229c10969ac5993c826c8bd7687cd0503e5\r\n\r\nAgree, looks cleaner than #17892!",
      "created_at" : "2020-02-17T16:54:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#issuecomment-587082534",
      "id" : 587082534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17994",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NzA4MjUzNA==",
      "updated_at" : "2020-02-17T16:54:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587082534",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I looked at the code and just want to confirm that I got it right. Is the following example correct?\r\n\r\nLet's assume for simplicity that `blk*.dat` and `rev*.dat` files can contain up to 3 blocks.\r\nInitially just the genesis block (height 0) is in `blk01` and `rev01`. Then:\r\n* block at height 2 is downloaded\r\n  * it is written to `blk01`\r\n  * undo for it will be written to `rev01`, but not yet\r\n* block at height 3 is downloaded\r\n  * it is written to `blk01`\r\n  * undo for it will be written to `rev01`, but not yet\r\n* block at height 4 is downloaded\r\n  * `blk01` is finalized as it is full with 3 blocks (with heights 0, 2, 3)\r\n  * the downloaded block with height 4 is written to `blk02`\r\n  * its undo will eventually be in `rev02`\r\n* block at height 1 is downloaded\r\n  * it is written to `blk02`\r\n  * its undo is written to `rev02`\r\n  * now that the block at height 2 is chained, undo for it is written to `rev01`\r\n  * now that the block at height 3 is chained, undo for it is written to `rev01`\r\n  * now that the block at height 4 is chained, undo for it is written to `rev02`",
      "created_at" : "2020-03-11T19:16:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#issuecomment-597819294",
      "id" : 597819294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17994",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NzgxOTI5NA==",
      "updated_at" : "2020-03-11T20:14:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597819294",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391244966"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391244966"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We want to flush the rev file along with the block file, but we are not going to do that if `fFinalize` is `true`. What about calling `FlushUndoFile(nLastBlockFile)` unconditionally here?",
      "commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "created_at" : "2020-03-11T20:19:13Z",
      "diff_hunk" : "@@ -1731,19 +1731,23 @@ DisconnectResult CChainState::DisconnectBlock(const CBlock& block, const CBlockI\n     return fClean ? DISCONNECT_OK : DISCONNECT_UNCLEAN;\n }\n \n-void static FlushBlockFile(bool fFinalize = false)\n+static void FlushUndoFile(int block_file, bool finalize = false)\n {\n-    LOCK(cs_LastBlockFile);\n+    FlatFilePos undo_pos_old(block_file, vinfoBlockFile[block_file].nUndoSize);\n+    if (!UndoFileSeq().Flush(undo_pos_old, finalize)) {\n+        AbortNode(\"Flushing undo file to disk failed. This is likely the result of an I/O error.\");\n+    }\n+}\n \n+static void FlushBlockFile(bool fFinalize = false)\n+{\n+    LOCK(cs_LastBlockFile);\n     FlatFilePos block_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nSize);\n-    FlatFilePos undo_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nUndoSize);\n-\n-    bool status = true;\n-    status &= BlockFileSeq().Flush(block_pos_old, fFinalize);\n-    status &= UndoFileSeq().Flush(undo_pos_old, fFinalize);\n-    if (!status) {\n+    if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         AbortNode(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n     }\n+    // the undo file is actually finalized at a later stage, but we do want to flush it along with the block file\n+    if (!fFinalize) FlushUndoFile(nLastBlockFile);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391244966",
      "id" : 391244966,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0NDk2Ng==",
      "original_commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "original_position" : 28,
      "path" : "src/validation.cpp",
      "position" : 28,
      "pull_request_review_id" : 373096135,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994",
      "updated_at" : "2020-03-11T20:19:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391244966",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391249970"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391249970"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe I am missing something, but it looks to me that if blocks are being downloaded in-order, then the `_pos.nFile < nLastBlockFile` condition will never be true because those will always be equal?",
      "commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "created_at" : "2020-03-11T20:29:18Z",
      "diff_hunk" : "@@ -1757,6 +1761,12 @@ static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationSt\n             return error(\"ConnectBlock(): FindUndoPos failed\");\n         if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n             return AbortNode(state, \"Failed to write undo data\");\n+        // rev files are written in block height order, whereas blk files are written as blocks come in (often out of order)\n+        // we want to flush the rev (undo) file once we've written the last block, which is indicated by the last height\n+        // in the block file info as below\n+        if (_pos.nFile < nLastBlockFile && static_cast<uint32_t>(pindex->nHeight) == vinfoBlockFile[_pos.nFile].nHeightLast) {\n+            FlushUndoFile(_pos.nFile, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391249970",
      "id" : 391249970,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0OTk3MA==",
      "original_commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "original_position" : 40,
      "path" : "src/validation.cpp",
      "position" : 40,
      "pull_request_review_id" : 373102528,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994",
      "updated_at" : "2020-03-11T20:29:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391249970",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391416459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391416459"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There's basically no reason to do a non-final flush of the undo file, except on shutdown (which happens now). This is the same for the block file (since the case you are arguing is for a finalized flush).",
      "commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "created_at" : "2020-03-12T06:04:01Z",
      "diff_hunk" : "@@ -1731,19 +1731,23 @@ DisconnectResult CChainState::DisconnectBlock(const CBlock& block, const CBlockI\n     return fClean ? DISCONNECT_OK : DISCONNECT_UNCLEAN;\n }\n \n-void static FlushBlockFile(bool fFinalize = false)\n+static void FlushUndoFile(int block_file, bool finalize = false)\n {\n-    LOCK(cs_LastBlockFile);\n+    FlatFilePos undo_pos_old(block_file, vinfoBlockFile[block_file].nUndoSize);\n+    if (!UndoFileSeq().Flush(undo_pos_old, finalize)) {\n+        AbortNode(\"Flushing undo file to disk failed. This is likely the result of an I/O error.\");\n+    }\n+}\n \n+static void FlushBlockFile(bool fFinalize = false)\n+{\n+    LOCK(cs_LastBlockFile);\n     FlatFilePos block_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nSize);\n-    FlatFilePos undo_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nUndoSize);\n-\n-    bool status = true;\n-    status &= BlockFileSeq().Flush(block_pos_old, fFinalize);\n-    status &= UndoFileSeq().Flush(undo_pos_old, fFinalize);\n-    if (!status) {\n+    if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         AbortNode(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n     }\n+    // the undo file is actually finalized at a later stage, but we do want to flush it along with the block file\n+    if (!fFinalize) FlushUndoFile(nLastBlockFile);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391416459",
      "id" : 391416459,
      "in_reply_to_id" : 391244966,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxNjQ1OQ==",
      "original_commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "original_position" : 28,
      "path" : "src/validation.cpp",
      "position" : 28,
      "pull_request_review_id" : 373296604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994",
      "updated_at" : "2020-03-12T06:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391416459",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391416617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391416617"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I am pretty sure I tested this but I can't convince myself that you're wrong by looking at the code so I will test this again.",
      "commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "created_at" : "2020-03-12T06:04:41Z",
      "diff_hunk" : "@@ -1757,6 +1761,12 @@ static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationSt\n             return error(\"ConnectBlock(): FindUndoPos failed\");\n         if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n             return AbortNode(state, \"Failed to write undo data\");\n+        // rev files are written in block height order, whereas blk files are written as blocks come in (often out of order)\n+        // we want to flush the rev (undo) file once we've written the last block, which is indicated by the last height\n+        // in the block file info as below\n+        if (_pos.nFile < nLastBlockFile && static_cast<uint32_t>(pindex->nHeight) == vinfoBlockFile[_pos.nFile].nHeightLast) {\n+            FlushUndoFile(_pos.nFile, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391416617",
      "id" : 391416617,
      "in_reply_to_id" : 391249970,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxNjYxNw==",
      "original_commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "original_position" : 40,
      "path" : "src/validation.cpp",
      "position" : 40,
      "pull_request_review_id" : 373296807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994",
      "updated_at" : "2020-03-12T06:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391416617",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391452419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391452419"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, then this turns into a nit, feel free to ignore: maybe update the comment to be in line with the code: \"we do want to flush it along with the block file _in non-finalizing flushes_\".",
      "commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "created_at" : "2020-03-12T08:01:23Z",
      "diff_hunk" : "@@ -1731,19 +1731,23 @@ DisconnectResult CChainState::DisconnectBlock(const CBlock& block, const CBlockI\n     return fClean ? DISCONNECT_OK : DISCONNECT_UNCLEAN;\n }\n \n-void static FlushBlockFile(bool fFinalize = false)\n+static void FlushUndoFile(int block_file, bool finalize = false)\n {\n-    LOCK(cs_LastBlockFile);\n+    FlatFilePos undo_pos_old(block_file, vinfoBlockFile[block_file].nUndoSize);\n+    if (!UndoFileSeq().Flush(undo_pos_old, finalize)) {\n+        AbortNode(\"Flushing undo file to disk failed. This is likely the result of an I/O error.\");\n+    }\n+}\n \n+static void FlushBlockFile(bool fFinalize = false)\n+{\n+    LOCK(cs_LastBlockFile);\n     FlatFilePos block_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nSize);\n-    FlatFilePos undo_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nUndoSize);\n-\n-    bool status = true;\n-    status &= BlockFileSeq().Flush(block_pos_old, fFinalize);\n-    status &= UndoFileSeq().Flush(undo_pos_old, fFinalize);\n-    if (!status) {\n+    if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         AbortNode(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n     }\n+    // the undo file is actually finalized at a later stage, but we do want to flush it along with the block file\n+    if (!fFinalize) FlushUndoFile(nLastBlockFile);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391452419",
      "id" : 391452419,
      "in_reply_to_id" : 391244966,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1MjQxOQ==",
      "original_commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "original_position" : 28,
      "path" : "src/validation.cpp",
      "position" : 28,
      "pull_request_review_id" : 373341156,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994",
      "updated_at" : "2020-03-12T08:28:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391452419",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391454552"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391454552"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The way I see it is that `_pos.nFile < nLastBlockFile && ` can (should) be dropped and the second condition suffices - if we are writing the last (highest) block in the rev file, then also finalize it because we are not going to touch it again.",
      "commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "created_at" : "2020-03-12T08:07:03Z",
      "diff_hunk" : "@@ -1757,6 +1761,12 @@ static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationSt\n             return error(\"ConnectBlock(): FindUndoPos failed\");\n         if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n             return AbortNode(state, \"Failed to write undo data\");\n+        // rev files are written in block height order, whereas blk files are written as blocks come in (often out of order)\n+        // we want to flush the rev (undo) file once we've written the last block, which is indicated by the last height\n+        // in the block file info as below\n+        if (_pos.nFile < nLastBlockFile && static_cast<uint32_t>(pindex->nHeight) == vinfoBlockFile[_pos.nFile].nHeightLast) {\n+            FlushUndoFile(_pos.nFile, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17994#discussion_r391454552",
      "id" : 391454552,
      "in_reply_to_id" : 391249970,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1NDU1Mg==",
      "original_commit_id" : "48081229c10969ac5993c826c8bd7687cd0503e5",
      "original_position" : 40,
      "path" : "src/validation.cpp",
      "position" : 40,
      "pull_request_review_id" : 373341156,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17994",
      "updated_at" : "2020-03-12T08:28:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391454552",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
