[
   {
      "author_association" : "MEMBER",
      "body" : "That seems like a potentially very bad bug.  However at first glance I don't see how `fPauseSend` could be implicated as a trigger; I don't believe we ever drop requests on the floor if the send buffer fills up, we just wait until the buffer drains and then continue as before. \r\n\r\nActually, I realize now that one way this could maybe trigger is if our peer sends a NOTFOUND in response to a getdata, I don't think we would reduce the in flight count (I think this is fixed in #15505 but this seems like a bug in 0.18).  So over time, as NOTFOUND's pile up, the in-flight queue would get full and we'd stop requesting transactions.  So we should definitely take some kind of fix for this, yikes.",
      "created_at" : "2019-04-09T12:36:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481233023",
      "id" : 481233023,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15776",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTIzMzAyMw==",
      "updated_at" : "2019-04-09T12:36:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481233023",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15505](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15505.html) ([p2p] Request NOTFOUND transactions immediately from other outbound peers, when possible by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-04-09T12:45:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481235677",
      "id" : 481235677,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15776",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTIzNTY3Nw==",
      "updated_at" : "2019-04-09T12:45:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481235677",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "We should perhaps disconnect a peer that is consistently getdata DOSing us...   If all your peers do that (for whatever reason) you're not going to gain txn, regardless of what happens with this.  So this fix only helps the case where a peer is randomly responding to some getdatas.\r\n\r\nThe fact that we'd stop asking for data from peers if they were not responding wasn't lost on me in the original changes, but this seemed like a good thing (I can't caught the notfound interaction, either through just missing it or due to havign 15505 on the brain).",
      "created_at" : "2019-04-09T18:16:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481371247",
      "id" : 481371247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15776",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTM3MTI0Nw==",
      "updated_at" : "2019-04-09T18:16:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481371247",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think we should do two things:\r\n(a) Fix the bug in NOTFOUND processing -- if a peer sends a NOTFOUND for a transaction, we should remove it from the in-flight map for that peer.  I think we should definitely do this and backport to 0.18.\r\n\r\n(b) As a safeguard, we should also do something if a peer's in-flight count hits the max so that we're not downloading new transactions from them.  I think there are two responses that make sense to me: either we eventually disconnect them, or we expire the in-flight entry and make room for a new request.  For 0.18,  I think expiry makes more sense, as it's more robust to other bugs that may be lurking in this new code.  Eventually, I think disconnection is where I expect things to go in the long-run (which is what we do for block getdata's that are dropped by the peer).\r\n\r\nAlso, I think I spotted another bug in this code related to emptying out the tx_in_flight set -- if a different peer serves us a transaction that we requested from another, then the entry doesn't get removed (upon receiving a TX message, we only erase from the delivering peer's in_flight set).  So a \"DoS\"er that helpfully blasted us with transactions would be able to blind us to transactions from our other peers.  The expiry solution would mitigate this, which is a point in its favor for merging into 0.18, but we should fix this too I think if we can do so easily.",
      "created_at" : "2019-04-09T18:19:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481372232",
      "id" : 481372232,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15776",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTM3MjIzMg==",
      "updated_at" : "2019-04-09T18:19:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481372232",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> at first glance I don't see how `fPauseSend` could be implicated as a trigger\r\n\r\nYep, I think you're right.\r\n\r\n> Actually, I realize now that one way this could maybe trigger is if our peer sends a NOTFOUND in response to a getdata, I don't think we would reduce the in flight count\r\n\r\nRight; I think a plausible scenario is \"INV tx1, GETDATA tx1, TX tx1, oh I'm missing a parent for tx1, GETDATA tx1p, nope that's over 15m old and you're not doing MEMPOOL bloom filters, so NOTFOUND\" -- and I can duplicate that behaviour with real (regtest) nodes, too. Seems like it should mostly only happen in real life if you've just reconnected to the network after some time offline, and there's a reasonable backlog in the mempool (as otherwise parents that are older than 15m are probably already in a block)\r\n\r\nUpdated the PR to remove tx's from notfound messages from the inflight set and to disconnect (and log) any outbound peers whose inflight queue gets full despite that. Has test cases for for both scenarios.",
      "created_at" : "2019-04-10T10:17:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481631275",
      "id" : 481631275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15776",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTYzMTI3NQ==",
      "updated_at" : "2019-04-10T10:17:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481631275",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Also, I think I spotted another bug in this code related to emptying out the tx_in_flight set -- if a different peer serves us a transaction that we requested from another, then the entry doesn't get removed (upon receiving a TX message, we only erase from the delivering peer's in_flight set).\r\n\r\nMaybe I'm missing something, but I think this should be okay -- if it's added to in_flight then we've sent a GETDATA to that peer, and whether or not any other peer sends a TX message, that peer should send a TX or NOTFOUND message, at which point the entry's unconditionally removed from in_flight as on of the very first steps...",
      "created_at" : "2019-04-10T10:23:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481633221",
      "id" : 481633221,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15776",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTYzMzIyMQ==",
      "updated_at" : "2019-04-10T10:23:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481633221",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15776#discussion_r274521787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15776"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274521787"
         }
      },
      "author_association" : "MEMBER",
      "body" : "do these need to be added to the help text?",
      "commit_id" : "12df73f5e362a59dd24db66f8001980c8d8a4667",
      "created_at" : "2019-04-11T16:52:36Z",
      "diff_hunk" : "@@ -178,6 +178,8 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n             obj.pushKV(\"banscore\", statestats.nMisbehavior);\n             obj.pushKV(\"synced_headers\", statestats.nSyncHeight);\n             obj.pushKV(\"synced_blocks\", statestats.nCommonHeight);\n+            obj.pushKV(\"tx_inflight\", statestats.nTxInFlight);\n+            obj.pushKV(\"tx_process\", statestats.nTxProcess);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15776#discussion_r274521787",
      "id" : 274521787,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDUyMTc4Nw==",
      "original_commit_id" : "12df73f5e362a59dd24db66f8001980c8d8a4667",
      "original_position" : 5,
      "path" : "src/rpc/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 225658988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15776",
      "updated_at" : "2019-04-11T16:52:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274521787",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/4360349?v=4",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "node_id" : "MDQ6VXNlcjQzNjAzNDk=",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   }
]
