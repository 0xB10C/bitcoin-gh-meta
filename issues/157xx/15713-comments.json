[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15747](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15747.html) (wallet: Remove plethora of Get*Balance by MarcoFalke)\n* [#15728](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15728.html) ([wallet] Refactor relay transactions by jnewbery)\n* [#15719](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15719.html) (Drop Chain::requestMempoolTransactions method by ryanofsky)\n* [#15638](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15638.html) (Move-only: Pull wallet code out of libbitcoin_server by ryanofsky)\n* [#15632](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15632.html) (Remove ResendWalletTransactions from the Validation Interface by jnewbery)\n* [#15253](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15253.html) (Net: Consistently log outgoing INV messages by Empact)\n* [#9381](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9381.html) (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-04-01T02:38:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-478415987",
      "id" : 478415987,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODQxNTk4Nw==",
      "updated_at" : "2019-04-04T20:14:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478415987",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-01T20:13:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-478729279",
      "id" : 478729279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODcyOTI3OQ==",
      "updated_at" : "2019-04-01T20:13:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478729279",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271524444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271524444"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for consolidating the code from `relayTransaction` and `submitToMemoryPool` in `interfaces/chain.cpp` and from `BroadcastTransaction` in `node/transaction.cpp`.\r\n\r\nI do think the right place for all this code to live is in `node/transaction.cpp`, though. `interfaces/chain.cpp` is really just meant to be a simple glue file with lines like:\r\n\r\n```c++\r\nbool broadcastTransaction(...) override { return BroadcastTransaction(...); }\r\n```\r\n\r\nAlso, I didn't look closely yet, but it seems like this refactoring might be changing wallet behavior (this could explain travis test failures). It would probably be better if this PR avoided changing behavior to the extent possible. This might require adding some extra options to the existing `BroadcastTransaction` function in `node/transaction.cpp`, or adding a second broadcast function there that can hopefully share some code with the current one.",
      "commit_id" : "468116be45943206bf59b667470084d0d9e9e8dd",
      "created_at" : "2019-04-02T22:47:36Z",
      "diff_hunk" : "@@ -306,10 +301,58 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, const uint256& txid, CValidationState& state, const CAmount& absurdfee, bool relay) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271524444",
      "id" : 271524444,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTUyNDQ0NA==",
      "original_commit_id" : "abae70356f288277618b2848a7bb659aff7d6200",
      "original_position" : 40,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 221937992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-04-04T00:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271524444",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271564894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271564894"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Okay was thinking than ```node/transaction.cpp``` was temporary and long term goal was to aggregate it to ```interfaces/node.cpp```.\r\nDidn't want to change wallet behavior, fixed it by adding options in the existing BroadcastTransaction (but still not sure of ReacceptWalletTransactions, should we broadcast txn there ?), functional tests should be good now. Also rebased",
      "commit_id" : "468116be45943206bf59b667470084d0d9e9e8dd",
      "created_at" : "2019-04-03T03:04:24Z",
      "diff_hunk" : "@@ -306,10 +301,58 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, const uint256& txid, CValidationState& state, const CAmount& absurdfee, bool relay) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271564894",
      "id" : 271564894,
      "in_reply_to_id" : 271524444,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTU2NDg5NA==",
      "original_commit_id" : "abae70356f288277618b2848a7bb659aff7d6200",
      "original_position" : 40,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 221987898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-04-04T00:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271564894",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271569776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271569776"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271524444\r\n\r\nThanks! This looks good and now net removes code (+63/-83).\r\n\r\n> Okay was thinking than node/transaction.cpp was temporary\r\n\r\nYeah, that may have been the original thought. But I think it could be a reasonable long term location if more things are moved around it. In any case it's where the BroadcastTransaction function currently lives, so it's easier not to move in this PR, which is more about simplifying wallet code.\r\n\r\n> and long term goal was to aggregate it to interfaces/node.cpp\r\n\r\nEverything in interfaces/, including interfaces/node.cpp is just supposed to be very short glue code (the files would be huge otherwise). The interfaces are a way of letting wallet, node, and gui code run in different processes, and a way of preventing them from accessing each others internal state.",
      "commit_id" : "468116be45943206bf59b667470084d0d9e9e8dd",
      "created_at" : "2019-04-03T03:43:00Z",
      "diff_hunk" : "@@ -306,10 +301,58 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, const uint256& txid, CValidationState& state, const CAmount& absurdfee, bool relay) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271569776",
      "id" : 271569776,
      "in_reply_to_id" : 271524444,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTU2OTc3Ng==",
      "original_commit_id" : "abae70356f288277618b2848a7bb659aff7d6200",
      "original_position" : 40,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 221993941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-04-04T00:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271569776",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271570034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271570034"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can drop this whole comment since assumeLocked call is removed.",
      "commit_id" : "468116be45943206bf59b667470084d0d9e9e8dd",
      "created_at" : "2019-04-03T03:44:48Z",
      "diff_hunk" : "@@ -210,8 +205,7 @@ class NotificationsHandlerImpl : public Handler, CValidationInterface\n         // should be able to be removed entirely if `ResendWalletTransactions`\n         // is replaced by a wallet timer as suggested in\n         // https://github.com/bitcoin/bitcoin/issues/15619",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271570034",
      "id" : 271570034,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTU3MDAzNA==",
      "original_commit_id" : "322638ca7bd5859cc49be694e9f8f9c7923572dc",
      "original_position" : 24,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 221994261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-04-04T00:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271570034",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271571388"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271571388"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should be no need to lock again because locked_chain is passed as an argument above. Guessing this is a rebase issue after 0440481c6bf5683eff669c789bdf6a306d99adc5 (#15652)",
      "commit_id" : "468116be45943206bf59b667470084d0d9e9e8dd",
      "created_at" : "2019-04-03T03:55:13Z",
      "diff_hunk" : "@@ -1867,43 +1867,44 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     if (!fBroadcastTransactions)\n         return;\n     std::map<int64_t, CWalletTx*> mapSorted;\n-\n-    // Sort pending wallet transactions based on their initial wallet insertion order\n-    for (std::pair<const uint256, CWalletTx>& item : mapWallet)\n     {\n-        const uint256& wtxid = item.first;\n-        CWalletTx& wtx = item.second;\n-        assert(wtx.GetHash() == wtxid);\n+        auto locked_chain = chain().lock();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271571388",
      "id" : 271571388,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTU3MTM4OA==",
      "original_commit_id" : "322638ca7bd5859cc49be694e9f8f9c7923572dc",
      "original_position" : 11,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 221994261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-04-04T00:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271571388",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for looking at this @ariard. My view is different from @ryanofsky's. I think rather than trying to maintain existing behaviour, we should use this interface tidyup to better define the relationship between the wallet and the node, ie to answer the question \"What services should the node offer to the wallet?\" Currently, the node exposes two methods to the wallet for sending a transaction:\r\n\r\n1. `submitToMemoryPool(const CTransactionRef& tx, CAmount absurd_fee, CValidationState& state)`: Add transaction to memory pool if the transaction fee is below the amount specified by absurd_fee. Returns false if the transaction could not be added due to the fee or for another reason. This is only called in `CWalletTx::AcceptToMemoryPool()`\r\n2. `relayTransaction(const uint256& txid)`: adds the txid to the INV queue for each peer. This is only called in `CWalletTx::RelayWalletTransaction()` (which also calls `CWalletTx::AcceptToMemoryPool()`)\r\n\r\nNote that to relay an INV for the transaction to peers (2), the transaction must already be in the mempool. See:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/ba54342c9dd3f2e5cdeed9ac57f1924f0d885cc6/src/net_processing.cpp#L3804\r\n\r\n`relayTransaction()` is only ever called if `InMempool() || AcceptToMemoryPool()` is true.\r\n\r\nThe wallet currently calls `CWalletTx::AcceptToMemoryPool()` in the following places:\r\n\r\n1a. In `CWallet::ReacceptWalletTransactions()`, called after the wallet has started up to make sure that its transactions are added to the mempool at start.\r\n2a. In `CWalletTx::RelayWalletTransaction()`, mentioned above.\r\n3a. In `CWallet::CommitTransaction()`, when a transaction is to be broadcast to the network for the first time.\r\n\r\nThe wallet currently calls `CWalletTx::RelayWalletTransaction()` in the following places:\r\n\r\n2a. In `CWallet::ResendWalletTransactions()`, called on a timer to rebroadcast unconfirmed transactions.\r\n2b. In `CWallet::CommitTransaction()`, but only if the transaction is successfully added to the mempool.\r\n\r\nI've been thinking about this in the context of the wallet rebroadcasting transactions (see discussion here: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2019/bitcoin-core-dev.2019-03-29-19.10.log.html#l-9). My view now is that the wallet should not have any access to relay functionality. It should be able to submit transactions to the node's mempool, and it should then be the mempool's responsibility to broadcast/rebroadcast the transaction (see comment here: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2019/bitcoin-core-dev.2019-03-29-19.10.log.html#l-92). That seems like a much cleaner divide of responsibility.\r\n\r\nThis PR seems like a simplification in terms of combining `submitToMemoryPool()` and `relayTransaction()` into a single method, but I don't think that it moves us towards a point where the node<->wallet interface is simpler to understand.",
      "created_at" : "2019-04-03T20:32:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-479647663",
      "id" : 479647663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTY0NzY2Mw==",
      "updated_at" : "2019-04-03T20:32:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479647663",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "John are you just saying that this PR does not go far enough, or that it does something bad or makes things more complicated?\r\n\r\nI haven't looked closely enough at this yet but if it exposes one node method node instead of two, and reduces the amount of code without changing behavior, it would seem like a strict improvement. Is your rebroadcast proposal harder to implement after this PR?",
      "created_at" : "2019-04-03T20:45:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-479652022",
      "id" : 479652022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTY1MjAyMg==",
      "updated_at" : "2019-04-03T20:45:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479652022",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I haven't looked closely enough at this yet but if it exposes one node method node instead of two, and reduces the amount of code without changing behavior, it would seem like a strict improvement.\r\n\r\nIt does reduce the number of node methods exposed, but does so by adding a flag to one of them which toggles the behaviour. I'm not sure if that counts as a simplification, or it's just moving the complexity around. I'm also not sure if this maintains existing behaviour. For example, the `GetDepthInMainChain(locked_chain) == 0` in `RelayWalletTransaction()` seems to have gone and not been replaced by anything.",
      "created_at" : "2019-04-03T21:24:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-479664520",
      "id" : 479664520,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTY2NDUyMA==",
      "updated_at" : "2019-04-03T21:24:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479664520",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271969421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271969421"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "468116be45943206bf59b667470084d0d9e9e8dd",
      "created_at" : "2019-04-03T23:22:35Z",
      "diff_hunk" : "@@ -210,8 +205,7 @@ class NotificationsHandlerImpl : public Handler, CValidationInterface\n         // should be able to be removed entirely if `ResendWalletTransactions`\n         // is replaced by a wallet timer as suggested in\n         // https://github.com/bitcoin/bitcoin/issues/15619",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271969421",
      "id" : 271969421,
      "in_reply_to_id" : 271570034,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTk2OTQyMQ==",
      "original_commit_id" : "322638ca7bd5859cc49be694e9f8f9c7923572dc",
      "original_position" : 24,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 222499264,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-04-04T00:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271969421",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I kinda agree with @jnewbery here, wallet shouldn't have access to relay, because if so it may add complexity of proper tx rebroadcasting tracking, notably in privacy-enhancing context in referenced discussions ?\r\nHave taken GetDepthInMainChain and IsCoinbase out, because seems it's cleaner to let the mempool do the checks, in AcceptToMemoryPoolWorker if I understand it well. And not multiply spurious wallet accesses to chain state.\r\nSorry scope of PR wasn't clear, would happily change it to underline the real issue I guess.",
      "created_at" : "2019-04-03T23:55:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-479699376",
      "id" : 479699376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTY5OTM3Ng==",
      "updated_at" : "2019-04-03T23:57:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479699376",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271980722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271980722"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes on my own, should be corrected!",
      "commit_id" : "468116be45943206bf59b667470084d0d9e9e8dd",
      "created_at" : "2019-04-04T00:24:54Z",
      "diff_hunk" : "@@ -1867,43 +1867,44 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     if (!fBroadcastTransactions)\n         return;\n     std::map<int64_t, CWalletTx*> mapSorted;\n-\n-    // Sort pending wallet transactions based on their initial wallet insertion order\n-    for (std::pair<const uint256, CWalletTx>& item : mapWallet)\n     {\n-        const uint256& wtxid = item.first;\n-        CWalletTx& wtx = item.second;\n-        assert(wtx.GetHash() == wtxid);\n+        auto locked_chain = chain().lock();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271980722",
      "id" : 271980722,
      "in_reply_to_id" : 271571388,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTk4MDcyMg==",
      "original_commit_id" : "322638ca7bd5859cc49be694e9f8f9c7923572dc",
      "original_position" : 11,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 222512751,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-04-04T00:24:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271980722",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
