[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2023-01-23T17:16:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26957#issuecomment-1400700700",
      "id" : 1400700700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26957",
      "node_id" : "IC_kwDOABII585TfP8c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1400700700/reactions"
      },
      "updated_at" : "2023-01-23T17:16:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1400700700",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1084351946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084351946"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The way this benchmark is implemented, we can identify a regression between code changes. But if we wanted to get a sense of how logging without a a debug.log file compares to logging with a debug.log file, this doesn't help, right? It should only log with one of {LogPrintLevel, LogPrint, LogPrintfCategory} in order to compare the result with one of the other benchmarks.",
      "commit_id" : "eddf2d21eeea2a37b303b11f08ed8f01e561e1b3",
      "created_at" : "2023-01-23T17:35:27Z",
      "diff_hunk" : "@@ -17,32 +17,62 @@ static void Logging(benchmark::Bench& bench, const std::vector<const char*>& ext\n     bench.run([&] { log(); });\n }\n \n-static void LoggingYoThreadNames(benchmark::Bench& bench)\n+static void LogPrintLevelWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n }\n-static void LoggingNoThreadNames(benchmark::Bench& bench)\n+\n+static void LogPrintLevelWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithoutCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=0\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintfCategoryWithThreadNames(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintfCategory(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintfCategoryWithoutThreadNames(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintfCategory(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n }\n-static void LoggingYoCategory(benchmark::Bench& bench)\n+\n+static void LogPrintfWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::NET, \"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n }\n-static void LoggingNoCategory(benchmark::Bench& bench)\n+\n+static void LogPrintfWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\", \"-debug=0\"}, [] { LogPrint(BCLog::NET, \"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n }\n-static void LoggingNoFile(benchmark::Bench& bench)\n+\n+static void LogWithoutDebugLogFile(benchmark::Bench& bench)\n {\n     Logging(bench, {\"-nodebuglogfile\", \"-debug=1\"}, [] {\n+        LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\");\n+        LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\");\n+        LogPrintfCategory(BCLog::VALIDATION, \"%s\\n\", \"test\");\n         LogPrintf(\"%s\\n\", \"test\");\n-        LogPrint(BCLog::NET, \"%s\\n\", \"test\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1084351946",
      "id" : 1084351946,
      "line" : 40,
      "node_id" : "PRRC_kwDOABII585AoeXK",
      "original_commit_id" : "eddf2d21eeea2a37b303b11f08ed8f01e561e1b3",
      "original_line" : 40,
      "original_position" : 60,
      "original_start_line" : 63,
      "path" : "src/bench/logging.cpp",
      "position" : 60,
      "pull_request_review_id" : 1266044025,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084351946/reactions"
      },
      "side" : "LEFT",
      "start_line" : 63,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-23T17:35:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084351946",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1084394512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084394512"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That benchmark was added in fa31dc9b714 with the intention expressed in https://github.com/bitcoin/bitcoin/pull/18815#issuecomment-621404493, i.e. to test this code currently in `setup_common`:\r\n\r\n```cpp\r\n/**\r\n * Make a test setup that has disk access to the debug.log file disabled. Can\r\n * be used in \"hot loops\", for example fuzzing or benchmarking.\r\n */\r\ntemplate <class T = const BasicTestingSetup>\r\nstd::unique_ptr<T> MakeNoLogFileContext(const std::string& chain_name = CBaseChainParams::REGTEST, const std::vector<const char*>& extra_args = {})\r\n{\r\n    const std::vector<const char*> arguments = Cat(\r\n        {\r\n            \"-nodebuglogfile\",\r\n            \"-nodebug\",\r\n        },\r\n        extra_args);\r\n\r\n    return std::make_unique<T>(chain_name, arguments);\r\n}\r\n```\r\n",
      "commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "created_at" : "2023-01-23T18:18:13Z",
      "diff_hunk" : "@@ -17,32 +17,62 @@ static void Logging(benchmark::Bench& bench, const std::vector<const char*>& ext\n     bench.run([&] { log(); });\n }\n \n-static void LoggingYoThreadNames(benchmark::Bench& bench)\n+static void LogPrintLevelWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n }\n-static void LoggingNoThreadNames(benchmark::Bench& bench)\n+\n+static void LogPrintLevelWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithoutCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=0\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintfCategoryWithThreadNames(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintfCategory(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintfCategoryWithoutThreadNames(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintfCategory(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n }\n-static void LoggingYoCategory(benchmark::Bench& bench)\n+\n+static void LogPrintfWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::NET, \"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n }\n-static void LoggingNoCategory(benchmark::Bench& bench)\n+\n+static void LogPrintfWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\", \"-debug=0\"}, [] { LogPrint(BCLog::NET, \"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n }\n-static void LoggingNoFile(benchmark::Bench& bench)\n+\n+static void LogWithoutDebugLogFile(benchmark::Bench& bench)\n {\n     Logging(bench, {\"-nodebuglogfile\", \"-debug=1\"}, [] {\n+        LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\");\n+        LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\");\n+        LogPrintfCategory(BCLog::VALIDATION, \"%s\\n\", \"test\");\n         LogPrintf(\"%s\\n\", \"test\");\n-        LogPrint(BCLog::NET, \"%s\\n\", \"test\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1084394512",
      "id" : 1084394512,
      "in_reply_to_id" : 1084351946,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AoowQ",
      "original_commit_id" : "eddf2d21eeea2a37b303b11f08ed8f01e561e1b3",
      "original_line" : 40,
      "original_position" : 60,
      "original_start_line" : 63,
      "path" : "src/bench/logging.cpp",
      "position" : null,
      "pull_request_review_id" : 1266104090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084394512/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-23T19:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084394512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1084439926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084439926"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks @kouloumos. Decided to add a comment to clarify the intention behind that -nodebuglogfile bench, and not add macros to it per your suggestion.",
      "commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "created_at" : "2023-01-23T19:06:27Z",
      "diff_hunk" : "@@ -17,32 +17,62 @@ static void Logging(benchmark::Bench& bench, const std::vector<const char*>& ext\n     bench.run([&] { log(); });\n }\n \n-static void LoggingYoThreadNames(benchmark::Bench& bench)\n+static void LogPrintLevelWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n }\n-static void LoggingNoThreadNames(benchmark::Bench& bench)\n+\n+static void LogPrintLevelWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithoutCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=0\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintfCategoryWithThreadNames(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintfCategory(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintfCategoryWithoutThreadNames(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintfCategory(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n }\n-static void LoggingYoCategory(benchmark::Bench& bench)\n+\n+static void LogPrintfWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::NET, \"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n }\n-static void LoggingNoCategory(benchmark::Bench& bench)\n+\n+static void LogPrintfWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\", \"-debug=0\"}, [] { LogPrint(BCLog::NET, \"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n }\n-static void LoggingNoFile(benchmark::Bench& bench)\n+\n+static void LogWithoutDebugLogFile(benchmark::Bench& bench)\n {\n     Logging(bench, {\"-nodebuglogfile\", \"-debug=1\"}, [] {\n+        LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\");\n+        LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\");\n+        LogPrintfCategory(BCLog::VALIDATION, \"%s\\n\", \"test\");\n         LogPrintf(\"%s\\n\", \"test\");\n-        LogPrint(BCLog::NET, \"%s\\n\", \"test\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1084439926",
      "id" : 1084439926,
      "in_reply_to_id" : 1084351946,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Aoz12",
      "original_commit_id" : "eddf2d21eeea2a37b303b11f08ed8f01e561e1b3",
      "original_line" : 40,
      "original_position" : 60,
      "original_start_line" : 63,
      "path" : "src/bench/logging.cpp",
      "position" : null,
      "pull_request_review_id" : 1266173090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084439926/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-23T19:06:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084439926",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1088985030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1088985030"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I did not realize the purpose of this benchmark at first, and having a comment there makes sense. \r\nMay I suggest something more direct? Like: \r\n\"This benchmarks the logging configuration used by the testing setup, see `MakeNoLogFileContext`\"\r\n",
      "commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "created_at" : "2023-01-27T13:52:33Z",
      "diff_hunk" : "@@ -17,32 +17,61 @@ static void Logging(benchmark::Bench& bench, const std::vector<const char*>& ext\n     bench.run([&] { log(); });\n }\n \n-static void LoggingYoThreadNames(benchmark::Bench& bench)\n+static void LogPrintLevelWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n }\n-static void LoggingNoThreadNames(benchmark::Bench& bench)\n+\n+static void LogPrintLevelWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithoutCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=0\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintfCategoryWithThreadNames(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintfCategory(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintfCategoryWithoutThreadNames(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintfCategory(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n }\n-static void LoggingYoCategory(benchmark::Bench& bench)\n+\n+static void LogPrintfWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::NET, \"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n }\n-static void LoggingNoCategory(benchmark::Bench& bench)\n+\n+static void LogPrintfWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\", \"-debug=0\"}, [] { LogPrint(BCLog::NET, \"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n }\n-static void LoggingNoFile(benchmark::Bench& bench)\n+\n+static void LogWithoutWriteToFile(benchmark::Bench& bench)\n {\n+    // Disable writing the log to a file, e.g. for unit tests or fuzzing.\n     Logging(bench, {\"-nodebuglogfile\", \"-debug=1\"}, [] {\n         LogPrintf(\"%s\\n\", \"test\");\n-        LogPrint(BCLog::NET, \"%s\\n\", \"test\");\n+        LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\");\n     });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1088985030",
      "id" : 1088985030,
      "line" : 66,
      "node_id" : "PRRC_kwDOABII585A6JfG",
      "original_commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "original_line" : 66,
      "original_position" : 60,
      "original_start_line" : 60,
      "path" : "src/bench/logging.cpp",
      "position" : 60,
      "pull_request_review_id" : 1272729023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1088985030/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 60,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-27T16:04:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1088985030",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1089082037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089082037"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Before this PR, the logging benchmarks were only using the `LogPrintf` and `LogPrint` macros. Those have been renamed:\r\n- `LoggingYoThreadNames` -> `LogPrintfWithThreadNames`\r\n- `LoggingNoThreadNames` -> `LogPrintfWithoutThreadNames`\r\n- `LoggingYoCategory` -> `LogPrintWithCategory `\r\n- `LoggingNoCategory` -> `LogPrintWithoutCategory`\r\n- `LoggingNoFile` -> `LogWithoutWriteToFile`\r\n\r\nThere is something that puzzles me. \r\n\r\nThis is the result I get when running the new benchmarks with `src/bench/bench_bitcoin -filter=LogP.* -min-time=5000`:\r\n\r\nPR branch (9d708dbe598d096f277ee7ee3078423f416ece1b)\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|            6,695.43 |          149,355.54 |    0.2% |       22,379.28 |        9,404.03 |  2.380 |       4,522.98 |    0.2% |      5.50 | `LogPrintLevelWithThreadNames`\r\n|            6,472.74 |          154,494.18 |    0.2% |       21,721.01 |        8,977.58 |  2.419 |       4,357.01 |    0.1% |      5.45 | `LogPrintLevelWithoutThreadNames`\r\n|            6,426.44 |          155,607.13 |    0.1% |       21,447.01 |        8,893.94 |  2.411 |       4,292.01 |    0.1% |      5.37 | `LogPrintWithCategory`\r\n|            6,413.88 |          155,911.77 |    0.1% |       21,447.01 |        8,874.71 |  2.417 |       4,292.01 |    0.1% |      5.34 | `LogPrintWithoutCategory`\r\n|            6,554.13 |          152,575.56 |    0.2% |       21,905.78 |        9,140.18 |  2.397 |       4,407.96 |    0.1% |      5.42 | `LogPrintfCategoryWithThreadNames`\r\n|            6,383.81 |          156,646.25 |    0.2% |       21,320.76 |        8,819.82 |  2.417 |       4,259.87 |    0.1% |      5.37 | `LogPrintfCategoryWithoutThreadNames`\r\n|            6,493.25 |          154,006.16 |    0.2% |       21,697.01 |        9,026.45 |  2.404 |       4,349.01 |    0.1% |      5.48 | `LogPrintfWithThreadNames`\r\n|            6,401.44 |          156,214.93 |    0.1% |       21,143.74 |        8,857.86 |  2.387 |       4,207.97 |    0.2% |      5.36 | `LogPrintfWithoutThreadNames`\r\n\r\nBut if you compare `LogPrintWithoutCategory` with the results of its previous results (under the name `LoggingNoCategory`) in https://github.com/bitcoin/bitcoin/pull/26697#pullrequestreview-1253717862 you see a different result, which is the correct cause logging without category should be fast.\r\n\r\nNow, if you just run that benchmark by itself with `src/bench/bench_bitcoin -filter=LogPrintWithoutCategory -min-time=5000` you get the correct result\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|               11.89 |       84,122,117.23 |    0.2% |           78.00 |           23.59 |  3.307 |          14.00 |    0.0% |      5.49 | `LogPrintWithoutCategory\r\n\r\nThis \"wrong\" behavior is also observed when all the benchmarks are run with `src/bench/bench_bitcoin`\r\nShould we consider this an issue? It might result to confusion in the future. I am looking to understand why this is happening but haven't found anything yet.\r\n\r\nedit: @LarryRuane you [mentioned](https://github.com/bitcoin/bitcoin/pull/26697#issuecomment-1407028580) that you also ran those update benchmarks. Can you confirm that you also observe this behavior?",
      "commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "created_at" : "2023-01-27T15:19:59Z",
      "diff_hunk" : "@@ -17,32 +17,61 @@ static void Logging(benchmark::Bench& bench, const std::vector<const char*>& ext\n     bench.run([&] { log(); });\n }\n \n-static void LoggingYoThreadNames(benchmark::Bench& bench)\n+static void LogPrintLevelWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n }\n-static void LoggingNoThreadNames(benchmark::Bench& bench)\n+\n+static void LogPrintLevelWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithoutCategory(benchmark::Bench& bench)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1089082037",
      "id" : 1089082037,
      "line" : 35,
      "node_id" : "PRRC_kwDOABII585A6hK1",
      "original_commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "original_line" : 35,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/bench/logging.cpp",
      "position" : 23,
      "pull_request_review_id" : 1272729023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089082037/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-28T08:40:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089082037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1089132283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089132283"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What's the expected behavior when logging with a category that is not specified in `-debug=`?\r\n\r\nDoes logging with `BCLog::VALIDATION` but with `-debug=net` means that `BCLog::Logger::WillLogCategoryLevel` will return `false`? Therefore `LogPrint()` will not actually log?",
      "commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "created_at" : "2023-01-27T16:02:26Z",
      "diff_hunk" : "@@ -17,32 +17,61 @@ static void Logging(benchmark::Bench& bench, const std::vector<const char*>& ext\n     bench.run([&] { log(); });\n }\n \n-static void LoggingYoThreadNames(benchmark::Bench& bench)\n+static void LogPrintLevelWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n }\n-static void LoggingNoThreadNames(benchmark::Bench& bench)\n+\n+static void LogPrintLevelWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1089132283",
      "id" : 1089132283,
      "line" : 32,
      "node_id" : "PRRC_kwDOABII585A6tb7",
      "original_commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "original_line" : 32,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/bench/logging.cpp",
      "position" : 20,
      "pull_request_review_id" : 1272729023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089132283/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-27T16:04:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089132283",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1089790402"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089790402"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@kouloumos I'm seeing the same thing. After investigation, I found that the problem is that the global logging object instance is not re-created for each run. When `LogPrintWithoutCategory` runs, it still has logging categories enabled from the previous benchmark runs.\r\n\r\nThis patch fixes the problem for me, give it a try. The change to `LogInstance()` looks racy (i.e. what if two threads both see `g_logger` is null, and they both create a new object), but this change is safe because `LogInstance()` first runs as part of the [global static initialization](https://en.cppreference.com/w/cpp/language/initialization), before `main()` is called, so there's only one thread. But if there's concern about this, `std::call_once()` can be used (it's used in a few places already).\r\n\r\n<details>\r\n<summary>patch</summary>\r\n\r\n```diff\r\ndiff --git a/src/bench/logging.cpp b/src/bench/logging.cpp\r\nindex d5c78932bc..434d1c58d4 100644\r\n--- a/src/bench/logging.cpp\r\n+++ b/src/bench/logging.cpp\r\n@@ -9,6 +9,7 @@\r\n \r\n static void Logging(benchmark::Bench& bench, const std::vector<const char*>& extra_args, const std::function<void()>& log)\r\n {\r\n+    LogReset();\r\n     TestingSetup test_setup{\r\n         CBaseChainParams::REGTEST,\r\n         extra_args,\r\ndiff --git a/src/logging.cpp b/src/logging.cpp\r\nindex 8bf60169b0..24f3338368 100644\r\n--- a/src/logging.cpp\r\n+++ b/src/logging.cpp\r\n@@ -18,6 +18,8 @@\r\n const char * const DEFAULT_DEBUGLOGFILE = \"debug.log\";\r\n constexpr auto MAX_USER_SETABLE_SEVERITY_LEVEL{BCLog::Level::Info};\r\n \r\n+static BCLog::Logger* g_logger;\r\n+\r\n BCLog::Logger& LogInstance()\r\n {\r\n /**\r\n@@ -35,10 +37,16 @@ BCLog::Logger& LogInstance()\r\n  * This method of initialization was originally introduced in\r\n  * ee3374234c60aba2cc4c5cd5cac1c0aefc2d817c.\r\n  */\r\n-    static BCLog::Logger* g_logger{new BCLog::Logger()};\r\n+    if (g_logger == nullptr) g_logger = new BCLog::Logger();\r\n     return *g_logger;\r\n }\r\n \r\n+void LogReset()\r\n+{\r\n+    delete g_logger;\r\n+    g_logger = new BCLog::Logger();\r\n+}\r\n+\r\n bool fLogIPs = DEFAULT_LOGIPS;\r\n \r\n static int FileWriteStr(const std::string &str, FILE *fp)\r\ndiff --git a/src/logging.h b/src/logging.h\r\nindex 16f23a19e8..522923c000 100644\r\n--- a/src/logging.h\r\n+++ b/src/logging.h\r\n@@ -266,6 +266,7 @@ namespace BCLog {\r\n } // namespace BCLog\r\n \r\n BCLog::Logger& LogInstance();\r\n+void LogReset(); // testing only\r\n \r\n /** Return true if log accepts specified category, at the specified level. */\r\n static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level level)\r\n```\r\n</details>",
      "commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "created_at" : "2023-01-28T18:38:32Z",
      "diff_hunk" : "@@ -17,32 +17,61 @@ static void Logging(benchmark::Bench& bench, const std::vector<const char*>& ext\n     bench.run([&] { log(); });\n }\n \n-static void LoggingYoThreadNames(benchmark::Bench& bench)\n+static void LogPrintLevelWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n }\n-static void LoggingNoThreadNames(benchmark::Bench& bench)\n+\n+static void LogPrintLevelWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithoutCategory(benchmark::Bench& bench)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1089790402",
      "id" : 1089790402,
      "in_reply_to_id" : 1089082037,
      "line" : 35,
      "node_id" : "PRRC_kwDOABII585A9OHC",
      "original_commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "original_line" : 35,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/bench/logging.cpp",
      "position" : 23,
      "pull_request_review_id" : 1273992199,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089790402/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-28T18:38:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089790402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1089790857"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089790857"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> What's the expected behavior when logging with a category that is not specified in -debug=?\r\n\r\nIt should not log. Note that the `LogPrintWithoutCategory` benchmark specifies `-debug=0` which disables all categories, although this has a problem that I mentioned in my other comment.\r\n\r\n> Does logging with BCLog::VALIDATION but with -debug=net means that BCLog::Logger::WillLogCategoryLevel will return false? Therefore LogPrint() will not actually log?\r\n\r\nThat's correct.",
      "commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "created_at" : "2023-01-28T18:42:40Z",
      "diff_hunk" : "@@ -17,32 +17,61 @@ static void Logging(benchmark::Bench& bench, const std::vector<const char*>& ext\n     bench.run([&] { log(); });\n }\n \n-static void LoggingYoThreadNames(benchmark::Bench& bench)\n+static void LogPrintLevelWithThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=1\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n }\n-static void LoggingNoThreadNames(benchmark::Bench& bench)\n+\n+static void LogPrintLevelWithoutThreadNames(benchmark::Bench& bench)\n {\n-    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintf(\"%s\\n\", \"test\"); });\n+    Logging(bench, {\"-logthreadnames=0\"}, [] { LogPrintLevel(BCLog::VALIDATION, BCLog::Level::Error, \"%s\\n\", \"test\"); });\n+}\n+\n+static void LogPrintWithCategory(benchmark::Bench& bench)\n+{\n+    Logging(bench, {\"-logthreadnames=0\", \"-debug=net\"}, [] { LogPrint(BCLog::VALIDATION, \"%s\\n\", \"test\"); });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26957#discussion_r1089790857",
      "id" : 1089790857,
      "in_reply_to_id" : 1089132283,
      "line" : 32,
      "node_id" : "PRRC_kwDOABII585A9OOJ",
      "original_commit_id" : "9d708dbe598d096f277ee7ee3078423f416ece1b",
      "original_line" : 32,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/bench/logging.cpp",
      "position" : 20,
      "pull_request_review_id" : 1273992551,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26957",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089790857/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-28T18:42:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089790857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   }
]
