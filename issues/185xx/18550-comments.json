[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure this change is worth it and doesn't introduce more strange behaviors. If goal is to retroactively fix detection of change addresses in v0.19 wallets, this seems like it would simpler and be more convenient to use as a standalone wallet tool function.\r\n\r\nAs I understand things, #13756 in v0.19 introduced a bug where change addresses might be marked in a way where they are treated as non-change. #18192 in v0.20 fixed this by correctly interpreting all change addresses as change.\r\n\r\nThe benefit of this PR is it could be useful to someone who wants to keep running 0.19 software and have it keep incorrectly interpreting change addresses as non-change, but then periodically load up the wallet in a 0.20 node to tweak the database, so when they reload the wallet back in 0.19, the 0.19 software will now correctly see all change addresses as change (until it adds more change addresses that get misinterpreted and it is necessary to fix up the database with 0.20 again).\r\n\r\nThis seems like a pretty unusual use case and also one that would be less awkwardly handled with a standalone `bitcoin-wallet` tool function that just deletes the \"used\" destdata entries instead of storing them in a different way where the 0.19 code can't find them and 0.20 code now has to look for them",
      "created_at" : "2020-04-07T14:52:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18550#issuecomment-610433547",
      "id" : 610433547,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMDQzMzU0Nw==",
      "updated_at" : "2020-04-07T14:55:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/610433547",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re comment in IRC about tests: [`feature_backwards_compatibility.py`](https://github.com/bitcoin/bitcoin/blob/master/test/functional/feature_backwards_compatibility.py) could be useful here. As an example, https://github.com/Sjors/bitcoin/commit/bacf55990905c0257c7bc45bbbd2b028716efc7f was a test added for the backwards compatibility bug #18075",
      "created_at" : "2020-04-07T15:11:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18550#issuecomment-610444557",
      "id" : 610444557,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMDQ0NDU1Nw==",
      "updated_at" : "2020-04-07T15:11:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/610444557",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Without this, we can't start adding more destdata to change without breaking backward compatibility. If we go that route, we should make a wallet version bump so 0.19 doesn't try to load the wallet at all. But that also means new features based on it won't be available until users do wallet upgrades explicitly... I'd rather avoid that.\r\n\r\nMy eventual intent is to (for 0.21) add a new destdata indicating the destination has been used (really used, not avoid-reuse \"used\") and reimplement #15987 without a bloom filter.",
      "created_at" : "2020-04-07T17:36:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18550#issuecomment-610523497",
      "id" : 610523497,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMDUyMzQ5Nw==",
      "updated_at" : "2020-04-07T17:36:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/610523497",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@achow101 Does the above interfere in any way with descriptor wallets?",
      "created_at" : "2020-04-07T18:45:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18550#issuecomment-610556855",
      "id" : 610556855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMDU1Njg1NQ==",
      "updated_at" : "2020-04-07T18:45:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/610556855",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @achow101 Does the above interfere in any way with descriptor wallets?\r\n\r\nIt shouldn't. Descriptor wallets currently does not touch any address book stuff or change how change is detected.",
      "created_at" : "2020-04-07T18:49:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18550#issuecomment-610559137",
      "id" : 610559137,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMDU1OTEzNw==",
      "updated_at" : "2020-04-07T18:49:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/610559137",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "So the behavior change I described above is NOT actually the intent of the PR? Just kind of a side effect? I'm more confused now about what the benefit of this change is.\r\n\r\n> Without this, we can't start adding more destdata to change without breaking backward compatibility\r\n\r\nWith or without this PR, adding DESTDATA rows in the database for change addresses will break backwards compatibility and cause them to be treated as non-change using previous releases, and this PR can't change that. This PR seems to be making relationship between DESTDATA rows and CAddressBookData::destdata entries more complicated just to mask this\r\n\r\n> If we go that route, we should make a wallet version bump so 0.19 doesn't try to load the wallet at all\r\n\r\nThis doesn't make sense to me. What problem is solved by bumping wallet version number in v0.20 when v0.20 wallets are compatible with v0.19? Obviously if there are future incompatible changes it would make sense to bump the version or use flags then.\r\n\r\n> But that also means new features based on it won't be available until users do wallet upgrades explicitly... I'd rather avoid that.\r\n\r\nWhat new feature depends on writing DESTDATA rows for change addresses? This isn't possible without breaking backwards compatibility\r\n\r\n> My eventual intent is to (for 0.21) add a new destdata indicating the destination has been used (really used, not avoid-reuse \"used\") and reimplement #15987 without a bloom filter.\r\n\r\nDESTDATA and CAddressBookData::destdata seems like the wrong tool for the job. Isn't adding a new row type that old wallet software will not misinterpret and new CAddressBookData field(s) the simplest approach?",
      "created_at" : "2020-04-07T19:15:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18550#issuecomment-610571113",
      "id" : 610571113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMDU3MTExMw==",
      "updated_at" : "2020-04-07T19:15:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/610571113",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">With or without this PR, adding DESTDATA rows in the database for change addresses will break backwards compatibility and cause them to be treated as non-change using previous releases, and this PR can't change that.\r\n\r\nIt does change that. By storing destdata in \"changedata\" keys, old versions ignore them entirely, thus retain the change-ness of the destination.\r\n",
      "created_at" : "2020-04-07T19:47:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18550#issuecomment-610585394",
      "id" : 610585394,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMDU4NTM5NA==",
      "updated_at" : "2020-04-07T19:47:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/610585394",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > With or without this PR, adding DESTDATA rows in the database for change addresses will break backwards compatibility and cause them to be treated as non-change using previous releases, and this PR can't change that.\r\n> \r\n> It does change that. By storing destdata in \"changedata\" keys, old versions ignore them entirely, thus retain the change-ness of the destination.\r\n\r\nIt seems like this response is just playing with words and ignoring my actual questions above. I said \"DESTDATA rows\" and this is pretending I said \"destdata map entries\". I can see how the PR works, but I don't understand why it is complicating the destdata storage so much and munging v0.19 databases in the process instead of just adding a new field. I could easily be missing something but I don't understand what I am missing.",
      "created_at" : "2020-04-09T07:40:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18550#issuecomment-611381217",
      "id" : 611381217,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMTM4MTIxNw==",
      "updated_at" : "2020-04-09T07:43:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/611381217",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
