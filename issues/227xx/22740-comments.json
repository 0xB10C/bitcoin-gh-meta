[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Ready for rebase now that #22697 is merged.",
      "created_at" : "2021-08-20T13:36:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-902698418",
      "id" : 902698418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22740",
      "node_id" : "IC_kwDOABII5841zhWy",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-20T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902698418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is there a reason to not move every implementation to the cpp file?",
      "created_at" : "2021-08-20T13:45:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-902703657",
      "id" : 902703657,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22740",
      "node_id" : "IC_kwDOABII5841ziop",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-20T13:45:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902703657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n\r\n>Is there a reason to not move every implementation to the cpp file?\r\n\r\nhmm, are you referring to the definitions of the wrapper functions? Most of what's left in the header are the simple public functions that acquire lock, call check & invoke the private functions.",
      "created_at" : "2021-08-20T19:48:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-902918737",
      "id" : 902918737,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22740",
      "node_id" : "IC_kwDOABII58410XJR",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-20T19:48:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902918737",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22734](https://github.com/bitcoin/bitcoin/pull/22734) (addrman: Avoid crash on corrupt data, Force Check after deserialize by MarcoFalke)\n* [#22094](https://github.com/bitcoin/bitcoin/pull/22094) (p2p: fix ubsan addrman errors, make nTime truncation conversion explicit by jonatack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-08-21T02:15:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-903038667",
      "id" : 903038667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22740",
      "node_id" : "IC_kwDOABII584100bL",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-21T02:15:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903038667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r695893737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695893737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think these need to change any more, now that you're defining `ADDRMAN_NEW_BUCKET_COUNT` and `ADDRMAN_BUCKET_SIZE` as ints.",
      "commit_id" : "954785dd1d37968aba618743baf25760b8105a4c",
      "created_at" : "2021-08-25T15:58:08Z",
      "diff_hunk" : "@@ -111,8 +111,8 @@ class CAddrManTest : public CAddrMan\n     {\n         LOCK(cs);\n         int nId = mapAddr[addr];\n-        for (int bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; ++bucket) {\n-            for (int entry = 0; entry < ADDRMAN_BUCKET_SIZE; ++entry) {\n+        for (size_t bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; ++bucket) {\n+            for (size_t entry = 0; entry < ADDRMAN_BUCKET_SIZE; ++entry) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r695893737",
      "id" : 695893737,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTg5MzczNw==",
      "original_commit_id" : "1e4744cd8b62d3f365b3fe6507ddf440f9086ff9",
      "original_line" : 115,
      "original_position" : 7,
      "original_start_line" : 114,
      "path" : "src/test/addrman_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 738541814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-08-25T16:09:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695893737",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I haven't checked format specifiers in other places\r\n\r\nWe use tinyformat, so when in doubt you can (at no risk) just always use `%s`.",
      "created_at" : "2021-08-25T16:27:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-905687911",
      "id" : 905687911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22740",
      "node_id" : "IC_kwDOABII5841-7Nn",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-25T16:27:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905687911",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696261860"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696261860"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed, thanks!",
      "commit_id" : "954785dd1d37968aba618743baf25760b8105a4c",
      "created_at" : "2021-08-26T03:30:49Z",
      "diff_hunk" : "@@ -111,8 +111,8 @@ class CAddrManTest : public CAddrMan\n     {\n         LOCK(cs);\n         int nId = mapAddr[addr];\n-        for (int bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; ++bucket) {\n-            for (int entry = 0; entry < ADDRMAN_BUCKET_SIZE; ++entry) {\n+        for (size_t bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; ++bucket) {\n+            for (size_t entry = 0; entry < ADDRMAN_BUCKET_SIZE; ++entry) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696261860",
      "id" : 696261860,
      "in_reply_to_id" : 695893737,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NjI2MTg2MA==",
      "original_commit_id" : "1e4744cd8b62d3f365b3fe6507ddf440f9086ff9",
      "original_line" : 115,
      "original_position" : 7,
      "original_start_line" : 114,
      "path" : "src/test/addrman_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 739002357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-08-26T03:30:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696261860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "thanks for the review @jnewbery. took all your suggestions & updated the commit messages with reviewer hints. @MarcoFalke thanks for the tip about tinyformat! I had not realized the specifier interchangeability that provides. I did update the inconsistency that John pointed out, but seems like getting these specifiers right is generally unnecessary in our codebase!? ð¤¯ ",
      "created_at" : "2021-08-26T03:41:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-906068505",
      "id" : 906068505,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22740",
      "node_id" : "IC_kwDOABII5842AYIZ",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-26T03:41:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906068505",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696618049"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696618049"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please remove extra newline",
      "commit_id" : "954785dd1d37968aba618743baf25760b8105a4c",
      "created_at" : "2021-08-26T13:15:46Z",
      "diff_hunk" : "@@ -733,3 +1033,4 @@ std::vector<bool> CAddrMan::DecodeAsmap(fs::path path)\n     }\n     return bits;\n }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696618049",
      "id" : 696618049,
      "line" : 1036,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NjYxODA0OQ==",
      "original_commit_id" : "954785dd1d37968aba618743baf25760b8105a4c",
      "original_line" : 1036,
      "original_position" : 318,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 318,
      "pull_request_review_id" : 739459336,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-26T13:17:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696618049",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696619577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696619577"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These changes to the format specifiers should be in _[addrman] Change addrman #define constants to be constexprs_ (where you declare the types of the constants) rather than _[move-only] Extract constants from addrman .h to .cpp_ (which should be move-only)",
      "commit_id" : "954785dd1d37968aba618743baf25760b8105a4c",
      "created_at" : "2021-08-26T13:17:25Z",
      "diff_hunk" : "@@ -94,6 +115,285 @@ CAddrMan::CAddrMan(bool deterministic, int32_t consistency_check_ratio)\n     }\n }\n \n+template <typename Stream>\n+void CAddrMan::Serialize(Stream& s_) const\n+{\n+    LOCK(cs);\n+\n+    /**\n+     * Serialized format.\n+     * * format version byte (@see `Format`)\n+     * * lowest compatible format version byte. This is used to help old software decide\n+     *   whether to parse the file. For example:\n+     *   * Bitcoin Core version N knows how to parse up to format=3. If a new format=4 is\n+     *     introduced in version N+1 that is compatible with format=3 and it is known that\n+     *     version N will be able to parse it, then version N+1 will write\n+     *     (format=4, lowest_compatible=3) in the first two bytes of the file, and so\n+     *     version N will still try to parse it.\n+     *   * Bitcoin Core version N+2 introduces a new incompatible format=5. It will write\n+     *     (format=5, lowest_compatible=5) and so any versions that do not know how to parse\n+     *     format=5 will not try to read the file.\n+     * * nKey\n+     * * nNew\n+     * * nTried\n+     * * number of \"new\" buckets XOR 2**30\n+     * * all new addresses (total count: nNew)\n+     * * all tried addresses (total count: nTried)\n+     * * for each new bucket:\n+     *   * number of elements\n+     *   * for each element: index in the serialized \"all new addresses\"\n+     * * asmap checksum\n+     *\n+     * 2**30 is xorred with the number of buckets to make addrman deserializer v0 detect it\n+     * as incompatible. This is necessary because it did not check the version number on\n+     * deserialization.\n+     *\n+     * vvNew, vvTried, mapInfo, mapAddr and vRandom are never encoded explicitly;\n+     * they are instead reconstructed from the other information.\n+     *\n+     * This format is more complex, but significantly smaller (at most 1.5 MiB), and supports\n+     * changes to the ADDRMAN_ parameters without breaking the on-disk structure.\n+     *\n+     * We don't use SERIALIZE_METHODS since the serialization and deserialization code has\n+     * very little in common.\n+     */\n+\n+    // Always serialize in the latest version (FILE_FORMAT).\n+\n+    OverrideStream<Stream> s(&s_, s_.GetType(), s_.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << static_cast<uint8_t>(FILE_FORMAT);\n+\n+    // Increment `lowest_compatible` iff a newly introduced format is incompatible with\n+    // the previous one.\n+    static constexpr uint8_t lowest_compatible = Format::V3_BIP155;\n+    s << static_cast<uint8_t>(INCOMPATIBILITY_BASE + lowest_compatible);\n+\n+    s << nKey;\n+    s << nNew;\n+    s << nTried;\n+\n+    int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30);\n+    s << nUBuckets;\n+    std::unordered_map<int, int> mapUnkIds;\n+    int nIds = 0;\n+    for (const auto& entry : mapInfo) {\n+        mapUnkIds[entry.first] = nIds;\n+        const CAddrInfo &info = entry.second;\n+        if (info.nRefCount) {\n+            assert(nIds != nNew); // this means nNew was wrong, oh ow\n+            s << info;\n+            nIds++;\n+        }\n+    }\n+    nIds = 0;\n+    for (const auto& entry : mapInfo) {\n+        const CAddrInfo &info = entry.second;\n+        if (info.fInTried) {\n+            assert(nIds != nTried); // this means nTried was wrong, oh ow\n+            s << info;\n+            nIds++;\n+        }\n+    }\n+    for (int bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; bucket++) {\n+        int nSize = 0;\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; i++) {\n+            if (vvNew[bucket][i] != -1)\n+                nSize++;\n+        }\n+        s << nSize;\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; i++) {\n+            if (vvNew[bucket][i] != -1) {\n+                int nIndex = mapUnkIds[vvNew[bucket][i]];\n+                s << nIndex;\n+            }\n+        }\n+    }\n+    // Store asmap checksum after bucket entries so that it\n+    // can be ignored by older clients for backward compatibility.\n+    uint256 asmap_checksum;\n+    if (m_asmap.size() != 0) {\n+        asmap_checksum = SerializeHash(m_asmap);\n+    }\n+    s << asmap_checksum;\n+}\n+\n+template <typename Stream>\n+void CAddrMan::Unserialize(Stream& s_)\n+{\n+    LOCK(cs);\n+\n+    assert(vRandom.empty());\n+\n+    Format format;\n+    s_ >> Using<CustomUintFormatter<1>>(format);\n+\n+    int stream_version = s_.GetVersion();\n+    if (format >= Format::V3_BIP155) {\n+        // Add ADDRV2_FORMAT to the version so that the CNetAddr and CAddress\n+        // unserialize methods know that an address in addrv2 format is coming.\n+        stream_version |= ADDRV2_FORMAT;\n+    }\n+\n+    OverrideStream<Stream> s(&s_, s_.GetType(), stream_version);\n+\n+    uint8_t compat;\n+    s >> compat;\n+    const uint8_t lowest_compatible = compat - INCOMPATIBILITY_BASE;\n+    if (lowest_compatible > FILE_FORMAT) {\n+        throw std::ios_base::failure(strprintf(\n+                    \"Unsupported format of addrman database: %u. It is compatible with formats >=%u, \"\n+                    \"but the maximum supported by this version of %s is %u.\",\n+                    format, lowest_compatible, PACKAGE_NAME, static_cast<uint8_t>(FILE_FORMAT)));\n+    }\n+\n+    s >> nKey;\n+    s >> nNew;\n+    s >> nTried;\n+    int nUBuckets = 0;\n+    s >> nUBuckets;\n+    if (format >= Format::V1_DETERMINISTIC) {\n+        nUBuckets ^= (1 << 30);\n+    }\n+\n+    if (nNew > ADDRMAN_NEW_BUCKET_COUNT * ADDRMAN_BUCKET_SIZE || nNew < 0) {\n+        throw std::ios_base::failure(\n+                strprintf(\"Corrupt CAddrMan serialization: nNew=%d, should be in [0, %d]\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696619577",
      "id" : 696619577,
      "line" : 261,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NjYxOTU3Nw==",
      "original_commit_id" : "954785dd1d37968aba618743baf25760b8105a4c",
      "original_line" : 261,
      "original_position" : 175,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 175,
      "pull_request_review_id" : 739459336,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-26T13:17:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696619577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696899350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696899350"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "85b15ddc8ff499fe21d8ab35ece3994f8878b3de",
      "created_at" : "2021-08-26T18:56:54Z",
      "diff_hunk" : "@@ -733,3 +1033,4 @@ std::vector<bool> CAddrMan::DecodeAsmap(fs::path path)\n     }\n     return bits;\n }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696899350",
      "id" : 696899350,
      "in_reply_to_id" : 696618049,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Njg5OTM1MA==",
      "original_commit_id" : "954785dd1d37968aba618743baf25760b8105a4c",
      "original_line" : 1036,
      "original_position" : 318,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : null,
      "pull_request_review_id" : 739832917,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-26T18:56:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696899350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696899732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696899732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "blergh, my bad. fixed now.",
      "commit_id" : "85b15ddc8ff499fe21d8ab35ece3994f8878b3de",
      "created_at" : "2021-08-26T18:57:31Z",
      "diff_hunk" : "@@ -94,6 +115,285 @@ CAddrMan::CAddrMan(bool deterministic, int32_t consistency_check_ratio)\n     }\n }\n \n+template <typename Stream>\n+void CAddrMan::Serialize(Stream& s_) const\n+{\n+    LOCK(cs);\n+\n+    /**\n+     * Serialized format.\n+     * * format version byte (@see `Format`)\n+     * * lowest compatible format version byte. This is used to help old software decide\n+     *   whether to parse the file. For example:\n+     *   * Bitcoin Core version N knows how to parse up to format=3. If a new format=4 is\n+     *     introduced in version N+1 that is compatible with format=3 and it is known that\n+     *     version N will be able to parse it, then version N+1 will write\n+     *     (format=4, lowest_compatible=3) in the first two bytes of the file, and so\n+     *     version N will still try to parse it.\n+     *   * Bitcoin Core version N+2 introduces a new incompatible format=5. It will write\n+     *     (format=5, lowest_compatible=5) and so any versions that do not know how to parse\n+     *     format=5 will not try to read the file.\n+     * * nKey\n+     * * nNew\n+     * * nTried\n+     * * number of \"new\" buckets XOR 2**30\n+     * * all new addresses (total count: nNew)\n+     * * all tried addresses (total count: nTried)\n+     * * for each new bucket:\n+     *   * number of elements\n+     *   * for each element: index in the serialized \"all new addresses\"\n+     * * asmap checksum\n+     *\n+     * 2**30 is xorred with the number of buckets to make addrman deserializer v0 detect it\n+     * as incompatible. This is necessary because it did not check the version number on\n+     * deserialization.\n+     *\n+     * vvNew, vvTried, mapInfo, mapAddr and vRandom are never encoded explicitly;\n+     * they are instead reconstructed from the other information.\n+     *\n+     * This format is more complex, but significantly smaller (at most 1.5 MiB), and supports\n+     * changes to the ADDRMAN_ parameters without breaking the on-disk structure.\n+     *\n+     * We don't use SERIALIZE_METHODS since the serialization and deserialization code has\n+     * very little in common.\n+     */\n+\n+    // Always serialize in the latest version (FILE_FORMAT).\n+\n+    OverrideStream<Stream> s(&s_, s_.GetType(), s_.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << static_cast<uint8_t>(FILE_FORMAT);\n+\n+    // Increment `lowest_compatible` iff a newly introduced format is incompatible with\n+    // the previous one.\n+    static constexpr uint8_t lowest_compatible = Format::V3_BIP155;\n+    s << static_cast<uint8_t>(INCOMPATIBILITY_BASE + lowest_compatible);\n+\n+    s << nKey;\n+    s << nNew;\n+    s << nTried;\n+\n+    int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30);\n+    s << nUBuckets;\n+    std::unordered_map<int, int> mapUnkIds;\n+    int nIds = 0;\n+    for (const auto& entry : mapInfo) {\n+        mapUnkIds[entry.first] = nIds;\n+        const CAddrInfo &info = entry.second;\n+        if (info.nRefCount) {\n+            assert(nIds != nNew); // this means nNew was wrong, oh ow\n+            s << info;\n+            nIds++;\n+        }\n+    }\n+    nIds = 0;\n+    for (const auto& entry : mapInfo) {\n+        const CAddrInfo &info = entry.second;\n+        if (info.fInTried) {\n+            assert(nIds != nTried); // this means nTried was wrong, oh ow\n+            s << info;\n+            nIds++;\n+        }\n+    }\n+    for (int bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; bucket++) {\n+        int nSize = 0;\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; i++) {\n+            if (vvNew[bucket][i] != -1)\n+                nSize++;\n+        }\n+        s << nSize;\n+        for (int i = 0; i < ADDRMAN_BUCKET_SIZE; i++) {\n+            if (vvNew[bucket][i] != -1) {\n+                int nIndex = mapUnkIds[vvNew[bucket][i]];\n+                s << nIndex;\n+            }\n+        }\n+    }\n+    // Store asmap checksum after bucket entries so that it\n+    // can be ignored by older clients for backward compatibility.\n+    uint256 asmap_checksum;\n+    if (m_asmap.size() != 0) {\n+        asmap_checksum = SerializeHash(m_asmap);\n+    }\n+    s << asmap_checksum;\n+}\n+\n+template <typename Stream>\n+void CAddrMan::Unserialize(Stream& s_)\n+{\n+    LOCK(cs);\n+\n+    assert(vRandom.empty());\n+\n+    Format format;\n+    s_ >> Using<CustomUintFormatter<1>>(format);\n+\n+    int stream_version = s_.GetVersion();\n+    if (format >= Format::V3_BIP155) {\n+        // Add ADDRV2_FORMAT to the version so that the CNetAddr and CAddress\n+        // unserialize methods know that an address in addrv2 format is coming.\n+        stream_version |= ADDRV2_FORMAT;\n+    }\n+\n+    OverrideStream<Stream> s(&s_, s_.GetType(), stream_version);\n+\n+    uint8_t compat;\n+    s >> compat;\n+    const uint8_t lowest_compatible = compat - INCOMPATIBILITY_BASE;\n+    if (lowest_compatible > FILE_FORMAT) {\n+        throw std::ios_base::failure(strprintf(\n+                    \"Unsupported format of addrman database: %u. It is compatible with formats >=%u, \"\n+                    \"but the maximum supported by this version of %s is %u.\",\n+                    format, lowest_compatible, PACKAGE_NAME, static_cast<uint8_t>(FILE_FORMAT)));\n+    }\n+\n+    s >> nKey;\n+    s >> nNew;\n+    s >> nTried;\n+    int nUBuckets = 0;\n+    s >> nUBuckets;\n+    if (format >= Format::V1_DETERMINISTIC) {\n+        nUBuckets ^= (1 << 30);\n+    }\n+\n+    if (nNew > ADDRMAN_NEW_BUCKET_COUNT * ADDRMAN_BUCKET_SIZE || nNew < 0) {\n+        throw std::ios_base::failure(\n+                strprintf(\"Corrupt CAddrMan serialization: nNew=%d, should be in [0, %d]\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696899732",
      "id" : 696899732,
      "in_reply_to_id" : 696619577,
      "line" : 261,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Njg5OTczMg==",
      "original_commit_id" : "954785dd1d37968aba618743baf25760b8105a4c",
      "original_line" : 261,
      "original_position" : 175,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 175,
      "pull_request_review_id" : 739833463,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-26T18:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696899732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "thanks for the review @jnewbery, I fixed those small issues.",
      "created_at" : "2021-08-26T18:58:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-906663444",
      "id" : 906663444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22740",
      "node_id" : "IC_kwDOABII5842CpYU",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-26T18:58:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906663444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 85b15ddc8ff499fe21d8ab35ece3994f8878b3de",
      "created_at" : "2021-08-27T10:05:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-907086043",
      "id" : 907086043,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22740",
      "node_id" : "IC_kwDOABII5842EQjb",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-27T10:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907086043",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK 85b15ddc8\r\n\r\nThanks for the reviewer hints. I found https://stackoverflow.com/questions/42388077/constexpr-vs-macros/42388687 useful to learn about `#define` vs `constexpr`.",
      "created_at" : "2021-08-30T12:12:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-908290550",
      "id" : 908290550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22740",
      "node_id" : "IC_kwDOABII5842I2n2",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-30T12:12:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/908290550",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "thanks @0xB10C, for the review and the useful link :) ",
      "created_at" : "2021-08-30T16:46:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-908503585",
      "id" : 908503585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22740",
      "node_id" : "IC_kwDOABII5842Jqoh",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-30T16:46:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/908503585",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   }
]
