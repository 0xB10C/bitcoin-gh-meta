[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22850](https://github.com/bitcoin/bitcoin/pull/22850) (net: Make m_mempool optional in PeerManager by sriramdvt)\n* [#22834](https://github.com/bitcoin/bitcoin/pull/22834) (net: respect -onlynet= when making outbound connections by vasild)\n* [#22831](https://github.com/bitcoin/bitcoin/pull/22831) (p2p, bugfix: fix addrman tried table corruption on restart with asmap by jonatack)\n* [#22818](https://github.com/bitcoin/bitcoin/pull/22818) (test: Activate all regtest softforks at height 1, unless overridden by MarcoFalke)\n* [#22791](https://github.com/bitcoin/bitcoin/pull/22791) (init: Fix asmap/addrman initialization order bug by jnewbery)\n* [#22762](https://github.com/bitcoin/bitcoin/pull/22762) (Raise InitError when peers.dat is invalid or corrupted by MarcoFalke)\n* [#22674](https://github.com/bitcoin/bitcoin/pull/22674) (validation: mempool validation and submission for packages of 1 child + parents by glozow)\n* [#22290](https://github.com/bitcoin/bitcoin/pull/22290) (Package Mempool Submission with Package Fee-Bumping by glozow)\n* [#21726](https://github.com/bitcoin/bitcoin/pull/21726) (Improve Indices on pruned nodes via prune blockers by fjahr)\n* [#21527](https://github.com/bitcoin/bitcoin/pull/21527) (net_processing: lock clean up by ajtowns)\n* [#20435](https://github.com/bitcoin/bitcoin/pull/20435) (util: use stronger-guarantee rename method by vasild)\n* [#20196](https://github.com/bitcoin/bitcoin/pull/20196) (net: fix GetListenPort() to derive the proper port by vasild)\n* [#10443](https://github.com/bitcoin/bitcoin/pull/10443) (Add fee_est tool for debugging fee estimation code by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-08-21T21:51:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-903180545",
      "id" : 903180545,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
      "node_id" : "IC_kwDOABII58411XEB",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-06T04:49:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903180545",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694296807"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694296807"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I wonder whether maybe the name should be `GetInt64Arg`. The name is not as nice as you have but it's easy to think that the return type is simply `int`. Again, I'm not sure whether it is an issue. So this is rather a question for my information.",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-23T20:46:13Z",
      "diff_hunk" : "@@ -327,7 +333,7 @@ class ArgsManager\n      * @param nDefault (e.g. 1)\n      * @return command-line argument (0 if invalid number) or default value\n      */\n-    int64_t GetArg(const std::string& strArg, int64_t nDefault) const;\n+    int64_t GetIntArg(const std::string& strArg, int64_t nDefault) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694296807",
      "id" : 694296807,
      "line" : 336,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDI5NjgwNw==",
      "original_commit_id" : "75e3ddb981f856612e1ef3ac765e2903d32781f4",
      "original_line" : 336,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : 29,
      "pull_request_review_id" : 736551501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-24T10:22:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694296807",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-08-24T03:44:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-904298341",
      "id" : 904298341,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
      "node_id" : "IC_kwDOABII58415n9l",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-24T03:44:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/904298341",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 75e3ddb981f856612e1ef3ac765e2903d32781f4 -> daf070bdee9a1b4eaf3a4976537111f257bc1be6 ([`pr/argscripts.1`](https://github.com/ryanofsky/bitcoin/commits/pr/argscripts.1) -> [`pr/argscripts.2`](https://github.com/ryanofsky/bitcoin/commits/pr/argscripts.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/argscripts.1-rebase..pr/argscripts.2)) due to conflict with #22220",
      "created_at" : "2021-08-24T10:19:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-904514721",
      "id" : 904514721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
      "node_id" : "IC_kwDOABII58416cyh",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-24T10:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/904514721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694721588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694721588"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I can see that once the casting is used ([here](https://github.com/bitcoin/bitcoin/pull/22766/files#diff-cafbe1353eff6084b73fd3b6c3dee603e0827348fdd2fe12dfad1e01003a84edR87)) and here it is not. Maybe it should be consistent.",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-24T10:25:10Z",
      "diff_hunk" : "@@ -1300,7 +1300,7 @@ bool PeerManagerImpl::GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) c\n \n void PeerManagerImpl::AddToCompactExtraTransactions(const CTransactionRef& tx)\n {\n-    size_t max_extra_txn = gArgs.GetArg(\"-blockreconstructionextratxn\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN);\n+    size_t max_extra_txn = gArgs.GetIntArg(\"-blockreconstructionextratxn\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694721588",
      "id" : 694721588,
      "line" : 1303,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDcyMTU4OA==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 1303,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 737059920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-24T10:25:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694721588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694722251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694722251"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should there be a cast here as `int64_t` is converted to `int`? Mainly to allow the reader to know that the types are different.",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-24T10:26:05Z",
      "diff_hunk" : "@@ -807,7 +807,7 @@ static UniValue ConnectAndCallRPC(BaseRequestHandler* rh, const std::string& str\n     UniValue response(UniValue::VOBJ);\n     // Execute and handle connection failures with -rpcwait.\n     const bool fWait = gArgs.GetBoolArg(\"-rpcwait\", false);\n-    const int timeout = gArgs.GetArg(\"-rpcwaittimeout\", DEFAULT_WAIT_CLIENT_TIMEOUT);\n+    const int timeout = gArgs.GetIntArg(\"-rpcwaittimeout\", DEFAULT_WAIT_CLIENT_TIMEOUT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694722251",
      "id" : 694722251,
      "line" : 810,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDcyMjI1MQ==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 810,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 41,
      "pull_request_review_id" : 737060726,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-24T10:26:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694722251",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694731933"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694731933"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should Doxygen `@return` be used here?",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-24T10:40:52Z",
      "diff_hunk" : "@@ -214,30 +206,37 @@ static util::SettingsValue InterpretOption(std::string& section, std::string& ke\n     }\n     if (key.substr(0, 2) == \"no\") {\n         key.erase(0, 2);\n-        // Double negatives like -nofoo=0 are supported (but discouraged)\n-        if (!InterpretBool(value)) {\n-            LogPrintf(\"Warning: parsed potentially confusing double-negative -%s=%s\\n\", key, value);\n-            return true;\n-        }\n         return false;\n     }\n-    return value;\n+    return true;\n }\n \n /**\n- * Check settings value validity according to flags.\n+ * Interpret settings value and apply ALLOW checking flags.\n  *\n- * TODO: Add more meaningful error checks here in the future\n- * See \"here's how the flags are meant to behave\" in\n- * https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514627823\n+ * Return an error string and nullopt if an invalid value was provided that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694731933",
      "id" : 694731933,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDczMTkzMw==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 217,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 737073375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-24T10:48:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694731933",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694735104"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694735104"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I wonder whether `enum class Flags : uint32_t` may be used here as Jon did in https://github.com/bitcoin/bitcoin/pull/21506/ ([guideline](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Renum-class)). Would it make sense to you in this or a follow-up PR?",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-24T10:46:05Z",
      "diff_hunk" : "@@ -158,12 +158,18 @@ struct SectionInfo\n class ArgsManager\n {\n public:\n+    /**\n+     * Flags controlling how config and command line arguments are validated and\n+     * interpreted.\n+     */\n     enum Flags : uint32_t {\n-        // Boolean options can accept negation syntax -noOPTION or -noOPTION=1\n-        ALLOW_BOOL = 0x01,\n-        ALLOW_INT = 0x02,\n-        ALLOW_STRING = 0x04,\n-        ALLOW_ANY = ALLOW_BOOL | ALLOW_INT | ALLOW_STRING,\n+        ALLOW_ANY = 0x01,    //!< disable validation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694735104",
      "id" : 694735104,
      "line" : 166,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDczNTEwNA==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 166,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : 14,
      "pull_request_review_id" : 737073375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-24T10:48:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694735104",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694968514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694968514"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694731933\r\n\r\n> Should Doxygen `@return` be used here?\r\n\r\nThanks! Updated",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-24T15:34:33Z",
      "diff_hunk" : "@@ -214,30 +206,37 @@ static util::SettingsValue InterpretOption(std::string& section, std::string& ke\n     }\n     if (key.substr(0, 2) == \"no\") {\n         key.erase(0, 2);\n-        // Double negatives like -nofoo=0 are supported (but discouraged)\n-        if (!InterpretBool(value)) {\n-            LogPrintf(\"Warning: parsed potentially confusing double-negative -%s=%s\\n\", key, value);\n-            return true;\n-        }\n         return false;\n     }\n-    return value;\n+    return true;\n }\n \n /**\n- * Check settings value validity according to flags.\n+ * Interpret settings value and apply ALLOW checking flags.\n  *\n- * TODO: Add more meaningful error checks here in the future\n- * See \"here's how the flags are meant to behave\" in\n- * https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514627823\n+ * Return an error string and nullopt if an invalid value was provided that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694968514",
      "id" : 694968514,
      "in_reply_to_id" : 694731933,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDk2ODUxNA==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 217,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 737384842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-24T19:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694968514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694968709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694968709"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694735104\r\n\r\n> I wonder whether `enum class Flags : uint32_t` may be used here as Jon did in #21506 ([guideline](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Renum-class)). Would it make sense to you in this or a follow-up PR?\r\n\r\nThis could be fine, but I'm not sure what the specific advantage of doing it would be in this case (not sure what ways it may be safer). I do think it's basically tangential in any case, and could be better addressed in a standalone PR.",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-24T15:34:48Z",
      "diff_hunk" : "@@ -158,12 +158,18 @@ struct SectionInfo\n class ArgsManager\n {\n public:\n+    /**\n+     * Flags controlling how config and command line arguments are validated and\n+     * interpreted.\n+     */\n     enum Flags : uint32_t {\n-        // Boolean options can accept negation syntax -noOPTION or -noOPTION=1\n-        ALLOW_BOOL = 0x01,\n-        ALLOW_INT = 0x02,\n-        ALLOW_STRING = 0x04,\n-        ALLOW_ANY = ALLOW_BOOL | ALLOW_INT | ALLOW_STRING,\n+        ALLOW_ANY = 0x01,    //!< disable validation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694968709",
      "id" : 694968709,
      "in_reply_to_id" : 694735104,
      "line" : 166,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDk2ODcwOQ==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 166,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : 14,
      "pull_request_review_id" : 737384842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-24T19:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694968709",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694969267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694969267"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694722251\r\n\r\n> Should there be a cast here as `int64_t` is converted to `int`? Mainly to allow the reader to know that the types are different.\r\n\r\nThis scripted diff is just trying to rename the function, not change the way the function is called, but this could be reasonable to do separately.",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-24T15:35:27Z",
      "diff_hunk" : "@@ -807,7 +807,7 @@ static UniValue ConnectAndCallRPC(BaseRequestHandler* rh, const std::string& str\n     UniValue response(UniValue::VOBJ);\n     // Execute and handle connection failures with -rpcwait.\n     const bool fWait = gArgs.GetBoolArg(\"-rpcwait\", false);\n-    const int timeout = gArgs.GetArg(\"-rpcwaittimeout\", DEFAULT_WAIT_CLIENT_TIMEOUT);\n+    const int timeout = gArgs.GetIntArg(\"-rpcwaittimeout\", DEFAULT_WAIT_CLIENT_TIMEOUT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694969267",
      "id" : 694969267,
      "in_reply_to_id" : 694722251,
      "line" : 810,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDk2OTI2Nw==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 810,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 41,
      "pull_request_review_id" : 737384842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-24T19:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694969267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694969453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694969453"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694721588\r\n\r\n> I can see that once the casting is used ([here](https://github.com/bitcoin/bitcoin/pull/22766/files#diff-cafbe1353eff6084b73fd3b6c3dee603e0827348fdd2fe12dfad1e01003a84edR87)) and here it is not. Maybe it should be consistent.\r\n\r\nThis scripted diff is just trying to rename the function, not change the way the function is called, but this could be reasonable to do separately.",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-24T15:35:39Z",
      "diff_hunk" : "@@ -1300,7 +1300,7 @@ bool PeerManagerImpl::GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) c\n \n void PeerManagerImpl::AddToCompactExtraTransactions(const CTransactionRef& tx)\n {\n-    size_t max_extra_txn = gArgs.GetArg(\"-blockreconstructionextratxn\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN);\n+    size_t max_extra_txn = gArgs.GetIntArg(\"-blockreconstructionextratxn\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694969453",
      "id" : 694969453,
      "in_reply_to_id" : 694721588,
      "line" : 1303,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDk2OTQ1Mw==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 1303,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 737384842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-24T19:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694969453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694969613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694969613"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694296807\r\n\r\n> I wonder whether maybe the name should be `GetInt64Arg`. The name is not as nice as you have but it's easy to think that the return type is simply `int`. Again, I'm not sure whether it is an issue. So this is rather a question for my information.\r\n\r\nSure. I wouldn't mind that name, though I do prefer current name because it's emphasizing what's important about the function and how it's intended to be used.\r\n\r\nThe way I would like range checking to work in the future would be to rely more on C++ types and `std::numeric_limits`. The idea is arguments would be registered using explicit C++ types:\r\n\r\n```c++\r\nconst Setting<int> SETTING_myint(\"-myint\", \"description\");\r\nconst Setting<std::string> SETTING_mystring(\"-mystring\", \"description\");\r\nconst Setting<std::vector<std::string>> SETTING_mylist(\"-mylist\", \"description\");\r\nconst Setting<std::optional<std::uint16_t>> SETTING_myopt(\"-myopt\", \"description\");\r\nconst Setting<SettingsValue> SETTING_mylegacy(\"-mylegacy\", \"description\");\r\n\r\nvoid RegisterArgs(ArgsManager& args)\r\n{\r\n    args.Register({SETTING_myint, SETTING_mystring, SETTING_mylist, SETTING_myopt, SETTING_mylegacy});\r\n}\r\n```\r\n\r\nand then they could be retrieved in a type safe way:\r\n\r\n```\r\nargs.Get(SETTING_myint);    // returns int\r\nargs.Get(SETTING_mystring); // returns std::string\r\nargs.Get(SETTING_mylist);   // returns std::vector<std::string>\r\nargs.Get(SETTING_myopt);    // returns std::optional<uint16_t>\r\nargs.GetArg/GetArgs/GetIntArg/GetBoolArg(SETTING_mylegacy); // returns requested type\r\n```\r\n\r\nTo get to this point, this PR cleans up existing misused flags and misnamed functions. PR #16545 adds type validation and runtime semantics without changing the ArgsManager API, and a followup PR can improve the API and update call sites without changing the semantics. (There is a direct correspondence between the `ALLOW_` flags from #16545 and the useful C++ settings types `bool`/`int`/`std::string`/`std::optional`/`std::variant`/`std::vector`)",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-24T15:35:48Z",
      "diff_hunk" : "@@ -327,7 +333,7 @@ class ArgsManager\n      * @param nDefault (e.g. 1)\n      * @return command-line argument (0 if invalid number) or default value\n      */\n-    int64_t GetArg(const std::string& strArg, int64_t nDefault) const;\n+    int64_t GetIntArg(const std::string& strArg, int64_t nDefault) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694969613",
      "id" : 694969613,
      "in_reply_to_id" : 694296807,
      "line" : 336,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDk2OTYxMw==",
      "original_commit_id" : "75e3ddb981f856612e1ef3ac765e2903d32781f4",
      "original_line" : 336,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : 29,
      "pull_request_review_id" : 737384842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-24T19:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694969613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r695495304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695495304"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the rationale in the guideline makes sense and that's why I suggested it. There was no specific advatange I had in mind. Anyway, it may (not) be a good follow up PR.",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-25T07:50:45Z",
      "diff_hunk" : "@@ -158,12 +158,18 @@ struct SectionInfo\n class ArgsManager\n {\n public:\n+    /**\n+     * Flags controlling how config and command line arguments are validated and\n+     * interpreted.\n+     */\n     enum Flags : uint32_t {\n-        // Boolean options can accept negation syntax -noOPTION or -noOPTION=1\n-        ALLOW_BOOL = 0x01,\n-        ALLOW_INT = 0x02,\n-        ALLOW_STRING = 0x04,\n-        ALLOW_ANY = ALLOW_BOOL | ALLOW_INT | ALLOW_STRING,\n+        ALLOW_ANY = 0x01,    //!< disable validation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r695495304",
      "id" : 695495304,
      "in_reply_to_id" : 694735104,
      "line" : 166,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTQ5NTMwNA==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 166,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : 14,
      "pull_request_review_id" : 738017627,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-25T07:50:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695495304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r695495506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695495506"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It looks great.",
      "commit_id" : "7ca417e3223de2d8bf81de24e5605c8e87fcb7fe",
      "created_at" : "2021-08-25T07:51:01Z",
      "diff_hunk" : "@@ -214,30 +206,37 @@ static util::SettingsValue InterpretOption(std::string& section, std::string& ke\n     }\n     if (key.substr(0, 2) == \"no\") {\n         key.erase(0, 2);\n-        // Double negatives like -nofoo=0 are supported (but discouraged)\n-        if (!InterpretBool(value)) {\n-            LogPrintf(\"Warning: parsed potentially confusing double-negative -%s=%s\\n\", key, value);\n-            return true;\n-        }\n         return false;\n     }\n-    return value;\n+    return true;\n }\n \n /**\n- * Check settings value validity according to flags.\n+ * Interpret settings value and apply ALLOW checking flags.\n  *\n- * TODO: Add more meaningful error checks here in the future\n- * See \"here's how the flags are meant to behave\" in\n- * https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514627823\n+ * Return an error string and nullopt if an invalid value was provided that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r695495506",
      "id" : 695495506,
      "in_reply_to_id" : 694731933,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTQ5NTUwNg==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 217,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 738017885,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-25T07:51:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695495506",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "concept ACK, init can definitely use some cleaning up, thanks for working on this.\r\n\r\nDo I understand the idea & context correctly? - enforcing type validation is the end goal & this is an intermediary step to have the code reflect the level of validation that's actually currently occurring (aka, not much)? ",
      "created_at" : "2021-08-25T19:23:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-905809991",
      "id" : 905809991,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
      "node_id" : "IC_kwDOABII5841_ZBH",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-25T19:23:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905809991",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-08-25T19:25:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-905811443",
      "id" : 905811443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
      "node_id" : "IC_kwDOABII5841_ZXz",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-25T19:25:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905811443",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Do I understand the idea & context correctly? - enforcing type validation is the end goal & this is an intermediary step to have the code reflect the level of validation that's actually currently occurring (aka, not much)?\r\n\r\nYep, that's all correct but just to be clear this PR has two goals:\r\n\r\n1. Get rid of misleading ArgsManager flags\r\n2. Simplify future PRs implementing more validation by cleaning up existing validation\r\n\r\nThe PR should make sense by itself just for the first goal even if you don't care about the second goal.\r\n\r\nMaybe another helpful note about the PR is that only the first commit adds any new code. The other two commits are scripted diff cleanups that don't add any code.",
      "created_at" : "2021-08-25T23:49:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-905949898",
      "id" : 905949898,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
      "node_id" : "IC_kwDOABII5841_7LK",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-25T23:49:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905949898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-08-26T09:55:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-906262853",
      "id" : 906262853,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
      "node_id" : "IC_kwDOABII5842BHlF",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-26T09:55:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906262853",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 7ca417e3223de2d8bf81de24e5605c8e87fcb7fe -> 31a8356714821f818ef476a9581e7830dd5ed940 ([`pr/argscripts.3`](https://github.com/ryanofsky/bitcoin/commits/pr/argscripts.3) -> [`pr/argscripts.4`](https://github.com/ryanofsky/bitcoin/commits/pr/argscripts.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/argscripts.3-rebase..pr/argscripts.4)) due to conflict with #22183",
      "created_at" : "2021-08-26T10:34:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-906288069",
      "id" : 906288069,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
      "node_id" : "IC_kwDOABII5842BNvF",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-26T10:34:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906288069",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r699851892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699851892"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I found this a little confusing (when reimplementing it, I had it swapped around and wrote `bool negated = IntepretKey()` without the `!`). Maybe would be clearer to return `struct { std::string section; bool negated; }` and write `auto keyinfo = InterpretKey(key);`instead?",
      "commit_id" : "31a8356714821f818ef476a9581e7830dd5ed940",
      "created_at" : "2021-09-01T05:20:57Z",
      "diff_hunk" : "@@ -185,26 +186,21 @@ static std::string SettingName(const std::string& arg)\n }\n \n /**\n- * Interpret -nofoo as if the user supplied -foo=0.\n+ * Split up setting key string, removing \"section.\" and \"no\" prefixes.\n  *\n- * This method also tracks when the -no form was supplied, and if so,\n- * checks whether there was a double-negative (-nofoo=0 -> -foo=1).\n+ * @param[out]     section  output argument set to section name if key contains \".\"\n  *\n- * If there was not a double negative, it removes the \"no\" from the key\n- * and returns false.\n+ * @param[in,out]  key      input/output key argument with \"section.\" and \"no\"\n+ *                          prefixes stripped\n  *\n- * If there was a double negative, it removes \"no\" from the key, and\n- * returns true.\n+ * @return false if key was negated, true otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r699851892",
      "id" : 699851892,
      "line" : 196,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTg1MTg5Mg==",
      "original_commit_id" : "3ffbb3b828d6c72618d8acf07f6eeb49eb15ed8f",
      "original_line" : 196,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : 26,
      "pull_request_review_id" : 743341262,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-01T06:19:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699851892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r699874087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699874087"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See `NetPermissionsFlags` in net_permissions.h for comparison; it gives you lots of namespacing (so you'd be writing `ArgsManager::Flags::ALLOW_BOOL` everywhere) and means you can't just treat them as ints (so bitwise or'ing things together means you have to declare your own operator)",
      "commit_id" : "31a8356714821f818ef476a9581e7830dd5ed940",
      "created_at" : "2021-09-01T06:16:25Z",
      "diff_hunk" : "@@ -158,12 +158,18 @@ struct SectionInfo\n class ArgsManager\n {\n public:\n+    /**\n+     * Flags controlling how config and command line arguments are validated and\n+     * interpreted.\n+     */\n     enum Flags : uint32_t {\n-        // Boolean options can accept negation syntax -noOPTION or -noOPTION=1\n-        ALLOW_BOOL = 0x01,\n-        ALLOW_INT = 0x02,\n-        ALLOW_STRING = 0x04,\n-        ALLOW_ANY = ALLOW_BOOL | ALLOW_INT | ALLOW_STRING,\n+        ALLOW_ANY = 0x01,    //!< disable validation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r699874087",
      "id" : 699874087,
      "in_reply_to_id" : 694735104,
      "line" : 166,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTg3NDA4Nw==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 166,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : 14,
      "pull_request_review_id" : 743341262,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-01T06:19:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699874087",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r699895416"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699895416"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, two sides of a coin, I suppose.\r\n\r\nNamespacing can allow shortening the enumerator names, since they no longer need to be unique in global namespace (and can therefore no longer need to be shouty \"there can only be one\"), e.g. ArgsManager::ALLOW_STRING could be ArgsManager::Flags::string. Whether that naming is better may be personal taste, but getting them out of global space seems good.\r\n\r\nUsing an enum class permits defining allowed operations: https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Renum-oper and https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Renum-class (\"minimize surprises: traditional enums convert to int too readily\"). Changing NetPermissionFlags to an enum class found a bug related to this reason.",
      "commit_id" : "31a8356714821f818ef476a9581e7830dd5ed940",
      "created_at" : "2021-09-01T06:43:37Z",
      "diff_hunk" : "@@ -158,12 +158,18 @@ struct SectionInfo\n class ArgsManager\n {\n public:\n+    /**\n+     * Flags controlling how config and command line arguments are validated and\n+     * interpreted.\n+     */\n     enum Flags : uint32_t {\n-        // Boolean options can accept negation syntax -noOPTION or -noOPTION=1\n-        ALLOW_BOOL = 0x01,\n-        ALLOW_INT = 0x02,\n-        ALLOW_STRING = 0x04,\n-        ALLOW_ANY = ALLOW_BOOL | ALLOW_INT | ALLOW_STRING,\n+        ALLOW_ANY = 0x01,    //!< disable validation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r699895416",
      "id" : 699895416,
      "in_reply_to_id" : 694735104,
      "line" : 166,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTg5NTQxNg==",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 166,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : 14,
      "pull_request_review_id" : 743535043,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-01T06:57:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699895416",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Maybe the last commit can be split up, because it is the most uncontroversial one but causes the most (silent) conflicts?",
      "created_at" : "2021-09-01T07:19:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-910001542",
      "id" : 910001542,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
      "node_id" : "IC_kwDOABII5842PYWG",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-01T07:19:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/910001542",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r701448785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701448785"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think I finally figured out how you can go a little bit further than the above, ending up with something like:\r\n\r\n```c++\r\nstruct NetSettings\r\n{\r\n    int64_t blockreconstructionextratxn;\r\n    int64_t maxorphantx;\r\n    bool capturemessages;\r\n\r\n    template<typename C, typename... Args>\r\n    static inline void F(Args&... args) {\r\n        return C::Do(args...,\r\n            C::Defn( &NetSettings::blockreconstructionextratxn, \"-blockreconstructionextratxn=<n>\", strprintf(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS, DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN ),\r\n            C::Defn( &NetSettings::maxorphantx, \"-maxorphantx=<n>\", strprintf(\"Keep at most <n> unconnectable transactions in memory (default: %u)\", DEFAULT_MAX_ORPHAN_TRANSACTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS, DEFAULT_MAX_ORPHAN_TRANSACTIONS ),\r\n            C::Defn( &NetSettings::capturemessages, \"-capturemessages\", \"Capture all P2P messages to disk\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST, false )\r\n        );\r\n    }\r\n};\r\n\r\nvoid RegisterNetProcessingArgs(ArgsManager& args)\r\n{\r\n    SettingsRegister<NetSettings>::Register(args);\r\n}\r\n\r\nNetSettings GetNetSettings(const ArgsManager& args)\r\n{\r\n    return SettingsRegister<NetSettings>::Get(args);\r\n}\r\n\r\nclass PeerManagerImpl\r\n{\r\nprivate:\r\n    const NetSettings m_settings;\r\n    PeerManagerImpl(..., const ArgsManager& args) : m_settings{GetNetSettings(args)), ... { ... }\r\n    ...\r\n};\r\n```\r\n\r\nThe idea being that this way:\r\n * it can infer the argument type directly from the type of the struct member so that you can't accidentally specify different types between `args.AddArg<int>` and `Get<bool>`\r\n  * that the settings are const at runtime so can be accessed without any additional locks\r\n  * you only have to access the ArgsManager (and do string parsing) at setup time\r\n  * you don't have to make up lots of new names for everything or add too much boilerplate\r\n\r\nBranch built on top of this PR that has the above working at https://github.com/ajtowns/bitcoin/tree/202109-settings_struct",
      "commit_id" : "31a8356714821f818ef476a9581e7830dd5ed940",
      "created_at" : "2021-09-02T21:56:52Z",
      "diff_hunk" : "@@ -327,7 +333,7 @@ class ArgsManager\n      * @param nDefault (e.g. 1)\n      * @return command-line argument (0 if invalid number) or default value\n      */\n-    int64_t GetArg(const std::string& strArg, int64_t nDefault) const;\n+    int64_t GetIntArg(const std::string& strArg, int64_t nDefault) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r701448785",
      "id" : 701448785,
      "in_reply_to_id" : 694296807,
      "line" : 336,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ0ODc4NQ==",
      "original_commit_id" : "75e3ddb981f856612e1ef3ac765e2903d32781f4",
      "original_line" : 336,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : 29,
      "pull_request_review_id" : 745552712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T21:56:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701448785",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nWondering what are benefits of the `DISALLOW_NEGATION` flag in comparison to the `ALLOW_NEGATED` one (not an issue at all, just trying to understand motivation)?",
      "created_at" : "2021-09-03T06:10:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-912284343",
      "id" : 912284343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
      "node_id" : "IC_kwDOABII5842YFq3",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-03T06:10:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912284343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r701624718"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701624718"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1) s/`ALLOW_ANY`/`DISABLE_VALIDATION`/, and drop the `//!< disable validation` comment?\r\n2) as `ALLOW_ANY` is not a combination of other flags now, would it simplify the code if `ALLOW_ANY = 0`? (going to check this suggestion later)\r\n\r\nnits:\r\n1) ~could we switch values to \"shifted ones\" `(1 << N)` for better readability?~ nm, out of scope\r\n2) ~assuming that another type could be added in the future, e.g., `ALLOW_PAIR`, maybe `DISALLOW_NEGATION = 0x80`?~ nm, is not worth\r\n3) `clang-format` complains about not justified comments",
      "commit_id" : "0768cdc3e77f9670f0115cdf197a282c355bc287",
      "created_at" : "2021-09-03T06:44:38Z",
      "diff_hunk" : "@@ -158,12 +158,18 @@ struct SectionInfo\n class ArgsManager\n {\n public:\n+    /**\n+     * Flags controlling how config and command line arguments are validated and\n+     * interpreted.\n+     */\n     enum Flags : uint32_t {\n-        // Boolean options can accept negation syntax -noOPTION or -noOPTION=1\n-        ALLOW_BOOL = 0x01,\n-        ALLOW_INT = 0x02,\n-        ALLOW_STRING = 0x04,\n-        ALLOW_ANY = ALLOW_BOOL | ALLOW_INT | ALLOW_STRING,\n+        ALLOW_ANY = 0x01,    //!< disable validation\n+        ALLOW_BOOL = 0x02,   //!< unimplemented, draft implementation in #16545\n+        ALLOW_INT = 0x04,    //!< unimplemented, draft implementation in #16545\n+        ALLOW_STRING = 0x08, //!< unimplemented, draft implementation in #16545\n+        ALLOW_LIST = 0x10,   //!< unimplemented, draft implementation in #16545\n+        DISALLOW_NEGATION = 0x20, //! disallow -nofoo syntax\n+\n         DEBUG_ONLY = 0x100,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r701624718",
      "id" : 701624718,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTYyNDcxOA==",
      "original_commit_id" : "3ffbb3b828d6c72618d8acf07f6eeb49eb15ed8f",
      "original_line" : 173,
      "original_position" : 21,
      "original_start_line" : 166,
      "path" : "src/util/system.h",
      "position" : null,
      "pull_request_review_id" : 745755741,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-03T08:36:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701624718",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r701632462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701632462"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: to make `clang-format` happy:\r\n```suggestion\r\nstatic std::optional<util::SettingsValue> InterpretValue(\r\n    const std::string& key,\r\n    const std::string& value,\r\n    bool negated,\r\n    unsigned int flags,\r\n    std::string& error)\r\n```",
      "commit_id" : "31a8356714821f818ef476a9581e7830dd5ed940",
      "created_at" : "2021-09-03T07:00:06Z",
      "diff_hunk" : "@@ -214,30 +210,43 @@ static util::SettingsValue InterpretOption(std::string& section, std::string& ke\n     }\n     if (key.substr(0, 2) == \"no\") {\n         key.erase(0, 2);\n-        // Double negatives like -nofoo=0 are supported (but discouraged)\n-        if (!InterpretBool(value)) {\n-            LogPrintf(\"Warning: parsed potentially confusing double-negative -%s=%s\\n\", key, value);\n-            return true;\n-        }\n         return false;\n     }\n-    return value;\n+    return true;\n }\n \n /**\n- * Check settings value validity according to flags.\n+ * Interpret settings value based on registered flags.\n  *\n- * TODO: Add more meaningful error checks here in the future\n- * See \"here's how the flags are meant to behave\" in\n- * https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514627823\n+ * @param[in]   key      name of settings key, only used for error messages\n+ * @param[in]   value    string value of setting to be parsed\n+ * @param[in]   negated  whether to treat setting as negated\n+ * @param[in]   flags    ArgsManager registered argument flags\n+ * @param[out]  error    Error description if settings value is not valid\n+ *\n+ * @return parsed settings value if it is valid, otherwise nullopt accompanied\n+ * by a descriptive error string\n  */\n-static bool CheckValid(const std::string& key, const util::SettingsValue& val, unsigned int flags, std::string& error)\n-{\n-    if (val.isBool() && !(flags & ArgsManager::ALLOW_BOOL)) {\n-        error = strprintf(\"Negating of -%s is meaningless and therefore forbidden\", key);\n+static std::optional<util::SettingsValue> InterpretValue(const std::string& key,\n+    const std::string& value,\n+    bool negated,\n+    unsigned int flags,\n+    std::string& error)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r701632462",
      "id" : 701632462,
      "line" : 234,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTYzMjQ2Mg==",
      "original_commit_id" : "31a8356714821f818ef476a9581e7830dd5ed940",
      "original_line" : 234,
      "original_position" : 81,
      "original_start_line" : 230,
      "path" : "src/util/system.cpp",
      "position" : 81,
      "pull_request_review_id" : 745765754,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : 230,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-03T07:00:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701632462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-09-06T10:58:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-913554730",
      "id" : 913554730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
      "node_id" : "IC_kwDOABII5842c70q",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-06T10:58:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913554730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r708748619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708748619"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22766#discussion_r699851892\r\n\r\n> I found this a little confusing (when reimplementing it, I had it swapped around and wrote `bool negated = IntepretKey()` without the `!`). Maybe would be clearer to return `struct { std::string section; bool negated; }` and write `auto keyinfo = InterpretKey(key);`instead?\r\n\r\nGood idea, implemented this.\r\n",
      "commit_id" : "0768cdc3e77f9670f0115cdf197a282c355bc287",
      "created_at" : "2021-09-15T00:26:09Z",
      "diff_hunk" : "@@ -185,26 +186,21 @@ static std::string SettingName(const std::string& arg)\n }\n \n /**\n- * Interpret -nofoo as if the user supplied -foo=0.\n+ * Split up setting key string, removing \"section.\" and \"no\" prefixes.\n  *\n- * This method also tracks when the -no form was supplied, and if so,\n- * checks whether there was a double-negative (-nofoo=0 -> -foo=1).\n+ * @param[out]     section  output argument set to section name if key contains \".\"\n  *\n- * If there was not a double negative, it removes the \"no\" from the key\n- * and returns false.\n+ * @param[in,out]  key      input/output key argument with \"section.\" and \"no\"\n+ *                          prefixes stripped\n  *\n- * If there was a double negative, it removes \"no\" from the key, and\n- * returns true.\n+ * @return false if key was negated, true otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r708748619",
      "id" : 708748619,
      "in_reply_to_id" : 699851892,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584qPqVL",
      "original_commit_id" : "3ffbb3b828d6c72618d8acf07f6eeb49eb15ed8f",
      "original_line" : 196,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 754561115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-15T01:53:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708748619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r708748671"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708748671"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22766#discussion_r701632462\r\n\r\n> nit: to make `clang-format` happy:\r\n\r\nI ran clang-format and it changed it a different way, but rest assured some clang somewhere is happy!",
      "commit_id" : "0768cdc3e77f9670f0115cdf197a282c355bc287",
      "created_at" : "2021-09-15T00:26:20Z",
      "diff_hunk" : "@@ -214,30 +210,43 @@ static util::SettingsValue InterpretOption(std::string& section, std::string& ke\n     }\n     if (key.substr(0, 2) == \"no\") {\n         key.erase(0, 2);\n-        // Double negatives like -nofoo=0 are supported (but discouraged)\n-        if (!InterpretBool(value)) {\n-            LogPrintf(\"Warning: parsed potentially confusing double-negative -%s=%s\\n\", key, value);\n-            return true;\n-        }\n         return false;\n     }\n-    return value;\n+    return true;\n }\n \n /**\n- * Check settings value validity according to flags.\n+ * Interpret settings value based on registered flags.\n  *\n- * TODO: Add more meaningful error checks here in the future\n- * See \"here's how the flags are meant to behave\" in\n- * https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514627823\n+ * @param[in]   key      name of settings key, only used for error messages\n+ * @param[in]   value    string value of setting to be parsed\n+ * @param[in]   negated  whether to treat setting as negated\n+ * @param[in]   flags    ArgsManager registered argument flags\n+ * @param[out]  error    Error description if settings value is not valid\n+ *\n+ * @return parsed settings value if it is valid, otherwise nullopt accompanied\n+ * by a descriptive error string\n  */\n-static bool CheckValid(const std::string& key, const util::SettingsValue& val, unsigned int flags, std::string& error)\n-{\n-    if (val.isBool() && !(flags & ArgsManager::ALLOW_BOOL)) {\n-        error = strprintf(\"Negating of -%s is meaningless and therefore forbidden\", key);\n+static std::optional<util::SettingsValue> InterpretValue(const std::string& key,\n+    const std::string& value,\n+    bool negated,\n+    unsigned int flags,\n+    std::string& error)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r708748671",
      "id" : 708748671,
      "in_reply_to_id" : 701632462,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584qPqV_",
      "original_commit_id" : "31a8356714821f818ef476a9581e7830dd5ed940",
      "original_line" : 234,
      "original_position" : 81,
      "original_start_line" : 230,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 754561115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-15T01:53:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708748671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r708748758"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708748758"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22766#discussion_r694735104\r\n\r\n> I wonder whether `enum class Flags : uint32_t` may be used here as Jon did in #21506 ([guideline](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Renum-class)). Would it make sense to you in this or a follow-up PR?\r\n\r\nFiled #22977 to track this, since it's not really about this PR",
      "commit_id" : "0768cdc3e77f9670f0115cdf197a282c355bc287",
      "created_at" : "2021-09-15T00:26:35Z",
      "diff_hunk" : "@@ -158,12 +158,18 @@ struct SectionInfo\n class ArgsManager\n {\n public:\n+    /**\n+     * Flags controlling how config and command line arguments are validated and\n+     * interpreted.\n+     */\n     enum Flags : uint32_t {\n-        // Boolean options can accept negation syntax -noOPTION or -noOPTION=1\n-        ALLOW_BOOL = 0x01,\n-        ALLOW_INT = 0x02,\n-        ALLOW_STRING = 0x04,\n-        ALLOW_ANY = ALLOW_BOOL | ALLOW_INT | ALLOW_STRING,\n+        ALLOW_ANY = 0x01,    //!< disable validation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r708748758",
      "id" : 708748758,
      "in_reply_to_id" : 694735104,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584qPqXW",
      "original_commit_id" : "daf070bdee9a1b4eaf3a4976537111f257bc1be6",
      "original_line" : 166,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : null,
      "pull_request_review_id" : 754561115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-15T01:53:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708748758",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r708748834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708748834"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22766#discussion_r701624718\r\n\r\n>     1. s/`ALLOW_ANY`/`DISABLE_VALIDATION`/, and drop the `//!< disable validation` comment?\r\n\r\nThis would make the PR bigger and conflict with more PRs. Also, it seems like bikeshedding, and like it might relationships between flags less clear. But please do post a separate RFC issue or a separate PR if the name of this flag should be changed or improved. This PR is just trying to add a comment on this line, not change the meaning or semantics of the flag.\r\n\r\n>     2. as `ALLOW_ANY` is not a combination of other flags now, would it simplify the code if `ALLOW_ANY = 0`? (going to check this suggestion later)\r\n\r\nThis would not work with #16545, but in any case seems like it would be bikeshedding to discuss it here before validation is implemented and this matters. Would encourage moving discussion about this to relevant PRs implementing validation.\r\n\r\n>     3. `clang-format` complains about not justified comments\r\n\r\nThanks, should be resolved now\r\n",
      "commit_id" : "0768cdc3e77f9670f0115cdf197a282c355bc287",
      "created_at" : "2021-09-15T00:26:45Z",
      "diff_hunk" : "@@ -158,12 +158,18 @@ struct SectionInfo\n class ArgsManager\n {\n public:\n+    /**\n+     * Flags controlling how config and command line arguments are validated and\n+     * interpreted.\n+     */\n     enum Flags : uint32_t {\n-        // Boolean options can accept negation syntax -noOPTION or -noOPTION=1\n-        ALLOW_BOOL = 0x01,\n-        ALLOW_INT = 0x02,\n-        ALLOW_STRING = 0x04,\n-        ALLOW_ANY = ALLOW_BOOL | ALLOW_INT | ALLOW_STRING,\n+        ALLOW_ANY = 0x01,    //!< disable validation\n+        ALLOW_BOOL = 0x02,   //!< unimplemented, draft implementation in #16545\n+        ALLOW_INT = 0x04,    //!< unimplemented, draft implementation in #16545\n+        ALLOW_STRING = 0x08, //!< unimplemented, draft implementation in #16545\n+        ALLOW_LIST = 0x10,   //!< unimplemented, draft implementation in #16545\n+        DISALLOW_NEGATION = 0x20, //! disallow -nofoo syntax\n+\n         DEBUG_ONLY = 0x100,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r708748834",
      "id" : 708748834,
      "in_reply_to_id" : 701624718,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584qPqYi",
      "original_commit_id" : "3ffbb3b828d6c72618d8acf07f6eeb49eb15ed8f",
      "original_line" : 173,
      "original_position" : 21,
      "original_start_line" : 166,
      "path" : "src/util/system.h",
      "position" : null,
      "pull_request_review_id" : 754561115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-15T01:53:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708748834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r708749096"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708749096"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22766#discussion_r701448785\r\n\r\n> I think I finally figured out how you can go a little bit further than the above, ending up with something like:\r\n\r\nFiled #22978 to track this, since it's not really about this PR",
      "commit_id" : "0768cdc3e77f9670f0115cdf197a282c355bc287",
      "created_at" : "2021-09-15T00:27:39Z",
      "diff_hunk" : "@@ -327,7 +333,7 @@ class ArgsManager\n      * @param nDefault (e.g. 1)\n      * @return command-line argument (0 if invalid number) or default value\n      */\n-    int64_t GetArg(const std::string& strArg, int64_t nDefault) const;\n+    int64_t GetIntArg(const std::string& strArg, int64_t nDefault) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22766#discussion_r708749096",
      "id" : 708749096,
      "in_reply_to_id" : 694296807,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584qPqco",
      "original_commit_id" : "75e3ddb981f856612e1ef3ac765e2903d32781f4",
      "original_line" : 336,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/util/system.h",
      "position" : null,
      "pull_request_review_id" : 754561115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-15T01:53:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708749096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
