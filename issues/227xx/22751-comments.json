[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692703814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692703814"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`test/functional/wallet_analyzerawtx.py:60:9: F841 local variable 'analysis' is assigned to but never used`",
      "commit_id" : "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "created_at" : "2021-08-20T06:40:00Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(101, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx), 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx), 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])\n+\n+        # node0 sees fee + 5 btc decrease\n+        assert_approx(w0.analyzerawtransaction(tx), -(5.0 + bitcoin_fee))\n+\n+        # node1 sees same as before\n+        analysis = w1.analyzerawtransaction(tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692703814",
      "id" : 692703814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjcwMzgxNA==",
      "original_commit_id" : "70620ac3c45da9ed7daa14b52f7d3fbf3b6b7872",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "test/functional/wallet_analyzerawtx.py",
      "position" : null,
      "pull_request_review_id" : 734716391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-20T06:40:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692703814",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692716520"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692716520"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, fixed.",
      "commit_id" : "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "created_at" : "2021-08-20T07:04:56Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(101, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx), 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx), 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])\n+\n+        # node0 sees fee + 5 btc decrease\n+        assert_approx(w0.analyzerawtransaction(tx), -(5.0 + bitcoin_fee))\n+\n+        # node1 sees same as before\n+        analysis = w1.analyzerawtransaction(tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692716520",
      "id" : 692716520,
      "in_reply_to_id" : 692703814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjcxNjUyMA==",
      "original_commit_id" : "70620ac3c45da9ed7daa14b52f7d3fbf3b6b7872",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "test/functional/wallet_analyzerawtx.py",
      "position" : null,
      "pull_request_review_id" : 734731551,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-20T07:04:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692716520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, but I don't think the RPC name represents the functionality. Analyze implies some sort of in-depth breakdown of information. Perhaps `nettransactionbalance` or something to represent the balance-specific use?",
      "created_at" : "2021-08-21T00:00:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903013607",
      "id" : 903013607,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
      "node_id" : "IC_kwDOABII58410uTn",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-21T00:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903013607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> but I don't think the RPC name represents the functionality. Analyze implies some sort of in-depth breakdown of information. \r\n\r\nAgree. We already have RPC with similar name: `analyzepsbt` which returns lot of things that would be helpful for someone using PSBT. Although I am still confused between `decodepsbt` and `analyzepsbt`.\r\n\r\n> Perhaps nettransactionbalance or something to represent the balance-specific use?\r\n\r\nOr maybe add it in the results of any existing RPC",
      "created_at" : "2021-08-21T04:05:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903052080",
      "id" : 903052080,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
      "node_id" : "IC_kwDOABII584103sw",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-21T04:05:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903052080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I have no strong feelings about keeping `analyze` but I think `<verb>rawtransaction` is a good name (edit: because it is sticking to the convention), where `<verb>` somehow indicates looking at each input and output and determining whether they belong to the wallet, and if so to add/subtract the appropriate amount.\r\n\r\nEdit: adding to results of existing RPC sounds good to me too, but not sure which that would be.",
      "created_at" : "2021-08-21T07:45:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903076896",
      "id" : 903076896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
      "node_id" : "IC_kwDOABII584109wg",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-21T07:48:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903076896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> adding to results of existing RPC sounds good to me too, but not sure which that would be.\r\n\r\nCan we add this to [`getbalance`](https://bitcoincore.org/en/doc/0.21.0/rpc/wallet/getbalance/)? Will need one argument `include_tx` so the command would look like this:\r\n\r\n```\r\n$ bitcoin-cli -named getbalance include_tx=hex\r\n\r\nResult:\r\nn    (numeric) The total amount in BTC received for this wallet.\r\nn    (numeric) The wallet balance change including tx(negative means decrease).\r\n```\r\n ",
      "created_at" : "2021-08-21T11:45:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903104233",
      "id" : 903104233,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
      "node_id" : "IC_kwDOABII58411Ebp",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-21T11:45:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903104233",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693372773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693372773"
         }
      },
      "author_association" : "MEMBER",
      "body" : "<details><summary>Some suggestions for the test</summary><p>\r\n\r\n```diff\r\n--- a/test/functional/wallet_analyzerawtx.py\r\n+++ b/test/functional/wallet_analyzerawtx.py\r\n@@ -5,12 +5,14 @@\r\n \"\"\"Test analyzerawtransaction.\r\n \"\"\"\r\n \r\n+from test_framework.blocktools import COINBASE_MATURITY\r\n from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.util import (\r\n     assert_approx,\r\n     assert_equal,\r\n )\r\n \r\n+\r\n class AnalyzeTxTest(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n         self.setup_clean_chain = True\r\n@@ -27,14 +29,14 @@ class AnalyzeTxTest(BitcoinTestFramework):\r\n         node1 = self.nodes[1]\r\n         self.connect_nodes(0, 1)\r\n \r\n-        node0.generate(1) # Leave IBD\r\n+        node0.generate(1)  # Leave IBD\r\n \r\n         node0.createwallet(wallet_name='w0')\r\n         w0 = node0.get_wallet_rpc('w0')\r\n         node1.createwallet(wallet_name='w1')\r\n         w1 = node1.get_wallet_rpc('w1')\r\n \r\n-        node0.generatetoaddress(101, w0.getnewaddress())\r\n+        node0.generatetoaddress(nblocks=COINBASE_MATURITY + 1, address=w0.getnewaddress())\r\n         assert_equal(w0.getbalance(), 50.0)\r\n         assert_equal(w1.getbalance(), 0.0)\r\n \r\n@@ -43,10 +45,10 @@ class AnalyzeTxTest(BitcoinTestFramework):\r\n         tx = node1.createrawtransaction([], [{address1: 5.0}])\r\n \r\n         # node0 should be unaffected\r\n-        assert_equal(w0.analyzerawtransaction(tx), 0.0)\r\n+        assert_equal(w0.analyzerawtransaction(tx), {\"balance_change\": 0.0})\r\n \r\n         # node1 should see +5 balance\r\n-        assert_equal(w1.analyzerawtransaction(tx), 5.0)\r\n+        assert_equal(w1.analyzerawtransaction(tx), {\"balance_change\": 5.0})\r\n \r\n         # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\r\n         funding = w0.fundrawtransaction(tx)\r\n@@ -54,10 +56,11 @@ class AnalyzeTxTest(BitcoinTestFramework):\r\n         bitcoin_fee = float(funding[\"fee\"])\r\n \r\n         # node0 sees fee + 5 btc decrease\r\n-        assert_approx(w0.analyzerawtransaction(tx), -(5.0 + bitcoin_fee))\r\n+        assert_approx(w0.analyzerawtransaction(tx)[\"balance_change\"], -(5.0 + bitcoin_fee))\r\n \r\n         # node1 sees same as before\r\n-        assert_equal(w1.analyzerawtransaction(tx), 5.0)\r\n+        assert_equal(w1.analyzerawtransaction(tx)[\"balance_change\"], 5.0)\r\n+\r\n \r\n if __name__ == '__main__':\r\n     AnalyzeTxTest().main()\r\n```\r\n</p></details>\r\n\r\n\r\n",
      "commit_id" : "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "created_at" : "2021-08-21T16:14:58Z",
      "diff_hunk" : "@@ -0,0 +1,63 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(101, w0.getnewaddress())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693372773",
      "id" : 693372773,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzM3Mjc3Mw==",
      "original_commit_id" : "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/wallet_analyzerawtx.py",
      "position" : 37,
      "pull_request_review_id" : 735506097,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-21T17:07:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693372773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693374190"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693374190"
         }
      },
      "author_association" : "MEMBER",
      "body" : "<details><summary>Some suggestions for the rpc</summary><p>\r\n\r\n```diff\r\n--- a/src/wallet/rpcwallet.cpp\r\n+++ b/src/wallet/rpcwallet.cpp\r\n@@ -4647,13 +4647,16 @@ static RPCHelpMan upgradewallet()\r\n RPCHelpMan analyzerawtransaction()\r\n {\r\n     return RPCHelpMan{\"analyzerawtransaction\",\r\n-        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\r\n+        \"\\nCalculate the balance change that would result from the signing and broadcasting of the given transaction.\\n\" +\r\n         HELP_REQUIRING_PASSPHRASE,\r\n         {\r\n             {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\r\n         },\r\n         RPCResult{\r\n-            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\r\n+            RPCResult::Type::OBJ, \"\", \"\",\r\n+            {\r\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\r\n+            }\r\n         },\r\n         RPCExamples{\r\n             HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\r\n@@ -4673,26 +4676,31 @@ RPCHelpMan analyzerawtransaction()\r\n     // Decode the transaction\r\n     CMutableTransaction mtx;\r\n     if (!DecodeHexTx(mtx, request.params[0].get_str(), true, true)) {\r\n-        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\r\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failed. Make sure the transaction has at least one input.\");\r\n     }\r\n \r\n     // Calculate changes\r\n-    CAmount changes = 0;\r\n+    CAmount changes{0};\r\n \r\n-    // Fetch debit; we are *spending* these; if the transaction is signed and broadcast, we will lose everything in these\r\n+    // Fetch debit; we are *spending* these; if the transaction is signed and\r\n+    // broadcast, we will lose everything in these.\r\n     for (size_t i = 0; i < mtx.vin.size(); ++i) {\r\n         changes -= pwallet->GetDebit(mtx.vin.at(i), ISMINE_SPENDABLE);\r\n     }\r\n \r\n-    // Iterate over outputs; we are *receiving* these, if the wallet considers them \"mine\"; if the transaciton is signed\r\n-    // and broadcast, we will receive everything in these\r\n+    // Iterate over outputs; we are *receiving* these, if the wallet considers\r\n+    // them \"mine\"; if the transaction is signed and broadcast, we will receive\r\n+    // everything in these.\r\n     for (size_t i = 0; i < mtx.vout.size(); ++i) {\r\n         const CTxOut& txout = mtx.vout.at(i);\r\n         if (!pwallet->IsMine(txout)) continue;\r\n         changes += txout.nValue;\r\n     }\r\n \r\n-    return ValueFromAmount(changes);\r\n+    UniValue result(UniValue::VOBJ);\r\n+    result.pushKV(\"balance_change\", ValueFromAmount(changes));\r\n+\r\n+    return result;\r\n }\r\n     };\r\n }\r\n@@ -4762,6 +4770,7 @@ static const CRPCCommand commands[] =\r\n     { \"wallet\",             &abandontransaction,             },\r\n     { \"wallet\",             &abortrescan,                    },\r\n     { \"wallet\",             &addmultisigaddress,             },\r\n+    { \"wallet\",             &analyzerawtransaction,          },\r\n     { \"wallet\",             &backupwallet,                   },\r\n     { \"wallet\",             &bumpfee,                        },\r\n     { \"wallet\",             &psbtbumpfee,                    },\r\n@@ -4816,7 +4825,6 @@ static const CRPCCommand commands[] =\r\n     { \"wallet\",             &unloadwallet,                   },\r\n     { \"wallet\",             &upgradewallet,                  },\r\n     { \"wallet\",             &walletcreatefundedpsbt,         },\r\n-    { \"wallet\",             &analyzerawtransaction,          },\r\n```\r\n</p></details>\r\n\r\n- return an amount? (edit: seems to give the same result)\r\n- ISTM returning the result as a JSON object is preferred\r\n- `s/transaciton/transaction/` line 4610\r\n- sort here\r\n",
      "commit_id" : "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "created_at" : "2021-08-21T16:28:25Z",
      "diff_hunk" : "@@ -4685,6 +4738,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             &unloadwallet,                   },\n     { \"wallet\",             &upgradewallet,                  },\n     { \"wallet\",             &walletcreatefundedpsbt,         },\n+    { \"wallet\",             &analyzerawtransaction,          },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693374190",
      "id" : 693374190,
      "line" : 4741,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzM3NDE5MA==",
      "original_commit_id" : "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "original_line" : 4741,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 64,
      "pull_request_review_id" : 735506097,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-21T17:11:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693374190",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
