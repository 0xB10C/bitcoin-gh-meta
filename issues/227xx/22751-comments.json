[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692703814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692703814"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`test/functional/wallet_analyzerawtx.py:60:9: F841 local variable 'analysis' is assigned to but never used`",
      "commit_id" : "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "created_at" : "2021-08-20T06:40:00Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(101, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx), 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx), 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])\n+\n+        # node0 sees fee + 5 btc decrease\n+        assert_approx(w0.analyzerawtransaction(tx), -(5.0 + bitcoin_fee))\n+\n+        # node1 sees same as before\n+        analysis = w1.analyzerawtransaction(tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692703814",
      "id" : 692703814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjcwMzgxNA==",
      "original_commit_id" : "70620ac3c45da9ed7daa14b52f7d3fbf3b6b7872",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "test/functional/wallet_analyzerawtx.py",
      "position" : null,
      "pull_request_review_id" : 734716391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-20T06:40:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692703814",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692716520"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692716520"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, fixed.",
      "commit_id" : "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "created_at" : "2021-08-20T07:04:56Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(101, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx), 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx), 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])\n+\n+        # node0 sees fee + 5 btc decrease\n+        assert_approx(w0.analyzerawtransaction(tx), -(5.0 + bitcoin_fee))\n+\n+        # node1 sees same as before\n+        analysis = w1.analyzerawtransaction(tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692716520",
      "id" : 692716520,
      "in_reply_to_id" : 692703814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjcxNjUyMA==",
      "original_commit_id" : "70620ac3c45da9ed7daa14b52f7d3fbf3b6b7872",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "test/functional/wallet_analyzerawtx.py",
      "position" : null,
      "pull_request_review_id" : 734731551,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-20T07:04:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692716520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, but I don't think the RPC name represents the functionality. Analyze implies some sort of in-depth breakdown of information. Perhaps `nettransactionbalance` or something to represent the balance-specific use?",
      "created_at" : "2021-08-21T00:00:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903013607",
      "id" : 903013607,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
      "node_id" : "IC_kwDOABII58410uTn",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-21T00:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903013607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> but I don't think the RPC name represents the functionality. Analyze implies some sort of in-depth breakdown of information. \r\n\r\nAgree. We already have RPC with similar name: `analyzepsbt` which returns lot of things that would be helpful for someone using PSBT. Although I am still confused between `decodepsbt` and `analyzepsbt`.\r\n\r\n> Perhaps nettransactionbalance or something to represent the balance-specific use?\r\n\r\nOr maybe add it in the results of any existing RPC",
      "created_at" : "2021-08-21T04:05:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903052080",
      "id" : 903052080,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
      "node_id" : "IC_kwDOABII584103sw",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-21T04:05:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903052080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I have no strong feelings about keeping `analyze` but I think `<verb>rawtransaction` is a good name (edit: because it is sticking to the convention), where `<verb>` somehow indicates looking at each input and output and determining whether they belong to the wallet, and if so to add/subtract the appropriate amount.\r\n\r\nEdit: adding to results of existing RPC sounds good to me too, but not sure which that would be.",
      "created_at" : "2021-08-21T07:45:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903076896",
      "id" : 903076896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
      "node_id" : "IC_kwDOABII584109wg",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-21T07:48:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903076896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   }
]
