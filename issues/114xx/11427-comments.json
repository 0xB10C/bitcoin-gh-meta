[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11427#discussion_r142008315"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11427"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142008315"
         }
      },
      "author_association" : "MEMBER",
      "body" : "should be `pindex->nHeight < chainparams.GetConsensus().BIP34Height;` ?",
      "commit_id" : "912b1a12c2fabaf384e704076ecb9358377c900b",
      "created_at" : "2017-09-30T15:24:58Z",
      "diff_hunk" : "@@ -1712,10 +1712,7 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n     // before the first had been spent.  Since those coinbases are sufficiently buried its no longer possible to create further\n     // duplicate transactions descending from the known pairs either.\n     // If we're on the known chain at height greater than where BIP34 activated, we can save the db accesses needed for the BIP30 check.\n-    assert(pindex->pprev);\n-    CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(chainparams.GetConsensus().BIP34Height);\n-    //Only continue to enforce if we're below BIP34 activation height or the block hash at that height doesn't correspond.\n-    fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == chainparams.GetConsensus().BIP34Hash));\n+    fEnforceBIP30 = fEnforceBIP30 && pindex->nHeight > chainparams.GetConsensus().BIP34Height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11427#discussion_r142008315",
      "id" : 142008315,
      "original_commit_id" : "2d438b3f10f568764671ff227c1fc48de4071c0c",
      "original_position" : 8,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 66315507,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11427",
      "updated_at" : "2017-09-30T18:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142008315",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8403418?v=4",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11427#discussion_r142011574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11427"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142011574"
         }
      },
      "author_association" : "MEMBER",
      "body" : "oops, yeah it's bip34 that we need to enforce it after BIP34Height but not before, not bip30. bip30b is the opposite. Thanks!",
      "commit_id" : "912b1a12c2fabaf384e704076ecb9358377c900b",
      "created_at" : "2017-09-30T17:53:56Z",
      "diff_hunk" : "@@ -1712,10 +1712,7 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n     // before the first had been spent.  Since those coinbases are sufficiently buried its no longer possible to create further\n     // duplicate transactions descending from the known pairs either.\n     // If we're on the known chain at height greater than where BIP34 activated, we can save the db accesses needed for the BIP30 check.\n-    assert(pindex->pprev);\n-    CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(chainparams.GetConsensus().BIP34Height);\n-    //Only continue to enforce if we're below BIP34 activation height or the block hash at that height doesn't correspond.\n-    fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == chainparams.GetConsensus().BIP34Hash));\n+    fEnforceBIP30 = fEnforceBIP30 && pindex->nHeight > chainparams.GetConsensus().BIP34Height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11427#discussion_r142011574",
      "id" : 142011574,
      "in_reply_to_id" : 142008315,
      "original_commit_id" : "2d438b3f10f568764671ff227c1fc48de4071c0c",
      "original_position" : 8,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 66318775,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11427",
      "updated_at" : "2017-09-30T18:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142011574",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11427#discussion_r142019645"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11427"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142019645"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we could make this an `if` condition before any BIP30 code, and skip all BIP30 codes after BIP34Height. Therefore, we don't need to compare the block hash of every blocks with the BIP30 special cases",
      "commit_id" : "912b1a12c2fabaf384e704076ecb9358377c900b",
      "created_at" : "2017-10-01T03:14:53Z",
      "diff_hunk" : "@@ -1712,10 +1712,7 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n     // before the first had been spent.  Since those coinbases are sufficiently buried its no longer possible to create further\n     // duplicate transactions descending from the known pairs either.\n     // If we're on the known chain at height greater than where BIP34 activated, we can save the db accesses needed for the BIP30 check.\n-    assert(pindex->pprev);\n-    CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(chainparams.GetConsensus().BIP34Height);\n-    //Only continue to enforce if we're below BIP34 activation height or the block hash at that height doesn't correspond.\n-    fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == chainparams.GetConsensus().BIP34Hash));\n+    fEnforceBIP30 = fEnforceBIP30 && pindex->nHeight < chainparams.GetConsensus().BIP34Height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11427#discussion_r142019645",
      "id" : 142019645,
      "original_commit_id" : "912b1a12c2fabaf384e704076ecb9358377c900b",
      "original_position" : 8,
      "path" : "src/validation.cpp",
      "position" : 8,
      "pull_request_review_id" : 66326892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11427",
      "updated_at" : "2017-10-01T03:14:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142019645",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8403418?v=4",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is incorrect -- on a random chain, we can't disable BIP30 merely because BIP34 has activated.  It's possible to have a chain where there are multiple coinbases with the same txid (mined pre-bip34), where the first bip30 violation would be after the bip34 activation height, because the coinbases didn't overwrite each other.  This in turn could prevent reorging back to the honest chain.  NACK.",
      "created_at" : "2017-10-01T18:30:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-333396501",
      "id" : 333396501,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11427",
      "updated_at" : "2017-10-01T18:30:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333396501",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
