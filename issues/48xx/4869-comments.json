[
   {
      "body" : "@diapolo can you help test this in windows?\r\n",
      "created_at" : "2014-09-08T12:06:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#issuecomment-54808471",
      "id" : 54808471,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4869",
      "updated_at" : "2014-09-08T12:06:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/54808471",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17236118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17236118"
         }
      },
      "body" : "Mix of { on the same line and on the next line?",
      "commit_id" : "6050ab685553c7312ef105d2c4a5230c3fcf4002",
      "created_at" : "2014-09-08T13:09:00Z",
      "diff_hunk" : "@@ -225,6 +228,68 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n+/**\n+ * Convert milliseconds to a struct timeval for select.\n+ */\n+struct timeval static MillisToTimeval(int64_t nTimeout)\n+{\n+    struct timeval timeout;\n+    timeout.tv_sec  = nTimeout / 1000;\n+    timeout.tv_usec = (nTimeout % 1000) * 1000;\n+    return timeout;\n+}\n+\n+/**\n+ * Read bytes from socket. This will either read the full number of bytes requested\n+ * or return False on error or timeout.\n+ * This function can be interrupted by boost thread interrupt.\n+ *\n+ * @param data Buffer to receive into\n+ * @param len  Length of data to receive\n+ * @param timeout  Timeout in milliseconds for receive operation\n+ *\n+ * @note This function requires that hSocket is in non-blocking mode.\n+ */\n+bool static InterruptibleRecv(char *data, size_t len, int timeout, SOCKET& hSocket)\n+{\n+    int64_t curTime = GetTimeMillis();\n+    int64_t endTime = curTime + timeout;\n+    // Maximum time to wait in one select call. It will take up until this time (in millis)\n+    // to break off in case of an interruption.\n+    const int64_t maxWait = 1000;\n+    while (len > 0 && curTime < endTime)\n+    {\n+        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        if (ret > 0)\n+        {\n+            len -= ret;\n+            data += ret;\n+        } else if (ret == 0) // Unexpected disconnection\n+        {\n+            return false;\n+        } else { // Other error or blocking",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17236118",
      "id" : 17236118,
      "original_commit_id" : "5df9b09c8f9fe6ca1cc8235945b5aea4f69e12fb",
      "original_position" : 53,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869",
      "updated_at" : "2014-09-10T09:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17236118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "ut ACK",
      "created_at" : "2014-09-08T13:10:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#issuecomment-54814582",
      "id" : 54814582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4869",
      "updated_at" : "2014-09-08T13:10:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/54814582",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17236299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17236299"
         }
      },
      "body" : "What should it be?\r\n",
      "commit_id" : "6050ab685553c7312ef105d2c4a5230c3fcf4002",
      "created_at" : "2014-09-08T13:11:53Z",
      "diff_hunk" : "@@ -225,6 +228,68 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n+/**\n+ * Convert milliseconds to a struct timeval for select.\n+ */\n+struct timeval static MillisToTimeval(int64_t nTimeout)\n+{\n+    struct timeval timeout;\n+    timeout.tv_sec  = nTimeout / 1000;\n+    timeout.tv_usec = (nTimeout % 1000) * 1000;\n+    return timeout;\n+}\n+\n+/**\n+ * Read bytes from socket. This will either read the full number of bytes requested\n+ * or return False on error or timeout.\n+ * This function can be interrupted by boost thread interrupt.\n+ *\n+ * @param data Buffer to receive into\n+ * @param len  Length of data to receive\n+ * @param timeout  Timeout in milliseconds for receive operation\n+ *\n+ * @note This function requires that hSocket is in non-blocking mode.\n+ */\n+bool static InterruptibleRecv(char *data, size_t len, int timeout, SOCKET& hSocket)\n+{\n+    int64_t curTime = GetTimeMillis();\n+    int64_t endTime = curTime + timeout;\n+    // Maximum time to wait in one select call. It will take up until this time (in millis)\n+    // to break off in case of an interruption.\n+    const int64_t maxWait = 1000;\n+    while (len > 0 && curTime < endTime)\n+    {\n+        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        if (ret > 0)\n+        {\n+            len -= ret;\n+            data += ret;\n+        } else if (ret == 0) // Unexpected disconnection\n+        {\n+            return false;\n+        } else { // Other error or blocking",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17236299",
      "id" : 17236299,
      "original_commit_id" : "5df9b09c8f9fe6ca1cc8235945b5aea4f69e12fb",
      "original_position" : 53,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869",
      "updated_at" : "2014-09-10T09:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17236299",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17236968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17236968"
         }
      },
      "body" : "To follow coding-style.md: on the same line for everything inside code bodies. But at least consistent within one function...",
      "commit_id" : "6050ab685553c7312ef105d2c4a5230c3fcf4002",
      "created_at" : "2014-09-08T13:24:31Z",
      "diff_hunk" : "@@ -225,6 +228,68 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n+/**\n+ * Convert milliseconds to a struct timeval for select.\n+ */\n+struct timeval static MillisToTimeval(int64_t nTimeout)\n+{\n+    struct timeval timeout;\n+    timeout.tv_sec  = nTimeout / 1000;\n+    timeout.tv_usec = (nTimeout % 1000) * 1000;\n+    return timeout;\n+}\n+\n+/**\n+ * Read bytes from socket. This will either read the full number of bytes requested\n+ * or return False on error or timeout.\n+ * This function can be interrupted by boost thread interrupt.\n+ *\n+ * @param data Buffer to receive into\n+ * @param len  Length of data to receive\n+ * @param timeout  Timeout in milliseconds for receive operation\n+ *\n+ * @note This function requires that hSocket is in non-blocking mode.\n+ */\n+bool static InterruptibleRecv(char *data, size_t len, int timeout, SOCKET& hSocket)\n+{\n+    int64_t curTime = GetTimeMillis();\n+    int64_t endTime = curTime + timeout;\n+    // Maximum time to wait in one select call. It will take up until this time (in millis)\n+    // to break off in case of an interruption.\n+    const int64_t maxWait = 1000;\n+    while (len > 0 && curTime < endTime)\n+    {\n+        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        if (ret > 0)\n+        {\n+            len -= ret;\n+            data += ret;\n+        } else if (ret == 0) // Unexpected disconnection\n+        {\n+            return false;\n+        } else { // Other error or blocking",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17236968",
      "id" : 17236968,
      "original_commit_id" : "5df9b09c8f9fe6ca1cc8235945b5aea4f69e12fb",
      "original_position" : 53,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869",
      "updated_at" : "2014-09-10T09:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17236968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17237772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17237772"
         }
      },
      "body" : "Is it possible to run just a function through the clang formatter? Would make sense to introduce new code with the right formatting.\r\n",
      "commit_id" : "6050ab685553c7312ef105d2c4a5230c3fcf4002",
      "created_at" : "2014-09-08T13:38:03Z",
      "diff_hunk" : "@@ -225,6 +228,68 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n+/**\n+ * Convert milliseconds to a struct timeval for select.\n+ */\n+struct timeval static MillisToTimeval(int64_t nTimeout)\n+{\n+    struct timeval timeout;\n+    timeout.tv_sec  = nTimeout / 1000;\n+    timeout.tv_usec = (nTimeout % 1000) * 1000;\n+    return timeout;\n+}\n+\n+/**\n+ * Read bytes from socket. This will either read the full number of bytes requested\n+ * or return False on error or timeout.\n+ * This function can be interrupted by boost thread interrupt.\n+ *\n+ * @param data Buffer to receive into\n+ * @param len  Length of data to receive\n+ * @param timeout  Timeout in milliseconds for receive operation\n+ *\n+ * @note This function requires that hSocket is in non-blocking mode.\n+ */\n+bool static InterruptibleRecv(char *data, size_t len, int timeout, SOCKET& hSocket)\n+{\n+    int64_t curTime = GetTimeMillis();\n+    int64_t endTime = curTime + timeout;\n+    // Maximum time to wait in one select call. It will take up until this time (in millis)\n+    // to break off in case of an interruption.\n+    const int64_t maxWait = 1000;\n+    while (len > 0 && curTime < endTime)\n+    {\n+        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        if (ret > 0)\n+        {\n+            len -= ret;\n+            data += ret;\n+        } else if (ret == 0) // Unexpected disconnection\n+        {\n+            return false;\n+        } else { // Other error or blocking",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17237772",
      "id" : 17237772,
      "original_commit_id" : "5df9b09c8f9fe6ca1cc8235945b5aea4f69e12fb",
      "original_position" : 53,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869",
      "updated_at" : "2014-09-10T09:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17237772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17237975"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17237975"
         }
      },
      "body" : "Ok, did this by reformatting the whole file and just copying the function afterwards.\r\n",
      "commit_id" : "6050ab685553c7312ef105d2c4a5230c3fcf4002",
      "created_at" : "2014-09-08T13:41:40Z",
      "diff_hunk" : "@@ -225,6 +228,68 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n+/**\n+ * Convert milliseconds to a struct timeval for select.\n+ */\n+struct timeval static MillisToTimeval(int64_t nTimeout)\n+{\n+    struct timeval timeout;\n+    timeout.tv_sec  = nTimeout / 1000;\n+    timeout.tv_usec = (nTimeout % 1000) * 1000;\n+    return timeout;\n+}\n+\n+/**\n+ * Read bytes from socket. This will either read the full number of bytes requested\n+ * or return False on error or timeout.\n+ * This function can be interrupted by boost thread interrupt.\n+ *\n+ * @param data Buffer to receive into\n+ * @param len  Length of data to receive\n+ * @param timeout  Timeout in milliseconds for receive operation\n+ *\n+ * @note This function requires that hSocket is in non-blocking mode.\n+ */\n+bool static InterruptibleRecv(char *data, size_t len, int timeout, SOCKET& hSocket)\n+{\n+    int64_t curTime = GetTimeMillis();\n+    int64_t endTime = curTime + timeout;\n+    // Maximum time to wait in one select call. It will take up until this time (in millis)\n+    // to break off in case of an interruption.\n+    const int64_t maxWait = 1000;\n+    while (len > 0 && curTime < endTime)\n+    {\n+        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        if (ret > 0)\n+        {\n+            len -= ret;\n+            data += ret;\n+        } else if (ret == 0) // Unexpected disconnection\n+        {\n+            return false;\n+        } else { // Other error or blocking",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17237975",
      "id" : 17237975,
      "original_commit_id" : "5df9b09c8f9fe6ca1cc8235945b5aea4f69e12fb",
      "original_position" : 53,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869",
      "updated_at" : "2014-09-10T09:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17237975",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17238752"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17238752"
         }
      },
      "body" : "I don't see anything?",
      "commit_id" : "6050ab685553c7312ef105d2c4a5230c3fcf4002",
      "created_at" : "2014-09-08T13:55:19Z",
      "diff_hunk" : "@@ -225,6 +228,68 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n+/**\n+ * Convert milliseconds to a struct timeval for select.\n+ */\n+struct timeval static MillisToTimeval(int64_t nTimeout)\n+{\n+    struct timeval timeout;\n+    timeout.tv_sec  = nTimeout / 1000;\n+    timeout.tv_usec = (nTimeout % 1000) * 1000;\n+    return timeout;\n+}\n+\n+/**\n+ * Read bytes from socket. This will either read the full number of bytes requested\n+ * or return False on error or timeout.\n+ * This function can be interrupted by boost thread interrupt.\n+ *\n+ * @param data Buffer to receive into\n+ * @param len  Length of data to receive\n+ * @param timeout  Timeout in milliseconds for receive operation\n+ *\n+ * @note This function requires that hSocket is in non-blocking mode.\n+ */\n+bool static InterruptibleRecv(char *data, size_t len, int timeout, SOCKET& hSocket)\n+{\n+    int64_t curTime = GetTimeMillis();\n+    int64_t endTime = curTime + timeout;\n+    // Maximum time to wait in one select call. It will take up until this time (in millis)\n+    // to break off in case of an interruption.\n+    const int64_t maxWait = 1000;\n+    while (len > 0 && curTime < endTime)\n+    {\n+        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        if (ret > 0)\n+        {\n+            len -= ret;\n+            data += ret;\n+        } else if (ret == 0) // Unexpected disconnection\n+        {\n+            return false;\n+        } else { // Other error or blocking",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17238752",
      "id" : 17238752,
      "original_commit_id" : "5df9b09c8f9fe6ca1cc8235945b5aea4f69e12fb",
      "original_position" : 53,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869",
      "updated_at" : "2014-09-10T09:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17238752",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Yeah, I can take a look at this tomorrow.",
      "created_at" : "2014-09-08T14:46:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#issuecomment-54830300",
      "id" : 54830300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4869",
      "updated_at" : "2014-09-08T14:46:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/54830300",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17289045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17289045"
         }
      },
      "body" : "MSDN sais this is a gracefully disconnect:\r\nhttp://msdn.microsoft.com/de-de/library/windows/desktop/ms740121%28v=vs.85%29.aspx\r\n\r\nDoesn't change a thing code wise, but I'd suggest changing the comment accordingly.",
      "commit_id" : "6050ab685553c7312ef105d2c4a5230c3fcf4002",
      "created_at" : "2014-09-09T08:57:34Z",
      "diff_hunk" : "@@ -225,6 +228,63 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n+/**\n+ * Convert milliseconds to a struct timeval for select.\n+ */\n+struct timeval static MillisToTimeval(int64_t nTimeout)\n+{\n+    struct timeval timeout;\n+    timeout.tv_sec  = nTimeout / 1000;\n+    timeout.tv_usec = (nTimeout % 1000) * 1000;\n+    return timeout;\n+}\n+\n+/**\n+ * Read bytes from socket. This will either read the full number of bytes requested\n+ * or return False on error or timeout.\n+ * This function can be interrupted by boost thread interrupt.\n+ *\n+ * @param data Buffer to receive into\n+ * @param len  Length of data to receive\n+ * @param timeout  Timeout in milliseconds for receive operation\n+ *\n+ * @note This function requires that hSocket is in non-blocking mode.\n+ */\n+bool static InterruptibleRecv(char* data, size_t len, int timeout, SOCKET& hSocket)\n+{\n+    int64_t curTime = GetTimeMillis();\n+    int64_t endTime = curTime + timeout;\n+    // Maximum time to wait in one select call. It will take up until this time (in millis)\n+    // to break off in case of an interruption.\n+    const int64_t maxWait = 1000;\n+    while (len > 0 && curTime < endTime) {\n+        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        if (ret > 0) {\n+            len -= ret;\n+            data += ret;\n+        } else if (ret == 0) { // Unexpected disconnection",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17289045",
      "id" : 17289045,
      "original_commit_id" : "1e213c8c1194abddac86df4a8bab6403a118c825",
      "original_position" : 48,
      "path" : "src/netbase.cpp",
      "position" : 48,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869",
      "updated_at" : "2014-09-10T09:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17289045",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17289189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17289189"
         }
      },
      "body" : "Graceful maybe, but still unexpected.\r\n",
      "commit_id" : "6050ab685553c7312ef105d2c4a5230c3fcf4002",
      "created_at" : "2014-09-09T09:01:14Z",
      "diff_hunk" : "@@ -225,6 +228,63 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n+/**\n+ * Convert milliseconds to a struct timeval for select.\n+ */\n+struct timeval static MillisToTimeval(int64_t nTimeout)\n+{\n+    struct timeval timeout;\n+    timeout.tv_sec  = nTimeout / 1000;\n+    timeout.tv_usec = (nTimeout % 1000) * 1000;\n+    return timeout;\n+}\n+\n+/**\n+ * Read bytes from socket. This will either read the full number of bytes requested\n+ * or return False on error or timeout.\n+ * This function can be interrupted by boost thread interrupt.\n+ *\n+ * @param data Buffer to receive into\n+ * @param len  Length of data to receive\n+ * @param timeout  Timeout in milliseconds for receive operation\n+ *\n+ * @note This function requires that hSocket is in non-blocking mode.\n+ */\n+bool static InterruptibleRecv(char* data, size_t len, int timeout, SOCKET& hSocket)\n+{\n+    int64_t curTime = GetTimeMillis();\n+    int64_t endTime = curTime + timeout;\n+    // Maximum time to wait in one select call. It will take up until this time (in millis)\n+    // to break off in case of an interruption.\n+    const int64_t maxWait = 1000;\n+    while (len > 0 && curTime < endTime) {\n+        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        if (ret > 0) {\n+            len -= ret;\n+            data += ret;\n+        } else if (ret == 0) { // Unexpected disconnection",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17289189",
      "id" : 17289189,
      "original_commit_id" : "1e213c8c1194abddac86df4a8bab6403a118c825",
      "original_position" : 48,
      "path" : "src/netbase.cpp",
      "position" : 48,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869",
      "updated_at" : "2014-09-10T09:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17289189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17289479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17289479"
         }
      },
      "body" : "You could leave ``nRet`` out by using the select() directly in the if-clause.",
      "commit_id" : "6050ab685553c7312ef105d2c4a5230c3fcf4002",
      "created_at" : "2014-09-09T09:08:17Z",
      "diff_hunk" : "@@ -225,6 +228,63 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n+/**\n+ * Convert milliseconds to a struct timeval for select.\n+ */\n+struct timeval static MillisToTimeval(int64_t nTimeout)\n+{\n+    struct timeval timeout;\n+    timeout.tv_sec  = nTimeout / 1000;\n+    timeout.tv_usec = (nTimeout % 1000) * 1000;\n+    return timeout;\n+}\n+\n+/**\n+ * Read bytes from socket. This will either read the full number of bytes requested\n+ * or return False on error or timeout.\n+ * This function can be interrupted by boost thread interrupt.\n+ *\n+ * @param data Buffer to receive into\n+ * @param len  Length of data to receive\n+ * @param timeout  Timeout in milliseconds for receive operation\n+ *\n+ * @note This function requires that hSocket is in non-blocking mode.\n+ */\n+bool static InterruptibleRecv(char* data, size_t len, int timeout, SOCKET& hSocket)\n+{\n+    int64_t curTime = GetTimeMillis();\n+    int64_t endTime = curTime + timeout;\n+    // Maximum time to wait in one select call. It will take up until this time (in millis)\n+    // to break off in case of an interruption.\n+    const int64_t maxWait = 1000;\n+    while (len > 0 && curTime < endTime) {\n+        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        if (ret > 0) {\n+            len -= ret;\n+            data += ret;\n+        } else if (ret == 0) { // Unexpected disconnection\n+            return false;\n+        } else { // Other error or blocking\n+            int nErr = WSAGetLastError();\n+            if (nErr == WSAEINPROGRESS || nErr == WSAEWOULDBLOCK || nErr == WSAEINVAL) {\n+                struct timeval tval = MillisToTimeval(std::min(endTime - curTime, maxWait));\n+                fd_set fdset;\n+                FD_ZERO(&fdset);\n+                FD_SET(hSocket, &fdset);\n+                int nRet = select(hSocket + 1, &fdset, NULL, NULL, &tval);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17289479",
      "id" : 17289479,
      "original_commit_id" : "1e213c8c1194abddac86df4a8bab6403a118c825",
      "original_position" : 57,
      "path" : "src/netbase.cpp",
      "position" : 57,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869",
      "updated_at" : "2014-09-10T09:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17289479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "I'm currently testing this now...\r\n\r\nEdit:\r\nI added a debugging line and currently the only (non-)error that is logged is this one:\r\n``InterruptibleRecv: Socket error on recv: Ein nicht blockierender Socketvorgang konnte nicht sofort ausgefÃÂ¼hrt werden.  (10035)``.\r\n\r\nI also can confirm that shutdown is a lot quicker now when using Tor as proxy.\r\nEdit 2: I observed a situation, where shutdown hung and I had to force a close of bitcoin-qt.exe. I'm not sure if it was related to this pull.",
      "created_at" : "2014-09-09T09:10:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#issuecomment-54943145",
      "id" : 54943145,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4869",
      "updated_at" : "2014-09-09T12:58:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/54943145",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17289558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17289558"
         }
      },
      "body" : "Yeah :-P.",
      "commit_id" : "6050ab685553c7312ef105d2c4a5230c3fcf4002",
      "created_at" : "2014-09-09T09:10:28Z",
      "diff_hunk" : "@@ -225,6 +228,63 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n+/**\n+ * Convert milliseconds to a struct timeval for select.\n+ */\n+struct timeval static MillisToTimeval(int64_t nTimeout)\n+{\n+    struct timeval timeout;\n+    timeout.tv_sec  = nTimeout / 1000;\n+    timeout.tv_usec = (nTimeout % 1000) * 1000;\n+    return timeout;\n+}\n+\n+/**\n+ * Read bytes from socket. This will either read the full number of bytes requested\n+ * or return False on error or timeout.\n+ * This function can be interrupted by boost thread interrupt.\n+ *\n+ * @param data Buffer to receive into\n+ * @param len  Length of data to receive\n+ * @param timeout  Timeout in milliseconds for receive operation\n+ *\n+ * @note This function requires that hSocket is in non-blocking mode.\n+ */\n+bool static InterruptibleRecv(char* data, size_t len, int timeout, SOCKET& hSocket)\n+{\n+    int64_t curTime = GetTimeMillis();\n+    int64_t endTime = curTime + timeout;\n+    // Maximum time to wait in one select call. It will take up until this time (in millis)\n+    // to break off in case of an interruption.\n+    const int64_t maxWait = 1000;\n+    while (len > 0 && curTime < endTime) {\n+        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        if (ret > 0) {\n+            len -= ret;\n+            data += ret;\n+        } else if (ret == 0) { // Unexpected disconnection",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#discussion_r17289558",
      "id" : 17289558,
      "original_commit_id" : "1e213c8c1194abddac86df4a8bab6403a118c825",
      "original_position" : 48,
      "path" : "src/netbase.cpp",
      "position" : 48,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4869",
      "updated_at" : "2014-09-10T09:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17289558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "So shutdown still hangs after this? Did it hang on waiting for the network thread or something else?",
      "created_at" : "2014-09-09T15:05:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#issuecomment-54983005",
      "id" : 54983005,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4869",
      "updated_at" : "2014-09-09T15:05:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/54983005",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj It doesn't hang generally, it was faster the first few times I tried a shutdown. But I had one case, where it would never shutdown and I had to kill the process. As I said I'm not yet sure it's related only to this pull.",
      "created_at" : "2014-09-09T17:29:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#issuecomment-55005626",
      "id" : 55005626,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4869",
      "updated_at" : "2014-09-09T17:29:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/55005626",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "Ok, next time you get the hang please debug where it happens. We can't move forward here if we don't have more information.",
      "created_at" : "2014-09-10T08:08:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#issuecomment-55083677",
      "id" : 55083677,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4869",
      "updated_at" : "2014-09-10T08:08:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/55083677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj I know this is not helpful yet, because I dunno where that behaviour came from, but I'm testing it and reported that case ;).",
      "created_at" : "2014-09-10T09:03:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#issuecomment-55088691",
      "id" : 55088691,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4869",
      "updated_at" : "2014-09-10T09:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/55088691",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4869_6050ab685553c7312ef105d2c4a5230c3fcf4002/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2014-09-10T09:47:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#issuecomment-55093433",
      "id" : 55093433,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4869",
      "updated_at" : "2014-09-10T09:47:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/55093433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "body" : "I was not able to reproduce the behaviour, it worked like a charm the last days.\r\n\r\nACK",
      "created_at" : "2014-09-14T11:47:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#issuecomment-55523132",
      "id" : 55523132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4869",
      "updated_at" : "2014-09-14T11:47:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/55523132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "ut ACK\r\n",
      "created_at" : "2014-09-15T01:35:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4869#issuecomment-55546467",
      "id" : 55546467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4869",
      "updated_at" : "2014-09-15T01:35:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/55546467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   }
]
