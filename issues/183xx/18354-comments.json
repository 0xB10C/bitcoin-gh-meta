[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18338 (wip: Fix wallet unload race condition by promag)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-03-15T19:12:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18354#issuecomment-599251772",
      "id" : 599251772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18354",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5OTI1MTc3Mg==",
      "updated_at" : "2020-03-15T19:12:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599251772",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18354#discussion_r393055199"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18354"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393055199"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why's this adding `|| m_are_callbacks_running`? In the case where m_callbacks_pending is empty and m_are_callbacks_running is true, won't ProcessQueue return immediately and the loop below be a busy loop consuming 100% of CPU?\r\n\r\nAlso could use `while (WITH_LOCK(m_cs_callbacks_pending, return ...)) {` instead of a lambda",
      "commit_id" : "16e9578c1ecc3240282e136c378fb0433e775e41",
      "created_at" : "2020-03-16T14:17:11Z",
      "diff_hunk" : "@@ -199,13 +199,16 @@ void SingleThreadedSchedulerClient::AddToProcessQueue(std::function<void ()> fun\n }\n \n void SingleThreadedSchedulerClient::EmptyQueue() {\n-    assert(!m_pscheduler->AreThreadsServicingQueue());\n-    bool should_continue = true;\n-    while (should_continue) {\n-        ProcessQueue();\n+    if (m_pscheduler->AreThreadsServicingQueue())\n+        return;\n+\n+    auto shouldProcessQueue = [this]() {\n         LOCK(m_cs_callbacks_pending);\n-        should_continue = !m_callbacks_pending.empty();\n-    }\n+        return !m_callbacks_pending.empty() || m_are_callbacks_running;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18354#discussion_r393055199",
      "id" : 393055199,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1NTE5OQ==",
      "original_commit_id" : "16e9578c1ecc3240282e136c378fb0433e775e41",
      "original_position" : 15,
      "path" : "src/scheduler.cpp",
      "position" : 15,
      "pull_request_review_id" : 375260070,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18354",
      "updated_at" : "2020-03-16T14:28:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393055199",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18354#discussion_r393063319"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18354"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393063319"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is a partial fix for the bug, not a full fix. While calling BlockUntilSyncedToCurrentChain before reset makes it less likely the wallet pointer will be deleted while still in use, it's still possible for a blockconnected or other notification to be running when wallet.reset() is called below",
      "commit_id" : "16e9578c1ecc3240282e136c378fb0433e775e41",
      "created_at" : "2020-03-16T14:24:50Z",
      "diff_hunk" : "@@ -137,6 +135,8 @@ void UnloadWallet(std::shared_ptr<CWallet>&& wallet)\n     // Notify the unload intent so that all remaining shared pointers are\n     // released.\n     wallet->NotifyUnload();\n+    wallet->BlockUntilSyncedToCurrentChain();\n+    wallet->m_chain_notifications_handler.reset();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18354#discussion_r393063319",
      "id" : 393063319,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2MzMxOQ==",
      "original_commit_id" : "16e9578c1ecc3240282e136c378fb0433e775e41",
      "original_position" : 15,
      "path" : "src/wallet/wallet.cpp",
      "position" : 15,
      "pull_request_review_id" : 375260070,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18354",
      "updated_at" : "2020-03-16T14:28:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393063319",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
