[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\r\nTo reproduce the problem, start the client: `bitcoind -rpcworkqueue=1`. This reduces the maximum number of in-progress RPCs from 16 ([`DEFAULT_HTTP_WORKQUEUE`](https://github.com/bitcoin/bitcoin/blob/e2d36639ca87b980b147047e4e47cf160b2c9406/src/httpserver.h#L12)) to 1. Then run:\r\n```\r\nseq 10 | while read i;do src/bitcoin-cli getblockhash 0 >/dev/null&done\r\n```\r\nThis submits this trivial RPC 10 time in the background (the `&` character) and usually produces one or more of the `error: couldn't parse reply from server` errors. If it doesn't, try again, or increase the load to more than 10. You will see a reasonable error message in `debug.log`:\r\n```\r\n2020-03-12T17:32:28Z WARNING: request rejected because http work queue depth exceeded, it can be increased with the -rpcworkqueue= setting\r\n```\r\nBut most users wouldn't think to look there, or wouldn't have access.\r\n\r\nWith this PR, the error is more understandable. The failed request in this case is retryable, so maybe that should be indicated in the text, but this [text (`Work queue depth exceeded`) comes from `bitcoind`](https://github.com/bitcoin/bitcoin/blob/e2d36639ca87b980b147047e4e47cf160b2c9406/src/httpserver.cpp#L271), which probably shouldn't be changed, especially since there could be other RPC clients that depend on that exact text. We could have `bitcoin-cli` include additional text like `please try again` but it doesn't really know for certain in every case that the request is retryable.",
      "created_at" : "2020-03-12T17:49:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-598333058",
      "id" : 598333058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18335",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5ODMzMzA1OA==",
      "updated_at" : "2020-03-12T17:49:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/598333058",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18335#discussion_r391823420"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18335"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391823420"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's strange that it ends up here. It's trying to parse an error message as JSON! Isn't there some error code (either HTTP or JSON-RPC) that could be checked for instead? If not, that seems like a bug in the server.",
      "commit_id" : "4ee473857c58422e5bd525982ddb9ff700eceb74",
      "created_at" : "2020-03-12T18:47:52Z",
      "diff_hunk" : "@@ -404,7 +404,7 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n     // Parse reply\n     UniValue valReply(UniValue::VSTR);\n     if (!valReply.read(response.body))\n-        throw std::runtime_error(\"couldn't parse reply from server\");\n+        throw std::runtime_error(strprintf(\"server response: %s\", response.body));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18335#discussion_r391823420",
      "id" : 391823420,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgyMzQyMA==",
      "original_commit_id" : "86af4967412ca79fc22d0fa0868069bb438463ed",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 373815557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18335",
      "updated_at" : "2020-03-12T22:52:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391823420",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18335#discussion_r391928978"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18335"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391928978"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It does seem wrong that my proposed fix retains the practice of trying to decode a non-JSON string as JSON, and depending on that to fail. Yes, perhaps this is a bug in the server -- should it be returning JSON in `body` here rather than a plain string?  But as I said at the end of the comment above, I was hesitant to change the server because I'm worried that there may be other RPC clients besides `bitcoin-cli` that depend on the current (plain string) response. What do you think? If the fix is better in the server, I can do that. \r\n\r\nJust for further information, the response returned in this work queue depth exceeded is (status 500 is [`HTTP_INTERNAL_SERVER_ERROR`](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/protocol.h#L18)):\r\n```\r\n(gdb) f 0\r\nBreakpoint 1, CallRPC (rh=0x555555845e90, strMethod=\"getblockhash\", args=std::vector of length 1, capacity 2 = {...})\r\n    at bitcoin-cli.cpp:406\r\n406\t    if (!valReply.read(response.body))\r\n(gdb) p response\r\n$2 = {\r\n  status = 500, \r\n  error = -1, \r\n  body = \"Work queue depth exceeded\"\r\n}\r\n(gdb) \r\n```\r\nHere's a successful reply:\r\n```\r\n(gdb) p response\r\n$6 = {\r\n  status = 200, \r\n  error = -1, \r\n  body = \"{\\\"result\\\":\\\"000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\\\",\\\"error\\\":null,\\\"id\\\":1}\\n\"\r\n}\r\n```\r\nHere's the response when requesting a nonsense method:\r\n```\r\n(gdb) p response\r\n$2 = {\r\n  status = 404, \r\n  error = -1, \r\n  body = \"{\\\"result\\\":null,\\\"error\\\":{\\\"code\\\":-32601,\\\"message\\\":\\\"Method not found\\\"},\\\"id\\\":1}\\n\"\r\n}\r\n```\r\nAs part of this PR, I could also systematically search for and fix any other places where `body` is returned as plain string (not JSON); so far I see only one:\r\n```\r\nreq->WriteReply(HTTP_BAD_METHOD, \"JSONRPC server handles only POST requests\")\r\n```",
      "commit_id" : "4ee473857c58422e5bd525982ddb9ff700eceb74",
      "created_at" : "2020-03-12T21:59:00Z",
      "diff_hunk" : "@@ -404,7 +404,7 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n     // Parse reply\n     UniValue valReply(UniValue::VSTR);\n     if (!valReply.read(response.body))\n-        throw std::runtime_error(\"couldn't parse reply from server\");\n+        throw std::runtime_error(strprintf(\"server response: %s\", response.body));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18335#discussion_r391928978",
      "id" : 391928978,
      "in_reply_to_id" : 391823420,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkyODk3OA==",
      "original_commit_id" : "86af4967412ca79fc22d0fa0868069bb438463ed",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 373930335,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18335",
      "updated_at" : "2020-03-12T22:52:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391928978",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The second commit undoes the first, and fixes the problem in the server by having it return JSON in the body of the response:\r\n```\r\nerror code: -32603\r\nerror message:\r\nWork queue depth exceeded\r\n```\r\n([Here's](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/protocol.h#L35) where that error code, `RPC_INTERNAL_ERROR` is defined.) It makes sense that this is similar to:\r\n```\r\n$ src/bitcoin-cli not-a-valid-rpc\r\nerror code: -32601\r\nerror message:\r\nMethod not found\r\n$ \r\n```",
      "created_at" : "2020-03-12T22:59:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-598468960",
      "id" : 598468960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18335",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5ODQ2ODk2MA==",
      "updated_at" : "2020-03-12T22:59:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/598468960",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, looks like his is actually non-trivial.\r\n\r\n> HTTP_INTERNAL_SERVER_ERROR\r\n\r\n```\r\n$2 = {\r\n  status = 500, \r\n  error = -1, \r\n  body = \"Work queue depth exceeded\"\r\n}\r\n```\r\n\r\nSo in this case, possibly you could detect this error code in bitcoin-cli, and print an error message instead of trying to parse as JSON. Or are there cases in which it returns 500 but the response needs to be parsed as JSON?\r\n\r\nI must admit we're sometimes inconsistent about whether to report errors at the HTTP layer or the JSON-RPC, so it's very possible that your solution of changing the server to return a JSON error is the most consistent one!\r\n\r\n(I'm not personally very worried about clients depending on a specific exact error message text, though we might want to mention it briefly in the release notes)",
      "created_at" : "2020-03-17T21:11:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-600303495",
      "id" : 600303495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18335",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMDMwMzQ5NQ==",
      "updated_at" : "2020-03-17T21:11:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600303495",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I must admit we're sometimes inconsistent about whether to report errors at the HTTP layer or the JSON-RPC\r\n\r\nI checked this and yes, we do return JSON errors with `HTTP_INTERNAL_SERVER_ERROR`:\r\n```c++\r\nstatic void JSONErrorReply(HTTPRequest* req, const UniValue& objError, const UniValue& id)\r\n{\r\n    // Send error reply from json-rpc error object\r\n    int nStatus = HTTP_INTERNAL_SERVER_ERROR;\r\n    int code = find_value(objError, \"code\").get_int();\r\n\r\n    if (code == RPC_INVALID_REQUEST)\r\n        nStatus = HTTP_BAD_REQUEST;\r\n    else if (code == RPC_METHOD_NOT_FOUND)\r\n        nStatus = HTTP_NOT_FOUND;\r\n\r\n    std::string strReply = JSONRPCReply(NullUniValue, objError, id);\r\n\r\n    req->WriteHeader(\"Content-Type\", \"application/json\");\r\n    req->WriteReply(nStatus, strReply);\r\n}\r\n```\r\n\r\nSo we have no way to distinguish \"parse this as JSON?\" based on just the status code.\r\n\r\nI think the current change of changing the server to always return JSON errors is OK. I think it's slightly more elegant than doing \"try to parse as JSON and print the raw text otherwise\" in the client. But I don't have a strong opinion.\r\n",
      "created_at" : "2020-03-27T14:10:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-605021293",
      "id" : 605021293,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18335",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTAyMTI5Mw==",
      "updated_at" : "2020-03-27T14:10:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605021293",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@LarryRuane \r\nJust was noted about this PR by GH :)\r\n\r\nIf you find [this](https://github.com/bitcoin/bitcoin/pull/18523) approach simpler you may grab it :)",
      "created_at" : "2020-04-04T19:39:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-609079188",
      "id" : 609079188,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18335",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwOTA3OTE4OA==",
      "updated_at" : "2020-04-04T19:39:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609079188",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18523 (util: Handle HTTP_SERVICE_UNAVAILABLE in bitcoin-cli by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-04-04T20:02:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-609081878",
      "id" : 609081878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18335",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwOTA4MTg3OA==",
      "updated_at" : "2020-04-04T20:02:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609081878",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@hebasto \r\n> If you find [this](https://github.com/bitcoin/bitcoin/pull/18523) approach simpler you may grab it :)\r\n\r\nYes, your solution is much better, thank you! I tested your fix, and cherry-picked your commit to this PR (and force-push-removed my 3 commits).\r\n",
      "created_at" : "2020-04-04T20:04:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-609082190",
      "id" : 609082190,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18335",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwOTA4MjE5MA==",
      "updated_at" : "2020-04-04T20:04:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609082190",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   }
]
