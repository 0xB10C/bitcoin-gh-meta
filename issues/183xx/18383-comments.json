[
   {
      "author_association" : "MEMBER",
      "body" : "What is the concrete effect of this? Does this affect validation?\r\n\r\nCan you please add a test that fails without this change?",
      "created_at" : "2020-03-19T14:08:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601199068",
      "id" : 601199068,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTE5OTA2OA==",
      "updated_at" : "2020-03-19T14:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601199068",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> What is the concrete effect of this? Does this affect validation?\r\n\r\nGood question. technically this code is part of validation, it's called from `tx_verify.cpp`\r\nI do not know if validation can ever execute this with an overflowing value, if so it's a real problem which is why I assume it probably can't. (i'll try writing a test now)\r\nso if it can't happen and assuming this change is correct then this shouldn't affect validation itself\r\n\r\nEDIT: Ok, testing it is a bit more complex, because this is only called on ConnectBlock or in mempool, so might take me some time, no rush.",
      "created_at" : "2020-03-19T14:12:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601201327",
      "id" : 601201327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTIwMTMyNw==",
      "updated_at" : "2020-03-19T14:37:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601201327",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is not possible to trigger from a network node or RPC, because `CheckTransaction` is called before `CheckInputs` is called. (This call order is also a requirement for other reasons)",
      "created_at" : "2020-03-19T14:38:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601215527",
      "id" : 601215527,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTIxNTUyNw==",
      "updated_at" : "2020-03-19T14:38:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601215527",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This was fixed in `CVE-2010-5139`",
      "created_at" : "2020-03-19T14:38:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601216050",
      "id" : 601216050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTIxNjA1MA==",
      "updated_at" : "2020-03-19T14:38:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601216050",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I am pretty sure the compiler will optimize out the unused result anyway (and thus the overflow), but if you strongly feel like this needs to be fixed, then you could reorder the code, so that the overflow in the unused result never happens:\r\n* First check the output value with MoneyRange\r\n* Calculate the result\r\n* Check the result with MoneyRange",
      "created_at" : "2020-03-19T14:41:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601217595",
      "id" : 601217595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTIxNzU5NQ==",
      "updated_at" : "2020-03-19T14:41:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601217595",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "How could it overflow, given that `CAmount` is `int64_t`. Expressed in satoshi - about 4000 times more than the total supply of bitcoin?",
      "created_at" : "2020-03-19T14:44:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601219117",
      "id" : 601219117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTIxOTExNw==",
      "updated_at" : "2020-03-19T14:44:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601219117",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild  `CAmount` can be `std::numeric_limits<CAmount>::max()` or any other value in range for a serialized transaction. The deserialization code does not check for consensus rules.",
      "created_at" : "2020-03-19T14:49:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601221905",
      "id" : 601221905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTIyMTkwNQ==",
      "updated_at" : "2020-03-19T14:49:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601221905",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: `CTransaction::GetValueOut()` should handle crazy amounts by throwing the expected exception. I think that was the intention behind the current code, so this is simply a bug AFAICT. (Luckily only reachable by the fuzzers at the moment (AFAICT).)\r\n\r\nHowever, I think your fix can be simplified :)\r\n\r\nNote that `a + b` cannot overflow if `MoneyRange(a) == true` and `MoneyRange(b) == true`. Where `a` and `b` are of type `CAmount`.\r\n\r\nIn other words, simply do `if (!MoneyRange(a) || !MoneyRange(b)) { throw std::runtime_error(â¦); }` and you should be safe to proceed with `a += b`? :)\r\n\r\nNote that the `MoneyRange(a + b)` must obviously be checked too to make sure it is within the money bounds :)\r\n\r\nPerhaps something along the lines of:\r\n\r\n```\r\n    if (!MoneyRange(a) || !MoneyRange(b) || !MoneyRange(a + b)) {\r\n        throw std::runtime_error(â¦);\r\n    }\r\n    a += b;\r\n```",
      "created_at" : "2020-03-19T15:46:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601253642",
      "id" : 601253642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTI1MzY0Mg==",
      "updated_at" : "2020-03-19T15:53:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601253642",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@elichai \r\n\r\nThis is the fix I've used in my local fuzzing tree to avoid hitting this signed integer overflow over and over :)\r\n\r\n```patch\r\ndiff --git a/src/primitives/transaction.cpp b/src/primitives/transaction.cpp\r\nindex 28c145f71..a1567e805 100644\r\n--- a/src/primitives/transaction.cpp\r\n+++ b/src/primitives/transaction.cpp\r\n@@ -84,9 +84,10 @@ CAmount CTransaction::GetValueOut() const\r\n {\r\n     CAmount nValueOut = 0;\r\n     for (const auto& tx_out : vout) {\r\n-        nValueOut += tx_out.nValue;\r\n-        if (!MoneyRange(tx_out.nValue) || !MoneyRange(nValueOut))\r\n+        if (!MoneyRange(nValueOut) || !MoneyRange(tx_out.nValue) || !MoneyRange(nValueOut + tx_out.nValue)) {\r\n             throw std::runtime_error(std::string(__func__) + \": value out of range\");\r\n+        }\r\n+        nValueOut += tx_out.nValue;\r\n     }\r\n     return nValueOut;\r\n }\r\n```\r\n\r\nWould love to see it upstreamed -- that would simplify my fuzzing setup :)\r\n\r\nI agree with @laanwj that a test case which fails under UBSan prior to this PR should be included :)",
      "created_at" : "2020-03-19T16:05:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601265341",
      "id" : 601265341,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTI2NTM0MQ==",
      "updated_at" : "2020-03-19T16:18:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601265341",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n\r\n> I am pretty sure the compiler will optimize out the unused result anyway (and thus the overflow)\r\n\r\nWhat unused result are you referring to? :)",
      "created_at" : "2020-03-19T16:20:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601273661",
      "id" : 601273661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTI3MzY2MQ==",
      "updated_at" : "2020-03-19T16:20:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601273661",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift nValueOut is computed but never inspected in case tx_out.nValue is out of range.",
      "created_at" : "2020-03-19T16:25:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601276141",
      "id" : 601276141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTI3NjE0MQ==",
      "updated_at" : "2020-03-19T16:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601276141",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa \r\n\r\nAh, in @elichai's suggested fix. I thought @MarcoFalke  meant in current `master` :)\r\n\r\nThe patch I'm suggesting in the comment above looks robust and correct?",
      "created_at" : "2020-03-19T16:43:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601285912",
      "id" : 601285912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTI4NTkxMg==",
      "updated_at" : "2020-03-19T16:43:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601285912",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The patch I'm suggesting in the comment above looks robust and correct?\r\n\r\nYes, and also more readable than the one in this PR (c5dd8eb625).",
      "created_at" : "2020-03-20T14:05:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601718245",
      "id" : 601718245,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTcxODI0NQ==",
      "updated_at" : "2020-03-20T14:05:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601718245",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I thought @MarcoFalke meant in current master :)\r\n\r\nI do mean current master :)\r\n\r\nas pointed out by pieter: \"nValueOut is computed but never inspected in case tx_out.nValue is out of range.\" So I think the compiler will likely never compute nValueOut in the first place, or even if it did, it wouldn't matter because it is never read.",
      "created_at" : "2020-03-20T14:11:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601720857",
      "id" : 601720857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTcyMDg1Nw==",
      "updated_at" : "2020-03-20T14:11:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601720857",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "An even simpler patch which also tests the post-condition:\r\n\r\n```diff\r\ndiff --git a/src/primitives/transaction.cpp b/src/primitives/transaction.cpp\r\nindex 28c145f71..76acb08b0 100644\r\n--- a/src/primitives/transaction.cpp\r\n+++ b/src/primitives/transaction.cpp\r\n@@ -9,6 +9,8 @@\r\n #include <tinyformat.h>\r\n #include <util/strencodings.h>\r\n\r\n+#include <cassert>\r\n+\r\n std::string COutPoint::ToString() const\r\n {\r\n     return strprintf(\"COutPoint(%s, %u)\", hash.ToString().substr(0,10), n);\r\n@@ -84,10 +86,11 @@ CAmount CTransaction::GetValueOut() const\r\n {\r\n     CAmount nValueOut = 0;\r\n     for (const auto& tx_out : vout) {\r\n-        nValueOut += tx_out.nValue;\r\n-        if (!MoneyRange(tx_out.nValue) || !MoneyRange(nValueOut))\r\n+        if (!MoneyRange(tx_out.nValue) || !MoneyRange(nValueOut + tx_out.nValue))\r\n             throw std::runtime_error(std::string(__func__) + \": value out of range\");\r\n+        nValueOut += tx_out.nValue;\r\n     }\r\n+    assert(MoneyRange(nValueOut));\r\n     return nValueOut;\r\n }\r\n```\r\n",
      "created_at" : "2020-03-20T15:25:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18383#issuecomment-601757891",
      "id" : 601757891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18383",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTc1Nzg5MQ==",
      "updated_at" : "2020-03-20T15:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601757891",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
