[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Configure and run as:\r\n`./configure --with-sanitizers=thread`\r\n`./src/test/test_bitcoin --run_test=\"txvalidationcache_tests/checkinputs_test\"`\r\n\r\nI confirm the following:\r\n* Latest master @ ce87d5613 shows the [use-after-free](https://travis-ci.org/github/bitcoin/bitcoin/jobs/663676100#L4588) bug\r\n* This PR fixes the bug\r\n* Reverting fadafb83c on top of the latest master `git show fadafb83c |git apply -R -3` (+ trivial conflict resolution) fixes the bug\r\n* The failure seems to be deterministic\r\n\r\nSo, this was introduced in https://github.com/bitcoin/bitcoin/pull/18289. I have no clue why travis [was green](https://travis-ci.org/github/bitcoin/bitcoin/builds/660635839?utm_source=github_status&utm_medium=notification) for it.\r\n\r\n```diff\r\n-    scheduler.scheduleEvery(std::bind(&PeerLogicValidation::CheckForStaleTipAndEvictPeers, this, consensusParams), EXTRA_PEER_CHECK_INTERVAL * 1000);\r\n+    scheduler.scheduleEvery([&] { this->CheckForStaleTipAndEvictPeers(consensusParams); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\r\n```\r\n\r\nIndeed `std::bind()` copies the arguments whereas the introduced lambda function passes them by reference and will brick if the argument is destroyed before the function is called.",
      "created_at" : "2020-03-18T12:58:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18376#issuecomment-600607726",
      "id" : 600607726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18376",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMDYwNzcyNg==",
      "updated_at" : "2020-03-18T12:58:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600607726",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18376#discussion_r394349862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18376"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394349862"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this can  be made `=` to just mirror what `std::bind` did. (`this` is a pointer, so it shouldn't matter whether it is copied or referenced, and for consensusParams we want it to be copied).\r\n\r\n```suggestion\r\n    scheduler.scheduleEvery([=] { this->CheckForStaleTipAndEvictPeers(consensusParams); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\r\n```",
      "commit_id" : "7d8e1dec3b26074df1533f715871f79c956cc224",
      "created_at" : "2020-03-18T13:35:57Z",
      "diff_hunk" : "@@ -1127,7 +1127,7 @@ PeerLogicValidation::PeerLogicValidation(CConnman* connmanIn, BanMan* banman, CS\n     // combine them in one function and schedule at the quicker (peer-eviction)\n     // timer.\n     static_assert(EXTRA_PEER_CHECK_INTERVAL < STALE_CHECK_INTERVAL, \"peer eviction timer should be less than stale tip check timer\");\n-    scheduler.scheduleEvery([&] { this->CheckForStaleTipAndEvictPeers(consensusParams); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\n+    scheduler.scheduleEvery([this, consensusParams] { this->CheckForStaleTipAndEvictPeers(consensusParams); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18376#discussion_r394349862",
      "id" : 394349862,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0OTg2Mg==",
      "original_commit_id" : "7d8e1dec3b26074df1533f715871f79c956cc224",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 376867594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18376",
      "updated_at" : "2020-03-18T13:36:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394349862",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18376#discussion_r394360305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18376"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394360305"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The `=` is also what is recommended in the \"Tutorial\" (written by me, so count that against me):\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/3a8d25064e700ff2e69600cc1ede597751283a85/src/scheduler.h#L28",
      "commit_id" : "7d8e1dec3b26074df1533f715871f79c956cc224",
      "created_at" : "2020-03-18T13:51:09Z",
      "diff_hunk" : "@@ -1127,7 +1127,7 @@ PeerLogicValidation::PeerLogicValidation(CConnman* connmanIn, BanMan* banman, CS\n     // combine them in one function and schedule at the quicker (peer-eviction)\n     // timer.\n     static_assert(EXTRA_PEER_CHECK_INTERVAL < STALE_CHECK_INTERVAL, \"peer eviction timer should be less than stale tip check timer\");\n-    scheduler.scheduleEvery([&] { this->CheckForStaleTipAndEvictPeers(consensusParams); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\n+    scheduler.scheduleEvery([this, consensusParams] { this->CheckForStaleTipAndEvictPeers(consensusParams); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18376#discussion_r394360305",
      "id" : 394360305,
      "in_reply_to_id" : 394349862,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM2MDMwNQ==",
      "original_commit_id" : "7d8e1dec3b26074df1533f715871f79c956cc224",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 376881055,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18376",
      "updated_at" : "2020-03-18T13:51:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394360305",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18376#discussion_r394425068"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18376"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394425068"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Doh! I was about to apply this suggestion, but then realized that [The implicit capture of *this when the capture default is = is deprecated. (since C++20)](https://en.cppreference.com/w/cpp/language/lambda#Lambda_capture) :-/ Indeed:\r\n\r\n```cpp\r\n        auto m() {\r\n            return [=](){\r\n                std::cout << \"lambda: this=\" << this << std::endl;\r\n            };\r\n        }\r\n```\r\n\r\nProduces:\r\n```\r\nclang++10 -std=c++20 -Wdeprecated t.cc -o t\r\nt.cc:96:49: warning: implicit capture of 'this' with a capture default of '=' is deprecated\r\n      [-Wdeprecated-this-capture]\r\n                std::cout << \"lambda: this=\" << this << std::endl;\r\n                                                ^\r\nt.cc:95:21: note: add an explicit capture of 'this' to capture '*this' by reference\r\n            return [=](){\r\n                    ^\r\n                     , this\r\n```\r\n\r\nBetter not add code that would have to be fixed later, so I would rather keep it as is.\r\n\r\nWhat do you think?\r\n\r\nPS `this` is always captured by reference and I think all of the following do the same wrt `this`: `[=]`, `[this]`, `[&]`, `std::bind`",
      "commit_id" : "7d8e1dec3b26074df1533f715871f79c956cc224",
      "created_at" : "2020-03-18T15:16:19Z",
      "diff_hunk" : "@@ -1127,7 +1127,7 @@ PeerLogicValidation::PeerLogicValidation(CConnman* connmanIn, BanMan* banman, CS\n     // combine them in one function and schedule at the quicker (peer-eviction)\n     // timer.\n     static_assert(EXTRA_PEER_CHECK_INTERVAL < STALE_CHECK_INTERVAL, \"peer eviction timer should be less than stale tip check timer\");\n-    scheduler.scheduleEvery([&] { this->CheckForStaleTipAndEvictPeers(consensusParams); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\n+    scheduler.scheduleEvery([this, consensusParams] { this->CheckForStaleTipAndEvictPeers(consensusParams); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18376#discussion_r394425068",
      "id" : 394425068,
      "in_reply_to_id" : 394349862,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQyNTA2OA==",
      "original_commit_id" : "7d8e1dec3b26074df1533f715871f79c956cc224",
      "original_position" : 5,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 376964779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18376",
      "updated_at" : "2020-03-18T15:16:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394425068",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
