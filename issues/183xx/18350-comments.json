[
   {
      "author_association" : "MEMBER",
      "body" : "If this was ever the cause of a test failure, it probably means our assumption about hash functions is broken.\r\n\r\nStill, ACK. I don't mind fixing it.",
      "created_at" : "2020-03-14T16:40:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18350#issuecomment-599094331",
      "id" : 599094331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18350",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5OTA5NDMzMQ==",
      "updated_at" : "2020-03-14T16:40:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599094331",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK fixing issue 1. Like @MarcoFalke says, the probability of this ever causing a failure is negligible, but it's better that the test's assumptions are accurate.\r\n\r\nFor issue 2 (`next_block` not recalculating the digest if `solve` is `False`), I think we can just remove the `solve` parameter from that function and always solve the block. The function is only called with `solve=False` in two places, and in both cases the nonce is recalculated (to be invalid for block 47, and resolved for block 48).",
      "created_at" : "2020-03-14T16:46:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18350#issuecomment-599095725",
      "id" : 599095725,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18350",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5OTA5NTcyNQ==",
      "updated_at" : "2020-03-14T16:46:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599095725",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> If this was ever the cause of a test failure, it probably means our assumption about hash functions is broken.\r\n\r\nActually you're right about the first fix, but the second one has a much higher likelihood to happen. I was able to simulate it by putting it on the tip of the block 1 and it happened always within a loop of 1000 tests that repeat b47's test case.",
      "created_at" : "2020-03-14T16:46:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18350#issuecomment-599095733",
      "id" : 599095733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18350",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5OTA5NTczMw==",
      "updated_at" : "2020-03-14T16:47:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599095733",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8694366?v=4",
         "events_url" : "https://api.github.com/users/TheQuantumPhysicist/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheQuantumPhysicist/followers",
         "following_url" : "https://api.github.com/users/TheQuantumPhysicist/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheQuantumPhysicist/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheQuantumPhysicist",
         "id" : 8694366,
         "login" : "TheQuantumPhysicist",
         "node_id" : "MDQ6VXNlcjg2OTQzNjY=",
         "organizations_url" : "https://api.github.com/users/TheQuantumPhysicist/orgs",
         "received_events_url" : "https://api.github.com/users/TheQuantumPhysicist/received_events",
         "repos_url" : "https://api.github.com/users/TheQuantumPhysicist/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheQuantumPhysicist/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheQuantumPhysicist"
      }
   }
]
