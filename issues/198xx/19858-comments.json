[
   {
      "author_association" : "MEMBER",
      "body" : "This implements something similar to what is discussed in #16859.\r\n\r\nMarking this as draft for now, as it builds on top of #19724.",
      "created_at" : "2020-09-01T21:10:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685134274",
      "id" : 685134274,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTEzNDI3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T21:10:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685134274",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19869 (Better intervals between feelers by naumenkogs)\n* #19791 ([net processing] Move Misbehaving() to PeerManager by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-09-01T23:51:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685192705",
      "id" : 685192705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTE5MjcwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-04T12:24:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685192705",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481853670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481853670"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps it's a good opportunity to refactor this function:\r\n- rename `GetExtraOutboundCount` -> `GetExtraFullOutboundCount`\r\n- rename `int nOutbound` -> `uint32_t full_outbound_peers`",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-02T07:55:25Z",
      "diff_hunk" : "@@ -1760,12 +1760,12 @@ int CConnman::GetExtraOutboundCount()\n     {\n         LOCK(cs_vNodes);\n         for (const CNode* pnode : vNodes) {\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsOutboundOrBlockRelayConn()) {\n+            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsFullOutboundConn()) {\n                 ++nOutbound;\n             }\n         }\n     }\n-    return std::max(nOutbound - m_max_outbound_full_relay - m_max_outbound_block_relay, 0);\n+    return std::max(nOutbound - m_max_outbound_full_relay, 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481853670",
      "id" : 481853670,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg1MzY3MA==",
      "original_commit_id" : "720f1125992022ae71dbfd3cf47f4d8761aab99c",
      "original_line" : 1768,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 480571773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481853670",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481864952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481864952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be along the following \"ignore non-outbound-full-relay peers\"?\r\nOr probably even better: \"Consider only outbound full-relay peers not already marked for disconnection\"?",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-02T08:08:21Z",
      "diff_hunk" : "@@ -3961,13 +3961,11 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             AssertLockHeld(cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481864952",
      "id" : 481864952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg2NDk1Mg==",
      "original_commit_id" : "d3612a1fd0e61ee131feab9585bc199440547680",
      "original_line" : 4049,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 480581377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481864952",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-09-02T08:09:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685431218",
      "id" : 685431218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTQzMTIxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T08:09:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685431218",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481871155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481871155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`nBlockRelay` doesn't seem to follow the code conventions we have for vars",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-02T08:15:20Z",
      "diff_hunk" : "@@ -1768,6 +1768,20 @@ int CConnman::GetExtraOutboundCount()\n     return std::max(nOutbound - m_max_outbound_full_relay, 0);\n }\n \n+int CConnman::GetExtraBlockRelayCount()\n+{\n+    int nBlockRelay = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481871155",
      "id" : 481871155,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg3MTE1NQ==",
      "original_commit_id" : "f0975e75646e5b28699694ccf89d081d687ad090",
      "original_line" : 1773,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 480586630,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481871155",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nThe most interesting question seems to be the eviction criteria after this new block-relay peer gave us a new block, and we want to evict someone.\r\n\r\nI think the \"evict the youngest\" approach is reasonable: it would be very hard for an attacker to control our block-relay-only connections by just serving blocks faster when we connect to them periodically. They'd have to also maintain very long-lived connections to evict honest peers rather than their own Sybils.\r\n\r\n--------\r\n\r\nWe still have a couple places with `m_tx_relay == nullptr`, and in some of them we mention `block-relay-only` in a related comment. Should we converge at least those to `IsBlockOnlyConn()` check?\r\n\r\n",
      "created_at" : "2020-09-02T08:25:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685440307",
      "id" : 685440307,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTQ0MDMwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T08:25:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685440307",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483034922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483034922"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-03T14:45:23Z",
      "diff_hunk" : "@@ -1760,12 +1760,12 @@ int CConnman::GetExtraOutboundCount()\n     {\n         LOCK(cs_vNodes);\n         for (const CNode* pnode : vNodes) {\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsOutboundOrBlockRelayConn()) {\n+            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsFullOutboundConn()) {\n                 ++nOutbound;\n             }\n         }\n     }\n-    return std::max(nOutbound - m_max_outbound_full_relay - m_max_outbound_block_relay, 0);\n+    return std::max(nOutbound - m_max_outbound_full_relay, 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483034922",
      "id" : 483034922,
      "in_reply_to_id" : 481853670,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNDkyMg==",
      "original_commit_id" : "720f1125992022ae71dbfd3cf47f4d8761aab99c",
      "original_line" : 1768,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 481914330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483034922",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035233"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035233"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-03T14:45:48Z",
      "diff_hunk" : "@@ -3961,13 +3961,11 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             AssertLockHeld(cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035233",
      "id" : 483035233,
      "in_reply_to_id" : 481864952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNTIzMw==",
      "original_commit_id" : "d3612a1fd0e61ee131feab9585bc199440547680",
      "original_line" : 4049,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 481914748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035233",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035358"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035358"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-03T14:45:58Z",
      "diff_hunk" : "@@ -1768,6 +1768,20 @@ int CConnman::GetExtraOutboundCount()\n     return std::max(nOutbound - m_max_outbound_full_relay, 0);\n }\n \n+int CConnman::GetExtraBlockRelayCount()\n+{\n+    int nBlockRelay = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035358",
      "id" : 483035358,
      "in_reply_to_id" : 481871155,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNTM1OA==",
      "original_commit_id" : "f0975e75646e5b28699694ccf89d081d687ad090",
      "original_line" : 1773,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 481914913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035358",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Now that #19724 has been merged, this is ready for review.",
      "created_at" : "2020-09-03T14:46:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-686542959",
      "id" : 686542959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjU0Mjk1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T14:46:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686542959",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> We still have a couple places with m_tx_relay == nullptr, and in some of them we mention block-relay-only in a related comment. Should we converge at least those to IsBlockOnlyConn() check?\r\n\r\nI actually didn't mean to necessarily include that `m_tx_relay == nullptr` in the `LogPrintf()` that I did; the clarification of changing to using the `IsBlockOnlyConn()` check was leftover from a previous version of this work where I was going to introduce a new connection type altogether, and the `m_tx_relay == nullptr` check would have been incorrect for identifying the peer type.\r\n\r\nIn this PR that change is unnecessary (though an improvement), but I guess I don't want to do a wholesale review of all the `m_tx_relay==nullptr` checks still in the code -- many of them are places where we check for `nullptr` before dereferencing, which I think would make sense to leave as-is.  Places in the code where we use that check to determine how to do something logical with that peer are different, and should be switched at some point.  If there are places like that which make this new code harder to understand, please flag and I can include fixes here, but I think since I'm not adding new peer-types I hope that wouldn't be necessary.",
      "created_at" : "2020-09-03T15:06:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-686556494",
      "id" : 686556494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjU1NjQ5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T15:06:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686556494",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483328318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483328318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it would be better to converge naming for BLOCK_RELAY and thus ease reviewing. They're commented as either block-relay or block-relay-only peers through the codebase but actually designate the same type. I'm even on which one we pick as long as we're consistent.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T00:56:58Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483328318",
      "id" : 483328318,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMyODMxOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1885,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483328318",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483329786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483329786"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is making an assumption on `GetNewNodeId()` being a monotonic counter function of connections order. It may silently break id we modify ids selection to something else (like random nonces). Can we use `nTimeConnected` instead ?",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T01:02:41Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483329786",
      "id" : 483329786,
      "line" : 4007,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMyOTc4Ng==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4007,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 31,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483329786",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483332808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483332808"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I would be more conservative in allegation of this new eclipse counter-measure effectiveness.\r\n\r\nI believe we should have a hierarchy of eclipse attacks classified with regards to resources they require from the attacker to successfully perform them. And thus serves as a ground to evaluate a counter-measure with regards to a scenario. The fact that a stronger attack A can easily bypass counter-measure for attack B doesn't invalidate worthiness of counter-measure B.\r\n\r\nFor this new periodic-chain-sync counter-measure, I do agree it improves against eviction logic takeover or partial addrman poisoning. However I guess it doesn't score well against total addrman poisoning or infrastructure-based eclipse.\r\n\r\nAs a suggestion, maybe we can add a prefix to any mention of eclipse attacks hinting scenario considered like `addrman-poisoning` or `eviction-gaming` ?",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T01:15:17Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483332808",
      "id" : 483332808,
      "line" : 1901,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzMjgwOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1901,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 69,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483332808",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483334138"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483334138"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I suppose this doesn't protect against initial-network-connection eclipse attack like DNS cache poisoning. Maybe after some timer based on an optimistic headers-chain sync delay and observing that our tip isn't near to local clock trigger this logic anyway ?\r\n\r\nThat said, if you're effectively eclipsed since the beginning and don't have any good peers available in your addrman I don't think it would change anything.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T01:20:40Z",
      "diff_hunk" : "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483334138",
      "id" : 483334138,
      "line" : 4116,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzNDEzOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4116,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 97,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483334138",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483336732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483336732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a bit of a name collusion, maybe `second_youngest_peer` -> `next_youngest_peer`",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T01:31:11Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483336732",
      "id" : 483336732,
      "line" : 4010,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzNjczMg==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4010,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 34,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483336732",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483340353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483340353"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is pproper even if it's biasing a bit towards attackers. I assume they run modified clients and thus always win new block announcement races and have public sybils well-spread through /16s.\r\n\r\nWe start with Alice, Malicia as 2 block-relay connections:\r\n* Alice connection gets dropped due an external event from our node viewpoint (like network issue or Alice inbound eviction logic)\r\n* Malicia becomes the oldest connection\r\n* We open a new block-relay connection to Bob\r\n* We open a new chain-sync connection to Malicia_2\r\n* Malicia_2 announce a new best block updating her `nLastBlockTime`\r\n* We drop Bob\r\n* We have Malicia and Malicia_2 as stable block-only peers\r\n\r\nNow to conserve its advantage an attacker must ensure to update our chain tip faster than learning any headers through the new spawn chain-sync peer otherwise Malicia_2 would be evicted by Caroll, first such peer sending a better block. An attacker has to perfom useful work to keep its bias and that way breaking attack purpose ?",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T01:46:05Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay peer, if we",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483340353",
      "id" : 483340353,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MDM1Mw==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1909,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483340353",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483441294"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483441294"
         }
      },
      "author_association" : "MEMBER",
      "body" : "can we make this mockable from the beginning? (std::chrono)",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T07:34:30Z",
      "diff_hunk" : "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483441294",
      "id" : 483441294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0MTI5NA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 482425041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483441294",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483443580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483443580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd also prefer to not having this assumption, and it seems to be easy to avoid.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T07:39:25Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483443580",
      "id" : 483443580,
      "in_reply_to_id" : 483329786,
      "line" : 4007,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0MzU4MA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4007,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 31,
      "pull_request_review_id" : 482428021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483443580",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483444542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483444542"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should this ever be set back to false? For example, if we were offline for a week and we know we're catching up.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T07:41:32Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483444542",
      "id" : 483444542,
      "line" : 99,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0NDU0Mg==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 99,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 6,
      "pull_request_review_id" : 482429291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483444542",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483487568"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483487568"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If `m_connman.ForEachNode` is not ordered, this algorithm may mistakenly select `second_youngest`.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T09:01:48Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483487568",
      "id" : 483487568,
      "in_reply_to_id" : 483329786,
      "line" : 4007,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4NzU2OA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4007,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 31,
      "pull_request_review_id" : 482484588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483487568",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483490780"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483490780"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: it's a little less clear that the youngest peer is the _temporary_ connection created just couple minutes ago, would be cool to explain it more explicitly.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T09:07:59Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483490780",
      "id" : 483490780,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5MDc4MA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3991,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 482488691,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483490780",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483496118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483496118"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I had to double-check that `nBlocksInFlight` can't be tricked with fake blocks. If you gonna update it, maybe just say \"block with a valid header\"?",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T09:17:26Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483496118",
      "id" : 483496118,
      "line" : 4021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5NjExOA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 4021,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 45,
      "pull_request_review_id" : 482495238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483496118",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I'm leaning towards Concept ACK but have you considered impact with #17428 ? I fear it may reduce its usefulness.\r\n\r\nI don't think #17428 has any meaningful interaction with this.  These connections are short-lived, and generally speaking under normal circumstances rotation doesn't actually occur, because we're unlikely to get a new block from one of these connections rather than from one of our high-bandwidth compact block peers.  Even if rotation were to occur, I don't think #17428 has any meaningful negative consequences here -- keeping track of helpful block-relay peers seems an independently good idea.",
      "created_at" : "2020-09-04T15:28:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-687220322",
      "id" : 687220322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzIyMDMyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-04T15:28:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687220322",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483691169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483691169"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure I can change this, but keep in mind this logic is used a little further down already, in the existing outbound full-relay peer eviction algorithm.\r\n\r\nEDIT: Actually, I think while this has some logical appeal it makes the code read strictly worse -- CNode::nTimeConnected is tracked in seconds, so it's perfectly plausible that you might have two nodes that tie, and you'd presumably break the tie using nodeid anyway!  I'm just going to add a comment that we're using nodeid to make the determination of which peer is younger (ie higher NodeId).",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T15:29:37Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483691169",
      "id" : 483691169,
      "in_reply_to_id" : 483329786,
      "line" : 4007,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MTE2OQ==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4007,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 31,
      "pull_request_review_id" : 482753530,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:17:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483691169",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483692149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483692149"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure I can add a hint -- I thought it was well-understood that we only request blocks that are on a (valid) headers chain resulting in a tip that has >= work as our tip, as we use that fact in multiple places in `net_processing`, I think.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T15:30:41Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483692149",
      "id" : 483692149,
      "in_reply_to_id" : 483496118,
      "line" : 4021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MjE0OQ==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 4021,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 45,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483692149",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483696666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483696666"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wouldn't the existing stale-tip check let us get new outbound peers in the case that our tip isn't updating at all? ",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T15:35:43Z",
      "diff_hunk" : "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483696666",
      "id" : 483696666,
      "in_reply_to_id" : 483334138,
      "line" : 4116,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5NjY2Ng==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4116,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 97,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483696666",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483699833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483699833"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you go offline for a week by shutting down bitcoind there is no issue; if you close your laptop or disconnect from the network though then yes you're right that we'll use these occasional peers to help us catch up, which is not the intent.  However, we don't have a good way to distinguish that situation in our code right now...  Arguably stale-tip checking shouldn't fire either in those circumstances but we don't try to do anything to limit that?\r\n\r\nI'm inclined to leave this, and if we somehow improve our software to detect circumstances like that, then we can update this logic accordingly.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T15:39:05Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483699833",
      "id" : 483699833,
      "in_reply_to_id" : 483444542,
      "line" : 99,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5OTgzMw==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 99,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 6,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483699833",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483704479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483704479"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep.  Most importantly, because we're always trying a new peer and exchanging best tip information, this should create a very high cost to an attacker to actually split the network for a meaningful amount of time (even if they've taking all our initial peer slots).",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T15:44:20Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay peer, if we",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483704479",
      "id" : 483704479,
      "in_reply_to_id" : 483340353,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcwNDQ3OQ==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1909,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483704479",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483713328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483713328"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I re-read my comment, and I think it's pretty accurate.  If other reviewers think that the language here is somehow too strong and implies this logic is doing something it isn't, I'll reconsider.\r\n\r\nNote, by the way, that the behavior introduced here is beneficial to not just the node doing it, but to the whole network, as a node already connected to the honest network that is periodically connecting to new peers to sync tips with others is helping bridge the entire network.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T16:00:07Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483713328",
      "id" : 483713328,
      "in_reply_to_id" : 483332808,
      "line" : 1901,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMzMyOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1901,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 69,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483713328",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483726992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483726992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed in latest version.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T16:25:50Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483726992",
      "id" : 483726992,
      "in_reply_to_id" : 483328318,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyNjk5Mg==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1885,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483726992",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483728160"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483728160"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can we punt until someone also changes the feeler logic to be the same?  Right now the logic for both is very similar, which I think helps readability.  (Also, I find `std::chrono` to be harder to work with than the tools I know, so I'm afraid I'll introduce an error if I try to make the change myself.)",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T16:26:51Z",
      "diff_hunk" : "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483728160",
      "id" : 483728160,
      "in_reply_to_id" : 483441294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyODE2MA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483728160",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750720"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed in latest version.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T17:05:55Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750720",
      "id" : 483750720,
      "in_reply_to_id" : 483490780,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MDcyMA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3991,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750720",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750782"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-04T17:06:04Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750782",
      "id" : 483750782,
      "in_reply_to_id" : 483336732,
      "line" : 4010,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MDc4Mg==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4010,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 34,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T17:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750782",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484274913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484274913"
         }
      },
      "author_association" : "MEMBER",
      "body" : "My worry was that `nBlocksInFlight` might contain just a hash for an announced block (pre-compact blocks) which we have no idea about. Then announcing any random hash would trick us.\r\n\r\nYour current comment is sufficient to clarify that this is not possible.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-07T08:30:02Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484274913",
      "id" : 484274913,
      "in_reply_to_id" : 483496118,
      "line" : 4021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3NDkxMw==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 4021,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 45,
      "pull_request_review_id" : 483356892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-07T08:30:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484274913",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484285863"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484285863"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure what you mean by \"feeler logic to be the same\", but I'm making feeler timings mockable as part of #19869, you're very welcome to review :)\r\n\r\nMy opinion is not very strong here, we can update it later, I just thought it's a good opportunity.",
      "commit_id" : "02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7",
      "created_at" : "2020-09-07T08:48:37Z",
      "diff_hunk" : "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484285863",
      "id" : 484285863,
      "in_reply_to_id" : 483441294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NTg2Mw==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 483371971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-07T08:48:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484285863",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7\r\n\r\n----------\r\n\r\nIf we want to make a strong statement that this is *by all means* an improvement over the existing approach, we might want to increase block-relay-only conns limit (`m_max_outbound_block_relay`) by 1. Otherwise, an attacker may make (currently) 1 out of 2 our block-relay-only conns more vulnerable for eviction by feeding us blocks faster.\r\n\r\nOf course, to be a successful eclipse attack, they would have to do much more...",
      "created_at" : "2020-09-07T09:06:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688183643",
      "id" : 688183643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODE4MzY0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-07T09:06:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688183643",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   }
]
