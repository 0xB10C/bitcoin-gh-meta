[
   {
      "author_association" : "MEMBER",
      "body" : "This implements something similar to what is discussed in #16859.\r\n\r\nMarking this as draft for now, as it builds on top of #19724.",
      "created_at" : "2020-09-01T21:10:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685134274",
      "id" : 685134274,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTEzNDI3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T21:10:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685134274",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20044 (Make all of net_processing (and some of net) use std::chrono types by sipa)\n* #19910 (net processing: Move peer_map to PeerManager by jnewbery)\n* #19884 (p2p: No delay in adding fixed seeds if -dnsseed=0 and peers.dat is empty by dhruv)\n* #19869 (Better intervals between feelers by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-09-01T23:51:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685192705",
      "id" : 685192705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTE5MjcwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-05T10:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685192705",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481853670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481853670"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps it's a good opportunity to refactor this function:\r\n- rename `GetExtraOutboundCount` -> `GetExtraFullOutboundCount`\r\n- rename `int nOutbound` -> `uint32_t full_outbound_peers`",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-02T07:55:25Z",
      "diff_hunk" : "@@ -1760,12 +1760,12 @@ int CConnman::GetExtraOutboundCount()\n     {\n         LOCK(cs_vNodes);\n         for (const CNode* pnode : vNodes) {\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsOutboundOrBlockRelayConn()) {\n+            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsFullOutboundConn()) {\n                 ++nOutbound;\n             }\n         }\n     }\n-    return std::max(nOutbound - m_max_outbound_full_relay - m_max_outbound_block_relay, 0);\n+    return std::max(nOutbound - m_max_outbound_full_relay, 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481853670",
      "id" : 481853670,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg1MzY3MA==",
      "original_commit_id" : "720f1125992022ae71dbfd3cf47f4d8761aab99c",
      "original_line" : 1768,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 480571773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481853670",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481864952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481864952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be along the following \"ignore non-outbound-full-relay peers\"?\r\nOr probably even better: \"Consider only outbound full-relay peers not already marked for disconnection\"?",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-02T08:08:21Z",
      "diff_hunk" : "@@ -3961,13 +3961,11 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             AssertLockHeld(cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481864952",
      "id" : 481864952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg2NDk1Mg==",
      "original_commit_id" : "d3612a1fd0e61ee131feab9585bc199440547680",
      "original_line" : 4049,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 480581377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481864952",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-09-02T08:09:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685431218",
      "id" : 685431218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTQzMTIxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T08:09:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685431218",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481871155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481871155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`nBlockRelay` doesn't seem to follow the code conventions we have for vars",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-02T08:15:20Z",
      "diff_hunk" : "@@ -1768,6 +1768,20 @@ int CConnman::GetExtraOutboundCount()\n     return std::max(nOutbound - m_max_outbound_full_relay, 0);\n }\n \n+int CConnman::GetExtraBlockRelayCount()\n+{\n+    int nBlockRelay = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481871155",
      "id" : 481871155,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg3MTE1NQ==",
      "original_commit_id" : "f0975e75646e5b28699694ccf89d081d687ad090",
      "original_line" : 1773,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 480586630,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481871155",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nThe most interesting question seems to be the eviction criteria after this new block-relay peer gave us a new block, and we want to evict someone.\r\n\r\nI think the \"evict the youngest\" approach is reasonable: it would be very hard for an attacker to control our block-relay-only connections by just serving blocks faster when we connect to them periodically. They'd have to also maintain very long-lived connections to evict honest peers rather than their own Sybils.\r\n\r\n--------\r\n\r\nWe still have a couple places with `m_tx_relay == nullptr`, and in some of them we mention `block-relay-only` in a related comment. Should we converge at least those to `IsBlockOnlyConn()` check?\r\n\r\n",
      "created_at" : "2020-09-02T08:25:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685440307",
      "id" : 685440307,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTQ0MDMwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T08:25:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685440307",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483034922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483034922"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-03T14:45:23Z",
      "diff_hunk" : "@@ -1760,12 +1760,12 @@ int CConnman::GetExtraOutboundCount()\n     {\n         LOCK(cs_vNodes);\n         for (const CNode* pnode : vNodes) {\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsOutboundOrBlockRelayConn()) {\n+            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsFullOutboundConn()) {\n                 ++nOutbound;\n             }\n         }\n     }\n-    return std::max(nOutbound - m_max_outbound_full_relay - m_max_outbound_block_relay, 0);\n+    return std::max(nOutbound - m_max_outbound_full_relay, 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483034922",
      "id" : 483034922,
      "in_reply_to_id" : 481853670,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNDkyMg==",
      "original_commit_id" : "720f1125992022ae71dbfd3cf47f4d8761aab99c",
      "original_line" : 1768,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 481914330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483034922",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035233"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035233"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-03T14:45:48Z",
      "diff_hunk" : "@@ -3961,13 +3961,11 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             AssertLockHeld(cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035233",
      "id" : 483035233,
      "in_reply_to_id" : 481864952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNTIzMw==",
      "original_commit_id" : "d3612a1fd0e61ee131feab9585bc199440547680",
      "original_line" : 4049,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 481914748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035233",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035358"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035358"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-03T14:45:58Z",
      "diff_hunk" : "@@ -1768,6 +1768,20 @@ int CConnman::GetExtraOutboundCount()\n     return std::max(nOutbound - m_max_outbound_full_relay, 0);\n }\n \n+int CConnman::GetExtraBlockRelayCount()\n+{\n+    int nBlockRelay = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035358",
      "id" : 483035358,
      "in_reply_to_id" : 481871155,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNTM1OA==",
      "original_commit_id" : "f0975e75646e5b28699694ccf89d081d687ad090",
      "original_line" : 1773,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 481914913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035358",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Now that #19724 has been merged, this is ready for review.",
      "created_at" : "2020-09-03T14:46:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-686542959",
      "id" : 686542959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjU0Mjk1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T14:46:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686542959",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> We still have a couple places with m_tx_relay == nullptr, and in some of them we mention block-relay-only in a related comment. Should we converge at least those to IsBlockOnlyConn() check?\r\n\r\nI actually didn't mean to necessarily include that `m_tx_relay == nullptr` in the `LogPrintf()` that I did; the clarification of changing to using the `IsBlockOnlyConn()` check was leftover from a previous version of this work where I was going to introduce a new connection type altogether, and the `m_tx_relay == nullptr` check would have been incorrect for identifying the peer type.\r\n\r\nIn this PR that change is unnecessary (though an improvement), but I guess I don't want to do a wholesale review of all the `m_tx_relay==nullptr` checks still in the code -- many of them are places where we check for `nullptr` before dereferencing, which I think would make sense to leave as-is.  Places in the code where we use that check to determine how to do something logical with that peer are different, and should be switched at some point.  If there are places like that which make this new code harder to understand, please flag and I can include fixes here, but I think since I'm not adding new peer-types I hope that wouldn't be necessary.",
      "created_at" : "2020-09-03T15:06:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-686556494",
      "id" : 686556494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjU1NjQ5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T15:06:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686556494",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483328318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483328318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it would be better to converge naming for BLOCK_RELAY and thus ease reviewing. They're commented as either block-relay or block-relay-only peers through the codebase but actually designate the same type. I'm even on which one we pick as long as we're consistent.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T00:56:58Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483328318",
      "id" : 483328318,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMyODMxOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1885,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483328318",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483329786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483329786"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is making an assumption on `GetNewNodeId()` being a monotonic counter function of connections order. It may silently break id we modify ids selection to something else (like random nonces). Can we use `nTimeConnected` instead ?",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T01:02:41Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483329786",
      "id" : 483329786,
      "line" : 3968,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMyOTc4Ng==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3968,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 30,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483329786",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483332808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483332808"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I would be more conservative in allegation of this new eclipse counter-measure effectiveness.\r\n\r\nI believe we should have a hierarchy of eclipse attacks classified with regards to resources they require from the attacker to successfully perform them. And thus serves as a ground to evaluate a counter-measure with regards to a scenario. The fact that a stronger attack A can easily bypass counter-measure for attack B doesn't invalidate worthiness of counter-measure B.\r\n\r\nFor this new periodic-chain-sync counter-measure, I do agree it improves against eviction logic takeover or partial addrman poisoning. However I guess it doesn't score well against total addrman poisoning or infrastructure-based eclipse.\r\n\r\nAs a suggestion, maybe we can add a prefix to any mention of eclipse attacks hinting scenario considered like `addrman-poisoning` or `eviction-gaming` ?",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T01:15:17Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483332808",
      "id" : 483332808,
      "line" : 1967,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzMjgwOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1967,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 69,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483332808",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483334138"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483334138"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I suppose this doesn't protect against initial-network-connection eclipse attack like DNS cache poisoning. Maybe after some timer based on an optimistic headers-chain sync delay and observing that our tip isn't near to local clock trigger this logic anyway ?\r\n\r\nThat said, if you're effectively eclipsed since the beginning and don't have any good peers available in your addrman I don't think it would change anything.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T01:20:40Z",
      "diff_hunk" : "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483334138",
      "id" : 483334138,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzNDEzOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4116,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483334138",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483336732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483336732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a bit of a name collusion, maybe `second_youngest_peer` -> `next_youngest_peer`",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T01:31:11Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483336732",
      "id" : 483336732,
      "line" : 3971,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzNjczMg==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3971,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 33,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483336732",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483340353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483340353"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is pproper even if it's biasing a bit towards attackers. I assume they run modified clients and thus always win new block announcement races and have public sybils well-spread through /16s.\r\n\r\nWe start with Alice, Malicia as 2 block-relay connections:\r\n* Alice connection gets dropped due an external event from our node viewpoint (like network issue or Alice inbound eviction logic)\r\n* Malicia becomes the oldest connection\r\n* We open a new block-relay connection to Bob\r\n* We open a new chain-sync connection to Malicia_2\r\n* Malicia_2 announce a new best block updating her `nLastBlockTime`\r\n* We drop Bob\r\n* We have Malicia and Malicia_2 as stable block-only peers\r\n\r\nNow to conserve its advantage an attacker must ensure to update our chain tip faster than learning any headers through the new spawn chain-sync peer otherwise Malicia_2 would be evicted by Caroll, first such peer sending a better block. An attacker has to perfom useful work to keep its bias and that way breaking attack purpose ?",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T01:46:05Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay peer, if we",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483340353",
      "id" : 483340353,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MDM1Mw==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1909,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483340353",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483441294"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483441294"
         }
      },
      "author_association" : "MEMBER",
      "body" : "can we make this mockable from the beginning? (std::chrono)",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T07:34:30Z",
      "diff_hunk" : "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483441294",
      "id" : 483441294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0MTI5NA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 482425041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483441294",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483443580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483443580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd also prefer to not having this assumption, and it seems to be easy to avoid.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T07:39:25Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483443580",
      "id" : 483443580,
      "in_reply_to_id" : 483329786,
      "line" : 3968,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0MzU4MA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3968,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 30,
      "pull_request_review_id" : 482428021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483443580",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483444542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483444542"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should this ever be set back to false? For example, if we were offline for a week and we know we're catching up.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T07:41:32Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483444542",
      "id" : 483444542,
      "line" : 141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0NDU0Mg==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 141,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 7,
      "pull_request_review_id" : 482429291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483444542",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483487568"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483487568"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If `m_connman.ForEachNode` is not ordered, this algorithm may mistakenly select `second_youngest`.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T09:01:48Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483487568",
      "id" : 483487568,
      "in_reply_to_id" : 483329786,
      "line" : 3968,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4NzU2OA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3968,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 30,
      "pull_request_review_id" : 482484588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483487568",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483490780"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483490780"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: it's a little less clear that the youngest peer is the _temporary_ connection created just couple minutes ago, would be cool to explain it more explicitly.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T09:07:59Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483490780",
      "id" : 483490780,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5MDc4MA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3991,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 482488691,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483490780",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483496118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483496118"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I had to double-check that `nBlocksInFlight` can't be tricked with fake blocks. If you gonna update it, maybe just say \"block with a valid header\"?",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T09:17:26Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483496118",
      "id" : 483496118,
      "line" : 3982,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5NjExOA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3982,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 44,
      "pull_request_review_id" : 482495238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483496118",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I'm leaning towards Concept ACK but have you considered impact with #17428 ? I fear it may reduce its usefulness.\r\n\r\nI don't think #17428 has any meaningful interaction with this.  These connections are short-lived, and generally speaking under normal circumstances rotation doesn't actually occur, because we're unlikely to get a new block from one of these connections rather than from one of our high-bandwidth compact block peers.  Even if rotation were to occur, I don't think #17428 has any meaningful negative consequences here -- keeping track of helpful block-relay peers seems an independently good idea.",
      "created_at" : "2020-09-04T15:28:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-687220322",
      "id" : 687220322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzIyMDMyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-04T15:28:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687220322",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483691169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483691169"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure I can change this, but keep in mind this logic is used a little further down already, in the existing outbound full-relay peer eviction algorithm.\r\n\r\nEDIT: Actually, I think while this has some logical appeal it makes the code read strictly worse -- CNode::nTimeConnected is tracked in seconds, so it's perfectly plausible that you might have two nodes that tie, and you'd presumably break the tie using nodeid anyway!  I'm just going to add a comment that we're using nodeid to make the determination of which peer is younger (ie higher NodeId).",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T15:29:37Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483691169",
      "id" : 483691169,
      "in_reply_to_id" : 483329786,
      "line" : 3968,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MTE2OQ==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3968,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 30,
      "pull_request_review_id" : 482753530,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483691169",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483692149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483692149"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure I can add a hint -- I thought it was well-understood that we only request blocks that are on a (valid) headers chain resulting in a tip that has >= work as our tip, as we use that fact in multiple places in `net_processing`, I think.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T15:30:41Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483692149",
      "id" : 483692149,
      "in_reply_to_id" : 483496118,
      "line" : 3982,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MjE0OQ==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3982,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 44,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483692149",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483696666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483696666"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wouldn't the existing stale-tip check let us get new outbound peers in the case that our tip isn't updating at all? ",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T15:35:43Z",
      "diff_hunk" : "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483696666",
      "id" : 483696666,
      "in_reply_to_id" : 483334138,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5NjY2Ng==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4116,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483696666",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483699833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483699833"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you go offline for a week by shutting down bitcoind there is no issue; if you close your laptop or disconnect from the network though then yes you're right that we'll use these occasional peers to help us catch up, which is not the intent.  However, we don't have a good way to distinguish that situation in our code right now...  Arguably stale-tip checking shouldn't fire either in those circumstances but we don't try to do anything to limit that?\r\n\r\nI'm inclined to leave this, and if we somehow improve our software to detect circumstances like that, then we can update this logic accordingly.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T15:39:05Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483699833",
      "id" : 483699833,
      "in_reply_to_id" : 483444542,
      "line" : 141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5OTgzMw==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 141,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 7,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483699833",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483704479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483704479"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep.  Most importantly, because we're always trying a new peer and exchanging best tip information, this should create a very high cost to an attacker to actually split the network for a meaningful amount of time (even if they've taking all our initial peer slots).",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T15:44:20Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay peer, if we",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483704479",
      "id" : 483704479,
      "in_reply_to_id" : 483340353,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcwNDQ3OQ==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1909,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483704479",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483713328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483713328"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I re-read my comment, and I think it's pretty accurate.  If other reviewers think that the language here is somehow too strong and implies this logic is doing something it isn't, I'll reconsider.\r\n\r\nNote, by the way, that the behavior introduced here is beneficial to not just the node doing it, but to the whole network, as a node already connected to the honest network that is periodically connecting to new peers to sync tips with others is helping bridge the entire network.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T16:00:07Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483713328",
      "id" : 483713328,
      "in_reply_to_id" : 483332808,
      "line" : 1967,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMzMyOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1967,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 69,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483713328",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483726992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483726992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed in latest version.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T16:25:50Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483726992",
      "id" : 483726992,
      "in_reply_to_id" : 483328318,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyNjk5Mg==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1885,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483726992",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483728160"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483728160"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can we punt until someone also changes the feeler logic to be the same?  Right now the logic for both is very similar, which I think helps readability.  (Also, I find `std::chrono` to be harder to work with than the tools I know, so I'm afraid I'll introduce an error if I try to make the change myself.)",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T16:26:51Z",
      "diff_hunk" : "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483728160",
      "id" : 483728160,
      "in_reply_to_id" : 483441294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyODE2MA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483728160",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750720"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed in latest version.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T17:05:55Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750720",
      "id" : 483750720,
      "in_reply_to_id" : 483490780,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MDcyMA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3991,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750720",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750782"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-04T17:06:04Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750782",
      "id" : 483750782,
      "in_reply_to_id" : 483336732,
      "line" : 3971,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MDc4Mg==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3971,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 33,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750782",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484274913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484274913"
         }
      },
      "author_association" : "MEMBER",
      "body" : "My worry was that `nBlocksInFlight` might contain just a hash for an announced block (pre-compact blocks) which we have no idea about. Then announcing any random hash would trick us.\r\n\r\nYour current comment is sufficient to clarify that this is not possible.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-07T08:30:02Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484274913",
      "id" : 484274913,
      "in_reply_to_id" : 483496118,
      "line" : 3982,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3NDkxMw==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3982,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 44,
      "pull_request_review_id" : 483356892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484274913",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484285863"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484285863"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure what you mean by \"feeler logic to be the same\", but I'm making feeler timings mockable as part of #19869, you're very welcome to review :)\r\n\r\nMy opinion is not very strong here, we can update it later, I just thought it's a good opportunity.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-07T08:48:37Z",
      "diff_hunk" : "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484285863",
      "id" : 484285863,
      "in_reply_to_id" : 483441294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NTg2Mw==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 483371971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484285863",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7\r\n\r\n----------\r\n\r\nIf we want to make a strong statement that this is *by all means* an improvement over the existing approach, we might want to increase block-relay-only conns limit (`m_max_outbound_block_relay`) by 1. Otherwise, an attacker may make (currently) 1 out of 2 our block-relay-only conns more vulnerable for eviction by feeding us blocks faster.\r\n\r\nOf course, to be a successful eclipse attack, they would have to do much more...",
      "created_at" : "2020-09-07T09:06:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688183643",
      "id" : 688183643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODE4MzY0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-07T09:06:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688183643",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-09-07T17:39:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688451728",
      "id" : 688451728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODQ1MTcyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-07T17:39:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688451728",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484923353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484923353"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was assuming someone feeding you _slowly_ the most-PoW valid chain thus never triggering the stale-tip check ? I think a broader definition of eclipse attack should include slow chain feeding as it's open the door for offchain exploitation.\r\n\r\nThat said, I think eclipse attacks during the bootstrap view of your network view are a special-case and we can address them latter with smarter heuristics based on this work.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-08T13:32:38Z",
      "diff_hunk" : "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484923353",
      "id" : 484923353,
      "in_reply_to_id" : 483334138,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkyMzM1Mw==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4116,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 484143325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484923353",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484942044"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484942044"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Update comment to reflect latest changes  (411056e) on keeping the most recent block announcement?",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-08T13:58:09Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay-only peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay-only peer, if we\n+            //   download a new block from this new block-relay-only peer.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484942044",
      "id" : 484942044,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0MjA0NA==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 1944,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484942044",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484943585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484943585"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Have you considered a `MarkExtraBlockRelayPeers` function which a) set `m_start_extra_block_relay_peers` to true if isn't and b) return the state of `m_start_extra_block_relay_peers` ? That way you can drop new `m_initial_sync_finished` I think",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-08T14:00:05Z",
      "diff_hunk" : "@@ -318,13 +320,20 @@ class CConnman\n     void SetTryNewOutboundPeer(bool flag);\n     bool GetTryNewOutboundPeer();\n \n+    void StartExtraBlockRelayPeers() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484943585",
      "id" : 484943585,
      "line" : 342,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0MzU4NQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 342,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 13,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484943585",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484945485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484945485"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same, reflect changes, \"a more recent block than one provided by next-youngest\"?",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-08T14:02:47Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484945485",
      "id" : 484945485,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0NTQ4NQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3973,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484945485",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484949893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484949893"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As alternative have you considered caching them ? We know both when we open such connections and when we drop them. It would avoid the risk of logic bug and iterating every other connections types not concerned by such eviction.\r\n\r\nI think it's more a future work direction.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-08T14:08:45Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484949893",
      "id" : 484949893,
      "in_reply_to_id" : 483329786,
      "line" : 3968,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0OTg5Mw==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3968,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 30,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484949893",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484951554"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484951554"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"so any in-flight block is a good hint that such peer will soon provide us with useful work\"",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-08T14:11:03Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay-only peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay-only\n+        // peer. We use higher nodeid as a measure for more recent connection.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484951554",
      "id" : 484951554,
      "line" : 3986,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk1MTU1NA==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3986,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 48,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484951554",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484952119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952119"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can mention `CanDirectFetch` as the completed-initial-sync-yet condition.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-08T14:11:51Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484952119",
      "id" : 484952119,
      "line" : 139,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk1MjExOQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 139,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 5,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952119",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs \r\n\r\n> If we want to make a strong statement that this is _by all means_ an improvement over the existing approach, we might want to increase block-relay-only conns limit (`m_max_outbound_block_relay`) by 1. Otherwise, an attacker may make (currently) 1 out of 2 our block-relay-only conns more vulnerable for eviction by feeding us blocks faster.\r\n\r\nWhat would be the best arguments _against_ bumping `m_max_outbound_block_relay` by 1?\r\n\r\n(Personally I think (tentatively) that increasing `m_max_outbound_block_relay` is a good idea, but it would be nice to have the best arguments against too :))",
      "created_at" : "2020-09-08T14:12:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688903823",
      "id" : 688903823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODkwMzgyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-08T14:14:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688903823",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484952915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952915"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"See ThreadOpenConnections\"",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-08T14:12:53Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484952915",
      "id" : 484952915,
      "line" : 3960,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk1MjkxNQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3960,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952915",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> What would be the best arguments against bumping m_max_outbound_block_relay by 1?\r\n\r\nThe best argument I'm aware of: we use up more connection slots on listening nodes, which is a limited resource.  So if we start increasing the number of outbound connections we make, we should think hard about also increasing the default number of connections we expect a listening node to be able to handle.\r\n\r\nI think that these connections should be lightweight enough that we ought to be able to allocate more inbound connection slots to low-resource peers like these; however that is not easy for us to do until we have a way to communicate to our outbound peer when we connect that we're a block-relay-only peer and not planning to re-enable transaction relay later on in the connection's lifetime.\r\n\r\nMy plan to increase this number is to: (1) first propose a p2p protocol upgrade that would inform our peer that we're block-relay only, then (2) add support for reducing resources that we allocate to such inbound peers, and then (3) propose that we increase the number of inbound connections by accounting for block-relay inbounds differently from the rest, and finally (4) then increase the default number of outbound block-relay-only peers.\r\n\r\nBut if there are other concerns about increasing this number, I'd like to hear them!  I'm currently working on steps 1 and 2 in the above.\r\n\r\nAt any rate, I'm not inclined to propose increasing the number of connections in this PR, because I didn't want to use further permanent block-relay-only connections until we made more progress reducing the resource impact.",
      "created_at" : "2020-09-08T14:33:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688918364",
      "id" : 688918364,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODkxODM2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-08T14:33:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688918364",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485676851"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485676851"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We do require that our initial headers-sync peer provide us with a headers chain that looks reasonable within a bounded amount of time (on the order of 20 minutes if I remember correctly -- the time scales with the expected honest chain length and very conservative notions of how long it takes to download headers).  However if we're connecting blocks slowly, we can't distinguish between our own node being too slow to validate the entire blockchain (say due to local computing/memory/disk/network resources) or our peers colluding to collectively slow us down.\r\n\r\nThis seems like something that needs human intervention to determine that initial sync is in fact going too slowly.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-09T14:53:46Z",
      "diff_hunk" : "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485676851",
      "id" : 485676851,
      "in_reply_to_id" : 483334138,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3Njg1MQ==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4116,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 485095570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485676851",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485677705"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485677705"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If #19869 is merged first, then I'll update the code here as well when I rebase.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-09T14:54:47Z",
      "diff_hunk" : "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485677705",
      "id" : 485677705,
      "in_reply_to_id" : 483441294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3NzcwNQ==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 485096650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485677705",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485685042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485685042"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I assume you mean caching at the time we open the connection?  I think that is problematic, because in order to keep that extra state up to date in the event that peers get disconnected and we make new connections after that, you have to a lot of additional error checking and introduced added complexity.  Doing all the checks in one place, at the point in time that we care about getting to a new/correct state when we're over our maximum, seems simpler to me to reason about.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-09T15:04:09Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485685042",
      "id" : 485685042,
      "in_reply_to_id" : 483329786,
      "line" : 3968,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4NTA0Mg==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3968,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 30,
      "pull_request_review_id" : 485106530,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485685042",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720385"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! Fixed.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-09T15:52:49Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay-only peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay-only peer, if we\n+            //   download a new block from this new block-relay-only peer.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720385",
      "id" : 485720385,
      "in_reply_to_id" : 484942044,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMDM4NQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 1944,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 485152718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720385",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720468"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I had a slight preference for not frequently looking at an atomic; `m_initial_sync_finished` is only used in one thread and therefore doesn't need locks.  This issue seems minor either way, so planning to leave it as-is.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-09T15:52:57Z",
      "diff_hunk" : "@@ -318,13 +320,20 @@ class CConnman\n     void SetTryNewOutboundPeer(bool flag);\n     bool GetTryNewOutboundPeer();\n \n+    void StartExtraBlockRelayPeers() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720468",
      "id" : 485720468,
      "in_reply_to_id" : 484943585,
      "line" : 342,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMDQ2OA==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 342,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 13,
      "pull_request_review_id" : 485152841,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720468",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720501"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! Fixed.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-09T15:53:01Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720501",
      "id" : 485720501,
      "in_reply_to_id" : 484945485,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMDUwMQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3973,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 485152894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720501",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721066"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems self-evident!  Leaving as-is.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-09T15:53:51Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay-only peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay-only\n+        // peer. We use higher nodeid as a measure for more recent connection.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721066",
      "id" : 485721066,
      "in_reply_to_id" : 484951554,
      "line" : 3986,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTA2Ng==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3986,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 48,
      "pull_request_review_id" : 485153614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721066",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721653"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think that's necessary here.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-09T15:54:39Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721653",
      "id" : 485721653,
      "in_reply_to_id" : 484952119,
      "line" : 139,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTY1Mw==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 139,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 5,
      "pull_request_review_id" : 485154610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721653",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721742"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721742"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is fine as-is.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-09-09T15:54:48Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721742",
      "id" : 485721742,
      "in_reply_to_id" : 484952915,
      "line" : 3960,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTc0Mg==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3960,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 485155007,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721742",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and updated to fix some documentation issues pointed out by @ariard.\r\n\r\n> I was thinking the reverse ! More #19858 having negative consequences on #17428. An attacker's sybil if selected as extra-block-relay might be able to outrun a high-bandwidth compact blocks peers such that evicting this peer from its anchor slot.\r\n\r\nI don't think that is a big concern -- by construction, only 1 out of our current 2 block-relay-only peers will be able to be rotated this way, and to maintain this attack an adversary has to continually give us the best block faster than anyone else, which makes them not much of an attacker until they stop.  And once they stop, this logic continues to protect us because it's always connecting to new peers to sync tips.\r\n\r\n> With regards to functional test coverage we are limited by #19315 and mocking addresses of P2P connections I guess ?\r\n\r\nYeah, I'm not aware of any way to test this code in our current testing framework.  I believe that even after #19315, we still will not have a way to exercise the logic in `ThreadOpenConnections`, so I think manual testing is best for this PR.",
      "created_at" : "2020-09-09T15:59:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-689657614",
      "id" : 689657614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4OTY1NzYxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-09T15:59:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/689657614",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 8ea760b10221eb01b057363693ab74cdc810fd4a",
      "created_at" : "2020-09-10T06:39:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-690023179",
      "id" : 690023179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MDAyMzE3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-10T06:39:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690023179",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If anyone is curious, I tried to exercise the eviction logic a bit with this patch added on top of this PR:\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex c7b64f9d505..5a47d9d8c8d 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -2863,6 +2863,11 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\r\n \r\n     m_deserializer = MakeUnique<V1TransportDeserializer>(V1TransportDeserializer(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\r\n     m_serializer = MakeUnique<V1TransportSerializer>(V1TransportSerializer());\r\n+\r\n+    // 10% chance of initializing nLastBlockTime to current time\r\n+    if (GetRandInt(100) <= 10) {\r\n+        nLastBlockTime = GetTime();\r\n+    }\r\n }\r\n \r\n CNode::~CNode()\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 2f98663e7cf..05dd1f38a6c 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -4006,6 +4006,9 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n             if (node_state == nullptr ||\r\n                 (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\r\n                 pnode->fDisconnect = true;\r\n+                if (to_disconnect != youngest_peer.first) {\r\n+                    LogPrint(BCLog::NET, \"Block-relay peer rotation: keeping new peer=%d, disconnecting old peer=%d\\n\", youngest_peer.first, to_disconnect);\r\n+                }\r\n                 LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\r\n                 return true;\r\n             } else {\r\n```\r\n\r\nPerhaps other reviewers will find additional ways to fully exercise this code.",
      "created_at" : "2020-09-10T13:25:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-690286990",
      "id" : 690286990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MDI4Njk5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-10T13:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690286990",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested/Code Review ACK 8ea760b under following caveats.\r\n\r\nI observed that the new eviction logic is working as expected and extra block-relay-only peers are rotated based on their last block received time.\r\n\r\nNote for the other reviewers, I took the proposed patch with further modifications:\r\n* scale down EXTRA_PEER_CHECK_INTERVAL/EXTRA_BLOCK_RELAY_ONLY_PEER_INTERVAL to 5s and 15s\r\n* activate extra block relay peers opening independently of IBD\r\n* disable block-sync\r\n* 50% chance to initialize nLastBlockTime to current time\r\n\r\nThis interferes with protecting peers for in-flight blocks but at least underscores well the working opening and rotation.",
      "created_at" : "2020-09-15T16:24:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-692826368",
      "id" : 692826368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MjgyNjM2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-15T16:24:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/692826368",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499257992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499257992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The two lock assertions added in this function need to be updated to build on current master:\r\n```diff\r\n@@ -3964,8 +3964,8 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n         std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\r\n         std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\r\n \r\n-        m_connman.ForEachNode([&](CNode* pnode) {\r\n-            LockAssertion lock(::cs_main);\r\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n+            AssertLockHeld(::cs_main);\r\n             if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\r\n@@ -3979,8 +3979,8 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n             // disconnect our second youngest.\r\n             to_disconnect = next_youngest_peer.first;\r\n         }\r\n-        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\r\n-            LockAssertion lock(::cs_main);\r\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n+            AssertLockHeld(::cs_main);\r\n             // Make sure we're not getting a ```",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-10-04T15:23:25Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499257992",
      "id" : 499257992,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1Nzk5Mg==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3984,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 501633440,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499257992",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499258411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499258411"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(see #19979)",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-10-04T15:27:33Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499258411",
      "id" : 499258411,
      "in_reply_to_id" : 499257992,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1ODQxMQ==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3984,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 501633780,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499258411",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499441781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499441781"
         }
      },
      "author_association" : "MEMBER",
      "body" : "perhaps\r\n```diff\r\n     // Note that we use higher nodeid as a measure for most recent connection.\r\n-    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\r\n-    if (extra_block_relay_peers > 0) {\r\n-        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\r\n-        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\r\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\r\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\r\n```\r\n",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-10-05T08:54:49Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499441781",
      "id" : 499441781,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ0MTc4MQ==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3964,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 501847787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499441781",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499443704"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499443704"
         }
      },
      "author_association" : "MEMBER",
      "body" : "perhaps, as `extra_peers` isn't reused\r\n```diff\r\n-    int extra_peers = m_connman.GetExtraFullOutboundCount();\r\n-    if (extra_peers > 0) {\r\n+    if (m_connman.GetExtraFullOutboundCount() > 0) {\r\n```\r\n",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-10-05T08:57:46Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;\n+            } else {\n+                LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\n+                    pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\n+            }\n+            return false;\n+        });\n+    }\n+\n+    // Check whether we have too many OUTBOUND_FULL_RELAY peers\n+    int extra_peers = m_connman.GetExtraFullOutboundCount();\n     if (extra_peers > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499443704",
      "id" : 499443704,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ0MzcwNA==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 4021,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 501847787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499443704",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499445435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499445435"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`EvictExtraOutboundPeers()` seems like a natural candidate to be separated into two functions,`EvictExtraOutboundBlockRelayPeers()` and `EvictExtraOutboundFullRelayPeers()`. This might enable better unit testing of the logic. If you agree, it may be easier to do this now than later.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-10-05T09:00:41Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499445435",
      "id" : 499445435,
      "line" : 3954,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ0NTQzNQ==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3954,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 11,
      "pull_request_review_id" : 501847787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499445435",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499769823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499769823"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, updated.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-10-05T17:49:27Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499769823",
      "id" : 499769823,
      "in_reply_to_id" : 499257992,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2OTgyMw==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3984,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 502285383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499769823",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499785328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785328"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-10-05T18:18:14Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499785328",
      "id" : 499785328,
      "in_reply_to_id" : 499441781,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4NTMyOA==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3964,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 502306322,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:18:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785328",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499785441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785441"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-10-05T18:18:27Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;\n+            } else {\n+                LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\n+                    pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\n+            }\n+            return false;\n+        });\n+    }\n+\n+    // Check whether we have too many OUTBOUND_FULL_RELAY peers\n+    int extra_peers = m_connman.GetExtraFullOutboundCount();\n     if (extra_peers > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499785441",
      "id" : 499785441,
      "in_reply_to_id" : 499443704,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4NTQ0MQ==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 4021,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 502306462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:18:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785441",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499788853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499788853"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well, there's also an argument to be made that it's simpler to have all of the outbound peer eviction logic in one place/one callback.\r\n\r\nIf there is a reason (like testing) to do so, I think splitting this up in the future could make sense, but for now I'd like to keep the changes here to be more straightforward.  So assuming this implementation is correct I'd prefer to leave it as-is.",
      "commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-10-05T18:24:54Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499788853",
      "id" : 499788853,
      "in_reply_to_id" : 499445435,
      "line" : 3954,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4ODg1Mw==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3954,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 11,
      "pull_request_review_id" : 502310951,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-05T18:24:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499788853",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack Thanks for the review and testing; I've rebased to fix the silent merge conflict with the `LockAssertion` stuff and addressed your comments.",
      "created_at" : "2020-10-05T18:28:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-703809158",
      "id" : 703809158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMzgwOTE1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-05T18:28:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703809158",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
