[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19145 (Add hash_type MUHASH for gettxoutsetinfo by fjahr)\n* #19055 (Add MuHash3072 implementation by fjahr)\n* #18014 (lib: Optimizing siphash implementation by elichai)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-08-31T14:47:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-683826463",
      "id" : 683826463,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzgyNjQ2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T17:38:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683826463",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If https://github.com/bitcoin/bitcoin/pull/19503 gets merged then it could be used to configure the stream to (un)ser in V2 format instead of the currently used `ADDRV2_FORMAT` flag that is ORed into the stream version.",
      "created_at" : "2020-09-01T10:25:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-684742011",
      "id" : 684742011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDc0MjAxMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T10:25:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684742011",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. First read-through looks promising and happy to see the additional unit test coverage. \r\n\r\nEdit: noting here for myself that local debug build is clean and unit tests are green.",
      "created_at" : "2020-09-01T13:46:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-684865867",
      "id" : 684865867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDg2NTg2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T14:43:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684865867",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This PR now contains #19841, needed for the `SHA3_256` implementation.",
      "created_at" : "2020-09-02T08:03:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-685427804",
      "id" : 685427804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTQyNzgwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T08:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685427804",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would it make sense to benchmark how fast addr2 messages are deserialized? Maybe we should even benchmark every message type?",
      "created_at" : "2020-09-05T13:03:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-687608367",
      "id" : 687608367,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzYwODM2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-05T13:03:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687608367",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Would it make sense to benchmark how fast addr2 messages are deserialized? Maybe we should even benchmark every message type?\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```diff\r\ndiff --git i/src/bench/addrman.cpp w/src/bench/addrman.cpp\r\nindex ebdad5a4b..db6b1c9fa 100644\r\n--- i/src/bench/addrman.cpp\r\n+++ w/src/bench/addrman.cpp\r\n@@ -1,20 +1,24 @@\r\n // Copyright (c) 2020-2020 The Bitcoin Core developers\r\n // Distributed under the MIT software license, see the accompanying\r\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \r\n #include <addrman.h>\r\n #include <bench/bench.h>\r\n+#include <netaddress.h>\r\n #include <random.h>\r\n+#include <serialize.h>\r\n+#include <streams.h>\r\n #include <util/time.h>\r\n+#include <version.h>\r\n \r\n #include <vector>\r\n \r\n /* A \"source\" is a source address from which we have received a bunch of other addresses. */\r\n \r\n-static constexpr size_t NUM_SOURCES = 64;\r\n+static constexpr size_t NUM_SOURCES = 1000;\r\n static constexpr size_t NUM_ADDRESSES_PER_SOURCE = 256;\r\n \r\n static std::vector<CAddress> g_sources;\r\n static std::vector<std::vector<CAddress>> g_addresses;\r\n \r\n static void CreateAddresses()\r\n@@ -135,6 +139,36 @@ static void AddrManGood(benchmark::Bench& bench)\r\n }\r\n \r\n BENCHMARK(AddrManAdd);\r\n BENCHMARK(AddrManSelect);\r\n BENCHMARK(AddrManGetAddr);\r\n BENCHMARK(AddrManGood);\r\n+\r\n+static void AddressUnser(benchmark::Bench& bench, int add_to_version)\r\n+{\r\n+    CreateAddresses();\r\n+\r\n+    CDataStream s_orig(SER_NETWORK, PROTOCOL_VERSION | add_to_version);\r\n+    s_orig << g_sources;\r\n+\r\n+    bench.run([&] {\r\n+        CDataStream s(s_orig);\r\n+\r\n+        std::vector<CAddress> unserialized;\r\n+        s >> unserialized;\r\n+\r\n+        assert(s.empty());\r\n+    });\r\n+}\r\n+\r\n+static void AddressUnserV1(benchmark::Bench& bench)\r\n+{\r\n+    AddressUnser(bench, 0);\r\n+}\r\n+\r\n+static void AddressUnserV2(benchmark::Bench& bench)\r\n+{\r\n+    AddressUnser(bench, ADDRV2_FORMAT);\r\n+}\r\n+\r\n+BENCHMARK(AddressUnserV1);\r\n+BENCHMARK(AddressUnserV2);\r\n```\r\n</details>\r\n\r\nResults (one operation is \"unserialize 1000 addresses\"):\r\n```\r\n$ ./src/bench/bench_bitcoin -filter=\"AddressUnser.*\"\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           39,362.00 |           25,405.21 |    0.3% |      0.00 | `AddressUnserV1`\r\n|           49,457.00 |           20,219.58 |    0.0% |      0.00 | `AddressUnserV2`\r\n```\r\n\r\nUnserialize in V2 is expected to be somewhat slower and it is indeed. Looks ok to me.",
      "created_at" : "2020-09-07T13:38:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-688332202",
      "id" : 688332202,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODMzMjIwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-07T13:38:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688332202",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased now that the SHA3_256 implementation is in `master`.",
      "created_at" : "2020-09-10T18:45:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-690614950",
      "id" : 690614950,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MDYxNDk1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-10T18:45:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690614950",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486669845"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486669845"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just a nit, feel free to leave as is.\r\n\r\nNo real reason why this needs to be in netaddress.h or restricted to `CNetAddr`. Maybe it can move to one of the util/*.h files or even a new one. It's probably useful elsewhere.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-10T22:32:17Z",
      "diff_hunk" : "@@ -192,6 +192,17 @@ class CNetAddr\n         friend class CSubNet;\n \n     private:\n+        /**\n+         * Check whether a container begins with the given prefix.\n+         */\n+        template <typename T1, size_t PREFIX_LEN>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486669845",
      "id" : 486669845,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2OTg0NQ==",
      "original_commit_id" : "e57bedde3199a36ef558e1b8bd6e9278ad9b72ec",
      "original_line" : 198,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486355793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486669845",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486671228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486671228"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's not technically true; EOF can be reached in ADDRv1 mode.\r\n\r\nI don't think this comment adds much; every deserializer can always fail.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-10T22:35:57Z",
      "diff_hunk" : "@@ -177,16 +188,27 @@ class CNetAddr\n         template <typename Stream>\n         void Serialize(Stream& s) const\n         {\n-            SerializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                SerializeV2Stream(s);\n+            } else {\n+                SerializeV1Stream(s);\n+            }\n         }\n \n         /**\n          * Unserialize from a stream.\n+         * @throws std::ios_base::failure if the stream is in ADDRv2 format and\n+         * the data is invalid and cannot be unserialized; ADDRv1 format",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486671228",
      "id" : 486671228,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3MTIyOA==",
      "original_commit_id" : "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "original_line" : 201,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486355793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486671228",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486672929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486672929"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: you're using both \"Bip155\" and \"BIP155\" is this commit. I prefer \"BIP155\".",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-10T22:40:32Z",
      "diff_hunk" : "@@ -203,11 +225,41 @@ class CNetAddr\n                    std::equal(std::begin(prefix), std::end(prefix), std::begin(obj));\n         }\n \n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum Bip155Network : uint8_t {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486672929",
      "id" : 486672929,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3MjkyOQ==",
      "original_commit_id" : "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "original_line" : 231,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486355793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486672929",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486674423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486674423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Comment is wrong here, I think (I2P, not TORv2).",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-10T22:44:46Z",
      "diff_hunk" : "@@ -400,6 +400,70 @@ BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n     BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n     s.clear();\n \n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486674423",
      "id" : 486674423,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3NDQyMw==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 438,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486355793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486674423",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486952064"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952064"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9eb5b089 s/I2P/CJDNS/",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T10:19:09Z",
      "diff_hunk" : "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486952064",
      "id" : 486952064,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk1MjA2NA==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 448,
      "original_position" : 203,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486684814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952064",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486952355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952355"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9eb5b089 s/TORv2/CJDNS/",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T10:19:43Z",
      "diff_hunk" : "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)\n+                           \"10\"                               // address length\n+                           \"fc000001000200030004000500060007\" // address\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"fc00:1:2:3:4:5:6:7\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid CJDNS, with bogus length.\n+    s << MakeSpan(ParseHex(\"06\" // network type (TORv2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486952355",
      "id" : 486952355,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk1MjM1NQ==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 458,
      "original_position" : 213,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486684814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952355",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486961774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486961774"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it make sense to have `NET_ONION_V2` and `NET_ONION_V3`, with associated `IsOnionV2()` and `IsOnionV3()` bool helpers as subsets of `IsTor()/IsOnion()`?\r\n\r\nDoing so might also clean up `GetBip155Network()`, `SetIP()`, and `ToStringIP()` by removing the size checks to a better place.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T10:39:49Z",
      "diff_hunk" : "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486961774",
      "id" : 486961774,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk2MTc3NA==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 55,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 31,
      "pull_request_review_id" : 486684814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486961774",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486973456"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486973456"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Semi-related, at some point it might be helpful to be able to expose network types in `getpeerinfo`, rather than clients trying to guess like we currently have to do in #19643.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T11:06:05Z",
      "diff_hunk" : "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486973456",
      "id" : 486973456,
      "in_reply_to_id" : 486961774,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk3MzQ1Ng==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 55,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 31,
      "pull_request_review_id" : 486712046,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486973456",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486989858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486989858"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, I did consider making it more visible but refrained because of the wretched `std::array` argument (which was imposed by gcc 4.8) - I think it is not very friendly like this.\r\n\r\nMoved now to `util/string.h` since you mention this. Once support for gcc 4.8 is dropped we can improve it to take some more generic argument.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T11:43:01Z",
      "diff_hunk" : "@@ -192,6 +192,17 @@ class CNetAddr\n         friend class CSubNet;\n \n     private:\n+        /**\n+         * Check whether a container begins with the given prefix.\n+         */\n+        template <typename T1, size_t PREFIX_LEN>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486989858",
      "id" : 486989858,
      "in_reply_to_id" : 486669845,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk4OTg1OA==",
      "original_commit_id" : "e57bedde3199a36ef558e1b8bd6e9278ad9b72ec",
      "original_line" : 198,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486732794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486989858",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486992188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486992188"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to \"BIP155\", that way its also more consistent with the rest of the code.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T11:48:15Z",
      "diff_hunk" : "@@ -203,11 +225,41 @@ class CNetAddr\n                    std::equal(std::begin(prefix), std::end(prefix), std::begin(obj));\n         }\n \n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum Bip155Network : uint8_t {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486992188",
      "id" : 486992188,
      "in_reply_to_id" : 486672929,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MjE4OA==",
      "original_commit_id" : "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "original_line" : 231,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486735839,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486992188",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486993463"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993463"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T11:51:06Z",
      "diff_hunk" : "@@ -400,6 +400,70 @@ BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n     BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n     s.clear();\n \n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486993463",
      "id" : 486993463,
      "in_reply_to_id" : 486674423,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MzQ2Mw==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 438,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486737526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993463",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486993794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993794"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T11:51:55Z",
      "diff_hunk" : "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486993794",
      "id" : 486993794,
      "in_reply_to_id" : 486952064,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5Mzc5NA==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 448,
      "original_position" : 203,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486737951,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993794",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486994154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486994154"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T11:52:48Z",
      "diff_hunk" : "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)\n+                           \"10\"                               // address length\n+                           \"fc000001000200030004000500060007\" // address\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"fc00:1:2:3:4:5:6:7\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid CJDNS, with bogus length.\n+    s << MakeSpan(ParseHex(\"06\" // network type (TORv2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486994154",
      "id" : 486994154,
      "in_reply_to_id" : 486952355,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NDE1NA==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 458,
      "original_position" : 213,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486738417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486994154",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486997592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486997592"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Removed.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T12:00:08Z",
      "diff_hunk" : "@@ -177,16 +188,27 @@ class CNetAddr\n         template <typename Stream>\n         void Serialize(Stream& s) const\n         {\n-            SerializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                SerializeV2Stream(s);\n+            } else {\n+                SerializeV1Stream(s);\n+            }\n         }\n \n         /**\n          * Unserialize from a stream.\n+         * @throws std::ios_base::failure if the stream is in ADDRv2 format and\n+         * the data is invalid and cannot be unserialized; ADDRv1 format",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486997592",
      "id" : 486997592,
      "in_reply_to_id" : 486671228,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NzU5Mg==",
      "original_commit_id" : "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "original_line" : 201,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486742903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486997592",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487054042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487054042"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I did consider this but did not make them separate because:\r\n\r\n* Intrinsically, TORv2 and TORv3 addresses belong to the same network - the TOR network. It is more like odd and even IPv4 addresses, not so much as IPv4 and IPv6 addresses.\r\n* Given that TORv2 is going to be dropped soon, we would have to clean up our code and remove any remains from it which would be easier if this is kept just as `NET_ONION`.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T13:43:40Z",
      "diff_hunk" : "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487054042",
      "id" : 487054042,
      "in_reply_to_id" : 486961774,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1NDA0Mg==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 55,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 31,
      "pull_request_review_id" : 486818128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T13:43:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487054042",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed review suggestions and added TORv3 address parsing with some tests.",
      "created_at" : "2020-09-11T13:44:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691104139",
      "id" : 691104139,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTEwNDEzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-11T13:44:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691104139",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487203263"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487203263"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I considered suggesting this too, but outside of netaddress.*, the distinction probably doesn't matter (e.g. the decision whether to use a proxy and which one doesn't need to distinguish between TorV2 and TorV3), so this approach allows keeping the changes more local.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T17:59:44Z",
      "diff_hunk" : "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487203263",
      "id" : 487203263,
      "in_reply_to_id" : 486961774,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIwMzI2Mw==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 55,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 31,
      "pull_request_review_id" : 487012496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T17:59:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487203263",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As a test I created a TORv3 bitcoin service, and connected to it with this branch:\r\n\r\n```\r\n\r\n$ ./src/bitcoin-cli getpeerinfo\r\n[\r\n  {\r\n    \"id\": 1,\r\n    \"addr\": \"kpgvmscirrdqpekbqjsvw5teanhatztpp2gl6eee4zkowvwfxwenqaid.onion\",\r\n```\r\n\r\n",
      "created_at" : "2020-09-11T18:01:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691235868",
      "id" : 691235868,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTIzNTg2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-11T18:01:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691235868",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487219577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487219577"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why do this for NET_INTERNAL, but not for IPv4 or TORv2?",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T18:32:36Z",
      "diff_hunk" : "@@ -272,6 +341,48 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                // Recognize NET_INTERNAL embedded in IPv6.\n+                if (m_net == NET_IPV6 && HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487219577",
      "id" : 487219577,
      "line" : 394,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxOTU3Nw==",
      "original_commit_id" : "3472f6444205edf15f00ecc31f5b8749110fecaa",
      "original_line" : 367,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 227,
      "pull_request_review_id" : 487033621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T18:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487219577",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Connected to @sipa from my tor v2 address.\r\n\r\n```\r\n2020-09-11T18:44:21Z New outbound peer connected: version: 70016, blocks=647799, peer=5, peeraddr=kpgvmscirrdqpekbqjsvw5teanhatztpp2gl6eee4zkowvwfxwenqaid.onion:8333 (full-relay)\r\n```\r\ngetpeerinfo:\r\n```\r\n  {\r\n    \"id\": 5,\r\n    \"addr\": \"kpgvmscirrdqpekbqjsvw5teanhatztpp2gl6eee4zkowvwfxwenqaid.onion\",\r\n    \"addrbind\": \"127.0.0.1:36454\",\r\n    \"services\": \"0000000000000409\",\r\n```",
      "created_at" : "2020-09-11T18:48:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691256306",
      "id" : 691256306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTI1NjMwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-11T18:48:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691256306",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487246685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487246685"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Because IPv4 and TORv2 have their own BIP155 network ids and should not be disguised as IPv6.\r\n\r\n`NET_INTERNAL` is not gossiped, but addrman may keep such addresses as \"source\" of other addresses and thus end up (un)serializing them when saving its database to disk in a V2 stream (not in this PR).\r\n\r\nIn this PR we may end up having some TORv3 addresses in addrman and try to serialize them in V1 stream. They will go as 16 zeroes.",
      "commit_id" : "e55631ecb166fad7ce4f71fbbb4a76422c4daf37",
      "created_at" : "2020-09-11T19:26:34Z",
      "diff_hunk" : "@@ -272,6 +341,48 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                // Recognize NET_INTERNAL embedded in IPv6.\n+                if (m_net == NET_IPV6 && HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487246685",
      "id" : 487246685,
      "in_reply_to_id" : 487219577,
      "line" : 394,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI0NjY4NQ==",
      "original_commit_id" : "3472f6444205edf15f00ecc31f5b8749110fecaa",
      "original_line" : 367,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 227,
      "pull_request_review_id" : 487068302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-11T19:26:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487246685",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
