[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19866 (RFC: eBPF Linux tracepoints by jb55)\n* #19677 (Switch BlockMap to use an unordered_set under the hood by JeremyRubin)\n* #19556 (Remove mempool global by MarcoFalke)\n* #19498 (Tidy up ProcessOrphanTx by jnewbery)\n* #10443 (Add fee_est tool for debugging fee estimation code by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-09-04T01:57:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19865#issuecomment-686854361",
      "id" : 686854361,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19865",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4Njg1NDM2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-04T08:27:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686854361",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "-0.5 on concept, I don't think dropping the runtime checks has any advantage.\r\n\r\nFor approach, I think just doing `git grep -l AssertLockHeld src | grep -v 'sync.h$' | xargs sed -i '/^ *AssertLockHeld(.*);/d'` would be better. The current code has `AssertLockHeld` and `AssertLockNotHeld` behave in the same way (a runtime check that the mutex is held by this thread or not), which is worth preserving imo.\r\n\r\nThe updated docs in doc/developer-notes.md would also need updating if this change were to be merged.",
      "created_at" : "2020-09-04T03:28:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19865#issuecomment-686879830",
      "id" : 686879830,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19865",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4Njg3OTgzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-04T03:28:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686879830",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I agree with @ajtowns' [comment](https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483287210):\r\n> We have three types of assertions related for locking:\r\n> \r\n>  - marking a function as `EXCLUSIVE_LOCKS_REQUIRED` has a compile time check with clang that the caller has already obtained the lock\r\n> \r\n>  - declaring a `LockAssertion` instance overrides the clang compile time checks by saying that we've already somehow acquired the lock in a way that we can't prove via clang thread safety annotations. This is useful for lambda functions (which could be annotated) that are called from some generic dispatcher like `ForEach` (that can't be annotated).\r\n> \r\n>  - adding a call to `AssertLockHeld` does a runtime check if DEBUG_LOCKORDER is enabled. it's annotated with EXCLUSIVE_LOCKS_REQUIRED so is redundant with the compile time checks, but the compile time checks aren't available outside of clang. it's automatically called from LockAssertion to ensure that the compile time checks aren't overridden incorrectly.\r\n> \r\n> \r\n> As a result:\r\n> \r\n>  - using AssertLockHeld everywhere remains fine, and no longer needlessly disables the compile time checks\r\n> \r\n>  - LockAssertion should only be used very rarely -- and in fact it's only used in net_processing in some ForEach/ForEachNode functions.\r\n\r\nProbably, `AssertLockHeld` deserves a better name, but its functionality and usage are ok.\r\n\r\n`EXCLUSIVE_LOCKS_REQUIRED` is used in a header file. If a function definition is placed in a `*.cpp` file, using `AssertLockHeld` has the following benefits (besides a run time check):\r\n- it shows to a code reader the expected state of lock without referencing to a header file\r\n- it will warn about missed proper `EXCLUSIVE_LOCKS_REQUIRED` annotation\r\n\r\n`AssertLockHeld` is a great tool to transit from `RecursiveMutex` to `Mutex` in a safe and proven manner. See: #19303, #19833, #19854.\r\n\r\nConcept NACK.",
      "created_at" : "2020-09-04T08:02:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19865#issuecomment-686986462",
      "id" : 686986462,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19865",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4Njk4NjQ2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-04T08:02:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686986462",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
