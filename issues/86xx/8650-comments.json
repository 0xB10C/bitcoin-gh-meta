[
   {
      "body" : "Sounds impressive.\r\n\r\nHere are the important definitions (this PRs diff): https://github.com/bitcoin/bitcoin/pull/8650/files#diff-4a0cb5ad5e93d187a1b065a99bbae143R17\r\n\r\nDocumentation: http://www.boost.org/doc/libs/1_34_0/libs/test/doc/components/test_tools/reference/BOOST_CHECK_MESSAGE.html\r\n\r\nConcept ACK",
      "created_at" : "2016-09-02T06:39:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8650#issuecomment-244295456",
      "id" : 244295456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8650",
      "updated_at" : "2016-09-02T06:39:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/244295456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Concept ACK. After:\r\n```bash\r\ngit diff HEAD~1 --name-only | xargs sed -i \"s/FAST_CHECK/BOOST_CHECK/g\"\r\n```\r\nThere is a remaining diff in `test_bitcoin.h`:\r\n```diff\r\n+#define BOOST_CHECK(x) if (!(x)) { BOOST_CHECK_MESSAGE(false, #x); }\r\n+#define BOOST_CHECK_EQUAL(x, y) if ((x)!=(y)) { BOOST_CHECK_MESSAGE(false, \"(\" #x \") != (\" #y \")\"); }\r\n+#define BOOST_CHECK_THROW(expr, ex) try { expr; BOOST_CHECK_MESSAGE(false, \"( \" #expr \" ) did not throw ( \" #ex \" )\"); } catch( ex ) { }\r\n+#define BOOST_CHECK_NO_THROW(expr) try { expr;  } catch( ... ) {BOOST_CHECK_MESSAGE(false, \"( \" #expr \" ) threw exception\"); }\r\n+#define BOOST_CHECK_EXCEPTION(expr, ex, pred) try { expr; BOOST_CHECK_MESSAGE(false, \"( \" #expr \" ) did not throw ( \" #ex \" )\"); } catch( ex& a ) { if (!pred(a)) BOOST_CHECK_MESSAGE(false, \"( \" #expr \" ) did not throw ( \" #ex \" ) under ( \" #pred \" )\" ); }\r\n+#define BOOST_CHECK_EQUAL_COLLECTIONS(l, r, l1, r1) BOOST_CHECK_EQUAL_COLLECTIONS(l, r, l1, r1) \r\n+\r\n```\r\n~~Any specific reason for (re-)defining these?~~\r\n\r\nOh never mind - these are replaced of course @jonasschnelli has the right definitions. So you define custom testing macros, right.",
      "created_at" : "2016-09-02T08:05:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8650#issuecomment-244310109",
      "id" : 244310109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8650",
      "updated_at" : "2016-09-02T08:50:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/244310109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Q: What functionality do we lose here, apart from being able to log successful tests (which is arguably unnecessary)? \r\nFor example I vaguely remember that the BOOST_CHECK_EQUAL does an attempt to print the values, not just the stringified form of the input arguments.\r\n\r\nAt some point we likely want to get rid of boost::test completely. as we are trying to eventually remove the dependency on boost, so this is a step in the right direction.",
      "created_at" : "2016-09-02T08:54:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8650#issuecomment-244320402",
      "id" : 244320402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8650",
      "updated_at" : "2016-09-02T08:59:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/244320402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj I may be able to make it completely compatible minus the succeeding tests for each macro. You are correct that boost_check_equal does that; this is part of why I did not redefine the container equal one.\r\n\r\nWhat I'm unsure of is how that affects licensing given those would be a derivative work I believe -- perhaps I could break out my macros into a sub-library and keep it boost licensed?",
      "created_at" : "2016-09-02T17:59:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8650#issuecomment-244445812",
      "id" : 244445812,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8650",
      "updated_at" : "2016-09-02T17:59:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/244445812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   }
]
